// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: pusoy.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Texas.Protocol {

  /// <summary>Holder for reflection information generated from pusoy.proto</summary>
  public static partial class PusoyReflection {

    #region Descriptor
    /// <summary>File descriptor for pusoy.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PusoyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtwdXNveS5wcm90bxoOcHJlX2Jhc2UucHJvdG8aCmJhc2UucHJvdG8aCnBp",
            "bmUucHJvdG8aDmNhbGx0aW1lLnByb3RvGg9wcmVfYmFzZTEucHJvdG8ingIK",
            "EFB1c295UmF0ZVNldHRpbmcSHQoQbm9ybWFsX2hhbmRfcmF0ZRgBIAEoBUgA",
            "iAEBEh4KEW5hdHVyYWxfaGFuZF9yYXRlGAIgASgFSAGIAQESHAoPY3JhY2tf",
            "aGFuZF9yYXRlGAMgASgFSAKIAQESIgoVd2lubmVyX3Rha2VzX2FsbF9yYXRl",
            "GAQgASgFSAOIAQESHAoPcHVzb3lfaGFuZF9yYXRlGAUgASgFSASIAQFCEwoR",
            "X25vcm1hbF9oYW5kX3JhdGVCFAoSX25hdHVyYWxfaGFuZF9yYXRlQhIKEF9j",
            "cmFja19oYW5kX3JhdGVCGAoWX3dpbm5lcl90YWtlc19hbGxfcmF0ZUISChBf",
            "cHVzb3lfaGFuZF9yYXRlIpMRCg1QdXNveVJvb21JbmZvEhYKCXJvb21fbmFt",
            "ZRgBIAEoCUgAiAEBEhIKBWJsaW5kGAIgASgDSAGIAQESFgoJbWluX2J1eWlu",
            "GAMgASgDSAKIAQESFgoJbWF4X2J1eWluGAQgASgDSAOIAQESFgoJbWluX3N0",
            "YWNrGAUgASgDSASIAQESFQoIZmVlcG9pbnQYBiABKAVIBYgBARITCgZmZWVj",
            "YXAYByABKAVIBogBARIcCg9jcmVhdG9yX3VzZXJfaWQYCCABKANIB4gBARIT",
            "CgZjbHViaWQYCSABKAlICIgBARIVCghsZWFndWVpZBgKIAEoBUgJiAEBEhsK",
            "DnN1cGVyX2xlYWd1ZWlkGAsgASgFSAqIAQESHgoRc3VwZXJfbGVhZ3VlX3R5",
            "cGUYDCABKAVIC4gBARIXCgpvd25lcl9pY29uGA0gASgJSAyIAQESFwoKb3du",
            "ZXJfbmFtZRgOIAEoCUgNiAEBEhQKB293bmVyaWQYDyABKANIDogBARIcCg9v",
            "d25lcl92aXBfbGV2ZWwYECABKA1ID4gBARITCgZyZWdpb24YESABKAVIEIgB",
            "ARIVCghwbGF0Zm9ybRgSIAEoCUgRiAEBEhYKCWNsdWJfbmFtZRgTIAEoCUgS",
            "iAEBEhkKDGNsdWJfb3duZXJpZBgUIAEoA0gTiAEBEhYKCWNsdWJfaWNvbhgV",
            "IAEoCUgUiAEBEhsKDm9wZXJhdGlvbl90aW1lGBYgASgFSBWIAQESFgoJcm9v",
            "bV90aW1lGBcgASgFSBaIAQESFQoIc2VhdF9udW0YGCABKAVIF4gBARIXCgph",
            "dXRvX3N0YXJ0GBkgASgFSBiIAQESIQoJcm9vbV90eXBlGBogASgOMgkuUm9v",
            "bVR5cGVIGYgBARIhCglyb29tX21vZGUYGyABKA4yCS5Sb29tTW9kZUgaiAEB",
            "EiEKCWdhbWVfbW9kZRgcIAEoDjIJLkdhbWVNb2RlSBuIAQESFQoIdGltZXpv",
            "bmUYHSABKAVIHIgBARITCgZyb29taWQYHiABKAVIHYgBARIVCghvZmZpY2lh",
            "bBgfIAEoCEgeiAEBEhMKBnBhc3N3ZBggIAEoCUgfiAEBEiQKF2lzX2F1dG9f",
            "ZGVsYXlfcm9vbV9vdmVyGCEgASgISCCIAQESJwoaYXV0b19kZWxheV9yb29t",
            "X292ZXJfdGltZXMYIiABKAVIIYgBARIgChNpc19hdXRvX2NyZWF0ZV9yb29t",
            "GCMgASgISCKIAQESFQoIbW9kdWxlaWQYJCABKANII4gBARIXCgptdWx0aV9v",
            "cGlkGCUgASgJSCSIAQESEwoGdGVtcGlkGCYgASgJSCWIAQESFgoJZ3BzX2xp",
            "bWl0GCcgASgISCaIAQESFQoIaXBfbGltaXQYKCABKAhIJ4gBARIbCg5mb3Ji",
            "aWRkZW5fY2hhdBgpIAEoCEgoiAEBEhkKDHBhc3N3ZF9saW1pdBgqIAEoCEgp",
            "iAEBEhcKCmlzX2NhcHRjaGEYKyABKAhIKogBARIWCglpc19iYW5fcGMYLCAB",
            "KAhIK4gBARIaCg1pc19jaGVja19tYWlsGC0gASgISCyIAQESHwoSZ3BzX2Rp",
            "c3RhbmNlX2xpbWl0GC4gASgFSC2IAQESLAoMcmF0ZV9zZXR0aW5nGC8gASgL",
            "MhEuUHVzb3lSYXRlU2V0dGluZ0guiAEBEhoKDWNyZWF0ZV9jbHViaWQYMCAB",
            "KAVIL4gBARIgChNmb3JiaWRkZW5fY2hhdF9tb2RlGDEgASgFSDCIAQESGQoM",
            "cm9vbV92ZXJzaW9uGDIgASgFSDGIAQESHQoQY2FsbHRpbWVfbWludXRlcxgz",
            "IAEoBUgyiAEBQgwKCl9yb29tX25hbWVCCAoGX2JsaW5kQgwKCl9taW5fYnV5",
            "aW5CDAoKX21heF9idXlpbkIMCgpfbWluX3N0YWNrQgsKCV9mZWVwb2ludEIJ",
            "CgdfZmVlY2FwQhIKEF9jcmVhdG9yX3VzZXJfaWRCCQoHX2NsdWJpZEILCglf",
            "bGVhZ3VlaWRCEQoPX3N1cGVyX2xlYWd1ZWlkQhQKEl9zdXBlcl9sZWFndWVf",
            "dHlwZUINCgtfb3duZXJfaWNvbkINCgtfb3duZXJfbmFtZUIKCghfb3duZXJp",
            "ZEISChBfb3duZXJfdmlwX2xldmVsQgkKB19yZWdpb25CCwoJX3BsYXRmb3Jt",
            "QgwKCl9jbHViX25hbWVCDwoNX2NsdWJfb3duZXJpZEIMCgpfY2x1Yl9pY29u",
            "QhEKD19vcGVyYXRpb25fdGltZUIMCgpfcm9vbV90aW1lQgsKCV9zZWF0X251",
            "bUINCgtfYXV0b19zdGFydEIMCgpfcm9vbV90eXBlQgwKCl9yb29tX21vZGVC",
            "DAoKX2dhbWVfbW9kZUILCglfdGltZXpvbmVCCQoHX3Jvb21pZEILCglfb2Zm",
            "aWNpYWxCCQoHX3Bhc3N3ZEIaChhfaXNfYXV0b19kZWxheV9yb29tX292ZXJC",
            "HQobX2F1dG9fZGVsYXlfcm9vbV9vdmVyX3RpbWVzQhYKFF9pc19hdXRvX2Ny",
            "ZWF0ZV9yb29tQgsKCV9tb2R1bGVpZEINCgtfbXVsdGlfb3BpZEIJCgdfdGVt",
            "cGlkQgwKCl9ncHNfbGltaXRCCwoJX2lwX2xpbWl0QhEKD19mb3JiaWRkZW5f",
            "Y2hhdEIPCg1fcGFzc3dkX2xpbWl0Qg0KC19pc19jYXB0Y2hhQgwKCl9pc19i",
            "YW5fcGNCEAoOX2lzX2NoZWNrX21haWxCFQoTX2dwc19kaXN0YW5jZV9saW1p",
            "dEIPCg1fcmF0ZV9zZXR0aW5nQhAKDl9jcmVhdGVfY2x1YmlkQhYKFF9mb3Ji",
            "aWRkZW5fY2hhdF9tb2RlQg8KDV9yb29tX3ZlcnNpb25CEwoRX2NhbGx0aW1l",
            "X21pbnV0ZXMiig0KEkNyZWF0ZVB1c295Um9vbVJFURIWCglyb29tX25hbWUY",
            "ASABKAlIAIgBARISCgVibGluZBgCIAEoA0gBiAEBEhYKCW1pbl9idXlpbhgD",
            "IAEoA0gCiAEBEhYKCW1heF9idXlpbhgEIAEoA0gDiAEBEhYKCW1pbl9zdGFj",
            "axgFIAEoA0gEiAEBEhUKCGZlZXBvaW50GAYgASgFSAWIAQESEwoGZmVlY2Fw",
            "GAcgASgFSAaIAQESHAoPY3JlYXRvcl91c2VyX2lkGAggASgDSAeIAQESEwoG",
            "Y2x1YmlkGAkgASgJSAiIAQESFQoIbGVhZ3VlaWQYCiABKAVICYgBARIbCg5z",
            "dXBlcl9sZWFndWVpZBgLIAEoBUgKiAEBEh4KEXN1cGVyX2xlYWd1ZV90eXBl",
            "GAwgASgFSAuIAQESGwoOb3BlcmF0aW9uX3RpbWUYDSABKAVIDIgBARIWCgly",
            "b29tX3RpbWUYDiABKAVIDYgBARIVCghzZWF0X251bRgPIAEoBUgOiAEBEhcK",
            "CmF1dG9fc3RhcnQYECABKAVID4gBARIhCglyb29tX3R5cGUYESABKA4yCS5S",
            "b29tVHlwZUgQiAEBEiEKCWdhbWVfbW9kZRgSIAEoDjIJLkdhbWVNb2RlSBGI",
            "AQESFQoIdGltZXpvbmUYEyABKAVIEogBARITCgZyb29taWQYFCABKAVIE4gB",
            "ARIbCg5kZXJpdmVkX3Jvb21pZBgVIAEoBUgUiAEBEiQKF2lzX2F1dG9fZGVs",
            "YXlfcm9vbV9vdmVyGBYgASgISBWIAQESJwoaYXV0b19kZWxheV9yb29tX292",
            "ZXJfdGltZXMYFyABKAVIFogBARIgChNpc19hdXRvX2NyZWF0ZV9yb29tGBgg",
            "ASgISBeIAQESFQoIbW9kdWxlaWQYGSABKANIGIgBARIXCgptdWx0aV9vcGlk",
            "GBogASgJSBmIAQESFAoHY2FuX3VzZRgbIAEoCEgaiAEBEhYKCWdwc19saW1p",
            "dBgcIAEoCEgbiAEBEhUKCGlwX2xpbWl0GB0gASgISByIAQESGwoOZm9yYmlk",
            "ZGVuX2NoYXQYHiABKAhIHYgBARIZCgxwYXNzd2RfbGltaXQYHyABKAhIHogB",
            "ARIXCgppc19jYXB0Y2hhGCAgASgISB+IAQESFgoJaXNfYmFuX3BjGCEgASgI",
            "SCCIAQESGgoNaXNfY2hlY2tfbWFpbBgiIAEoCEghiAEBEiwKDHJhdGVfc2V0",
            "dGluZxgjIAEoCzIRLlB1c295UmF0ZVNldHRpbmdIIogBARIgChNmb3JiaWRk",
            "ZW5fY2hhdF9tb2RlGCQgASgFSCOIAQESHQoQY2FsbHRpbWVfbWludXRlcxgl",
            "IAEoBUgkiAEBEhAKCGJhbl9jbHViGCYgAygFEhMKC2Jhbl9jb3VudHJ5GCcg",
            "AygJQgwKCl9yb29tX25hbWVCCAoGX2JsaW5kQgwKCl9taW5fYnV5aW5CDAoK",
            "X21heF9idXlpbkIMCgpfbWluX3N0YWNrQgsKCV9mZWVwb2ludEIJCgdfZmVl",
            "Y2FwQhIKEF9jcmVhdG9yX3VzZXJfaWRCCQoHX2NsdWJpZEILCglfbGVhZ3Vl",
            "aWRCEQoPX3N1cGVyX2xlYWd1ZWlkQhQKEl9zdXBlcl9sZWFndWVfdHlwZUIR",
            "Cg9fb3BlcmF0aW9uX3RpbWVCDAoKX3Jvb21fdGltZUILCglfc2VhdF9udW1C",
            "DQoLX2F1dG9fc3RhcnRCDAoKX3Jvb21fdHlwZUIMCgpfZ2FtZV9tb2RlQgsK",
            "CV90aW1lem9uZUIJCgdfcm9vbWlkQhEKD19kZXJpdmVkX3Jvb21pZEIaChhf",
            "aXNfYXV0b19kZWxheV9yb29tX292ZXJCHQobX2F1dG9fZGVsYXlfcm9vbV9v",
            "dmVyX3RpbWVzQhYKFF9pc19hdXRvX2NyZWF0ZV9yb29tQgsKCV9tb2R1bGVp",
            "ZEINCgtfbXVsdGlfb3BpZEIKCghfY2FuX3VzZUIMCgpfZ3BzX2xpbWl0QgsK",
            "CV9pcF9saW1pdEIRCg9fZm9yYmlkZGVuX2NoYXRCDwoNX3Bhc3N3ZF9saW1p",
            "dEINCgtfaXNfY2FwdGNoYUIMCgpfaXNfYmFuX3BjQhAKDl9pc19jaGVja19t",
            "YWlsQg8KDV9yYXRlX3NldHRpbmdCFgoUX2ZvcmJpZGRlbl9jaGF0X21vZGVC",
            "EwoRX2NhbGx0aW1lX21pbnV0ZXMiiAEKEkNyZWF0ZVB1c295Um9vbVJTUBIR",
            "CgRjb2RlGAEgASgFSACIAQESEwoGcmVhc29uGAIgASgJSAGIAQESJwoKcHVz",
            "b3lfaW5mbxgDIAEoCzIOLlB1c295Um9vbUluZm9IAogBAUIHCgVfY29kZUIJ",
            "CgdfcmVhc29uQg0KC19wdXNveV9pbmZvIiUKFFB1c295U3luY0hhbmRDYXJk",
            "UkVREg0KBWNhcmRzGAEgAygJIkEKFFB1c295U3luY0hhbmRDYXJkUlNQEhEK",
            "BGNvZGUYASABKAVIAIgBARINCgVjYXJkcxgCIAMoCUIHCgVfY29kZSKEAQoS",
            "U3dhcEhhbmRDYXJkUG9zUkVREhEKBGZyb20YASABKAVIAIgBARIPCgJ0bxgC",
            "IAEoBUgBiAEBEiEKFHN3YXBfbWlkZGxlX2FuZF9iYWNrGAMgASgISAKIAQFC",
            "BwoFX2Zyb21CBQoDX3RvQhcKFV9zd2FwX21pZGRsZV9hbmRfYmFjayKvAQoS",
            "U3dhcEhhbmRDYXJkUG9zUlNQEhEKBGNvZGUYASABKAVIAIgBARIRCgRmcm9t",
            "GAIgASgFSAGIAQESDwoCdG8YAyABKAVIAogBARIhChRzd2FwX21pZGRsZV9h",
            "bmRfYmFjaxgEIAEoCEgDiAEBEg0KBWNhcmRzGAUgAygJQgcKBV9jb2RlQgcK",
            "BV9mcm9tQgUKA190b0IXChVfc3dhcF9taWRkbGVfYW5kX2JhY2siaAoSU3dh",
            "cEhhbmRDYXJkUG9zQlJDEhEKBGZyb20YASABKAVIAIgBARIPCgJ0bxgCIAEo",
            "BUgBiAEBEhMKBnNlYXRpZBgDIAEoBUgCiAEBQgcKBV9mcm9tQgUKA190b0IJ",
            "Cgdfc2VhdGlkIiEKEFB1c295SGFuZENhcmRSU1ASDQoFY2FyZHMYASADKAki",
            "8wEKD1B1c295U2l0RG93blJFURITCgZzZWF0aWQYASABKAVIAIgBARIPCgJw",
            "YxgCIAEoCEgBiAEBEg8KAmlwGAMgASgJSAKIAQESFAoHZ3BzX2xvbhgEIAEo",
            "BUgDiAEBEhQKB2dwc19sYXQYBSABKAVIBIgBARIUCgdjaGFubmVsGAYgASgJ",
            "SAWIAQESGQoMaW52YWxpZF9tYWlsGAcgASgISAaIAQFCCQoHX3NlYXRpZEIF",
            "CgNfcGNCBQoDX2lwQgoKCF9ncHNfbG9uQgoKCF9ncHNfbGF0QgoKCF9jaGFu",
            "bmVsQg8KDV9pbnZhbGlkX21haWwiuQMKD1B1c295UGxheWVySW5mbxIRCgRu",
            "YW1lGAEgASgJSACIAQESFQoIaWNvbl91cmwYAiABKAlIAYgBARIQCgN1aWQY",
            "AyABKANIAogBARITCgZjbHViaWQYBCABKAlIA4gBARIWCgljbHViX25hbWUY",
            "BSABKAlIBIgBARIWCgl2aXBfbGV2ZWwYBiABKAVIBYgBARISCgVsZXZlbBgH",
            "IAEoBUgGiAEBEhQKB2NvdW50cnkYCCABKAlIB4gBARIUCgdncHNfbG9uGAkg",
            "ASgFSAiIAQESFAoHZ3BzX2xhdBgKIAEoBUgJiAEBEhsKDndhaXRpbmdfc3Rh",
            "dHVzGAsgASgFSAqIAQESGgoNY2VydGlmaWNhdGlvbhgMIAEoBUgLiAEBQgcK",
            "BV9uYW1lQgsKCV9pY29uX3VybEIGCgRfdWlkQgkKB19jbHViaWRCDAoKX2Ns",
            "dWJfbmFtZUIMCgpfdmlwX2xldmVsQggKBl9sZXZlbEIKCghfY291bnRyeUIK",
            "CghfZ3BzX2xvbkIKCghfZ3BzX2xhdEIRCg9fd2FpdGluZ19zdGF0dXNCEAoO",
            "X2NlcnRpZmljYXRpb24i+QMKF1B1c295UGxheWVyR2FtaW5nU3RhdHVzEhIK",
            "BWNoaXBzGAEgASgDSACIAQESKgoKaGFuZF9jYXJkcxgCIAEoCzIRLlB1c295",
            "SGFuZENhcmRSU1BIAYgBARIdChBhcnJhbmdlbWVudF9kb25lGAMgASgISAKI",
            "AQESFwoKaXNfcGxheWluZxgEIAEoCEgDiAEBEhgKC2lzX3JlYnV5aW5nGAUg",
            "ASgISASIAQESGwoOZ2FtZV9sZWZ0X3RpbWUYBiABKAVIBYgBARIcCg9yZWJ1",
            "eV9sZWZ0X3RpbWUYByABKAVIBogBARITCgZwcm9maXQYCCABKANIB4gBARIk",
            "Chdpc19sZWF2aW5nX29uX25leHRfaGFuZBgJIAEoCEgIiAEBEikKDWNhbGx0",
            "aW1lX2luZm8YCiABKAsyDS5DYWxsVGltZUluZm9ICYgBAUIICgZfY2hpcHNC",
            "DQoLX2hhbmRfY2FyZHNCEwoRX2FycmFuZ2VtZW50X2RvbmVCDQoLX2lzX3Bs",
            "YXlpbmdCDgoMX2lzX3JlYnV5aW5nQhEKD19nYW1lX2xlZnRfdGltZUISChBf",
            "cmVidXlfbGVmdF90aW1lQgkKB19wcm9maXRCGgoYX2lzX2xlYXZpbmdfb25f",
            "bmV4dF9oYW5kQhAKDl9jYWxsdGltZV9pbmZvItsCCg9QdXNveVNlYXRTdGF0",
            "dXMSEwoGc2VhdGlkGAEgASgFSACIAQESGgoNc2VhdF9yZXNlcnZlZBgCIAEo",
            "CEgBiAEBEhUKCGlzX2VtcHR5GAMgASgISAKIAQESGwoOaXNfc2l0dGluZ19v",
            "dXQYBCABKAhIA4gBARIqCgtwbGF5ZXJfaW5mbxgFIAEoCzIQLlB1c295UGxh",
            "eWVySW5mb0gEiAEBEjQKDXBsYXllcl9zdGF0dXMYBiABKAsyGC5QdXNveVBs",
            "YXllckdhbWluZ1N0YXR1c0gFiAEBEhUKCGZyYW1lX2lkGAcgASgJSAaIAQFC",
            "CQoHX3NlYXRpZEIQCg5fc2VhdF9yZXNlcnZlZEILCglfaXNfZW1wdHlCEQoP",
            "X2lzX3NpdHRpbmdfb3V0Qg4KDF9wbGF5ZXJfaW5mb0IQCg5fcGxheWVyX3N0",
            "YXR1c0ILCglfZnJhbWVfaWQibQoPUHVzb3lTaXREb3duQlJDEhMKBnNlYXRp",
            "ZBgBIAEoBUgAiAEBEioKC3NlYXRfc3RhdHVzGAIgASgLMhAuUHVzb3lTZWF0",
            "U3RhdHVzSAGIAQFCCQoHX3NlYXRpZEIOCgxfc2VhdF9zdGF0dXMiEQoPUHVz",
            "b3lTdGFuZFVwUkVRIi0KD1B1c295U3RhbmRVcFJTUBIRCgRjb2RlGAEgASgF",
            "SACIAQFCBwoFX2NvZGUiMQoPUHVzb3lTdGFuZFVwQlJDEhMKBnNlYXRpZBgB",
            "IAEoBUgAiAEBQgkKB19zZWF0aWQiWQoRUHVzb3lMZWF2ZUdhbWVSRVESEgoF",
            "bGVhdmUYASABKAhIAIgBARIXCgpsZWF2ZV90eXBlGAIgASgFSAGIAQFCCAoG",
            "X2xlYXZlQg0KC19sZWF2ZV90eXBlIk0KEVB1c295TGVhdmVHYW1lUlNQEhEK",
            "BGNvZGUYASABKAVIAIgBARISCgVsZWF2ZRgCIAEoCEgBiAEBQgcKBV9jb2Rl",
            "QggKBl9sZWF2ZSJNChFQdXNveUxlYXZlR2FtZUJSQxITCgZzZWF0aWQYASAB",
            "KAVIAIgBARIQCgN1aWQYAiABKANIAYgBAUIJCgdfc2VhdGlkQgYKBF91aWQi",
            "RwoaUHVzb3lTZXRBcnJhbmdlbWVudERvbmVSRVESEQoEZG9uZRgBIAEoCEgA",
            "iAEBEg0KBWNhcmRzGAIgAygJQgcKBV9kb25lImMKGlB1c295U2V0QXJyYW5n",
            "ZW1lbnREb25lUlNQEhEKBGNvZGUYASABKAVIAIgBARIRCgRkb25lGAIgASgI",
            "SAGIAQESDQoFY2FyZHMYAyADKAlCBwoFX2NvZGVCBwoFX2RvbmUicgoaUHVz",
            "b3lTZXRBcnJhbmdlbWVudERvbmVCUkMSEwoGc2VhdGlkGAEgASgFSACIAQES",
            "EAoDdWlkGAIgASgDSAGIAQESEQoEZG9uZRgDIAEoCEgCiAEBQgkKB19zZWF0",
            "aWRCBgoEX3VpZEIHCgVfZG9uZSI0ChRQdXNveVNldEdhbWVSZWFkeVJFURIS",
            "CgVyZWFkeRgBIAEoBUgAiAEBQggKBl9yZWFkeSIxChFQdXNveUNvdW50ZG93",
            "bkJSQxISCgVjb3VudBgBIAEoBUgAiAEBQggKBl9jb3VudCJ8ChFQdXNveUdh",
            "bWVTdGFydEJSQxIWCglsZWZ0X3RpbWUYASABKAVIAIgBARIUCgdnYW1lX2lk",
            "GAIgASgJSAGIAQESHwoFc2VhdHMYAyADKAsyEC5QdXNveVNlYXRTdGF0dXNC",
            "DAoKX2xlZnRfdGltZUIKCghfZ2FtZV9pZCJhChBQdXNveVJvb21PdmVyQlJD",
            "EhsKBnByb2ZpdBgBIAMoCzILLlByb2ZpdEluZm8SHAoPaXNfcm9vbV9zdGFy",
            "dGVkGAIgASgISACIAQFCEgoQX2lzX3Jvb21fc3RhcnRlZCKuAQoOUHVzb3lT",
            "Y29yZUluZm8SFwoKYmFzZV9zY29yZRgBIAEoBUgAiAEBEhcKCmNoaXBfc2Nv",
            "cmUYAiABKANIAYgBARIcCg9vcHBvbmVudF9zZWF0aWQYAyABKAVIAogBARIR",
            "CgR0eXBlGAQgASgFSAOIAQFCDQoLX2Jhc2Vfc2NvcmVCDQoLX2NoaXBfc2Nv",
            "cmVCEgoQX29wcG9uZW50X3NlYXRpZEIHCgVfdHlwZSLqAQoSUHVzb3lIYW5k",
            "U2NvcmVJbmZvEhMKBnNlYXRpZBgBIAEoBUgAiAEBEhAKA3VpZBgCIAEoA0gB",
            "iAEBEiUKDGZyb250X3Njb3JlcxgDIAMoCzIPLlB1c295U2NvcmVJbmZvEiMK",
            "Cm1pZF9zY29yZXMYBCADKAsyDy5QdXNveVNjb3JlSW5mbxIkCgtiYWNrX3Nj",
            "b3JlcxgFIAMoCzIPLlB1c295U2NvcmVJbmZvEhgKC3RvdGFsX3Njb3JlGAYg",
            "ASgDSAKIAQFCCQoHX3NlYXRpZEIGCgRfdWlkQg4KDF90b3RhbF9zY29yZSKp",
            "AgoSUHVzb3lHYW1lUmVzdWx0QlJDEh8KBXNlYXRzGAEgAygLMhAuUHVzb3lT",
            "ZWF0U3RhdHVzEioKDW5hdHVyYWxfaGFuZHMYAiADKAsyEy5QdXNveUhhbmRT",
            "Y29yZUluZm8SKgoNY3JhY2tlZF9oYW5kcxgDIAMoCzITLlB1c295SGFuZFNj",
            "b3JlSW5mbxIpCgxub3JtYWxfaGFuZHMYBCADKAsyEy5QdXNveUhhbmRTY29y",
            "ZUluZm8SKAoLcHVzb3lfaGFuZHMYBSADKAsyEy5QdXNveUhhbmRTY29yZUlu",
            "Zm8SMQoPd2lubmVyX3Rha2VfYWxsGAYgASgLMhMuUHVzb3lIYW5kU2NvcmVJ",
            "bmZvSACIAQFCEgoQX3dpbm5lcl90YWtlX2FsbCJTChNQdXNveVNpbXBsaWZp",
            "ZWRJbmZvEhMKBnNlYXRpZBgBIAEoBUgAiAEBEhIKBXNjb3JlGAIgASgDSAGI",
            "AQFCCQoHX3NlYXRpZEIICgZfc2NvcmUi7QgKGVB1c295U2ltcGxpZmllZEdh",
            "bWVSZXN1bHQSEAoDdWlkGAEgASgDSACIAQESEwoGc2VhdGlkGAIgASgFSAGI",
            "AQESEgoFY2hpcHMYAyABKANIAogBARINCgVjYXJkcxgEIAMoCRIlCgxmcm9u",
            "dF9zY29yZXMYBSADKAsyDy5QdXNveVNjb3JlSW5mbxIjCgptaWRfc2NvcmVz",
            "GAYgAygLMg8uUHVzb3lTY29yZUluZm8SJAoLYmFja19zY29yZXMYByADKAsy",
            "Dy5QdXNveVNjb3JlSW5mbxIXCgpiYWNrX3Njb3JlGAggASgDSAOIAQESFgoJ",
            "bWlkX3Njb3JlGAkgASgDSASIAQESGAoLZnJvbnRfc2NvcmUYCiABKANIBYgB",
            "ARIYCgt0b3RhbF9zY29yZRgLIAEoA0gGiAEBEhkKDHRvdGFsX3Byb2ZpdBgM",
            "IAEoA0gHiAEBEhEKBHJhbmsYDSABKAVICIgBARIXCgppc19jcmFja2VkGA4g",
            "ASgISAmIAQESGAoLY3JhY2tfc2NvcmUYDyABKANICogBARIhChRjcmFja19z",
            "Y29yZV9wZXJfc2VhdBgQIAEoA0gLiAEBEhcKCmlzX25hdHVyYWwYESABKAhI",
            "DIgBARIZCgxuYXR1cmFsX3R5cGUYEiABKAVIDYgBARIaCg1uYXR1cmFsX3Nj",
            "b3JlGBMgASgDSA6IAQESIwoWbmF0dXJhbF9zY29yZV9wZXJfc2VhdBgUIAEo",
            "A0gPiAEBEh8KEmlzX3dpbm5lcl90YWtlX2FsbBgVIAEoCEgQiAEBEiMKBXB1",
            "c295GBYgAygLMhQuUHVzb3lTaW1wbGlmaWVkSW5mbxIqCgtwbGF5ZXJfaW5m",
            "bxgXIAEoCzIQLlB1c295UGxheWVySW5mb0gRiAEBEh4KEWNyYWNrX3RvdGFs",
            "X3Njb3JlGBggASgDSBKIAQESHgoRcHVzb3lfdG90YWxfc2NvcmUYGSABKANI",
            "E4gBARIgChNuYXR1cmFsX3RvdGFsX3Njb3JlGBogASgDSBSIAQFCBgoEX3Vp",
            "ZEIJCgdfc2VhdGlkQggKBl9jaGlwc0INCgtfYmFja19zY29yZUIMCgpfbWlk",
            "X3Njb3JlQg4KDF9mcm9udF9zY29yZUIOCgxfdG90YWxfc2NvcmVCDwoNX3Rv",
            "dGFsX3Byb2ZpdEIHCgVfcmFua0INCgtfaXNfY3JhY2tlZEIOCgxfY3JhY2tf",
            "c2NvcmVCFwoVX2NyYWNrX3Njb3JlX3Blcl9zZWF0Qg0KC19pc19uYXR1cmFs",
            "Qg8KDV9uYXR1cmFsX3R5cGVCEAoOX25hdHVyYWxfc2NvcmVCGQoXX25hdHVy",
            "YWxfc2NvcmVfcGVyX3NlYXRCFQoTX2lzX3dpbm5lcl90YWtlX2FsbEIOCgxf",
            "cGxheWVyX2luZm9CFAoSX2NyYWNrX3RvdGFsX3Njb3JlQhQKEl9wdXNveV90",
            "b3RhbF9zY29yZUIWChRfbmF0dXJhbF90b3RhbF9zY29yZSK1AQocUHVzb3lT",
            "aW1wbGlmaWVkR2FtZVJlc3VsdEJSQxIvCgtnYW1lX3Jlc3VsdBgBIAMoCzIa",
            "LlB1c295U2ltcGxpZmllZEdhbWVSZXN1bHQSHAoPc3RhZ2VfbGVmdF90aW1l",
            "GAIgASgFSACIAQESHQoQZ2FtZXNldF9lbmRfdGltZRgDIAEoBUgBiAEBQhIK",
            "EF9zdGFnZV9sZWZ0X3RpbWVCEwoRX2dhbWVzZXRfZW5kX3RpbWUi5AEKElB1",
            "c295UGxheWluZ1N0YXR1cxISCgVzdGFnZRgBIAEoBUgAiAEBEhwKD3N0YWdl",
            "X2xlZnRfdGltZRgCIAEoBUgBiAEBEh8KBXNlYXRzGAMgAygLMhAuUHVzb3lT",
            "ZWF0U3RhdHVzEkIKFnNpbXBsaWZpZWRfZ2FtZV9yZXN1bHQYBCABKAsyHS5Q",
            "dXNveVNpbXBsaWZpZWRHYW1lUmVzdWx0QlJDSAKIAQFCCAoGX3N0YWdlQhIK",
            "EF9zdGFnZV9sZWZ0X3RpbWVCGQoXX3NpbXBsaWZpZWRfZ2FtZV9yZXN1bHQi",
            "zQEKD1B1c295Um9vbVN0YXR1cxIwCg5wbGF5aW5nX3N0YXR1cxgBIAEoCzIT",
            "LlB1c295UGxheWluZ1N0YXR1c0gAiAEBEhcKCmlzX3N0YXJ0ZWQYAiABKAhI",
            "AYgBARIbCg5yb29tX2xlZnRfdGltZRgDIAEoBUgCiAEBEh0KCW9ic2VydmVy",
            "cxgEIAMoCzIKLlVzZXJCcmllZkIRCg9fcGxheWluZ19zdGF0dXNCDQoLX2lz",
            "X3N0YXJ0ZWRCEQoPX3Jvb21fbGVmdF90aW1lIj4KElB1c295U2l0dGluZ091",
            "dFJFURIYCgtzaXR0aW5nX291dBgBIAEoCEgAiAEBQg4KDF9zaXR0aW5nX291",
            "dCJaChJQdXNveVNpdHRpbmdPdXRSU1ASGAoLc2l0dGluZ19vdXQYASABKAhI",
            "AIgBARIRCgRjb2RlGAIgASgFSAGIAQFCDgoMX3NpdHRpbmdfb3V0QgcKBV9j",
            "b2RlIl4KElB1c295U2l0dGluZ091dEJSQxITCgZzZWF0aWQYASABKAVIAIgB",
            "ARIYCgtzaXR0aW5nX291dBgCIAEoCEgBiAEBQgkKB19zZWF0aWRCDgoMX3Np",
            "dHRpbmdfb3V0IhMKEVB1c295U3RhcnRSb29tUkVRIi8KEVB1c295U3RhcnRS",
            "b29tUlNQEhEKBGNvZGUYASABKAVIAIgBAUIHCgVfY29kZSIUChJQdXNveVBy",
            "b2ZpdExpc3RSRVEiMQoSUHVzb3lQcm9maXRMaXN0UlNQEhsKBnByb2ZpdBgB",
            "IAMoCzILLlByb2ZpdEluZm8iFwoVUHVzb3lPYnNlcnZlcnNMaXN0UkVRIjYK",
            "FVB1c295T2JzZXJ2ZXJzTGlzdFJTUBIdCglvYnNlcnZlcnMYASADKAsyCi5V",
            "c2VyQnJpZWYiNwoVUHVzb3lFeGNoYW5nZUNoaXBzUkVREhMKBmFtb3VudBgB",
            "IAEoA0gAiAEBQgkKB19hbW91bnQiMwoVUHVzb3lFeGNoYW5nZUNoaXBzUlNQ",
            "EhEKBGNvZGUYASABKAVIAIgBAUIHCgVfY29kZSK3AQoTUHVzb3lSZWJ1eU5v",
            "dGlmeVJTUBIWCglsZWZ0X3RpbWUYASABKAVIAIgBARITCgZzZWF0aWQYAiAB",
            "KAVIAYgBARIXCgpzZWF0X2NoaXBzGAMgASgDSAKIAQESHQoQZXhjaGFuZ2lu",
            "Z19jaGlwcxgEIAEoA0gDiAEBQgwKCl9sZWZ0X3RpbWVCCQoHX3NlYXRpZEIN",
            "Cgtfc2VhdF9jaGlwc0ITChFfZXhjaGFuZ2luZ19jaGlwcyJVChVQdXNveUV4",
            "Y2hhbmdlQ2hpcHNCUkMSEwoGc2VhdGlkGAEgASgFSACIAQESEgoFY2hpcHMY",
            "AiABKANIAYgBAUIJCgdfc2VhdGlkQggKBl9jaGlwcyIUChJQdXNveUdhbWVJ",
            "RExpc3RSRVEiQwoSUHVzb3lHYW1lSURMaXN0UlNQEg8KB2dhbWVfaWQYASAD",
            "KAkSEgoFdG90YWwYAiABKAVIAIgBAUIICgZfdG90YWwiKQoWUHVzb3lHYW1l",
            "UmVjb3JkTGlzdFJFURIPCgdnYW1lX2lkGAEgAygJInwKD1B1c295R2FtZVJl",
            "Y29yZBI3CgtnYW1lX3Jlc3VsdBgBIAEoCzIdLlB1c295U2ltcGxpZmllZEdh",
            "bWVSZXN1bHRCUkNIAIgBARIUCgdnYW1lX2lkGAIgASgJSAGIAQFCDgoMX2dh",
            "bWVfcmVzdWx0QgoKCF9nYW1lX2lkIj8KFlB1c295R2FtZVJlY29yZExpc3RS",
            "U1ASJQoLZ2FtZV9yZWNvcmQYASADKAsyEC5QdXNveUdhbWVSZWNvcmQiXwob",
            "UHVzb3lSZXNlcnZlQ2FsbHRpbWVTZWF0UkVREhQKB3Jlc2VydmUYASABKAhI",
            "AIgBARITCgZzZWF0aWQYAiABKAVIAYgBAUIKCghfcmVzZXJ2ZUIJCgdfc2Vh",
            "dGlkIp8BChtQdXNveVJlc2VydmVDYWxsdGltZVNlYXRSU1ASEwoGc2VhdGlk",
            "GAEgASgFSACIAQESEQoEY29kZRgCIAEoBUgBiAEBEiYKGXJlbWFpbmVkX3Jl",
            "c2VydmF0aW9uX3RpbWUYAyABKAVIAogBAUIJCgdfc2VhdGlkQgcKBV9jb2Rl",
            "QhwKGl9yZW1haW5lZF9yZXNlcnZhdGlvbl90aW1lQhhaBS9nb3BiqgIOVGV4",
            "YXMuUHJvdG9jb2xiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Texas.Protocol.PreBaseReflection.Descriptor, global::Texas.Protocol.BaseReflection.Descriptor, global::Texas.Protocol.PineReflection.Descriptor, global::Texas.Protocol.CalltimeReflection.Descriptor, global::Texas.Protocol.PreBase1Reflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyRateSetting), global::Texas.Protocol.PusoyRateSetting.Parser, new[]{ "NormalHandRate", "NaturalHandRate", "CrackHandRate", "WinnerTakesAllRate", "PusoyHandRate" }, new[]{ "NormalHandRate", "NaturalHandRate", "CrackHandRate", "WinnerTakesAllRate", "PusoyHandRate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyRoomInfo), global::Texas.Protocol.PusoyRoomInfo.Parser, new[]{ "RoomName", "Blind", "MinBuyin", "MaxBuyin", "MinStack", "Feepoint", "Feecap", "CreatorUserId", "Clubid", "Leagueid", "SuperLeagueid", "SuperLeagueType", "OwnerIcon", "OwnerName", "Ownerid", "OwnerVipLevel", "Region", "Platform", "ClubName", "ClubOwnerid", "ClubIcon", "OperationTime", "RoomTime", "SeatNum", "AutoStart", "RoomType", "RoomMode", "GameMode", "Timezone", "Roomid", "Official", "Passwd", "IsAutoDelayRoomOver", "AutoDelayRoomOverTimes", "IsAutoCreateRoom", "Moduleid", "MultiOpid", "Tempid", "GpsLimit", "IpLimit", "ForbiddenChat", "PasswdLimit", "IsCaptcha", "IsBanPc", "IsCheckMail", "GpsDistanceLimit", "RateSetting", "CreateClubid", "ForbiddenChatMode", "RoomVersion", "CalltimeMinutes" }, new[]{ "RoomName", "Blind", "MinBuyin", "MaxBuyin", "MinStack", "Feepoint", "Feecap", "CreatorUserId", "Clubid", "Leagueid", "SuperLeagueid", "SuperLeagueType", "OwnerIcon", "OwnerName", "Ownerid", "OwnerVipLevel", "Region", "Platform", "ClubName", "ClubOwnerid", "ClubIcon", "OperationTime", "RoomTime", "SeatNum", "AutoStart", "RoomType", "RoomMode", "GameMode", "Timezone", "Roomid", "Official", "Passwd", "IsAutoDelayRoomOver", "AutoDelayRoomOverTimes", "IsAutoCreateRoom", "Moduleid", "MultiOpid", "Tempid", "GpsLimit", "IpLimit", "ForbiddenChat", "PasswdLimit", "IsCaptcha", "IsBanPc", "IsCheckMail", "GpsDistanceLimit", "RateSetting", "CreateClubid", "ForbiddenChatMode", "RoomVersion", "CalltimeMinutes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.CreatePusoyRoomREQ), global::Texas.Protocol.CreatePusoyRoomREQ.Parser, new[]{ "RoomName", "Blind", "MinBuyin", "MaxBuyin", "MinStack", "Feepoint", "Feecap", "CreatorUserId", "Clubid", "Leagueid", "SuperLeagueid", "SuperLeagueType", "OperationTime", "RoomTime", "SeatNum", "AutoStart", "RoomType", "GameMode", "Timezone", "Roomid", "DerivedRoomid", "IsAutoDelayRoomOver", "AutoDelayRoomOverTimes", "IsAutoCreateRoom", "Moduleid", "MultiOpid", "CanUse", "GpsLimit", "IpLimit", "ForbiddenChat", "PasswdLimit", "IsCaptcha", "IsBanPc", "IsCheckMail", "RateSetting", "ForbiddenChatMode", "CalltimeMinutes", "BanClub", "BanCountry" }, new[]{ "RoomName", "Blind", "MinBuyin", "MaxBuyin", "MinStack", "Feepoint", "Feecap", "CreatorUserId", "Clubid", "Leagueid", "SuperLeagueid", "SuperLeagueType", "OperationTime", "RoomTime", "SeatNum", "AutoStart", "RoomType", "GameMode", "Timezone", "Roomid", "DerivedRoomid", "IsAutoDelayRoomOver", "AutoDelayRoomOverTimes", "IsAutoCreateRoom", "Moduleid", "MultiOpid", "CanUse", "GpsLimit", "IpLimit", "ForbiddenChat", "PasswdLimit", "IsCaptcha", "IsBanPc", "IsCheckMail", "RateSetting", "ForbiddenChatMode", "CalltimeMinutes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.CreatePusoyRoomRSP), global::Texas.Protocol.CreatePusoyRoomRSP.Parser, new[]{ "Code", "Reason", "PusoyInfo" }, new[]{ "Code", "Reason", "PusoyInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoySyncHandCardREQ), global::Texas.Protocol.PusoySyncHandCardREQ.Parser, new[]{ "Cards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoySyncHandCardRSP), global::Texas.Protocol.PusoySyncHandCardRSP.Parser, new[]{ "Code", "Cards" }, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SwapHandCardPosREQ), global::Texas.Protocol.SwapHandCardPosREQ.Parser, new[]{ "From", "To", "SwapMiddleAndBack" }, new[]{ "From", "To", "SwapMiddleAndBack" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SwapHandCardPosRSP), global::Texas.Protocol.SwapHandCardPosRSP.Parser, new[]{ "Code", "From", "To", "SwapMiddleAndBack", "Cards" }, new[]{ "Code", "From", "To", "SwapMiddleAndBack" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SwapHandCardPosBRC), global::Texas.Protocol.SwapHandCardPosBRC.Parser, new[]{ "From", "To", "Seatid" }, new[]{ "From", "To", "Seatid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyHandCardRSP), global::Texas.Protocol.PusoyHandCardRSP.Parser, new[]{ "Cards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoySitDownREQ), global::Texas.Protocol.PusoySitDownREQ.Parser, new[]{ "Seatid", "Pc", "Ip", "GpsLon", "GpsLat", "Channel", "InvalidMail" }, new[]{ "Seatid", "Pc", "Ip", "GpsLon", "GpsLat", "Channel", "InvalidMail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyPlayerInfo), global::Texas.Protocol.PusoyPlayerInfo.Parser, new[]{ "Name", "IconUrl", "Uid", "Clubid", "ClubName", "VipLevel", "Level", "Country", "GpsLon", "GpsLat", "WaitingStatus", "Certification" }, new[]{ "Name", "IconUrl", "Uid", "Clubid", "ClubName", "VipLevel", "Level", "Country", "GpsLon", "GpsLat", "WaitingStatus", "Certification" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyPlayerGamingStatus), global::Texas.Protocol.PusoyPlayerGamingStatus.Parser, new[]{ "Chips", "HandCards", "ArrangementDone", "IsPlaying", "IsRebuying", "GameLeftTime", "RebuyLeftTime", "Profit", "IsLeavingOnNextHand", "CalltimeInfo" }, new[]{ "Chips", "HandCards", "ArrangementDone", "IsPlaying", "IsRebuying", "GameLeftTime", "RebuyLeftTime", "Profit", "IsLeavingOnNextHand", "CalltimeInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoySeatStatus), global::Texas.Protocol.PusoySeatStatus.Parser, new[]{ "Seatid", "SeatReserved", "IsEmpty", "IsSittingOut", "PlayerInfo", "PlayerStatus", "FrameId" }, new[]{ "Seatid", "SeatReserved", "IsEmpty", "IsSittingOut", "PlayerInfo", "PlayerStatus", "FrameId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoySitDownBRC), global::Texas.Protocol.PusoySitDownBRC.Parser, new[]{ "Seatid", "SeatStatus" }, new[]{ "Seatid", "SeatStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyStandUpREQ), global::Texas.Protocol.PusoyStandUpREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyStandUpRSP), global::Texas.Protocol.PusoyStandUpRSP.Parser, new[]{ "Code" }, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyStandUpBRC), global::Texas.Protocol.PusoyStandUpBRC.Parser, new[]{ "Seatid" }, new[]{ "Seatid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyLeaveGameREQ), global::Texas.Protocol.PusoyLeaveGameREQ.Parser, new[]{ "Leave", "LeaveType" }, new[]{ "Leave", "LeaveType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyLeaveGameRSP), global::Texas.Protocol.PusoyLeaveGameRSP.Parser, new[]{ "Code", "Leave" }, new[]{ "Code", "Leave" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyLeaveGameBRC), global::Texas.Protocol.PusoyLeaveGameBRC.Parser, new[]{ "Seatid", "Uid" }, new[]{ "Seatid", "Uid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoySetArrangementDoneREQ), global::Texas.Protocol.PusoySetArrangementDoneREQ.Parser, new[]{ "Done", "Cards" }, new[]{ "Done" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoySetArrangementDoneRSP), global::Texas.Protocol.PusoySetArrangementDoneRSP.Parser, new[]{ "Code", "Done", "Cards" }, new[]{ "Code", "Done" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoySetArrangementDoneBRC), global::Texas.Protocol.PusoySetArrangementDoneBRC.Parser, new[]{ "Seatid", "Uid", "Done" }, new[]{ "Seatid", "Uid", "Done" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoySetGameReadyREQ), global::Texas.Protocol.PusoySetGameReadyREQ.Parser, new[]{ "Ready" }, new[]{ "Ready" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyCountdownBRC), global::Texas.Protocol.PusoyCountdownBRC.Parser, new[]{ "Count" }, new[]{ "Count" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyGameStartBRC), global::Texas.Protocol.PusoyGameStartBRC.Parser, new[]{ "LeftTime", "GameId", "Seats" }, new[]{ "LeftTime", "GameId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyRoomOverBRC), global::Texas.Protocol.PusoyRoomOverBRC.Parser, new[]{ "Profit", "IsRoomStarted" }, new[]{ "IsRoomStarted" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyScoreInfo), global::Texas.Protocol.PusoyScoreInfo.Parser, new[]{ "BaseScore", "ChipScore", "OpponentSeatid", "Type" }, new[]{ "BaseScore", "ChipScore", "OpponentSeatid", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyHandScoreInfo), global::Texas.Protocol.PusoyHandScoreInfo.Parser, new[]{ "Seatid", "Uid", "FrontScores", "MidScores", "BackScores", "TotalScore" }, new[]{ "Seatid", "Uid", "TotalScore" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyGameResultBRC), global::Texas.Protocol.PusoyGameResultBRC.Parser, new[]{ "Seats", "NaturalHands", "CrackedHands", "NormalHands", "PusoyHands", "WinnerTakeAll" }, new[]{ "WinnerTakeAll" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoySimplifiedInfo), global::Texas.Protocol.PusoySimplifiedInfo.Parser, new[]{ "Seatid", "Score" }, new[]{ "Seatid", "Score" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoySimplifiedGameResult), global::Texas.Protocol.PusoySimplifiedGameResult.Parser, new[]{ "Uid", "Seatid", "Chips", "Cards", "FrontScores", "MidScores", "BackScores", "BackScore", "MidScore", "FrontScore", "TotalScore", "TotalProfit", "Rank", "IsCracked", "CrackScore", "CrackScorePerSeat", "IsNatural", "NaturalType", "NaturalScore", "NaturalScorePerSeat", "IsWinnerTakeAll", "Pusoy", "PlayerInfo", "CrackTotalScore", "PusoyTotalScore", "NaturalTotalScore" }, new[]{ "Uid", "Seatid", "Chips", "BackScore", "MidScore", "FrontScore", "TotalScore", "TotalProfit", "Rank", "IsCracked", "CrackScore", "CrackScorePerSeat", "IsNatural", "NaturalType", "NaturalScore", "NaturalScorePerSeat", "IsWinnerTakeAll", "PlayerInfo", "CrackTotalScore", "PusoyTotalScore", "NaturalTotalScore" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoySimplifiedGameResultBRC), global::Texas.Protocol.PusoySimplifiedGameResultBRC.Parser, new[]{ "GameResult", "StageLeftTime", "GamesetEndTime" }, new[]{ "StageLeftTime", "GamesetEndTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyPlayingStatus), global::Texas.Protocol.PusoyPlayingStatus.Parser, new[]{ "Stage", "StageLeftTime", "Seats", "SimplifiedGameResult" }, new[]{ "Stage", "StageLeftTime", "SimplifiedGameResult" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyRoomStatus), global::Texas.Protocol.PusoyRoomStatus.Parser, new[]{ "PlayingStatus", "IsStarted", "RoomLeftTime", "Observers" }, new[]{ "PlayingStatus", "IsStarted", "RoomLeftTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoySittingOutREQ), global::Texas.Protocol.PusoySittingOutREQ.Parser, new[]{ "SittingOut" }, new[]{ "SittingOut" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoySittingOutRSP), global::Texas.Protocol.PusoySittingOutRSP.Parser, new[]{ "SittingOut", "Code" }, new[]{ "SittingOut", "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoySittingOutBRC), global::Texas.Protocol.PusoySittingOutBRC.Parser, new[]{ "Seatid", "SittingOut" }, new[]{ "Seatid", "SittingOut" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyStartRoomREQ), global::Texas.Protocol.PusoyStartRoomREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyStartRoomRSP), global::Texas.Protocol.PusoyStartRoomRSP.Parser, new[]{ "Code" }, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyProfitListREQ), global::Texas.Protocol.PusoyProfitListREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyProfitListRSP), global::Texas.Protocol.PusoyProfitListRSP.Parser, new[]{ "Profit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyObserversListREQ), global::Texas.Protocol.PusoyObserversListREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyObserversListRSP), global::Texas.Protocol.PusoyObserversListRSP.Parser, new[]{ "Observers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyExchangeChipsREQ), global::Texas.Protocol.PusoyExchangeChipsREQ.Parser, new[]{ "Amount" }, new[]{ "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyExchangeChipsRSP), global::Texas.Protocol.PusoyExchangeChipsRSP.Parser, new[]{ "Code" }, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyRebuyNotifyRSP), global::Texas.Protocol.PusoyRebuyNotifyRSP.Parser, new[]{ "LeftTime", "Seatid", "SeatChips", "ExchangingChips" }, new[]{ "LeftTime", "Seatid", "SeatChips", "ExchangingChips" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyExchangeChipsBRC), global::Texas.Protocol.PusoyExchangeChipsBRC.Parser, new[]{ "Seatid", "Chips" }, new[]{ "Seatid", "Chips" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyGameIDListREQ), global::Texas.Protocol.PusoyGameIDListREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyGameIDListRSP), global::Texas.Protocol.PusoyGameIDListRSP.Parser, new[]{ "GameId", "Total" }, new[]{ "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyGameRecordListREQ), global::Texas.Protocol.PusoyGameRecordListREQ.Parser, new[]{ "GameId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyGameRecord), global::Texas.Protocol.PusoyGameRecord.Parser, new[]{ "GameResult", "GameId" }, new[]{ "GameResult", "GameId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyGameRecordListRSP), global::Texas.Protocol.PusoyGameRecordListRSP.Parser, new[]{ "GameRecord" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyReserveCalltimeSeatREQ), global::Texas.Protocol.PusoyReserveCalltimeSeatREQ.Parser, new[]{ "Reserve", "Seatid" }, new[]{ "Reserve", "Seatid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PusoyReserveCalltimeSeatRSP), global::Texas.Protocol.PusoyReserveCalltimeSeatRSP.Parser, new[]{ "Seatid", "Code", "RemainedReservationTime" }, new[]{ "Seatid", "Code", "RemainedReservationTime" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PusoyRateSetting : pb::IMessage<PusoyRateSetting>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyRateSetting> _parser = new pb::MessageParser<PusoyRateSetting>(() => new PusoyRateSetting());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyRateSetting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyRateSetting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyRateSetting(PusoyRateSetting other) : this() {
      _hasBits0 = other._hasBits0;
      normalHandRate_ = other.normalHandRate_;
      naturalHandRate_ = other.naturalHandRate_;
      crackHandRate_ = other.crackHandRate_;
      winnerTakesAllRate_ = other.winnerTakesAllRate_;
      pusoyHandRate_ = other.pusoyHandRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyRateSetting Clone() {
      return new PusoyRateSetting(this);
    }

    /// <summary>Field number for the "normal_hand_rate" field.</summary>
    public const int NormalHandRateFieldNumber = 1;
    private readonly static int NormalHandRateDefaultValue = 0;

    private int normalHandRate_;
    /// <summary>
    ///倍率設定
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NormalHandRate {
      get { if ((_hasBits0 & 1) != 0) { return normalHandRate_; } else { return NormalHandRateDefaultValue; } }
      set {
        _hasBits0 |= 1;
        normalHandRate_ = value;
      }
    }
    /// <summary>Gets whether the "normal_hand_rate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNormalHandRate {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "normal_hand_rate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNormalHandRate() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "natural_hand_rate" field.</summary>
    public const int NaturalHandRateFieldNumber = 2;
    private readonly static int NaturalHandRateDefaultValue = 0;

    private int naturalHandRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NaturalHandRate {
      get { if ((_hasBits0 & 2) != 0) { return naturalHandRate_; } else { return NaturalHandRateDefaultValue; } }
      set {
        _hasBits0 |= 2;
        naturalHandRate_ = value;
      }
    }
    /// <summary>Gets whether the "natural_hand_rate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNaturalHandRate {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "natural_hand_rate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNaturalHandRate() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "crack_hand_rate" field.</summary>
    public const int CrackHandRateFieldNumber = 3;
    private readonly static int CrackHandRateDefaultValue = 0;

    private int crackHandRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CrackHandRate {
      get { if ((_hasBits0 & 4) != 0) { return crackHandRate_; } else { return CrackHandRateDefaultValue; } }
      set {
        _hasBits0 |= 4;
        crackHandRate_ = value;
      }
    }
    /// <summary>Gets whether the "crack_hand_rate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCrackHandRate {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "crack_hand_rate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCrackHandRate() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "winner_takes_all_rate" field.</summary>
    public const int WinnerTakesAllRateFieldNumber = 4;
    private readonly static int WinnerTakesAllRateDefaultValue = 0;

    private int winnerTakesAllRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WinnerTakesAllRate {
      get { if ((_hasBits0 & 8) != 0) { return winnerTakesAllRate_; } else { return WinnerTakesAllRateDefaultValue; } }
      set {
        _hasBits0 |= 8;
        winnerTakesAllRate_ = value;
      }
    }
    /// <summary>Gets whether the "winner_takes_all_rate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWinnerTakesAllRate {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "winner_takes_all_rate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWinnerTakesAllRate() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "pusoy_hand_rate" field.</summary>
    public const int PusoyHandRateFieldNumber = 5;
    private readonly static int PusoyHandRateDefaultValue = 0;

    private int pusoyHandRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PusoyHandRate {
      get { if ((_hasBits0 & 16) != 0) { return pusoyHandRate_; } else { return PusoyHandRateDefaultValue; } }
      set {
        _hasBits0 |= 16;
        pusoyHandRate_ = value;
      }
    }
    /// <summary>Gets whether the "pusoy_hand_rate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPusoyHandRate {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "pusoy_hand_rate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPusoyHandRate() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyRateSetting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyRateSetting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NormalHandRate != other.NormalHandRate) return false;
      if (NaturalHandRate != other.NaturalHandRate) return false;
      if (CrackHandRate != other.CrackHandRate) return false;
      if (WinnerTakesAllRate != other.WinnerTakesAllRate) return false;
      if (PusoyHandRate != other.PusoyHandRate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasNormalHandRate) hash ^= NormalHandRate.GetHashCode();
      if (HasNaturalHandRate) hash ^= NaturalHandRate.GetHashCode();
      if (HasCrackHandRate) hash ^= CrackHandRate.GetHashCode();
      if (HasWinnerTakesAllRate) hash ^= WinnerTakesAllRate.GetHashCode();
      if (HasPusoyHandRate) hash ^= PusoyHandRate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasNormalHandRate) {
        output.WriteRawTag(8);
        output.WriteInt32(NormalHandRate);
      }
      if (HasNaturalHandRate) {
        output.WriteRawTag(16);
        output.WriteInt32(NaturalHandRate);
      }
      if (HasCrackHandRate) {
        output.WriteRawTag(24);
        output.WriteInt32(CrackHandRate);
      }
      if (HasWinnerTakesAllRate) {
        output.WriteRawTag(32);
        output.WriteInt32(WinnerTakesAllRate);
      }
      if (HasPusoyHandRate) {
        output.WriteRawTag(40);
        output.WriteInt32(PusoyHandRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasNormalHandRate) {
        output.WriteRawTag(8);
        output.WriteInt32(NormalHandRate);
      }
      if (HasNaturalHandRate) {
        output.WriteRawTag(16);
        output.WriteInt32(NaturalHandRate);
      }
      if (HasCrackHandRate) {
        output.WriteRawTag(24);
        output.WriteInt32(CrackHandRate);
      }
      if (HasWinnerTakesAllRate) {
        output.WriteRawTag(32);
        output.WriteInt32(WinnerTakesAllRate);
      }
      if (HasPusoyHandRate) {
        output.WriteRawTag(40);
        output.WriteInt32(PusoyHandRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasNormalHandRate) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NormalHandRate);
      }
      if (HasNaturalHandRate) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NaturalHandRate);
      }
      if (HasCrackHandRate) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CrackHandRate);
      }
      if (HasWinnerTakesAllRate) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WinnerTakesAllRate);
      }
      if (HasPusoyHandRate) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PusoyHandRate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyRateSetting other) {
      if (other == null) {
        return;
      }
      if (other.HasNormalHandRate) {
        NormalHandRate = other.NormalHandRate;
      }
      if (other.HasNaturalHandRate) {
        NaturalHandRate = other.NaturalHandRate;
      }
      if (other.HasCrackHandRate) {
        CrackHandRate = other.CrackHandRate;
      }
      if (other.HasWinnerTakesAllRate) {
        WinnerTakesAllRate = other.WinnerTakesAllRate;
      }
      if (other.HasPusoyHandRate) {
        PusoyHandRate = other.PusoyHandRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NormalHandRate = input.ReadInt32();
            break;
          }
          case 16: {
            NaturalHandRate = input.ReadInt32();
            break;
          }
          case 24: {
            CrackHandRate = input.ReadInt32();
            break;
          }
          case 32: {
            WinnerTakesAllRate = input.ReadInt32();
            break;
          }
          case 40: {
            PusoyHandRate = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NormalHandRate = input.ReadInt32();
            break;
          }
          case 16: {
            NaturalHandRate = input.ReadInt32();
            break;
          }
          case 24: {
            CrackHandRate = input.ReadInt32();
            break;
          }
          case 32: {
            WinnerTakesAllRate = input.ReadInt32();
            break;
          }
          case 40: {
            PusoyHandRate = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///房間詳細資訊，幾本上跟CreatePusoyRoomParam差不多，多了幾個欄位
  /// </summary>
  public sealed partial class PusoyRoomInfo : pb::IMessage<PusoyRoomInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyRoomInfo> _parser = new pb::MessageParser<PusoyRoomInfo>(() => new PusoyRoomInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    private int _hasBits1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyRoomInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyRoomInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyRoomInfo(PusoyRoomInfo other) : this() {
      _hasBits0 = other._hasBits0;
      _hasBits1 = other._hasBits1;
      roomName_ = other.roomName_;
      blind_ = other.blind_;
      minBuyin_ = other.minBuyin_;
      maxBuyin_ = other.maxBuyin_;
      minStack_ = other.minStack_;
      feepoint_ = other.feepoint_;
      feecap_ = other.feecap_;
      creatorUserId_ = other.creatorUserId_;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      superLeagueid_ = other.superLeagueid_;
      superLeagueType_ = other.superLeagueType_;
      ownerIcon_ = other.ownerIcon_;
      ownerName_ = other.ownerName_;
      ownerid_ = other.ownerid_;
      ownerVipLevel_ = other.ownerVipLevel_;
      region_ = other.region_;
      platform_ = other.platform_;
      clubName_ = other.clubName_;
      clubOwnerid_ = other.clubOwnerid_;
      clubIcon_ = other.clubIcon_;
      operationTime_ = other.operationTime_;
      roomTime_ = other.roomTime_;
      seatNum_ = other.seatNum_;
      autoStart_ = other.autoStart_;
      roomType_ = other.roomType_;
      roomMode_ = other.roomMode_;
      gameMode_ = other.gameMode_;
      timezone_ = other.timezone_;
      roomid_ = other.roomid_;
      official_ = other.official_;
      passwd_ = other.passwd_;
      isAutoDelayRoomOver_ = other.isAutoDelayRoomOver_;
      autoDelayRoomOverTimes_ = other.autoDelayRoomOverTimes_;
      isAutoCreateRoom_ = other.isAutoCreateRoom_;
      moduleid_ = other.moduleid_;
      multiOpid_ = other.multiOpid_;
      tempid_ = other.tempid_;
      gpsLimit_ = other.gpsLimit_;
      ipLimit_ = other.ipLimit_;
      forbiddenChat_ = other.forbiddenChat_;
      passwdLimit_ = other.passwdLimit_;
      isCaptcha_ = other.isCaptcha_;
      isBanPc_ = other.isBanPc_;
      isCheckMail_ = other.isCheckMail_;
      gpsDistanceLimit_ = other.gpsDistanceLimit_;
      rateSetting_ = other.rateSetting_ != null ? other.rateSetting_.Clone() : null;
      createClubid_ = other.createClubid_;
      forbiddenChatMode_ = other.forbiddenChatMode_;
      roomVersion_ = other.roomVersion_;
      calltimeMinutes_ = other.calltimeMinutes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyRoomInfo Clone() {
      return new PusoyRoomInfo(this);
    }

    /// <summary>Field number for the "room_name" field.</summary>
    public const int RoomNameFieldNumber = 1;
    private readonly static string RoomNameDefaultValue = "";

    private string roomName_;
    /// <summary>
    ///房間名稱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomName {
      get { return roomName_ ?? RoomNameDefaultValue; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "room_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomName {
      get { return roomName_ != null; }
    }
    /// <summary>Clears the value of the "room_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomName() {
      roomName_ = null;
    }

    /// <summary>Field number for the "blind" field.</summary>
    public const int BlindFieldNumber = 2;
    private readonly static long BlindDefaultValue = 0L;

    private long blind_;
    /// <summary>
    ///買入相關
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Blind {
      get { if ((_hasBits0 & 1) != 0) { return blind_; } else { return BlindDefaultValue; } }
      set {
        _hasBits0 |= 1;
        blind_ = value;
      }
    }
    /// <summary>Gets whether the "blind" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlind {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "blind" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlind() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "min_buyin" field.</summary>
    public const int MinBuyinFieldNumber = 3;
    private readonly static long MinBuyinDefaultValue = 0L;

    private long minBuyin_;
    /// <summary>
    ///最小買入
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinBuyin {
      get { if ((_hasBits0 & 2) != 0) { return minBuyin_; } else { return MinBuyinDefaultValue; } }
      set {
        _hasBits0 |= 2;
        minBuyin_ = value;
      }
    }
    /// <summary>Gets whether the "min_buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinBuyin {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "min_buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinBuyin() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "max_buyin" field.</summary>
    public const int MaxBuyinFieldNumber = 4;
    private readonly static long MaxBuyinDefaultValue = 0L;

    private long maxBuyin_;
    /// <summary>
    ///最大買入
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaxBuyin {
      get { if ((_hasBits0 & 4) != 0) { return maxBuyin_; } else { return MaxBuyinDefaultValue; } }
      set {
        _hasBits0 |= 4;
        maxBuyin_ = value;
      }
    }
    /// <summary>Gets whether the "max_buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxBuyin {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "max_buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxBuyin() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "min_stack" field.</summary>
    public const int MinStackFieldNumber = 5;
    private readonly static long MinStackDefaultValue = 0L;

    private long minStack_;
    /// <summary>
    ///籌碼最底須保持在min_stack以上，否則跳出彈窗要求補碼
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinStack {
      get { if ((_hasBits0 & 8) != 0) { return minStack_; } else { return MinStackDefaultValue; } }
      set {
        _hasBits0 |= 8;
        minStack_ = value;
      }
    }
    /// <summary>Gets whether the "min_stack" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinStack {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "min_stack" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinStack() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "feepoint" field.</summary>
    public const int FeepointFieldNumber = 6;
    private readonly static int FeepointDefaultValue = 0;

    private int feepoint_;
    /// <summary>
    ///服務費相關
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Feepoint {
      get { if ((_hasBits0 & 16) != 0) { return feepoint_; } else { return FeepointDefaultValue; } }
      set {
        _hasBits0 |= 16;
        feepoint_ = value;
      }
    }
    /// <summary>Gets whether the "feepoint" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFeepoint {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "feepoint" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFeepoint() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "feecap" field.</summary>
    public const int FeecapFieldNumber = 7;
    private readonly static int FeecapDefaultValue = 0;

    private int feecap_;
    /// <summary>
    ///服務費封頂
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Feecap {
      get { if ((_hasBits0 & 32) != 0) { return feecap_; } else { return FeecapDefaultValue; } }
      set {
        _hasBits0 |= 32;
        feecap_ = value;
      }
    }
    /// <summary>Gets whether the "feecap" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFeecap {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "feecap" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFeecap() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "creator_user_id" field.</summary>
    public const int CreatorUserIdFieldNumber = 8;
    private readonly static long CreatorUserIdDefaultValue = 0L;

    private long creatorUserId_;
    /// <summary>
    ///創辦人、俱樂部屬性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CreatorUserId {
      get { if ((_hasBits0 & 64) != 0) { return creatorUserId_; } else { return CreatorUserIdDefaultValue; } }
      set {
        _hasBits0 |= 64;
        creatorUserId_ = value;
      }
    }
    /// <summary>Gets whether the "creator_user_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCreatorUserId {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "creator_user_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCreatorUserId() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 9;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    /// <summary>
    ///玩家所屬俱樂部
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 10;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    /// <summary>
    ///玩家所屬聯盟
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 128) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 128;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "super_leagueid" field.</summary>
    public const int SuperLeagueidFieldNumber = 11;
    private readonly static int SuperLeagueidDefaultValue = 0;

    private int superLeagueid_;
    /// <summary>
    ///牌桌所屬超級聯盟
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueid {
      get { if ((_hasBits0 & 256) != 0) { return superLeagueid_; } else { return SuperLeagueidDefaultValue; } }
      set {
        _hasBits0 |= 256;
        superLeagueid_ = value;
      }
    }
    /// <summary>Gets whether the "super_leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueid {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "super_leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueid() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "super_league_type" field.</summary>
    public const int SuperLeagueTypeFieldNumber = 12;
    private readonly static int SuperLeagueTypeDefaultValue = 0;

    private int superLeagueType_;
    /// <summary>
    ///1表示非PPST
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueType {
      get { if ((_hasBits0 & 512) != 0) { return superLeagueType_; } else { return SuperLeagueTypeDefaultValue; } }
      set {
        _hasBits0 |= 512;
        superLeagueType_ = value;
      }
    }
    /// <summary>Gets whether the "super_league_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueType {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "super_league_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueType() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "owner_icon" field.</summary>
    public const int OwnerIconFieldNumber = 13;
    private readonly static string OwnerIconDefaultValue = "";

    private string ownerIcon_;
    /// <summary>
    ///由RoomRouter填寫
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerIcon {
      get { return ownerIcon_ ?? OwnerIconDefaultValue; }
      set {
        ownerIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner_icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnerIcon {
      get { return ownerIcon_ != null; }
    }
    /// <summary>Clears the value of the "owner_icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnerIcon() {
      ownerIcon_ = null;
    }

    /// <summary>Field number for the "owner_name" field.</summary>
    public const int OwnerNameFieldNumber = 14;
    private readonly static string OwnerNameDefaultValue = "";

    private string ownerName_;
    /// <summary>
    ///房主名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerName {
      get { return ownerName_ ?? OwnerNameDefaultValue; }
      set {
        ownerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnerName {
      get { return ownerName_ != null; }
    }
    /// <summary>Clears the value of the "owner_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnerName() {
      ownerName_ = null;
    }

    /// <summary>Field number for the "ownerid" field.</summary>
    public const int OwneridFieldNumber = 15;
    private readonly static long OwneridDefaultValue = 0L;

    private long ownerid_;
    /// <summary>
    ///房主id，可不填
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Ownerid {
      get { if ((_hasBits0 & 1024) != 0) { return ownerid_; } else { return OwneridDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        ownerid_ = value;
      }
    }
    /// <summary>Gets whether the "ownerid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnerid {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "ownerid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnerid() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "owner_vip_level" field.</summary>
    public const int OwnerVipLevelFieldNumber = 16;
    private readonly static uint OwnerVipLevelDefaultValue = 0;

    private uint ownerVipLevel_;
    /// <summary>
    ///房主VIP訊息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OwnerVipLevel {
      get { if ((_hasBits0 & 2048) != 0) { return ownerVipLevel_; } else { return OwnerVipLevelDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        ownerVipLevel_ = value;
      }
    }
    /// <summary>Gets whether the "owner_vip_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnerVipLevel {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "owner_vip_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnerVipLevel() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 17;
    private readonly static int RegionDefaultValue = 0;

    private int region_;
    /// <summary>
    ///房间所属的区域
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Region {
      get { if ((_hasBits0 & 4096) != 0) { return region_; } else { return RegionDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        region_ = value;
      }
    }
    /// <summary>Gets whether the "region" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRegion {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "region" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRegion() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "platform" field.</summary>
    public const int PlatformFieldNumber = 18;
    private readonly static string PlatformDefaultValue = "";

    private string platform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Platform {
      get { return platform_ ?? PlatformDefaultValue; }
      set {
        platform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "platform" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlatform {
      get { return platform_ != null; }
    }
    /// <summary>Clears the value of the "platform" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlatform() {
      platform_ = null;
    }

    /// <summary>Field number for the "club_name" field.</summary>
    public const int ClubNameFieldNumber = 19;
    private readonly static string ClubNameDefaultValue = "";

    private string clubName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClubName {
      get { return clubName_ ?? ClubNameDefaultValue; }
      set {
        clubName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "club_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubName {
      get { return clubName_ != null; }
    }
    /// <summary>Clears the value of the "club_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubName() {
      clubName_ = null;
    }

    /// <summary>Field number for the "club_ownerid" field.</summary>
    public const int ClubOwneridFieldNumber = 20;
    private readonly static long ClubOwneridDefaultValue = 0L;

    private long clubOwnerid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ClubOwnerid {
      get { if ((_hasBits0 & 8192) != 0) { return clubOwnerid_; } else { return ClubOwneridDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        clubOwnerid_ = value;
      }
    }
    /// <summary>Gets whether the "club_ownerid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubOwnerid {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "club_ownerid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubOwnerid() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "club_icon" field.</summary>
    public const int ClubIconFieldNumber = 21;
    private readonly static string ClubIconDefaultValue = "";

    private string clubIcon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClubIcon {
      get { return clubIcon_ ?? ClubIconDefaultValue; }
      set {
        clubIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "club_icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubIcon {
      get { return clubIcon_ != null; }
    }
    /// <summary>Clears the value of the "club_icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubIcon() {
      clubIcon_ = null;
    }

    /// <summary>Field number for the "operation_time" field.</summary>
    public const int OperationTimeFieldNumber = 22;
    private readonly static int OperationTimeDefaultValue = 0;

    private int operationTime_;
    /// <summary>
    ///房間屬性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OperationTime {
      get { if ((_hasBits0 & 16384) != 0) { return operationTime_; } else { return OperationTimeDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        operationTime_ = value;
      }
    }
    /// <summary>Gets whether the "operation_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOperationTime {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "operation_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOperationTime() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "room_time" field.</summary>
    public const int RoomTimeFieldNumber = 23;
    private readonly static int RoomTimeDefaultValue = 0;

    private int roomTime_;
    /// <summary>
    ///房間存活時間
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoomTime {
      get { if ((_hasBits0 & 32768) != 0) { return roomTime_; } else { return RoomTimeDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        roomTime_ = value;
      }
    }
    /// <summary>Gets whether the "room_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomTime {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "room_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomTime() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "seat_num" field.</summary>
    public const int SeatNumFieldNumber = 24;
    private readonly static int SeatNumDefaultValue = 0;

    private int seatNum_;
    /// <summary>
    ///座位數量，最大只支持4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SeatNum {
      get { if ((_hasBits0 & 65536) != 0) { return seatNum_; } else { return SeatNumDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        seatNum_ = value;
      }
    }
    /// <summary>Gets whether the "seat_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatNum {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "seat_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatNum() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "auto_start" field.</summary>
    public const int AutoStartFieldNumber = 25;
    private readonly static int AutoStartDefaultValue = 0;

    private int autoStart_;
    /// <summary>
    ///幾個人坐下可自動開始，-1表示需要手動開始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AutoStart {
      get { if ((_hasBits0 & 131072) != 0) { return autoStart_; } else { return AutoStartDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        autoStart_ = value;
      }
    }
    /// <summary>Gets whether the "auto_start" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAutoStart {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "auto_start" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAutoStart() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "room_type" field.</summary>
    public const int RoomTypeFieldNumber = 26;
    private readonly static global::Texas.Protocol.RoomType RoomTypeDefaultValue = global::Texas.Protocol.RoomType.TestRoom;

    private global::Texas.Protocol.RoomType roomType_;
    /// <summary>
    ///房間模式，Pusoy = 14
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomType RoomType {
      get { if ((_hasBits0 & 262144) != 0) { return roomType_; } else { return RoomTypeDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        roomType_ = value;
      }
    }
    /// <summary>Gets whether the "room_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomType {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "room_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomType() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "room_mode" field.</summary>
    public const int RoomModeFieldNumber = 27;
    private readonly static global::Texas.Protocol.RoomMode RoomModeDefaultValue = global::Texas.Protocol.RoomMode.None;

    private global::Texas.Protocol.RoomMode roomMode_;
    /// <summary>
    ///房間種類，CLUB_ROOM
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomMode RoomMode {
      get { if ((_hasBits0 & 524288) != 0) { return roomMode_; } else { return RoomModeDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        roomMode_ = value;
      }
    }
    /// <summary>Gets whether the "room_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomMode {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "room_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomMode() {
      _hasBits0 &= ~524288;
    }

    /// <summary>Field number for the "game_mode" field.</summary>
    public const int GameModeFieldNumber = 28;
    private readonly static global::Texas.Protocol.GameMode GameModeDefaultValue = global::Texas.Protocol.GameMode.Regular;

    private global::Texas.Protocol.GameMode gameMode_;
    /// <summary>
    ///Pusoy = 0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.GameMode GameMode {
      get { if ((_hasBits0 & 1048576) != 0) { return gameMode_; } else { return GameModeDefaultValue; } }
      set {
        _hasBits0 |= 1048576;
        gameMode_ = value;
      }
    }
    /// <summary>Gets whether the "game_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameMode {
      get { return (_hasBits0 & 1048576) != 0; }
    }
    /// <summary>Clears the value of the "game_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameMode() {
      _hasBits0 &= ~1048576;
    }

    /// <summary>Field number for the "timezone" field.</summary>
    public const int TimezoneFieldNumber = 29;
    private readonly static int TimezoneDefaultValue = 0;

    private int timezone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Timezone {
      get { if ((_hasBits0 & 2097152) != 0) { return timezone_; } else { return TimezoneDefaultValue; } }
      set {
        _hasBits0 |= 2097152;
        timezone_ = value;
      }
    }
    /// <summary>Gets whether the "timezone" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimezone {
      get { return (_hasBits0 & 2097152) != 0; }
    }
    /// <summary>Clears the value of the "timezone" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimezone() {
      _hasBits0 &= ~2097152;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 30;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    /// <summary>
    ///由伺服器填寫
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 4194304) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 4194304;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 4194304) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~4194304;
    }

    /// <summary>Field number for the "official" field.</summary>
    public const int OfficialFieldNumber = 31;
    private readonly static bool OfficialDefaultValue = false;

    private bool official_;
    /// <summary>
    ///RoomRouter填寫
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Official {
      get { if ((_hasBits0 & 8388608) != 0) { return official_; } else { return OfficialDefaultValue; } }
      set {
        _hasBits0 |= 8388608;
        official_ = value;
      }
    }
    /// <summary>Gets whether the "official" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOfficial {
      get { return (_hasBits0 & 8388608) != 0; }
    }
    /// <summary>Clears the value of the "official" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOfficial() {
      _hasBits0 &= ~8388608;
    }

    /// <summary>Field number for the "passwd" field.</summary>
    public const int PasswdFieldNumber = 32;
    private readonly static string PasswdDefaultValue = "";

    private string passwd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Passwd {
      get { return passwd_ ?? PasswdDefaultValue; }
      set {
        passwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "passwd" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPasswd {
      get { return passwd_ != null; }
    }
    /// <summary>Clears the value of the "passwd" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPasswd() {
      passwd_ = null;
    }

    /// <summary>Field number for the "is_auto_delay_room_over" field.</summary>
    public const int IsAutoDelayRoomOverFieldNumber = 33;
    private readonly static bool IsAutoDelayRoomOverDefaultValue = false;

    private bool isAutoDelayRoomOver_;
    /// <summary>
    ///自動延時、開桌相關
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAutoDelayRoomOver {
      get { if ((_hasBits0 & 16777216) != 0) { return isAutoDelayRoomOver_; } else { return IsAutoDelayRoomOverDefaultValue; } }
      set {
        _hasBits0 |= 16777216;
        isAutoDelayRoomOver_ = value;
      }
    }
    /// <summary>Gets whether the "is_auto_delay_room_over" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsAutoDelayRoomOver {
      get { return (_hasBits0 & 16777216) != 0; }
    }
    /// <summary>Clears the value of the "is_auto_delay_room_over" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsAutoDelayRoomOver() {
      _hasBits0 &= ~16777216;
    }

    /// <summary>Field number for the "auto_delay_room_over_times" field.</summary>
    public const int AutoDelayRoomOverTimesFieldNumber = 34;
    private readonly static int AutoDelayRoomOverTimesDefaultValue = 0;

    private int autoDelayRoomOverTimes_;
    /// <summary>
    ///自动延时次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AutoDelayRoomOverTimes {
      get { if ((_hasBits0 & 33554432) != 0) { return autoDelayRoomOverTimes_; } else { return AutoDelayRoomOverTimesDefaultValue; } }
      set {
        _hasBits0 |= 33554432;
        autoDelayRoomOverTimes_ = value;
      }
    }
    /// <summary>Gets whether the "auto_delay_room_over_times" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAutoDelayRoomOverTimes {
      get { return (_hasBits0 & 33554432) != 0; }
    }
    /// <summary>Clears the value of the "auto_delay_room_over_times" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAutoDelayRoomOverTimes() {
      _hasBits0 &= ~33554432;
    }

    /// <summary>Field number for the "is_auto_create_room" field.</summary>
    public const int IsAutoCreateRoomFieldNumber = 35;
    private readonly static bool IsAutoCreateRoomDefaultValue = false;

    private bool isAutoCreateRoom_;
    /// <summary>
    ///是否自动开桌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAutoCreateRoom {
      get { if ((_hasBits0 & 67108864) != 0) { return isAutoCreateRoom_; } else { return IsAutoCreateRoomDefaultValue; } }
      set {
        _hasBits0 |= 67108864;
        isAutoCreateRoom_ = value;
      }
    }
    /// <summary>Gets whether the "is_auto_create_room" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsAutoCreateRoom {
      get { return (_hasBits0 & 67108864) != 0; }
    }
    /// <summary>Clears the value of the "is_auto_create_room" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsAutoCreateRoom() {
      _hasBits0 &= ~67108864;
    }

    /// <summary>Field number for the "moduleid" field.</summary>
    public const int ModuleidFieldNumber = 36;
    private readonly static long ModuleidDefaultValue = 0L;

    private long moduleid_;
    /// <summary>
    ///模板??
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Moduleid {
      get { if ((_hasBits0 & 134217728) != 0) { return moduleid_; } else { return ModuleidDefaultValue; } }
      set {
        _hasBits0 |= 134217728;
        moduleid_ = value;
      }
    }
    /// <summary>Gets whether the "moduleid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModuleid {
      get { return (_hasBits0 & 134217728) != 0; }
    }
    /// <summary>Clears the value of the "moduleid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModuleid() {
      _hasBits0 &= ~134217728;
    }

    /// <summary>Field number for the "multi_opid" field.</summary>
    public const int MultiOpidFieldNumber = 37;
    private readonly static string MultiOpidDefaultValue = "";

    private string multiOpid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MultiOpid {
      get { return multiOpid_ ?? MultiOpidDefaultValue; }
      set {
        multiOpid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "multi_opid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMultiOpid {
      get { return multiOpid_ != null; }
    }
    /// <summary>Clears the value of the "multi_opid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMultiOpid() {
      multiOpid_ = null;
    }

    /// <summary>Field number for the "tempid" field.</summary>
    public const int TempidFieldNumber = 38;
    private readonly static string TempidDefaultValue = "";

    private string tempid_;
    /// <summary>
    ///RoomRouter填寫
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tempid {
      get { return tempid_ ?? TempidDefaultValue; }
      set {
        tempid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tempid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTempid {
      get { return tempid_ != null; }
    }
    /// <summary>Clears the value of the "tempid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTempid() {
      tempid_ = null;
    }

    /// <summary>Field number for the "gps_limit" field.</summary>
    public const int GpsLimitFieldNumber = 39;
    private readonly static bool GpsLimitDefaultValue = false;

    private bool gpsLimit_;
    /// <summary>
    ///限制功能
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GpsLimit {
      get { if ((_hasBits0 & 268435456) != 0) { return gpsLimit_; } else { return GpsLimitDefaultValue; } }
      set {
        _hasBits0 |= 268435456;
        gpsLimit_ = value;
      }
    }
    /// <summary>Gets whether the "gps_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpsLimit {
      get { return (_hasBits0 & 268435456) != 0; }
    }
    /// <summary>Clears the value of the "gps_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpsLimit() {
      _hasBits0 &= ~268435456;
    }

    /// <summary>Field number for the "ip_limit" field.</summary>
    public const int IpLimitFieldNumber = 40;
    private readonly static bool IpLimitDefaultValue = false;

    private bool ipLimit_;
    /// <summary>
    ///IP限制
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IpLimit {
      get { if ((_hasBits0 & 536870912) != 0) { return ipLimit_; } else { return IpLimitDefaultValue; } }
      set {
        _hasBits0 |= 536870912;
        ipLimit_ = value;
      }
    }
    /// <summary>Gets whether the "ip_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIpLimit {
      get { return (_hasBits0 & 536870912) != 0; }
    }
    /// <summary>Clears the value of the "ip_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIpLimit() {
      _hasBits0 &= ~536870912;
    }

    /// <summary>Field number for the "forbidden_chat" field.</summary>
    public const int ForbiddenChatFieldNumber = 41;
    private readonly static bool ForbiddenChatDefaultValue = false;

    private bool forbiddenChat_;
    /// <summary>
    ///是否禁言
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ForbiddenChat {
      get { if ((_hasBits0 & 1073741824) != 0) { return forbiddenChat_; } else { return ForbiddenChatDefaultValue; } }
      set {
        _hasBits0 |= 1073741824;
        forbiddenChat_ = value;
      }
    }
    /// <summary>Gets whether the "forbidden_chat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForbiddenChat {
      get { return (_hasBits0 & 1073741824) != 0; }
    }
    /// <summary>Clears the value of the "forbidden_chat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForbiddenChat() {
      _hasBits0 &= ~1073741824;
    }

    /// <summary>Field number for the "passwd_limit" field.</summary>
    public const int PasswdLimitFieldNumber = 42;
    private readonly static bool PasswdLimitDefaultValue = false;

    private bool passwdLimit_;
    /// <summary>
    ///是否密码桌,与授权买入互斥
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PasswdLimit {
      get { if ((_hasBits0 & -2147483648) != 0) { return passwdLimit_; } else { return PasswdLimitDefaultValue; } }
      set {
        _hasBits0 |= -2147483648;
        passwdLimit_ = value;
      }
    }
    /// <summary>Gets whether the "passwd_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPasswdLimit {
      get { return (_hasBits0 & -2147483648) != 0; }
    }
    /// <summary>Clears the value of the "passwd_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPasswdLimit() {
      _hasBits0 &= ~-2147483648;
    }

    /// <summary>Field number for the "is_captcha" field.</summary>
    public const int IsCaptchaFieldNumber = 43;
    private readonly static bool IsCaptchaDefaultValue = false;

    private bool isCaptcha_;
    /// <summary>
    ///是否人机校验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCaptcha {
      get { if ((_hasBits1 & 1) != 0) { return isCaptcha_; } else { return IsCaptchaDefaultValue; } }
      set {
        _hasBits1 |= 1;
        isCaptcha_ = value;
      }
    }
    /// <summary>Gets whether the "is_captcha" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsCaptcha {
      get { return (_hasBits1 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_captcha" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsCaptcha() {
      _hasBits1 &= ~1;
    }

    /// <summary>Field number for the "is_ban_pc" field.</summary>
    public const int IsBanPcFieldNumber = 44;
    private readonly static bool IsBanPcDefaultValue = false;

    private bool isBanPc_;
    /// <summary>
    ///禁止PC玩家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBanPc {
      get { if ((_hasBits1 & 2) != 0) { return isBanPc_; } else { return IsBanPcDefaultValue; } }
      set {
        _hasBits1 |= 2;
        isBanPc_ = value;
      }
    }
    /// <summary>Gets whether the "is_ban_pc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsBanPc {
      get { return (_hasBits1 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_ban_pc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsBanPc() {
      _hasBits1 &= ~2;
    }

    /// <summary>Field number for the "is_check_mail" field.</summary>
    public const int IsCheckMailFieldNumber = 45;
    private readonly static bool IsCheckMailDefaultValue = false;

    private bool isCheckMail_;
    /// <summary>
    ///需要進行email檢查
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCheckMail {
      get { if ((_hasBits1 & 4) != 0) { return isCheckMail_; } else { return IsCheckMailDefaultValue; } }
      set {
        _hasBits1 |= 4;
        isCheckMail_ = value;
      }
    }
    /// <summary>Gets whether the "is_check_mail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsCheckMail {
      get { return (_hasBits1 & 4) != 0; }
    }
    /// <summary>Clears the value of the "is_check_mail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsCheckMail() {
      _hasBits1 &= ~4;
    }

    /// <summary>Field number for the "gps_distance_limit" field.</summary>
    public const int GpsDistanceLimitFieldNumber = 46;
    private readonly static int GpsDistanceLimitDefaultValue = 0;

    private int gpsDistanceLimit_;
    /// <summary>
    ///RoomRouter填寫
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GpsDistanceLimit {
      get { if ((_hasBits1 & 8) != 0) { return gpsDistanceLimit_; } else { return GpsDistanceLimitDefaultValue; } }
      set {
        _hasBits1 |= 8;
        gpsDistanceLimit_ = value;
      }
    }
    /// <summary>Gets whether the "gps_distance_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpsDistanceLimit {
      get { return (_hasBits1 & 8) != 0; }
    }
    /// <summary>Clears the value of the "gps_distance_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpsDistanceLimit() {
      _hasBits1 &= ~8;
    }

    /// <summary>Field number for the "rate_setting" field.</summary>
    public const int RateSettingFieldNumber = 47;
    private global::Texas.Protocol.PusoyRateSetting rateSetting_;
    /// <summary>
    ///倍率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PusoyRateSetting RateSetting {
      get { return rateSetting_; }
      set {
        rateSetting_ = value;
      }
    }

    /// <summary>Field number for the "create_clubid" field.</summary>
    public const int CreateClubidFieldNumber = 48;
    private readonly static int CreateClubidDefaultValue = 0;

    private int createClubid_;
    /// <summary>
    ///牌桌所屬俱樂部
    ///勿跟clubid搞混，clubid表示玩家進入房間帶的俱樂部ID，退出房間會退到此俱樂部列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CreateClubid {
      get { if ((_hasBits1 & 16) != 0) { return createClubid_; } else { return CreateClubidDefaultValue; } }
      set {
        _hasBits1 |= 16;
        createClubid_ = value;
      }
    }
    /// <summary>Gets whether the "create_clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCreateClubid {
      get { return (_hasBits1 & 16) != 0; }
    }
    /// <summary>Clears the value of the "create_clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCreateClubid() {
      _hasBits1 &= ~16;
    }

    /// <summary>Field number for the "forbidden_chat_mode" field.</summary>
    public const int ForbiddenChatModeFieldNumber = 49;
    private readonly static int ForbiddenChatModeDefaultValue = 0;

    private int forbiddenChatMode_;
    /// <summary>
    ///0: 全體禁言 1:看客禁言
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ForbiddenChatMode {
      get { if ((_hasBits1 & 32) != 0) { return forbiddenChatMode_; } else { return ForbiddenChatModeDefaultValue; } }
      set {
        _hasBits1 |= 32;
        forbiddenChatMode_ = value;
      }
    }
    /// <summary>Gets whether the "forbidden_chat_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForbiddenChatMode {
      get { return (_hasBits1 & 32) != 0; }
    }
    /// <summary>Clears the value of the "forbidden_chat_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForbiddenChatMode() {
      _hasBits1 &= ~32;
    }

    /// <summary>Field number for the "room_version" field.</summary>
    public const int RoomVersionFieldNumber = 50;
    private readonly static int RoomVersionDefaultValue = 0;

    private int roomVersion_;
    /// <summary>
    ///房間版本代號，用於與前端做版本兼容檢測
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoomVersion {
      get { if ((_hasBits1 & 64) != 0) { return roomVersion_; } else { return RoomVersionDefaultValue; } }
      set {
        _hasBits1 |= 64;
        roomVersion_ = value;
      }
    }
    /// <summary>Gets whether the "room_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomVersion {
      get { return (_hasBits1 & 64) != 0; }
    }
    /// <summary>Clears the value of the "room_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomVersion() {
      _hasBits1 &= ~64;
    }

    /// <summary>Field number for the "calltime_minutes" field.</summary>
    public const int CalltimeMinutesFieldNumber = 51;
    private readonly static int CalltimeMinutesDefaultValue = 0;

    private int calltimeMinutes_;
    /// <summary>
    ///Calltime時間
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalltimeMinutes {
      get { if ((_hasBits1 & 128) != 0) { return calltimeMinutes_; } else { return CalltimeMinutesDefaultValue; } }
      set {
        _hasBits1 |= 128;
        calltimeMinutes_ = value;
      }
    }
    /// <summary>Gets whether the "calltime_minutes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCalltimeMinutes {
      get { return (_hasBits1 & 128) != 0; }
    }
    /// <summary>Clears the value of the "calltime_minutes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCalltimeMinutes() {
      _hasBits1 &= ~128;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyRoomInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyRoomInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomName != other.RoomName) return false;
      if (Blind != other.Blind) return false;
      if (MinBuyin != other.MinBuyin) return false;
      if (MaxBuyin != other.MaxBuyin) return false;
      if (MinStack != other.MinStack) return false;
      if (Feepoint != other.Feepoint) return false;
      if (Feecap != other.Feecap) return false;
      if (CreatorUserId != other.CreatorUserId) return false;
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (SuperLeagueid != other.SuperLeagueid) return false;
      if (SuperLeagueType != other.SuperLeagueType) return false;
      if (OwnerIcon != other.OwnerIcon) return false;
      if (OwnerName != other.OwnerName) return false;
      if (Ownerid != other.Ownerid) return false;
      if (OwnerVipLevel != other.OwnerVipLevel) return false;
      if (Region != other.Region) return false;
      if (Platform != other.Platform) return false;
      if (ClubName != other.ClubName) return false;
      if (ClubOwnerid != other.ClubOwnerid) return false;
      if (ClubIcon != other.ClubIcon) return false;
      if (OperationTime != other.OperationTime) return false;
      if (RoomTime != other.RoomTime) return false;
      if (SeatNum != other.SeatNum) return false;
      if (AutoStart != other.AutoStart) return false;
      if (RoomType != other.RoomType) return false;
      if (RoomMode != other.RoomMode) return false;
      if (GameMode != other.GameMode) return false;
      if (Timezone != other.Timezone) return false;
      if (Roomid != other.Roomid) return false;
      if (Official != other.Official) return false;
      if (Passwd != other.Passwd) return false;
      if (IsAutoDelayRoomOver != other.IsAutoDelayRoomOver) return false;
      if (AutoDelayRoomOverTimes != other.AutoDelayRoomOverTimes) return false;
      if (IsAutoCreateRoom != other.IsAutoCreateRoom) return false;
      if (Moduleid != other.Moduleid) return false;
      if (MultiOpid != other.MultiOpid) return false;
      if (Tempid != other.Tempid) return false;
      if (GpsLimit != other.GpsLimit) return false;
      if (IpLimit != other.IpLimit) return false;
      if (ForbiddenChat != other.ForbiddenChat) return false;
      if (PasswdLimit != other.PasswdLimit) return false;
      if (IsCaptcha != other.IsCaptcha) return false;
      if (IsBanPc != other.IsBanPc) return false;
      if (IsCheckMail != other.IsCheckMail) return false;
      if (GpsDistanceLimit != other.GpsDistanceLimit) return false;
      if (!object.Equals(RateSetting, other.RateSetting)) return false;
      if (CreateClubid != other.CreateClubid) return false;
      if (ForbiddenChatMode != other.ForbiddenChatMode) return false;
      if (RoomVersion != other.RoomVersion) return false;
      if (CalltimeMinutes != other.CalltimeMinutes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomName) hash ^= RoomName.GetHashCode();
      if (HasBlind) hash ^= Blind.GetHashCode();
      if (HasMinBuyin) hash ^= MinBuyin.GetHashCode();
      if (HasMaxBuyin) hash ^= MaxBuyin.GetHashCode();
      if (HasMinStack) hash ^= MinStack.GetHashCode();
      if (HasFeepoint) hash ^= Feepoint.GetHashCode();
      if (HasFeecap) hash ^= Feecap.GetHashCode();
      if (HasCreatorUserId) hash ^= CreatorUserId.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasSuperLeagueid) hash ^= SuperLeagueid.GetHashCode();
      if (HasSuperLeagueType) hash ^= SuperLeagueType.GetHashCode();
      if (HasOwnerIcon) hash ^= OwnerIcon.GetHashCode();
      if (HasOwnerName) hash ^= OwnerName.GetHashCode();
      if (HasOwnerid) hash ^= Ownerid.GetHashCode();
      if (HasOwnerVipLevel) hash ^= OwnerVipLevel.GetHashCode();
      if (HasRegion) hash ^= Region.GetHashCode();
      if (HasPlatform) hash ^= Platform.GetHashCode();
      if (HasClubName) hash ^= ClubName.GetHashCode();
      if (HasClubOwnerid) hash ^= ClubOwnerid.GetHashCode();
      if (HasClubIcon) hash ^= ClubIcon.GetHashCode();
      if (HasOperationTime) hash ^= OperationTime.GetHashCode();
      if (HasRoomTime) hash ^= RoomTime.GetHashCode();
      if (HasSeatNum) hash ^= SeatNum.GetHashCode();
      if (HasAutoStart) hash ^= AutoStart.GetHashCode();
      if (HasRoomType) hash ^= RoomType.GetHashCode();
      if (HasRoomMode) hash ^= RoomMode.GetHashCode();
      if (HasGameMode) hash ^= GameMode.GetHashCode();
      if (HasTimezone) hash ^= Timezone.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasOfficial) hash ^= Official.GetHashCode();
      if (HasPasswd) hash ^= Passwd.GetHashCode();
      if (HasIsAutoDelayRoomOver) hash ^= IsAutoDelayRoomOver.GetHashCode();
      if (HasAutoDelayRoomOverTimes) hash ^= AutoDelayRoomOverTimes.GetHashCode();
      if (HasIsAutoCreateRoom) hash ^= IsAutoCreateRoom.GetHashCode();
      if (HasModuleid) hash ^= Moduleid.GetHashCode();
      if (HasMultiOpid) hash ^= MultiOpid.GetHashCode();
      if (HasTempid) hash ^= Tempid.GetHashCode();
      if (HasGpsLimit) hash ^= GpsLimit.GetHashCode();
      if (HasIpLimit) hash ^= IpLimit.GetHashCode();
      if (HasForbiddenChat) hash ^= ForbiddenChat.GetHashCode();
      if (HasPasswdLimit) hash ^= PasswdLimit.GetHashCode();
      if (HasIsCaptcha) hash ^= IsCaptcha.GetHashCode();
      if (HasIsBanPc) hash ^= IsBanPc.GetHashCode();
      if (HasIsCheckMail) hash ^= IsCheckMail.GetHashCode();
      if (HasGpsDistanceLimit) hash ^= GpsDistanceLimit.GetHashCode();
      if (rateSetting_ != null) hash ^= RateSetting.GetHashCode();
      if (HasCreateClubid) hash ^= CreateClubid.GetHashCode();
      if (HasForbiddenChatMode) hash ^= ForbiddenChatMode.GetHashCode();
      if (HasRoomVersion) hash ^= RoomVersion.GetHashCode();
      if (HasCalltimeMinutes) hash ^= CalltimeMinutes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomName) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (HasBlind) {
        output.WriteRawTag(16);
        output.WriteInt64(Blind);
      }
      if (HasMinBuyin) {
        output.WriteRawTag(24);
        output.WriteInt64(MinBuyin);
      }
      if (HasMaxBuyin) {
        output.WriteRawTag(32);
        output.WriteInt64(MaxBuyin);
      }
      if (HasMinStack) {
        output.WriteRawTag(40);
        output.WriteInt64(MinStack);
      }
      if (HasFeepoint) {
        output.WriteRawTag(48);
        output.WriteInt32(Feepoint);
      }
      if (HasFeecap) {
        output.WriteRawTag(56);
        output.WriteInt32(Feecap);
      }
      if (HasCreatorUserId) {
        output.WriteRawTag(64);
        output.WriteInt64(CreatorUserId);
      }
      if (HasClubid) {
        output.WriteRawTag(74);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(80);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(88);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasSuperLeagueType) {
        output.WriteRawTag(96);
        output.WriteInt32(SuperLeagueType);
      }
      if (HasOwnerIcon) {
        output.WriteRawTag(106);
        output.WriteString(OwnerIcon);
      }
      if (HasOwnerName) {
        output.WriteRawTag(114);
        output.WriteString(OwnerName);
      }
      if (HasOwnerid) {
        output.WriteRawTag(120);
        output.WriteInt64(Ownerid);
      }
      if (HasOwnerVipLevel) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(OwnerVipLevel);
      }
      if (HasRegion) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(Region);
      }
      if (HasPlatform) {
        output.WriteRawTag(146, 1);
        output.WriteString(Platform);
      }
      if (HasClubName) {
        output.WriteRawTag(154, 1);
        output.WriteString(ClubName);
      }
      if (HasClubOwnerid) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(ClubOwnerid);
      }
      if (HasClubIcon) {
        output.WriteRawTag(170, 1);
        output.WriteString(ClubIcon);
      }
      if (HasOperationTime) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(OperationTime);
      }
      if (HasRoomTime) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(RoomTime);
      }
      if (HasSeatNum) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(SeatNum);
      }
      if (HasAutoStart) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(AutoStart);
      }
      if (HasRoomType) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) RoomType);
      }
      if (HasRoomMode) {
        output.WriteRawTag(216, 1);
        output.WriteEnum((int) RoomMode);
      }
      if (HasGameMode) {
        output.WriteRawTag(224, 1);
        output.WriteEnum((int) GameMode);
      }
      if (HasTimezone) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(Timezone);
      }
      if (HasRoomid) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(Roomid);
      }
      if (HasOfficial) {
        output.WriteRawTag(248, 1);
        output.WriteBool(Official);
      }
      if (HasPasswd) {
        output.WriteRawTag(130, 2);
        output.WriteString(Passwd);
      }
      if (HasIsAutoDelayRoomOver) {
        output.WriteRawTag(136, 2);
        output.WriteBool(IsAutoDelayRoomOver);
      }
      if (HasAutoDelayRoomOverTimes) {
        output.WriteRawTag(144, 2);
        output.WriteInt32(AutoDelayRoomOverTimes);
      }
      if (HasIsAutoCreateRoom) {
        output.WriteRawTag(152, 2);
        output.WriteBool(IsAutoCreateRoom);
      }
      if (HasModuleid) {
        output.WriteRawTag(160, 2);
        output.WriteInt64(Moduleid);
      }
      if (HasMultiOpid) {
        output.WriteRawTag(170, 2);
        output.WriteString(MultiOpid);
      }
      if (HasTempid) {
        output.WriteRawTag(178, 2);
        output.WriteString(Tempid);
      }
      if (HasGpsLimit) {
        output.WriteRawTag(184, 2);
        output.WriteBool(GpsLimit);
      }
      if (HasIpLimit) {
        output.WriteRawTag(192, 2);
        output.WriteBool(IpLimit);
      }
      if (HasForbiddenChat) {
        output.WriteRawTag(200, 2);
        output.WriteBool(ForbiddenChat);
      }
      if (HasPasswdLimit) {
        output.WriteRawTag(208, 2);
        output.WriteBool(PasswdLimit);
      }
      if (HasIsCaptcha) {
        output.WriteRawTag(216, 2);
        output.WriteBool(IsCaptcha);
      }
      if (HasIsBanPc) {
        output.WriteRawTag(224, 2);
        output.WriteBool(IsBanPc);
      }
      if (HasIsCheckMail) {
        output.WriteRawTag(232, 2);
        output.WriteBool(IsCheckMail);
      }
      if (HasGpsDistanceLimit) {
        output.WriteRawTag(240, 2);
        output.WriteInt32(GpsDistanceLimit);
      }
      if (rateSetting_ != null) {
        output.WriteRawTag(250, 2);
        output.WriteMessage(RateSetting);
      }
      if (HasCreateClubid) {
        output.WriteRawTag(128, 3);
        output.WriteInt32(CreateClubid);
      }
      if (HasForbiddenChatMode) {
        output.WriteRawTag(136, 3);
        output.WriteInt32(ForbiddenChatMode);
      }
      if (HasRoomVersion) {
        output.WriteRawTag(144, 3);
        output.WriteInt32(RoomVersion);
      }
      if (HasCalltimeMinutes) {
        output.WriteRawTag(152, 3);
        output.WriteInt32(CalltimeMinutes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomName) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (HasBlind) {
        output.WriteRawTag(16);
        output.WriteInt64(Blind);
      }
      if (HasMinBuyin) {
        output.WriteRawTag(24);
        output.WriteInt64(MinBuyin);
      }
      if (HasMaxBuyin) {
        output.WriteRawTag(32);
        output.WriteInt64(MaxBuyin);
      }
      if (HasMinStack) {
        output.WriteRawTag(40);
        output.WriteInt64(MinStack);
      }
      if (HasFeepoint) {
        output.WriteRawTag(48);
        output.WriteInt32(Feepoint);
      }
      if (HasFeecap) {
        output.WriteRawTag(56);
        output.WriteInt32(Feecap);
      }
      if (HasCreatorUserId) {
        output.WriteRawTag(64);
        output.WriteInt64(CreatorUserId);
      }
      if (HasClubid) {
        output.WriteRawTag(74);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(80);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(88);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasSuperLeagueType) {
        output.WriteRawTag(96);
        output.WriteInt32(SuperLeagueType);
      }
      if (HasOwnerIcon) {
        output.WriteRawTag(106);
        output.WriteString(OwnerIcon);
      }
      if (HasOwnerName) {
        output.WriteRawTag(114);
        output.WriteString(OwnerName);
      }
      if (HasOwnerid) {
        output.WriteRawTag(120);
        output.WriteInt64(Ownerid);
      }
      if (HasOwnerVipLevel) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(OwnerVipLevel);
      }
      if (HasRegion) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(Region);
      }
      if (HasPlatform) {
        output.WriteRawTag(146, 1);
        output.WriteString(Platform);
      }
      if (HasClubName) {
        output.WriteRawTag(154, 1);
        output.WriteString(ClubName);
      }
      if (HasClubOwnerid) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(ClubOwnerid);
      }
      if (HasClubIcon) {
        output.WriteRawTag(170, 1);
        output.WriteString(ClubIcon);
      }
      if (HasOperationTime) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(OperationTime);
      }
      if (HasRoomTime) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(RoomTime);
      }
      if (HasSeatNum) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(SeatNum);
      }
      if (HasAutoStart) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(AutoStart);
      }
      if (HasRoomType) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) RoomType);
      }
      if (HasRoomMode) {
        output.WriteRawTag(216, 1);
        output.WriteEnum((int) RoomMode);
      }
      if (HasGameMode) {
        output.WriteRawTag(224, 1);
        output.WriteEnum((int) GameMode);
      }
      if (HasTimezone) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(Timezone);
      }
      if (HasRoomid) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(Roomid);
      }
      if (HasOfficial) {
        output.WriteRawTag(248, 1);
        output.WriteBool(Official);
      }
      if (HasPasswd) {
        output.WriteRawTag(130, 2);
        output.WriteString(Passwd);
      }
      if (HasIsAutoDelayRoomOver) {
        output.WriteRawTag(136, 2);
        output.WriteBool(IsAutoDelayRoomOver);
      }
      if (HasAutoDelayRoomOverTimes) {
        output.WriteRawTag(144, 2);
        output.WriteInt32(AutoDelayRoomOverTimes);
      }
      if (HasIsAutoCreateRoom) {
        output.WriteRawTag(152, 2);
        output.WriteBool(IsAutoCreateRoom);
      }
      if (HasModuleid) {
        output.WriteRawTag(160, 2);
        output.WriteInt64(Moduleid);
      }
      if (HasMultiOpid) {
        output.WriteRawTag(170, 2);
        output.WriteString(MultiOpid);
      }
      if (HasTempid) {
        output.WriteRawTag(178, 2);
        output.WriteString(Tempid);
      }
      if (HasGpsLimit) {
        output.WriteRawTag(184, 2);
        output.WriteBool(GpsLimit);
      }
      if (HasIpLimit) {
        output.WriteRawTag(192, 2);
        output.WriteBool(IpLimit);
      }
      if (HasForbiddenChat) {
        output.WriteRawTag(200, 2);
        output.WriteBool(ForbiddenChat);
      }
      if (HasPasswdLimit) {
        output.WriteRawTag(208, 2);
        output.WriteBool(PasswdLimit);
      }
      if (HasIsCaptcha) {
        output.WriteRawTag(216, 2);
        output.WriteBool(IsCaptcha);
      }
      if (HasIsBanPc) {
        output.WriteRawTag(224, 2);
        output.WriteBool(IsBanPc);
      }
      if (HasIsCheckMail) {
        output.WriteRawTag(232, 2);
        output.WriteBool(IsCheckMail);
      }
      if (HasGpsDistanceLimit) {
        output.WriteRawTag(240, 2);
        output.WriteInt32(GpsDistanceLimit);
      }
      if (rateSetting_ != null) {
        output.WriteRawTag(250, 2);
        output.WriteMessage(RateSetting);
      }
      if (HasCreateClubid) {
        output.WriteRawTag(128, 3);
        output.WriteInt32(CreateClubid);
      }
      if (HasForbiddenChatMode) {
        output.WriteRawTag(136, 3);
        output.WriteInt32(ForbiddenChatMode);
      }
      if (HasRoomVersion) {
        output.WriteRawTag(144, 3);
        output.WriteInt32(RoomVersion);
      }
      if (HasCalltimeMinutes) {
        output.WriteRawTag(152, 3);
        output.WriteInt32(CalltimeMinutes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (HasBlind) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Blind);
      }
      if (HasMinBuyin) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinBuyin);
      }
      if (HasMaxBuyin) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxBuyin);
      }
      if (HasMinStack) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinStack);
      }
      if (HasFeepoint) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Feepoint);
      }
      if (HasFeecap) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Feecap);
      }
      if (HasCreatorUserId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreatorUserId);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasSuperLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueid);
      }
      if (HasSuperLeagueType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueType);
      }
      if (HasOwnerIcon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerIcon);
      }
      if (HasOwnerName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerName);
      }
      if (HasOwnerid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Ownerid);
      }
      if (HasOwnerVipLevel) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(OwnerVipLevel);
      }
      if (HasRegion) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Region);
      }
      if (HasPlatform) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Platform);
      }
      if (HasClubName) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClubName);
      }
      if (HasClubOwnerid) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(ClubOwnerid);
      }
      if (HasClubIcon) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClubIcon);
      }
      if (HasOperationTime) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(OperationTime);
      }
      if (HasRoomTime) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RoomTime);
      }
      if (HasSeatNum) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SeatNum);
      }
      if (HasAutoStart) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AutoStart);
      }
      if (HasRoomType) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) RoomType);
      }
      if (HasRoomMode) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) RoomMode);
      }
      if (HasGameMode) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
      }
      if (HasTimezone) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Timezone);
      }
      if (HasRoomid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasOfficial) {
        size += 2 + 1;
      }
      if (HasPasswd) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Passwd);
      }
      if (HasIsAutoDelayRoomOver) {
        size += 2 + 1;
      }
      if (HasAutoDelayRoomOverTimes) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AutoDelayRoomOverTimes);
      }
      if (HasIsAutoCreateRoom) {
        size += 2 + 1;
      }
      if (HasModuleid) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Moduleid);
      }
      if (HasMultiOpid) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MultiOpid);
      }
      if (HasTempid) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Tempid);
      }
      if (HasGpsLimit) {
        size += 2 + 1;
      }
      if (HasIpLimit) {
        size += 2 + 1;
      }
      if (HasForbiddenChat) {
        size += 2 + 1;
      }
      if (HasPasswdLimit) {
        size += 2 + 1;
      }
      if (HasIsCaptcha) {
        size += 2 + 1;
      }
      if (HasIsBanPc) {
        size += 2 + 1;
      }
      if (HasIsCheckMail) {
        size += 2 + 1;
      }
      if (HasGpsDistanceLimit) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(GpsDistanceLimit);
      }
      if (rateSetting_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RateSetting);
      }
      if (HasCreateClubid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CreateClubid);
      }
      if (HasForbiddenChatMode) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ForbiddenChatMode);
      }
      if (HasRoomVersion) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RoomVersion);
      }
      if (HasCalltimeMinutes) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CalltimeMinutes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyRoomInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomName) {
        RoomName = other.RoomName;
      }
      if (other.HasBlind) {
        Blind = other.Blind;
      }
      if (other.HasMinBuyin) {
        MinBuyin = other.MinBuyin;
      }
      if (other.HasMaxBuyin) {
        MaxBuyin = other.MaxBuyin;
      }
      if (other.HasMinStack) {
        MinStack = other.MinStack;
      }
      if (other.HasFeepoint) {
        Feepoint = other.Feepoint;
      }
      if (other.HasFeecap) {
        Feecap = other.Feecap;
      }
      if (other.HasCreatorUserId) {
        CreatorUserId = other.CreatorUserId;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasSuperLeagueid) {
        SuperLeagueid = other.SuperLeagueid;
      }
      if (other.HasSuperLeagueType) {
        SuperLeagueType = other.SuperLeagueType;
      }
      if (other.HasOwnerIcon) {
        OwnerIcon = other.OwnerIcon;
      }
      if (other.HasOwnerName) {
        OwnerName = other.OwnerName;
      }
      if (other.HasOwnerid) {
        Ownerid = other.Ownerid;
      }
      if (other.HasOwnerVipLevel) {
        OwnerVipLevel = other.OwnerVipLevel;
      }
      if (other.HasRegion) {
        Region = other.Region;
      }
      if (other.HasPlatform) {
        Platform = other.Platform;
      }
      if (other.HasClubName) {
        ClubName = other.ClubName;
      }
      if (other.HasClubOwnerid) {
        ClubOwnerid = other.ClubOwnerid;
      }
      if (other.HasClubIcon) {
        ClubIcon = other.ClubIcon;
      }
      if (other.HasOperationTime) {
        OperationTime = other.OperationTime;
      }
      if (other.HasRoomTime) {
        RoomTime = other.RoomTime;
      }
      if (other.HasSeatNum) {
        SeatNum = other.SeatNum;
      }
      if (other.HasAutoStart) {
        AutoStart = other.AutoStart;
      }
      if (other.HasRoomType) {
        RoomType = other.RoomType;
      }
      if (other.HasRoomMode) {
        RoomMode = other.RoomMode;
      }
      if (other.HasGameMode) {
        GameMode = other.GameMode;
      }
      if (other.HasTimezone) {
        Timezone = other.Timezone;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasOfficial) {
        Official = other.Official;
      }
      if (other.HasPasswd) {
        Passwd = other.Passwd;
      }
      if (other.HasIsAutoDelayRoomOver) {
        IsAutoDelayRoomOver = other.IsAutoDelayRoomOver;
      }
      if (other.HasAutoDelayRoomOverTimes) {
        AutoDelayRoomOverTimes = other.AutoDelayRoomOverTimes;
      }
      if (other.HasIsAutoCreateRoom) {
        IsAutoCreateRoom = other.IsAutoCreateRoom;
      }
      if (other.HasModuleid) {
        Moduleid = other.Moduleid;
      }
      if (other.HasMultiOpid) {
        MultiOpid = other.MultiOpid;
      }
      if (other.HasTempid) {
        Tempid = other.Tempid;
      }
      if (other.HasGpsLimit) {
        GpsLimit = other.GpsLimit;
      }
      if (other.HasIpLimit) {
        IpLimit = other.IpLimit;
      }
      if (other.HasForbiddenChat) {
        ForbiddenChat = other.ForbiddenChat;
      }
      if (other.HasPasswdLimit) {
        PasswdLimit = other.PasswdLimit;
      }
      if (other.HasIsCaptcha) {
        IsCaptcha = other.IsCaptcha;
      }
      if (other.HasIsBanPc) {
        IsBanPc = other.IsBanPc;
      }
      if (other.HasIsCheckMail) {
        IsCheckMail = other.IsCheckMail;
      }
      if (other.HasGpsDistanceLimit) {
        GpsDistanceLimit = other.GpsDistanceLimit;
      }
      if (other.rateSetting_ != null) {
        if (rateSetting_ == null) {
          RateSetting = new global::Texas.Protocol.PusoyRateSetting();
        }
        RateSetting.MergeFrom(other.RateSetting);
      }
      if (other.HasCreateClubid) {
        CreateClubid = other.CreateClubid;
      }
      if (other.HasForbiddenChatMode) {
        ForbiddenChatMode = other.ForbiddenChatMode;
      }
      if (other.HasRoomVersion) {
        RoomVersion = other.RoomVersion;
      }
      if (other.HasCalltimeMinutes) {
        CalltimeMinutes = other.CalltimeMinutes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 16: {
            Blind = input.ReadInt64();
            break;
          }
          case 24: {
            MinBuyin = input.ReadInt64();
            break;
          }
          case 32: {
            MaxBuyin = input.ReadInt64();
            break;
          }
          case 40: {
            MinStack = input.ReadInt64();
            break;
          }
          case 48: {
            Feepoint = input.ReadInt32();
            break;
          }
          case 56: {
            Feecap = input.ReadInt32();
            break;
          }
          case 64: {
            CreatorUserId = input.ReadInt64();
            break;
          }
          case 74: {
            Clubid = input.ReadString();
            break;
          }
          case 80: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 88: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 96: {
            SuperLeagueType = input.ReadInt32();
            break;
          }
          case 106: {
            OwnerIcon = input.ReadString();
            break;
          }
          case 114: {
            OwnerName = input.ReadString();
            break;
          }
          case 120: {
            Ownerid = input.ReadInt64();
            break;
          }
          case 128: {
            OwnerVipLevel = input.ReadUInt32();
            break;
          }
          case 136: {
            Region = input.ReadInt32();
            break;
          }
          case 146: {
            Platform = input.ReadString();
            break;
          }
          case 154: {
            ClubName = input.ReadString();
            break;
          }
          case 160: {
            ClubOwnerid = input.ReadInt64();
            break;
          }
          case 170: {
            ClubIcon = input.ReadString();
            break;
          }
          case 176: {
            OperationTime = input.ReadInt32();
            break;
          }
          case 184: {
            RoomTime = input.ReadInt32();
            break;
          }
          case 192: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 200: {
            AutoStart = input.ReadInt32();
            break;
          }
          case 208: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 216: {
            RoomMode = (global::Texas.Protocol.RoomMode) input.ReadEnum();
            break;
          }
          case 224: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 232: {
            Timezone = input.ReadInt32();
            break;
          }
          case 240: {
            Roomid = input.ReadInt32();
            break;
          }
          case 248: {
            Official = input.ReadBool();
            break;
          }
          case 258: {
            Passwd = input.ReadString();
            break;
          }
          case 264: {
            IsAutoDelayRoomOver = input.ReadBool();
            break;
          }
          case 272: {
            AutoDelayRoomOverTimes = input.ReadInt32();
            break;
          }
          case 280: {
            IsAutoCreateRoom = input.ReadBool();
            break;
          }
          case 288: {
            Moduleid = input.ReadInt64();
            break;
          }
          case 298: {
            MultiOpid = input.ReadString();
            break;
          }
          case 306: {
            Tempid = input.ReadString();
            break;
          }
          case 312: {
            GpsLimit = input.ReadBool();
            break;
          }
          case 320: {
            IpLimit = input.ReadBool();
            break;
          }
          case 328: {
            ForbiddenChat = input.ReadBool();
            break;
          }
          case 336: {
            PasswdLimit = input.ReadBool();
            break;
          }
          case 344: {
            IsCaptcha = input.ReadBool();
            break;
          }
          case 352: {
            IsBanPc = input.ReadBool();
            break;
          }
          case 360: {
            IsCheckMail = input.ReadBool();
            break;
          }
          case 368: {
            GpsDistanceLimit = input.ReadInt32();
            break;
          }
          case 378: {
            if (rateSetting_ == null) {
              RateSetting = new global::Texas.Protocol.PusoyRateSetting();
            }
            input.ReadMessage(RateSetting);
            break;
          }
          case 384: {
            CreateClubid = input.ReadInt32();
            break;
          }
          case 392: {
            ForbiddenChatMode = input.ReadInt32();
            break;
          }
          case 400: {
            RoomVersion = input.ReadInt32();
            break;
          }
          case 408: {
            CalltimeMinutes = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 16: {
            Blind = input.ReadInt64();
            break;
          }
          case 24: {
            MinBuyin = input.ReadInt64();
            break;
          }
          case 32: {
            MaxBuyin = input.ReadInt64();
            break;
          }
          case 40: {
            MinStack = input.ReadInt64();
            break;
          }
          case 48: {
            Feepoint = input.ReadInt32();
            break;
          }
          case 56: {
            Feecap = input.ReadInt32();
            break;
          }
          case 64: {
            CreatorUserId = input.ReadInt64();
            break;
          }
          case 74: {
            Clubid = input.ReadString();
            break;
          }
          case 80: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 88: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 96: {
            SuperLeagueType = input.ReadInt32();
            break;
          }
          case 106: {
            OwnerIcon = input.ReadString();
            break;
          }
          case 114: {
            OwnerName = input.ReadString();
            break;
          }
          case 120: {
            Ownerid = input.ReadInt64();
            break;
          }
          case 128: {
            OwnerVipLevel = input.ReadUInt32();
            break;
          }
          case 136: {
            Region = input.ReadInt32();
            break;
          }
          case 146: {
            Platform = input.ReadString();
            break;
          }
          case 154: {
            ClubName = input.ReadString();
            break;
          }
          case 160: {
            ClubOwnerid = input.ReadInt64();
            break;
          }
          case 170: {
            ClubIcon = input.ReadString();
            break;
          }
          case 176: {
            OperationTime = input.ReadInt32();
            break;
          }
          case 184: {
            RoomTime = input.ReadInt32();
            break;
          }
          case 192: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 200: {
            AutoStart = input.ReadInt32();
            break;
          }
          case 208: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 216: {
            RoomMode = (global::Texas.Protocol.RoomMode) input.ReadEnum();
            break;
          }
          case 224: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 232: {
            Timezone = input.ReadInt32();
            break;
          }
          case 240: {
            Roomid = input.ReadInt32();
            break;
          }
          case 248: {
            Official = input.ReadBool();
            break;
          }
          case 258: {
            Passwd = input.ReadString();
            break;
          }
          case 264: {
            IsAutoDelayRoomOver = input.ReadBool();
            break;
          }
          case 272: {
            AutoDelayRoomOverTimes = input.ReadInt32();
            break;
          }
          case 280: {
            IsAutoCreateRoom = input.ReadBool();
            break;
          }
          case 288: {
            Moduleid = input.ReadInt64();
            break;
          }
          case 298: {
            MultiOpid = input.ReadString();
            break;
          }
          case 306: {
            Tempid = input.ReadString();
            break;
          }
          case 312: {
            GpsLimit = input.ReadBool();
            break;
          }
          case 320: {
            IpLimit = input.ReadBool();
            break;
          }
          case 328: {
            ForbiddenChat = input.ReadBool();
            break;
          }
          case 336: {
            PasswdLimit = input.ReadBool();
            break;
          }
          case 344: {
            IsCaptcha = input.ReadBool();
            break;
          }
          case 352: {
            IsBanPc = input.ReadBool();
            break;
          }
          case 360: {
            IsCheckMail = input.ReadBool();
            break;
          }
          case 368: {
            GpsDistanceLimit = input.ReadInt32();
            break;
          }
          case 378: {
            if (rateSetting_ == null) {
              RateSetting = new global::Texas.Protocol.PusoyRateSetting();
            }
            input.ReadMessage(RateSetting);
            break;
          }
          case 384: {
            CreateClubid = input.ReadInt32();
            break;
          }
          case 392: {
            ForbiddenChatMode = input.ReadInt32();
            break;
          }
          case 400: {
            RoomVersion = input.ReadInt32();
            break;
          }
          case 408: {
            CalltimeMinutes = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreatePusoyRoomREQ : pb::IMessage<CreatePusoyRoomREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatePusoyRoomREQ> _parser = new pb::MessageParser<CreatePusoyRoomREQ>(() => new CreatePusoyRoomREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    private int _hasBits1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatePusoyRoomREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatePusoyRoomREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatePusoyRoomREQ(CreatePusoyRoomREQ other) : this() {
      _hasBits0 = other._hasBits0;
      _hasBits1 = other._hasBits1;
      roomName_ = other.roomName_;
      blind_ = other.blind_;
      minBuyin_ = other.minBuyin_;
      maxBuyin_ = other.maxBuyin_;
      minStack_ = other.minStack_;
      feepoint_ = other.feepoint_;
      feecap_ = other.feecap_;
      creatorUserId_ = other.creatorUserId_;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      superLeagueid_ = other.superLeagueid_;
      superLeagueType_ = other.superLeagueType_;
      operationTime_ = other.operationTime_;
      roomTime_ = other.roomTime_;
      seatNum_ = other.seatNum_;
      autoStart_ = other.autoStart_;
      roomType_ = other.roomType_;
      gameMode_ = other.gameMode_;
      timezone_ = other.timezone_;
      roomid_ = other.roomid_;
      derivedRoomid_ = other.derivedRoomid_;
      isAutoDelayRoomOver_ = other.isAutoDelayRoomOver_;
      autoDelayRoomOverTimes_ = other.autoDelayRoomOverTimes_;
      isAutoCreateRoom_ = other.isAutoCreateRoom_;
      moduleid_ = other.moduleid_;
      multiOpid_ = other.multiOpid_;
      canUse_ = other.canUse_;
      gpsLimit_ = other.gpsLimit_;
      ipLimit_ = other.ipLimit_;
      forbiddenChat_ = other.forbiddenChat_;
      passwdLimit_ = other.passwdLimit_;
      isCaptcha_ = other.isCaptcha_;
      isBanPc_ = other.isBanPc_;
      isCheckMail_ = other.isCheckMail_;
      rateSetting_ = other.rateSetting_ != null ? other.rateSetting_.Clone() : null;
      forbiddenChatMode_ = other.forbiddenChatMode_;
      calltimeMinutes_ = other.calltimeMinutes_;
      banClub_ = other.banClub_.Clone();
      banCountry_ = other.banCountry_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatePusoyRoomREQ Clone() {
      return new CreatePusoyRoomREQ(this);
    }

    /// <summary>Field number for the "room_name" field.</summary>
    public const int RoomNameFieldNumber = 1;
    private readonly static string RoomNameDefaultValue = "";

    private string roomName_;
    /// <summary>
    ///房間名稱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomName {
      get { return roomName_ ?? RoomNameDefaultValue; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "room_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomName {
      get { return roomName_ != null; }
    }
    /// <summary>Clears the value of the "room_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomName() {
      roomName_ = null;
    }

    /// <summary>Field number for the "blind" field.</summary>
    public const int BlindFieldNumber = 2;
    private readonly static long BlindDefaultValue = 0L;

    private long blind_;
    /// <summary>
    ///買入相關
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Blind {
      get { if ((_hasBits0 & 1) != 0) { return blind_; } else { return BlindDefaultValue; } }
      set {
        _hasBits0 |= 1;
        blind_ = value;
      }
    }
    /// <summary>Gets whether the "blind" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlind {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "blind" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlind() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "min_buyin" field.</summary>
    public const int MinBuyinFieldNumber = 3;
    private readonly static long MinBuyinDefaultValue = 0L;

    private long minBuyin_;
    /// <summary>
    ///最小買入
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinBuyin {
      get { if ((_hasBits0 & 2) != 0) { return minBuyin_; } else { return MinBuyinDefaultValue; } }
      set {
        _hasBits0 |= 2;
        minBuyin_ = value;
      }
    }
    /// <summary>Gets whether the "min_buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinBuyin {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "min_buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinBuyin() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "max_buyin" field.</summary>
    public const int MaxBuyinFieldNumber = 4;
    private readonly static long MaxBuyinDefaultValue = 0L;

    private long maxBuyin_;
    /// <summary>
    ///最大買入
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaxBuyin {
      get { if ((_hasBits0 & 4) != 0) { return maxBuyin_; } else { return MaxBuyinDefaultValue; } }
      set {
        _hasBits0 |= 4;
        maxBuyin_ = value;
      }
    }
    /// <summary>Gets whether the "max_buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxBuyin {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "max_buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxBuyin() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "min_stack" field.</summary>
    public const int MinStackFieldNumber = 5;
    private readonly static long MinStackDefaultValue = 0L;

    private long minStack_;
    /// <summary>
    ///籌碼最底須保持在min_stack以上，否則跳出彈窗要求補碼
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinStack {
      get { if ((_hasBits0 & 8) != 0) { return minStack_; } else { return MinStackDefaultValue; } }
      set {
        _hasBits0 |= 8;
        minStack_ = value;
      }
    }
    /// <summary>Gets whether the "min_stack" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinStack {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "min_stack" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinStack() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "feepoint" field.</summary>
    public const int FeepointFieldNumber = 6;
    private readonly static int FeepointDefaultValue = 0;

    private int feepoint_;
    /// <summary>
    ///服務費相關
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Feepoint {
      get { if ((_hasBits0 & 16) != 0) { return feepoint_; } else { return FeepointDefaultValue; } }
      set {
        _hasBits0 |= 16;
        feepoint_ = value;
      }
    }
    /// <summary>Gets whether the "feepoint" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFeepoint {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "feepoint" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFeepoint() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "feecap" field.</summary>
    public const int FeecapFieldNumber = 7;
    private readonly static int FeecapDefaultValue = 0;

    private int feecap_;
    /// <summary>
    ///服務費封頂
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Feecap {
      get { if ((_hasBits0 & 32) != 0) { return feecap_; } else { return FeecapDefaultValue; } }
      set {
        _hasBits0 |= 32;
        feecap_ = value;
      }
    }
    /// <summary>Gets whether the "feecap" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFeecap {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "feecap" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFeecap() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "creator_user_id" field.</summary>
    public const int CreatorUserIdFieldNumber = 8;
    private readonly static long CreatorUserIdDefaultValue = 0L;

    private long creatorUserId_;
    /// <summary>
    ///創辦人、俱樂部屬性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CreatorUserId {
      get { if ((_hasBits0 & 64) != 0) { return creatorUserId_; } else { return CreatorUserIdDefaultValue; } }
      set {
        _hasBits0 |= 64;
        creatorUserId_ = value;
      }
    }
    /// <summary>Gets whether the "creator_user_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCreatorUserId {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "creator_user_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCreatorUserId() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 9;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    /// <summary>
    ///牌桌所屬俱樂部
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 10;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    /// <summary>
    ///牌桌所屬聯盟
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 128) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 128;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "super_leagueid" field.</summary>
    public const int SuperLeagueidFieldNumber = 11;
    private readonly static int SuperLeagueidDefaultValue = 0;

    private int superLeagueid_;
    /// <summary>
    ///牌桌所屬超級聯盟
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueid {
      get { if ((_hasBits0 & 256) != 0) { return superLeagueid_; } else { return SuperLeagueidDefaultValue; } }
      set {
        _hasBits0 |= 256;
        superLeagueid_ = value;
      }
    }
    /// <summary>Gets whether the "super_leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueid {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "super_leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueid() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "super_league_type" field.</summary>
    public const int SuperLeagueTypeFieldNumber = 12;
    private readonly static int SuperLeagueTypeDefaultValue = 0;

    private int superLeagueType_;
    /// <summary>
    ///1表示非PPST
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueType {
      get { if ((_hasBits0 & 512) != 0) { return superLeagueType_; } else { return SuperLeagueTypeDefaultValue; } }
      set {
        _hasBits0 |= 512;
        superLeagueType_ = value;
      }
    }
    /// <summary>Gets whether the "super_league_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueType {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "super_league_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueType() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "operation_time" field.</summary>
    public const int OperationTimeFieldNumber = 13;
    private readonly static int OperationTimeDefaultValue = 0;

    private int operationTime_;
    /// <summary>
    ///房間屬性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OperationTime {
      get { if ((_hasBits0 & 1024) != 0) { return operationTime_; } else { return OperationTimeDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        operationTime_ = value;
      }
    }
    /// <summary>Gets whether the "operation_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOperationTime {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "operation_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOperationTime() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "room_time" field.</summary>
    public const int RoomTimeFieldNumber = 14;
    private readonly static int RoomTimeDefaultValue = 0;

    private int roomTime_;
    /// <summary>
    ///房間存活時間
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoomTime {
      get { if ((_hasBits0 & 2048) != 0) { return roomTime_; } else { return RoomTimeDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        roomTime_ = value;
      }
    }
    /// <summary>Gets whether the "room_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomTime {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "room_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomTime() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "seat_num" field.</summary>
    public const int SeatNumFieldNumber = 15;
    private readonly static int SeatNumDefaultValue = 0;

    private int seatNum_;
    /// <summary>
    ///座位數量，最大只支持4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SeatNum {
      get { if ((_hasBits0 & 4096) != 0) { return seatNum_; } else { return SeatNumDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        seatNum_ = value;
      }
    }
    /// <summary>Gets whether the "seat_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatNum {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "seat_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatNum() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "auto_start" field.</summary>
    public const int AutoStartFieldNumber = 16;
    private readonly static int AutoStartDefaultValue = 0;

    private int autoStart_;
    /// <summary>
    ///幾個人坐下可自動開始，-1表示需要手動開始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AutoStart {
      get { if ((_hasBits0 & 8192) != 0) { return autoStart_; } else { return AutoStartDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        autoStart_ = value;
      }
    }
    /// <summary>Gets whether the "auto_start" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAutoStart {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "auto_start" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAutoStart() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "room_type" field.</summary>
    public const int RoomTypeFieldNumber = 17;
    private readonly static global::Texas.Protocol.RoomType RoomTypeDefaultValue = global::Texas.Protocol.RoomType.TestRoom;

    private global::Texas.Protocol.RoomType roomType_;
    /// <summary>
    ///房間模式，Pusoy = 14
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomType RoomType {
      get { if ((_hasBits0 & 16384) != 0) { return roomType_; } else { return RoomTypeDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        roomType_ = value;
      }
    }
    /// <summary>Gets whether the "room_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomType {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "room_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomType() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "game_mode" field.</summary>
    public const int GameModeFieldNumber = 18;
    private readonly static global::Texas.Protocol.GameMode GameModeDefaultValue = global::Texas.Protocol.GameMode.Regular;

    private global::Texas.Protocol.GameMode gameMode_;
    /// <summary>
    ///Pusoy = 0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.GameMode GameMode {
      get { if ((_hasBits0 & 32768) != 0) { return gameMode_; } else { return GameModeDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        gameMode_ = value;
      }
    }
    /// <summary>Gets whether the "game_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameMode {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "game_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameMode() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "timezone" field.</summary>
    public const int TimezoneFieldNumber = 19;
    private readonly static int TimezoneDefaultValue = 0;

    private int timezone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Timezone {
      get { if ((_hasBits0 & 65536) != 0) { return timezone_; } else { return TimezoneDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        timezone_ = value;
      }
    }
    /// <summary>Gets whether the "timezone" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimezone {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "timezone" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimezone() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 20;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    /// <summary>
    ///由伺服器填寫
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 131072) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "derived_roomid" field.</summary>
    public const int DerivedRoomidFieldNumber = 21;
    private readonly static int DerivedRoomidDefaultValue = 0;

    private int derivedRoomid_;
    /// <summary>
    ///自動開桌ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DerivedRoomid {
      get { if ((_hasBits0 & 262144) != 0) { return derivedRoomid_; } else { return DerivedRoomidDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        derivedRoomid_ = value;
      }
    }
    /// <summary>Gets whether the "derived_roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDerivedRoomid {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "derived_roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDerivedRoomid() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "is_auto_delay_room_over" field.</summary>
    public const int IsAutoDelayRoomOverFieldNumber = 22;
    private readonly static bool IsAutoDelayRoomOverDefaultValue = false;

    private bool isAutoDelayRoomOver_;
    /// <summary>
    ///自動延時、開桌相關
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAutoDelayRoomOver {
      get { if ((_hasBits0 & 524288) != 0) { return isAutoDelayRoomOver_; } else { return IsAutoDelayRoomOverDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        isAutoDelayRoomOver_ = value;
      }
    }
    /// <summary>Gets whether the "is_auto_delay_room_over" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsAutoDelayRoomOver {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "is_auto_delay_room_over" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsAutoDelayRoomOver() {
      _hasBits0 &= ~524288;
    }

    /// <summary>Field number for the "auto_delay_room_over_times" field.</summary>
    public const int AutoDelayRoomOverTimesFieldNumber = 23;
    private readonly static int AutoDelayRoomOverTimesDefaultValue = 0;

    private int autoDelayRoomOverTimes_;
    /// <summary>
    ///自动延时次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AutoDelayRoomOverTimes {
      get { if ((_hasBits0 & 1048576) != 0) { return autoDelayRoomOverTimes_; } else { return AutoDelayRoomOverTimesDefaultValue; } }
      set {
        _hasBits0 |= 1048576;
        autoDelayRoomOverTimes_ = value;
      }
    }
    /// <summary>Gets whether the "auto_delay_room_over_times" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAutoDelayRoomOverTimes {
      get { return (_hasBits0 & 1048576) != 0; }
    }
    /// <summary>Clears the value of the "auto_delay_room_over_times" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAutoDelayRoomOverTimes() {
      _hasBits0 &= ~1048576;
    }

    /// <summary>Field number for the "is_auto_create_room" field.</summary>
    public const int IsAutoCreateRoomFieldNumber = 24;
    private readonly static bool IsAutoCreateRoomDefaultValue = false;

    private bool isAutoCreateRoom_;
    /// <summary>
    ///是否自动开桌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAutoCreateRoom {
      get { if ((_hasBits0 & 2097152) != 0) { return isAutoCreateRoom_; } else { return IsAutoCreateRoomDefaultValue; } }
      set {
        _hasBits0 |= 2097152;
        isAutoCreateRoom_ = value;
      }
    }
    /// <summary>Gets whether the "is_auto_create_room" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsAutoCreateRoom {
      get { return (_hasBits0 & 2097152) != 0; }
    }
    /// <summary>Clears the value of the "is_auto_create_room" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsAutoCreateRoom() {
      _hasBits0 &= ~2097152;
    }

    /// <summary>Field number for the "moduleid" field.</summary>
    public const int ModuleidFieldNumber = 25;
    private readonly static long ModuleidDefaultValue = 0L;

    private long moduleid_;
    /// <summary>
    ///模板??
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Moduleid {
      get { if ((_hasBits0 & 4194304) != 0) { return moduleid_; } else { return ModuleidDefaultValue; } }
      set {
        _hasBits0 |= 4194304;
        moduleid_ = value;
      }
    }
    /// <summary>Gets whether the "moduleid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModuleid {
      get { return (_hasBits0 & 4194304) != 0; }
    }
    /// <summary>Clears the value of the "moduleid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModuleid() {
      _hasBits0 &= ~4194304;
    }

    /// <summary>Field number for the "multi_opid" field.</summary>
    public const int MultiOpidFieldNumber = 26;
    private readonly static string MultiOpidDefaultValue = "";

    private string multiOpid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MultiOpid {
      get { return multiOpid_ ?? MultiOpidDefaultValue; }
      set {
        multiOpid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "multi_opid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMultiOpid {
      get { return multiOpid_ != null; }
    }
    /// <summary>Clears the value of the "multi_opid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMultiOpid() {
      multiOpid_ = null;
    }

    /// <summary>Field number for the "can_use" field.</summary>
    public const int CanUseFieldNumber = 27;
    private readonly static bool CanUseDefaultValue = false;

    private bool canUse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanUse {
      get { if ((_hasBits0 & 8388608) != 0) { return canUse_; } else { return CanUseDefaultValue; } }
      set {
        _hasBits0 |= 8388608;
        canUse_ = value;
      }
    }
    /// <summary>Gets whether the "can_use" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCanUse {
      get { return (_hasBits0 & 8388608) != 0; }
    }
    /// <summary>Clears the value of the "can_use" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCanUse() {
      _hasBits0 &= ~8388608;
    }

    /// <summary>Field number for the "gps_limit" field.</summary>
    public const int GpsLimitFieldNumber = 28;
    private readonly static bool GpsLimitDefaultValue = false;

    private bool gpsLimit_;
    /// <summary>
    ///限制功能
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GpsLimit {
      get { if ((_hasBits0 & 16777216) != 0) { return gpsLimit_; } else { return GpsLimitDefaultValue; } }
      set {
        _hasBits0 |= 16777216;
        gpsLimit_ = value;
      }
    }
    /// <summary>Gets whether the "gps_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpsLimit {
      get { return (_hasBits0 & 16777216) != 0; }
    }
    /// <summary>Clears the value of the "gps_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpsLimit() {
      _hasBits0 &= ~16777216;
    }

    /// <summary>Field number for the "ip_limit" field.</summary>
    public const int IpLimitFieldNumber = 29;
    private readonly static bool IpLimitDefaultValue = false;

    private bool ipLimit_;
    /// <summary>
    ///IP限制
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IpLimit {
      get { if ((_hasBits0 & 33554432) != 0) { return ipLimit_; } else { return IpLimitDefaultValue; } }
      set {
        _hasBits0 |= 33554432;
        ipLimit_ = value;
      }
    }
    /// <summary>Gets whether the "ip_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIpLimit {
      get { return (_hasBits0 & 33554432) != 0; }
    }
    /// <summary>Clears the value of the "ip_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIpLimit() {
      _hasBits0 &= ~33554432;
    }

    /// <summary>Field number for the "forbidden_chat" field.</summary>
    public const int ForbiddenChatFieldNumber = 30;
    private readonly static bool ForbiddenChatDefaultValue = false;

    private bool forbiddenChat_;
    /// <summary>
    ///是否禁言
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ForbiddenChat {
      get { if ((_hasBits0 & 67108864) != 0) { return forbiddenChat_; } else { return ForbiddenChatDefaultValue; } }
      set {
        _hasBits0 |= 67108864;
        forbiddenChat_ = value;
      }
    }
    /// <summary>Gets whether the "forbidden_chat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForbiddenChat {
      get { return (_hasBits0 & 67108864) != 0; }
    }
    /// <summary>Clears the value of the "forbidden_chat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForbiddenChat() {
      _hasBits0 &= ~67108864;
    }

    /// <summary>Field number for the "passwd_limit" field.</summary>
    public const int PasswdLimitFieldNumber = 31;
    private readonly static bool PasswdLimitDefaultValue = false;

    private bool passwdLimit_;
    /// <summary>
    ///是否密码桌,与授权买入互斥
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PasswdLimit {
      get { if ((_hasBits0 & 134217728) != 0) { return passwdLimit_; } else { return PasswdLimitDefaultValue; } }
      set {
        _hasBits0 |= 134217728;
        passwdLimit_ = value;
      }
    }
    /// <summary>Gets whether the "passwd_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPasswdLimit {
      get { return (_hasBits0 & 134217728) != 0; }
    }
    /// <summary>Clears the value of the "passwd_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPasswdLimit() {
      _hasBits0 &= ~134217728;
    }

    /// <summary>Field number for the "is_captcha" field.</summary>
    public const int IsCaptchaFieldNumber = 32;
    private readonly static bool IsCaptchaDefaultValue = false;

    private bool isCaptcha_;
    /// <summary>
    ///是否人机校验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCaptcha {
      get { if ((_hasBits0 & 268435456) != 0) { return isCaptcha_; } else { return IsCaptchaDefaultValue; } }
      set {
        _hasBits0 |= 268435456;
        isCaptcha_ = value;
      }
    }
    /// <summary>Gets whether the "is_captcha" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsCaptcha {
      get { return (_hasBits0 & 268435456) != 0; }
    }
    /// <summary>Clears the value of the "is_captcha" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsCaptcha() {
      _hasBits0 &= ~268435456;
    }

    /// <summary>Field number for the "is_ban_pc" field.</summary>
    public const int IsBanPcFieldNumber = 33;
    private readonly static bool IsBanPcDefaultValue = false;

    private bool isBanPc_;
    /// <summary>
    ///禁止PC玩家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBanPc {
      get { if ((_hasBits0 & 536870912) != 0) { return isBanPc_; } else { return IsBanPcDefaultValue; } }
      set {
        _hasBits0 |= 536870912;
        isBanPc_ = value;
      }
    }
    /// <summary>Gets whether the "is_ban_pc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsBanPc {
      get { return (_hasBits0 & 536870912) != 0; }
    }
    /// <summary>Clears the value of the "is_ban_pc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsBanPc() {
      _hasBits0 &= ~536870912;
    }

    /// <summary>Field number for the "is_check_mail" field.</summary>
    public const int IsCheckMailFieldNumber = 34;
    private readonly static bool IsCheckMailDefaultValue = false;

    private bool isCheckMail_;
    /// <summary>
    ///需要進行email檢查
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCheckMail {
      get { if ((_hasBits0 & 1073741824) != 0) { return isCheckMail_; } else { return IsCheckMailDefaultValue; } }
      set {
        _hasBits0 |= 1073741824;
        isCheckMail_ = value;
      }
    }
    /// <summary>Gets whether the "is_check_mail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsCheckMail {
      get { return (_hasBits0 & 1073741824) != 0; }
    }
    /// <summary>Clears the value of the "is_check_mail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsCheckMail() {
      _hasBits0 &= ~1073741824;
    }

    /// <summary>Field number for the "rate_setting" field.</summary>
    public const int RateSettingFieldNumber = 35;
    private global::Texas.Protocol.PusoyRateSetting rateSetting_;
    /// <summary>
    ///倍率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PusoyRateSetting RateSetting {
      get { return rateSetting_; }
      set {
        rateSetting_ = value;
      }
    }

    /// <summary>Field number for the "forbidden_chat_mode" field.</summary>
    public const int ForbiddenChatModeFieldNumber = 36;
    private readonly static int ForbiddenChatModeDefaultValue = 0;

    private int forbiddenChatMode_;
    /// <summary>
    ///0: 全體禁言 1:看客禁言
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ForbiddenChatMode {
      get { if ((_hasBits0 & -2147483648) != 0) { return forbiddenChatMode_; } else { return ForbiddenChatModeDefaultValue; } }
      set {
        _hasBits0 |= -2147483648;
        forbiddenChatMode_ = value;
      }
    }
    /// <summary>Gets whether the "forbidden_chat_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForbiddenChatMode {
      get { return (_hasBits0 & -2147483648) != 0; }
    }
    /// <summary>Clears the value of the "forbidden_chat_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForbiddenChatMode() {
      _hasBits0 &= ~-2147483648;
    }

    /// <summary>Field number for the "calltime_minutes" field.</summary>
    public const int CalltimeMinutesFieldNumber = 37;
    private readonly static int CalltimeMinutesDefaultValue = 0;

    private int calltimeMinutes_;
    /// <summary>
    ///Calltime時間
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalltimeMinutes {
      get { if ((_hasBits1 & 1) != 0) { return calltimeMinutes_; } else { return CalltimeMinutesDefaultValue; } }
      set {
        _hasBits1 |= 1;
        calltimeMinutes_ = value;
      }
    }
    /// <summary>Gets whether the "calltime_minutes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCalltimeMinutes {
      get { return (_hasBits1 & 1) != 0; }
    }
    /// <summary>Clears the value of the "calltime_minutes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCalltimeMinutes() {
      _hasBits1 &= ~1;
    }

    /// <summary>Field number for the "ban_club" field.</summary>
    public const int BanClubFieldNumber = 38;
    private static readonly pb::FieldCodec<int> _repeated_banClub_codec
        = pb::FieldCodec.ForInt32(306);
    private readonly pbc::RepeatedField<int> banClub_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// restriction for clubs and regions
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> BanClub {
      get { return banClub_; }
    }

    /// <summary>Field number for the "ban_country" field.</summary>
    public const int BanCountryFieldNumber = 39;
    private static readonly pb::FieldCodec<string> _repeated_banCountry_codec
        = pb::FieldCodec.ForString(314);
    private readonly pbc::RepeatedField<string> banCountry_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 限制注册地为某些国家的用户不能看到和加入牌桌，缩写
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> BanCountry {
      get { return banCountry_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatePusoyRoomREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatePusoyRoomREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomName != other.RoomName) return false;
      if (Blind != other.Blind) return false;
      if (MinBuyin != other.MinBuyin) return false;
      if (MaxBuyin != other.MaxBuyin) return false;
      if (MinStack != other.MinStack) return false;
      if (Feepoint != other.Feepoint) return false;
      if (Feecap != other.Feecap) return false;
      if (CreatorUserId != other.CreatorUserId) return false;
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (SuperLeagueid != other.SuperLeagueid) return false;
      if (SuperLeagueType != other.SuperLeagueType) return false;
      if (OperationTime != other.OperationTime) return false;
      if (RoomTime != other.RoomTime) return false;
      if (SeatNum != other.SeatNum) return false;
      if (AutoStart != other.AutoStart) return false;
      if (RoomType != other.RoomType) return false;
      if (GameMode != other.GameMode) return false;
      if (Timezone != other.Timezone) return false;
      if (Roomid != other.Roomid) return false;
      if (DerivedRoomid != other.DerivedRoomid) return false;
      if (IsAutoDelayRoomOver != other.IsAutoDelayRoomOver) return false;
      if (AutoDelayRoomOverTimes != other.AutoDelayRoomOverTimes) return false;
      if (IsAutoCreateRoom != other.IsAutoCreateRoom) return false;
      if (Moduleid != other.Moduleid) return false;
      if (MultiOpid != other.MultiOpid) return false;
      if (CanUse != other.CanUse) return false;
      if (GpsLimit != other.GpsLimit) return false;
      if (IpLimit != other.IpLimit) return false;
      if (ForbiddenChat != other.ForbiddenChat) return false;
      if (PasswdLimit != other.PasswdLimit) return false;
      if (IsCaptcha != other.IsCaptcha) return false;
      if (IsBanPc != other.IsBanPc) return false;
      if (IsCheckMail != other.IsCheckMail) return false;
      if (!object.Equals(RateSetting, other.RateSetting)) return false;
      if (ForbiddenChatMode != other.ForbiddenChatMode) return false;
      if (CalltimeMinutes != other.CalltimeMinutes) return false;
      if(!banClub_.Equals(other.banClub_)) return false;
      if(!banCountry_.Equals(other.banCountry_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomName) hash ^= RoomName.GetHashCode();
      if (HasBlind) hash ^= Blind.GetHashCode();
      if (HasMinBuyin) hash ^= MinBuyin.GetHashCode();
      if (HasMaxBuyin) hash ^= MaxBuyin.GetHashCode();
      if (HasMinStack) hash ^= MinStack.GetHashCode();
      if (HasFeepoint) hash ^= Feepoint.GetHashCode();
      if (HasFeecap) hash ^= Feecap.GetHashCode();
      if (HasCreatorUserId) hash ^= CreatorUserId.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasSuperLeagueid) hash ^= SuperLeagueid.GetHashCode();
      if (HasSuperLeagueType) hash ^= SuperLeagueType.GetHashCode();
      if (HasOperationTime) hash ^= OperationTime.GetHashCode();
      if (HasRoomTime) hash ^= RoomTime.GetHashCode();
      if (HasSeatNum) hash ^= SeatNum.GetHashCode();
      if (HasAutoStart) hash ^= AutoStart.GetHashCode();
      if (HasRoomType) hash ^= RoomType.GetHashCode();
      if (HasGameMode) hash ^= GameMode.GetHashCode();
      if (HasTimezone) hash ^= Timezone.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasDerivedRoomid) hash ^= DerivedRoomid.GetHashCode();
      if (HasIsAutoDelayRoomOver) hash ^= IsAutoDelayRoomOver.GetHashCode();
      if (HasAutoDelayRoomOverTimes) hash ^= AutoDelayRoomOverTimes.GetHashCode();
      if (HasIsAutoCreateRoom) hash ^= IsAutoCreateRoom.GetHashCode();
      if (HasModuleid) hash ^= Moduleid.GetHashCode();
      if (HasMultiOpid) hash ^= MultiOpid.GetHashCode();
      if (HasCanUse) hash ^= CanUse.GetHashCode();
      if (HasGpsLimit) hash ^= GpsLimit.GetHashCode();
      if (HasIpLimit) hash ^= IpLimit.GetHashCode();
      if (HasForbiddenChat) hash ^= ForbiddenChat.GetHashCode();
      if (HasPasswdLimit) hash ^= PasswdLimit.GetHashCode();
      if (HasIsCaptcha) hash ^= IsCaptcha.GetHashCode();
      if (HasIsBanPc) hash ^= IsBanPc.GetHashCode();
      if (HasIsCheckMail) hash ^= IsCheckMail.GetHashCode();
      if (rateSetting_ != null) hash ^= RateSetting.GetHashCode();
      if (HasForbiddenChatMode) hash ^= ForbiddenChatMode.GetHashCode();
      if (HasCalltimeMinutes) hash ^= CalltimeMinutes.GetHashCode();
      hash ^= banClub_.GetHashCode();
      hash ^= banCountry_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomName) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (HasBlind) {
        output.WriteRawTag(16);
        output.WriteInt64(Blind);
      }
      if (HasMinBuyin) {
        output.WriteRawTag(24);
        output.WriteInt64(MinBuyin);
      }
      if (HasMaxBuyin) {
        output.WriteRawTag(32);
        output.WriteInt64(MaxBuyin);
      }
      if (HasMinStack) {
        output.WriteRawTag(40);
        output.WriteInt64(MinStack);
      }
      if (HasFeepoint) {
        output.WriteRawTag(48);
        output.WriteInt32(Feepoint);
      }
      if (HasFeecap) {
        output.WriteRawTag(56);
        output.WriteInt32(Feecap);
      }
      if (HasCreatorUserId) {
        output.WriteRawTag(64);
        output.WriteInt64(CreatorUserId);
      }
      if (HasClubid) {
        output.WriteRawTag(74);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(80);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(88);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasSuperLeagueType) {
        output.WriteRawTag(96);
        output.WriteInt32(SuperLeagueType);
      }
      if (HasOperationTime) {
        output.WriteRawTag(104);
        output.WriteInt32(OperationTime);
      }
      if (HasRoomTime) {
        output.WriteRawTag(112);
        output.WriteInt32(RoomTime);
      }
      if (HasSeatNum) {
        output.WriteRawTag(120);
        output.WriteInt32(SeatNum);
      }
      if (HasAutoStart) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(AutoStart);
      }
      if (HasRoomType) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) RoomType);
      }
      if (HasGameMode) {
        output.WriteRawTag(144, 1);
        output.WriteEnum((int) GameMode);
      }
      if (HasTimezone) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(Timezone);
      }
      if (HasRoomid) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(Roomid);
      }
      if (HasDerivedRoomid) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(DerivedRoomid);
      }
      if (HasIsAutoDelayRoomOver) {
        output.WriteRawTag(176, 1);
        output.WriteBool(IsAutoDelayRoomOver);
      }
      if (HasAutoDelayRoomOverTimes) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(AutoDelayRoomOverTimes);
      }
      if (HasIsAutoCreateRoom) {
        output.WriteRawTag(192, 1);
        output.WriteBool(IsAutoCreateRoom);
      }
      if (HasModuleid) {
        output.WriteRawTag(200, 1);
        output.WriteInt64(Moduleid);
      }
      if (HasMultiOpid) {
        output.WriteRawTag(210, 1);
        output.WriteString(MultiOpid);
      }
      if (HasCanUse) {
        output.WriteRawTag(216, 1);
        output.WriteBool(CanUse);
      }
      if (HasGpsLimit) {
        output.WriteRawTag(224, 1);
        output.WriteBool(GpsLimit);
      }
      if (HasIpLimit) {
        output.WriteRawTag(232, 1);
        output.WriteBool(IpLimit);
      }
      if (HasForbiddenChat) {
        output.WriteRawTag(240, 1);
        output.WriteBool(ForbiddenChat);
      }
      if (HasPasswdLimit) {
        output.WriteRawTag(248, 1);
        output.WriteBool(PasswdLimit);
      }
      if (HasIsCaptcha) {
        output.WriteRawTag(128, 2);
        output.WriteBool(IsCaptcha);
      }
      if (HasIsBanPc) {
        output.WriteRawTag(136, 2);
        output.WriteBool(IsBanPc);
      }
      if (HasIsCheckMail) {
        output.WriteRawTag(144, 2);
        output.WriteBool(IsCheckMail);
      }
      if (rateSetting_ != null) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(RateSetting);
      }
      if (HasForbiddenChatMode) {
        output.WriteRawTag(160, 2);
        output.WriteInt32(ForbiddenChatMode);
      }
      if (HasCalltimeMinutes) {
        output.WriteRawTag(168, 2);
        output.WriteInt32(CalltimeMinutes);
      }
      banClub_.WriteTo(output, _repeated_banClub_codec);
      banCountry_.WriteTo(output, _repeated_banCountry_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomName) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (HasBlind) {
        output.WriteRawTag(16);
        output.WriteInt64(Blind);
      }
      if (HasMinBuyin) {
        output.WriteRawTag(24);
        output.WriteInt64(MinBuyin);
      }
      if (HasMaxBuyin) {
        output.WriteRawTag(32);
        output.WriteInt64(MaxBuyin);
      }
      if (HasMinStack) {
        output.WriteRawTag(40);
        output.WriteInt64(MinStack);
      }
      if (HasFeepoint) {
        output.WriteRawTag(48);
        output.WriteInt32(Feepoint);
      }
      if (HasFeecap) {
        output.WriteRawTag(56);
        output.WriteInt32(Feecap);
      }
      if (HasCreatorUserId) {
        output.WriteRawTag(64);
        output.WriteInt64(CreatorUserId);
      }
      if (HasClubid) {
        output.WriteRawTag(74);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(80);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(88);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasSuperLeagueType) {
        output.WriteRawTag(96);
        output.WriteInt32(SuperLeagueType);
      }
      if (HasOperationTime) {
        output.WriteRawTag(104);
        output.WriteInt32(OperationTime);
      }
      if (HasRoomTime) {
        output.WriteRawTag(112);
        output.WriteInt32(RoomTime);
      }
      if (HasSeatNum) {
        output.WriteRawTag(120);
        output.WriteInt32(SeatNum);
      }
      if (HasAutoStart) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(AutoStart);
      }
      if (HasRoomType) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) RoomType);
      }
      if (HasGameMode) {
        output.WriteRawTag(144, 1);
        output.WriteEnum((int) GameMode);
      }
      if (HasTimezone) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(Timezone);
      }
      if (HasRoomid) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(Roomid);
      }
      if (HasDerivedRoomid) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(DerivedRoomid);
      }
      if (HasIsAutoDelayRoomOver) {
        output.WriteRawTag(176, 1);
        output.WriteBool(IsAutoDelayRoomOver);
      }
      if (HasAutoDelayRoomOverTimes) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(AutoDelayRoomOverTimes);
      }
      if (HasIsAutoCreateRoom) {
        output.WriteRawTag(192, 1);
        output.WriteBool(IsAutoCreateRoom);
      }
      if (HasModuleid) {
        output.WriteRawTag(200, 1);
        output.WriteInt64(Moduleid);
      }
      if (HasMultiOpid) {
        output.WriteRawTag(210, 1);
        output.WriteString(MultiOpid);
      }
      if (HasCanUse) {
        output.WriteRawTag(216, 1);
        output.WriteBool(CanUse);
      }
      if (HasGpsLimit) {
        output.WriteRawTag(224, 1);
        output.WriteBool(GpsLimit);
      }
      if (HasIpLimit) {
        output.WriteRawTag(232, 1);
        output.WriteBool(IpLimit);
      }
      if (HasForbiddenChat) {
        output.WriteRawTag(240, 1);
        output.WriteBool(ForbiddenChat);
      }
      if (HasPasswdLimit) {
        output.WriteRawTag(248, 1);
        output.WriteBool(PasswdLimit);
      }
      if (HasIsCaptcha) {
        output.WriteRawTag(128, 2);
        output.WriteBool(IsCaptcha);
      }
      if (HasIsBanPc) {
        output.WriteRawTag(136, 2);
        output.WriteBool(IsBanPc);
      }
      if (HasIsCheckMail) {
        output.WriteRawTag(144, 2);
        output.WriteBool(IsCheckMail);
      }
      if (rateSetting_ != null) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(RateSetting);
      }
      if (HasForbiddenChatMode) {
        output.WriteRawTag(160, 2);
        output.WriteInt32(ForbiddenChatMode);
      }
      if (HasCalltimeMinutes) {
        output.WriteRawTag(168, 2);
        output.WriteInt32(CalltimeMinutes);
      }
      banClub_.WriteTo(ref output, _repeated_banClub_codec);
      banCountry_.WriteTo(ref output, _repeated_banCountry_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (HasBlind) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Blind);
      }
      if (HasMinBuyin) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinBuyin);
      }
      if (HasMaxBuyin) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxBuyin);
      }
      if (HasMinStack) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinStack);
      }
      if (HasFeepoint) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Feepoint);
      }
      if (HasFeecap) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Feecap);
      }
      if (HasCreatorUserId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreatorUserId);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasSuperLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueid);
      }
      if (HasSuperLeagueType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueType);
      }
      if (HasOperationTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OperationTime);
      }
      if (HasRoomTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomTime);
      }
      if (HasSeatNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SeatNum);
      }
      if (HasAutoStart) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AutoStart);
      }
      if (HasRoomType) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) RoomType);
      }
      if (HasGameMode) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
      }
      if (HasTimezone) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Timezone);
      }
      if (HasRoomid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasDerivedRoomid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DerivedRoomid);
      }
      if (HasIsAutoDelayRoomOver) {
        size += 2 + 1;
      }
      if (HasAutoDelayRoomOverTimes) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AutoDelayRoomOverTimes);
      }
      if (HasIsAutoCreateRoom) {
        size += 2 + 1;
      }
      if (HasModuleid) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Moduleid);
      }
      if (HasMultiOpid) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MultiOpid);
      }
      if (HasCanUse) {
        size += 2 + 1;
      }
      if (HasGpsLimit) {
        size += 2 + 1;
      }
      if (HasIpLimit) {
        size += 2 + 1;
      }
      if (HasForbiddenChat) {
        size += 2 + 1;
      }
      if (HasPasswdLimit) {
        size += 2 + 1;
      }
      if (HasIsCaptcha) {
        size += 2 + 1;
      }
      if (HasIsBanPc) {
        size += 2 + 1;
      }
      if (HasIsCheckMail) {
        size += 2 + 1;
      }
      if (rateSetting_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RateSetting);
      }
      if (HasForbiddenChatMode) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ForbiddenChatMode);
      }
      if (HasCalltimeMinutes) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CalltimeMinutes);
      }
      size += banClub_.CalculateSize(_repeated_banClub_codec);
      size += banCountry_.CalculateSize(_repeated_banCountry_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatePusoyRoomREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomName) {
        RoomName = other.RoomName;
      }
      if (other.HasBlind) {
        Blind = other.Blind;
      }
      if (other.HasMinBuyin) {
        MinBuyin = other.MinBuyin;
      }
      if (other.HasMaxBuyin) {
        MaxBuyin = other.MaxBuyin;
      }
      if (other.HasMinStack) {
        MinStack = other.MinStack;
      }
      if (other.HasFeepoint) {
        Feepoint = other.Feepoint;
      }
      if (other.HasFeecap) {
        Feecap = other.Feecap;
      }
      if (other.HasCreatorUserId) {
        CreatorUserId = other.CreatorUserId;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasSuperLeagueid) {
        SuperLeagueid = other.SuperLeagueid;
      }
      if (other.HasSuperLeagueType) {
        SuperLeagueType = other.SuperLeagueType;
      }
      if (other.HasOperationTime) {
        OperationTime = other.OperationTime;
      }
      if (other.HasRoomTime) {
        RoomTime = other.RoomTime;
      }
      if (other.HasSeatNum) {
        SeatNum = other.SeatNum;
      }
      if (other.HasAutoStart) {
        AutoStart = other.AutoStart;
      }
      if (other.HasRoomType) {
        RoomType = other.RoomType;
      }
      if (other.HasGameMode) {
        GameMode = other.GameMode;
      }
      if (other.HasTimezone) {
        Timezone = other.Timezone;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasDerivedRoomid) {
        DerivedRoomid = other.DerivedRoomid;
      }
      if (other.HasIsAutoDelayRoomOver) {
        IsAutoDelayRoomOver = other.IsAutoDelayRoomOver;
      }
      if (other.HasAutoDelayRoomOverTimes) {
        AutoDelayRoomOverTimes = other.AutoDelayRoomOverTimes;
      }
      if (other.HasIsAutoCreateRoom) {
        IsAutoCreateRoom = other.IsAutoCreateRoom;
      }
      if (other.HasModuleid) {
        Moduleid = other.Moduleid;
      }
      if (other.HasMultiOpid) {
        MultiOpid = other.MultiOpid;
      }
      if (other.HasCanUse) {
        CanUse = other.CanUse;
      }
      if (other.HasGpsLimit) {
        GpsLimit = other.GpsLimit;
      }
      if (other.HasIpLimit) {
        IpLimit = other.IpLimit;
      }
      if (other.HasForbiddenChat) {
        ForbiddenChat = other.ForbiddenChat;
      }
      if (other.HasPasswdLimit) {
        PasswdLimit = other.PasswdLimit;
      }
      if (other.HasIsCaptcha) {
        IsCaptcha = other.IsCaptcha;
      }
      if (other.HasIsBanPc) {
        IsBanPc = other.IsBanPc;
      }
      if (other.HasIsCheckMail) {
        IsCheckMail = other.IsCheckMail;
      }
      if (other.rateSetting_ != null) {
        if (rateSetting_ == null) {
          RateSetting = new global::Texas.Protocol.PusoyRateSetting();
        }
        RateSetting.MergeFrom(other.RateSetting);
      }
      if (other.HasForbiddenChatMode) {
        ForbiddenChatMode = other.ForbiddenChatMode;
      }
      if (other.HasCalltimeMinutes) {
        CalltimeMinutes = other.CalltimeMinutes;
      }
      banClub_.Add(other.banClub_);
      banCountry_.Add(other.banCountry_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 16: {
            Blind = input.ReadInt64();
            break;
          }
          case 24: {
            MinBuyin = input.ReadInt64();
            break;
          }
          case 32: {
            MaxBuyin = input.ReadInt64();
            break;
          }
          case 40: {
            MinStack = input.ReadInt64();
            break;
          }
          case 48: {
            Feepoint = input.ReadInt32();
            break;
          }
          case 56: {
            Feecap = input.ReadInt32();
            break;
          }
          case 64: {
            CreatorUserId = input.ReadInt64();
            break;
          }
          case 74: {
            Clubid = input.ReadString();
            break;
          }
          case 80: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 88: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 96: {
            SuperLeagueType = input.ReadInt32();
            break;
          }
          case 104: {
            OperationTime = input.ReadInt32();
            break;
          }
          case 112: {
            RoomTime = input.ReadInt32();
            break;
          }
          case 120: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 128: {
            AutoStart = input.ReadInt32();
            break;
          }
          case 136: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 144: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 152: {
            Timezone = input.ReadInt32();
            break;
          }
          case 160: {
            Roomid = input.ReadInt32();
            break;
          }
          case 168: {
            DerivedRoomid = input.ReadInt32();
            break;
          }
          case 176: {
            IsAutoDelayRoomOver = input.ReadBool();
            break;
          }
          case 184: {
            AutoDelayRoomOverTimes = input.ReadInt32();
            break;
          }
          case 192: {
            IsAutoCreateRoom = input.ReadBool();
            break;
          }
          case 200: {
            Moduleid = input.ReadInt64();
            break;
          }
          case 210: {
            MultiOpid = input.ReadString();
            break;
          }
          case 216: {
            CanUse = input.ReadBool();
            break;
          }
          case 224: {
            GpsLimit = input.ReadBool();
            break;
          }
          case 232: {
            IpLimit = input.ReadBool();
            break;
          }
          case 240: {
            ForbiddenChat = input.ReadBool();
            break;
          }
          case 248: {
            PasswdLimit = input.ReadBool();
            break;
          }
          case 256: {
            IsCaptcha = input.ReadBool();
            break;
          }
          case 264: {
            IsBanPc = input.ReadBool();
            break;
          }
          case 272: {
            IsCheckMail = input.ReadBool();
            break;
          }
          case 282: {
            if (rateSetting_ == null) {
              RateSetting = new global::Texas.Protocol.PusoyRateSetting();
            }
            input.ReadMessage(RateSetting);
            break;
          }
          case 288: {
            ForbiddenChatMode = input.ReadInt32();
            break;
          }
          case 296: {
            CalltimeMinutes = input.ReadInt32();
            break;
          }
          case 306:
          case 304: {
            banClub_.AddEntriesFrom(input, _repeated_banClub_codec);
            break;
          }
          case 314: {
            banCountry_.AddEntriesFrom(input, _repeated_banCountry_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 16: {
            Blind = input.ReadInt64();
            break;
          }
          case 24: {
            MinBuyin = input.ReadInt64();
            break;
          }
          case 32: {
            MaxBuyin = input.ReadInt64();
            break;
          }
          case 40: {
            MinStack = input.ReadInt64();
            break;
          }
          case 48: {
            Feepoint = input.ReadInt32();
            break;
          }
          case 56: {
            Feecap = input.ReadInt32();
            break;
          }
          case 64: {
            CreatorUserId = input.ReadInt64();
            break;
          }
          case 74: {
            Clubid = input.ReadString();
            break;
          }
          case 80: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 88: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 96: {
            SuperLeagueType = input.ReadInt32();
            break;
          }
          case 104: {
            OperationTime = input.ReadInt32();
            break;
          }
          case 112: {
            RoomTime = input.ReadInt32();
            break;
          }
          case 120: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 128: {
            AutoStart = input.ReadInt32();
            break;
          }
          case 136: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 144: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 152: {
            Timezone = input.ReadInt32();
            break;
          }
          case 160: {
            Roomid = input.ReadInt32();
            break;
          }
          case 168: {
            DerivedRoomid = input.ReadInt32();
            break;
          }
          case 176: {
            IsAutoDelayRoomOver = input.ReadBool();
            break;
          }
          case 184: {
            AutoDelayRoomOverTimes = input.ReadInt32();
            break;
          }
          case 192: {
            IsAutoCreateRoom = input.ReadBool();
            break;
          }
          case 200: {
            Moduleid = input.ReadInt64();
            break;
          }
          case 210: {
            MultiOpid = input.ReadString();
            break;
          }
          case 216: {
            CanUse = input.ReadBool();
            break;
          }
          case 224: {
            GpsLimit = input.ReadBool();
            break;
          }
          case 232: {
            IpLimit = input.ReadBool();
            break;
          }
          case 240: {
            ForbiddenChat = input.ReadBool();
            break;
          }
          case 248: {
            PasswdLimit = input.ReadBool();
            break;
          }
          case 256: {
            IsCaptcha = input.ReadBool();
            break;
          }
          case 264: {
            IsBanPc = input.ReadBool();
            break;
          }
          case 272: {
            IsCheckMail = input.ReadBool();
            break;
          }
          case 282: {
            if (rateSetting_ == null) {
              RateSetting = new global::Texas.Protocol.PusoyRateSetting();
            }
            input.ReadMessage(RateSetting);
            break;
          }
          case 288: {
            ForbiddenChatMode = input.ReadInt32();
            break;
          }
          case 296: {
            CalltimeMinutes = input.ReadInt32();
            break;
          }
          case 306:
          case 304: {
            banClub_.AddEntriesFrom(ref input, _repeated_banClub_codec);
            break;
          }
          case 314: {
            banCountry_.AddEntriesFrom(ref input, _repeated_banCountry_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreatePusoyRoomRSP : pb::IMessage<CreatePusoyRoomRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatePusoyRoomRSP> _parser = new pb::MessageParser<CreatePusoyRoomRSP>(() => new CreatePusoyRoomRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatePusoyRoomRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatePusoyRoomRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatePusoyRoomRSP(CreatePusoyRoomRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      reason_ = other.reason_;
      pusoyInfo_ = other.pusoyInfo_ != null ? other.pusoyInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatePusoyRoomRSP Clone() {
      return new CreatePusoyRoomRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 2;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "pusoy_info" field.</summary>
    public const int PusoyInfoFieldNumber = 3;
    private global::Texas.Protocol.PusoyRoomInfo pusoyInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PusoyRoomInfo PusoyInfo {
      get { return pusoyInfo_; }
      set {
        pusoyInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatePusoyRoomRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatePusoyRoomRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Reason != other.Reason) return false;
      if (!object.Equals(PusoyInfo, other.PusoyInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (pusoyInfo_ != null) hash ^= PusoyInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasReason) {
        output.WriteRawTag(18);
        output.WriteString(Reason);
      }
      if (pusoyInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PusoyInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasReason) {
        output.WriteRawTag(18);
        output.WriteString(Reason);
      }
      if (pusoyInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PusoyInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (pusoyInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PusoyInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatePusoyRoomRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.pusoyInfo_ != null) {
        if (pusoyInfo_ == null) {
          PusoyInfo = new global::Texas.Protocol.PusoyRoomInfo();
        }
        PusoyInfo.MergeFrom(other.PusoyInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Reason = input.ReadString();
            break;
          }
          case 26: {
            if (pusoyInfo_ == null) {
              PusoyInfo = new global::Texas.Protocol.PusoyRoomInfo();
            }
            input.ReadMessage(PusoyInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Reason = input.ReadString();
            break;
          }
          case 26: {
            if (pusoyInfo_ == null) {
              PusoyInfo = new global::Texas.Protocol.PusoyRoomInfo();
            }
            input.ReadMessage(PusoyInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///一次性調整手牌位置
  /// </summary>
  public sealed partial class PusoySyncHandCardREQ : pb::IMessage<PusoySyncHandCardREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoySyncHandCardREQ> _parser = new pb::MessageParser<PusoySyncHandCardREQ>(() => new PusoySyncHandCardREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoySyncHandCardREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySyncHandCardREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySyncHandCardREQ(PusoySyncHandCardREQ other) : this() {
      cards_ = other.cards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySyncHandCardREQ Clone() {
      return new PusoySyncHandCardREQ(this);
    }

    /// <summary>Field number for the "cards" field.</summary>
    public const int CardsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_cards_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> cards_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///手牌號碼  一定要13張
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Cards {
      get { return cards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoySyncHandCardREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoySyncHandCardREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!cards_.Equals(other.cards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= cards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      cards_.WriteTo(output, _repeated_cards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      cards_.WriteTo(ref output, _repeated_cards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += cards_.CalculateSize(_repeated_cards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoySyncHandCardREQ other) {
      if (other == null) {
        return;
      }
      cards_.Add(other.cards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            cards_.AddEntriesFrom(input, _repeated_cards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            cards_.AddEntriesFrom(ref input, _repeated_cards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///一次性調整手牌位置
  /// </summary>
  public sealed partial class PusoySyncHandCardRSP : pb::IMessage<PusoySyncHandCardRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoySyncHandCardRSP> _parser = new pb::MessageParser<PusoySyncHandCardRSP>(() => new PusoySyncHandCardRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoySyncHandCardRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySyncHandCardRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySyncHandCardRSP(PusoySyncHandCardRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      cards_ = other.cards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySyncHandCardRSP Clone() {
      return new PusoySyncHandCardRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "cards" field.</summary>
    public const int CardsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_cards_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> cards_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///手牌號碼  一定是13張
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Cards {
      get { return cards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoySyncHandCardRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoySyncHandCardRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if(!cards_.Equals(other.cards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      hash ^= cards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      cards_.WriteTo(output, _repeated_cards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      cards_.WriteTo(ref output, _repeated_cards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      size += cards_.CalculateSize(_repeated_cards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoySyncHandCardRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      cards_.Add(other.cards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            cards_.AddEntriesFrom(input, _repeated_cards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            cards_.AddEntriesFrom(ref input, _repeated_cards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///調整手牌位置
  /// </summary>
  public sealed partial class SwapHandCardPosREQ : pb::IMessage<SwapHandCardPosREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SwapHandCardPosREQ> _parser = new pb::MessageParser<SwapHandCardPosREQ>(() => new SwapHandCardPosREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SwapHandCardPosREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwapHandCardPosREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwapHandCardPosREQ(SwapHandCardPosREQ other) : this() {
      _hasBits0 = other._hasBits0;
      from_ = other.from_;
      to_ = other.to_;
      swapMiddleAndBack_ = other.swapMiddleAndBack_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwapHandCardPosREQ Clone() {
      return new SwapHandCardPosREQ(this);
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 1;
    private readonly static int FromDefaultValue = 0;

    private int from_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int From {
      get { if ((_hasBits0 & 1) != 0) { return from_; } else { return FromDefaultValue; } }
      set {
        _hasBits0 |= 1;
        from_ = value;
      }
    }
    /// <summary>Gets whether the "from" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrom {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "from" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrom() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 2;
    private readonly static int ToDefaultValue = 0;

    private int to_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int To {
      get { if ((_hasBits0 & 2) != 0) { return to_; } else { return ToDefaultValue; } }
      set {
        _hasBits0 |= 2;
        to_ = value;
      }
    }
    /// <summary>Gets whether the "to" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTo {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "to" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTo() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "swap_middle_and_back" field.</summary>
    public const int SwapMiddleAndBackFieldNumber = 3;
    private readonly static bool SwapMiddleAndBackDefaultValue = false;

    private bool swapMiddleAndBack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SwapMiddleAndBack {
      get { if ((_hasBits0 & 4) != 0) { return swapMiddleAndBack_; } else { return SwapMiddleAndBackDefaultValue; } }
      set {
        _hasBits0 |= 4;
        swapMiddleAndBack_ = value;
      }
    }
    /// <summary>Gets whether the "swap_middle_and_back" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSwapMiddleAndBack {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "swap_middle_and_back" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSwapMiddleAndBack() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SwapHandCardPosREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SwapHandCardPosREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (From != other.From) return false;
      if (To != other.To) return false;
      if (SwapMiddleAndBack != other.SwapMiddleAndBack) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFrom) hash ^= From.GetHashCode();
      if (HasTo) hash ^= To.GetHashCode();
      if (HasSwapMiddleAndBack) hash ^= SwapMiddleAndBack.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFrom) {
        output.WriteRawTag(8);
        output.WriteInt32(From);
      }
      if (HasTo) {
        output.WriteRawTag(16);
        output.WriteInt32(To);
      }
      if (HasSwapMiddleAndBack) {
        output.WriteRawTag(24);
        output.WriteBool(SwapMiddleAndBack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFrom) {
        output.WriteRawTag(8);
        output.WriteInt32(From);
      }
      if (HasTo) {
        output.WriteRawTag(16);
        output.WriteInt32(To);
      }
      if (HasSwapMiddleAndBack) {
        output.WriteRawTag(24);
        output.WriteBool(SwapMiddleAndBack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFrom) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(From);
      }
      if (HasTo) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(To);
      }
      if (HasSwapMiddleAndBack) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SwapHandCardPosREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasFrom) {
        From = other.From;
      }
      if (other.HasTo) {
        To = other.To;
      }
      if (other.HasSwapMiddleAndBack) {
        SwapMiddleAndBack = other.SwapMiddleAndBack;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            From = input.ReadInt32();
            break;
          }
          case 16: {
            To = input.ReadInt32();
            break;
          }
          case 24: {
            SwapMiddleAndBack = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            From = input.ReadInt32();
            break;
          }
          case 16: {
            To = input.ReadInt32();
            break;
          }
          case 24: {
            SwapMiddleAndBack = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///調整手牌位置RSP
  /// </summary>
  public sealed partial class SwapHandCardPosRSP : pb::IMessage<SwapHandCardPosRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SwapHandCardPosRSP> _parser = new pb::MessageParser<SwapHandCardPosRSP>(() => new SwapHandCardPosRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SwapHandCardPosRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwapHandCardPosRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwapHandCardPosRSP(SwapHandCardPosRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      from_ = other.from_;
      to_ = other.to_;
      swapMiddleAndBack_ = other.swapMiddleAndBack_;
      cards_ = other.cards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwapHandCardPosRSP Clone() {
      return new SwapHandCardPosRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 2;
    private readonly static int FromDefaultValue = 0;

    private int from_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int From {
      get { if ((_hasBits0 & 2) != 0) { return from_; } else { return FromDefaultValue; } }
      set {
        _hasBits0 |= 2;
        from_ = value;
      }
    }
    /// <summary>Gets whether the "from" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrom {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "from" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrom() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 3;
    private readonly static int ToDefaultValue = 0;

    private int to_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int To {
      get { if ((_hasBits0 & 4) != 0) { return to_; } else { return ToDefaultValue; } }
      set {
        _hasBits0 |= 4;
        to_ = value;
      }
    }
    /// <summary>Gets whether the "to" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTo {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "to" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTo() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "swap_middle_and_back" field.</summary>
    public const int SwapMiddleAndBackFieldNumber = 4;
    private readonly static bool SwapMiddleAndBackDefaultValue = false;

    private bool swapMiddleAndBack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SwapMiddleAndBack {
      get { if ((_hasBits0 & 8) != 0) { return swapMiddleAndBack_; } else { return SwapMiddleAndBackDefaultValue; } }
      set {
        _hasBits0 |= 8;
        swapMiddleAndBack_ = value;
      }
    }
    /// <summary>Gets whether the "swap_middle_and_back" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSwapMiddleAndBack {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "swap_middle_and_back" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSwapMiddleAndBack() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "cards" field.</summary>
    public const int CardsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_cards_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> cards_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Cards {
      get { return cards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SwapHandCardPosRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SwapHandCardPosRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (From != other.From) return false;
      if (To != other.To) return false;
      if (SwapMiddleAndBack != other.SwapMiddleAndBack) return false;
      if(!cards_.Equals(other.cards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasFrom) hash ^= From.GetHashCode();
      if (HasTo) hash ^= To.GetHashCode();
      if (HasSwapMiddleAndBack) hash ^= SwapMiddleAndBack.GetHashCode();
      hash ^= cards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasFrom) {
        output.WriteRawTag(16);
        output.WriteInt32(From);
      }
      if (HasTo) {
        output.WriteRawTag(24);
        output.WriteInt32(To);
      }
      if (HasSwapMiddleAndBack) {
        output.WriteRawTag(32);
        output.WriteBool(SwapMiddleAndBack);
      }
      cards_.WriteTo(output, _repeated_cards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasFrom) {
        output.WriteRawTag(16);
        output.WriteInt32(From);
      }
      if (HasTo) {
        output.WriteRawTag(24);
        output.WriteInt32(To);
      }
      if (HasSwapMiddleAndBack) {
        output.WriteRawTag(32);
        output.WriteBool(SwapMiddleAndBack);
      }
      cards_.WriteTo(ref output, _repeated_cards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasFrom) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(From);
      }
      if (HasTo) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(To);
      }
      if (HasSwapMiddleAndBack) {
        size += 1 + 1;
      }
      size += cards_.CalculateSize(_repeated_cards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SwapHandCardPosRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasFrom) {
        From = other.From;
      }
      if (other.HasTo) {
        To = other.To;
      }
      if (other.HasSwapMiddleAndBack) {
        SwapMiddleAndBack = other.SwapMiddleAndBack;
      }
      cards_.Add(other.cards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            From = input.ReadInt32();
            break;
          }
          case 24: {
            To = input.ReadInt32();
            break;
          }
          case 32: {
            SwapMiddleAndBack = input.ReadBool();
            break;
          }
          case 42: {
            cards_.AddEntriesFrom(input, _repeated_cards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            From = input.ReadInt32();
            break;
          }
          case 24: {
            To = input.ReadInt32();
            break;
          }
          case 32: {
            SwapMiddleAndBack = input.ReadBool();
            break;
          }
          case 42: {
            cards_.AddEntriesFrom(ref input, _repeated_cards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///調整手牌位置廣播
  /// </summary>
  public sealed partial class SwapHandCardPosBRC : pb::IMessage<SwapHandCardPosBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SwapHandCardPosBRC> _parser = new pb::MessageParser<SwapHandCardPosBRC>(() => new SwapHandCardPosBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SwapHandCardPosBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwapHandCardPosBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwapHandCardPosBRC(SwapHandCardPosBRC other) : this() {
      _hasBits0 = other._hasBits0;
      from_ = other.from_;
      to_ = other.to_;
      seatid_ = other.seatid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwapHandCardPosBRC Clone() {
      return new SwapHandCardPosBRC(this);
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 1;
    private readonly static int FromDefaultValue = 0;

    private int from_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int From {
      get { if ((_hasBits0 & 1) != 0) { return from_; } else { return FromDefaultValue; } }
      set {
        _hasBits0 |= 1;
        from_ = value;
      }
    }
    /// <summary>Gets whether the "from" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrom {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "from" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrom() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 2;
    private readonly static int ToDefaultValue = 0;

    private int to_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int To {
      get { if ((_hasBits0 & 2) != 0) { return to_; } else { return ToDefaultValue; } }
      set {
        _hasBits0 |= 2;
        to_ = value;
      }
    }
    /// <summary>Gets whether the "to" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTo {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "to" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTo() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 3;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 4) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SwapHandCardPosBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SwapHandCardPosBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (From != other.From) return false;
      if (To != other.To) return false;
      if (Seatid != other.Seatid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFrom) hash ^= From.GetHashCode();
      if (HasTo) hash ^= To.GetHashCode();
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFrom) {
        output.WriteRawTag(8);
        output.WriteInt32(From);
      }
      if (HasTo) {
        output.WriteRawTag(16);
        output.WriteInt32(To);
      }
      if (HasSeatid) {
        output.WriteRawTag(24);
        output.WriteInt32(Seatid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFrom) {
        output.WriteRawTag(8);
        output.WriteInt32(From);
      }
      if (HasTo) {
        output.WriteRawTag(16);
        output.WriteInt32(To);
      }
      if (HasSeatid) {
        output.WriteRawTag(24);
        output.WriteInt32(Seatid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFrom) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(From);
      }
      if (HasTo) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(To);
      }
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SwapHandCardPosBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasFrom) {
        From = other.From;
      }
      if (other.HasTo) {
        To = other.To;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            From = input.ReadInt32();
            break;
          }
          case 16: {
            To = input.ReadInt32();
            break;
          }
          case 24: {
            Seatid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            From = input.ReadInt32();
            break;
          }
          case 16: {
            To = input.ReadInt32();
            break;
          }
          case 24: {
            Seatid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///手牌廣播給玩家
  /// </summary>
  public sealed partial class PusoyHandCardRSP : pb::IMessage<PusoyHandCardRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyHandCardRSP> _parser = new pb::MessageParser<PusoyHandCardRSP>(() => new PusoyHandCardRSP());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyHandCardRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyHandCardRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyHandCardRSP(PusoyHandCardRSP other) : this() {
      cards_ = other.cards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyHandCardRSP Clone() {
      return new PusoyHandCardRSP(this);
    }

    /// <summary>Field number for the "cards" field.</summary>
    public const int CardsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_cards_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> cards_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///手牌 0~12
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Cards {
      get { return cards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyHandCardRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyHandCardRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!cards_.Equals(other.cards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= cards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      cards_.WriteTo(output, _repeated_cards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      cards_.WriteTo(ref output, _repeated_cards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += cards_.CalculateSize(_repeated_cards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyHandCardRSP other) {
      if (other == null) {
        return;
      }
      cards_.Add(other.cards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            cards_.AddEntriesFrom(input, _repeated_cards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            cards_.AddEntriesFrom(ref input, _repeated_cards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PusoySitDownREQ : pb::IMessage<PusoySitDownREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoySitDownREQ> _parser = new pb::MessageParser<PusoySitDownREQ>(() => new PusoySitDownREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoySitDownREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySitDownREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySitDownREQ(PusoySitDownREQ other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      pc_ = other.pc_;
      ip_ = other.ip_;
      gpsLon_ = other.gpsLon_;
      gpsLat_ = other.gpsLat_;
      channel_ = other.channel_;
      invalidMail_ = other.invalidMail_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySitDownREQ Clone() {
      return new PusoySitDownREQ(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "pc" field.</summary>
    public const int PcFieldNumber = 2;
    private readonly static bool PcDefaultValue = false;

    private bool pc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Pc {
      get { if ((_hasBits0 & 2) != 0) { return pc_; } else { return PcDefaultValue; } }
      set {
        _hasBits0 |= 2;
        pc_ = value;
      }
    }
    /// <summary>Gets whether the "pc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPc {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "pc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPc() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 3;
    private readonly static string IpDefaultValue = "";

    private string ip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ip {
      get { return ip_ ?? IpDefaultValue; }
      set {
        ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ip" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIp {
      get { return ip_ != null; }
    }
    /// <summary>Clears the value of the "ip" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIp() {
      ip_ = null;
    }

    /// <summary>Field number for the "gps_lon" field.</summary>
    public const int GpsLonFieldNumber = 4;
    private readonly static int GpsLonDefaultValue = 0;

    private int gpsLon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GpsLon {
      get { if ((_hasBits0 & 4) != 0) { return gpsLon_; } else { return GpsLonDefaultValue; } }
      set {
        _hasBits0 |= 4;
        gpsLon_ = value;
      }
    }
    /// <summary>Gets whether the "gps_lon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpsLon {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "gps_lon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpsLon() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "gps_lat" field.</summary>
    public const int GpsLatFieldNumber = 5;
    private readonly static int GpsLatDefaultValue = 0;

    private int gpsLat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GpsLat {
      get { if ((_hasBits0 & 8) != 0) { return gpsLat_; } else { return GpsLatDefaultValue; } }
      set {
        _hasBits0 |= 8;
        gpsLat_ = value;
      }
    }
    /// <summary>Gets whether the "gps_lat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpsLat {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "gps_lat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpsLat() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 6;
    private readonly static string ChannelDefaultValue = "";

    private string channel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Channel {
      get { return channel_ ?? ChannelDefaultValue; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "channel" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChannel {
      get { return channel_ != null; }
    }
    /// <summary>Clears the value of the "channel" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChannel() {
      channel_ = null;
    }

    /// <summary>Field number for the "invalid_mail" field.</summary>
    public const int InvalidMailFieldNumber = 7;
    private readonly static bool InvalidMailDefaultValue = false;

    private bool invalidMail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InvalidMail {
      get { if ((_hasBits0 & 16) != 0) { return invalidMail_; } else { return InvalidMailDefaultValue; } }
      set {
        _hasBits0 |= 16;
        invalidMail_ = value;
      }
    }
    /// <summary>Gets whether the "invalid_mail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInvalidMail {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "invalid_mail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInvalidMail() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoySitDownREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoySitDownREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (Pc != other.Pc) return false;
      if (Ip != other.Ip) return false;
      if (GpsLon != other.GpsLon) return false;
      if (GpsLat != other.GpsLat) return false;
      if (Channel != other.Channel) return false;
      if (InvalidMail != other.InvalidMail) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasPc) hash ^= Pc.GetHashCode();
      if (HasIp) hash ^= Ip.GetHashCode();
      if (HasGpsLon) hash ^= GpsLon.GetHashCode();
      if (HasGpsLat) hash ^= GpsLat.GetHashCode();
      if (HasChannel) hash ^= Channel.GetHashCode();
      if (HasInvalidMail) hash ^= InvalidMail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasPc) {
        output.WriteRawTag(16);
        output.WriteBool(Pc);
      }
      if (HasIp) {
        output.WriteRawTag(26);
        output.WriteString(Ip);
      }
      if (HasGpsLon) {
        output.WriteRawTag(32);
        output.WriteInt32(GpsLon);
      }
      if (HasGpsLat) {
        output.WriteRawTag(40);
        output.WriteInt32(GpsLat);
      }
      if (HasChannel) {
        output.WriteRawTag(50);
        output.WriteString(Channel);
      }
      if (HasInvalidMail) {
        output.WriteRawTag(56);
        output.WriteBool(InvalidMail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasPc) {
        output.WriteRawTag(16);
        output.WriteBool(Pc);
      }
      if (HasIp) {
        output.WriteRawTag(26);
        output.WriteString(Ip);
      }
      if (HasGpsLon) {
        output.WriteRawTag(32);
        output.WriteInt32(GpsLon);
      }
      if (HasGpsLat) {
        output.WriteRawTag(40);
        output.WriteInt32(GpsLat);
      }
      if (HasChannel) {
        output.WriteRawTag(50);
        output.WriteString(Channel);
      }
      if (HasInvalidMail) {
        output.WriteRawTag(56);
        output.WriteBool(InvalidMail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasPc) {
        size += 1 + 1;
      }
      if (HasIp) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
      }
      if (HasGpsLon) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GpsLon);
      }
      if (HasGpsLat) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GpsLat);
      }
      if (HasChannel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (HasInvalidMail) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoySitDownREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasPc) {
        Pc = other.Pc;
      }
      if (other.HasIp) {
        Ip = other.Ip;
      }
      if (other.HasGpsLon) {
        GpsLon = other.GpsLon;
      }
      if (other.HasGpsLat) {
        GpsLat = other.GpsLat;
      }
      if (other.HasChannel) {
        Channel = other.Channel;
      }
      if (other.HasInvalidMail) {
        InvalidMail = other.InvalidMail;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Pc = input.ReadBool();
            break;
          }
          case 26: {
            Ip = input.ReadString();
            break;
          }
          case 32: {
            GpsLon = input.ReadInt32();
            break;
          }
          case 40: {
            GpsLat = input.ReadInt32();
            break;
          }
          case 50: {
            Channel = input.ReadString();
            break;
          }
          case 56: {
            InvalidMail = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Pc = input.ReadBool();
            break;
          }
          case 26: {
            Ip = input.ReadString();
            break;
          }
          case 32: {
            GpsLon = input.ReadInt32();
            break;
          }
          case 40: {
            GpsLat = input.ReadInt32();
            break;
          }
          case 50: {
            Channel = input.ReadString();
            break;
          }
          case 56: {
            InvalidMail = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家資訊
  /// </summary>
  public sealed partial class PusoyPlayerInfo : pb::IMessage<PusoyPlayerInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyPlayerInfo> _parser = new pb::MessageParser<PusoyPlayerInfo>(() => new PusoyPlayerInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyPlayerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyPlayerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyPlayerInfo(PusoyPlayerInfo other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      iconUrl_ = other.iconUrl_;
      uid_ = other.uid_;
      clubid_ = other.clubid_;
      clubName_ = other.clubName_;
      vipLevel_ = other.vipLevel_;
      level_ = other.level_;
      country_ = other.country_;
      gpsLon_ = other.gpsLon_;
      gpsLat_ = other.gpsLat_;
      waitingStatus_ = other.waitingStatus_;
      certification_ = other.certification_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyPlayerInfo Clone() {
      return new PusoyPlayerInfo(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    ///基本資訊
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "icon_url" field.</summary>
    public const int IconUrlFieldNumber = 2;
    private readonly static string IconUrlDefaultValue = "";

    private string iconUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IconUrl {
      get { return iconUrl_ ?? IconUrlDefaultValue; }
      set {
        iconUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "icon_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIconUrl {
      get { return iconUrl_ != null; }
    }
    /// <summary>Clears the value of the "icon_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIconUrl() {
      iconUrl_ = null;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 3;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 4;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    /// <summary>
    ///以下從SeatStatus分離
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "club_name" field.</summary>
    public const int ClubNameFieldNumber = 5;
    private readonly static string ClubNameDefaultValue = "";

    private string clubName_;
    /// <summary>
    ///俱樂部名稱，從原本SeatStatus移過來
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClubName {
      get { return clubName_ ?? ClubNameDefaultValue; }
      set {
        clubName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "club_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubName {
      get { return clubName_ != null; }
    }
    /// <summary>Clears the value of the "club_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubName() {
      clubName_ = null;
    }

    /// <summary>Field number for the "vip_level" field.</summary>
    public const int VipLevelFieldNumber = 6;
    private readonly static int VipLevelDefaultValue = 0;

    private int vipLevel_;
    /// <summary>
    ///VIP等級，從原本SeatStatus移過來
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int VipLevel {
      get { if ((_hasBits0 & 2) != 0) { return vipLevel_; } else { return VipLevelDefaultValue; } }
      set {
        _hasBits0 |= 2;
        vipLevel_ = value;
      }
    }
    /// <summary>Gets whether the "vip_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVipLevel {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "vip_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVipLevel() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 7;
    private readonly static int LevelDefaultValue = 0;

    private int level_;
    /// <summary>
    ///等級，從原本SeatStatus移過來
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Level {
      get { if ((_hasBits0 & 4) != 0) { return level_; } else { return LevelDefaultValue; } }
      set {
        _hasBits0 |= 4;
        level_ = value;
      }
    }
    /// <summary>Gets whether the "level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLevel {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLevel() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "country" field.</summary>
    public const int CountryFieldNumber = 8;
    private readonly static string CountryDefaultValue = "";

    private string country_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Country {
      get { return country_ ?? CountryDefaultValue; }
      set {
        country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "country" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCountry {
      get { return country_ != null; }
    }
    /// <summary>Clears the value of the "country" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCountry() {
      country_ = null;
    }

    /// <summary>Field number for the "gps_lon" field.</summary>
    public const int GpsLonFieldNumber = 9;
    private readonly static int GpsLonDefaultValue = 0;

    private int gpsLon_;
    /// <summary>
    ///GPS資訊
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GpsLon {
      get { if ((_hasBits0 & 8) != 0) { return gpsLon_; } else { return GpsLonDefaultValue; } }
      set {
        _hasBits0 |= 8;
        gpsLon_ = value;
      }
    }
    /// <summary>Gets whether the "gps_lon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpsLon {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "gps_lon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpsLon() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "gps_lat" field.</summary>
    public const int GpsLatFieldNumber = 10;
    private readonly static int GpsLatDefaultValue = 0;

    private int gpsLat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GpsLat {
      get { if ((_hasBits0 & 16) != 0) { return gpsLat_; } else { return GpsLatDefaultValue; } }
      set {
        _hasBits0 |= 16;
        gpsLat_ = value;
      }
    }
    /// <summary>Gets whether the "gps_lat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpsLat {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "gps_lat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpsLat() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "waiting_status" field.</summary>
    public const int WaitingStatusFieldNumber = 11;
    private readonly static int WaitingStatusDefaultValue = 0;

    private int waitingStatus_;
    /// <summary>
    ///前端優化用，判斷玩家是不是在等待列表中
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WaitingStatus {
      get { if ((_hasBits0 & 32) != 0) { return waitingStatus_; } else { return WaitingStatusDefaultValue; } }
      set {
        _hasBits0 |= 32;
        waitingStatus_ = value;
      }
    }
    /// <summary>Gets whether the "waiting_status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWaitingStatus {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "waiting_status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWaitingStatus() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "certification" field.</summary>
    public const int CertificationFieldNumber = 12;
    private readonly static int CertificationDefaultValue = 0;

    private int certification_;
    /// <summary>
    ///俱樂部會員認證
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Certification {
      get { if ((_hasBits0 & 64) != 0) { return certification_; } else { return CertificationDefaultValue; } }
      set {
        _hasBits0 |= 64;
        certification_ = value;
      }
    }
    /// <summary>Gets whether the "certification" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCertification {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "certification" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCertification() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyPlayerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyPlayerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (IconUrl != other.IconUrl) return false;
      if (Uid != other.Uid) return false;
      if (Clubid != other.Clubid) return false;
      if (ClubName != other.ClubName) return false;
      if (VipLevel != other.VipLevel) return false;
      if (Level != other.Level) return false;
      if (Country != other.Country) return false;
      if (GpsLon != other.GpsLon) return false;
      if (GpsLat != other.GpsLat) return false;
      if (WaitingStatus != other.WaitingStatus) return false;
      if (Certification != other.Certification) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasIconUrl) hash ^= IconUrl.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasClubName) hash ^= ClubName.GetHashCode();
      if (HasVipLevel) hash ^= VipLevel.GetHashCode();
      if (HasLevel) hash ^= Level.GetHashCode();
      if (HasCountry) hash ^= Country.GetHashCode();
      if (HasGpsLon) hash ^= GpsLon.GetHashCode();
      if (HasGpsLat) hash ^= GpsLat.GetHashCode();
      if (HasWaitingStatus) hash ^= WaitingStatus.GetHashCode();
      if (HasCertification) hash ^= Certification.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasIconUrl) {
        output.WriteRawTag(18);
        output.WriteString(IconUrl);
      }
      if (HasUid) {
        output.WriteRawTag(24);
        output.WriteInt64(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(34);
        output.WriteString(Clubid);
      }
      if (HasClubName) {
        output.WriteRawTag(42);
        output.WriteString(ClubName);
      }
      if (HasVipLevel) {
        output.WriteRawTag(48);
        output.WriteInt32(VipLevel);
      }
      if (HasLevel) {
        output.WriteRawTag(56);
        output.WriteInt32(Level);
      }
      if (HasCountry) {
        output.WriteRawTag(66);
        output.WriteString(Country);
      }
      if (HasGpsLon) {
        output.WriteRawTag(72);
        output.WriteInt32(GpsLon);
      }
      if (HasGpsLat) {
        output.WriteRawTag(80);
        output.WriteInt32(GpsLat);
      }
      if (HasWaitingStatus) {
        output.WriteRawTag(88);
        output.WriteInt32(WaitingStatus);
      }
      if (HasCertification) {
        output.WriteRawTag(96);
        output.WriteInt32(Certification);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasIconUrl) {
        output.WriteRawTag(18);
        output.WriteString(IconUrl);
      }
      if (HasUid) {
        output.WriteRawTag(24);
        output.WriteInt64(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(34);
        output.WriteString(Clubid);
      }
      if (HasClubName) {
        output.WriteRawTag(42);
        output.WriteString(ClubName);
      }
      if (HasVipLevel) {
        output.WriteRawTag(48);
        output.WriteInt32(VipLevel);
      }
      if (HasLevel) {
        output.WriteRawTag(56);
        output.WriteInt32(Level);
      }
      if (HasCountry) {
        output.WriteRawTag(66);
        output.WriteString(Country);
      }
      if (HasGpsLon) {
        output.WriteRawTag(72);
        output.WriteInt32(GpsLon);
      }
      if (HasGpsLat) {
        output.WriteRawTag(80);
        output.WriteInt32(GpsLat);
      }
      if (HasWaitingStatus) {
        output.WriteRawTag(88);
        output.WriteInt32(WaitingStatus);
      }
      if (HasCertification) {
        output.WriteRawTag(96);
        output.WriteInt32(Certification);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasIconUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconUrl);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasClubName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClubName);
      }
      if (HasVipLevel) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VipLevel);
      }
      if (HasLevel) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (HasCountry) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
      }
      if (HasGpsLon) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GpsLon);
      }
      if (HasGpsLat) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GpsLat);
      }
      if (HasWaitingStatus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WaitingStatus);
      }
      if (HasCertification) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Certification);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyPlayerInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasIconUrl) {
        IconUrl = other.IconUrl;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasClubName) {
        ClubName = other.ClubName;
      }
      if (other.HasVipLevel) {
        VipLevel = other.VipLevel;
      }
      if (other.HasLevel) {
        Level = other.Level;
      }
      if (other.HasCountry) {
        Country = other.Country;
      }
      if (other.HasGpsLon) {
        GpsLon = other.GpsLon;
      }
      if (other.HasGpsLat) {
        GpsLat = other.GpsLat;
      }
      if (other.HasWaitingStatus) {
        WaitingStatus = other.WaitingStatus;
      }
      if (other.HasCertification) {
        Certification = other.Certification;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            IconUrl = input.ReadString();
            break;
          }
          case 24: {
            Uid = input.ReadInt64();
            break;
          }
          case 34: {
            Clubid = input.ReadString();
            break;
          }
          case 42: {
            ClubName = input.ReadString();
            break;
          }
          case 48: {
            VipLevel = input.ReadInt32();
            break;
          }
          case 56: {
            Level = input.ReadInt32();
            break;
          }
          case 66: {
            Country = input.ReadString();
            break;
          }
          case 72: {
            GpsLon = input.ReadInt32();
            break;
          }
          case 80: {
            GpsLat = input.ReadInt32();
            break;
          }
          case 88: {
            WaitingStatus = input.ReadInt32();
            break;
          }
          case 96: {
            Certification = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            IconUrl = input.ReadString();
            break;
          }
          case 24: {
            Uid = input.ReadInt64();
            break;
          }
          case 34: {
            Clubid = input.ReadString();
            break;
          }
          case 42: {
            ClubName = input.ReadString();
            break;
          }
          case 48: {
            VipLevel = input.ReadInt32();
            break;
          }
          case 56: {
            Level = input.ReadInt32();
            break;
          }
          case 66: {
            Country = input.ReadString();
            break;
          }
          case 72: {
            GpsLon = input.ReadInt32();
            break;
          }
          case 80: {
            GpsLat = input.ReadInt32();
            break;
          }
          case 88: {
            WaitingStatus = input.ReadInt32();
            break;
          }
          case 96: {
            Certification = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家遊玩狀態
  /// </summary>
  public sealed partial class PusoyPlayerGamingStatus : pb::IMessage<PusoyPlayerGamingStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyPlayerGamingStatus> _parser = new pb::MessageParser<PusoyPlayerGamingStatus>(() => new PusoyPlayerGamingStatus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyPlayerGamingStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyPlayerGamingStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyPlayerGamingStatus(PusoyPlayerGamingStatus other) : this() {
      _hasBits0 = other._hasBits0;
      chips_ = other.chips_;
      handCards_ = other.handCards_ != null ? other.handCards_.Clone() : null;
      arrangementDone_ = other.arrangementDone_;
      isPlaying_ = other.isPlaying_;
      isRebuying_ = other.isRebuying_;
      gameLeftTime_ = other.gameLeftTime_;
      rebuyLeftTime_ = other.rebuyLeftTime_;
      profit_ = other.profit_;
      isLeavingOnNextHand_ = other.isLeavingOnNextHand_;
      calltimeInfo_ = other.calltimeInfo_ != null ? other.calltimeInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyPlayerGamingStatus Clone() {
      return new PusoyPlayerGamingStatus(this);
    }

    /// <summary>Field number for the "chips" field.</summary>
    public const int ChipsFieldNumber = 1;
    private readonly static long ChipsDefaultValue = 0L;

    private long chips_;
    /// <summary>
    ///Playing狀態
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Chips {
      get { if ((_hasBits0 & 1) != 0) { return chips_; } else { return ChipsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        chips_ = value;
      }
    }
    /// <summary>Gets whether the "chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChips {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChips() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "hand_cards" field.</summary>
    public const int HandCardsFieldNumber = 2;
    private global::Texas.Protocol.PusoyHandCardRSP handCards_;
    /// <summary>
    ///全0表示蓋牌狀態
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PusoyHandCardRSP HandCards {
      get { return handCards_; }
      set {
        handCards_ = value;
      }
    }

    /// <summary>Field number for the "arrangement_done" field.</summary>
    public const int ArrangementDoneFieldNumber = 3;
    private readonly static bool ArrangementDoneDefaultValue = false;

    private bool arrangementDone_;
    /// <summary>
    ///是否已經擺牌完畢
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ArrangementDone {
      get { if ((_hasBits0 & 2) != 0) { return arrangementDone_; } else { return ArrangementDoneDefaultValue; } }
      set {
        _hasBits0 |= 2;
        arrangementDone_ = value;
      }
    }
    /// <summary>Gets whether the "arrangement_done" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasArrangementDone {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "arrangement_done" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearArrangementDone() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "is_playing" field.</summary>
    public const int IsPlayingFieldNumber = 4;
    private readonly static bool IsPlayingDefaultValue = false;

    private bool isPlaying_;
    /// <summary>
    ///是否已經參與遊戲牌局中
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPlaying {
      get { if ((_hasBits0 & 4) != 0) { return isPlaying_; } else { return IsPlayingDefaultValue; } }
      set {
        _hasBits0 |= 4;
        isPlaying_ = value;
      }
    }
    /// <summary>Gets whether the "is_playing" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPlaying {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "is_playing" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPlaying() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "is_rebuying" field.</summary>
    public const int IsRebuyingFieldNumber = 5;
    private readonly static bool IsRebuyingDefaultValue = false;

    private bool isRebuying_;
    /// <summary>
    ///是否在Rebuy
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsRebuying {
      get { if ((_hasBits0 & 8) != 0) { return isRebuying_; } else { return IsRebuyingDefaultValue; } }
      set {
        _hasBits0 |= 8;
        isRebuying_ = value;
      }
    }
    /// <summary>Gets whether the "is_rebuying" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsRebuying {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "is_rebuying" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsRebuying() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "game_left_time" field.</summary>
    public const int GameLeftTimeFieldNumber = 6;
    private readonly static int GameLeftTimeDefaultValue = 0;

    private int gameLeftTime_;
    /// <summary>
    ///剩餘的遊戲時間，考慮到可能使用延時道具，目前暫不使用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameLeftTime {
      get { if ((_hasBits0 & 16) != 0) { return gameLeftTime_; } else { return GameLeftTimeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        gameLeftTime_ = value;
      }
    }
    /// <summary>Gets whether the "game_left_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameLeftTime {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "game_left_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameLeftTime() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "rebuy_left_time" field.</summary>
    public const int RebuyLeftTimeFieldNumber = 7;
    private readonly static int RebuyLeftTimeDefaultValue = 0;

    private int rebuyLeftTime_;
    /// <summary>
    ///剩餘的rebuy時間
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RebuyLeftTime {
      get { if ((_hasBits0 & 32) != 0) { return rebuyLeftTime_; } else { return RebuyLeftTimeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        rebuyLeftTime_ = value;
      }
    }
    /// <summary>Gets whether the "rebuy_left_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRebuyLeftTime {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "rebuy_left_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRebuyLeftTime() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "profit" field.</summary>
    public const int ProfitFieldNumber = 8;
    private readonly static long ProfitDefaultValue = 0L;

    private long profit_;
    /// <summary>
    ///玩家盈虧
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Profit {
      get { if ((_hasBits0 & 64) != 0) { return profit_; } else { return ProfitDefaultValue; } }
      set {
        _hasBits0 |= 64;
        profit_ = value;
      }
    }
    /// <summary>Gets whether the "profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProfit {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProfit() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "is_leaving_on_next_hand" field.</summary>
    public const int IsLeavingOnNextHandFieldNumber = 9;
    private readonly static bool IsLeavingOnNextHandDefaultValue = false;

    private bool isLeavingOnNextHand_;
    /// <summary>
    ///是否勾選了下手離開
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsLeavingOnNextHand {
      get { if ((_hasBits0 & 128) != 0) { return isLeavingOnNextHand_; } else { return IsLeavingOnNextHandDefaultValue; } }
      set {
        _hasBits0 |= 128;
        isLeavingOnNextHand_ = value;
      }
    }
    /// <summary>Gets whether the "is_leaving_on_next_hand" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsLeavingOnNextHand {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "is_leaving_on_next_hand" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsLeavingOnNextHand() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "calltime_info" field.</summary>
    public const int CalltimeInfoFieldNumber = 10;
    private global::Texas.Protocol.CallTimeInfo calltimeInfo_;
    /// <summary>
    ///玩家calltime狀態
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.CallTimeInfo CalltimeInfo {
      get { return calltimeInfo_; }
      set {
        calltimeInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyPlayerGamingStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyPlayerGamingStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Chips != other.Chips) return false;
      if (!object.Equals(HandCards, other.HandCards)) return false;
      if (ArrangementDone != other.ArrangementDone) return false;
      if (IsPlaying != other.IsPlaying) return false;
      if (IsRebuying != other.IsRebuying) return false;
      if (GameLeftTime != other.GameLeftTime) return false;
      if (RebuyLeftTime != other.RebuyLeftTime) return false;
      if (Profit != other.Profit) return false;
      if (IsLeavingOnNextHand != other.IsLeavingOnNextHand) return false;
      if (!object.Equals(CalltimeInfo, other.CalltimeInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasChips) hash ^= Chips.GetHashCode();
      if (handCards_ != null) hash ^= HandCards.GetHashCode();
      if (HasArrangementDone) hash ^= ArrangementDone.GetHashCode();
      if (HasIsPlaying) hash ^= IsPlaying.GetHashCode();
      if (HasIsRebuying) hash ^= IsRebuying.GetHashCode();
      if (HasGameLeftTime) hash ^= GameLeftTime.GetHashCode();
      if (HasRebuyLeftTime) hash ^= RebuyLeftTime.GetHashCode();
      if (HasProfit) hash ^= Profit.GetHashCode();
      if (HasIsLeavingOnNextHand) hash ^= IsLeavingOnNextHand.GetHashCode();
      if (calltimeInfo_ != null) hash ^= CalltimeInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasChips) {
        output.WriteRawTag(8);
        output.WriteInt64(Chips);
      }
      if (handCards_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(HandCards);
      }
      if (HasArrangementDone) {
        output.WriteRawTag(24);
        output.WriteBool(ArrangementDone);
      }
      if (HasIsPlaying) {
        output.WriteRawTag(32);
        output.WriteBool(IsPlaying);
      }
      if (HasIsRebuying) {
        output.WriteRawTag(40);
        output.WriteBool(IsRebuying);
      }
      if (HasGameLeftTime) {
        output.WriteRawTag(48);
        output.WriteInt32(GameLeftTime);
      }
      if (HasRebuyLeftTime) {
        output.WriteRawTag(56);
        output.WriteInt32(RebuyLeftTime);
      }
      if (HasProfit) {
        output.WriteRawTag(64);
        output.WriteInt64(Profit);
      }
      if (HasIsLeavingOnNextHand) {
        output.WriteRawTag(72);
        output.WriteBool(IsLeavingOnNextHand);
      }
      if (calltimeInfo_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CalltimeInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasChips) {
        output.WriteRawTag(8);
        output.WriteInt64(Chips);
      }
      if (handCards_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(HandCards);
      }
      if (HasArrangementDone) {
        output.WriteRawTag(24);
        output.WriteBool(ArrangementDone);
      }
      if (HasIsPlaying) {
        output.WriteRawTag(32);
        output.WriteBool(IsPlaying);
      }
      if (HasIsRebuying) {
        output.WriteRawTag(40);
        output.WriteBool(IsRebuying);
      }
      if (HasGameLeftTime) {
        output.WriteRawTag(48);
        output.WriteInt32(GameLeftTime);
      }
      if (HasRebuyLeftTime) {
        output.WriteRawTag(56);
        output.WriteInt32(RebuyLeftTime);
      }
      if (HasProfit) {
        output.WriteRawTag(64);
        output.WriteInt64(Profit);
      }
      if (HasIsLeavingOnNextHand) {
        output.WriteRawTag(72);
        output.WriteBool(IsLeavingOnNextHand);
      }
      if (calltimeInfo_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CalltimeInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Chips);
      }
      if (handCards_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HandCards);
      }
      if (HasArrangementDone) {
        size += 1 + 1;
      }
      if (HasIsPlaying) {
        size += 1 + 1;
      }
      if (HasIsRebuying) {
        size += 1 + 1;
      }
      if (HasGameLeftTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameLeftTime);
      }
      if (HasRebuyLeftTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RebuyLeftTime);
      }
      if (HasProfit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Profit);
      }
      if (HasIsLeavingOnNextHand) {
        size += 1 + 1;
      }
      if (calltimeInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CalltimeInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyPlayerGamingStatus other) {
      if (other == null) {
        return;
      }
      if (other.HasChips) {
        Chips = other.Chips;
      }
      if (other.handCards_ != null) {
        if (handCards_ == null) {
          HandCards = new global::Texas.Protocol.PusoyHandCardRSP();
        }
        HandCards.MergeFrom(other.HandCards);
      }
      if (other.HasArrangementDone) {
        ArrangementDone = other.ArrangementDone;
      }
      if (other.HasIsPlaying) {
        IsPlaying = other.IsPlaying;
      }
      if (other.HasIsRebuying) {
        IsRebuying = other.IsRebuying;
      }
      if (other.HasGameLeftTime) {
        GameLeftTime = other.GameLeftTime;
      }
      if (other.HasRebuyLeftTime) {
        RebuyLeftTime = other.RebuyLeftTime;
      }
      if (other.HasProfit) {
        Profit = other.Profit;
      }
      if (other.HasIsLeavingOnNextHand) {
        IsLeavingOnNextHand = other.IsLeavingOnNextHand;
      }
      if (other.calltimeInfo_ != null) {
        if (calltimeInfo_ == null) {
          CalltimeInfo = new global::Texas.Protocol.CallTimeInfo();
        }
        CalltimeInfo.MergeFrom(other.CalltimeInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Chips = input.ReadInt64();
            break;
          }
          case 18: {
            if (handCards_ == null) {
              HandCards = new global::Texas.Protocol.PusoyHandCardRSP();
            }
            input.ReadMessage(HandCards);
            break;
          }
          case 24: {
            ArrangementDone = input.ReadBool();
            break;
          }
          case 32: {
            IsPlaying = input.ReadBool();
            break;
          }
          case 40: {
            IsRebuying = input.ReadBool();
            break;
          }
          case 48: {
            GameLeftTime = input.ReadInt32();
            break;
          }
          case 56: {
            RebuyLeftTime = input.ReadInt32();
            break;
          }
          case 64: {
            Profit = input.ReadInt64();
            break;
          }
          case 72: {
            IsLeavingOnNextHand = input.ReadBool();
            break;
          }
          case 82: {
            if (calltimeInfo_ == null) {
              CalltimeInfo = new global::Texas.Protocol.CallTimeInfo();
            }
            input.ReadMessage(CalltimeInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Chips = input.ReadInt64();
            break;
          }
          case 18: {
            if (handCards_ == null) {
              HandCards = new global::Texas.Protocol.PusoyHandCardRSP();
            }
            input.ReadMessage(HandCards);
            break;
          }
          case 24: {
            ArrangementDone = input.ReadBool();
            break;
          }
          case 32: {
            IsPlaying = input.ReadBool();
            break;
          }
          case 40: {
            IsRebuying = input.ReadBool();
            break;
          }
          case 48: {
            GameLeftTime = input.ReadInt32();
            break;
          }
          case 56: {
            RebuyLeftTime = input.ReadInt32();
            break;
          }
          case 64: {
            Profit = input.ReadInt64();
            break;
          }
          case 72: {
            IsLeavingOnNextHand = input.ReadBool();
            break;
          }
          case 82: {
            if (calltimeInfo_ == null) {
              CalltimeInfo = new global::Texas.Protocol.CallTimeInfo();
            }
            input.ReadMessage(CalltimeInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///座位屬性狀態
  ///包含在位置上的玩家
  ///包含遊玩狀態
  /// </summary>
  public sealed partial class PusoySeatStatus : pb::IMessage<PusoySeatStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoySeatStatus> _parser = new pb::MessageParser<PusoySeatStatus>(() => new PusoySeatStatus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoySeatStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySeatStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySeatStatus(PusoySeatStatus other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      seatReserved_ = other.seatReserved_;
      isEmpty_ = other.isEmpty_;
      isSittingOut_ = other.isSittingOut_;
      playerInfo_ = other.playerInfo_ != null ? other.playerInfo_.Clone() : null;
      playerStatus_ = other.playerStatus_ != null ? other.playerStatus_.Clone() : null;
      frameId_ = other.frameId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySeatStatus Clone() {
      return new PusoySeatStatus(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seat_reserved" field.</summary>
    public const int SeatReservedFieldNumber = 2;
    private readonly static bool SeatReservedDefaultValue = false;

    private bool seatReserved_;
    /// <summary>
    ///是否保留
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SeatReserved {
      get { if ((_hasBits0 & 2) != 0) { return seatReserved_; } else { return SeatReservedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seatReserved_ = value;
      }
    }
    /// <summary>Gets whether the "seat_reserved" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatReserved {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seat_reserved" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatReserved() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "is_empty" field.</summary>
    public const int IsEmptyFieldNumber = 3;
    private readonly static bool IsEmptyDefaultValue = false;

    private bool isEmpty_;
    /// <summary>
    ///空位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsEmpty {
      get { if ((_hasBits0 & 4) != 0) { return isEmpty_; } else { return IsEmptyDefaultValue; } }
      set {
        _hasBits0 |= 4;
        isEmpty_ = value;
      }
    }
    /// <summary>Gets whether the "is_empty" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsEmpty {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "is_empty" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsEmpty() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "is_sitting_out" field.</summary>
    public const int IsSittingOutFieldNumber = 4;
    private readonly static bool IsSittingOutDefaultValue = false;

    private bool isSittingOut_;
    /// <summary>
    ///Sitting out
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSittingOut {
      get { if ((_hasBits0 & 8) != 0) { return isSittingOut_; } else { return IsSittingOutDefaultValue; } }
      set {
        _hasBits0 |= 8;
        isSittingOut_ = value;
      }
    }
    /// <summary>Gets whether the "is_sitting_out" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsSittingOut {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "is_sitting_out" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsSittingOut() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "player_info" field.</summary>
    public const int PlayerInfoFieldNumber = 5;
    private global::Texas.Protocol.PusoyPlayerInfo playerInfo_;
    /// <summary>
    ///玩家資訊
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PusoyPlayerInfo PlayerInfo {
      get { return playerInfo_; }
      set {
        playerInfo_ = value;
      }
    }

    /// <summary>Field number for the "player_status" field.</summary>
    public const int PlayerStatusFieldNumber = 6;
    private global::Texas.Protocol.PusoyPlayerGamingStatus playerStatus_;
    /// <summary>
    ///玩家遊玩狀態
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PusoyPlayerGamingStatus PlayerStatus {
      get { return playerStatus_; }
      set {
        playerStatus_ = value;
      }
    }

    /// <summary>Field number for the "frame_id" field.</summary>
    public const int FrameIdFieldNumber = 7;
    private readonly static string FrameIdDefaultValue = "";

    private string frameId_;
    /// <summary>
    ///用户头像框
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FrameId {
      get { return frameId_ ?? FrameIdDefaultValue; }
      set {
        frameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "frame_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrameId {
      get { return frameId_ != null; }
    }
    /// <summary>Clears the value of the "frame_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrameId() {
      frameId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoySeatStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoySeatStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (SeatReserved != other.SeatReserved) return false;
      if (IsEmpty != other.IsEmpty) return false;
      if (IsSittingOut != other.IsSittingOut) return false;
      if (!object.Equals(PlayerInfo, other.PlayerInfo)) return false;
      if (!object.Equals(PlayerStatus, other.PlayerStatus)) return false;
      if (FrameId != other.FrameId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasSeatReserved) hash ^= SeatReserved.GetHashCode();
      if (HasIsEmpty) hash ^= IsEmpty.GetHashCode();
      if (HasIsSittingOut) hash ^= IsSittingOut.GetHashCode();
      if (playerInfo_ != null) hash ^= PlayerInfo.GetHashCode();
      if (playerStatus_ != null) hash ^= PlayerStatus.GetHashCode();
      if (HasFrameId) hash ^= FrameId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasSeatReserved) {
        output.WriteRawTag(16);
        output.WriteBool(SeatReserved);
      }
      if (HasIsEmpty) {
        output.WriteRawTag(24);
        output.WriteBool(IsEmpty);
      }
      if (HasIsSittingOut) {
        output.WriteRawTag(32);
        output.WriteBool(IsSittingOut);
      }
      if (playerInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PlayerInfo);
      }
      if (playerStatus_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PlayerStatus);
      }
      if (HasFrameId) {
        output.WriteRawTag(58);
        output.WriteString(FrameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasSeatReserved) {
        output.WriteRawTag(16);
        output.WriteBool(SeatReserved);
      }
      if (HasIsEmpty) {
        output.WriteRawTag(24);
        output.WriteBool(IsEmpty);
      }
      if (HasIsSittingOut) {
        output.WriteRawTag(32);
        output.WriteBool(IsSittingOut);
      }
      if (playerInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PlayerInfo);
      }
      if (playerStatus_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PlayerStatus);
      }
      if (HasFrameId) {
        output.WriteRawTag(58);
        output.WriteString(FrameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasSeatReserved) {
        size += 1 + 1;
      }
      if (HasIsEmpty) {
        size += 1 + 1;
      }
      if (HasIsSittingOut) {
        size += 1 + 1;
      }
      if (playerInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerInfo);
      }
      if (playerStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerStatus);
      }
      if (HasFrameId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FrameId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoySeatStatus other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasSeatReserved) {
        SeatReserved = other.SeatReserved;
      }
      if (other.HasIsEmpty) {
        IsEmpty = other.IsEmpty;
      }
      if (other.HasIsSittingOut) {
        IsSittingOut = other.IsSittingOut;
      }
      if (other.playerInfo_ != null) {
        if (playerInfo_ == null) {
          PlayerInfo = new global::Texas.Protocol.PusoyPlayerInfo();
        }
        PlayerInfo.MergeFrom(other.PlayerInfo);
      }
      if (other.playerStatus_ != null) {
        if (playerStatus_ == null) {
          PlayerStatus = new global::Texas.Protocol.PusoyPlayerGamingStatus();
        }
        PlayerStatus.MergeFrom(other.PlayerStatus);
      }
      if (other.HasFrameId) {
        FrameId = other.FrameId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            SeatReserved = input.ReadBool();
            break;
          }
          case 24: {
            IsEmpty = input.ReadBool();
            break;
          }
          case 32: {
            IsSittingOut = input.ReadBool();
            break;
          }
          case 42: {
            if (playerInfo_ == null) {
              PlayerInfo = new global::Texas.Protocol.PusoyPlayerInfo();
            }
            input.ReadMessage(PlayerInfo);
            break;
          }
          case 50: {
            if (playerStatus_ == null) {
              PlayerStatus = new global::Texas.Protocol.PusoyPlayerGamingStatus();
            }
            input.ReadMessage(PlayerStatus);
            break;
          }
          case 58: {
            FrameId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            SeatReserved = input.ReadBool();
            break;
          }
          case 24: {
            IsEmpty = input.ReadBool();
            break;
          }
          case 32: {
            IsSittingOut = input.ReadBool();
            break;
          }
          case 42: {
            if (playerInfo_ == null) {
              PlayerInfo = new global::Texas.Protocol.PusoyPlayerInfo();
            }
            input.ReadMessage(PlayerInfo);
            break;
          }
          case 50: {
            if (playerStatus_ == null) {
              PlayerStatus = new global::Texas.Protocol.PusoyPlayerGamingStatus();
            }
            input.ReadMessage(PlayerStatus);
            break;
          }
          case 58: {
            FrameId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PusoySitDownBRC : pb::IMessage<PusoySitDownBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoySitDownBRC> _parser = new pb::MessageParser<PusoySitDownBRC>(() => new PusoySitDownBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoySitDownBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySitDownBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySitDownBRC(PusoySitDownBRC other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      seatStatus_ = other.seatStatus_ != null ? other.seatStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySitDownBRC Clone() {
      return new PusoySitDownBRC(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seat_status" field.</summary>
    public const int SeatStatusFieldNumber = 2;
    private global::Texas.Protocol.PusoySeatStatus seatStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PusoySeatStatus SeatStatus {
      get { return seatStatus_; }
      set {
        seatStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoySitDownBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoySitDownBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (!object.Equals(SeatStatus, other.SeatStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (seatStatus_ != null) hash ^= SeatStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (seatStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SeatStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (seatStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SeatStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (seatStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SeatStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoySitDownBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.seatStatus_ != null) {
        if (seatStatus_ == null) {
          SeatStatus = new global::Texas.Protocol.PusoySeatStatus();
        }
        SeatStatus.MergeFrom(other.SeatStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 18: {
            if (seatStatus_ == null) {
              SeatStatus = new global::Texas.Protocol.PusoySeatStatus();
            }
            input.ReadMessage(SeatStatus);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 18: {
            if (seatStatus_ == null) {
              SeatStatus = new global::Texas.Protocol.PusoySeatStatus();
            }
            input.ReadMessage(SeatStatus);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///站起REQ/RSP
  /// </summary>
  public sealed partial class PusoyStandUpREQ : pb::IMessage<PusoyStandUpREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyStandUpREQ> _parser = new pb::MessageParser<PusoyStandUpREQ>(() => new PusoyStandUpREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyStandUpREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyStandUpREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyStandUpREQ(PusoyStandUpREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyStandUpREQ Clone() {
      return new PusoyStandUpREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyStandUpREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyStandUpREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyStandUpREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class PusoyStandUpRSP : pb::IMessage<PusoyStandUpRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyStandUpRSP> _parser = new pb::MessageParser<PusoyStandUpRSP>(() => new PusoyStandUpRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyStandUpRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyStandUpRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyStandUpRSP(PusoyStandUpRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyStandUpRSP Clone() {
      return new PusoyStandUpRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyStandUpRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyStandUpRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyStandUpRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PusoyStandUpBRC : pb::IMessage<PusoyStandUpBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyStandUpBRC> _parser = new pb::MessageParser<PusoyStandUpBRC>(() => new PusoyStandUpBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyStandUpBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyStandUpBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyStandUpBRC(PusoyStandUpBRC other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyStandUpBRC Clone() {
      return new PusoyStandUpBRC(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyStandUpBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyStandUpBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyStandUpBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///離開遊戲REQ/RSP
  /// </summary>
  public sealed partial class PusoyLeaveGameREQ : pb::IMessage<PusoyLeaveGameREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyLeaveGameREQ> _parser = new pb::MessageParser<PusoyLeaveGameREQ>(() => new PusoyLeaveGameREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyLeaveGameREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyLeaveGameREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyLeaveGameREQ(PusoyLeaveGameREQ other) : this() {
      _hasBits0 = other._hasBits0;
      leave_ = other.leave_;
      leaveType_ = other.leaveType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyLeaveGameREQ Clone() {
      return new PusoyLeaveGameREQ(this);
    }

    /// <summary>Field number for the "leave" field.</summary>
    public const int LeaveFieldNumber = 1;
    private readonly static bool LeaveDefaultValue = false;

    private bool leave_;
    /// <summary>
    ///leave = true: 離開(如果在遊玩中，下一局離開), leave = false: 取消下一局離開
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Leave {
      get { if ((_hasBits0 & 1) != 0) { return leave_; } else { return LeaveDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leave_ = value;
      }
    }
    /// <summary>Gets whether the "leave" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeave {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "leave" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeave() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "leave_type" field.</summary>
    public const int LeaveTypeFieldNumber = 2;
    private readonly static int LeaveTypeDefaultValue = 0;

    private int leaveType_;
    /// <summary>
    ///1 = 立即離開  2 = 下一局離開
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LeaveType {
      get { if ((_hasBits0 & 2) != 0) { return leaveType_; } else { return LeaveTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        leaveType_ = value;
      }
    }
    /// <summary>Gets whether the "leave_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeaveType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "leave_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeaveType() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyLeaveGameREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyLeaveGameREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Leave != other.Leave) return false;
      if (LeaveType != other.LeaveType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLeave) hash ^= Leave.GetHashCode();
      if (HasLeaveType) hash ^= LeaveType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLeave) {
        output.WriteRawTag(8);
        output.WriteBool(Leave);
      }
      if (HasLeaveType) {
        output.WriteRawTag(16);
        output.WriteInt32(LeaveType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLeave) {
        output.WriteRawTag(8);
        output.WriteBool(Leave);
      }
      if (HasLeaveType) {
        output.WriteRawTag(16);
        output.WriteInt32(LeaveType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLeave) {
        size += 1 + 1;
      }
      if (HasLeaveType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeaveType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyLeaveGameREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasLeave) {
        Leave = other.Leave;
      }
      if (other.HasLeaveType) {
        LeaveType = other.LeaveType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Leave = input.ReadBool();
            break;
          }
          case 16: {
            LeaveType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Leave = input.ReadBool();
            break;
          }
          case 16: {
            LeaveType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PusoyLeaveGameRSP : pb::IMessage<PusoyLeaveGameRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyLeaveGameRSP> _parser = new pb::MessageParser<PusoyLeaveGameRSP>(() => new PusoyLeaveGameRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyLeaveGameRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyLeaveGameRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyLeaveGameRSP(PusoyLeaveGameRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      leave_ = other.leave_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyLeaveGameRSP Clone() {
      return new PusoyLeaveGameRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// 1 = 立即離開 2 = 下一局離開
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "leave" field.</summary>
    public const int LeaveFieldNumber = 2;
    private readonly static bool LeaveDefaultValue = false;

    private bool leave_;
    /// <summary>
    ///leave = true: 離開(如果在遊玩中，下一局離開), leave = false: 取消下一局離開
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Leave {
      get { if ((_hasBits0 & 2) != 0) { return leave_; } else { return LeaveDefaultValue; } }
      set {
        _hasBits0 |= 2;
        leave_ = value;
      }
    }
    /// <summary>Gets whether the "leave" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeave {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "leave" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeave() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyLeaveGameRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyLeaveGameRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Leave != other.Leave) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasLeave) hash ^= Leave.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasLeave) {
        output.WriteRawTag(16);
        output.WriteBool(Leave);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasLeave) {
        output.WriteRawTag(16);
        output.WriteBool(Leave);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasLeave) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyLeaveGameRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasLeave) {
        Leave = other.Leave;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Leave = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Leave = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PusoyLeaveGameBRC : pb::IMessage<PusoyLeaveGameBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyLeaveGameBRC> _parser = new pb::MessageParser<PusoyLeaveGameBRC>(() => new PusoyLeaveGameBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyLeaveGameBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyLeaveGameBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyLeaveGameBRC(PusoyLeaveGameBRC other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      uid_ = other.uid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyLeaveGameBRC Clone() {
      return new PusoyLeaveGameBRC(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 2) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyLeaveGameBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyLeaveGameBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (Uid != other.Uid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyLeaveGameBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///手牌排序完畢後進入遊玩中準備狀態
  ///done = true 表示準備中  = false 表示取消準備 --> 繼續排序手牌
  /// </summary>
  public sealed partial class PusoySetArrangementDoneREQ : pb::IMessage<PusoySetArrangementDoneREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoySetArrangementDoneREQ> _parser = new pb::MessageParser<PusoySetArrangementDoneREQ>(() => new PusoySetArrangementDoneREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoySetArrangementDoneREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySetArrangementDoneREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySetArrangementDoneREQ(PusoySetArrangementDoneREQ other) : this() {
      _hasBits0 = other._hasBits0;
      done_ = other.done_;
      cards_ = other.cards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySetArrangementDoneREQ Clone() {
      return new PusoySetArrangementDoneREQ(this);
    }

    /// <summary>Field number for the "done" field.</summary>
    public const int DoneFieldNumber = 1;
    private readonly static bool DoneDefaultValue = false;

    private bool done_;
    /// <summary>
    ///true = Done, false = Cancel
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Done {
      get { if ((_hasBits0 & 1) != 0) { return done_; } else { return DoneDefaultValue; } }
      set {
        _hasBits0 |= 1;
        done_ = value;
      }
    }
    /// <summary>Gets whether the "done" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDone {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "done" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDone() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "cards" field.</summary>
    public const int CardsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_cards_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> cards_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Cards {
      get { return cards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoySetArrangementDoneREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoySetArrangementDoneREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Done != other.Done) return false;
      if(!cards_.Equals(other.cards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDone) hash ^= Done.GetHashCode();
      hash ^= cards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDone) {
        output.WriteRawTag(8);
        output.WriteBool(Done);
      }
      cards_.WriteTo(output, _repeated_cards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDone) {
        output.WriteRawTag(8);
        output.WriteBool(Done);
      }
      cards_.WriteTo(ref output, _repeated_cards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasDone) {
        size += 1 + 1;
      }
      size += cards_.CalculateSize(_repeated_cards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoySetArrangementDoneREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasDone) {
        Done = other.Done;
      }
      cards_.Add(other.cards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Done = input.ReadBool();
            break;
          }
          case 18: {
            cards_.AddEntriesFrom(input, _repeated_cards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Done = input.ReadBool();
            break;
          }
          case 18: {
            cards_.AddEntriesFrom(ref input, _repeated_cards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///手牌排序完畢後進入遊玩中準備狀態
  ///done = true 表示準備中  = false 表示取消準備 --> 繼續排序手牌
  /// </summary>
  public sealed partial class PusoySetArrangementDoneRSP : pb::IMessage<PusoySetArrangementDoneRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoySetArrangementDoneRSP> _parser = new pb::MessageParser<PusoySetArrangementDoneRSP>(() => new PusoySetArrangementDoneRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoySetArrangementDoneRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySetArrangementDoneRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySetArrangementDoneRSP(PusoySetArrangementDoneRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      done_ = other.done_;
      cards_ = other.cards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySetArrangementDoneRSP Clone() {
      return new PusoySetArrangementDoneRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "done" field.</summary>
    public const int DoneFieldNumber = 2;
    private readonly static bool DoneDefaultValue = false;

    private bool done_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Done {
      get { if ((_hasBits0 & 2) != 0) { return done_; } else { return DoneDefaultValue; } }
      set {
        _hasBits0 |= 2;
        done_ = value;
      }
    }
    /// <summary>Gets whether the "done" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDone {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "done" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDone() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "cards" field.</summary>
    public const int CardsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_cards_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> cards_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///返回伺服器排序過後的手牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Cards {
      get { return cards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoySetArrangementDoneRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoySetArrangementDoneRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Done != other.Done) return false;
      if(!cards_.Equals(other.cards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasDone) hash ^= Done.GetHashCode();
      hash ^= cards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasDone) {
        output.WriteRawTag(16);
        output.WriteBool(Done);
      }
      cards_.WriteTo(output, _repeated_cards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasDone) {
        output.WriteRawTag(16);
        output.WriteBool(Done);
      }
      cards_.WriteTo(ref output, _repeated_cards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasDone) {
        size += 1 + 1;
      }
      size += cards_.CalculateSize(_repeated_cards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoySetArrangementDoneRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasDone) {
        Done = other.Done;
      }
      cards_.Add(other.cards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Done = input.ReadBool();
            break;
          }
          case 26: {
            cards_.AddEntriesFrom(input, _repeated_cards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Done = input.ReadBool();
            break;
          }
          case 26: {
            cards_.AddEntriesFrom(ref input, _repeated_cards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///手牌排序完畢後進入遊玩中準備狀態廣播
  ///done = true 表示準備中  = false 表示取消準備 --> 繼續排序手牌
  /// </summary>
  public sealed partial class PusoySetArrangementDoneBRC : pb::IMessage<PusoySetArrangementDoneBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoySetArrangementDoneBRC> _parser = new pb::MessageParser<PusoySetArrangementDoneBRC>(() => new PusoySetArrangementDoneBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoySetArrangementDoneBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySetArrangementDoneBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySetArrangementDoneBRC(PusoySetArrangementDoneBRC other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      uid_ = other.uid_;
      done_ = other.done_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySetArrangementDoneBRC Clone() {
      return new PusoySetArrangementDoneBRC(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 2) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "done" field.</summary>
    public const int DoneFieldNumber = 3;
    private readonly static bool DoneDefaultValue = false;

    private bool done_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Done {
      get { if ((_hasBits0 & 4) != 0) { return done_; } else { return DoneDefaultValue; } }
      set {
        _hasBits0 |= 4;
        done_ = value;
      }
    }
    /// <summary>Gets whether the "done" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDone {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "done" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDone() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoySetArrangementDoneBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoySetArrangementDoneBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (Uid != other.Uid) return false;
      if (Done != other.Done) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasDone) hash ^= Done.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (HasDone) {
        output.WriteRawTag(24);
        output.WriteBool(Done);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (HasDone) {
        output.WriteRawTag(24);
        output.WriteBool(Done);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasDone) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoySetArrangementDoneBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasDone) {
        Done = other.Done;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
          case 24: {
            Done = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
          case 24: {
            Done = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PusoySetGameReadyREQ : pb::IMessage<PusoySetGameReadyREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoySetGameReadyREQ> _parser = new pb::MessageParser<PusoySetGameReadyREQ>(() => new PusoySetGameReadyREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoySetGameReadyREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySetGameReadyREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySetGameReadyREQ(PusoySetGameReadyREQ other) : this() {
      _hasBits0 = other._hasBits0;
      ready_ = other.ready_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySetGameReadyREQ Clone() {
      return new PusoySetGameReadyREQ(this);
    }

    /// <summary>Field number for the "ready" field.</summary>
    public const int ReadyFieldNumber = 1;
    private readonly static int ReadyDefaultValue = 0;

    private int ready_;
    /// <summary>
    ///1 = Ready, 0 = Cancel
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ready {
      get { if ((_hasBits0 & 1) != 0) { return ready_; } else { return ReadyDefaultValue; } }
      set {
        _hasBits0 |= 1;
        ready_ = value;
      }
    }
    /// <summary>Gets whether the "ready" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReady {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "ready" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReady() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoySetGameReadyREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoySetGameReadyREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ready != other.Ready) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasReady) hash ^= Ready.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasReady) {
        output.WriteRawTag(8);
        output.WriteInt32(Ready);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasReady) {
        output.WriteRawTag(8);
        output.WriteInt32(Ready);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasReady) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ready);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoySetGameReadyREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasReady) {
        Ready = other.Ready;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ready = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ready = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///仿照之前其他模式開始遊戲前的倒數計時廣播
  /// </summary>
  public sealed partial class PusoyCountdownBRC : pb::IMessage<PusoyCountdownBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyCountdownBRC> _parser = new pb::MessageParser<PusoyCountdownBRC>(() => new PusoyCountdownBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyCountdownBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyCountdownBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyCountdownBRC(PusoyCountdownBRC other) : this() {
      _hasBits0 = other._hasBits0;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyCountdownBRC Clone() {
      return new PusoyCountdownBRC(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private readonly static int CountDefaultValue = 0;

    private int count_;
    /// <summary>
    ///倒數的秒數
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Count {
      get { if ((_hasBits0 & 1) != 0) { return count_; } else { return CountDefaultValue; } }
      set {
        _hasBits0 |= 1;
        count_ = value;
      }
    }
    /// <summary>Gets whether the "count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCount {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCount() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyCountdownBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyCountdownBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCount) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCount) {
        output.WriteRawTag(8);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCount) {
        output.WriteRawTag(8);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyCountdownBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasCount) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PusoyGameStartBRC : pb::IMessage<PusoyGameStartBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyGameStartBRC> _parser = new pb::MessageParser<PusoyGameStartBRC>(() => new PusoyGameStartBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyGameStartBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyGameStartBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyGameStartBRC(PusoyGameStartBRC other) : this() {
      _hasBits0 = other._hasBits0;
      leftTime_ = other.leftTime_;
      gameId_ = other.gameId_;
      seats_ = other.seats_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyGameStartBRC Clone() {
      return new PusoyGameStartBRC(this);
    }

    /// <summary>Field number for the "left_time" field.</summary>
    public const int LeftTimeFieldNumber = 1;
    private readonly static int LeftTimeDefaultValue = 0;

    private int leftTime_;
    /// <summary>
    ///剩餘時間 單位: 秒
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LeftTime {
      get { if ((_hasBits0 & 1) != 0) { return leftTime_; } else { return LeftTimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leftTime_ = value;
      }
    }
    /// <summary>Gets whether the "left_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeftTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "left_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeftTime() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 2;
    private readonly static string GameIdDefaultValue = "";

    private string gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GameId {
      get { return gameId_ ?? GameIdDefaultValue; }
      set {
        gameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "game_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return gameId_ != null; }
    }
    /// <summary>Clears the value of the "game_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      gameId_ = null;
    }

    /// <summary>Field number for the "seats" field.</summary>
    public const int SeatsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PusoySeatStatus> _repeated_seats_codec
        = pb::FieldCodec.ForMessage(26, global::Texas.Protocol.PusoySeatStatus.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PusoySeatStatus> seats_ = new pbc::RepeatedField<global::Texas.Protocol.PusoySeatStatus>();
    /// <summary>
    ///座位的狀態
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PusoySeatStatus> Seats {
      get { return seats_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyGameStartBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyGameStartBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LeftTime != other.LeftTime) return false;
      if (GameId != other.GameId) return false;
      if(!seats_.Equals(other.seats_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLeftTime) hash ^= LeftTime.GetHashCode();
      if (HasGameId) hash ^= GameId.GetHashCode();
      hash ^= seats_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLeftTime) {
        output.WriteRawTag(8);
        output.WriteInt32(LeftTime);
      }
      if (HasGameId) {
        output.WriteRawTag(18);
        output.WriteString(GameId);
      }
      seats_.WriteTo(output, _repeated_seats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLeftTime) {
        output.WriteRawTag(8);
        output.WriteInt32(LeftTime);
      }
      if (HasGameId) {
        output.WriteRawTag(18);
        output.WriteString(GameId);
      }
      seats_.WriteTo(ref output, _repeated_seats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLeftTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeftTime);
      }
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameId);
      }
      size += seats_.CalculateSize(_repeated_seats_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyGameStartBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasLeftTime) {
        LeftTime = other.LeftTime;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      seats_.Add(other.seats_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LeftTime = input.ReadInt32();
            break;
          }
          case 18: {
            GameId = input.ReadString();
            break;
          }
          case 26: {
            seats_.AddEntriesFrom(input, _repeated_seats_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LeftTime = input.ReadInt32();
            break;
          }
          case 18: {
            GameId = input.ReadString();
            break;
          }
          case 26: {
            seats_.AddEntriesFrom(ref input, _repeated_seats_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///房間結束後廣播盈虧畫面
  /// </summary>
  public sealed partial class PusoyRoomOverBRC : pb::IMessage<PusoyRoomOverBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyRoomOverBRC> _parser = new pb::MessageParser<PusoyRoomOverBRC>(() => new PusoyRoomOverBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyRoomOverBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyRoomOverBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyRoomOverBRC(PusoyRoomOverBRC other) : this() {
      _hasBits0 = other._hasBits0;
      profit_ = other.profit_.Clone();
      isRoomStarted_ = other.isRoomStarted_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyRoomOverBRC Clone() {
      return new PusoyRoomOverBRC(this);
    }

    /// <summary>Field number for the "profit" field.</summary>
    public const int ProfitFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ProfitInfo> _repeated_profit_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.ProfitInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ProfitInfo> profit_ = new pbc::RepeatedField<global::Texas.Protocol.ProfitInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ProfitInfo> Profit {
      get { return profit_; }
    }

    /// <summary>Field number for the "is_room_started" field.</summary>
    public const int IsRoomStartedFieldNumber = 2;
    private readonly static bool IsRoomStartedDefaultValue = false;

    private bool isRoomStarted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsRoomStarted {
      get { if ((_hasBits0 & 1) != 0) { return isRoomStarted_; } else { return IsRoomStartedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isRoomStarted_ = value;
      }
    }
    /// <summary>Gets whether the "is_room_started" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsRoomStarted {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_room_started" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsRoomStarted() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyRoomOverBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyRoomOverBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!profit_.Equals(other.profit_)) return false;
      if (IsRoomStarted != other.IsRoomStarted) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= profit_.GetHashCode();
      if (HasIsRoomStarted) hash ^= IsRoomStarted.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      profit_.WriteTo(output, _repeated_profit_codec);
      if (HasIsRoomStarted) {
        output.WriteRawTag(16);
        output.WriteBool(IsRoomStarted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      profit_.WriteTo(ref output, _repeated_profit_codec);
      if (HasIsRoomStarted) {
        output.WriteRawTag(16);
        output.WriteBool(IsRoomStarted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += profit_.CalculateSize(_repeated_profit_codec);
      if (HasIsRoomStarted) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyRoomOverBRC other) {
      if (other == null) {
        return;
      }
      profit_.Add(other.profit_);
      if (other.HasIsRoomStarted) {
        IsRoomStarted = other.IsRoomStarted;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            profit_.AddEntriesFrom(input, _repeated_profit_codec);
            break;
          }
          case 16: {
            IsRoomStarted = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            profit_.AddEntriesFrom(ref input, _repeated_profit_codec);
            break;
          }
          case 16: {
            IsRoomStarted = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///分數細節結構
  /// </summary>
  public sealed partial class PusoyScoreInfo : pb::IMessage<PusoyScoreInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyScoreInfo> _parser = new pb::MessageParser<PusoyScoreInfo>(() => new PusoyScoreInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyScoreInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyScoreInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyScoreInfo(PusoyScoreInfo other) : this() {
      _hasBits0 = other._hasBits0;
      baseScore_ = other.baseScore_;
      chipScore_ = other.chipScore_;
      opponentSeatid_ = other.opponentSeatid_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyScoreInfo Clone() {
      return new PusoyScoreInfo(this);
    }

    /// <summary>Field number for the "base_score" field.</summary>
    public const int BaseScoreFieldNumber = 1;
    private readonly static int BaseScoreDefaultValue = 0;

    private int baseScore_;
    /// <summary>
    ///輸贏底分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BaseScore {
      get { if ((_hasBits0 & 1) != 0) { return baseScore_; } else { return BaseScoreDefaultValue; } }
      set {
        _hasBits0 |= 1;
        baseScore_ = value;
      }
    }
    /// <summary>Gets whether the "base_score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBaseScore {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "base_score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBaseScore() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "chip_score" field.</summary>
    public const int ChipScoreFieldNumber = 2;
    private readonly static long ChipScoreDefaultValue = 0L;

    private long chipScore_;
    /// <summary>
    ///輸贏的籌碼
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ChipScore {
      get { if ((_hasBits0 & 2) != 0) { return chipScore_; } else { return ChipScoreDefaultValue; } }
      set {
        _hasBits0 |= 2;
        chipScore_ = value;
      }
    }
    /// <summary>Gets whether the "chip_score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChipScore {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "chip_score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChipScore() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "opponent_seatid" field.</summary>
    public const int OpponentSeatidFieldNumber = 3;
    private readonly static int OpponentSeatidDefaultValue = 0;

    private int opponentSeatid_;
    /// <summary>
    ///輸贏的對象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OpponentSeatid {
      get { if ((_hasBits0 & 4) != 0) { return opponentSeatid_; } else { return OpponentSeatidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        opponentSeatid_ = value;
      }
    }
    /// <summary>Gets whether the "opponent_seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOpponentSeatid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "opponent_seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOpponentSeatid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    ///
    ///SCORE_NORMAL = 0,
    ///SCORE_CRACK = 1,
    ///SCORE_PUSOY = 2,
    ///SCORE_WINNER_TAKE_ALL = 3,
    ///SCORE_NATURAL = 4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 8) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyScoreInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyScoreInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BaseScore != other.BaseScore) return false;
      if (ChipScore != other.ChipScore) return false;
      if (OpponentSeatid != other.OpponentSeatid) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBaseScore) hash ^= BaseScore.GetHashCode();
      if (HasChipScore) hash ^= ChipScore.GetHashCode();
      if (HasOpponentSeatid) hash ^= OpponentSeatid.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBaseScore) {
        output.WriteRawTag(8);
        output.WriteInt32(BaseScore);
      }
      if (HasChipScore) {
        output.WriteRawTag(16);
        output.WriteInt64(ChipScore);
      }
      if (HasOpponentSeatid) {
        output.WriteRawTag(24);
        output.WriteInt32(OpponentSeatid);
      }
      if (HasType) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBaseScore) {
        output.WriteRawTag(8);
        output.WriteInt32(BaseScore);
      }
      if (HasChipScore) {
        output.WriteRawTag(16);
        output.WriteInt64(ChipScore);
      }
      if (HasOpponentSeatid) {
        output.WriteRawTag(24);
        output.WriteInt32(OpponentSeatid);
      }
      if (HasType) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBaseScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BaseScore);
      }
      if (HasChipScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ChipScore);
      }
      if (HasOpponentSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OpponentSeatid);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyScoreInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasBaseScore) {
        BaseScore = other.BaseScore;
      }
      if (other.HasChipScore) {
        ChipScore = other.ChipScore;
      }
      if (other.HasOpponentSeatid) {
        OpponentSeatid = other.OpponentSeatid;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BaseScore = input.ReadInt32();
            break;
          }
          case 16: {
            ChipScore = input.ReadInt64();
            break;
          }
          case 24: {
            OpponentSeatid = input.ReadInt32();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BaseScore = input.ReadInt32();
            break;
          }
          case 16: {
            ChipScore = input.ReadInt64();
            break;
          }
          case 24: {
            OpponentSeatid = input.ReadInt32();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家手牌分數，裡面有多個分數細節
  /// </summary>
  public sealed partial class PusoyHandScoreInfo : pb::IMessage<PusoyHandScoreInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyHandScoreInfo> _parser = new pb::MessageParser<PusoyHandScoreInfo>(() => new PusoyHandScoreInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyHandScoreInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyHandScoreInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyHandScoreInfo(PusoyHandScoreInfo other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      uid_ = other.uid_;
      frontScores_ = other.frontScores_.Clone();
      midScores_ = other.midScores_.Clone();
      backScores_ = other.backScores_.Clone();
      totalScore_ = other.totalScore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyHandScoreInfo Clone() {
      return new PusoyHandScoreInfo(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 2) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "front_scores" field.</summary>
    public const int FrontScoresFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PusoyScoreInfo> _repeated_frontScores_codec
        = pb::FieldCodec.ForMessage(26, global::Texas.Protocol.PusoyScoreInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PusoyScoreInfo> frontScores_ = new pbc::RepeatedField<global::Texas.Protocol.PusoyScoreInfo>();
    /// <summary>
    ///頭道分數細節
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PusoyScoreInfo> FrontScores {
      get { return frontScores_; }
    }

    /// <summary>Field number for the "mid_scores" field.</summary>
    public const int MidScoresFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PusoyScoreInfo> _repeated_midScores_codec
        = pb::FieldCodec.ForMessage(34, global::Texas.Protocol.PusoyScoreInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PusoyScoreInfo> midScores_ = new pbc::RepeatedField<global::Texas.Protocol.PusoyScoreInfo>();
    /// <summary>
    ///中道分數細節
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PusoyScoreInfo> MidScores {
      get { return midScores_; }
    }

    /// <summary>Field number for the "back_scores" field.</summary>
    public const int BackScoresFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PusoyScoreInfo> _repeated_backScores_codec
        = pb::FieldCodec.ForMessage(42, global::Texas.Protocol.PusoyScoreInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PusoyScoreInfo> backScores_ = new pbc::RepeatedField<global::Texas.Protocol.PusoyScoreInfo>();
    /// <summary>
    ///Natural, Pusoy額外分數直接塞尾道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PusoyScoreInfo> BackScores {
      get { return backScores_; }
    }

    /// <summary>Field number for the "total_score" field.</summary>
    public const int TotalScoreFieldNumber = 6;
    private readonly static long TotalScoreDefaultValue = 0L;

    private long totalScore_;
    /// <summary>
    ///總分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalScore {
      get { if ((_hasBits0 & 4) != 0) { return totalScore_; } else { return TotalScoreDefaultValue; } }
      set {
        _hasBits0 |= 4;
        totalScore_ = value;
      }
    }
    /// <summary>Gets whether the "total_score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalScore {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "total_score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalScore() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyHandScoreInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyHandScoreInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (Uid != other.Uid) return false;
      if(!frontScores_.Equals(other.frontScores_)) return false;
      if(!midScores_.Equals(other.midScores_)) return false;
      if(!backScores_.Equals(other.backScores_)) return false;
      if (TotalScore != other.TotalScore) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      hash ^= frontScores_.GetHashCode();
      hash ^= midScores_.GetHashCode();
      hash ^= backScores_.GetHashCode();
      if (HasTotalScore) hash ^= TotalScore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      frontScores_.WriteTo(output, _repeated_frontScores_codec);
      midScores_.WriteTo(output, _repeated_midScores_codec);
      backScores_.WriteTo(output, _repeated_backScores_codec);
      if (HasTotalScore) {
        output.WriteRawTag(48);
        output.WriteInt64(TotalScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      frontScores_.WriteTo(ref output, _repeated_frontScores_codec);
      midScores_.WriteTo(ref output, _repeated_midScores_codec);
      backScores_.WriteTo(ref output, _repeated_backScores_codec);
      if (HasTotalScore) {
        output.WriteRawTag(48);
        output.WriteInt64(TotalScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      size += frontScores_.CalculateSize(_repeated_frontScores_codec);
      size += midScores_.CalculateSize(_repeated_midScores_codec);
      size += backScores_.CalculateSize(_repeated_backScores_codec);
      if (HasTotalScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalScore);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyHandScoreInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      frontScores_.Add(other.frontScores_);
      midScores_.Add(other.midScores_);
      backScores_.Add(other.backScores_);
      if (other.HasTotalScore) {
        TotalScore = other.TotalScore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
          case 26: {
            frontScores_.AddEntriesFrom(input, _repeated_frontScores_codec);
            break;
          }
          case 34: {
            midScores_.AddEntriesFrom(input, _repeated_midScores_codec);
            break;
          }
          case 42: {
            backScores_.AddEntriesFrom(input, _repeated_backScores_codec);
            break;
          }
          case 48: {
            TotalScore = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
          case 26: {
            frontScores_.AddEntriesFrom(ref input, _repeated_frontScores_codec);
            break;
          }
          case 34: {
            midScores_.AddEntriesFrom(ref input, _repeated_midScores_codec);
            break;
          }
          case 42: {
            backScores_.AddEntriesFrom(ref input, _repeated_backScores_codec);
            break;
          }
          case 48: {
            TotalScore = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///手牌結算
  /// </summary>
  public sealed partial class PusoyGameResultBRC : pb::IMessage<PusoyGameResultBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyGameResultBRC> _parser = new pb::MessageParser<PusoyGameResultBRC>(() => new PusoyGameResultBRC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyGameResultBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyGameResultBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyGameResultBRC(PusoyGameResultBRC other) : this() {
      seats_ = other.seats_.Clone();
      naturalHands_ = other.naturalHands_.Clone();
      crackedHands_ = other.crackedHands_.Clone();
      normalHands_ = other.normalHands_.Clone();
      pusoyHands_ = other.pusoyHands_.Clone();
      winnerTakeAll_ = other.winnerTakeAll_ != null ? other.winnerTakeAll_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyGameResultBRC Clone() {
      return new PusoyGameResultBRC(this);
    }

    /// <summary>Field number for the "seats" field.</summary>
    public const int SeatsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PusoySeatStatus> _repeated_seats_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.PusoySeatStatus.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PusoySeatStatus> seats_ = new pbc::RepeatedField<global::Texas.Protocol.PusoySeatStatus>();
    /// <summary>
    ///座位的狀態
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PusoySeatStatus> Seats {
      get { return seats_; }
    }

    /// <summary>Field number for the "natural_hands" field.</summary>
    public const int NaturalHandsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PusoyHandScoreInfo> _repeated_naturalHands_codec
        = pb::FieldCodec.ForMessage(18, global::Texas.Protocol.PusoyHandScoreInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PusoyHandScoreInfo> naturalHands_ = new pbc::RepeatedField<global::Texas.Protocol.PusoyHandScoreInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PusoyHandScoreInfo> NaturalHands {
      get { return naturalHands_; }
    }

    /// <summary>Field number for the "cracked_hands" field.</summary>
    public const int CrackedHandsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PusoyHandScoreInfo> _repeated_crackedHands_codec
        = pb::FieldCodec.ForMessage(26, global::Texas.Protocol.PusoyHandScoreInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PusoyHandScoreInfo> crackedHands_ = new pbc::RepeatedField<global::Texas.Protocol.PusoyHandScoreInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PusoyHandScoreInfo> CrackedHands {
      get { return crackedHands_; }
    }

    /// <summary>Field number for the "normal_hands" field.</summary>
    public const int NormalHandsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PusoyHandScoreInfo> _repeated_normalHands_codec
        = pb::FieldCodec.ForMessage(34, global::Texas.Protocol.PusoyHandScoreInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PusoyHandScoreInfo> normalHands_ = new pbc::RepeatedField<global::Texas.Protocol.PusoyHandScoreInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PusoyHandScoreInfo> NormalHands {
      get { return normalHands_; }
    }

    /// <summary>Field number for the "pusoy_hands" field.</summary>
    public const int PusoyHandsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PusoyHandScoreInfo> _repeated_pusoyHands_codec
        = pb::FieldCodec.ForMessage(42, global::Texas.Protocol.PusoyHandScoreInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PusoyHandScoreInfo> pusoyHands_ = new pbc::RepeatedField<global::Texas.Protocol.PusoyHandScoreInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PusoyHandScoreInfo> PusoyHands {
      get { return pusoyHands_; }
    }

    /// <summary>Field number for the "winner_take_all" field.</summary>
    public const int WinnerTakeAllFieldNumber = 6;
    private global::Texas.Protocol.PusoyHandScoreInfo winnerTakeAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PusoyHandScoreInfo WinnerTakeAll {
      get { return winnerTakeAll_; }
      set {
        winnerTakeAll_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyGameResultBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyGameResultBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!seats_.Equals(other.seats_)) return false;
      if(!naturalHands_.Equals(other.naturalHands_)) return false;
      if(!crackedHands_.Equals(other.crackedHands_)) return false;
      if(!normalHands_.Equals(other.normalHands_)) return false;
      if(!pusoyHands_.Equals(other.pusoyHands_)) return false;
      if (!object.Equals(WinnerTakeAll, other.WinnerTakeAll)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= seats_.GetHashCode();
      hash ^= naturalHands_.GetHashCode();
      hash ^= crackedHands_.GetHashCode();
      hash ^= normalHands_.GetHashCode();
      hash ^= pusoyHands_.GetHashCode();
      if (winnerTakeAll_ != null) hash ^= WinnerTakeAll.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      seats_.WriteTo(output, _repeated_seats_codec);
      naturalHands_.WriteTo(output, _repeated_naturalHands_codec);
      crackedHands_.WriteTo(output, _repeated_crackedHands_codec);
      normalHands_.WriteTo(output, _repeated_normalHands_codec);
      pusoyHands_.WriteTo(output, _repeated_pusoyHands_codec);
      if (winnerTakeAll_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(WinnerTakeAll);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      seats_.WriteTo(ref output, _repeated_seats_codec);
      naturalHands_.WriteTo(ref output, _repeated_naturalHands_codec);
      crackedHands_.WriteTo(ref output, _repeated_crackedHands_codec);
      normalHands_.WriteTo(ref output, _repeated_normalHands_codec);
      pusoyHands_.WriteTo(ref output, _repeated_pusoyHands_codec);
      if (winnerTakeAll_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(WinnerTakeAll);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += seats_.CalculateSize(_repeated_seats_codec);
      size += naturalHands_.CalculateSize(_repeated_naturalHands_codec);
      size += crackedHands_.CalculateSize(_repeated_crackedHands_codec);
      size += normalHands_.CalculateSize(_repeated_normalHands_codec);
      size += pusoyHands_.CalculateSize(_repeated_pusoyHands_codec);
      if (winnerTakeAll_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WinnerTakeAll);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyGameResultBRC other) {
      if (other == null) {
        return;
      }
      seats_.Add(other.seats_);
      naturalHands_.Add(other.naturalHands_);
      crackedHands_.Add(other.crackedHands_);
      normalHands_.Add(other.normalHands_);
      pusoyHands_.Add(other.pusoyHands_);
      if (other.winnerTakeAll_ != null) {
        if (winnerTakeAll_ == null) {
          WinnerTakeAll = new global::Texas.Protocol.PusoyHandScoreInfo();
        }
        WinnerTakeAll.MergeFrom(other.WinnerTakeAll);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            seats_.AddEntriesFrom(input, _repeated_seats_codec);
            break;
          }
          case 18: {
            naturalHands_.AddEntriesFrom(input, _repeated_naturalHands_codec);
            break;
          }
          case 26: {
            crackedHands_.AddEntriesFrom(input, _repeated_crackedHands_codec);
            break;
          }
          case 34: {
            normalHands_.AddEntriesFrom(input, _repeated_normalHands_codec);
            break;
          }
          case 42: {
            pusoyHands_.AddEntriesFrom(input, _repeated_pusoyHands_codec);
            break;
          }
          case 50: {
            if (winnerTakeAll_ == null) {
              WinnerTakeAll = new global::Texas.Protocol.PusoyHandScoreInfo();
            }
            input.ReadMessage(WinnerTakeAll);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            seats_.AddEntriesFrom(ref input, _repeated_seats_codec);
            break;
          }
          case 18: {
            naturalHands_.AddEntriesFrom(ref input, _repeated_naturalHands_codec);
            break;
          }
          case 26: {
            crackedHands_.AddEntriesFrom(ref input, _repeated_crackedHands_codec);
            break;
          }
          case 34: {
            normalHands_.AddEntriesFrom(ref input, _repeated_normalHands_codec);
            break;
          }
          case 42: {
            pusoyHands_.AddEntriesFrom(ref input, _repeated_pusoyHands_codec);
            break;
          }
          case 50: {
            if (winnerTakeAll_ == null) {
              WinnerTakeAll = new global::Texas.Protocol.PusoyHandScoreInfo();
            }
            input.ReadMessage(WinnerTakeAll);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///紀錄Pusoy對象
  /// </summary>
  public sealed partial class PusoySimplifiedInfo : pb::IMessage<PusoySimplifiedInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoySimplifiedInfo> _parser = new pb::MessageParser<PusoySimplifiedInfo>(() => new PusoySimplifiedInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoySimplifiedInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySimplifiedInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySimplifiedInfo(PusoySimplifiedInfo other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      score_ = other.score_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySimplifiedInfo Clone() {
      return new PusoySimplifiedInfo(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 2;
    private readonly static long ScoreDefaultValue = 0L;

    private long score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Score {
      get { if ((_hasBits0 & 2) != 0) { return score_; } else { return ScoreDefaultValue; } }
      set {
        _hasBits0 |= 2;
        score_ = value;
      }
    }
    /// <summary>Gets whether the "score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScore {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScore() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoySimplifiedInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoySimplifiedInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (Score != other.Score) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasScore) hash ^= Score.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasScore) {
        output.WriteRawTag(16);
        output.WriteInt64(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasScore) {
        output.WriteRawTag(16);
        output.WriteInt64(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Score);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoySimplifiedInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasScore) {
        Score = other.Score;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Score = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Score = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PusoySimplifiedGameResult : pb::IMessage<PusoySimplifiedGameResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoySimplifiedGameResult> _parser = new pb::MessageParser<PusoySimplifiedGameResult>(() => new PusoySimplifiedGameResult());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoySimplifiedGameResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySimplifiedGameResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySimplifiedGameResult(PusoySimplifiedGameResult other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      seatid_ = other.seatid_;
      chips_ = other.chips_;
      cards_ = other.cards_.Clone();
      frontScores_ = other.frontScores_.Clone();
      midScores_ = other.midScores_.Clone();
      backScores_ = other.backScores_.Clone();
      backScore_ = other.backScore_;
      midScore_ = other.midScore_;
      frontScore_ = other.frontScore_;
      totalScore_ = other.totalScore_;
      totalProfit_ = other.totalProfit_;
      rank_ = other.rank_;
      isCracked_ = other.isCracked_;
      crackScore_ = other.crackScore_;
      crackScorePerSeat_ = other.crackScorePerSeat_;
      isNatural_ = other.isNatural_;
      naturalType_ = other.naturalType_;
      naturalScore_ = other.naturalScore_;
      naturalScorePerSeat_ = other.naturalScorePerSeat_;
      isWinnerTakeAll_ = other.isWinnerTakeAll_;
      pusoy_ = other.pusoy_.Clone();
      playerInfo_ = other.playerInfo_ != null ? other.playerInfo_.Clone() : null;
      crackTotalScore_ = other.crackTotalScore_;
      pusoyTotalScore_ = other.pusoyTotalScore_;
      naturalTotalScore_ = other.naturalTotalScore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySimplifiedGameResult Clone() {
      return new PusoySimplifiedGameResult(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 2;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 2) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "chips" field.</summary>
    public const int ChipsFieldNumber = 3;
    private readonly static long ChipsDefaultValue = 0L;

    private long chips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Chips {
      get { if ((_hasBits0 & 4) != 0) { return chips_; } else { return ChipsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        chips_ = value;
      }
    }
    /// <summary>Gets whether the "chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChips {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChips() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "cards" field.</summary>
    public const int CardsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_cards_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> cards_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Cards {
      get { return cards_; }
    }

    /// <summary>Field number for the "front_scores" field.</summary>
    public const int FrontScoresFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PusoyScoreInfo> _repeated_frontScores_codec
        = pb::FieldCodec.ForMessage(42, global::Texas.Protocol.PusoyScoreInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PusoyScoreInfo> frontScores_ = new pbc::RepeatedField<global::Texas.Protocol.PusoyScoreInfo>();
    /// <summary>
    ///頭道分數細節
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PusoyScoreInfo> FrontScores {
      get { return frontScores_; }
    }

    /// <summary>Field number for the "mid_scores" field.</summary>
    public const int MidScoresFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PusoyScoreInfo> _repeated_midScores_codec
        = pb::FieldCodec.ForMessage(50, global::Texas.Protocol.PusoyScoreInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PusoyScoreInfo> midScores_ = new pbc::RepeatedField<global::Texas.Protocol.PusoyScoreInfo>();
    /// <summary>
    ///中道分數細節
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PusoyScoreInfo> MidScores {
      get { return midScores_; }
    }

    /// <summary>Field number for the "back_scores" field.</summary>
    public const int BackScoresFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PusoyScoreInfo> _repeated_backScores_codec
        = pb::FieldCodec.ForMessage(58, global::Texas.Protocol.PusoyScoreInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PusoyScoreInfo> backScores_ = new pbc::RepeatedField<global::Texas.Protocol.PusoyScoreInfo>();
    /// <summary>
    ///尾道分數細節
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PusoyScoreInfo> BackScores {
      get { return backScores_; }
    }

    /// <summary>Field number for the "back_score" field.</summary>
    public const int BackScoreFieldNumber = 8;
    private readonly static long BackScoreDefaultValue = 0L;

    private long backScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BackScore {
      get { if ((_hasBits0 & 8) != 0) { return backScore_; } else { return BackScoreDefaultValue; } }
      set {
        _hasBits0 |= 8;
        backScore_ = value;
      }
    }
    /// <summary>Gets whether the "back_score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBackScore {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "back_score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBackScore() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "mid_score" field.</summary>
    public const int MidScoreFieldNumber = 9;
    private readonly static long MidScoreDefaultValue = 0L;

    private long midScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MidScore {
      get { if ((_hasBits0 & 16) != 0) { return midScore_; } else { return MidScoreDefaultValue; } }
      set {
        _hasBits0 |= 16;
        midScore_ = value;
      }
    }
    /// <summary>Gets whether the "mid_score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMidScore {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "mid_score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMidScore() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "front_score" field.</summary>
    public const int FrontScoreFieldNumber = 10;
    private readonly static long FrontScoreDefaultValue = 0L;

    private long frontScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FrontScore {
      get { if ((_hasBits0 & 32) != 0) { return frontScore_; } else { return FrontScoreDefaultValue; } }
      set {
        _hasBits0 |= 32;
        frontScore_ = value;
      }
    }
    /// <summary>Gets whether the "front_score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrontScore {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "front_score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrontScore() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "total_score" field.</summary>
    public const int TotalScoreFieldNumber = 11;
    private readonly static long TotalScoreDefaultValue = 0L;

    private long totalScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalScore {
      get { if ((_hasBits0 & 64) != 0) { return totalScore_; } else { return TotalScoreDefaultValue; } }
      set {
        _hasBits0 |= 64;
        totalScore_ = value;
      }
    }
    /// <summary>Gets whether the "total_score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalScore {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "total_score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalScore() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "total_profit" field.</summary>
    public const int TotalProfitFieldNumber = 12;
    private readonly static long TotalProfitDefaultValue = 0L;

    private long totalProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalProfit {
      get { if ((_hasBits0 & 128) != 0) { return totalProfit_; } else { return TotalProfitDefaultValue; } }
      set {
        _hasBits0 |= 128;
        totalProfit_ = value;
      }
    }
    /// <summary>Gets whether the "total_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalProfit {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "total_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalProfit() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 13;
    private readonly static int RankDefaultValue = 0;

    private int rank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rank {
      get { if ((_hasBits0 & 256) != 0) { return rank_; } else { return RankDefaultValue; } }
      set {
        _hasBits0 |= 256;
        rank_ = value;
      }
    }
    /// <summary>Gets whether the "rank" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRank {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "rank" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRank() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "is_cracked" field.</summary>
    public const int IsCrackedFieldNumber = 14;
    private readonly static bool IsCrackedDefaultValue = false;

    private bool isCracked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCracked {
      get { if ((_hasBits0 & 512) != 0) { return isCracked_; } else { return IsCrackedDefaultValue; } }
      set {
        _hasBits0 |= 512;
        isCracked_ = value;
      }
    }
    /// <summary>Gets whether the "is_cracked" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsCracked {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "is_cracked" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsCracked() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "crack_score" field.</summary>
    public const int CrackScoreFieldNumber = 15;
    private readonly static long CrackScoreDefaultValue = 0L;

    private long crackScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CrackScore {
      get { if ((_hasBits0 & 1024) != 0) { return crackScore_; } else { return CrackScoreDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        crackScore_ = value;
      }
    }
    /// <summary>Gets whether the "crack_score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCrackScore {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "crack_score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCrackScore() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "crack_score_per_seat" field.</summary>
    public const int CrackScorePerSeatFieldNumber = 16;
    private readonly static long CrackScorePerSeatDefaultValue = 0L;

    private long crackScorePerSeat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CrackScorePerSeat {
      get { if ((_hasBits0 & 2048) != 0) { return crackScorePerSeat_; } else { return CrackScorePerSeatDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        crackScorePerSeat_ = value;
      }
    }
    /// <summary>Gets whether the "crack_score_per_seat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCrackScorePerSeat {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "crack_score_per_seat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCrackScorePerSeat() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "is_natural" field.</summary>
    public const int IsNaturalFieldNumber = 17;
    private readonly static bool IsNaturalDefaultValue = false;

    private bool isNatural_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsNatural {
      get { if ((_hasBits0 & 4096) != 0) { return isNatural_; } else { return IsNaturalDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        isNatural_ = value;
      }
    }
    /// <summary>Gets whether the "is_natural" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsNatural {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "is_natural" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsNatural() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "natural_type" field.</summary>
    public const int NaturalTypeFieldNumber = 18;
    private readonly static int NaturalTypeDefaultValue = 0;

    private int naturalType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NaturalType {
      get { if ((_hasBits0 & 8192) != 0) { return naturalType_; } else { return NaturalTypeDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        naturalType_ = value;
      }
    }
    /// <summary>Gets whether the "natural_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNaturalType {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "natural_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNaturalType() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "natural_score" field.</summary>
    public const int NaturalScoreFieldNumber = 19;
    private readonly static long NaturalScoreDefaultValue = 0L;

    private long naturalScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NaturalScore {
      get { if ((_hasBits0 & 16384) != 0) { return naturalScore_; } else { return NaturalScoreDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        naturalScore_ = value;
      }
    }
    /// <summary>Gets whether the "natural_score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNaturalScore {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "natural_score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNaturalScore() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "natural_score_per_seat" field.</summary>
    public const int NaturalScorePerSeatFieldNumber = 20;
    private readonly static long NaturalScorePerSeatDefaultValue = 0L;

    private long naturalScorePerSeat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NaturalScorePerSeat {
      get { if ((_hasBits0 & 32768) != 0) { return naturalScorePerSeat_; } else { return NaturalScorePerSeatDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        naturalScorePerSeat_ = value;
      }
    }
    /// <summary>Gets whether the "natural_score_per_seat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNaturalScorePerSeat {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "natural_score_per_seat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNaturalScorePerSeat() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "is_winner_take_all" field.</summary>
    public const int IsWinnerTakeAllFieldNumber = 21;
    private readonly static bool IsWinnerTakeAllDefaultValue = false;

    private bool isWinnerTakeAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsWinnerTakeAll {
      get { if ((_hasBits0 & 65536) != 0) { return isWinnerTakeAll_; } else { return IsWinnerTakeAllDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        isWinnerTakeAll_ = value;
      }
    }
    /// <summary>Gets whether the "is_winner_take_all" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsWinnerTakeAll {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "is_winner_take_all" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsWinnerTakeAll() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "pusoy" field.</summary>
    public const int PusoyFieldNumber = 22;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PusoySimplifiedInfo> _repeated_pusoy_codec
        = pb::FieldCodec.ForMessage(178, global::Texas.Protocol.PusoySimplifiedInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PusoySimplifiedInfo> pusoy_ = new pbc::RepeatedField<global::Texas.Protocol.PusoySimplifiedInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PusoySimplifiedInfo> Pusoy {
      get { return pusoy_; }
    }

    /// <summary>Field number for the "player_info" field.</summary>
    public const int PlayerInfoFieldNumber = 23;
    private global::Texas.Protocol.PusoyPlayerInfo playerInfo_;
    /// <summary>
    ///牌局回顧時需要使用到
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PusoyPlayerInfo PlayerInfo {
      get { return playerInfo_; }
      set {
        playerInfo_ = value;
      }
    }

    /// <summary>Field number for the "crack_total_score" field.</summary>
    public const int CrackTotalScoreFieldNumber = 24;
    private readonly static long CrackTotalScoreDefaultValue = 0L;

    private long crackTotalScore_;
    /// <summary>
    ///爆牌分數總計 (自己+別人)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CrackTotalScore {
      get { if ((_hasBits0 & 131072) != 0) { return crackTotalScore_; } else { return CrackTotalScoreDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        crackTotalScore_ = value;
      }
    }
    /// <summary>Gets whether the "crack_total_score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCrackTotalScore {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "crack_total_score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCrackTotalScore() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "pusoy_total_score" field.</summary>
    public const int PusoyTotalScoreFieldNumber = 25;
    private readonly static long PusoyTotalScoreDefaultValue = 0L;

    private long pusoyTotalScore_;
    /// <summary>
    ///Puosy分數總計 (自己被Pusoy+Pusoy別人)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PusoyTotalScore {
      get { if ((_hasBits0 & 262144) != 0) { return pusoyTotalScore_; } else { return PusoyTotalScoreDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        pusoyTotalScore_ = value;
      }
    }
    /// <summary>Gets whether the "pusoy_total_score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPusoyTotalScore {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "pusoy_total_score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPusoyTotalScore() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "natural_total_score" field.</summary>
    public const int NaturalTotalScoreFieldNumber = 26;
    private readonly static long NaturalTotalScoreDefaultValue = 0L;

    private long naturalTotalScore_;
    /// <summary>
    ///Natural分數總計 (自己Natural+別人Natural扣分)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NaturalTotalScore {
      get { if ((_hasBits0 & 524288) != 0) { return naturalTotalScore_; } else { return NaturalTotalScoreDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        naturalTotalScore_ = value;
      }
    }
    /// <summary>Gets whether the "natural_total_score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNaturalTotalScore {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "natural_total_score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNaturalTotalScore() {
      _hasBits0 &= ~524288;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoySimplifiedGameResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoySimplifiedGameResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Seatid != other.Seatid) return false;
      if (Chips != other.Chips) return false;
      if(!cards_.Equals(other.cards_)) return false;
      if(!frontScores_.Equals(other.frontScores_)) return false;
      if(!midScores_.Equals(other.midScores_)) return false;
      if(!backScores_.Equals(other.backScores_)) return false;
      if (BackScore != other.BackScore) return false;
      if (MidScore != other.MidScore) return false;
      if (FrontScore != other.FrontScore) return false;
      if (TotalScore != other.TotalScore) return false;
      if (TotalProfit != other.TotalProfit) return false;
      if (Rank != other.Rank) return false;
      if (IsCracked != other.IsCracked) return false;
      if (CrackScore != other.CrackScore) return false;
      if (CrackScorePerSeat != other.CrackScorePerSeat) return false;
      if (IsNatural != other.IsNatural) return false;
      if (NaturalType != other.NaturalType) return false;
      if (NaturalScore != other.NaturalScore) return false;
      if (NaturalScorePerSeat != other.NaturalScorePerSeat) return false;
      if (IsWinnerTakeAll != other.IsWinnerTakeAll) return false;
      if(!pusoy_.Equals(other.pusoy_)) return false;
      if (!object.Equals(PlayerInfo, other.PlayerInfo)) return false;
      if (CrackTotalScore != other.CrackTotalScore) return false;
      if (PusoyTotalScore != other.PusoyTotalScore) return false;
      if (NaturalTotalScore != other.NaturalTotalScore) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasChips) hash ^= Chips.GetHashCode();
      hash ^= cards_.GetHashCode();
      hash ^= frontScores_.GetHashCode();
      hash ^= midScores_.GetHashCode();
      hash ^= backScores_.GetHashCode();
      if (HasBackScore) hash ^= BackScore.GetHashCode();
      if (HasMidScore) hash ^= MidScore.GetHashCode();
      if (HasFrontScore) hash ^= FrontScore.GetHashCode();
      if (HasTotalScore) hash ^= TotalScore.GetHashCode();
      if (HasTotalProfit) hash ^= TotalProfit.GetHashCode();
      if (HasRank) hash ^= Rank.GetHashCode();
      if (HasIsCracked) hash ^= IsCracked.GetHashCode();
      if (HasCrackScore) hash ^= CrackScore.GetHashCode();
      if (HasCrackScorePerSeat) hash ^= CrackScorePerSeat.GetHashCode();
      if (HasIsNatural) hash ^= IsNatural.GetHashCode();
      if (HasNaturalType) hash ^= NaturalType.GetHashCode();
      if (HasNaturalScore) hash ^= NaturalScore.GetHashCode();
      if (HasNaturalScorePerSeat) hash ^= NaturalScorePerSeat.GetHashCode();
      if (HasIsWinnerTakeAll) hash ^= IsWinnerTakeAll.GetHashCode();
      hash ^= pusoy_.GetHashCode();
      if (playerInfo_ != null) hash ^= PlayerInfo.GetHashCode();
      if (HasCrackTotalScore) hash ^= CrackTotalScore.GetHashCode();
      if (HasPusoyTotalScore) hash ^= PusoyTotalScore.GetHashCode();
      if (HasNaturalTotalScore) hash ^= NaturalTotalScore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasChips) {
        output.WriteRawTag(24);
        output.WriteInt64(Chips);
      }
      cards_.WriteTo(output, _repeated_cards_codec);
      frontScores_.WriteTo(output, _repeated_frontScores_codec);
      midScores_.WriteTo(output, _repeated_midScores_codec);
      backScores_.WriteTo(output, _repeated_backScores_codec);
      if (HasBackScore) {
        output.WriteRawTag(64);
        output.WriteInt64(BackScore);
      }
      if (HasMidScore) {
        output.WriteRawTag(72);
        output.WriteInt64(MidScore);
      }
      if (HasFrontScore) {
        output.WriteRawTag(80);
        output.WriteInt64(FrontScore);
      }
      if (HasTotalScore) {
        output.WriteRawTag(88);
        output.WriteInt64(TotalScore);
      }
      if (HasTotalProfit) {
        output.WriteRawTag(96);
        output.WriteInt64(TotalProfit);
      }
      if (HasRank) {
        output.WriteRawTag(104);
        output.WriteInt32(Rank);
      }
      if (HasIsCracked) {
        output.WriteRawTag(112);
        output.WriteBool(IsCracked);
      }
      if (HasCrackScore) {
        output.WriteRawTag(120);
        output.WriteInt64(CrackScore);
      }
      if (HasCrackScorePerSeat) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(CrackScorePerSeat);
      }
      if (HasIsNatural) {
        output.WriteRawTag(136, 1);
        output.WriteBool(IsNatural);
      }
      if (HasNaturalType) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(NaturalType);
      }
      if (HasNaturalScore) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(NaturalScore);
      }
      if (HasNaturalScorePerSeat) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(NaturalScorePerSeat);
      }
      if (HasIsWinnerTakeAll) {
        output.WriteRawTag(168, 1);
        output.WriteBool(IsWinnerTakeAll);
      }
      pusoy_.WriteTo(output, _repeated_pusoy_codec);
      if (playerInfo_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(PlayerInfo);
      }
      if (HasCrackTotalScore) {
        output.WriteRawTag(192, 1);
        output.WriteInt64(CrackTotalScore);
      }
      if (HasPusoyTotalScore) {
        output.WriteRawTag(200, 1);
        output.WriteInt64(PusoyTotalScore);
      }
      if (HasNaturalTotalScore) {
        output.WriteRawTag(208, 1);
        output.WriteInt64(NaturalTotalScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasChips) {
        output.WriteRawTag(24);
        output.WriteInt64(Chips);
      }
      cards_.WriteTo(ref output, _repeated_cards_codec);
      frontScores_.WriteTo(ref output, _repeated_frontScores_codec);
      midScores_.WriteTo(ref output, _repeated_midScores_codec);
      backScores_.WriteTo(ref output, _repeated_backScores_codec);
      if (HasBackScore) {
        output.WriteRawTag(64);
        output.WriteInt64(BackScore);
      }
      if (HasMidScore) {
        output.WriteRawTag(72);
        output.WriteInt64(MidScore);
      }
      if (HasFrontScore) {
        output.WriteRawTag(80);
        output.WriteInt64(FrontScore);
      }
      if (HasTotalScore) {
        output.WriteRawTag(88);
        output.WriteInt64(TotalScore);
      }
      if (HasTotalProfit) {
        output.WriteRawTag(96);
        output.WriteInt64(TotalProfit);
      }
      if (HasRank) {
        output.WriteRawTag(104);
        output.WriteInt32(Rank);
      }
      if (HasIsCracked) {
        output.WriteRawTag(112);
        output.WriteBool(IsCracked);
      }
      if (HasCrackScore) {
        output.WriteRawTag(120);
        output.WriteInt64(CrackScore);
      }
      if (HasCrackScorePerSeat) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(CrackScorePerSeat);
      }
      if (HasIsNatural) {
        output.WriteRawTag(136, 1);
        output.WriteBool(IsNatural);
      }
      if (HasNaturalType) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(NaturalType);
      }
      if (HasNaturalScore) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(NaturalScore);
      }
      if (HasNaturalScorePerSeat) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(NaturalScorePerSeat);
      }
      if (HasIsWinnerTakeAll) {
        output.WriteRawTag(168, 1);
        output.WriteBool(IsWinnerTakeAll);
      }
      pusoy_.WriteTo(ref output, _repeated_pusoy_codec);
      if (playerInfo_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(PlayerInfo);
      }
      if (HasCrackTotalScore) {
        output.WriteRawTag(192, 1);
        output.WriteInt64(CrackTotalScore);
      }
      if (HasPusoyTotalScore) {
        output.WriteRawTag(200, 1);
        output.WriteInt64(PusoyTotalScore);
      }
      if (HasNaturalTotalScore) {
        output.WriteRawTag(208, 1);
        output.WriteInt64(NaturalTotalScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Chips);
      }
      size += cards_.CalculateSize(_repeated_cards_codec);
      size += frontScores_.CalculateSize(_repeated_frontScores_codec);
      size += midScores_.CalculateSize(_repeated_midScores_codec);
      size += backScores_.CalculateSize(_repeated_backScores_codec);
      if (HasBackScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BackScore);
      }
      if (HasMidScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MidScore);
      }
      if (HasFrontScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FrontScore);
      }
      if (HasTotalScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalScore);
      }
      if (HasTotalProfit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalProfit);
      }
      if (HasRank) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
      }
      if (HasIsCracked) {
        size += 1 + 1;
      }
      if (HasCrackScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CrackScore);
      }
      if (HasCrackScorePerSeat) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(CrackScorePerSeat);
      }
      if (HasIsNatural) {
        size += 2 + 1;
      }
      if (HasNaturalType) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NaturalType);
      }
      if (HasNaturalScore) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(NaturalScore);
      }
      if (HasNaturalScorePerSeat) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(NaturalScorePerSeat);
      }
      if (HasIsWinnerTakeAll) {
        size += 2 + 1;
      }
      size += pusoy_.CalculateSize(_repeated_pusoy_codec);
      if (playerInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PlayerInfo);
      }
      if (HasCrackTotalScore) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(CrackTotalScore);
      }
      if (HasPusoyTotalScore) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(PusoyTotalScore);
      }
      if (HasNaturalTotalScore) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(NaturalTotalScore);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoySimplifiedGameResult other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasChips) {
        Chips = other.Chips;
      }
      cards_.Add(other.cards_);
      frontScores_.Add(other.frontScores_);
      midScores_.Add(other.midScores_);
      backScores_.Add(other.backScores_);
      if (other.HasBackScore) {
        BackScore = other.BackScore;
      }
      if (other.HasMidScore) {
        MidScore = other.MidScore;
      }
      if (other.HasFrontScore) {
        FrontScore = other.FrontScore;
      }
      if (other.HasTotalScore) {
        TotalScore = other.TotalScore;
      }
      if (other.HasTotalProfit) {
        TotalProfit = other.TotalProfit;
      }
      if (other.HasRank) {
        Rank = other.Rank;
      }
      if (other.HasIsCracked) {
        IsCracked = other.IsCracked;
      }
      if (other.HasCrackScore) {
        CrackScore = other.CrackScore;
      }
      if (other.HasCrackScorePerSeat) {
        CrackScorePerSeat = other.CrackScorePerSeat;
      }
      if (other.HasIsNatural) {
        IsNatural = other.IsNatural;
      }
      if (other.HasNaturalType) {
        NaturalType = other.NaturalType;
      }
      if (other.HasNaturalScore) {
        NaturalScore = other.NaturalScore;
      }
      if (other.HasNaturalScorePerSeat) {
        NaturalScorePerSeat = other.NaturalScorePerSeat;
      }
      if (other.HasIsWinnerTakeAll) {
        IsWinnerTakeAll = other.IsWinnerTakeAll;
      }
      pusoy_.Add(other.pusoy_);
      if (other.playerInfo_ != null) {
        if (playerInfo_ == null) {
          PlayerInfo = new global::Texas.Protocol.PusoyPlayerInfo();
        }
        PlayerInfo.MergeFrom(other.PlayerInfo);
      }
      if (other.HasCrackTotalScore) {
        CrackTotalScore = other.CrackTotalScore;
      }
      if (other.HasPusoyTotalScore) {
        PusoyTotalScore = other.PusoyTotalScore;
      }
      if (other.HasNaturalTotalScore) {
        NaturalTotalScore = other.NaturalTotalScore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            Chips = input.ReadInt64();
            break;
          }
          case 34: {
            cards_.AddEntriesFrom(input, _repeated_cards_codec);
            break;
          }
          case 42: {
            frontScores_.AddEntriesFrom(input, _repeated_frontScores_codec);
            break;
          }
          case 50: {
            midScores_.AddEntriesFrom(input, _repeated_midScores_codec);
            break;
          }
          case 58: {
            backScores_.AddEntriesFrom(input, _repeated_backScores_codec);
            break;
          }
          case 64: {
            BackScore = input.ReadInt64();
            break;
          }
          case 72: {
            MidScore = input.ReadInt64();
            break;
          }
          case 80: {
            FrontScore = input.ReadInt64();
            break;
          }
          case 88: {
            TotalScore = input.ReadInt64();
            break;
          }
          case 96: {
            TotalProfit = input.ReadInt64();
            break;
          }
          case 104: {
            Rank = input.ReadInt32();
            break;
          }
          case 112: {
            IsCracked = input.ReadBool();
            break;
          }
          case 120: {
            CrackScore = input.ReadInt64();
            break;
          }
          case 128: {
            CrackScorePerSeat = input.ReadInt64();
            break;
          }
          case 136: {
            IsNatural = input.ReadBool();
            break;
          }
          case 144: {
            NaturalType = input.ReadInt32();
            break;
          }
          case 152: {
            NaturalScore = input.ReadInt64();
            break;
          }
          case 160: {
            NaturalScorePerSeat = input.ReadInt64();
            break;
          }
          case 168: {
            IsWinnerTakeAll = input.ReadBool();
            break;
          }
          case 178: {
            pusoy_.AddEntriesFrom(input, _repeated_pusoy_codec);
            break;
          }
          case 186: {
            if (playerInfo_ == null) {
              PlayerInfo = new global::Texas.Protocol.PusoyPlayerInfo();
            }
            input.ReadMessage(PlayerInfo);
            break;
          }
          case 192: {
            CrackTotalScore = input.ReadInt64();
            break;
          }
          case 200: {
            PusoyTotalScore = input.ReadInt64();
            break;
          }
          case 208: {
            NaturalTotalScore = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            Chips = input.ReadInt64();
            break;
          }
          case 34: {
            cards_.AddEntriesFrom(ref input, _repeated_cards_codec);
            break;
          }
          case 42: {
            frontScores_.AddEntriesFrom(ref input, _repeated_frontScores_codec);
            break;
          }
          case 50: {
            midScores_.AddEntriesFrom(ref input, _repeated_midScores_codec);
            break;
          }
          case 58: {
            backScores_.AddEntriesFrom(ref input, _repeated_backScores_codec);
            break;
          }
          case 64: {
            BackScore = input.ReadInt64();
            break;
          }
          case 72: {
            MidScore = input.ReadInt64();
            break;
          }
          case 80: {
            FrontScore = input.ReadInt64();
            break;
          }
          case 88: {
            TotalScore = input.ReadInt64();
            break;
          }
          case 96: {
            TotalProfit = input.ReadInt64();
            break;
          }
          case 104: {
            Rank = input.ReadInt32();
            break;
          }
          case 112: {
            IsCracked = input.ReadBool();
            break;
          }
          case 120: {
            CrackScore = input.ReadInt64();
            break;
          }
          case 128: {
            CrackScorePerSeat = input.ReadInt64();
            break;
          }
          case 136: {
            IsNatural = input.ReadBool();
            break;
          }
          case 144: {
            NaturalType = input.ReadInt32();
            break;
          }
          case 152: {
            NaturalScore = input.ReadInt64();
            break;
          }
          case 160: {
            NaturalScorePerSeat = input.ReadInt64();
            break;
          }
          case 168: {
            IsWinnerTakeAll = input.ReadBool();
            break;
          }
          case 178: {
            pusoy_.AddEntriesFrom(ref input, _repeated_pusoy_codec);
            break;
          }
          case 186: {
            if (playerInfo_ == null) {
              PlayerInfo = new global::Texas.Protocol.PusoyPlayerInfo();
            }
            input.ReadMessage(PlayerInfo);
            break;
          }
          case 192: {
            CrackTotalScore = input.ReadInt64();
            break;
          }
          case 200: {
            PusoyTotalScore = input.ReadInt64();
            break;
          }
          case 208: {
            NaturalTotalScore = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///簡化版結算結果
  /// </summary>
  public sealed partial class PusoySimplifiedGameResultBRC : pb::IMessage<PusoySimplifiedGameResultBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoySimplifiedGameResultBRC> _parser = new pb::MessageParser<PusoySimplifiedGameResultBRC>(() => new PusoySimplifiedGameResultBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoySimplifiedGameResultBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySimplifiedGameResultBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySimplifiedGameResultBRC(PusoySimplifiedGameResultBRC other) : this() {
      _hasBits0 = other._hasBits0;
      gameResult_ = other.gameResult_.Clone();
      stageLeftTime_ = other.stageLeftTime_;
      gamesetEndTime_ = other.gamesetEndTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySimplifiedGameResultBRC Clone() {
      return new PusoySimplifiedGameResultBRC(this);
    }

    /// <summary>Field number for the "game_result" field.</summary>
    public const int GameResultFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PusoySimplifiedGameResult> _repeated_gameResult_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.PusoySimplifiedGameResult.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PusoySimplifiedGameResult> gameResult_ = new pbc::RepeatedField<global::Texas.Protocol.PusoySimplifiedGameResult>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PusoySimplifiedGameResult> GameResult {
      get { return gameResult_; }
    }

    /// <summary>Field number for the "stage_left_time" field.</summary>
    public const int StageLeftTimeFieldNumber = 2;
    private readonly static int StageLeftTimeDefaultValue = 0;

    private int stageLeftTime_;
    /// <summary>
    ///從結算到下局開始的伺服器計時時間
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StageLeftTime {
      get { if ((_hasBits0 & 1) != 0) { return stageLeftTime_; } else { return StageLeftTimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        stageLeftTime_ = value;
      }
    }
    /// <summary>Gets whether the "stage_left_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStageLeftTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "stage_left_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStageLeftTime() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "gameset_end_time" field.</summary>
    public const int GamesetEndTimeFieldNumber = 3;
    private readonly static int GamesetEndTimeDefaultValue = 0;

    private int gamesetEndTime_;
    /// <summary>
    ///手牌結算時間，主要用於手牌回顧顯示時間
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GamesetEndTime {
      get { if ((_hasBits0 & 2) != 0) { return gamesetEndTime_; } else { return GamesetEndTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        gamesetEndTime_ = value;
      }
    }
    /// <summary>Gets whether the "gameset_end_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGamesetEndTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "gameset_end_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGamesetEndTime() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoySimplifiedGameResultBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoySimplifiedGameResultBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gameResult_.Equals(other.gameResult_)) return false;
      if (StageLeftTime != other.StageLeftTime) return false;
      if (GamesetEndTime != other.GamesetEndTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gameResult_.GetHashCode();
      if (HasStageLeftTime) hash ^= StageLeftTime.GetHashCode();
      if (HasGamesetEndTime) hash ^= GamesetEndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      gameResult_.WriteTo(output, _repeated_gameResult_codec);
      if (HasStageLeftTime) {
        output.WriteRawTag(16);
        output.WriteInt32(StageLeftTime);
      }
      if (HasGamesetEndTime) {
        output.WriteRawTag(24);
        output.WriteInt32(GamesetEndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      gameResult_.WriteTo(ref output, _repeated_gameResult_codec);
      if (HasStageLeftTime) {
        output.WriteRawTag(16);
        output.WriteInt32(StageLeftTime);
      }
      if (HasGamesetEndTime) {
        output.WriteRawTag(24);
        output.WriteInt32(GamesetEndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += gameResult_.CalculateSize(_repeated_gameResult_codec);
      if (HasStageLeftTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageLeftTime);
      }
      if (HasGamesetEndTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GamesetEndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoySimplifiedGameResultBRC other) {
      if (other == null) {
        return;
      }
      gameResult_.Add(other.gameResult_);
      if (other.HasStageLeftTime) {
        StageLeftTime = other.StageLeftTime;
      }
      if (other.HasGamesetEndTime) {
        GamesetEndTime = other.GamesetEndTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            gameResult_.AddEntriesFrom(input, _repeated_gameResult_codec);
            break;
          }
          case 16: {
            StageLeftTime = input.ReadInt32();
            break;
          }
          case 24: {
            GamesetEndTime = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            gameResult_.AddEntriesFrom(ref input, _repeated_gameResult_codec);
            break;
          }
          case 16: {
            StageLeftTime = input.ReadInt32();
            break;
          }
          case 24: {
            GamesetEndTime = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///牌桌的遊玩狀態，一桌一個
  /// </summary>
  public sealed partial class PusoyPlayingStatus : pb::IMessage<PusoyPlayingStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyPlayingStatus> _parser = new pb::MessageParser<PusoyPlayingStatus>(() => new PusoyPlayingStatus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyPlayingStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyPlayingStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyPlayingStatus(PusoyPlayingStatus other) : this() {
      _hasBits0 = other._hasBits0;
      stage_ = other.stage_;
      stageLeftTime_ = other.stageLeftTime_;
      seats_ = other.seats_.Clone();
      simplifiedGameResult_ = other.simplifiedGameResult_ != null ? other.simplifiedGameResult_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyPlayingStatus Clone() {
      return new PusoyPlayingStatus(this);
    }

    /// <summary>Field number for the "stage" field.</summary>
    public const int StageFieldNumber = 1;
    private readonly static int StageDefaultValue = 0;

    private int stage_;
    /// <summary>
    ///遊戲階段  
    ///0 = 房間尚未開始
    ///1 = 遊戲開始的延遲時間(房間開始倒數三秒或者玩家坐下觸發遊戲開始的短延遲)
    ///2 = 擺牌中
    ///3 = 結算中(前端基本上收不到這個階段)
    ///4 = 遊戲結束的延遲時間(根據表演內容進行延遲)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Stage {
      get { if ((_hasBits0 & 1) != 0) { return stage_; } else { return StageDefaultValue; } }
      set {
        _hasBits0 |= 1;
        stage_ = value;
      }
    }
    /// <summary>Gets whether the "stage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStage {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "stage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStage() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stage_left_time" field.</summary>
    public const int StageLeftTimeFieldNumber = 2;
    private readonly static int StageLeftTimeDefaultValue = 0;

    private int stageLeftTime_;
    /// <summary>
    ///階段剩餘時間，估計只有 stage = 1/2狀態會有
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StageLeftTime {
      get { if ((_hasBits0 & 2) != 0) { return stageLeftTime_; } else { return StageLeftTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        stageLeftTime_ = value;
      }
    }
    /// <summary>Gets whether the "stage_left_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStageLeftTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "stage_left_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStageLeftTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "seats" field.</summary>
    public const int SeatsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PusoySeatStatus> _repeated_seats_codec
        = pb::FieldCodec.ForMessage(26, global::Texas.Protocol.PusoySeatStatus.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PusoySeatStatus> seats_ = new pbc::RepeatedField<global::Texas.Protocol.PusoySeatStatus>();
    /// <summary>
    ///座位的狀態
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PusoySeatStatus> Seats {
      get { return seats_; }
    }

    /// <summary>Field number for the "simplified_game_result" field.</summary>
    public const int SimplifiedGameResultFieldNumber = 4;
    private global::Texas.Protocol.PusoySimplifiedGameResultBRC simplifiedGameResult_;
    /// <summary>
    ///當stage = 4 (GAME_END_DELAY)階段才會有
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PusoySimplifiedGameResultBRC SimplifiedGameResult {
      get { return simplifiedGameResult_; }
      set {
        simplifiedGameResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyPlayingStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyPlayingStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Stage != other.Stage) return false;
      if (StageLeftTime != other.StageLeftTime) return false;
      if(!seats_.Equals(other.seats_)) return false;
      if (!object.Equals(SimplifiedGameResult, other.SimplifiedGameResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStage) hash ^= Stage.GetHashCode();
      if (HasStageLeftTime) hash ^= StageLeftTime.GetHashCode();
      hash ^= seats_.GetHashCode();
      if (simplifiedGameResult_ != null) hash ^= SimplifiedGameResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasStage) {
        output.WriteRawTag(8);
        output.WriteInt32(Stage);
      }
      if (HasStageLeftTime) {
        output.WriteRawTag(16);
        output.WriteInt32(StageLeftTime);
      }
      seats_.WriteTo(output, _repeated_seats_codec);
      if (simplifiedGameResult_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SimplifiedGameResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasStage) {
        output.WriteRawTag(8);
        output.WriteInt32(Stage);
      }
      if (HasStageLeftTime) {
        output.WriteRawTag(16);
        output.WriteInt32(StageLeftTime);
      }
      seats_.WriteTo(ref output, _repeated_seats_codec);
      if (simplifiedGameResult_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SimplifiedGameResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasStage) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stage);
      }
      if (HasStageLeftTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageLeftTime);
      }
      size += seats_.CalculateSize(_repeated_seats_codec);
      if (simplifiedGameResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SimplifiedGameResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyPlayingStatus other) {
      if (other == null) {
        return;
      }
      if (other.HasStage) {
        Stage = other.Stage;
      }
      if (other.HasStageLeftTime) {
        StageLeftTime = other.StageLeftTime;
      }
      seats_.Add(other.seats_);
      if (other.simplifiedGameResult_ != null) {
        if (simplifiedGameResult_ == null) {
          SimplifiedGameResult = new global::Texas.Protocol.PusoySimplifiedGameResultBRC();
        }
        SimplifiedGameResult.MergeFrom(other.SimplifiedGameResult);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Stage = input.ReadInt32();
            break;
          }
          case 16: {
            StageLeftTime = input.ReadInt32();
            break;
          }
          case 26: {
            seats_.AddEntriesFrom(input, _repeated_seats_codec);
            break;
          }
          case 34: {
            if (simplifiedGameResult_ == null) {
              SimplifiedGameResult = new global::Texas.Protocol.PusoySimplifiedGameResultBRC();
            }
            input.ReadMessage(SimplifiedGameResult);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Stage = input.ReadInt32();
            break;
          }
          case 16: {
            StageLeftTime = input.ReadInt32();
            break;
          }
          case 26: {
            seats_.AddEntriesFrom(ref input, _repeated_seats_codec);
            break;
          }
          case 34: {
            if (simplifiedGameResult_ == null) {
              SimplifiedGameResult = new global::Texas.Protocol.PusoySimplifiedGameResultBRC();
            }
            input.ReadMessage(SimplifiedGameResult);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///房間狀態
  /// </summary>
  public sealed partial class PusoyRoomStatus : pb::IMessage<PusoyRoomStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyRoomStatus> _parser = new pb::MessageParser<PusoyRoomStatus>(() => new PusoyRoomStatus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyRoomStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyRoomStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyRoomStatus(PusoyRoomStatus other) : this() {
      _hasBits0 = other._hasBits0;
      playingStatus_ = other.playingStatus_ != null ? other.playingStatus_.Clone() : null;
      isStarted_ = other.isStarted_;
      roomLeftTime_ = other.roomLeftTime_;
      observers_ = other.observers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyRoomStatus Clone() {
      return new PusoyRoomStatus(this);
    }

    /// <summary>Field number for the "playing_status" field.</summary>
    public const int PlayingStatusFieldNumber = 1;
    private global::Texas.Protocol.PusoyPlayingStatus playingStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PusoyPlayingStatus PlayingStatus {
      get { return playingStatus_; }
      set {
        playingStatus_ = value;
      }
    }

    /// <summary>Field number for the "is_started" field.</summary>
    public const int IsStartedFieldNumber = 2;
    private readonly static bool IsStartedDefaultValue = false;

    private bool isStarted_;
    /// <summary>
    ///房間是否開始?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsStarted {
      get { if ((_hasBits0 & 1) != 0) { return isStarted_; } else { return IsStartedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isStarted_ = value;
      }
    }
    /// <summary>Gets whether the "is_started" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsStarted {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_started" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsStarted() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "room_left_time" field.</summary>
    public const int RoomLeftTimeFieldNumber = 3;
    private readonly static int RoomLeftTimeDefaultValue = 0;

    private int roomLeftTime_;
    /// <summary>
    ///房間剩餘多久時間會關閉
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoomLeftTime {
      get { if ((_hasBits0 & 2) != 0) { return roomLeftTime_; } else { return RoomLeftTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        roomLeftTime_ = value;
      }
    }
    /// <summary>Gets whether the "room_left_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomLeftTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "room_left_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomLeftTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "observers" field.</summary>
    public const int ObserversFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Texas.Protocol.UserBrief> _repeated_observers_codec
        = pb::FieldCodec.ForMessage(34, global::Texas.Protocol.UserBrief.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.UserBrief> observers_ = new pbc::RepeatedField<global::Texas.Protocol.UserBrief>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.UserBrief> Observers {
      get { return observers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyRoomStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyRoomStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PlayingStatus, other.PlayingStatus)) return false;
      if (IsStarted != other.IsStarted) return false;
      if (RoomLeftTime != other.RoomLeftTime) return false;
      if(!observers_.Equals(other.observers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (playingStatus_ != null) hash ^= PlayingStatus.GetHashCode();
      if (HasIsStarted) hash ^= IsStarted.GetHashCode();
      if (HasRoomLeftTime) hash ^= RoomLeftTime.GetHashCode();
      hash ^= observers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (playingStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayingStatus);
      }
      if (HasIsStarted) {
        output.WriteRawTag(16);
        output.WriteBool(IsStarted);
      }
      if (HasRoomLeftTime) {
        output.WriteRawTag(24);
        output.WriteInt32(RoomLeftTime);
      }
      observers_.WriteTo(output, _repeated_observers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (playingStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayingStatus);
      }
      if (HasIsStarted) {
        output.WriteRawTag(16);
        output.WriteBool(IsStarted);
      }
      if (HasRoomLeftTime) {
        output.WriteRawTag(24);
        output.WriteInt32(RoomLeftTime);
      }
      observers_.WriteTo(ref output, _repeated_observers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (playingStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayingStatus);
      }
      if (HasIsStarted) {
        size += 1 + 1;
      }
      if (HasRoomLeftTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomLeftTime);
      }
      size += observers_.CalculateSize(_repeated_observers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyRoomStatus other) {
      if (other == null) {
        return;
      }
      if (other.playingStatus_ != null) {
        if (playingStatus_ == null) {
          PlayingStatus = new global::Texas.Protocol.PusoyPlayingStatus();
        }
        PlayingStatus.MergeFrom(other.PlayingStatus);
      }
      if (other.HasIsStarted) {
        IsStarted = other.IsStarted;
      }
      if (other.HasRoomLeftTime) {
        RoomLeftTime = other.RoomLeftTime;
      }
      observers_.Add(other.observers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (playingStatus_ == null) {
              PlayingStatus = new global::Texas.Protocol.PusoyPlayingStatus();
            }
            input.ReadMessage(PlayingStatus);
            break;
          }
          case 16: {
            IsStarted = input.ReadBool();
            break;
          }
          case 24: {
            RoomLeftTime = input.ReadInt32();
            break;
          }
          case 34: {
            observers_.AddEntriesFrom(input, _repeated_observers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (playingStatus_ == null) {
              PlayingStatus = new global::Texas.Protocol.PusoyPlayingStatus();
            }
            input.ReadMessage(PlayingStatus);
            break;
          }
          case 16: {
            IsStarted = input.ReadBool();
            break;
          }
          case 24: {
            RoomLeftTime = input.ReadInt32();
            break;
          }
          case 34: {
            observers_.AddEntriesFrom(ref input, _repeated_observers_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///設置託管狀態REQ/RSP
  /// </summary>
  public sealed partial class PusoySittingOutREQ : pb::IMessage<PusoySittingOutREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoySittingOutREQ> _parser = new pb::MessageParser<PusoySittingOutREQ>(() => new PusoySittingOutREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoySittingOutREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySittingOutREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySittingOutREQ(PusoySittingOutREQ other) : this() {
      _hasBits0 = other._hasBits0;
      sittingOut_ = other.sittingOut_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySittingOutREQ Clone() {
      return new PusoySittingOutREQ(this);
    }

    /// <summary>Field number for the "sitting_out" field.</summary>
    public const int SittingOutFieldNumber = 1;
    private readonly static bool SittingOutDefaultValue = false;

    private bool sittingOut_;
    /// <summary>
    ///true/false 表示進入託管/取消託管狀態
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SittingOut {
      get { if ((_hasBits0 & 1) != 0) { return sittingOut_; } else { return SittingOutDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sittingOut_ = value;
      }
    }
    /// <summary>Gets whether the "sitting_out" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSittingOut {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sitting_out" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSittingOut() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoySittingOutREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoySittingOutREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SittingOut != other.SittingOut) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSittingOut) hash ^= SittingOut.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSittingOut) {
        output.WriteRawTag(8);
        output.WriteBool(SittingOut);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSittingOut) {
        output.WriteRawTag(8);
        output.WriteBool(SittingOut);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSittingOut) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoySittingOutREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasSittingOut) {
        SittingOut = other.SittingOut;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SittingOut = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SittingOut = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PusoySittingOutRSP : pb::IMessage<PusoySittingOutRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoySittingOutRSP> _parser = new pb::MessageParser<PusoySittingOutRSP>(() => new PusoySittingOutRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoySittingOutRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySittingOutRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySittingOutRSP(PusoySittingOutRSP other) : this() {
      _hasBits0 = other._hasBits0;
      sittingOut_ = other.sittingOut_;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySittingOutRSP Clone() {
      return new PusoySittingOutRSP(this);
    }

    /// <summary>Field number for the "sitting_out" field.</summary>
    public const int SittingOutFieldNumber = 1;
    private readonly static bool SittingOutDefaultValue = false;

    private bool sittingOut_;
    /// <summary>
    ///true/false 表示進入託管/取消託管狀態
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SittingOut {
      get { if ((_hasBits0 & 1) != 0) { return sittingOut_; } else { return SittingOutDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sittingOut_ = value;
      }
    }
    /// <summary>Gets whether the "sitting_out" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSittingOut {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sitting_out" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSittingOut() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 2) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoySittingOutRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoySittingOutRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SittingOut != other.SittingOut) return false;
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSittingOut) hash ^= SittingOut.GetHashCode();
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSittingOut) {
        output.WriteRawTag(8);
        output.WriteBool(SittingOut);
      }
      if (HasCode) {
        output.WriteRawTag(16);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSittingOut) {
        output.WriteRawTag(8);
        output.WriteBool(SittingOut);
      }
      if (HasCode) {
        output.WriteRawTag(16);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSittingOut) {
        size += 1 + 1;
      }
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoySittingOutRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasSittingOut) {
        SittingOut = other.SittingOut;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SittingOut = input.ReadBool();
            break;
          }
          case 16: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SittingOut = input.ReadBool();
            break;
          }
          case 16: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///託管狀態廣播， sitting_out = true/false 表示進入託管/取消託管狀態
  /// </summary>
  public sealed partial class PusoySittingOutBRC : pb::IMessage<PusoySittingOutBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoySittingOutBRC> _parser = new pb::MessageParser<PusoySittingOutBRC>(() => new PusoySittingOutBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoySittingOutBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySittingOutBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySittingOutBRC(PusoySittingOutBRC other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      sittingOut_ = other.sittingOut_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoySittingOutBRC Clone() {
      return new PusoySittingOutBRC(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "sitting_out" field.</summary>
    public const int SittingOutFieldNumber = 2;
    private readonly static bool SittingOutDefaultValue = false;

    private bool sittingOut_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SittingOut {
      get { if ((_hasBits0 & 2) != 0) { return sittingOut_; } else { return SittingOutDefaultValue; } }
      set {
        _hasBits0 |= 2;
        sittingOut_ = value;
      }
    }
    /// <summary>Gets whether the "sitting_out" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSittingOut {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "sitting_out" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSittingOut() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoySittingOutBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoySittingOutBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (SittingOut != other.SittingOut) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasSittingOut) hash ^= SittingOut.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasSittingOut) {
        output.WriteRawTag(16);
        output.WriteBool(SittingOut);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasSittingOut) {
        output.WriteRawTag(16);
        output.WriteBool(SittingOut);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasSittingOut) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoySittingOutBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasSittingOut) {
        SittingOut = other.SittingOut;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            SittingOut = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            SittingOut = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///對房間發送開始 --> 如果沒設定自動開始，則每個新房間只需要開始一次
  /// </summary>
  public sealed partial class PusoyStartRoomREQ : pb::IMessage<PusoyStartRoomREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyStartRoomREQ> _parser = new pb::MessageParser<PusoyStartRoomREQ>(() => new PusoyStartRoomREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyStartRoomREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyStartRoomREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyStartRoomREQ(PusoyStartRoomREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyStartRoomREQ Clone() {
      return new PusoyStartRoomREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyStartRoomREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyStartRoomREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyStartRoomREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class PusoyStartRoomRSP : pb::IMessage<PusoyStartRoomRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyStartRoomRSP> _parser = new pb::MessageParser<PusoyStartRoomRSP>(() => new PusoyStartRoomRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyStartRoomRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyStartRoomRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyStartRoomRSP(PusoyStartRoomRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyStartRoomRSP Clone() {
      return new PusoyStartRoomRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyStartRoomRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyStartRoomRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyStartRoomRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///即時戰績REQ/RSP
  /// </summary>
  public sealed partial class PusoyProfitListREQ : pb::IMessage<PusoyProfitListREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyProfitListREQ> _parser = new pb::MessageParser<PusoyProfitListREQ>(() => new PusoyProfitListREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyProfitListREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyProfitListREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyProfitListREQ(PusoyProfitListREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyProfitListREQ Clone() {
      return new PusoyProfitListREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyProfitListREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyProfitListREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyProfitListREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class PusoyProfitListRSP : pb::IMessage<PusoyProfitListRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyProfitListRSP> _parser = new pb::MessageParser<PusoyProfitListRSP>(() => new PusoyProfitListRSP());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyProfitListRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyProfitListRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyProfitListRSP(PusoyProfitListRSP other) : this() {
      profit_ = other.profit_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyProfitListRSP Clone() {
      return new PusoyProfitListRSP(this);
    }

    /// <summary>Field number for the "profit" field.</summary>
    public const int ProfitFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ProfitInfo> _repeated_profit_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.ProfitInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ProfitInfo> profit_ = new pbc::RepeatedField<global::Texas.Protocol.ProfitInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ProfitInfo> Profit {
      get { return profit_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyProfitListRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyProfitListRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!profit_.Equals(other.profit_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= profit_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      profit_.WriteTo(output, _repeated_profit_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      profit_.WriteTo(ref output, _repeated_profit_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += profit_.CalculateSize(_repeated_profit_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyProfitListRSP other) {
      if (other == null) {
        return;
      }
      profit_.Add(other.profit_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            profit_.AddEntriesFrom(input, _repeated_profit_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            profit_.AddEntriesFrom(ref input, _repeated_profit_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///看客列表REQ/RSP
  /// </summary>
  public sealed partial class PusoyObserversListREQ : pb::IMessage<PusoyObserversListREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyObserversListREQ> _parser = new pb::MessageParser<PusoyObserversListREQ>(() => new PusoyObserversListREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyObserversListREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyObserversListREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyObserversListREQ(PusoyObserversListREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyObserversListREQ Clone() {
      return new PusoyObserversListREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyObserversListREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyObserversListREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyObserversListREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class PusoyObserversListRSP : pb::IMessage<PusoyObserversListRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyObserversListRSP> _parser = new pb::MessageParser<PusoyObserversListRSP>(() => new PusoyObserversListRSP());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyObserversListRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyObserversListRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyObserversListRSP(PusoyObserversListRSP other) : this() {
      observers_ = other.observers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyObserversListRSP Clone() {
      return new PusoyObserversListRSP(this);
    }

    /// <summary>Field number for the "observers" field.</summary>
    public const int ObserversFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.UserBrief> _repeated_observers_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.UserBrief.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.UserBrief> observers_ = new pbc::RepeatedField<global::Texas.Protocol.UserBrief>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.UserBrief> Observers {
      get { return observers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyObserversListRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyObserversListRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!observers_.Equals(other.observers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= observers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      observers_.WriteTo(output, _repeated_observers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      observers_.WriteTo(ref output, _repeated_observers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += observers_.CalculateSize(_repeated_observers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyObserversListRSP other) {
      if (other == null) {
        return;
      }
      observers_.Add(other.observers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            observers_.AddEntriesFrom(input, _repeated_observers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            observers_.AddEntriesFrom(ref input, _repeated_observers_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PusoyExchangeChipsREQ : pb::IMessage<PusoyExchangeChipsREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyExchangeChipsREQ> _parser = new pb::MessageParser<PusoyExchangeChipsREQ>(() => new PusoyExchangeChipsREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyExchangeChipsREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyExchangeChipsREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyExchangeChipsREQ(PusoyExchangeChipsREQ other) : this() {
      _hasBits0 = other._hasBits0;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyExchangeChipsREQ Clone() {
      return new PusoyExchangeChipsREQ(this);
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 1;
    private readonly static long AmountDefaultValue = 0L;

    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Amount {
      get { if ((_hasBits0 & 1) != 0) { return amount_; } else { return AmountDefaultValue; } }
      set {
        _hasBits0 |= 1;
        amount_ = value;
      }
    }
    /// <summary>Gets whether the "amount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAmount {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "amount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAmount() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyExchangeChipsREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyExchangeChipsREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAmount) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAmount) {
        output.WriteRawTag(8);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAmount) {
        output.WriteRawTag(8);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAmount) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyExchangeChipsREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasAmount) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PusoyExchangeChipsRSP : pb::IMessage<PusoyExchangeChipsRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyExchangeChipsRSP> _parser = new pb::MessageParser<PusoyExchangeChipsRSP>(() => new PusoyExchangeChipsRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyExchangeChipsRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyExchangeChipsRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyExchangeChipsRSP(PusoyExchangeChipsRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyExchangeChipsRSP Clone() {
      return new PusoyExchangeChipsRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyExchangeChipsRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyExchangeChipsRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyExchangeChipsRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PusoyRebuyNotifyRSP : pb::IMessage<PusoyRebuyNotifyRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyRebuyNotifyRSP> _parser = new pb::MessageParser<PusoyRebuyNotifyRSP>(() => new PusoyRebuyNotifyRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyRebuyNotifyRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyRebuyNotifyRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyRebuyNotifyRSP(PusoyRebuyNotifyRSP other) : this() {
      _hasBits0 = other._hasBits0;
      leftTime_ = other.leftTime_;
      seatid_ = other.seatid_;
      seatChips_ = other.seatChips_;
      exchangingChips_ = other.exchangingChips_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyRebuyNotifyRSP Clone() {
      return new PusoyRebuyNotifyRSP(this);
    }

    /// <summary>Field number for the "left_time" field.</summary>
    public const int LeftTimeFieldNumber = 1;
    private readonly static int LeftTimeDefaultValue = 0;

    private int leftTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LeftTime {
      get { if ((_hasBits0 & 1) != 0) { return leftTime_; } else { return LeftTimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leftTime_ = value;
      }
    }
    /// <summary>Gets whether the "left_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeftTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "left_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeftTime() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 2;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 2) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "seat_chips" field.</summary>
    public const int SeatChipsFieldNumber = 3;
    private readonly static long SeatChipsDefaultValue = 0L;

    private long seatChips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SeatChips {
      get { if ((_hasBits0 & 4) != 0) { return seatChips_; } else { return SeatChipsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        seatChips_ = value;
      }
    }
    /// <summary>Gets whether the "seat_chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatChips {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "seat_chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatChips() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "exchanging_chips" field.</summary>
    public const int ExchangingChipsFieldNumber = 4;
    private readonly static long ExchangingChipsDefaultValue = 0L;

    private long exchangingChips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ExchangingChips {
      get { if ((_hasBits0 & 8) != 0) { return exchangingChips_; } else { return ExchangingChipsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        exchangingChips_ = value;
      }
    }
    /// <summary>Gets whether the "exchanging_chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExchangingChips {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "exchanging_chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExchangingChips() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyRebuyNotifyRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyRebuyNotifyRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LeftTime != other.LeftTime) return false;
      if (Seatid != other.Seatid) return false;
      if (SeatChips != other.SeatChips) return false;
      if (ExchangingChips != other.ExchangingChips) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLeftTime) hash ^= LeftTime.GetHashCode();
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasSeatChips) hash ^= SeatChips.GetHashCode();
      if (HasExchangingChips) hash ^= ExchangingChips.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLeftTime) {
        output.WriteRawTag(8);
        output.WriteInt32(LeftTime);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasSeatChips) {
        output.WriteRawTag(24);
        output.WriteInt64(SeatChips);
      }
      if (HasExchangingChips) {
        output.WriteRawTag(32);
        output.WriteInt64(ExchangingChips);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLeftTime) {
        output.WriteRawTag(8);
        output.WriteInt32(LeftTime);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasSeatChips) {
        output.WriteRawTag(24);
        output.WriteInt64(SeatChips);
      }
      if (HasExchangingChips) {
        output.WriteRawTag(32);
        output.WriteInt64(ExchangingChips);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLeftTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeftTime);
      }
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasSeatChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SeatChips);
      }
      if (HasExchangingChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExchangingChips);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyRebuyNotifyRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasLeftTime) {
        LeftTime = other.LeftTime;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasSeatChips) {
        SeatChips = other.SeatChips;
      }
      if (other.HasExchangingChips) {
        ExchangingChips = other.ExchangingChips;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LeftTime = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            SeatChips = input.ReadInt64();
            break;
          }
          case 32: {
            ExchangingChips = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LeftTime = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            SeatChips = input.ReadInt64();
            break;
          }
          case 32: {
            ExchangingChips = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PusoyExchangeChipsBRC : pb::IMessage<PusoyExchangeChipsBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyExchangeChipsBRC> _parser = new pb::MessageParser<PusoyExchangeChipsBRC>(() => new PusoyExchangeChipsBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyExchangeChipsBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyExchangeChipsBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyExchangeChipsBRC(PusoyExchangeChipsBRC other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      chips_ = other.chips_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyExchangeChipsBRC Clone() {
      return new PusoyExchangeChipsBRC(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "chips" field.</summary>
    public const int ChipsFieldNumber = 2;
    private readonly static long ChipsDefaultValue = 0L;

    private long chips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Chips {
      get { if ((_hasBits0 & 2) != 0) { return chips_; } else { return ChipsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        chips_ = value;
      }
    }
    /// <summary>Gets whether the "chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChips {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChips() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyExchangeChipsBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyExchangeChipsBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (Chips != other.Chips) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasChips) hash ^= Chips.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasChips) {
        output.WriteRawTag(16);
        output.WriteInt64(Chips);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasChips) {
        output.WriteRawTag(16);
        output.WriteInt64(Chips);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Chips);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyExchangeChipsBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasChips) {
        Chips = other.Chips;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Chips = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Chips = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家參與過的Game ID列表
  /// </summary>
  public sealed partial class PusoyGameIDListREQ : pb::IMessage<PusoyGameIDListREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyGameIDListREQ> _parser = new pb::MessageParser<PusoyGameIDListREQ>(() => new PusoyGameIDListREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyGameIDListREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyGameIDListREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyGameIDListREQ(PusoyGameIDListREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyGameIDListREQ Clone() {
      return new PusoyGameIDListREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyGameIDListREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyGameIDListREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyGameIDListREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家參與過的Game ID列表
  /// </summary>
  public sealed partial class PusoyGameIDListRSP : pb::IMessage<PusoyGameIDListRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyGameIDListRSP> _parser = new pb::MessageParser<PusoyGameIDListRSP>(() => new PusoyGameIDListRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyGameIDListRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyGameIDListRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyGameIDListRSP(PusoyGameIDListRSP other) : this() {
      _hasBits0 = other._hasBits0;
      gameId_ = other.gameId_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyGameIDListRSP Clone() {
      return new PusoyGameIDListRSP(this);
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_gameId_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> gameId_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> GameId {
      get { return gameId_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private readonly static int TotalDefaultValue = 0;

    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Total {
      get { if ((_hasBits0 & 1) != 0) { return total_; } else { return TotalDefaultValue; } }
      set {
        _hasBits0 |= 1;
        total_ = value;
      }
    }
    /// <summary>Gets whether the "total" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotal {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "total" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotal() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyGameIDListRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyGameIDListRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gameId_.Equals(other.gameId_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gameId_.GetHashCode();
      if (HasTotal) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      gameId_.WriteTo(output, _repeated_gameId_codec);
      if (HasTotal) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      gameId_.WriteTo(ref output, _repeated_gameId_codec);
      if (HasTotal) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += gameId_.CalculateSize(_repeated_gameId_codec);
      if (HasTotal) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyGameIDListRSP other) {
      if (other == null) {
        return;
      }
      gameId_.Add(other.gameId_);
      if (other.HasTotal) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            gameId_.AddEntriesFrom(input, _repeated_gameId_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            gameId_.AddEntriesFrom(ref input, _repeated_gameId_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PusoyGameRecordListREQ : pb::IMessage<PusoyGameRecordListREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyGameRecordListREQ> _parser = new pb::MessageParser<PusoyGameRecordListREQ>(() => new PusoyGameRecordListREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyGameRecordListREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyGameRecordListREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyGameRecordListREQ(PusoyGameRecordListREQ other) : this() {
      gameId_ = other.gameId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyGameRecordListREQ Clone() {
      return new PusoyGameRecordListREQ(this);
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_gameId_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> gameId_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> GameId {
      get { return gameId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyGameRecordListREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyGameRecordListREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gameId_.Equals(other.gameId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gameId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      gameId_.WriteTo(output, _repeated_gameId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      gameId_.WriteTo(ref output, _repeated_gameId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += gameId_.CalculateSize(_repeated_gameId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyGameRecordListREQ other) {
      if (other == null) {
        return;
      }
      gameId_.Add(other.gameId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            gameId_.AddEntriesFrom(input, _repeated_gameId_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            gameId_.AddEntriesFrom(ref input, _repeated_gameId_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PusoyGameRecord : pb::IMessage<PusoyGameRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyGameRecord> _parser = new pb::MessageParser<PusoyGameRecord>(() => new PusoyGameRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyGameRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyGameRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyGameRecord(PusoyGameRecord other) : this() {
      gameResult_ = other.gameResult_ != null ? other.gameResult_.Clone() : null;
      gameId_ = other.gameId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyGameRecord Clone() {
      return new PusoyGameRecord(this);
    }

    /// <summary>Field number for the "game_result" field.</summary>
    public const int GameResultFieldNumber = 1;
    private global::Texas.Protocol.PusoySimplifiedGameResultBRC gameResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PusoySimplifiedGameResultBRC GameResult {
      get { return gameResult_; }
      set {
        gameResult_ = value;
      }
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 2;
    private readonly static string GameIdDefaultValue = "";

    private string gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GameId {
      get { return gameId_ ?? GameIdDefaultValue; }
      set {
        gameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "game_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return gameId_ != null; }
    }
    /// <summary>Clears the value of the "game_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      gameId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyGameRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyGameRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GameResult, other.GameResult)) return false;
      if (GameId != other.GameId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (gameResult_ != null) hash ^= GameResult.GetHashCode();
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (gameResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GameResult);
      }
      if (HasGameId) {
        output.WriteRawTag(18);
        output.WriteString(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (gameResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GameResult);
      }
      if (HasGameId) {
        output.WriteRawTag(18);
        output.WriteString(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (gameResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameResult);
      }
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyGameRecord other) {
      if (other == null) {
        return;
      }
      if (other.gameResult_ != null) {
        if (gameResult_ == null) {
          GameResult = new global::Texas.Protocol.PusoySimplifiedGameResultBRC();
        }
        GameResult.MergeFrom(other.GameResult);
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (gameResult_ == null) {
              GameResult = new global::Texas.Protocol.PusoySimplifiedGameResultBRC();
            }
            input.ReadMessage(GameResult);
            break;
          }
          case 18: {
            GameId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (gameResult_ == null) {
              GameResult = new global::Texas.Protocol.PusoySimplifiedGameResultBRC();
            }
            input.ReadMessage(GameResult);
            break;
          }
          case 18: {
            GameId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PusoyGameRecordListRSP : pb::IMessage<PusoyGameRecordListRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyGameRecordListRSP> _parser = new pb::MessageParser<PusoyGameRecordListRSP>(() => new PusoyGameRecordListRSP());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyGameRecordListRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyGameRecordListRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyGameRecordListRSP(PusoyGameRecordListRSP other) : this() {
      gameRecord_ = other.gameRecord_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyGameRecordListRSP Clone() {
      return new PusoyGameRecordListRSP(this);
    }

    /// <summary>Field number for the "game_record" field.</summary>
    public const int GameRecordFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PusoyGameRecord> _repeated_gameRecord_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.PusoyGameRecord.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PusoyGameRecord> gameRecord_ = new pbc::RepeatedField<global::Texas.Protocol.PusoyGameRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PusoyGameRecord> GameRecord {
      get { return gameRecord_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyGameRecordListRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyGameRecordListRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gameRecord_.Equals(other.gameRecord_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gameRecord_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      gameRecord_.WriteTo(output, _repeated_gameRecord_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      gameRecord_.WriteTo(ref output, _repeated_gameRecord_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += gameRecord_.CalculateSize(_repeated_gameRecord_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyGameRecordListRSP other) {
      if (other == null) {
        return;
      }
      gameRecord_.Add(other.gameRecord_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            gameRecord_.AddEntriesFrom(input, _repeated_gameRecord_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            gameRecord_.AddEntriesFrom(ref input, _repeated_gameRecord_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///第一次於Calltime桌坐下時會走這隻協議進行座位保留
  ///返回對應的RSP後會跳出確認坐下的倒數彈窗
  /// </summary>
  public sealed partial class PusoyReserveCalltimeSeatREQ : pb::IMessage<PusoyReserveCalltimeSeatREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyReserveCalltimeSeatREQ> _parser = new pb::MessageParser<PusoyReserveCalltimeSeatREQ>(() => new PusoyReserveCalltimeSeatREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyReserveCalltimeSeatREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyReserveCalltimeSeatREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyReserveCalltimeSeatREQ(PusoyReserveCalltimeSeatREQ other) : this() {
      _hasBits0 = other._hasBits0;
      reserve_ = other.reserve_;
      seatid_ = other.seatid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyReserveCalltimeSeatREQ Clone() {
      return new PusoyReserveCalltimeSeatREQ(this);
    }

    /// <summary>Field number for the "reserve" field.</summary>
    public const int ReserveFieldNumber = 1;
    private readonly static bool ReserveDefaultValue = false;

    private bool reserve_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Reserve {
      get { if ((_hasBits0 & 1) != 0) { return reserve_; } else { return ReserveDefaultValue; } }
      set {
        _hasBits0 |= 1;
        reserve_ = value;
      }
    }
    /// <summary>Gets whether the "reserve" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReserve {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "reserve" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReserve() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 2;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 2) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyReserveCalltimeSeatREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyReserveCalltimeSeatREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Reserve != other.Reserve) return false;
      if (Seatid != other.Seatid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasReserve) hash ^= Reserve.GetHashCode();
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasReserve) {
        output.WriteRawTag(8);
        output.WriteBool(Reserve);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasReserve) {
        output.WriteRawTag(8);
        output.WriteBool(Reserve);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasReserve) {
        size += 1 + 1;
      }
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyReserveCalltimeSeatREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasReserve) {
        Reserve = other.Reserve;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Reserve = input.ReadBool();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Reserve = input.ReadBool();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PusoyReserveCalltimeSeatRSP : pb::IMessage<PusoyReserveCalltimeSeatRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PusoyReserveCalltimeSeatRSP> _parser = new pb::MessageParser<PusoyReserveCalltimeSeatRSP>(() => new PusoyReserveCalltimeSeatRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PusoyReserveCalltimeSeatRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PusoyReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyReserveCalltimeSeatRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyReserveCalltimeSeatRSP(PusoyReserveCalltimeSeatRSP other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      code_ = other.code_;
      remainedReservationTime_ = other.remainedReservationTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PusoyReserveCalltimeSeatRSP Clone() {
      return new PusoyReserveCalltimeSeatRSP(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 2) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "remained_reservation_time" field.</summary>
    public const int RemainedReservationTimeFieldNumber = 3;
    private readonly static int RemainedReservationTimeDefaultValue = 0;

    private int remainedReservationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RemainedReservationTime {
      get { if ((_hasBits0 & 4) != 0) { return remainedReservationTime_; } else { return RemainedReservationTimeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        remainedReservationTime_ = value;
      }
    }
    /// <summary>Gets whether the "remained_reservation_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRemainedReservationTime {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "remained_reservation_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRemainedReservationTime() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PusoyReserveCalltimeSeatRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PusoyReserveCalltimeSeatRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (Code != other.Code) return false;
      if (RemainedReservationTime != other.RemainedReservationTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasRemainedReservationTime) hash ^= RemainedReservationTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasCode) {
        output.WriteRawTag(16);
        output.WriteInt32(Code);
      }
      if (HasRemainedReservationTime) {
        output.WriteRawTag(24);
        output.WriteInt32(RemainedReservationTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasCode) {
        output.WriteRawTag(16);
        output.WriteInt32(Code);
      }
      if (HasRemainedReservationTime) {
        output.WriteRawTag(24);
        output.WriteInt32(RemainedReservationTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasRemainedReservationTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainedReservationTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PusoyReserveCalltimeSeatRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasRemainedReservationTime) {
        RemainedReservationTime = other.RemainedReservationTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Code = input.ReadInt32();
            break;
          }
          case 24: {
            RemainedReservationTime = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Code = input.ReadInt32();
            break;
          }
          case 24: {
            RemainedReservationTime = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
