// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: club3.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Texas.Protocol {

  /// <summary>Holder for reflection information generated from club3.proto</summary>
  public static partial class Club3Reflection {

    #region Descriptor
    /// <summary>File descriptor for club3.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Club3Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtjbHViMy5wcm90bxoOcHJlX2Jhc2UucHJvdG8aCmJhc2UucHJvdG8aD2Ns",
            "dWJfYmFzZS5wcm90bxoLY2x1YjEucHJvdG8aCml0ZW0ucHJvdG8iVgoQTmV3",
            "UFBDb2luRmxvd1JFURITCgZjbHViaWQYASABKAlIAIgBARIVCghsZWFndWVp",
            "ZBgCIAEoBUgBiAEBQgkKB19jbHViaWRCCwoJX2xlYWd1ZWlkInIKEE5ld1BQ",
            "Q29pbkZsb3dSU1ASEQoEY29kZRgBIAEoBUgAiAEBEhMKBmNsdWJpZBgCIAEo",
            "CUgBiAEBEhUKCGxlYWd1ZWlkGAMgASgFSAKIAQFCBwoFX2NvZGVCCQoHX2Ns",
            "dWJpZEILCglfbGVhZ3VlaWQixAUKDkNsdWJSb29tRmlsdGVyEhYKCXJvb21f",
            "dHlwZRgBIAEoBUgAiAEBEhwKD2lzX2V4Y2x1ZGVfZnVsbBgCIAEoCEgBiAEB",
            "EhEKCW5saF9ibGluZBgDIAMoAxITCgtmbGFzaF9ibGluZBgEIAMoAxIVCg1z",
            "aXhfcGx1c19hbnRlGAUgAygDEhEKCXBsb19ibGluZBgGIAMoAxIQCghvZmNf",
            "YmFzZRgHIAMoAxIRCglzbmdfYnV5aW4YCCADKAMSEQoJbXR0X2J1eWluGAkg",
            "AygDEhIKCnBsYXllcl9udW0YCiADKAUSEQoJbGVmdF90aW1lGAsgAygDEhcK",
            "CmlzX3BsYXlpbmcYDCABKAhIAogBARIVCg1taXh0dXJlX2JsaW5kGA0gAygD",
            "EhIKCnBsbzRfYmxpbmQYDiADKAMSEgoKcGxvNV9ibGluZBgPIAMoAxIUCgxw",
            "bG9faGxfYmxpbmQYECADKAMSGAoLZmlsdGVyX21vZGUYESABKAVIA4gBARIX",
            "CgpjbGllbl9tYXJrGBIgASgFSASIAQESGQoMcGFzc3dkX2xpbWl0GBMgASgI",
            "SAWIAQESFAoMc3BpbnVwX2J1eWluGBQgAygDEh4KEWlzX21hdGNoX2pvaW5h",
            "YmxlGBUgASgISAaIAQESEgoKcGxvNl9ibGluZBgWIAMoAxIRCglhb2ZfYmxp",
            "bmQYFyADKAMSDwoHdHBfYW50ZRgYIAMoAxITCgtwdXNveV9ibGluZBgZIAMo",
            "AxIVCg10b25naXRzX2JsaW5kGBogAygDQgwKCl9yb29tX3R5cGVCEgoQX2lz",
            "X2V4Y2x1ZGVfZnVsbEINCgtfaXNfcGxheWluZ0IOCgxfZmlsdGVyX21vZGVC",
            "DQoLX2NsaWVuX21hcmtCDwoNX3Bhc3N3ZF9saW1pdEIUChJfaXNfbWF0Y2hf",
            "am9pbmFibGUiggMKC0NsdWJSb29tUkVREhMKBmNsdWJpZBgBIAEoCUgAiAEB",
            "EhUKCGxlYWd1ZWlkGAIgASgFSAGIAQESJAoGZmlsdGVyGAMgASgLMg8uQ2x1",
            "YlJvb21GaWx0ZXJIAogBARIcCg9pc192YWxpZF9maWx0ZXIYBCABKAhIA4gB",
            "ARIYCgtzdGFydF9pbmRleBgFIAEoBUgEiAEBEhMKBmFtb3VudBgGIAEoBUgF",
            "iAEBEhMKBnJvb21pZBgHIAEoCUgGiAEBEh0KEGlzX3NlcnZlcl9maWx0ZXIY",
            "CCABKAhIB4gBARIbCg5zdXBlcl9sZWFndWVpZBgJIAEoBUgIiAEBQgkKB19j",
            "bHViaWRCCwoJX2xlYWd1ZWlkQgkKB19maWx0ZXJCEgoQX2lzX3ZhbGlkX2Zp",
            "bHRlckIOCgxfc3RhcnRfaW5kZXhCCQoHX2Ftb3VudEIJCgdfcm9vbWlkQhMK",
            "EV9pc19zZXJ2ZXJfZmlsdGVyQhEKD19zdXBlcl9sZWFndWVpZCK2AQoLUGxh",
            "eWluZ1Jvb20SEwoGcm9vbWlkGAEgASgJSACIAQESIQoJcm9vbV90eXBlGAIg",
            "ASgOMgkuUm9vbVR5cGVIAYgBARIXCgptdHRfc3RhdHVzGAMgASgFSAKIAQES",
            "GwoObXR0X3N0YXJ0X3RpbWUYBCABKANIA4gBAUIJCgdfcm9vbWlkQgwKCl9y",
            "b29tX3R5cGVCDQoLX210dF9zdGF0dXNCEQoPX210dF9zdGFydF90aW1lIooD",
            "CgtDbHViUm9vbVJTUBIVCghsZWFndWVpZBgBIAEoBUgAiAEBEhsKBGluZm8Y",
            "AiADKAsyDS5DbHViUm9vbUluZm8SEwoGY2x1YmlkGAMgASgJSAGIAQESEQoE",
            "Y29kZRgEIAEoBUgCiAEBEiQKBmZpbHRlchgFIAEoCzIPLkNsdWJSb29tRmls",
            "dGVySAOIAQESFQoIcm9vbV9udW0YBiABKAVIBIgBARIYCgtzdGFydF9pbmRl",
            "eBgHIAEoBUgFiAEBEhwKD2lzX3VzaW5nX2ZpbHRlchgIIAEoCEgGiAEBEhYK",
            "CWNvb2xfZG93bhgJIAEoBUgHiAEBEicKEXBsYXlpbmdfcm9vbV9saXN0GAog",
            "AygLMgwuUGxheWluZ1Jvb21CCwoJX2xlYWd1ZWlkQgkKB19jbHViaWRCBwoF",
            "X2NvZGVCCQoHX2ZpbHRlckILCglfcm9vbV9udW1CDgoMX3N0YXJ0X2luZGV4",
            "QhIKEF9pc191c2luZ19maWx0ZXJCDAoKX2Nvb2xfZG93biKwAQoYQ2x1YlNh",
            "dGVsbGl0ZVJvb21MaXN0UkVREhMKBmNsdWJpZBgBIAEoCUgAiAEBEhUKCGxl",
            "YWd1ZWlkGAIgASgFSAGIAQESFgoJcm9vbV90eXBlGAMgASgFSAKIAQESGQoM",
            "cmV3YXJkX3ByaWNlGAQgASgDSAOIAQFCCQoHX2NsdWJpZEILCglfbGVhZ3Vl",
            "aWRCDAoKX3Jvb21fdHlwZUIPCg1fcmV3YXJkX3ByaWNlImMKGENsdWJTYXRl",
            "bGxpdGVSb29tTGlzdFJTUBIZCgxyZXdhcmRfcHJpY2UYASABKANIAIgBARIb",
            "CgRpbmZvGAIgAygLMg0uQ2x1YlJvb21JbmZvQg8KDV9yZXdhcmRfcHJpY2Ui",
            "hQEKDkNsdWJSb29tTnVtUkVREhMKBmNsdWJpZBgBIAEoCUgAiAEBEhUKCGxl",
            "YWd1ZWlkGAIgASgFSAGIAQESJAoGZmlsdGVyGAMgASgLMg8uQ2x1YlJvb21G",
            "aWx0ZXJIAogBAUIJCgdfY2x1YmlkQgsKCV9sZWFndWVpZEIJCgdfZmlsdGVy",
            "IoMCCg5DbHViUm9vbU51bVJTUBIRCgRjb2RlGAEgASgFSACIAQESFQoIbGVh",
            "Z3VlaWQYAiABKAVIAYgBARITCgZjbHViaWQYAyABKAlIAogBARIkCgZmaWx0",
            "ZXIYBCABKAsyDy5DbHViUm9vbUZpbHRlckgDiAEBEhwKD2ZpbHRlcl9yb29t",
            "X251bRgFIAEoBUgEiAEBEhsKDnRvdGFsX3Jvb21fbnVtGAYgASgFSAWIAQFC",
            "BwoFX2NvZGVCCwoJX2xlYWd1ZWlkQgkKB19jbHViaWRCCQoHX2ZpbHRlckIS",
            "ChBfZmlsdGVyX3Jvb21fbnVtQhEKD190b3RhbF9yb29tX251bSLdAQoTQ2x1",
            "Yk1lbWJlckRldGFpbFJFURITCgZjbHViaWQYASABKAlIAIgBARIVCghsZWFn",
            "dWVpZBgCIAEoBUgBiAEBEhAKA3VpZBgDIAEoCUgCiAEBEhUKCHN0YXJ0X3Rz",
            "GAQgASgDSAOIAQESEwoGZW5kX3RzGAUgASgDSASIAQESFgoJYWdlbnRfdWlk",
            "GAYgASgDSAWIAQFCCQoHX2NsdWJpZEILCglfbGVhZ3VlaWRCBgoEX3VpZEIL",
            "Cglfc3RhcnRfdHNCCQoHX2VuZF90c0IMCgpfYWdlbnRfdWlkIusDChNDbHVi",
            "TWVtYmVyRGV0YWlsUlNQEhMKBmNsdWJpZBgBIAEoCUgAiAEBEhUKCGxlYWd1",
            "ZWlkGAIgASgFSAGIAQESEAoDdWlkGAMgASgJSAKIAQESGQoMdG90YWxfcHJv",
            "Zml0GAQgASgDSAOIAQESFgoJaGFuZHNfY250GAUgASgDSASIAQESFgoJYmJf",
            "cHJvZml0GAcgASgDSAWIAQESFwoKbXR0X3Byb2ZpdBgIIAEoA0gGiAEBEhcK",
            "Cm9mY19wcm9maXQYCSABKANIB4gBARIQCgNmZWUYCiABKANICIgBARIWCglh",
            "Z2VudF91aWQYCyABKANICYgBARIVCghzdGFydF90cxgMIAEoA0gKiAEBEhMK",
            "BmVuZF90cxgNIAEoA0gLiAEBEhkKDHNwaW51cF9idXlpbhgOIAEoA0gMiAEB",
            "QgkKB19jbHViaWRCCwoJX2xlYWd1ZWlkQgYKBF91aWRCDwoNX3RvdGFsX3By",
            "b2ZpdEIMCgpfaGFuZHNfY250QgwKCl9iYl9wcm9maXRCDQoLX210dF9wcm9m",
            "aXRCDQoLX29mY19wcm9maXRCBgoEX2ZlZUIMCgpfYWdlbnRfdWlkQgsKCV9z",
            "dGFydF90c0IJCgdfZW5kX3RzQg8KDV9zcGludXBfYnV5aW4iWAoQQ2x1YkJy",
            "aWVmSW5mb1JFURITCgZjbHViaWQYASABKAlIAIgBARIWCglhZ2VudF91aWQY",
            "AiABKANIAYgBAUIJCgdfY2x1YmlkQgwKCl9hZ2VudF91aWQipAEKEENsdWJC",
            "cmllZkluZm9SU1ASEQoEY29kZRgBIAEoBUgAiAEBEh0KBGluZm8YAiABKAsy",
            "Ci5DbHViQnJpZWZIAYgBARIXCgphZ2VudF9uYW1lGAMgASgJSAKIAQESFgoJ",
            "YWdlbnRfdWlkGAQgASgDSAOIAQFCBwoFX2NvZGVCBwoFX2luZm9CDQoLX2Fn",
            "ZW50X25hbWVCDAoKX2FnZW50X3VpZCKAAQoUUHBjaGlwc1N0b3JlTGltaXRS",
            "RVESEwoGY2x1YmlkGAEgASgJSACIAQESFQoIbGVhZ3VlaWQYAiABKAVIAYgB",
            "ARIWCglmcm9tX3R5cGUYAyABKAVIAogBAUIJCgdfY2x1YmlkQgsKCV9sZWFn",
            "dWVpZEIMCgpfZnJvbV90eXBlIrQCChRQcGNoaXBzU3RvcmVMaW1pdFJTUBIT",
            "CgZjbHViaWQYASABKAlIAIgBARIVCghsZWFndWVpZBgCIAEoBUgBiAEBEhYK",
            "CWZyb21fdHlwZRgDIAEoBUgCiAEBEhcKCm5lZWRfbGltaXQYBCABKAhIA4gB",
            "ARIRCgRjb2RlGAUgASgFSASIAQESIAoTcHBjaGlwc191cHBlcl9saW1pdBgG",
            "IAEoA0gFiAEBEh4KEXBwY2hpcHNfcmVhbF90aW1lGAcgASgDSAaIAQFCCQoH",
            "X2NsdWJpZEILCglfbGVhZ3VlaWRCDAoKX2Zyb21fdHlwZUINCgtfbmVlZF9s",
            "aW1pdEIHCgVfY29kZUIWChRfcHBjaGlwc191cHBlcl9saW1pdEIUChJfcHBj",
            "aGlwc19yZWFsX3RpbWUieAoQTGVhZ3VlQmFuQ2x1YlJFURIVCghsZWFndWVp",
            "ZBgBIAEoBUgAiAEBEhMKBmNsdWJpZBgCIAEoBUgBiAEBEhQKB29wX3R5cGUY",
            "AyABKAVIAogBAUILCglfbGVhZ3VlaWRCCQoHX2NsdWJpZEIKCghfb3BfdHlw",
            "ZSJwChBMZWFndWVCYW5DbHViUlNQEhEKBGNvZGUYASABKAVIAIgBARITCgZj",
            "bHViaWQYAiABKAVIAYgBARIUCgdvcF90eXBlGAMgASgFSAKIAQFCBwoFX2Nv",
            "ZGVCCQoHX2NsdWJpZEIKCghfb3BfdHlwZSKYAQoQUFBTUkJhbkxlYWd1ZVJF",
            "URITCgZwcHNyaWQYASABKAVIAIgBARIXCgpsZWFndWV0eXBlGAIgASgFSAGI",
            "AQESFQoIbGVhZ3VlaWQYAyABKAVIAogBARIQCgNiYW4YBCABKAVIA4gBAUIJ",
            "CgdfcHBzcmlkQg0KC19sZWFndWV0eXBlQgsKCV9sZWFndWVpZEIGCgRfYmFu",
            "Ii4KEFBQU1JCYW5MZWFndWVSU1ASEQoEY29kZRgBIAEoBUgAiAEBQgcKBV9j",
            "b2RlIoUBChdTdXBlckxlYWd1ZUJhbkxlYWd1ZVJFURIaCg1zdXBlcmxlYWd1",
            "ZWlkGAEgASgFSACIAQESFQoIbGVhZ3VlaWQYAiABKAVIAYgBARIQCgNiYW4Y",
            "AyABKAVIAogBAUIQCg5fc3VwZXJsZWFndWVpZEILCglfbGVhZ3VlaWRCBgoE",
            "X2JhbiI1ChdTdXBlckxlYWd1ZUJhbkxlYWd1ZVJTUBIRCgRjb2RlGAEgASgF",
            "SACIAQFCBwoFX2NvZGUiegoOQWdlbnRQUENvaW5SRVESEwoGY2x1YmlkGAEg",
            "ASgJSACIAQESFQoIbGVhZ3VlaWQYAiABKAVIAYgBARIWCglhZ2VudF91aWQY",
            "AyABKANIAogBAUIJCgdfY2x1YmlkQgsKCV9sZWFndWVpZEIMCgpfYWdlbnRf",
            "dWlkIsIBCg5BZ2VudFBQQ29pblJTUBIRCgRjb2RlGAEgASgFSACIAQESEwoG",
            "Y2x1YmlkGAIgASgJSAGIAQESFQoIbGVhZ3VlaWQYAyABKAVIAogBARIWCglh",
            "Z2VudF91aWQYBCABKANIA4gBARIZCgxhZ2VudF9wcGNvaW4YBSABKANIBIgB",
            "AUIHCgVfY29kZUIJCgdfY2x1YmlkQgsKCV9sZWFndWVpZEIMCgpfYWdlbnRf",
            "dWlkQg8KDV9hZ2VudF9wcGNvaW4iSwoPS2lja1Jvb21Vc2VyUkVREhMKBnJv",
            "b21pZBgBIAEoCUgAiAEBEhAKA3VpZBgCIAEoCUgBiAEBQgkKB19yb29taWRC",
            "BgoEX3VpZCJJCg9LaWNrUm9vbVVzZXJSU1ASEQoEY29kZRgBIAEoBUgAiAEB",
            "EhEKBGZsYWcYAiABKAVIAYgBAUIHCgVfY29kZUIHCgVfZmxhZyK/AgoNS2lj",
            "a2VkUm9vbVJTUBITCgZyb29taWQYASABKAlIAIgBARIUCgdtYW5hZ2VyGAIg",
            "ASgJSAGIAQESIQoJcm9vbV90eXBlGAMgASgOMgkuUm9vbVR5cGVIAogBARIh",
            "CglnYW1lX21vZGUYBCABKA4yCS5HYW1lTW9kZUgDiAEBEhIKBWJsaW5kGAUg",
            "ASgFSASIAQESFAoHbWluX2JldBgGIAEoBUgFiAEBEhcKCm1pZGRsZV9iZXQY",
            "ByABKAVIBogBARIVCghoaWdoX2JldBgIIAEoBUgHiAEBQgkKB19yb29taWRC",
            "CgoIX21hbmFnZXJCDAoKX3Jvb21fdHlwZUIMCgpfZ2FtZV9tb2RlQggKBl9i",
            "bGluZEIKCghfbWluX2JldEINCgtfbWlkZGxlX2JldEILCglfaGlnaF9iZXQi",
            "nQEKDkFkZEl0ZW1Db2luUkVREhMKBmNsdWJpZBgBIAEoCUgAiAEBEhUKCGxl",
            "YWd1ZWlkGAIgASgFSAGIAQESDAoEdWlkcxgDIAMoCRIQCghpdGVtX2lkcxgE",
            "IAMoAxISCgppdGVtX3R5cGVzGAUgAygFEhMKC2l0ZW1fdmFsdWVzGAYgAygD",
            "QgkKB19jbHViaWRCCwoJX2xlYWd1ZWlkIrkBCg5BZGRJdGVtQ29pblJTUBIR",
            "CgRjb2RlGAEgASgFSACIAQESEwoGY2x1YmlkGAIgASgJSAGIAQESFQoIbGVh",
            "Z3VlaWQYAyABKAVIAogBARIYCgtjbHViX3BwY29pbhgEIAEoBUgDiAEBEh0K",
            "BGluZm8YBSADKAsyDy5TaW1wbGVJdGVtSW5mb0IHCgVfY29kZUIJCgdfY2x1",
            "YmlkQgsKCV9sZWFndWVpZEIOCgxfY2x1Yl9wcGNvaW4i+gEKCkNsdWJBY3Rp",
            "b24SEwoGY2x1YmlkGAEgASgJSACIAQESFQoIZnJvbV91aWQYAiABKANIAYgB",
            "ARITCgZ0b191aWQYAyABKANIAogBARIRCgR0eXBlGAQgASgJSAOIAQESGAoL",
            "YWN0aW9uX3RpbWUYBSABKA1IBIgBARITCgZhdHRhY2gYBiABKAlIBYgBARIV",
            "CghsZWFndWVpZBgHIAEoBUgGiAEBQgkKB19jbHViaWRCCwoJX2Zyb21fdWlk",
            "QgkKB190b191aWRCBwoFX3R5cGVCDgoMX2FjdGlvbl90aW1lQgkKB19hdHRh",
            "Y2hCCwoJX2xlYWd1ZWlkIlkKE1NpbmdsZVBQQ29pbkZsb3dSRVESEwoGY2x1",
            "YmlkGAEgASgJSACIAQESFQoIbGVhZ3VlaWQYAiABKAVIAYgBAUIJCgdfY2x1",
            "YmlkQgsKCV9sZWFndWVpZCJ4ChNTaW5nbGVQUENvaW5GbG93UlNQEhMKBmNs",
            "dWJpZBgBIAEoCUgAiAEBEhUKCGxlYWd1ZWlkGAIgASgFSAGIAQESHQoEaW5m",
            "bxgDIAMoCzIPLlBQQ29pbkZsb3dJbmZvQgkKB19jbHViaWRCCwoJX2xlYWd1",
            "ZWlkIksKD0tpY2tDbHViVXNlclJFURITCgZjbHViaWQYASABKAlIAIgBARIQ",
            "CgN1aWQYAiABKAlIAYgBAUIJCgdfY2x1YmlkQgYKBF91aWQiZwoPS2lja0Ns",
            "dWJVc2VyUlNQEhEKBGNvZGUYASABKAVIAIgBARITCgZjbHViaWQYAiABKAlI",
            "AYgBARIQCgN1aWQYAyABKAlIAogBAUIHCgVfY29kZUIJCgdfY2x1YmlkQgYK",
            "BF91aWQiWAoSR2V0UmVkUG9pbnREYXRhUkVREhMKBmNsdWJpZBgBIAEoCUgA",
            "iAEBEhUKCGxlYWd1ZWlkGAIgASgFSAGIAQFCCQoHX2NsdWJpZEILCglfbGVh",
            "Z3VlaWQiZgoSR2V0UmVkUG9pbnREYXRhUlNQEgwKBHR5cGUYASADKAUSEwoG",
            "Y2x1YmlkGAIgASgJSACIAQESFQoIbGVhZ3VlaWQYAyABKAVIAYgBAUIJCgdf",
            "Y2x1YmlkQgsKCV9sZWFndWVpZCLEAQoKUm9vbVRvcFJFURITCgZyb29taWQY",
            "ASABKAlIAIgBARITCgZpc190b3AYAiABKAhIAYgBARITCgZjbHViaWQYAyAB",
            "KAlIAogBARIZCgxpc19wcHN0X3Jvb20YBCABKAhIA4gBARIZCgxpc19wcHNy",
            "X3Jvb20YBSABKAhIBIgBAUIJCgdfcm9vbWlkQgkKB19pc190b3BCCQoHX2Ns",
            "dWJpZEIPCg1faXNfcHBzdF9yb29tQg8KDV9pc19wcHNyX3Jvb20iaAoKUm9v",
            "bVRvcFJTUBITCgZyb29taWQYASABKAlIAIgBARITCgZpc190b3AYAiABKAhI",
            "AYgBARIRCgRjb2RlGAMgASgFSAKIAQFCCQoHX3Jvb21pZEIJCgdfaXNfdG9w",
            "QgcKBV9jb2RlIooBChpDbHViTWFuYWdlckF1dGhvcml0eVNldFJFURIQCgN1",
            "aWQYASABKANIAIgBARITCgZjbHViaWQYAiABKAVIAYgBARIdChBhdXRob3Jp",
            "dHlfZGV0YWlsGAMgASgFSAKIAQFCBgoEX3VpZEIJCgdfY2x1YmlkQhMKEV9h",
            "dXRob3JpdHlfZGV0YWlsIqYBChpDbHViTWFuYWdlckF1dGhvcml0eVNldFJT",
            "UBIRCgRjb2RlGAEgASgFSACIAQESEAoDdWlkGAIgASgDSAGIAQESEwoGY2x1",
            "YmlkGAMgASgFSAKIAQESHQoQYXV0aG9yaXR5X2RldGFpbBgEIAEoBUgDiAEB",
            "QgcKBV9jb2RlQgYKBF91aWRCCQoHX2NsdWJpZEITChFfYXV0aG9yaXR5X2Rl",
            "dGFpbCIyChBDbHViU3Rvcm1JbmZvUkVREhMKBmNsdWJpZBgBIAEoBUgAiAEB",
            "QgkKB19jbHViaWQiXwoQQ2x1YlN0b3JtSW5mb1JTUBIRCgRjb2RlGAEgASgF",
            "SACIAQESJQoFc3Rvcm0YAiABKAsyES5QUGNoaXBzU3Rvcm1JbmZvSAGIAQFC",
            "BwoFX2NvZGVCCAoGX3N0b3JtIusBChNDbHViU3VzcGVuZEFnZW50UkVREhAK",
            "A3VpZBgBIAEoCUgAiAEBEhMKBmNsdWJpZBgCIAEoCUgBiAEBEhMKBmFjdGlv",
            "bhgDIAEoBUgCiAEBEhIKBXRvZGF5GAQgASgFSAOIAQESIAoTdGhpc193ZWVr",
            "X2JlZ2luX2RheRgFIAEoBUgEiAEBEhUKCHRpbWV6b25lGAYgASgFSAWIAQFC",
            "BgoEX3VpZEIJCgdfY2x1YmlkQgkKB19hY3Rpb25CCAoGX3RvZGF5QhYKFF90",
            "aGlzX3dlZWtfYmVnaW5fZGF5QgsKCV90aW1lem9uZSJRChNDbHViU3VzcGVu",
            "ZEFnZW50UlNQEhEKBGNvZGUYASABKAVIAIgBARITCgZhY3Rpb24YAiABKAVI",
            "AYgBAUIHCgVfY29kZUIJCgdfYWN0aW9uItoCChJDbHViQWdlbnRTdGF0dXNS",
            "RVESEwoGY2x1YmlkGAEgASgJSACIAQESFgoJYWdlbnRfdWlkGAIgASgFSAGI",
            "AQESFQoIbGVhZ3VlaWQYAyABKAVIAogBARIWCgl5ZXN0ZXJkYXkYBCABKAVI",
            "A4gBARISCgV0b2RheRgFIAEoBUgEiAEBEiAKE2xhc3Rfd2Vla19iZWdpbl9k",
            "YXkYBiABKAVIBYgBARIgChN0aGlzX3dlZWtfYmVnaW5fZGF5GAcgASgFSAaI",
            "AQESFQoIdGltZXpvbmUYCCABKAVIB4gBAUIJCgdfY2x1YmlkQgwKCl9hZ2Vu",
            "dF91aWRCCwoJX2xlYWd1ZWlkQgwKCl95ZXN0ZXJkYXlCCAoGX3RvZGF5QhYK",
            "FF9sYXN0X3dlZWtfYmVnaW5fZGF5QhYKFF90aGlzX3dlZWtfYmVnaW5fZGF5",
            "QgsKCV90aW1lem9uZSKKDwoSQ2x1YkFnZW50U3RhdHVzUlNQEhEKBGNvZGUY",
            "ASABKAVIAIgBARIbCg5zdXNwZW5kX3N0YXR1cxgCIAEoCEgBiAEBEhQKB2F1",
            "dG9iYW4YAyABKAhIAogBARIZCgxhdXRvYmFuX3R5cGUYBCABKAVIA4gBARIa",
            "Cg1hdXRvYmFuX2xpbWl0GAUgASgDSASIAQESGAoLcHJvZml0X3dlZWsYBiAB",
            "KANIBYgBARIXCgpwcm9maXRfZGF5GAcgASgDSAaIAQESHAoPcHJvZml0X2xh",
            "c3RfZGF5GAggASgDSAeIAQESHQoQcHJvZml0X2xhc3Rfd2VlaxgJIAEoA0gI",
            "iAEBEhwKD2xpbWl0X2x1Y2t5ZHJhdxgKIAEoCEgJiAEBEhwKD2xpbWl0X2Nv",
            "bG9yZ2FtZRgLIAEoCEgKiAEBEhoKDWxpbWl0X2phY2twb3QYDCABKAhIC4gB",
            "ARIZCgxsaW1pdF9ldmNob3AYDSABKAhIDIgBARIkChdsdWNreWRyYXdfd2Vl",
            "a2x5X3Byb2ZpdBgOIAEoA0gNiAEBEiMKFmx1Y2t5ZHJhd19kYWlseV9wcm9m",
            "aXQYDyABKANIDogBARIkChdjb2xvcmdhbWVfd2Vla2x5X3Byb2ZpdBgQIAEo",
            "A0gPiAEBEiMKFmNvbG9yZ2FtZV9kYWlseV9wcm9maXQYESABKANIEIgBARIi",
            "ChVqYWNrcG90X3dlZWtseV9wcm9maXQYEiABKANIEYgBARIhChRqYWNrcG90",
            "X2RhaWx5X3Byb2ZpdBgTIAEoA0gSiAEBEiEKFGV2Y2hvcF93ZWVrbHlfcHJv",
            "Zml0GBQgASgDSBOIAQESIAoTZXZjaG9wX2RhaWx5X3Byb2ZpdBgVIAEoA0gU",
            "iAEBEiEKFG90aGVyc193ZWVrbHlfcHJvZml0GBYgASgDSBWIAQESIAoTb3Ro",
            "ZXJzX2RhaWx5X3Byb2ZpdBgXIAEoA0gWiAEBEikKHGx1Y2t5ZHJhd19sYXN0",
            "X3dlZWtseV9wcm9maXQYGCABKANIF4gBARIoChtsdWNreWRyYXdfbGFzdF9k",
            "YWlseV9wcm9maXQYGSABKANIGIgBARIpChxjb2xvcmdhbWVfbGFzdF93ZWVr",
            "bHlfcHJvZml0GBogASgDSBmIAQESKAobY29sb3JnYW1lX2xhc3RfZGFpbHlf",
            "cHJvZml0GBsgASgDSBqIAQESJwoaamFja3BvdF9sYXN0X3dlZWtseV9wcm9m",
            "aXQYHCABKANIG4gBARImChlqYWNrcG90X2xhc3RfZGFpbHlfcHJvZml0GB0g",
            "ASgDSByIAQESJgoZZXZjaG9wX2xhc3Rfd2Vla2x5X3Byb2ZpdBgeIAEoA0gd",
            "iAEBEiUKGGV2Y2hvcF9sYXN0X2RhaWx5X3Byb2ZpdBgfIAEoA0geiAEBEiYK",
            "GW90aGVyc19sYXN0X3dlZWtseV9wcm9maXQYICABKANIH4gBARIlChhvdGhl",
            "cnNfbGFzdF9kYWlseV9wcm9maXQYISABKANIIIgBAUIHCgVfY29kZUIRCg9f",
            "c3VzcGVuZF9zdGF0dXNCCgoIX2F1dG9iYW5CDwoNX2F1dG9iYW5fdHlwZUIQ",
            "Cg5fYXV0b2Jhbl9saW1pdEIOCgxfcHJvZml0X3dlZWtCDQoLX3Byb2ZpdF9k",
            "YXlCEgoQX3Byb2ZpdF9sYXN0X2RheUITChFfcHJvZml0X2xhc3Rfd2Vla0IS",
            "ChBfbGltaXRfbHVja3lkcmF3QhIKEF9saW1pdF9jb2xvcmdhbWVCEAoOX2xp",
            "bWl0X2phY2twb3RCDwoNX2xpbWl0X2V2Y2hvcEIaChhfbHVja3lkcmF3X3dl",
            "ZWtseV9wcm9maXRCGQoXX2x1Y2t5ZHJhd19kYWlseV9wcm9maXRCGgoYX2Nv",
            "bG9yZ2FtZV93ZWVrbHlfcHJvZml0QhkKF19jb2xvcmdhbWVfZGFpbHlfcHJv",
            "Zml0QhgKFl9qYWNrcG90X3dlZWtseV9wcm9maXRCFwoVX2phY2twb3RfZGFp",
            "bHlfcHJvZml0QhcKFV9ldmNob3Bfd2Vla2x5X3Byb2ZpdEIWChRfZXZjaG9w",
            "X2RhaWx5X3Byb2ZpdEIXChVfb3RoZXJzX3dlZWtseV9wcm9maXRCFgoUX290",
            "aGVyc19kYWlseV9wcm9maXRCHwodX2x1Y2t5ZHJhd19sYXN0X3dlZWtseV9w",
            "cm9maXRCHgocX2x1Y2t5ZHJhd19sYXN0X2RhaWx5X3Byb2ZpdEIfCh1fY29s",
            "b3JnYW1lX2xhc3Rfd2Vla2x5X3Byb2ZpdEIeChxfY29sb3JnYW1lX2xhc3Rf",
            "ZGFpbHlfcHJvZml0Qh0KG19qYWNrcG90X2xhc3Rfd2Vla2x5X3Byb2ZpdEIc",
            "ChpfamFja3BvdF9sYXN0X2RhaWx5X3Byb2ZpdEIcChpfZXZjaG9wX2xhc3Rf",
            "d2Vla2x5X3Byb2ZpdEIbChlfZXZjaG9wX2xhc3RfZGFpbHlfcHJvZml0QhwK",
            "Gl9vdGhlcnNfbGFzdF93ZWVrbHlfcHJvZml0QhsKGV9vdGhlcnNfbGFzdF9k",
            "YWlseV9wcm9maXQifwoXQ2x1YkF1dG9TdXNwZW5kQWdlbnRSRVESEwoGY2x1",
            "YmlkGAEgASgJSACIAQESFgoJYWdlbnRfdWlkGAIgASgFSAGIAQESEwoGZW5h",
            "YmxlGAMgASgISAKIAQFCCQoHX2NsdWJpZEIMCgpfYWdlbnRfdWlkQgkKB19l",
            "bmFibGUiNQoXQ2x1YkF1dG9TdXNwZW5kQWdlbnRSU1ASEQoEY29kZRgBIAEo",
            "BUgAiAEBQgcKBV9jb2RlIvwCChxDbHViQXV0b1N1c3BlbmRBZ2VudExpbWl0",
            "UkVREhMKBmNsdWJpZBgBIAEoCUgAiAEBEhYKCWFnZW50X3VpZBgCIAEoBUgB",
            "iAEBEhkKDGF1dG9iYW5fdHlwZRgDIAEoBUgCiAEBEhoKDWF1dG9iYW5fbGlt",
            "aXQYBCABKANIA4gBARIcCg9saW1pdF9sdWNreWRyYXcYBSABKAhIBIgBARIc",
            "Cg9saW1pdF9jb2xvcmdhbWUYBiABKAhIBYgBARIaCg1saW1pdF9qYWNrcG90",
            "GAcgASgISAaIAQESGQoMbGltaXRfZXZjaG9wGAggASgISAeIAQFCCQoHX2Ns",
            "dWJpZEIMCgpfYWdlbnRfdWlkQg8KDV9hdXRvYmFuX3R5cGVCEAoOX2F1dG9i",
            "YW5fbGltaXRCEgoQX2xpbWl0X2x1Y2t5ZHJhd0ISChBfbGltaXRfY29sb3Jn",
            "YW1lQhAKDl9saW1pdF9qYWNrcG90Qg8KDV9saW1pdF9ldmNob3AiOgocQ2x1",
            "YkF1dG9TdXNwZW5kQWdlbnRMaW1pdFJTUBIRCgRjb2RlGAEgASgFSACIAQFC",
            "BwoFX2NvZGUi8gEKGkNsdWJSb29tUGFyYW1ldGVyRmlsdGVyUkVREhMKBmNs",
            "dWJpZBgBIAEoBUgAiAEBEhUKCGxlYWd1ZWlkGAIgASgFSAGIAQESFgoJdGhy",
            "ZXNob2xkGAMgASgFSAKIAQESEwoGdGFyZ2V0GAQgASgFSAOIAQESFgoJcm9v",
            "bV90eXBlGAUgASgFSASIAQESFgoJZ2FtZV9tb2RlGAYgASgFSAWIAQFCCQoH",
            "X2NsdWJpZEILCglfbGVhZ3VlaWRCDAoKX3RocmVzaG9sZEIJCgdfdGFyZ2V0",
            "QgwKCl9yb29tX3R5cGVCDAoKX2dhbWVfbW9kZSKgAQoaQ2x1YlJvb21QYXJh",
            "bWV0ZXJGaWx0ZXJSU1ASEwoGY2x1YmlkGAEgASgFSACIAQESFQoIbGVhZ3Vl",
            "aWQYAiABKAVIAYgBARIRCgRjb2RlGAMgASgFSAKIAQESFQoIcm9vbV9udW0Y",
            "BCABKAVIA4gBAUIJCgdfY2x1YmlkQgsKCV9sZWFndWVpZEIHCgVfY29kZUIL",
            "Cglfcm9vbV9udW1CGloHL3BicHBnb6oCDlRleGFzLlByb3RvY29sYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Texas.Protocol.PreBaseReflection.Descriptor, global::Texas.Protocol.BaseReflection.Descriptor, global::Texas.Protocol.ClubBaseReflection.Descriptor, global::Texas.Protocol.Club1Reflection.Descriptor, global::Texas.Protocol.ItemReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.NewPPCoinFlowREQ), global::Texas.Protocol.NewPPCoinFlowREQ.Parser, new[]{ "Clubid", "Leagueid" }, new[]{ "Clubid", "Leagueid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.NewPPCoinFlowRSP), global::Texas.Protocol.NewPPCoinFlowRSP.Parser, new[]{ "Code", "Clubid", "Leagueid" }, new[]{ "Code", "Clubid", "Leagueid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubRoomFilter), global::Texas.Protocol.ClubRoomFilter.Parser, new[]{ "RoomType", "IsExcludeFull", "NlhBlind", "FlashBlind", "SixPlusAnte", "PloBlind", "OfcBase", "SngBuyin", "MttBuyin", "PlayerNum", "LeftTime", "IsPlaying", "MixtureBlind", "Plo4Blind", "Plo5Blind", "PloHlBlind", "FilterMode", "ClienMark", "PasswdLimit", "SpinupBuyin", "IsMatchJoinable", "Plo6Blind", "AofBlind", "TpAnte", "PusoyBlind", "TongitsBlind" }, new[]{ "RoomType", "IsExcludeFull", "IsPlaying", "FilterMode", "ClienMark", "PasswdLimit", "IsMatchJoinable" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubRoomREQ), global::Texas.Protocol.ClubRoomREQ.Parser, new[]{ "Clubid", "Leagueid", "Filter", "IsValidFilter", "StartIndex", "Amount", "Roomid", "IsServerFilter", "SuperLeagueid" }, new[]{ "Clubid", "Leagueid", "Filter", "IsValidFilter", "StartIndex", "Amount", "Roomid", "IsServerFilter", "SuperLeagueid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PlayingRoom), global::Texas.Protocol.PlayingRoom.Parser, new[]{ "Roomid", "RoomType", "MttStatus", "MttStartTime" }, new[]{ "Roomid", "RoomType", "MttStatus", "MttStartTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubRoomRSP), global::Texas.Protocol.ClubRoomRSP.Parser, new[]{ "Leagueid", "Info", "Clubid", "Code", "Filter", "RoomNum", "StartIndex", "IsUsingFilter", "CoolDown", "PlayingRoomList" }, new[]{ "Leagueid", "Clubid", "Code", "Filter", "RoomNum", "StartIndex", "IsUsingFilter", "CoolDown" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubSatelliteRoomListREQ), global::Texas.Protocol.ClubSatelliteRoomListREQ.Parser, new[]{ "Clubid", "Leagueid", "RoomType", "RewardPrice" }, new[]{ "Clubid", "Leagueid", "RoomType", "RewardPrice" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubSatelliteRoomListRSP), global::Texas.Protocol.ClubSatelliteRoomListRSP.Parser, new[]{ "RewardPrice", "Info" }, new[]{ "RewardPrice" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubRoomNumREQ), global::Texas.Protocol.ClubRoomNumREQ.Parser, new[]{ "Clubid", "Leagueid", "Filter" }, new[]{ "Clubid", "Leagueid", "Filter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubRoomNumRSP), global::Texas.Protocol.ClubRoomNumRSP.Parser, new[]{ "Code", "Leagueid", "Clubid", "Filter", "FilterRoomNum", "TotalRoomNum" }, new[]{ "Code", "Leagueid", "Clubid", "Filter", "FilterRoomNum", "TotalRoomNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubMemberDetailREQ), global::Texas.Protocol.ClubMemberDetailREQ.Parser, new[]{ "Clubid", "Leagueid", "Uid", "StartTs", "EndTs", "AgentUid" }, new[]{ "Clubid", "Leagueid", "Uid", "StartTs", "EndTs", "AgentUid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubMemberDetailRSP), global::Texas.Protocol.ClubMemberDetailRSP.Parser, new[]{ "Clubid", "Leagueid", "Uid", "TotalProfit", "HandsCnt", "BbProfit", "MttProfit", "OfcProfit", "Fee", "AgentUid", "StartTs", "EndTs", "SpinupBuyin" }, new[]{ "Clubid", "Leagueid", "Uid", "TotalProfit", "HandsCnt", "BbProfit", "MttProfit", "OfcProfit", "Fee", "AgentUid", "StartTs", "EndTs", "SpinupBuyin" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubBriefInfoREQ), global::Texas.Protocol.ClubBriefInfoREQ.Parser, new[]{ "Clubid", "AgentUid" }, new[]{ "Clubid", "AgentUid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubBriefInfoRSP), global::Texas.Protocol.ClubBriefInfoRSP.Parser, new[]{ "Code", "Info", "AgentName", "AgentUid" }, new[]{ "Code", "Info", "AgentName", "AgentUid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PpchipsStoreLimitREQ), global::Texas.Protocol.PpchipsStoreLimitREQ.Parser, new[]{ "Clubid", "Leagueid", "FromType" }, new[]{ "Clubid", "Leagueid", "FromType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PpchipsStoreLimitRSP), global::Texas.Protocol.PpchipsStoreLimitRSP.Parser, new[]{ "Clubid", "Leagueid", "FromType", "NeedLimit", "Code", "PpchipsUpperLimit", "PpchipsRealTime" }, new[]{ "Clubid", "Leagueid", "FromType", "NeedLimit", "Code", "PpchipsUpperLimit", "PpchipsRealTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.LeagueBanClubREQ), global::Texas.Protocol.LeagueBanClubREQ.Parser, new[]{ "Leagueid", "Clubid", "OpType" }, new[]{ "Leagueid", "Clubid", "OpType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.LeagueBanClubRSP), global::Texas.Protocol.LeagueBanClubRSP.Parser, new[]{ "Code", "Clubid", "OpType" }, new[]{ "Code", "Clubid", "OpType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PPSRBanLeagueREQ), global::Texas.Protocol.PPSRBanLeagueREQ.Parser, new[]{ "Ppsrid", "Leaguetype", "Leagueid", "Ban" }, new[]{ "Ppsrid", "Leaguetype", "Leagueid", "Ban" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PPSRBanLeagueRSP), global::Texas.Protocol.PPSRBanLeagueRSP.Parser, new[]{ "Code" }, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SuperLeagueBanLeagueREQ), global::Texas.Protocol.SuperLeagueBanLeagueREQ.Parser, new[]{ "Superleagueid", "Leagueid", "Ban" }, new[]{ "Superleagueid", "Leagueid", "Ban" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SuperLeagueBanLeagueRSP), global::Texas.Protocol.SuperLeagueBanLeagueRSP.Parser, new[]{ "Code" }, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.AgentPPCoinREQ), global::Texas.Protocol.AgentPPCoinREQ.Parser, new[]{ "Clubid", "Leagueid", "AgentUid" }, new[]{ "Clubid", "Leagueid", "AgentUid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.AgentPPCoinRSP), global::Texas.Protocol.AgentPPCoinRSP.Parser, new[]{ "Code", "Clubid", "Leagueid", "AgentUid", "AgentPpcoin" }, new[]{ "Code", "Clubid", "Leagueid", "AgentUid", "AgentPpcoin" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.KickRoomUserREQ), global::Texas.Protocol.KickRoomUserREQ.Parser, new[]{ "Roomid", "Uid" }, new[]{ "Roomid", "Uid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.KickRoomUserRSP), global::Texas.Protocol.KickRoomUserRSP.Parser, new[]{ "Code", "Flag" }, new[]{ "Code", "Flag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.KickedRoomRSP), global::Texas.Protocol.KickedRoomRSP.Parser, new[]{ "Roomid", "Manager", "RoomType", "GameMode", "Blind", "MinBet", "MiddleBet", "HighBet" }, new[]{ "Roomid", "Manager", "RoomType", "GameMode", "Blind", "MinBet", "MiddleBet", "HighBet" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.AddItemCoinREQ), global::Texas.Protocol.AddItemCoinREQ.Parser, new[]{ "Clubid", "Leagueid", "Uids", "ItemIds", "ItemTypes", "ItemValues" }, new[]{ "Clubid", "Leagueid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.AddItemCoinRSP), global::Texas.Protocol.AddItemCoinRSP.Parser, new[]{ "Code", "Clubid", "Leagueid", "ClubPpcoin", "Info" }, new[]{ "Code", "Clubid", "Leagueid", "ClubPpcoin" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubAction), global::Texas.Protocol.ClubAction.Parser, new[]{ "Clubid", "FromUid", "ToUid", "Type", "ActionTime", "Attach", "Leagueid" }, new[]{ "Clubid", "FromUid", "ToUid", "Type", "ActionTime", "Attach", "Leagueid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SinglePPCoinFlowREQ), global::Texas.Protocol.SinglePPCoinFlowREQ.Parser, new[]{ "Clubid", "Leagueid" }, new[]{ "Clubid", "Leagueid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SinglePPCoinFlowRSP), global::Texas.Protocol.SinglePPCoinFlowRSP.Parser, new[]{ "Clubid", "Leagueid", "Info" }, new[]{ "Clubid", "Leagueid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.KickClubUserREQ), global::Texas.Protocol.KickClubUserREQ.Parser, new[]{ "Clubid", "Uid" }, new[]{ "Clubid", "Uid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.KickClubUserRSP), global::Texas.Protocol.KickClubUserRSP.Parser, new[]{ "Code", "Clubid", "Uid" }, new[]{ "Code", "Clubid", "Uid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.GetRedPointDataREQ), global::Texas.Protocol.GetRedPointDataREQ.Parser, new[]{ "Clubid", "Leagueid" }, new[]{ "Clubid", "Leagueid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.GetRedPointDataRSP), global::Texas.Protocol.GetRedPointDataRSP.Parser, new[]{ "Type", "Clubid", "Leagueid" }, new[]{ "Clubid", "Leagueid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.RoomTopREQ), global::Texas.Protocol.RoomTopREQ.Parser, new[]{ "Roomid", "IsTop", "Clubid", "IsPpstRoom", "IsPpsrRoom" }, new[]{ "Roomid", "IsTop", "Clubid", "IsPpstRoom", "IsPpsrRoom" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.RoomTopRSP), global::Texas.Protocol.RoomTopRSP.Parser, new[]{ "Roomid", "IsTop", "Code" }, new[]{ "Roomid", "IsTop", "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubManagerAuthoritySetREQ), global::Texas.Protocol.ClubManagerAuthoritySetREQ.Parser, new[]{ "Uid", "Clubid", "AuthorityDetail" }, new[]{ "Uid", "Clubid", "AuthorityDetail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubManagerAuthoritySetRSP), global::Texas.Protocol.ClubManagerAuthoritySetRSP.Parser, new[]{ "Code", "Uid", "Clubid", "AuthorityDetail" }, new[]{ "Code", "Uid", "Clubid", "AuthorityDetail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubStormInfoREQ), global::Texas.Protocol.ClubStormInfoREQ.Parser, new[]{ "Clubid" }, new[]{ "Clubid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubStormInfoRSP), global::Texas.Protocol.ClubStormInfoRSP.Parser, new[]{ "Code", "Storm" }, new[]{ "Code", "Storm" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubSuspendAgentREQ), global::Texas.Protocol.ClubSuspendAgentREQ.Parser, new[]{ "Uid", "Clubid", "Action", "Today", "ThisWeekBeginDay", "Timezone" }, new[]{ "Uid", "Clubid", "Action", "Today", "ThisWeekBeginDay", "Timezone" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubSuspendAgentRSP), global::Texas.Protocol.ClubSuspendAgentRSP.Parser, new[]{ "Code", "Action" }, new[]{ "Code", "Action" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubAgentStatusREQ), global::Texas.Protocol.ClubAgentStatusREQ.Parser, new[]{ "Clubid", "AgentUid", "Leagueid", "Yesterday", "Today", "LastWeekBeginDay", "ThisWeekBeginDay", "Timezone" }, new[]{ "Clubid", "AgentUid", "Leagueid", "Yesterday", "Today", "LastWeekBeginDay", "ThisWeekBeginDay", "Timezone" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubAgentStatusRSP), global::Texas.Protocol.ClubAgentStatusRSP.Parser, new[]{ "Code", "SuspendStatus", "Autoban", "AutobanType", "AutobanLimit", "ProfitWeek", "ProfitDay", "ProfitLastDay", "ProfitLastWeek", "LimitLuckydraw", "LimitColorgame", "LimitJackpot", "LimitEvchop", "LuckydrawWeeklyProfit", "LuckydrawDailyProfit", "ColorgameWeeklyProfit", "ColorgameDailyProfit", "JackpotWeeklyProfit", "JackpotDailyProfit", "EvchopWeeklyProfit", "EvchopDailyProfit", "OthersWeeklyProfit", "OthersDailyProfit", "LuckydrawLastWeeklyProfit", "LuckydrawLastDailyProfit", "ColorgameLastWeeklyProfit", "ColorgameLastDailyProfit", "JackpotLastWeeklyProfit", "JackpotLastDailyProfit", "EvchopLastWeeklyProfit", "EvchopLastDailyProfit", "OthersLastWeeklyProfit", "OthersLastDailyProfit" }, new[]{ "Code", "SuspendStatus", "Autoban", "AutobanType", "AutobanLimit", "ProfitWeek", "ProfitDay", "ProfitLastDay", "ProfitLastWeek", "LimitLuckydraw", "LimitColorgame", "LimitJackpot", "LimitEvchop", "LuckydrawWeeklyProfit", "LuckydrawDailyProfit", "ColorgameWeeklyProfit", "ColorgameDailyProfit", "JackpotWeeklyProfit", "JackpotDailyProfit", "EvchopWeeklyProfit", "EvchopDailyProfit", "OthersWeeklyProfit", "OthersDailyProfit", "LuckydrawLastWeeklyProfit", "LuckydrawLastDailyProfit", "ColorgameLastWeeklyProfit", "ColorgameLastDailyProfit", "JackpotLastWeeklyProfit", "JackpotLastDailyProfit", "EvchopLastWeeklyProfit", "EvchopLastDailyProfit", "OthersLastWeeklyProfit", "OthersLastDailyProfit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubAutoSuspendAgentREQ), global::Texas.Protocol.ClubAutoSuspendAgentREQ.Parser, new[]{ "Clubid", "AgentUid", "Enable" }, new[]{ "Clubid", "AgentUid", "Enable" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubAutoSuspendAgentRSP), global::Texas.Protocol.ClubAutoSuspendAgentRSP.Parser, new[]{ "Code" }, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubAutoSuspendAgentLimitREQ), global::Texas.Protocol.ClubAutoSuspendAgentLimitREQ.Parser, new[]{ "Clubid", "AgentUid", "AutobanType", "AutobanLimit", "LimitLuckydraw", "LimitColorgame", "LimitJackpot", "LimitEvchop" }, new[]{ "Clubid", "AgentUid", "AutobanType", "AutobanLimit", "LimitLuckydraw", "LimitColorgame", "LimitJackpot", "LimitEvchop" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubAutoSuspendAgentLimitRSP), global::Texas.Protocol.ClubAutoSuspendAgentLimitRSP.Parser, new[]{ "Code" }, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubRoomParameterFilterREQ), global::Texas.Protocol.ClubRoomParameterFilterREQ.Parser, new[]{ "Clubid", "Leagueid", "Threshold", "Target", "RoomType", "GameMode" }, new[]{ "Clubid", "Leagueid", "Threshold", "Target", "RoomType", "GameMode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubRoomParameterFilterRSP), global::Texas.Protocol.ClubRoomParameterFilterRSP.Parser, new[]{ "Clubid", "Leagueid", "Code", "RoomNum" }, new[]{ "Clubid", "Leagueid", "Code", "RoomNum" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class NewPPCoinFlowREQ : pb::IMessage<NewPPCoinFlowREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NewPPCoinFlowREQ> _parser = new pb::MessageParser<NewPPCoinFlowREQ>(() => new NewPPCoinFlowREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NewPPCoinFlowREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewPPCoinFlowREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewPPCoinFlowREQ(NewPPCoinFlowREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewPPCoinFlowREQ Clone() {
      return new NewPPCoinFlowREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 2;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 1) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NewPPCoinFlowREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NewPPCoinFlowREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NewPPCoinFlowREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NewPPCoinFlowRSP : pb::IMessage<NewPPCoinFlowRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NewPPCoinFlowRSP> _parser = new pb::MessageParser<NewPPCoinFlowRSP>(() => new NewPPCoinFlowRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NewPPCoinFlowRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewPPCoinFlowRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewPPCoinFlowRSP(NewPPCoinFlowRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewPPCoinFlowRSP Clone() {
      return new NewPPCoinFlowRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0 有    -1 没有
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 2;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 3;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 2) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NewPPCoinFlowRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NewPPCoinFlowRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(24);
        output.WriteInt32(Leagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(24);
        output.WriteInt32(Leagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NewPPCoinFlowRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
          case 24: {
            Leagueid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
          case 24: {
            Leagueid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubRoomFilter : pb::IMessage<ClubRoomFilter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubRoomFilter> _parser = new pb::MessageParser<ClubRoomFilter>(() => new ClubRoomFilter());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubRoomFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubRoomFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubRoomFilter(ClubRoomFilter other) : this() {
      _hasBits0 = other._hasBits0;
      roomType_ = other.roomType_;
      isExcludeFull_ = other.isExcludeFull_;
      nlhBlind_ = other.nlhBlind_.Clone();
      flashBlind_ = other.flashBlind_.Clone();
      sixPlusAnte_ = other.sixPlusAnte_.Clone();
      ploBlind_ = other.ploBlind_.Clone();
      ofcBase_ = other.ofcBase_.Clone();
      sngBuyin_ = other.sngBuyin_.Clone();
      mttBuyin_ = other.mttBuyin_.Clone();
      playerNum_ = other.playerNum_.Clone();
      leftTime_ = other.leftTime_.Clone();
      isPlaying_ = other.isPlaying_;
      mixtureBlind_ = other.mixtureBlind_.Clone();
      plo4Blind_ = other.plo4Blind_.Clone();
      plo5Blind_ = other.plo5Blind_.Clone();
      ploHlBlind_ = other.ploHlBlind_.Clone();
      filterMode_ = other.filterMode_;
      clienMark_ = other.clienMark_;
      passwdLimit_ = other.passwdLimit_;
      spinupBuyin_ = other.spinupBuyin_.Clone();
      isMatchJoinable_ = other.isMatchJoinable_;
      plo6Blind_ = other.plo6Blind_.Clone();
      aofBlind_ = other.aofBlind_.Clone();
      tpAnte_ = other.tpAnte_.Clone();
      pusoyBlind_ = other.pusoyBlind_.Clone();
      tongitsBlind_ = other.tongitsBlind_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubRoomFilter Clone() {
      return new ClubRoomFilter(this);
    }

    /// <summary>Field number for the "room_type" field.</summary>
    public const int RoomTypeFieldNumber = 1;
    private readonly static int RoomTypeDefaultValue = 0;

    private int roomType_;
    /// <summary>
    ///
    ///牌桌类型 
    ///0:ALL,         1:NLH,      2:Flash,   3:6+,         4:PLO,
    ///5:OFC,         6:SNG,      7:MTT,     8:mixed game, 9:PLO4,
    ///10:PLO5,      11:PLO H/L, 12:spinup, 13:PLO6,      14:aof,
    ///15:teenpatti, 16:pusoy,   17:tongits
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoomType {
      get { if ((_hasBits0 & 1) != 0) { return roomType_; } else { return RoomTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomType_ = value;
      }
    }
    /// <summary>Gets whether the "room_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "room_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "is_exclude_full" field.</summary>
    public const int IsExcludeFullFieldNumber = 2;
    private readonly static bool IsExcludeFullDefaultValue = false;

    private bool isExcludeFull_;
    /// <summary>
    /// 是否不看满桌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsExcludeFull {
      get { if ((_hasBits0 & 2) != 0) { return isExcludeFull_; } else { return IsExcludeFullDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isExcludeFull_ = value;
      }
    }
    /// <summary>Gets whether the "is_exclude_full" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsExcludeFull {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_exclude_full" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsExcludeFull() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "nlh_blind" field.</summary>
    public const int NlhBlindFieldNumber = 3;
    private static readonly pb::FieldCodec<long> _repeated_nlhBlind_codec
        = pb::FieldCodec.ForInt64(26);
    private readonly pbc::RepeatedField<long> nlhBlind_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 小盲 [10, 30, 40, 50]表示选择了0.1-0.3和0.4-0.5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> NlhBlind {
      get { return nlhBlind_; }
    }

    /// <summary>Field number for the "flash_blind" field.</summary>
    public const int FlashBlindFieldNumber = 4;
    private static readonly pb::FieldCodec<long> _repeated_flashBlind_codec
        = pb::FieldCodec.ForInt64(34);
    private readonly pbc::RepeatedField<long> flashBlind_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 小盲 [10, 30, 40, 50]表示选择了0.1-0.3和0.4-0.5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> FlashBlind {
      get { return flashBlind_; }
    }

    /// <summary>Field number for the "six_plus_ante" field.</summary>
    public const int SixPlusAnteFieldNumber = 5;
    private static readonly pb::FieldCodec<long> _repeated_sixPlusAnte_codec
        = pb::FieldCodec.ForInt64(42);
    private readonly pbc::RepeatedField<long> sixPlusAnte_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 前注 [10, 40, 50, 80]表示选择了0.1-0.4和0.5-0.8
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> SixPlusAnte {
      get { return sixPlusAnte_; }
    }

    /// <summary>Field number for the "plo_blind" field.</summary>
    public const int PloBlindFieldNumber = 6;
    private static readonly pb::FieldCodec<long> _repeated_ploBlind_codec
        = pb::FieldCodec.ForInt64(50);
    private readonly pbc::RepeatedField<long> ploBlind_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 小盲 [10, 30, 40, 50]表示选择了0.1-0.3和0.4-0.5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> PloBlind {
      get { return ploBlind_; }
    }

    /// <summary>Field number for the "ofc_base" field.</summary>
    public const int OfcBaseFieldNumber = 7;
    private static readonly pb::FieldCodec<long> _repeated_ofcBase_codec
        = pb::FieldCodec.ForInt64(58);
    private readonly pbc::RepeatedField<long> ofcBase_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 底分 [10, 40, 50, 80]表示选择了0.1-0.4和0.5-0.8
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> OfcBase {
      get { return ofcBase_; }
    }

    /// <summary>Field number for the "sng_buyin" field.</summary>
    public const int SngBuyinFieldNumber = 8;
    private static readonly pb::FieldCodec<long> _repeated_sngBuyin_codec
        = pb::FieldCodec.ForInt64(66);
    private readonly pbc::RepeatedField<long> sngBuyin_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 买入 [0, 1000, 1100, 5000]表示选择了0-10和11-50
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> SngBuyin {
      get { return sngBuyin_; }
    }

    /// <summary>Field number for the "mtt_buyin" field.</summary>
    public const int MttBuyinFieldNumber = 9;
    private static readonly pb::FieldCodec<long> _repeated_mttBuyin_codec
        = pb::FieldCodec.ForInt64(74);
    private readonly pbc::RepeatedField<long> mttBuyin_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 买入 [0, 1000, 1100, 5000]表示选择了0-10和11-50
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> MttBuyin {
      get { return mttBuyin_; }
    }

    /// <summary>Field number for the "player_num" field.</summary>
    public const int PlayerNumFieldNumber = 10;
    private static readonly pb::FieldCodec<int> _repeated_playerNum_codec
        = pb::FieldCodec.ForInt32(82);
    private readonly pbc::RepeatedField<int> playerNum_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 牌桌人数 [1, 2, 3, 5]表示选择了1-2和3-5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> PlayerNum {
      get { return playerNum_; }
    }

    /// <summary>Field number for the "left_time" field.</summary>
    public const int LeftTimeFieldNumber = 11;
    private static readonly pb::FieldCodec<long> _repeated_leftTime_codec
        = pb::FieldCodec.ForInt64(90);
    private readonly pbc::RepeatedField<long> leftTime_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 剩余时间 [0, 1800, 1801, 15552000]表示选择了 小于半小时 和 多于半小时
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> LeftTime {
      get { return leftTime_; }
    }

    /// <summary>Field number for the "is_playing" field.</summary>
    public const int IsPlayingFieldNumber = 12;
    private readonly static bool IsPlayingDefaultValue = false;

    private bool isPlaying_;
    /// <summary>
    ///是否在玩
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPlaying {
      get { if ((_hasBits0 & 4) != 0) { return isPlaying_; } else { return IsPlayingDefaultValue; } }
      set {
        _hasBits0 |= 4;
        isPlaying_ = value;
      }
    }
    /// <summary>Gets whether the "is_playing" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPlaying {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "is_playing" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPlaying() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "mixture_blind" field.</summary>
    public const int MixtureBlindFieldNumber = 13;
    private static readonly pb::FieldCodec<long> _repeated_mixtureBlind_codec
        = pb::FieldCodec.ForInt64(106);
    private readonly pbc::RepeatedField<long> mixtureBlind_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 小盲 [10, 30, 40, 50]表示选择了0.1-0.3和0.4-0.5 混合游戏
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> MixtureBlind {
      get { return mixtureBlind_; }
    }

    /// <summary>Field number for the "plo4_blind" field.</summary>
    public const int Plo4BlindFieldNumber = 14;
    private static readonly pb::FieldCodec<long> _repeated_plo4Blind_codec
        = pb::FieldCodec.ForInt64(114);
    private readonly pbc::RepeatedField<long> plo4Blind_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 小盲 [10, 30, 40, 50]表示选择了0.1-0.3和0.4-0.5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> Plo4Blind {
      get { return plo4Blind_; }
    }

    /// <summary>Field number for the "plo5_blind" field.</summary>
    public const int Plo5BlindFieldNumber = 15;
    private static readonly pb::FieldCodec<long> _repeated_plo5Blind_codec
        = pb::FieldCodec.ForInt64(122);
    private readonly pbc::RepeatedField<long> plo5Blind_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 小盲 [10, 30, 40, 50]表示选择了0.1-0.3和0.4-0.5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> Plo5Blind {
      get { return plo5Blind_; }
    }

    /// <summary>Field number for the "plo_hl_blind" field.</summary>
    public const int PloHlBlindFieldNumber = 16;
    private static readonly pb::FieldCodec<long> _repeated_ploHlBlind_codec
        = pb::FieldCodec.ForInt64(130);
    private readonly pbc::RepeatedField<long> ploHlBlind_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 小盲 [10, 30, 40, 50]表示选择了0.1-0.3和0.4-0.5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> PloHlBlind {
      get { return ploHlBlind_; }
    }

    /// <summary>Field number for the "filter_mode" field.</summary>
    public const int FilterModeFieldNumber = 17;
    private readonly static int FilterModeDefaultValue = 0;

    private int filterMode_;
    /// <summary>
    ///筛选模式 0：快速筛选获取牌桌  1：精细筛选获取牌桌	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FilterMode {
      get { if ((_hasBits0 & 8) != 0) { return filterMode_; } else { return FilterModeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        filterMode_ = value;
      }
    }
    /// <summary>Gets whether the "filter_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFilterMode {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "filter_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFilterMode() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "clien_mark" field.</summary>
    public const int ClienMarkFieldNumber = 18;
    private readonly static int ClienMarkDefaultValue = 0;

    private int clienMark_;
    /// <summary>
    ///客户端标志(客户端传什么就返回什么) 0：无     1：客户端根据服务器筛选缓存定时获取牌桌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ClienMark {
      get { if ((_hasBits0 & 16) != 0) { return clienMark_; } else { return ClienMarkDefaultValue; } }
      set {
        _hasBits0 |= 16;
        clienMark_ = value;
      }
    }
    /// <summary>Gets whether the "clien_mark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClienMark {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "clien_mark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClienMark() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "passwd_limit" field.</summary>
    public const int PasswdLimitFieldNumber = 19;
    private readonly static bool PasswdLimitDefaultValue = false;

    private bool passwdLimit_;
    /// <summary>
    /// 密码桌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PasswdLimit {
      get { if ((_hasBits0 & 32) != 0) { return passwdLimit_; } else { return PasswdLimitDefaultValue; } }
      set {
        _hasBits0 |= 32;
        passwdLimit_ = value;
      }
    }
    /// <summary>Gets whether the "passwd_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPasswdLimit {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "passwd_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPasswdLimit() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "spinup_buyin" field.</summary>
    public const int SpinupBuyinFieldNumber = 20;
    private static readonly pb::FieldCodec<long> _repeated_spinupBuyin_codec
        = pb::FieldCodec.ForInt64(162);
    private readonly pbc::RepeatedField<long> spinupBuyin_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///小盲 [10, 30, 40, 50]表示选择了0.1-0.3和0.4-0.5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> SpinupBuyin {
      get { return spinupBuyin_; }
    }

    /// <summary>Field number for the "is_match_joinable" field.</summary>
    public const int IsMatchJoinableFieldNumber = 21;
    private readonly static bool IsMatchJoinableDefaultValue = false;

    private bool isMatchJoinable_;
    /// <summary>
    /// 过滤club比赛sng,mtt,spinup 尚未截止报名, num >=1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsMatchJoinable {
      get { if ((_hasBits0 & 64) != 0) { return isMatchJoinable_; } else { return IsMatchJoinableDefaultValue; } }
      set {
        _hasBits0 |= 64;
        isMatchJoinable_ = value;
      }
    }
    /// <summary>Gets whether the "is_match_joinable" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsMatchJoinable {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "is_match_joinable" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsMatchJoinable() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "plo6_blind" field.</summary>
    public const int Plo6BlindFieldNumber = 22;
    private static readonly pb::FieldCodec<long> _repeated_plo6Blind_codec
        = pb::FieldCodec.ForInt64(178);
    private readonly pbc::RepeatedField<long> plo6Blind_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 小盲 [10, 30, 40, 50]表示选择了0.1-0.3和0.4-0.5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> Plo6Blind {
      get { return plo6Blind_; }
    }

    /// <summary>Field number for the "aof_blind" field.</summary>
    public const int AofBlindFieldNumber = 23;
    private static readonly pb::FieldCodec<long> _repeated_aofBlind_codec
        = pb::FieldCodec.ForInt64(186);
    private readonly pbc::RepeatedField<long> aofBlind_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> AofBlind {
      get { return aofBlind_; }
    }

    /// <summary>Field number for the "tp_ante" field.</summary>
    public const int TpAnteFieldNumber = 24;
    private static readonly pb::FieldCodec<long> _repeated_tpAnte_codec
        = pb::FieldCodec.ForInt64(194);
    private readonly pbc::RepeatedField<long> tpAnte_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///teenpatti 的 boot
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> TpAnte {
      get { return tpAnte_; }
    }

    /// <summary>Field number for the "pusoy_blind" field.</summary>
    public const int PusoyBlindFieldNumber = 25;
    private static readonly pb::FieldCodec<long> _repeated_pusoyBlind_codec
        = pb::FieldCodec.ForInt64(202);
    private readonly pbc::RepeatedField<long> pusoyBlind_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> PusoyBlind {
      get { return pusoyBlind_; }
    }

    /// <summary>Field number for the "tongits_blind" field.</summary>
    public const int TongitsBlindFieldNumber = 26;
    private static readonly pb::FieldCodec<long> _repeated_tongitsBlind_codec
        = pb::FieldCodec.ForInt64(210);
    private readonly pbc::RepeatedField<long> tongitsBlind_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> TongitsBlind {
      get { return tongitsBlind_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubRoomFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubRoomFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomType != other.RoomType) return false;
      if (IsExcludeFull != other.IsExcludeFull) return false;
      if(!nlhBlind_.Equals(other.nlhBlind_)) return false;
      if(!flashBlind_.Equals(other.flashBlind_)) return false;
      if(!sixPlusAnte_.Equals(other.sixPlusAnte_)) return false;
      if(!ploBlind_.Equals(other.ploBlind_)) return false;
      if(!ofcBase_.Equals(other.ofcBase_)) return false;
      if(!sngBuyin_.Equals(other.sngBuyin_)) return false;
      if(!mttBuyin_.Equals(other.mttBuyin_)) return false;
      if(!playerNum_.Equals(other.playerNum_)) return false;
      if(!leftTime_.Equals(other.leftTime_)) return false;
      if (IsPlaying != other.IsPlaying) return false;
      if(!mixtureBlind_.Equals(other.mixtureBlind_)) return false;
      if(!plo4Blind_.Equals(other.plo4Blind_)) return false;
      if(!plo5Blind_.Equals(other.plo5Blind_)) return false;
      if(!ploHlBlind_.Equals(other.ploHlBlind_)) return false;
      if (FilterMode != other.FilterMode) return false;
      if (ClienMark != other.ClienMark) return false;
      if (PasswdLimit != other.PasswdLimit) return false;
      if(!spinupBuyin_.Equals(other.spinupBuyin_)) return false;
      if (IsMatchJoinable != other.IsMatchJoinable) return false;
      if(!plo6Blind_.Equals(other.plo6Blind_)) return false;
      if(!aofBlind_.Equals(other.aofBlind_)) return false;
      if(!tpAnte_.Equals(other.tpAnte_)) return false;
      if(!pusoyBlind_.Equals(other.pusoyBlind_)) return false;
      if(!tongitsBlind_.Equals(other.tongitsBlind_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomType) hash ^= RoomType.GetHashCode();
      if (HasIsExcludeFull) hash ^= IsExcludeFull.GetHashCode();
      hash ^= nlhBlind_.GetHashCode();
      hash ^= flashBlind_.GetHashCode();
      hash ^= sixPlusAnte_.GetHashCode();
      hash ^= ploBlind_.GetHashCode();
      hash ^= ofcBase_.GetHashCode();
      hash ^= sngBuyin_.GetHashCode();
      hash ^= mttBuyin_.GetHashCode();
      hash ^= playerNum_.GetHashCode();
      hash ^= leftTime_.GetHashCode();
      if (HasIsPlaying) hash ^= IsPlaying.GetHashCode();
      hash ^= mixtureBlind_.GetHashCode();
      hash ^= plo4Blind_.GetHashCode();
      hash ^= plo5Blind_.GetHashCode();
      hash ^= ploHlBlind_.GetHashCode();
      if (HasFilterMode) hash ^= FilterMode.GetHashCode();
      if (HasClienMark) hash ^= ClienMark.GetHashCode();
      if (HasPasswdLimit) hash ^= PasswdLimit.GetHashCode();
      hash ^= spinupBuyin_.GetHashCode();
      if (HasIsMatchJoinable) hash ^= IsMatchJoinable.GetHashCode();
      hash ^= plo6Blind_.GetHashCode();
      hash ^= aofBlind_.GetHashCode();
      hash ^= tpAnte_.GetHashCode();
      hash ^= pusoyBlind_.GetHashCode();
      hash ^= tongitsBlind_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomType) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomType);
      }
      if (HasIsExcludeFull) {
        output.WriteRawTag(16);
        output.WriteBool(IsExcludeFull);
      }
      nlhBlind_.WriteTo(output, _repeated_nlhBlind_codec);
      flashBlind_.WriteTo(output, _repeated_flashBlind_codec);
      sixPlusAnte_.WriteTo(output, _repeated_sixPlusAnte_codec);
      ploBlind_.WriteTo(output, _repeated_ploBlind_codec);
      ofcBase_.WriteTo(output, _repeated_ofcBase_codec);
      sngBuyin_.WriteTo(output, _repeated_sngBuyin_codec);
      mttBuyin_.WriteTo(output, _repeated_mttBuyin_codec);
      playerNum_.WriteTo(output, _repeated_playerNum_codec);
      leftTime_.WriteTo(output, _repeated_leftTime_codec);
      if (HasIsPlaying) {
        output.WriteRawTag(96);
        output.WriteBool(IsPlaying);
      }
      mixtureBlind_.WriteTo(output, _repeated_mixtureBlind_codec);
      plo4Blind_.WriteTo(output, _repeated_plo4Blind_codec);
      plo5Blind_.WriteTo(output, _repeated_plo5Blind_codec);
      ploHlBlind_.WriteTo(output, _repeated_ploHlBlind_codec);
      if (HasFilterMode) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(FilterMode);
      }
      if (HasClienMark) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(ClienMark);
      }
      if (HasPasswdLimit) {
        output.WriteRawTag(152, 1);
        output.WriteBool(PasswdLimit);
      }
      spinupBuyin_.WriteTo(output, _repeated_spinupBuyin_codec);
      if (HasIsMatchJoinable) {
        output.WriteRawTag(168, 1);
        output.WriteBool(IsMatchJoinable);
      }
      plo6Blind_.WriteTo(output, _repeated_plo6Blind_codec);
      aofBlind_.WriteTo(output, _repeated_aofBlind_codec);
      tpAnte_.WriteTo(output, _repeated_tpAnte_codec);
      pusoyBlind_.WriteTo(output, _repeated_pusoyBlind_codec);
      tongitsBlind_.WriteTo(output, _repeated_tongitsBlind_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomType) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomType);
      }
      if (HasIsExcludeFull) {
        output.WriteRawTag(16);
        output.WriteBool(IsExcludeFull);
      }
      nlhBlind_.WriteTo(ref output, _repeated_nlhBlind_codec);
      flashBlind_.WriteTo(ref output, _repeated_flashBlind_codec);
      sixPlusAnte_.WriteTo(ref output, _repeated_sixPlusAnte_codec);
      ploBlind_.WriteTo(ref output, _repeated_ploBlind_codec);
      ofcBase_.WriteTo(ref output, _repeated_ofcBase_codec);
      sngBuyin_.WriteTo(ref output, _repeated_sngBuyin_codec);
      mttBuyin_.WriteTo(ref output, _repeated_mttBuyin_codec);
      playerNum_.WriteTo(ref output, _repeated_playerNum_codec);
      leftTime_.WriteTo(ref output, _repeated_leftTime_codec);
      if (HasIsPlaying) {
        output.WriteRawTag(96);
        output.WriteBool(IsPlaying);
      }
      mixtureBlind_.WriteTo(ref output, _repeated_mixtureBlind_codec);
      plo4Blind_.WriteTo(ref output, _repeated_plo4Blind_codec);
      plo5Blind_.WriteTo(ref output, _repeated_plo5Blind_codec);
      ploHlBlind_.WriteTo(ref output, _repeated_ploHlBlind_codec);
      if (HasFilterMode) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(FilterMode);
      }
      if (HasClienMark) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(ClienMark);
      }
      if (HasPasswdLimit) {
        output.WriteRawTag(152, 1);
        output.WriteBool(PasswdLimit);
      }
      spinupBuyin_.WriteTo(ref output, _repeated_spinupBuyin_codec);
      if (HasIsMatchJoinable) {
        output.WriteRawTag(168, 1);
        output.WriteBool(IsMatchJoinable);
      }
      plo6Blind_.WriteTo(ref output, _repeated_plo6Blind_codec);
      aofBlind_.WriteTo(ref output, _repeated_aofBlind_codec);
      tpAnte_.WriteTo(ref output, _repeated_tpAnte_codec);
      pusoyBlind_.WriteTo(ref output, _repeated_pusoyBlind_codec);
      tongitsBlind_.WriteTo(ref output, _repeated_tongitsBlind_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomType);
      }
      if (HasIsExcludeFull) {
        size += 1 + 1;
      }
      size += nlhBlind_.CalculateSize(_repeated_nlhBlind_codec);
      size += flashBlind_.CalculateSize(_repeated_flashBlind_codec);
      size += sixPlusAnte_.CalculateSize(_repeated_sixPlusAnte_codec);
      size += ploBlind_.CalculateSize(_repeated_ploBlind_codec);
      size += ofcBase_.CalculateSize(_repeated_ofcBase_codec);
      size += sngBuyin_.CalculateSize(_repeated_sngBuyin_codec);
      size += mttBuyin_.CalculateSize(_repeated_mttBuyin_codec);
      size += playerNum_.CalculateSize(_repeated_playerNum_codec);
      size += leftTime_.CalculateSize(_repeated_leftTime_codec);
      if (HasIsPlaying) {
        size += 1 + 1;
      }
      size += mixtureBlind_.CalculateSize(_repeated_mixtureBlind_codec);
      size += plo4Blind_.CalculateSize(_repeated_plo4Blind_codec);
      size += plo5Blind_.CalculateSize(_repeated_plo5Blind_codec);
      size += ploHlBlind_.CalculateSize(_repeated_ploHlBlind_codec);
      if (HasFilterMode) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FilterMode);
      }
      if (HasClienMark) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ClienMark);
      }
      if (HasPasswdLimit) {
        size += 2 + 1;
      }
      size += spinupBuyin_.CalculateSize(_repeated_spinupBuyin_codec);
      if (HasIsMatchJoinable) {
        size += 2 + 1;
      }
      size += plo6Blind_.CalculateSize(_repeated_plo6Blind_codec);
      size += aofBlind_.CalculateSize(_repeated_aofBlind_codec);
      size += tpAnte_.CalculateSize(_repeated_tpAnte_codec);
      size += pusoyBlind_.CalculateSize(_repeated_pusoyBlind_codec);
      size += tongitsBlind_.CalculateSize(_repeated_tongitsBlind_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubRoomFilter other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomType) {
        RoomType = other.RoomType;
      }
      if (other.HasIsExcludeFull) {
        IsExcludeFull = other.IsExcludeFull;
      }
      nlhBlind_.Add(other.nlhBlind_);
      flashBlind_.Add(other.flashBlind_);
      sixPlusAnte_.Add(other.sixPlusAnte_);
      ploBlind_.Add(other.ploBlind_);
      ofcBase_.Add(other.ofcBase_);
      sngBuyin_.Add(other.sngBuyin_);
      mttBuyin_.Add(other.mttBuyin_);
      playerNum_.Add(other.playerNum_);
      leftTime_.Add(other.leftTime_);
      if (other.HasIsPlaying) {
        IsPlaying = other.IsPlaying;
      }
      mixtureBlind_.Add(other.mixtureBlind_);
      plo4Blind_.Add(other.plo4Blind_);
      plo5Blind_.Add(other.plo5Blind_);
      ploHlBlind_.Add(other.ploHlBlind_);
      if (other.HasFilterMode) {
        FilterMode = other.FilterMode;
      }
      if (other.HasClienMark) {
        ClienMark = other.ClienMark;
      }
      if (other.HasPasswdLimit) {
        PasswdLimit = other.PasswdLimit;
      }
      spinupBuyin_.Add(other.spinupBuyin_);
      if (other.HasIsMatchJoinable) {
        IsMatchJoinable = other.IsMatchJoinable;
      }
      plo6Blind_.Add(other.plo6Blind_);
      aofBlind_.Add(other.aofBlind_);
      tpAnte_.Add(other.tpAnte_);
      pusoyBlind_.Add(other.pusoyBlind_);
      tongitsBlind_.Add(other.tongitsBlind_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomType = input.ReadInt32();
            break;
          }
          case 16: {
            IsExcludeFull = input.ReadBool();
            break;
          }
          case 26:
          case 24: {
            nlhBlind_.AddEntriesFrom(input, _repeated_nlhBlind_codec);
            break;
          }
          case 34:
          case 32: {
            flashBlind_.AddEntriesFrom(input, _repeated_flashBlind_codec);
            break;
          }
          case 42:
          case 40: {
            sixPlusAnte_.AddEntriesFrom(input, _repeated_sixPlusAnte_codec);
            break;
          }
          case 50:
          case 48: {
            ploBlind_.AddEntriesFrom(input, _repeated_ploBlind_codec);
            break;
          }
          case 58:
          case 56: {
            ofcBase_.AddEntriesFrom(input, _repeated_ofcBase_codec);
            break;
          }
          case 66:
          case 64: {
            sngBuyin_.AddEntriesFrom(input, _repeated_sngBuyin_codec);
            break;
          }
          case 74:
          case 72: {
            mttBuyin_.AddEntriesFrom(input, _repeated_mttBuyin_codec);
            break;
          }
          case 82:
          case 80: {
            playerNum_.AddEntriesFrom(input, _repeated_playerNum_codec);
            break;
          }
          case 90:
          case 88: {
            leftTime_.AddEntriesFrom(input, _repeated_leftTime_codec);
            break;
          }
          case 96: {
            IsPlaying = input.ReadBool();
            break;
          }
          case 106:
          case 104: {
            mixtureBlind_.AddEntriesFrom(input, _repeated_mixtureBlind_codec);
            break;
          }
          case 114:
          case 112: {
            plo4Blind_.AddEntriesFrom(input, _repeated_plo4Blind_codec);
            break;
          }
          case 122:
          case 120: {
            plo5Blind_.AddEntriesFrom(input, _repeated_plo5Blind_codec);
            break;
          }
          case 130:
          case 128: {
            ploHlBlind_.AddEntriesFrom(input, _repeated_ploHlBlind_codec);
            break;
          }
          case 136: {
            FilterMode = input.ReadInt32();
            break;
          }
          case 144: {
            ClienMark = input.ReadInt32();
            break;
          }
          case 152: {
            PasswdLimit = input.ReadBool();
            break;
          }
          case 162:
          case 160: {
            spinupBuyin_.AddEntriesFrom(input, _repeated_spinupBuyin_codec);
            break;
          }
          case 168: {
            IsMatchJoinable = input.ReadBool();
            break;
          }
          case 178:
          case 176: {
            plo6Blind_.AddEntriesFrom(input, _repeated_plo6Blind_codec);
            break;
          }
          case 186:
          case 184: {
            aofBlind_.AddEntriesFrom(input, _repeated_aofBlind_codec);
            break;
          }
          case 194:
          case 192: {
            tpAnte_.AddEntriesFrom(input, _repeated_tpAnte_codec);
            break;
          }
          case 202:
          case 200: {
            pusoyBlind_.AddEntriesFrom(input, _repeated_pusoyBlind_codec);
            break;
          }
          case 210:
          case 208: {
            tongitsBlind_.AddEntriesFrom(input, _repeated_tongitsBlind_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoomType = input.ReadInt32();
            break;
          }
          case 16: {
            IsExcludeFull = input.ReadBool();
            break;
          }
          case 26:
          case 24: {
            nlhBlind_.AddEntriesFrom(ref input, _repeated_nlhBlind_codec);
            break;
          }
          case 34:
          case 32: {
            flashBlind_.AddEntriesFrom(ref input, _repeated_flashBlind_codec);
            break;
          }
          case 42:
          case 40: {
            sixPlusAnte_.AddEntriesFrom(ref input, _repeated_sixPlusAnte_codec);
            break;
          }
          case 50:
          case 48: {
            ploBlind_.AddEntriesFrom(ref input, _repeated_ploBlind_codec);
            break;
          }
          case 58:
          case 56: {
            ofcBase_.AddEntriesFrom(ref input, _repeated_ofcBase_codec);
            break;
          }
          case 66:
          case 64: {
            sngBuyin_.AddEntriesFrom(ref input, _repeated_sngBuyin_codec);
            break;
          }
          case 74:
          case 72: {
            mttBuyin_.AddEntriesFrom(ref input, _repeated_mttBuyin_codec);
            break;
          }
          case 82:
          case 80: {
            playerNum_.AddEntriesFrom(ref input, _repeated_playerNum_codec);
            break;
          }
          case 90:
          case 88: {
            leftTime_.AddEntriesFrom(ref input, _repeated_leftTime_codec);
            break;
          }
          case 96: {
            IsPlaying = input.ReadBool();
            break;
          }
          case 106:
          case 104: {
            mixtureBlind_.AddEntriesFrom(ref input, _repeated_mixtureBlind_codec);
            break;
          }
          case 114:
          case 112: {
            plo4Blind_.AddEntriesFrom(ref input, _repeated_plo4Blind_codec);
            break;
          }
          case 122:
          case 120: {
            plo5Blind_.AddEntriesFrom(ref input, _repeated_plo5Blind_codec);
            break;
          }
          case 130:
          case 128: {
            ploHlBlind_.AddEntriesFrom(ref input, _repeated_ploHlBlind_codec);
            break;
          }
          case 136: {
            FilterMode = input.ReadInt32();
            break;
          }
          case 144: {
            ClienMark = input.ReadInt32();
            break;
          }
          case 152: {
            PasswdLimit = input.ReadBool();
            break;
          }
          case 162:
          case 160: {
            spinupBuyin_.AddEntriesFrom(ref input, _repeated_spinupBuyin_codec);
            break;
          }
          case 168: {
            IsMatchJoinable = input.ReadBool();
            break;
          }
          case 178:
          case 176: {
            plo6Blind_.AddEntriesFrom(ref input, _repeated_plo6Blind_codec);
            break;
          }
          case 186:
          case 184: {
            aofBlind_.AddEntriesFrom(ref input, _repeated_aofBlind_codec);
            break;
          }
          case 194:
          case 192: {
            tpAnte_.AddEntriesFrom(ref input, _repeated_tpAnte_codec);
            break;
          }
          case 202:
          case 200: {
            pusoyBlind_.AddEntriesFrom(ref input, _repeated_pusoyBlind_codec);
            break;
          }
          case 210:
          case 208: {
            tongitsBlind_.AddEntriesFrom(ref input, _repeated_tongitsBlind_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubRoomREQ : pb::IMessage<ClubRoomREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubRoomREQ> _parser = new pb::MessageParser<ClubRoomREQ>(() => new ClubRoomREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubRoomREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubRoomREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubRoomREQ(ClubRoomREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      filter_ = other.filter_ != null ? other.filter_.Clone() : null;
      isValidFilter_ = other.isValidFilter_;
      startIndex_ = other.startIndex_;
      amount_ = other.amount_;
      roomid_ = other.roomid_;
      isServerFilter_ = other.isServerFilter_;
      superLeagueid_ = other.superLeagueid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubRoomREQ Clone() {
      return new ClubRoomREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 2;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 1) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 3;
    private global::Texas.Protocol.ClubRoomFilter filter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.ClubRoomFilter Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    /// <summary>Field number for the "is_valid_filter" field.</summary>
    public const int IsValidFilterFieldNumber = 4;
    private readonly static bool IsValidFilterDefaultValue = false;

    private bool isValidFilter_;
    /// <summary>
    /// 过滤条件是否有效，客户端是否有缓存
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsValidFilter {
      get { if ((_hasBits0 & 2) != 0) { return isValidFilter_; } else { return IsValidFilterDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isValidFilter_ = value;
      }
    }
    /// <summary>Gets whether the "is_valid_filter" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsValidFilter {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_valid_filter" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsValidFilter() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "start_index" field.</summary>
    public const int StartIndexFieldNumber = 5;
    private readonly static int StartIndexDefaultValue = 0;

    private int startIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartIndex {
      get { if ((_hasBits0 & 4) != 0) { return startIndex_; } else { return StartIndexDefaultValue; } }
      set {
        _hasBits0 |= 4;
        startIndex_ = value;
      }
    }
    /// <summary>Gets whether the "start_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartIndex {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "start_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartIndex() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 6;
    private readonly static int AmountDefaultValue = 0;

    private int amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Amount {
      get { if ((_hasBits0 & 8) != 0) { return amount_; } else { return AmountDefaultValue; } }
      set {
        _hasBits0 |= 8;
        amount_ = value;
      }
    }
    /// <summary>Gets whether the "amount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAmount {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "amount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAmount() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 7;
    private readonly static string RoomidDefaultValue = "";

    private string roomid_;
    /// <summary>
    /// 返回的房间，有效就忽略start_index，尽量在列表中间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Roomid {
      get { return roomid_ ?? RoomidDefaultValue; }
      set {
        roomid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return roomid_ != null; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      roomid_ = null;
    }

    /// <summary>Field number for the "is_server_filter" field.</summary>
    public const int IsServerFilterFieldNumber = 8;
    private readonly static bool IsServerFilterDefaultValue = false;

    private bool isServerFilter_;
    /// <summary>
    ///过滤掉服务器缓存的Flash和6+筛选条件(兼容混合游戏上线后的新旧版本)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsServerFilter {
      get { if ((_hasBits0 & 16) != 0) { return isServerFilter_; } else { return IsServerFilterDefaultValue; } }
      set {
        _hasBits0 |= 16;
        isServerFilter_ = value;
      }
    }
    /// <summary>Gets whether the "is_server_filter" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsServerFilter {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "is_server_filter" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsServerFilter() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "super_leagueid" field.</summary>
    public const int SuperLeagueidFieldNumber = 9;
    private readonly static int SuperLeagueidDefaultValue = 0;

    private int superLeagueid_;
    /// <summary>
    ///超级联盟id	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueid {
      get { if ((_hasBits0 & 32) != 0) { return superLeagueid_; } else { return SuperLeagueidDefaultValue; } }
      set {
        _hasBits0 |= 32;
        superLeagueid_ = value;
      }
    }
    /// <summary>Gets whether the "super_leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueid {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "super_leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueid() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubRoomREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubRoomREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (!object.Equals(Filter, other.Filter)) return false;
      if (IsValidFilter != other.IsValidFilter) return false;
      if (StartIndex != other.StartIndex) return false;
      if (Amount != other.Amount) return false;
      if (Roomid != other.Roomid) return false;
      if (IsServerFilter != other.IsServerFilter) return false;
      if (SuperLeagueid != other.SuperLeagueid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (filter_ != null) hash ^= Filter.GetHashCode();
      if (HasIsValidFilter) hash ^= IsValidFilter.GetHashCode();
      if (HasStartIndex) hash ^= StartIndex.GetHashCode();
      if (HasAmount) hash ^= Amount.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasIsServerFilter) hash ^= IsServerFilter.GetHashCode();
      if (HasSuperLeagueid) hash ^= SuperLeagueid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (filter_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Filter);
      }
      if (HasIsValidFilter) {
        output.WriteRawTag(32);
        output.WriteBool(IsValidFilter);
      }
      if (HasStartIndex) {
        output.WriteRawTag(40);
        output.WriteInt32(StartIndex);
      }
      if (HasAmount) {
        output.WriteRawTag(48);
        output.WriteInt32(Amount);
      }
      if (HasRoomid) {
        output.WriteRawTag(58);
        output.WriteString(Roomid);
      }
      if (HasIsServerFilter) {
        output.WriteRawTag(64);
        output.WriteBool(IsServerFilter);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(72);
        output.WriteInt32(SuperLeagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (filter_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Filter);
      }
      if (HasIsValidFilter) {
        output.WriteRawTag(32);
        output.WriteBool(IsValidFilter);
      }
      if (HasStartIndex) {
        output.WriteRawTag(40);
        output.WriteInt32(StartIndex);
      }
      if (HasAmount) {
        output.WriteRawTag(48);
        output.WriteInt32(Amount);
      }
      if (HasRoomid) {
        output.WriteRawTag(58);
        output.WriteString(Roomid);
      }
      if (HasIsServerFilter) {
        output.WriteRawTag(64);
        output.WriteBool(IsServerFilter);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(72);
        output.WriteInt32(SuperLeagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (HasIsValidFilter) {
        size += 1 + 1;
      }
      if (HasStartIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (HasAmount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Roomid);
      }
      if (HasIsServerFilter) {
        size += 1 + 1;
      }
      if (HasSuperLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubRoomREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.filter_ != null) {
        if (filter_ == null) {
          Filter = new global::Texas.Protocol.ClubRoomFilter();
        }
        Filter.MergeFrom(other.Filter);
      }
      if (other.HasIsValidFilter) {
        IsValidFilter = other.IsValidFilter;
      }
      if (other.HasStartIndex) {
        StartIndex = other.StartIndex;
      }
      if (other.HasAmount) {
        Amount = other.Amount;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasIsServerFilter) {
        IsServerFilter = other.IsServerFilter;
      }
      if (other.HasSuperLeagueid) {
        SuperLeagueid = other.SuperLeagueid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 26: {
            if (filter_ == null) {
              Filter = new global::Texas.Protocol.ClubRoomFilter();
            }
            input.ReadMessage(Filter);
            break;
          }
          case 32: {
            IsValidFilter = input.ReadBool();
            break;
          }
          case 40: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 48: {
            Amount = input.ReadInt32();
            break;
          }
          case 58: {
            Roomid = input.ReadString();
            break;
          }
          case 64: {
            IsServerFilter = input.ReadBool();
            break;
          }
          case 72: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 26: {
            if (filter_ == null) {
              Filter = new global::Texas.Protocol.ClubRoomFilter();
            }
            input.ReadMessage(Filter);
            break;
          }
          case 32: {
            IsValidFilter = input.ReadBool();
            break;
          }
          case 40: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 48: {
            Amount = input.ReadInt32();
            break;
          }
          case 58: {
            Roomid = input.ReadString();
            break;
          }
          case 64: {
            IsServerFilter = input.ReadBool();
            break;
          }
          case 72: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayingRoom : pb::IMessage<PlayingRoom>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayingRoom> _parser = new pb::MessageParser<PlayingRoom>(() => new PlayingRoom());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayingRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayingRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayingRoom(PlayingRoom other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      roomType_ = other.roomType_;
      mttStatus_ = other.mttStatus_;
      mttStartTime_ = other.mttStartTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayingRoom Clone() {
      return new PlayingRoom(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static string RoomidDefaultValue = "";

    private string roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Roomid {
      get { return roomid_ ?? RoomidDefaultValue; }
      set {
        roomid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return roomid_ != null; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      roomid_ = null;
    }

    /// <summary>Field number for the "room_type" field.</summary>
    public const int RoomTypeFieldNumber = 2;
    private readonly static global::Texas.Protocol.RoomType RoomTypeDefaultValue = global::Texas.Protocol.RoomType.TestRoom;

    private global::Texas.Protocol.RoomType roomType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomType RoomType {
      get { if ((_hasBits0 & 1) != 0) { return roomType_; } else { return RoomTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomType_ = value;
      }
    }
    /// <summary>Gets whether the "room_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "room_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "mtt_status" field.</summary>
    public const int MttStatusFieldNumber = 3;
    private readonly static int MttStatusDefaultValue = 0;

    private int mttStatus_;
    /// <summary>
    /// 1 未开赛  2 已经开赛，还能延迟登记  3 已经开赛，不能延迟登记  4 已经结束
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MttStatus {
      get { if ((_hasBits0 & 2) != 0) { return mttStatus_; } else { return MttStatusDefaultValue; } }
      set {
        _hasBits0 |= 2;
        mttStatus_ = value;
      }
    }
    /// <summary>Gets whether the "mtt_status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMttStatus {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "mtt_status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMttStatus() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "mtt_start_time" field.</summary>
    public const int MttStartTimeFieldNumber = 4;
    private readonly static long MttStartTimeDefaultValue = 0L;

    private long mttStartTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MttStartTime {
      get { if ((_hasBits0 & 4) != 0) { return mttStartTime_; } else { return MttStartTimeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        mttStartTime_ = value;
      }
    }
    /// <summary>Gets whether the "mtt_start_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMttStartTime {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "mtt_start_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMttStartTime() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayingRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayingRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (RoomType != other.RoomType) return false;
      if (MttStatus != other.MttStatus) return false;
      if (MttStartTime != other.MttStartTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasRoomType) hash ^= RoomType.GetHashCode();
      if (HasMttStatus) hash ^= MttStatus.GetHashCode();
      if (HasMttStartTime) hash ^= MttStartTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(10);
        output.WriteString(Roomid);
      }
      if (HasRoomType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) RoomType);
      }
      if (HasMttStatus) {
        output.WriteRawTag(24);
        output.WriteInt32(MttStatus);
      }
      if (HasMttStartTime) {
        output.WriteRawTag(32);
        output.WriteInt64(MttStartTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(10);
        output.WriteString(Roomid);
      }
      if (HasRoomType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) RoomType);
      }
      if (HasMttStatus) {
        output.WriteRawTag(24);
        output.WriteInt32(MttStatus);
      }
      if (HasMttStartTime) {
        output.WriteRawTag(32);
        output.WriteInt64(MttStartTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Roomid);
      }
      if (HasRoomType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomType);
      }
      if (HasMttStatus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MttStatus);
      }
      if (HasMttStartTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MttStartTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayingRoom other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasRoomType) {
        RoomType = other.RoomType;
      }
      if (other.HasMttStatus) {
        MttStatus = other.MttStatus;
      }
      if (other.HasMttStartTime) {
        MttStartTime = other.MttStartTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Roomid = input.ReadString();
            break;
          }
          case 16: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 24: {
            MttStatus = input.ReadInt32();
            break;
          }
          case 32: {
            MttStartTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Roomid = input.ReadString();
            break;
          }
          case 16: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 24: {
            MttStatus = input.ReadInt32();
            break;
          }
          case 32: {
            MttStartTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubRoomRSP : pb::IMessage<ClubRoomRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubRoomRSP> _parser = new pb::MessageParser<ClubRoomRSP>(() => new ClubRoomRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubRoomRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubRoomRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubRoomRSP(ClubRoomRSP other) : this() {
      _hasBits0 = other._hasBits0;
      leagueid_ = other.leagueid_;
      info_ = other.info_.Clone();
      clubid_ = other.clubid_;
      code_ = other.code_;
      filter_ = other.filter_ != null ? other.filter_.Clone() : null;
      roomNum_ = other.roomNum_;
      startIndex_ = other.startIndex_;
      isUsingFilter_ = other.isUsingFilter_;
      coolDown_ = other.coolDown_;
      playingRoomList_ = other.playingRoomList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubRoomRSP Clone() {
      return new ClubRoomRSP(this);
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 1;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 1) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ClubRoomInfo> _repeated_info_codec
        = pb::FieldCodec.ForMessage(18, global::Texas.Protocol.ClubRoomInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ClubRoomInfo> info_ = new pbc::RepeatedField<global::Texas.Protocol.ClubRoomInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ClubRoomInfo> Info {
      get { return info_; }
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 3;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 4;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0 成功    -1 不在俱乐部里      -2 cool down
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 2) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 5;
    private global::Texas.Protocol.ClubRoomFilter filter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.ClubRoomFilter Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    /// <summary>Field number for the "room_num" field.</summary>
    public const int RoomNumFieldNumber = 6;
    private readonly static int RoomNumDefaultValue = 0;

    private int roomNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoomNum {
      get { if ((_hasBits0 & 4) != 0) { return roomNum_; } else { return RoomNumDefaultValue; } }
      set {
        _hasBits0 |= 4;
        roomNum_ = value;
      }
    }
    /// <summary>Gets whether the "room_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomNum {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "room_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomNum() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "start_index" field.</summary>
    public const int StartIndexFieldNumber = 7;
    private readonly static int StartIndexDefaultValue = 0;

    private int startIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartIndex {
      get { if ((_hasBits0 & 8) != 0) { return startIndex_; } else { return StartIndexDefaultValue; } }
      set {
        _hasBits0 |= 8;
        startIndex_ = value;
      }
    }
    /// <summary>Gets whether the "start_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartIndex {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "start_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartIndex() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "is_using_filter" field.</summary>
    public const int IsUsingFilterFieldNumber = 8;
    private readonly static bool IsUsingFilterDefaultValue = false;

    private bool isUsingFilter_;
    /// <summary>
    /// 本次结果是否有过滤
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsUsingFilter {
      get { if ((_hasBits0 & 16) != 0) { return isUsingFilter_; } else { return IsUsingFilterDefaultValue; } }
      set {
        _hasBits0 |= 16;
        isUsingFilter_ = value;
      }
    }
    /// <summary>Gets whether the "is_using_filter" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsUsingFilter {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "is_using_filter" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsUsingFilter() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "cool_down" field.</summary>
    public const int CoolDownFieldNumber = 9;
    private readonly static int CoolDownDefaultValue = 0;

    private int coolDown_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CoolDown {
      get { if ((_hasBits0 & 32) != 0) { return coolDown_; } else { return CoolDownDefaultValue; } }
      set {
        _hasBits0 |= 32;
        coolDown_ = value;
      }
    }
    /// <summary>Gets whether the "cool_down" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCoolDown {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "cool_down" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCoolDown() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "playing_room_list" field.</summary>
    public const int PlayingRoomListFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PlayingRoom> _repeated_playingRoomList_codec
        = pb::FieldCodec.ForMessage(82, global::Texas.Protocol.PlayingRoom.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PlayingRoom> playingRoomList_ = new pbc::RepeatedField<global::Texas.Protocol.PlayingRoom>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PlayingRoom> PlayingRoomList {
      get { return playingRoomList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubRoomRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubRoomRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Leagueid != other.Leagueid) return false;
      if(!info_.Equals(other.info_)) return false;
      if (Clubid != other.Clubid) return false;
      if (Code != other.Code) return false;
      if (!object.Equals(Filter, other.Filter)) return false;
      if (RoomNum != other.RoomNum) return false;
      if (StartIndex != other.StartIndex) return false;
      if (IsUsingFilter != other.IsUsingFilter) return false;
      if (CoolDown != other.CoolDown) return false;
      if(!playingRoomList_.Equals(other.playingRoomList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      hash ^= info_.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasCode) hash ^= Code.GetHashCode();
      if (filter_ != null) hash ^= Filter.GetHashCode();
      if (HasRoomNum) hash ^= RoomNum.GetHashCode();
      if (HasStartIndex) hash ^= StartIndex.GetHashCode();
      if (HasIsUsingFilter) hash ^= IsUsingFilter.GetHashCode();
      if (HasCoolDown) hash ^= CoolDown.GetHashCode();
      hash ^= playingRoomList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLeagueid) {
        output.WriteRawTag(8);
        output.WriteInt32(Leagueid);
      }
      info_.WriteTo(output, _repeated_info_codec);
      if (HasClubid) {
        output.WriteRawTag(26);
        output.WriteString(Clubid);
      }
      if (HasCode) {
        output.WriteRawTag(32);
        output.WriteInt32(Code);
      }
      if (filter_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Filter);
      }
      if (HasRoomNum) {
        output.WriteRawTag(48);
        output.WriteInt32(RoomNum);
      }
      if (HasStartIndex) {
        output.WriteRawTag(56);
        output.WriteInt32(StartIndex);
      }
      if (HasIsUsingFilter) {
        output.WriteRawTag(64);
        output.WriteBool(IsUsingFilter);
      }
      if (HasCoolDown) {
        output.WriteRawTag(72);
        output.WriteInt32(CoolDown);
      }
      playingRoomList_.WriteTo(output, _repeated_playingRoomList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLeagueid) {
        output.WriteRawTag(8);
        output.WriteInt32(Leagueid);
      }
      info_.WriteTo(ref output, _repeated_info_codec);
      if (HasClubid) {
        output.WriteRawTag(26);
        output.WriteString(Clubid);
      }
      if (HasCode) {
        output.WriteRawTag(32);
        output.WriteInt32(Code);
      }
      if (filter_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Filter);
      }
      if (HasRoomNum) {
        output.WriteRawTag(48);
        output.WriteInt32(RoomNum);
      }
      if (HasStartIndex) {
        output.WriteRawTag(56);
        output.WriteInt32(StartIndex);
      }
      if (HasIsUsingFilter) {
        output.WriteRawTag(64);
        output.WriteBool(IsUsingFilter);
      }
      if (HasCoolDown) {
        output.WriteRawTag(72);
        output.WriteInt32(CoolDown);
      }
      playingRoomList_.WriteTo(ref output, _repeated_playingRoomList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      size += info_.CalculateSize(_repeated_info_codec);
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (HasRoomNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomNum);
      }
      if (HasStartIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (HasIsUsingFilter) {
        size += 1 + 1;
      }
      if (HasCoolDown) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CoolDown);
      }
      size += playingRoomList_.CalculateSize(_repeated_playingRoomList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubRoomRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      info_.Add(other.info_);
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.filter_ != null) {
        if (filter_ == null) {
          Filter = new global::Texas.Protocol.ClubRoomFilter();
        }
        Filter.MergeFrom(other.Filter);
      }
      if (other.HasRoomNum) {
        RoomNum = other.RoomNum;
      }
      if (other.HasStartIndex) {
        StartIndex = other.StartIndex;
      }
      if (other.HasIsUsingFilter) {
        IsUsingFilter = other.IsUsingFilter;
      }
      if (other.HasCoolDown) {
        CoolDown = other.CoolDown;
      }
      playingRoomList_.Add(other.playingRoomList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 18: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
          case 26: {
            Clubid = input.ReadString();
            break;
          }
          case 32: {
            Code = input.ReadInt32();
            break;
          }
          case 42: {
            if (filter_ == null) {
              Filter = new global::Texas.Protocol.ClubRoomFilter();
            }
            input.ReadMessage(Filter);
            break;
          }
          case 48: {
            RoomNum = input.ReadInt32();
            break;
          }
          case 56: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 64: {
            IsUsingFilter = input.ReadBool();
            break;
          }
          case 72: {
            CoolDown = input.ReadInt32();
            break;
          }
          case 82: {
            playingRoomList_.AddEntriesFrom(input, _repeated_playingRoomList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 18: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
          case 26: {
            Clubid = input.ReadString();
            break;
          }
          case 32: {
            Code = input.ReadInt32();
            break;
          }
          case 42: {
            if (filter_ == null) {
              Filter = new global::Texas.Protocol.ClubRoomFilter();
            }
            input.ReadMessage(Filter);
            break;
          }
          case 48: {
            RoomNum = input.ReadInt32();
            break;
          }
          case 56: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 64: {
            IsUsingFilter = input.ReadBool();
            break;
          }
          case 72: {
            CoolDown = input.ReadInt32();
            break;
          }
          case 82: {
            playingRoomList_.AddEntriesFrom(ref input, _repeated_playingRoomList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubSatelliteRoomListREQ : pb::IMessage<ClubSatelliteRoomListREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubSatelliteRoomListREQ> _parser = new pb::MessageParser<ClubSatelliteRoomListREQ>(() => new ClubSatelliteRoomListREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubSatelliteRoomListREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubSatelliteRoomListREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubSatelliteRoomListREQ(ClubSatelliteRoomListREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      roomType_ = other.roomType_;
      rewardPrice_ = other.rewardPrice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubSatelliteRoomListREQ Clone() {
      return new ClubSatelliteRoomListREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 2;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 1) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "room_type" field.</summary>
    public const int RoomTypeFieldNumber = 3;
    private readonly static int RoomTypeDefaultValue = 0;

    private int roomType_;
    /// <summary>
    ///NLH or PLO
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoomType {
      get { if ((_hasBits0 & 2) != 0) { return roomType_; } else { return RoomTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        roomType_ = value;
      }
    }
    /// <summary>Gets whether the "room_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "room_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "reward_price" field.</summary>
    public const int RewardPriceFieldNumber = 4;
    private readonly static long RewardPriceDefaultValue = 0L;

    private long rewardPrice_;
    /// <summary>
    ///符合的獎勵價值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RewardPrice {
      get { if ((_hasBits0 & 4) != 0) { return rewardPrice_; } else { return RewardPriceDefaultValue; } }
      set {
        _hasBits0 |= 4;
        rewardPrice_ = value;
      }
    }
    /// <summary>Gets whether the "reward_price" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRewardPrice {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "reward_price" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRewardPrice() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubSatelliteRoomListREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubSatelliteRoomListREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (RoomType != other.RoomType) return false;
      if (RewardPrice != other.RewardPrice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasRoomType) hash ^= RoomType.GetHashCode();
      if (HasRewardPrice) hash ^= RewardPrice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasRoomType) {
        output.WriteRawTag(24);
        output.WriteInt32(RoomType);
      }
      if (HasRewardPrice) {
        output.WriteRawTag(32);
        output.WriteInt64(RewardPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasRoomType) {
        output.WriteRawTag(24);
        output.WriteInt32(RoomType);
      }
      if (HasRewardPrice) {
        output.WriteRawTag(32);
        output.WriteInt64(RewardPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasRoomType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomType);
      }
      if (HasRewardPrice) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RewardPrice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubSatelliteRoomListREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasRoomType) {
        RoomType = other.RoomType;
      }
      if (other.HasRewardPrice) {
        RewardPrice = other.RewardPrice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            RoomType = input.ReadInt32();
            break;
          }
          case 32: {
            RewardPrice = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            RoomType = input.ReadInt32();
            break;
          }
          case 32: {
            RewardPrice = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubSatelliteRoomListRSP : pb::IMessage<ClubSatelliteRoomListRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubSatelliteRoomListRSP> _parser = new pb::MessageParser<ClubSatelliteRoomListRSP>(() => new ClubSatelliteRoomListRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubSatelliteRoomListRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubSatelliteRoomListRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubSatelliteRoomListRSP(ClubSatelliteRoomListRSP other) : this() {
      _hasBits0 = other._hasBits0;
      rewardPrice_ = other.rewardPrice_;
      info_ = other.info_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubSatelliteRoomListRSP Clone() {
      return new ClubSatelliteRoomListRSP(this);
    }

    /// <summary>Field number for the "reward_price" field.</summary>
    public const int RewardPriceFieldNumber = 1;
    private readonly static long RewardPriceDefaultValue = 0L;

    private long rewardPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RewardPrice {
      get { if ((_hasBits0 & 1) != 0) { return rewardPrice_; } else { return RewardPriceDefaultValue; } }
      set {
        _hasBits0 |= 1;
        rewardPrice_ = value;
      }
    }
    /// <summary>Gets whether the "reward_price" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRewardPrice {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "reward_price" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRewardPrice() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ClubRoomInfo> _repeated_info_codec
        = pb::FieldCodec.ForMessage(18, global::Texas.Protocol.ClubRoomInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ClubRoomInfo> info_ = new pbc::RepeatedField<global::Texas.Protocol.ClubRoomInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ClubRoomInfo> Info {
      get { return info_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubSatelliteRoomListRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubSatelliteRoomListRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RewardPrice != other.RewardPrice) return false;
      if(!info_.Equals(other.info_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRewardPrice) hash ^= RewardPrice.GetHashCode();
      hash ^= info_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRewardPrice) {
        output.WriteRawTag(8);
        output.WriteInt64(RewardPrice);
      }
      info_.WriteTo(output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRewardPrice) {
        output.WriteRawTag(8);
        output.WriteInt64(RewardPrice);
      }
      info_.WriteTo(ref output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRewardPrice) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RewardPrice);
      }
      size += info_.CalculateSize(_repeated_info_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubSatelliteRoomListRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasRewardPrice) {
        RewardPrice = other.RewardPrice;
      }
      info_.Add(other.info_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RewardPrice = input.ReadInt64();
            break;
          }
          case 18: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RewardPrice = input.ReadInt64();
            break;
          }
          case 18: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubRoomNumREQ : pb::IMessage<ClubRoomNumREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubRoomNumREQ> _parser = new pb::MessageParser<ClubRoomNumREQ>(() => new ClubRoomNumREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubRoomNumREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubRoomNumREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubRoomNumREQ(ClubRoomNumREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      filter_ = other.filter_ != null ? other.filter_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubRoomNumREQ Clone() {
      return new ClubRoomNumREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 2;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 1) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 3;
    private global::Texas.Protocol.ClubRoomFilter filter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.ClubRoomFilter Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubRoomNumREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubRoomNumREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (!object.Equals(Filter, other.Filter)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (filter_ != null) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (filter_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (filter_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubRoomNumREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.filter_ != null) {
        if (filter_ == null) {
          Filter = new global::Texas.Protocol.ClubRoomFilter();
        }
        Filter.MergeFrom(other.Filter);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 26: {
            if (filter_ == null) {
              Filter = new global::Texas.Protocol.ClubRoomFilter();
            }
            input.ReadMessage(Filter);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 26: {
            if (filter_ == null) {
              Filter = new global::Texas.Protocol.ClubRoomFilter();
            }
            input.ReadMessage(Filter);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubRoomNumRSP : pb::IMessage<ClubRoomNumRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubRoomNumRSP> _parser = new pb::MessageParser<ClubRoomNumRSP>(() => new ClubRoomNumRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubRoomNumRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubRoomNumRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubRoomNumRSP(ClubRoomNumRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      leagueid_ = other.leagueid_;
      clubid_ = other.clubid_;
      filter_ = other.filter_ != null ? other.filter_.Clone() : null;
      filterRoomNum_ = other.filterRoomNum_;
      totalRoomNum_ = other.totalRoomNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubRoomNumRSP Clone() {
      return new ClubRoomNumRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0 成功    -1 不在俱乐部里
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 2;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 2) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 3;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private global::Texas.Protocol.ClubRoomFilter filter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.ClubRoomFilter Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    /// <summary>Field number for the "filter_room_num" field.</summary>
    public const int FilterRoomNumFieldNumber = 5;
    private readonly static int FilterRoomNumDefaultValue = 0;

    private int filterRoomNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FilterRoomNum {
      get { if ((_hasBits0 & 4) != 0) { return filterRoomNum_; } else { return FilterRoomNumDefaultValue; } }
      set {
        _hasBits0 |= 4;
        filterRoomNum_ = value;
      }
    }
    /// <summary>Gets whether the "filter_room_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFilterRoomNum {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "filter_room_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFilterRoomNum() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "total_room_num" field.</summary>
    public const int TotalRoomNumFieldNumber = 6;
    private readonly static int TotalRoomNumDefaultValue = 0;

    private int totalRoomNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalRoomNum {
      get { if ((_hasBits0 & 8) != 0) { return totalRoomNum_; } else { return TotalRoomNumDefaultValue; } }
      set {
        _hasBits0 |= 8;
        totalRoomNum_ = value;
      }
    }
    /// <summary>Gets whether the "total_room_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalRoomNum {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "total_room_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalRoomNum() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubRoomNumRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubRoomNumRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Leagueid != other.Leagueid) return false;
      if (Clubid != other.Clubid) return false;
      if (!object.Equals(Filter, other.Filter)) return false;
      if (FilterRoomNum != other.FilterRoomNum) return false;
      if (TotalRoomNum != other.TotalRoomNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (filter_ != null) hash ^= Filter.GetHashCode();
      if (HasFilterRoomNum) hash ^= FilterRoomNum.GetHashCode();
      if (HasTotalRoomNum) hash ^= TotalRoomNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasClubid) {
        output.WriteRawTag(26);
        output.WriteString(Clubid);
      }
      if (filter_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Filter);
      }
      if (HasFilterRoomNum) {
        output.WriteRawTag(40);
        output.WriteInt32(FilterRoomNum);
      }
      if (HasTotalRoomNum) {
        output.WriteRawTag(48);
        output.WriteInt32(TotalRoomNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasClubid) {
        output.WriteRawTag(26);
        output.WriteString(Clubid);
      }
      if (filter_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Filter);
      }
      if (HasFilterRoomNum) {
        output.WriteRawTag(40);
        output.WriteInt32(FilterRoomNum);
      }
      if (HasTotalRoomNum) {
        output.WriteRawTag(48);
        output.WriteInt32(TotalRoomNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (HasFilterRoomNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FilterRoomNum);
      }
      if (HasTotalRoomNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalRoomNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubRoomNumRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.filter_ != null) {
        if (filter_ == null) {
          Filter = new global::Texas.Protocol.ClubRoomFilter();
        }
        Filter.MergeFrom(other.Filter);
      }
      if (other.HasFilterRoomNum) {
        FilterRoomNum = other.FilterRoomNum;
      }
      if (other.HasTotalRoomNum) {
        TotalRoomNum = other.TotalRoomNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 26: {
            Clubid = input.ReadString();
            break;
          }
          case 34: {
            if (filter_ == null) {
              Filter = new global::Texas.Protocol.ClubRoomFilter();
            }
            input.ReadMessage(Filter);
            break;
          }
          case 40: {
            FilterRoomNum = input.ReadInt32();
            break;
          }
          case 48: {
            TotalRoomNum = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 26: {
            Clubid = input.ReadString();
            break;
          }
          case 34: {
            if (filter_ == null) {
              Filter = new global::Texas.Protocol.ClubRoomFilter();
            }
            input.ReadMessage(Filter);
            break;
          }
          case 40: {
            FilterRoomNum = input.ReadInt32();
            break;
          }
          case 48: {
            TotalRoomNum = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubMemberDetailREQ : pb::IMessage<ClubMemberDetailREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubMemberDetailREQ> _parser = new pb::MessageParser<ClubMemberDetailREQ>(() => new ClubMemberDetailREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubMemberDetailREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubMemberDetailREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubMemberDetailREQ(ClubMemberDetailREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      uid_ = other.uid_;
      startTs_ = other.startTs_;
      endTs_ = other.endTs_;
      agentUid_ = other.agentUid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubMemberDetailREQ Clone() {
      return new ClubMemberDetailREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 2;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 1) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 3;
    private readonly static string UidDefaultValue = "";

    private string uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_ ?? UidDefaultValue; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return uid_ != null; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      uid_ = null;
    }

    /// <summary>Field number for the "start_ts" field.</summary>
    public const int StartTsFieldNumber = 4;
    private readonly static long StartTsDefaultValue = 0L;

    private long startTs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartTs {
      get { if ((_hasBits0 & 2) != 0) { return startTs_; } else { return StartTsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        startTs_ = value;
      }
    }
    /// <summary>Gets whether the "start_ts" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartTs {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "start_ts" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartTs() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "end_ts" field.</summary>
    public const int EndTsFieldNumber = 5;
    private readonly static long EndTsDefaultValue = 0L;

    private long endTs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndTs {
      get { if ((_hasBits0 & 4) != 0) { return endTs_; } else { return EndTsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        endTs_ = value;
      }
    }
    /// <summary>Gets whether the "end_ts" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndTs {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "end_ts" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndTs() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "agent_uid" field.</summary>
    public const int AgentUidFieldNumber = 6;
    private readonly static long AgentUidDefaultValue = 0L;

    private long agentUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AgentUid {
      get { if ((_hasBits0 & 8) != 0) { return agentUid_; } else { return AgentUidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        agentUid_ = value;
      }
    }
    /// <summary>Gets whether the "agent_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgentUid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "agent_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgentUid() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubMemberDetailREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubMemberDetailREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (Uid != other.Uid) return false;
      if (StartTs != other.StartTs) return false;
      if (EndTs != other.EndTs) return false;
      if (AgentUid != other.AgentUid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasStartTs) hash ^= StartTs.GetHashCode();
      if (HasEndTs) hash ^= EndTs.GetHashCode();
      if (HasAgentUid) hash ^= AgentUid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasUid) {
        output.WriteRawTag(26);
        output.WriteString(Uid);
      }
      if (HasStartTs) {
        output.WriteRawTag(32);
        output.WriteInt64(StartTs);
      }
      if (HasEndTs) {
        output.WriteRawTag(40);
        output.WriteInt64(EndTs);
      }
      if (HasAgentUid) {
        output.WriteRawTag(48);
        output.WriteInt64(AgentUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasUid) {
        output.WriteRawTag(26);
        output.WriteString(Uid);
      }
      if (HasStartTs) {
        output.WriteRawTag(32);
        output.WriteInt64(StartTs);
      }
      if (HasEndTs) {
        output.WriteRawTag(40);
        output.WriteInt64(EndTs);
      }
      if (HasAgentUid) {
        output.WriteRawTag(48);
        output.WriteInt64(AgentUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (HasStartTs) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTs);
      }
      if (HasEndTs) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTs);
      }
      if (HasAgentUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AgentUid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubMemberDetailREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasStartTs) {
        StartTs = other.StartTs;
      }
      if (other.HasEndTs) {
        EndTs = other.EndTs;
      }
      if (other.HasAgentUid) {
        AgentUid = other.AgentUid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 26: {
            Uid = input.ReadString();
            break;
          }
          case 32: {
            StartTs = input.ReadInt64();
            break;
          }
          case 40: {
            EndTs = input.ReadInt64();
            break;
          }
          case 48: {
            AgentUid = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 26: {
            Uid = input.ReadString();
            break;
          }
          case 32: {
            StartTs = input.ReadInt64();
            break;
          }
          case 40: {
            EndTs = input.ReadInt64();
            break;
          }
          case 48: {
            AgentUid = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubMemberDetailRSP : pb::IMessage<ClubMemberDetailRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubMemberDetailRSP> _parser = new pb::MessageParser<ClubMemberDetailRSP>(() => new ClubMemberDetailRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubMemberDetailRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubMemberDetailRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubMemberDetailRSP(ClubMemberDetailRSP other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      uid_ = other.uid_;
      totalProfit_ = other.totalProfit_;
      handsCnt_ = other.handsCnt_;
      bbProfit_ = other.bbProfit_;
      mttProfit_ = other.mttProfit_;
      ofcProfit_ = other.ofcProfit_;
      fee_ = other.fee_;
      agentUid_ = other.agentUid_;
      startTs_ = other.startTs_;
      endTs_ = other.endTs_;
      spinupBuyin_ = other.spinupBuyin_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubMemberDetailRSP Clone() {
      return new ClubMemberDetailRSP(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 2;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 1) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 3;
    private readonly static string UidDefaultValue = "";

    private string uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_ ?? UidDefaultValue; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return uid_ != null; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      uid_ = null;
    }

    /// <summary>Field number for the "total_profit" field.</summary>
    public const int TotalProfitFieldNumber = 4;
    private readonly static long TotalProfitDefaultValue = 0L;

    private long totalProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalProfit {
      get { if ((_hasBits0 & 2) != 0) { return totalProfit_; } else { return TotalProfitDefaultValue; } }
      set {
        _hasBits0 |= 2;
        totalProfit_ = value;
      }
    }
    /// <summary>Gets whether the "total_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalProfit {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "total_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalProfit() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "hands_cnt" field.</summary>
    public const int HandsCntFieldNumber = 5;
    private readonly static long HandsCntDefaultValue = 0L;

    private long handsCnt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long HandsCnt {
      get { if ((_hasBits0 & 4) != 0) { return handsCnt_; } else { return HandsCntDefaultValue; } }
      set {
        _hasBits0 |= 4;
        handsCnt_ = value;
      }
    }
    /// <summary>Gets whether the "hands_cnt" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHandsCnt {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "hands_cnt" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHandsCnt() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "bb_profit" field.</summary>
    public const int BbProfitFieldNumber = 7;
    private readonly static long BbProfitDefaultValue = 0L;

    private long bbProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BbProfit {
      get { if ((_hasBits0 & 8) != 0) { return bbProfit_; } else { return BbProfitDefaultValue; } }
      set {
        _hasBits0 |= 8;
        bbProfit_ = value;
      }
    }
    /// <summary>Gets whether the "bb_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBbProfit {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "bb_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBbProfit() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "mtt_profit" field.</summary>
    public const int MttProfitFieldNumber = 8;
    private readonly static long MttProfitDefaultValue = 0L;

    private long mttProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MttProfit {
      get { if ((_hasBits0 & 16) != 0) { return mttProfit_; } else { return MttProfitDefaultValue; } }
      set {
        _hasBits0 |= 16;
        mttProfit_ = value;
      }
    }
    /// <summary>Gets whether the "mtt_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMttProfit {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "mtt_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMttProfit() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "ofc_profit" field.</summary>
    public const int OfcProfitFieldNumber = 9;
    private readonly static long OfcProfitDefaultValue = 0L;

    private long ofcProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long OfcProfit {
      get { if ((_hasBits0 & 32) != 0) { return ofcProfit_; } else { return OfcProfitDefaultValue; } }
      set {
        _hasBits0 |= 32;
        ofcProfit_ = value;
      }
    }
    /// <summary>Gets whether the "ofc_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOfcProfit {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "ofc_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOfcProfit() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "fee" field.</summary>
    public const int FeeFieldNumber = 10;
    private readonly static long FeeDefaultValue = 0L;

    private long fee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Fee {
      get { if ((_hasBits0 & 64) != 0) { return fee_; } else { return FeeDefaultValue; } }
      set {
        _hasBits0 |= 64;
        fee_ = value;
      }
    }
    /// <summary>Gets whether the "fee" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFee {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "fee" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFee() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "agent_uid" field.</summary>
    public const int AgentUidFieldNumber = 11;
    private readonly static long AgentUidDefaultValue = 0L;

    private long agentUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AgentUid {
      get { if ((_hasBits0 & 128) != 0) { return agentUid_; } else { return AgentUidDefaultValue; } }
      set {
        _hasBits0 |= 128;
        agentUid_ = value;
      }
    }
    /// <summary>Gets whether the "agent_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgentUid {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "agent_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgentUid() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "start_ts" field.</summary>
    public const int StartTsFieldNumber = 12;
    private readonly static long StartTsDefaultValue = 0L;

    private long startTs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartTs {
      get { if ((_hasBits0 & 256) != 0) { return startTs_; } else { return StartTsDefaultValue; } }
      set {
        _hasBits0 |= 256;
        startTs_ = value;
      }
    }
    /// <summary>Gets whether the "start_ts" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartTs {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "start_ts" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartTs() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "end_ts" field.</summary>
    public const int EndTsFieldNumber = 13;
    private readonly static long EndTsDefaultValue = 0L;

    private long endTs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndTs {
      get { if ((_hasBits0 & 512) != 0) { return endTs_; } else { return EndTsDefaultValue; } }
      set {
        _hasBits0 |= 512;
        endTs_ = value;
      }
    }
    /// <summary>Gets whether the "end_ts" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndTs {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "end_ts" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndTs() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "spinup_buyin" field.</summary>
    public const int SpinupBuyinFieldNumber = 14;
    private readonly static long SpinupBuyinDefaultValue = 0L;

    private long spinupBuyin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SpinupBuyin {
      get { if ((_hasBits0 & 1024) != 0) { return spinupBuyin_; } else { return SpinupBuyinDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        spinupBuyin_ = value;
      }
    }
    /// <summary>Gets whether the "spinup_buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpinupBuyin {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "spinup_buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpinupBuyin() {
      _hasBits0 &= ~1024;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubMemberDetailRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubMemberDetailRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (Uid != other.Uid) return false;
      if (TotalProfit != other.TotalProfit) return false;
      if (HandsCnt != other.HandsCnt) return false;
      if (BbProfit != other.BbProfit) return false;
      if (MttProfit != other.MttProfit) return false;
      if (OfcProfit != other.OfcProfit) return false;
      if (Fee != other.Fee) return false;
      if (AgentUid != other.AgentUid) return false;
      if (StartTs != other.StartTs) return false;
      if (EndTs != other.EndTs) return false;
      if (SpinupBuyin != other.SpinupBuyin) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasTotalProfit) hash ^= TotalProfit.GetHashCode();
      if (HasHandsCnt) hash ^= HandsCnt.GetHashCode();
      if (HasBbProfit) hash ^= BbProfit.GetHashCode();
      if (HasMttProfit) hash ^= MttProfit.GetHashCode();
      if (HasOfcProfit) hash ^= OfcProfit.GetHashCode();
      if (HasFee) hash ^= Fee.GetHashCode();
      if (HasAgentUid) hash ^= AgentUid.GetHashCode();
      if (HasStartTs) hash ^= StartTs.GetHashCode();
      if (HasEndTs) hash ^= EndTs.GetHashCode();
      if (HasSpinupBuyin) hash ^= SpinupBuyin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasUid) {
        output.WriteRawTag(26);
        output.WriteString(Uid);
      }
      if (HasTotalProfit) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalProfit);
      }
      if (HasHandsCnt) {
        output.WriteRawTag(40);
        output.WriteInt64(HandsCnt);
      }
      if (HasBbProfit) {
        output.WriteRawTag(56);
        output.WriteInt64(BbProfit);
      }
      if (HasMttProfit) {
        output.WriteRawTag(64);
        output.WriteInt64(MttProfit);
      }
      if (HasOfcProfit) {
        output.WriteRawTag(72);
        output.WriteInt64(OfcProfit);
      }
      if (HasFee) {
        output.WriteRawTag(80);
        output.WriteInt64(Fee);
      }
      if (HasAgentUid) {
        output.WriteRawTag(88);
        output.WriteInt64(AgentUid);
      }
      if (HasStartTs) {
        output.WriteRawTag(96);
        output.WriteInt64(StartTs);
      }
      if (HasEndTs) {
        output.WriteRawTag(104);
        output.WriteInt64(EndTs);
      }
      if (HasSpinupBuyin) {
        output.WriteRawTag(112);
        output.WriteInt64(SpinupBuyin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasUid) {
        output.WriteRawTag(26);
        output.WriteString(Uid);
      }
      if (HasTotalProfit) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalProfit);
      }
      if (HasHandsCnt) {
        output.WriteRawTag(40);
        output.WriteInt64(HandsCnt);
      }
      if (HasBbProfit) {
        output.WriteRawTag(56);
        output.WriteInt64(BbProfit);
      }
      if (HasMttProfit) {
        output.WriteRawTag(64);
        output.WriteInt64(MttProfit);
      }
      if (HasOfcProfit) {
        output.WriteRawTag(72);
        output.WriteInt64(OfcProfit);
      }
      if (HasFee) {
        output.WriteRawTag(80);
        output.WriteInt64(Fee);
      }
      if (HasAgentUid) {
        output.WriteRawTag(88);
        output.WriteInt64(AgentUid);
      }
      if (HasStartTs) {
        output.WriteRawTag(96);
        output.WriteInt64(StartTs);
      }
      if (HasEndTs) {
        output.WriteRawTag(104);
        output.WriteInt64(EndTs);
      }
      if (HasSpinupBuyin) {
        output.WriteRawTag(112);
        output.WriteInt64(SpinupBuyin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (HasTotalProfit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalProfit);
      }
      if (HasHandsCnt) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HandsCnt);
      }
      if (HasBbProfit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BbProfit);
      }
      if (HasMttProfit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MttProfit);
      }
      if (HasOfcProfit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OfcProfit);
      }
      if (HasFee) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Fee);
      }
      if (HasAgentUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AgentUid);
      }
      if (HasStartTs) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTs);
      }
      if (HasEndTs) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTs);
      }
      if (HasSpinupBuyin) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SpinupBuyin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubMemberDetailRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasTotalProfit) {
        TotalProfit = other.TotalProfit;
      }
      if (other.HasHandsCnt) {
        HandsCnt = other.HandsCnt;
      }
      if (other.HasBbProfit) {
        BbProfit = other.BbProfit;
      }
      if (other.HasMttProfit) {
        MttProfit = other.MttProfit;
      }
      if (other.HasOfcProfit) {
        OfcProfit = other.OfcProfit;
      }
      if (other.HasFee) {
        Fee = other.Fee;
      }
      if (other.HasAgentUid) {
        AgentUid = other.AgentUid;
      }
      if (other.HasStartTs) {
        StartTs = other.StartTs;
      }
      if (other.HasEndTs) {
        EndTs = other.EndTs;
      }
      if (other.HasSpinupBuyin) {
        SpinupBuyin = other.SpinupBuyin;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 26: {
            Uid = input.ReadString();
            break;
          }
          case 32: {
            TotalProfit = input.ReadInt64();
            break;
          }
          case 40: {
            HandsCnt = input.ReadInt64();
            break;
          }
          case 56: {
            BbProfit = input.ReadInt64();
            break;
          }
          case 64: {
            MttProfit = input.ReadInt64();
            break;
          }
          case 72: {
            OfcProfit = input.ReadInt64();
            break;
          }
          case 80: {
            Fee = input.ReadInt64();
            break;
          }
          case 88: {
            AgentUid = input.ReadInt64();
            break;
          }
          case 96: {
            StartTs = input.ReadInt64();
            break;
          }
          case 104: {
            EndTs = input.ReadInt64();
            break;
          }
          case 112: {
            SpinupBuyin = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 26: {
            Uid = input.ReadString();
            break;
          }
          case 32: {
            TotalProfit = input.ReadInt64();
            break;
          }
          case 40: {
            HandsCnt = input.ReadInt64();
            break;
          }
          case 56: {
            BbProfit = input.ReadInt64();
            break;
          }
          case 64: {
            MttProfit = input.ReadInt64();
            break;
          }
          case 72: {
            OfcProfit = input.ReadInt64();
            break;
          }
          case 80: {
            Fee = input.ReadInt64();
            break;
          }
          case 88: {
            AgentUid = input.ReadInt64();
            break;
          }
          case 96: {
            StartTs = input.ReadInt64();
            break;
          }
          case 104: {
            EndTs = input.ReadInt64();
            break;
          }
          case 112: {
            SpinupBuyin = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubBriefInfoREQ : pb::IMessage<ClubBriefInfoREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubBriefInfoREQ> _parser = new pb::MessageParser<ClubBriefInfoREQ>(() => new ClubBriefInfoREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubBriefInfoREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubBriefInfoREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubBriefInfoREQ(ClubBriefInfoREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      agentUid_ = other.agentUid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubBriefInfoREQ Clone() {
      return new ClubBriefInfoREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "agent_uid" field.</summary>
    public const int AgentUidFieldNumber = 2;
    private readonly static long AgentUidDefaultValue = 0L;

    private long agentUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AgentUid {
      get { if ((_hasBits0 & 1) != 0) { return agentUid_; } else { return AgentUidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        agentUid_ = value;
      }
    }
    /// <summary>Gets whether the "agent_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgentUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "agent_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgentUid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubBriefInfoREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubBriefInfoREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (AgentUid != other.AgentUid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasAgentUid) hash ^= AgentUid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasAgentUid) {
        output.WriteRawTag(16);
        output.WriteInt64(AgentUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasAgentUid) {
        output.WriteRawTag(16);
        output.WriteInt64(AgentUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasAgentUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AgentUid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubBriefInfoREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasAgentUid) {
        AgentUid = other.AgentUid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            AgentUid = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            AgentUid = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubBriefInfoRSP : pb::IMessage<ClubBriefInfoRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubBriefInfoRSP> _parser = new pb::MessageParser<ClubBriefInfoRSP>(() => new ClubBriefInfoRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubBriefInfoRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubBriefInfoRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubBriefInfoRSP(ClubBriefInfoRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      info_ = other.info_ != null ? other.info_.Clone() : null;
      agentName_ = other.agentName_;
      agentUid_ = other.agentUid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubBriefInfoRSP Clone() {
      return new ClubBriefInfoRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// -1 club不存在 -2代理不存在
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 2;
    private global::Texas.Protocol.ClubBrief info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.ClubBrief Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    /// <summary>Field number for the "agent_name" field.</summary>
    public const int AgentNameFieldNumber = 3;
    private readonly static string AgentNameDefaultValue = "";

    private string agentName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AgentName {
      get { return agentName_ ?? AgentNameDefaultValue; }
      set {
        agentName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "agent_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgentName {
      get { return agentName_ != null; }
    }
    /// <summary>Clears the value of the "agent_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgentName() {
      agentName_ = null;
    }

    /// <summary>Field number for the "agent_uid" field.</summary>
    public const int AgentUidFieldNumber = 4;
    private readonly static long AgentUidDefaultValue = 0L;

    private long agentUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AgentUid {
      get { if ((_hasBits0 & 2) != 0) { return agentUid_; } else { return AgentUidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        agentUid_ = value;
      }
    }
    /// <summary>Gets whether the "agent_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgentUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "agent_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgentUid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubBriefInfoRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubBriefInfoRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Info, other.Info)) return false;
      if (AgentName != other.AgentName) return false;
      if (AgentUid != other.AgentUid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (info_ != null) hash ^= Info.GetHashCode();
      if (HasAgentName) hash ^= AgentName.GetHashCode();
      if (HasAgentUid) hash ^= AgentUid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (info_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Info);
      }
      if (HasAgentName) {
        output.WriteRawTag(26);
        output.WriteString(AgentName);
      }
      if (HasAgentUid) {
        output.WriteRawTag(32);
        output.WriteInt64(AgentUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (info_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Info);
      }
      if (HasAgentName) {
        output.WriteRawTag(26);
        output.WriteString(AgentName);
      }
      if (HasAgentUid) {
        output.WriteRawTag(32);
        output.WriteInt64(AgentUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (HasAgentName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AgentName);
      }
      if (HasAgentUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AgentUid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubBriefInfoRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Texas.Protocol.ClubBrief();
        }
        Info.MergeFrom(other.Info);
      }
      if (other.HasAgentName) {
        AgentName = other.AgentName;
      }
      if (other.HasAgentUid) {
        AgentUid = other.AgentUid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (info_ == null) {
              Info = new global::Texas.Protocol.ClubBrief();
            }
            input.ReadMessage(Info);
            break;
          }
          case 26: {
            AgentName = input.ReadString();
            break;
          }
          case 32: {
            AgentUid = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (info_ == null) {
              Info = new global::Texas.Protocol.ClubBrief();
            }
            input.ReadMessage(Info);
            break;
          }
          case 26: {
            AgentName = input.ReadString();
            break;
          }
          case 32: {
            AgentUid = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PpchipsStoreLimitREQ : pb::IMessage<PpchipsStoreLimitREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PpchipsStoreLimitREQ> _parser = new pb::MessageParser<PpchipsStoreLimitREQ>(() => new PpchipsStoreLimitREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PpchipsStoreLimitREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PpchipsStoreLimitREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PpchipsStoreLimitREQ(PpchipsStoreLimitREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      fromType_ = other.fromType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PpchipsStoreLimitREQ Clone() {
      return new PpchipsStoreLimitREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 2;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 1) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "from_type" field.</summary>
    public const int FromTypeFieldNumber = 3;
    private readonly static int FromTypeDefaultValue = 0;

    private int fromType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FromType {
      get { if ((_hasBits0 & 2) != 0) { return fromType_; } else { return FromTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        fromType_ = value;
      }
    }
    /// <summary>Gets whether the "from_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFromType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "from_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFromType() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PpchipsStoreLimitREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PpchipsStoreLimitREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (FromType != other.FromType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasFromType) hash ^= FromType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasFromType) {
        output.WriteRawTag(24);
        output.WriteInt32(FromType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasFromType) {
        output.WriteRawTag(24);
        output.WriteInt32(FromType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasFromType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FromType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PpchipsStoreLimitREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasFromType) {
        FromType = other.FromType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            FromType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            FromType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PpchipsStoreLimitRSP : pb::IMessage<PpchipsStoreLimitRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PpchipsStoreLimitRSP> _parser = new pb::MessageParser<PpchipsStoreLimitRSP>(() => new PpchipsStoreLimitRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PpchipsStoreLimitRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PpchipsStoreLimitRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PpchipsStoreLimitRSP(PpchipsStoreLimitRSP other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      fromType_ = other.fromType_;
      needLimit_ = other.needLimit_;
      code_ = other.code_;
      ppchipsUpperLimit_ = other.ppchipsUpperLimit_;
      ppchipsRealTime_ = other.ppchipsRealTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PpchipsStoreLimitRSP Clone() {
      return new PpchipsStoreLimitRSP(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 2;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 1) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "from_type" field.</summary>
    public const int FromTypeFieldNumber = 3;
    private readonly static int FromTypeDefaultValue = 0;

    private int fromType_;
    /// <summary>
    /// 查询类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FromType {
      get { if ((_hasBits0 & 2) != 0) { return fromType_; } else { return FromTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        fromType_ = value;
      }
    }
    /// <summary>Gets whether the "from_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFromType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "from_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFromType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "need_limit" field.</summary>
    public const int NeedLimitFieldNumber = 4;
    private readonly static bool NeedLimitDefaultValue = false;

    private bool needLimit_;
    /// <summary>
    /// 是否具有上限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NeedLimit {
      get { if ((_hasBits0 & 4) != 0) { return needLimit_; } else { return NeedLimitDefaultValue; } }
      set {
        _hasBits0 |= 4;
        needLimit_ = value;
      }
    }
    /// <summary>Gets whether the "need_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNeedLimit {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "need_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNeedLimit() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 5;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// 0:成功 其它:失败
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 8) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "ppchips_upper_limit" field.</summary>
    public const int PpchipsUpperLimitFieldNumber = 6;
    private readonly static long PpchipsUpperLimitDefaultValue = 0L;

    private long ppchipsUpperLimit_;
    /// <summary>
    ///pp币存量上限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PpchipsUpperLimit {
      get { if ((_hasBits0 & 16) != 0) { return ppchipsUpperLimit_; } else { return PpchipsUpperLimitDefaultValue; } }
      set {
        _hasBits0 |= 16;
        ppchipsUpperLimit_ = value;
      }
    }
    /// <summary>Gets whether the "ppchips_upper_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpchipsUpperLimit {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "ppchips_upper_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpchipsUpperLimit() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "ppchips_real_time" field.</summary>
    public const int PpchipsRealTimeFieldNumber = 7;
    private readonly static long PpchipsRealTimeDefaultValue = 0L;

    private long ppchipsRealTime_;
    /// <summary>
    ///pp币实时存量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PpchipsRealTime {
      get { if ((_hasBits0 & 32) != 0) { return ppchipsRealTime_; } else { return PpchipsRealTimeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        ppchipsRealTime_ = value;
      }
    }
    /// <summary>Gets whether the "ppchips_real_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpchipsRealTime {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "ppchips_real_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpchipsRealTime() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PpchipsStoreLimitRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PpchipsStoreLimitRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (FromType != other.FromType) return false;
      if (NeedLimit != other.NeedLimit) return false;
      if (Code != other.Code) return false;
      if (PpchipsUpperLimit != other.PpchipsUpperLimit) return false;
      if (PpchipsRealTime != other.PpchipsRealTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasFromType) hash ^= FromType.GetHashCode();
      if (HasNeedLimit) hash ^= NeedLimit.GetHashCode();
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasPpchipsUpperLimit) hash ^= PpchipsUpperLimit.GetHashCode();
      if (HasPpchipsRealTime) hash ^= PpchipsRealTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasFromType) {
        output.WriteRawTag(24);
        output.WriteInt32(FromType);
      }
      if (HasNeedLimit) {
        output.WriteRawTag(32);
        output.WriteBool(NeedLimit);
      }
      if (HasCode) {
        output.WriteRawTag(40);
        output.WriteInt32(Code);
      }
      if (HasPpchipsUpperLimit) {
        output.WriteRawTag(48);
        output.WriteInt64(PpchipsUpperLimit);
      }
      if (HasPpchipsRealTime) {
        output.WriteRawTag(56);
        output.WriteInt64(PpchipsRealTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasFromType) {
        output.WriteRawTag(24);
        output.WriteInt32(FromType);
      }
      if (HasNeedLimit) {
        output.WriteRawTag(32);
        output.WriteBool(NeedLimit);
      }
      if (HasCode) {
        output.WriteRawTag(40);
        output.WriteInt32(Code);
      }
      if (HasPpchipsUpperLimit) {
        output.WriteRawTag(48);
        output.WriteInt64(PpchipsUpperLimit);
      }
      if (HasPpchipsRealTime) {
        output.WriteRawTag(56);
        output.WriteInt64(PpchipsRealTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasFromType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FromType);
      }
      if (HasNeedLimit) {
        size += 1 + 1;
      }
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasPpchipsUpperLimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PpchipsUpperLimit);
      }
      if (HasPpchipsRealTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PpchipsRealTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PpchipsStoreLimitRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasFromType) {
        FromType = other.FromType;
      }
      if (other.HasNeedLimit) {
        NeedLimit = other.NeedLimit;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasPpchipsUpperLimit) {
        PpchipsUpperLimit = other.PpchipsUpperLimit;
      }
      if (other.HasPpchipsRealTime) {
        PpchipsRealTime = other.PpchipsRealTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            FromType = input.ReadInt32();
            break;
          }
          case 32: {
            NeedLimit = input.ReadBool();
            break;
          }
          case 40: {
            Code = input.ReadInt32();
            break;
          }
          case 48: {
            PpchipsUpperLimit = input.ReadInt64();
            break;
          }
          case 56: {
            PpchipsRealTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            FromType = input.ReadInt32();
            break;
          }
          case 32: {
            NeedLimit = input.ReadBool();
            break;
          }
          case 40: {
            Code = input.ReadInt32();
            break;
          }
          case 48: {
            PpchipsUpperLimit = input.ReadInt64();
            break;
          }
          case 56: {
            PpchipsRealTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LeagueBanClubREQ : pb::IMessage<LeagueBanClubREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LeagueBanClubREQ> _parser = new pb::MessageParser<LeagueBanClubREQ>(() => new LeagueBanClubREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LeagueBanClubREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LeagueBanClubREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LeagueBanClubREQ(LeagueBanClubREQ other) : this() {
      _hasBits0 = other._hasBits0;
      leagueid_ = other.leagueid_;
      clubid_ = other.clubid_;
      opType_ = other.opType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LeagueBanClubREQ Clone() {
      return new LeagueBanClubREQ(this);
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 1;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 1) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 2;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 2) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "op_type" field.</summary>
    public const int OpTypeFieldNumber = 3;
    private readonly static int OpTypeDefaultValue = 0;

    private int opType_;
    /// <summary>
    /// 1 ban 2 disban
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OpType {
      get { if ((_hasBits0 & 4) != 0) { return opType_; } else { return OpTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        opType_ = value;
      }
    }
    /// <summary>Gets whether the "op_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOpType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "op_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOpType() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LeagueBanClubREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LeagueBanClubREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Leagueid != other.Leagueid) return false;
      if (Clubid != other.Clubid) return false;
      if (OpType != other.OpType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasOpType) hash ^= OpType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLeagueid) {
        output.WriteRawTag(8);
        output.WriteInt32(Leagueid);
      }
      if (HasClubid) {
        output.WriteRawTag(16);
        output.WriteInt32(Clubid);
      }
      if (HasOpType) {
        output.WriteRawTag(24);
        output.WriteInt32(OpType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLeagueid) {
        output.WriteRawTag(8);
        output.WriteInt32(Leagueid);
      }
      if (HasClubid) {
        output.WriteRawTag(16);
        output.WriteInt32(Clubid);
      }
      if (HasOpType) {
        output.WriteRawTag(24);
        output.WriteInt32(OpType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasOpType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OpType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LeagueBanClubREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasOpType) {
        OpType = other.OpType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 16: {
            Clubid = input.ReadInt32();
            break;
          }
          case 24: {
            OpType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 16: {
            Clubid = input.ReadInt32();
            break;
          }
          case 24: {
            OpType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LeagueBanClubRSP : pb::IMessage<LeagueBanClubRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LeagueBanClubRSP> _parser = new pb::MessageParser<LeagueBanClubRSP>(() => new LeagueBanClubRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LeagueBanClubRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LeagueBanClubRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LeagueBanClubRSP(LeagueBanClubRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      clubid_ = other.clubid_;
      opType_ = other.opType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LeagueBanClubRSP Clone() {
      return new LeagueBanClubRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0 success -1 failed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 2;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 2) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "op_type" field.</summary>
    public const int OpTypeFieldNumber = 3;
    private readonly static int OpTypeDefaultValue = 0;

    private int opType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OpType {
      get { if ((_hasBits0 & 4) != 0) { return opType_; } else { return OpTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        opType_ = value;
      }
    }
    /// <summary>Gets whether the "op_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOpType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "op_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOpType() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LeagueBanClubRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LeagueBanClubRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Clubid != other.Clubid) return false;
      if (OpType != other.OpType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasOpType) hash ^= OpType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasClubid) {
        output.WriteRawTag(16);
        output.WriteInt32(Clubid);
      }
      if (HasOpType) {
        output.WriteRawTag(24);
        output.WriteInt32(OpType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasClubid) {
        output.WriteRawTag(16);
        output.WriteInt32(Clubid);
      }
      if (HasOpType) {
        output.WriteRawTag(24);
        output.WriteInt32(OpType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasOpType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OpType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LeagueBanClubRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasOpType) {
        OpType = other.OpType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Clubid = input.ReadInt32();
            break;
          }
          case 24: {
            OpType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Clubid = input.ReadInt32();
            break;
          }
          case 24: {
            OpType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PPSRBanLeagueREQ : pb::IMessage<PPSRBanLeagueREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PPSRBanLeagueREQ> _parser = new pb::MessageParser<PPSRBanLeagueREQ>(() => new PPSRBanLeagueREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PPSRBanLeagueREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PPSRBanLeagueREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PPSRBanLeagueREQ(PPSRBanLeagueREQ other) : this() {
      _hasBits0 = other._hasBits0;
      ppsrid_ = other.ppsrid_;
      leaguetype_ = other.leaguetype_;
      leagueid_ = other.leagueid_;
      ban_ = other.ban_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PPSRBanLeagueREQ Clone() {
      return new PPSRBanLeagueREQ(this);
    }

    /// <summary>Field number for the "ppsrid" field.</summary>
    public const int PpsridFieldNumber = 1;
    private readonly static int PpsridDefaultValue = 0;

    private int ppsrid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ppsrid {
      get { if ((_hasBits0 & 1) != 0) { return ppsrid_; } else { return PpsridDefaultValue; } }
      set {
        _hasBits0 |= 1;
        ppsrid_ = value;
      }
    }
    /// <summary>Gets whether the "ppsrid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpsrid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "ppsrid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpsrid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "leaguetype" field.</summary>
    public const int LeaguetypeFieldNumber = 2;
    private readonly static int LeaguetypeDefaultValue = 0;

    private int leaguetype_;
    /// <summary>
    ///0: superleague, 1: league
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leaguetype {
      get { if ((_hasBits0 & 2) != 0) { return leaguetype_; } else { return LeaguetypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        leaguetype_ = value;
      }
    }
    /// <summary>Gets whether the "leaguetype" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeaguetype {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "leaguetype" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeaguetype() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 3;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 4) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "ban" field.</summary>
    public const int BanFieldNumber = 4;
    private readonly static int BanDefaultValue = 0;

    private int ban_;
    /// <summary>
    ///1: ban, 2: unban
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ban {
      get { if ((_hasBits0 & 8) != 0) { return ban_; } else { return BanDefaultValue; } }
      set {
        _hasBits0 |= 8;
        ban_ = value;
      }
    }
    /// <summary>Gets whether the "ban" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBan {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "ban" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBan() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PPSRBanLeagueREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PPSRBanLeagueREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ppsrid != other.Ppsrid) return false;
      if (Leaguetype != other.Leaguetype) return false;
      if (Leagueid != other.Leagueid) return false;
      if (Ban != other.Ban) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPpsrid) hash ^= Ppsrid.GetHashCode();
      if (HasLeaguetype) hash ^= Leaguetype.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasBan) hash ^= Ban.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPpsrid) {
        output.WriteRawTag(8);
        output.WriteInt32(Ppsrid);
      }
      if (HasLeaguetype) {
        output.WriteRawTag(16);
        output.WriteInt32(Leaguetype);
      }
      if (HasLeagueid) {
        output.WriteRawTag(24);
        output.WriteInt32(Leagueid);
      }
      if (HasBan) {
        output.WriteRawTag(32);
        output.WriteInt32(Ban);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPpsrid) {
        output.WriteRawTag(8);
        output.WriteInt32(Ppsrid);
      }
      if (HasLeaguetype) {
        output.WriteRawTag(16);
        output.WriteInt32(Leaguetype);
      }
      if (HasLeagueid) {
        output.WriteRawTag(24);
        output.WriteInt32(Leagueid);
      }
      if (HasBan) {
        output.WriteRawTag(32);
        output.WriteInt32(Ban);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPpsrid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ppsrid);
      }
      if (HasLeaguetype) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leaguetype);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasBan) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ban);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PPSRBanLeagueREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasPpsrid) {
        Ppsrid = other.Ppsrid;
      }
      if (other.HasLeaguetype) {
        Leaguetype = other.Leaguetype;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasBan) {
        Ban = other.Ban;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ppsrid = input.ReadInt32();
            break;
          }
          case 16: {
            Leaguetype = input.ReadInt32();
            break;
          }
          case 24: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 32: {
            Ban = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ppsrid = input.ReadInt32();
            break;
          }
          case 16: {
            Leaguetype = input.ReadInt32();
            break;
          }
          case 24: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 32: {
            Ban = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PPSRBanLeagueRSP : pb::IMessage<PPSRBanLeagueRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PPSRBanLeagueRSP> _parser = new pb::MessageParser<PPSRBanLeagueRSP>(() => new PPSRBanLeagueRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PPSRBanLeagueRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PPSRBanLeagueRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PPSRBanLeagueRSP(PPSRBanLeagueRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PPSRBanLeagueRSP Clone() {
      return new PPSRBanLeagueRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0: succeed, -1: fail
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PPSRBanLeagueRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PPSRBanLeagueRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PPSRBanLeagueRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SuperLeagueBanLeagueREQ : pb::IMessage<SuperLeagueBanLeagueREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SuperLeagueBanLeagueREQ> _parser = new pb::MessageParser<SuperLeagueBanLeagueREQ>(() => new SuperLeagueBanLeagueREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SuperLeagueBanLeagueREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SuperLeagueBanLeagueREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SuperLeagueBanLeagueREQ(SuperLeagueBanLeagueREQ other) : this() {
      _hasBits0 = other._hasBits0;
      superleagueid_ = other.superleagueid_;
      leagueid_ = other.leagueid_;
      ban_ = other.ban_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SuperLeagueBanLeagueREQ Clone() {
      return new SuperLeagueBanLeagueREQ(this);
    }

    /// <summary>Field number for the "superleagueid" field.</summary>
    public const int SuperleagueidFieldNumber = 1;
    private readonly static int SuperleagueidDefaultValue = 0;

    private int superleagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Superleagueid {
      get { if ((_hasBits0 & 1) != 0) { return superleagueid_; } else { return SuperleagueidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        superleagueid_ = value;
      }
    }
    /// <summary>Gets whether the "superleagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperleagueid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "superleagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperleagueid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 2;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 2) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "ban" field.</summary>
    public const int BanFieldNumber = 3;
    private readonly static int BanDefaultValue = 0;

    private int ban_;
    /// <summary>
    ///1: ban, 2: unban
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ban {
      get { if ((_hasBits0 & 4) != 0) { return ban_; } else { return BanDefaultValue; } }
      set {
        _hasBits0 |= 4;
        ban_ = value;
      }
    }
    /// <summary>Gets whether the "ban" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBan {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "ban" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBan() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SuperLeagueBanLeagueREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SuperLeagueBanLeagueREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Superleagueid != other.Superleagueid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (Ban != other.Ban) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSuperleagueid) hash ^= Superleagueid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasBan) hash ^= Ban.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSuperleagueid) {
        output.WriteRawTag(8);
        output.WriteInt32(Superleagueid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasBan) {
        output.WriteRawTag(24);
        output.WriteInt32(Ban);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSuperleagueid) {
        output.WriteRawTag(8);
        output.WriteInt32(Superleagueid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasBan) {
        output.WriteRawTag(24);
        output.WriteInt32(Ban);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSuperleagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Superleagueid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasBan) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ban);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SuperLeagueBanLeagueREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasSuperleagueid) {
        Superleagueid = other.Superleagueid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasBan) {
        Ban = other.Ban;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Superleagueid = input.ReadInt32();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            Ban = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Superleagueid = input.ReadInt32();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            Ban = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SuperLeagueBanLeagueRSP : pb::IMessage<SuperLeagueBanLeagueRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SuperLeagueBanLeagueRSP> _parser = new pb::MessageParser<SuperLeagueBanLeagueRSP>(() => new SuperLeagueBanLeagueRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SuperLeagueBanLeagueRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SuperLeagueBanLeagueRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SuperLeagueBanLeagueRSP(SuperLeagueBanLeagueRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SuperLeagueBanLeagueRSP Clone() {
      return new SuperLeagueBanLeagueRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0: succeed, -1: fail
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SuperLeagueBanLeagueRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SuperLeagueBanLeagueRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SuperLeagueBanLeagueRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// query agent credit ppcoin, not himself ppcoin of club member
  /// </summary>
  public sealed partial class AgentPPCoinREQ : pb::IMessage<AgentPPCoinREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AgentPPCoinREQ> _parser = new pb::MessageParser<AgentPPCoinREQ>(() => new AgentPPCoinREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AgentPPCoinREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AgentPPCoinREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AgentPPCoinREQ(AgentPPCoinREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      agentUid_ = other.agentUid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AgentPPCoinREQ Clone() {
      return new AgentPPCoinREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 2;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 1) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "agent_uid" field.</summary>
    public const int AgentUidFieldNumber = 3;
    private readonly static long AgentUidDefaultValue = 0L;

    private long agentUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AgentUid {
      get { if ((_hasBits0 & 2) != 0) { return agentUid_; } else { return AgentUidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        agentUid_ = value;
      }
    }
    /// <summary>Gets whether the "agent_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgentUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "agent_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgentUid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AgentPPCoinREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AgentPPCoinREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (AgentUid != other.AgentUid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasAgentUid) hash ^= AgentUid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasAgentUid) {
        output.WriteRawTag(24);
        output.WriteInt64(AgentUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasAgentUid) {
        output.WriteRawTag(24);
        output.WriteInt64(AgentUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasAgentUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AgentUid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AgentPPCoinREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasAgentUid) {
        AgentUid = other.AgentUid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            AgentUid = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            AgentUid = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AgentPPCoinRSP : pb::IMessage<AgentPPCoinRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AgentPPCoinRSP> _parser = new pb::MessageParser<AgentPPCoinRSP>(() => new AgentPPCoinRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AgentPPCoinRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AgentPPCoinRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AgentPPCoinRSP(AgentPPCoinRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      agentUid_ = other.agentUid_;
      agentPpcoin_ = other.agentPpcoin_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AgentPPCoinRSP Clone() {
      return new AgentPPCoinRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0 成功 其他 失败
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 2;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 3;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 2) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "agent_uid" field.</summary>
    public const int AgentUidFieldNumber = 4;
    private readonly static long AgentUidDefaultValue = 0L;

    private long agentUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AgentUid {
      get { if ((_hasBits0 & 4) != 0) { return agentUid_; } else { return AgentUidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        agentUid_ = value;
      }
    }
    /// <summary>Gets whether the "agent_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgentUid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "agent_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgentUid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "agent_ppcoin" field.</summary>
    public const int AgentPpcoinFieldNumber = 5;
    private readonly static long AgentPpcoinDefaultValue = 0L;

    private long agentPpcoin_;
    /// <summary>
    /// 代理授信
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AgentPpcoin {
      get { if ((_hasBits0 & 8) != 0) { return agentPpcoin_; } else { return AgentPpcoinDefaultValue; } }
      set {
        _hasBits0 |= 8;
        agentPpcoin_ = value;
      }
    }
    /// <summary>Gets whether the "agent_ppcoin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgentPpcoin {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "agent_ppcoin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgentPpcoin() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AgentPPCoinRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AgentPPCoinRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (AgentUid != other.AgentUid) return false;
      if (AgentPpcoin != other.AgentPpcoin) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasAgentUid) hash ^= AgentUid.GetHashCode();
      if (HasAgentPpcoin) hash ^= AgentPpcoin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(24);
        output.WriteInt32(Leagueid);
      }
      if (HasAgentUid) {
        output.WriteRawTag(32);
        output.WriteInt64(AgentUid);
      }
      if (HasAgentPpcoin) {
        output.WriteRawTag(40);
        output.WriteInt64(AgentPpcoin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(24);
        output.WriteInt32(Leagueid);
      }
      if (HasAgentUid) {
        output.WriteRawTag(32);
        output.WriteInt64(AgentUid);
      }
      if (HasAgentPpcoin) {
        output.WriteRawTag(40);
        output.WriteInt64(AgentPpcoin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasAgentUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AgentUid);
      }
      if (HasAgentPpcoin) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AgentPpcoin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AgentPPCoinRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasAgentUid) {
        AgentUid = other.AgentUid;
      }
      if (other.HasAgentPpcoin) {
        AgentPpcoin = other.AgentPpcoin;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
          case 24: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 32: {
            AgentUid = input.ReadInt64();
            break;
          }
          case 40: {
            AgentPpcoin = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
          case 24: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 32: {
            AgentUid = input.ReadInt64();
            break;
          }
          case 40: {
            AgentPpcoin = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class KickRoomUserREQ : pb::IMessage<KickRoomUserREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KickRoomUserREQ> _parser = new pb::MessageParser<KickRoomUserREQ>(() => new KickRoomUserREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KickRoomUserREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KickRoomUserREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KickRoomUserREQ(KickRoomUserREQ other) : this() {
      roomid_ = other.roomid_;
      uid_ = other.uid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KickRoomUserREQ Clone() {
      return new KickRoomUserREQ(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static string RoomidDefaultValue = "";

    private string roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Roomid {
      get { return roomid_ ?? RoomidDefaultValue; }
      set {
        roomid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return roomid_ != null; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      roomid_ = null;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static string UidDefaultValue = "";

    private string uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_ ?? UidDefaultValue; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return uid_ != null; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      uid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KickRoomUserREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KickRoomUserREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (Uid != other.Uid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(10);
        output.WriteString(Roomid);
      }
      if (HasUid) {
        output.WriteRawTag(18);
        output.WriteString(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(10);
        output.WriteString(Roomid);
      }
      if (HasUid) {
        output.WriteRawTag(18);
        output.WriteString(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Roomid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KickRoomUserREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Roomid = input.ReadString();
            break;
          }
          case 18: {
            Uid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Roomid = input.ReadString();
            break;
          }
          case 18: {
            Uid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class KickRoomUserRSP : pb::IMessage<KickRoomUserRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KickRoomUserRSP> _parser = new pb::MessageParser<KickRoomUserRSP>(() => new KickRoomUserRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KickRoomUserRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KickRoomUserRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KickRoomUserRSP(KickRoomUserRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      flag_ = other.flag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KickRoomUserRSP Clone() {
      return new KickRoomUserRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// 0 success    -1 no table    -2 doing risk    -3 cannot kick manager    -4 no user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "flag" field.</summary>
    public const int FlagFieldNumber = 2;
    private readonly static int FlagDefaultValue = 0;

    private int flag_;
    /// <summary>
    /// 0 马上踢    1 手牌结束后踢
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Flag {
      get { if ((_hasBits0 & 2) != 0) { return flag_; } else { return FlagDefaultValue; } }
      set {
        _hasBits0 |= 2;
        flag_ = value;
      }
    }
    /// <summary>Gets whether the "flag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFlag {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "flag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFlag() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KickRoomUserRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KickRoomUserRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Flag != other.Flag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasFlag) hash ^= Flag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasFlag) {
        output.WriteRawTag(16);
        output.WriteInt32(Flag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasFlag) {
        output.WriteRawTag(16);
        output.WriteInt32(Flag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasFlag) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Flag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KickRoomUserRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasFlag) {
        Flag = other.Flag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Flag = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Flag = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class KickedRoomRSP : pb::IMessage<KickedRoomRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KickedRoomRSP> _parser = new pb::MessageParser<KickedRoomRSP>(() => new KickedRoomRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KickedRoomRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KickedRoomRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KickedRoomRSP(KickedRoomRSP other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      manager_ = other.manager_;
      roomType_ = other.roomType_;
      gameMode_ = other.gameMode_;
      blind_ = other.blind_;
      minBet_ = other.minBet_;
      middleBet_ = other.middleBet_;
      highBet_ = other.highBet_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KickedRoomRSP Clone() {
      return new KickedRoomRSP(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static string RoomidDefaultValue = "";

    private string roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Roomid {
      get { return roomid_ ?? RoomidDefaultValue; }
      set {
        roomid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return roomid_ != null; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      roomid_ = null;
    }

    /// <summary>Field number for the "manager" field.</summary>
    public const int ManagerFieldNumber = 2;
    private readonly static string ManagerDefaultValue = "";

    private string manager_;
    /// <summary>
    /// manager who kick other
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Manager {
      get { return manager_ ?? ManagerDefaultValue; }
      set {
        manager_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "manager" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasManager {
      get { return manager_ != null; }
    }
    /// <summary>Clears the value of the "manager" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearManager() {
      manager_ = null;
    }

    /// <summary>Field number for the "room_type" field.</summary>
    public const int RoomTypeFieldNumber = 3;
    private readonly static global::Texas.Protocol.RoomType RoomTypeDefaultValue = global::Texas.Protocol.RoomType.TestRoom;

    private global::Texas.Protocol.RoomType roomType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomType RoomType {
      get { if ((_hasBits0 & 1) != 0) { return roomType_; } else { return RoomTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomType_ = value;
      }
    }
    /// <summary>Gets whether the "room_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "room_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "game_mode" field.</summary>
    public const int GameModeFieldNumber = 4;
    private readonly static global::Texas.Protocol.GameMode GameModeDefaultValue = global::Texas.Protocol.GameMode.Regular;

    private global::Texas.Protocol.GameMode gameMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.GameMode GameMode {
      get { if ((_hasBits0 & 2) != 0) { return gameMode_; } else { return GameModeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        gameMode_ = value;
      }
    }
    /// <summary>Gets whether the "game_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameMode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "game_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameMode() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "blind" field.</summary>
    public const int BlindFieldNumber = 5;
    private readonly static int BlindDefaultValue = 0;

    private int blind_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Blind {
      get { if ((_hasBits0 & 4) != 0) { return blind_; } else { return BlindDefaultValue; } }
      set {
        _hasBits0 |= 4;
        blind_ = value;
      }
    }
    /// <summary>Gets whether the "blind" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlind {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "blind" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlind() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "min_bet" field.</summary>
    public const int MinBetFieldNumber = 6;
    private readonly static int MinBetDefaultValue = 0;

    private int minBet_;
    /// <summary>
    ///color game 下注選項
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MinBet {
      get { if ((_hasBits0 & 8) != 0) { return minBet_; } else { return MinBetDefaultValue; } }
      set {
        _hasBits0 |= 8;
        minBet_ = value;
      }
    }
    /// <summary>Gets whether the "min_bet" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinBet {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "min_bet" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinBet() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "middle_bet" field.</summary>
    public const int MiddleBetFieldNumber = 7;
    private readonly static int MiddleBetDefaultValue = 0;

    private int middleBet_;
    /// <summary>
    ///color game 下注選項
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MiddleBet {
      get { if ((_hasBits0 & 16) != 0) { return middleBet_; } else { return MiddleBetDefaultValue; } }
      set {
        _hasBits0 |= 16;
        middleBet_ = value;
      }
    }
    /// <summary>Gets whether the "middle_bet" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMiddleBet {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "middle_bet" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMiddleBet() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "high_bet" field.</summary>
    public const int HighBetFieldNumber = 8;
    private readonly static int HighBetDefaultValue = 0;

    private int highBet_;
    /// <summary>
    ///color game 下注選項
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HighBet {
      get { if ((_hasBits0 & 32) != 0) { return highBet_; } else { return HighBetDefaultValue; } }
      set {
        _hasBits0 |= 32;
        highBet_ = value;
      }
    }
    /// <summary>Gets whether the "high_bet" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHighBet {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "high_bet" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHighBet() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KickedRoomRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KickedRoomRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (Manager != other.Manager) return false;
      if (RoomType != other.RoomType) return false;
      if (GameMode != other.GameMode) return false;
      if (Blind != other.Blind) return false;
      if (MinBet != other.MinBet) return false;
      if (MiddleBet != other.MiddleBet) return false;
      if (HighBet != other.HighBet) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasManager) hash ^= Manager.GetHashCode();
      if (HasRoomType) hash ^= RoomType.GetHashCode();
      if (HasGameMode) hash ^= GameMode.GetHashCode();
      if (HasBlind) hash ^= Blind.GetHashCode();
      if (HasMinBet) hash ^= MinBet.GetHashCode();
      if (HasMiddleBet) hash ^= MiddleBet.GetHashCode();
      if (HasHighBet) hash ^= HighBet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(10);
        output.WriteString(Roomid);
      }
      if (HasManager) {
        output.WriteRawTag(18);
        output.WriteString(Manager);
      }
      if (HasRoomType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) RoomType);
      }
      if (HasGameMode) {
        output.WriteRawTag(32);
        output.WriteEnum((int) GameMode);
      }
      if (HasBlind) {
        output.WriteRawTag(40);
        output.WriteInt32(Blind);
      }
      if (HasMinBet) {
        output.WriteRawTag(48);
        output.WriteInt32(MinBet);
      }
      if (HasMiddleBet) {
        output.WriteRawTag(56);
        output.WriteInt32(MiddleBet);
      }
      if (HasHighBet) {
        output.WriteRawTag(64);
        output.WriteInt32(HighBet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(10);
        output.WriteString(Roomid);
      }
      if (HasManager) {
        output.WriteRawTag(18);
        output.WriteString(Manager);
      }
      if (HasRoomType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) RoomType);
      }
      if (HasGameMode) {
        output.WriteRawTag(32);
        output.WriteEnum((int) GameMode);
      }
      if (HasBlind) {
        output.WriteRawTag(40);
        output.WriteInt32(Blind);
      }
      if (HasMinBet) {
        output.WriteRawTag(48);
        output.WriteInt32(MinBet);
      }
      if (HasMiddleBet) {
        output.WriteRawTag(56);
        output.WriteInt32(MiddleBet);
      }
      if (HasHighBet) {
        output.WriteRawTag(64);
        output.WriteInt32(HighBet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Roomid);
      }
      if (HasManager) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Manager);
      }
      if (HasRoomType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomType);
      }
      if (HasGameMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
      }
      if (HasBlind) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Blind);
      }
      if (HasMinBet) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinBet);
      }
      if (HasMiddleBet) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MiddleBet);
      }
      if (HasHighBet) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HighBet);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KickedRoomRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasManager) {
        Manager = other.Manager;
      }
      if (other.HasRoomType) {
        RoomType = other.RoomType;
      }
      if (other.HasGameMode) {
        GameMode = other.GameMode;
      }
      if (other.HasBlind) {
        Blind = other.Blind;
      }
      if (other.HasMinBet) {
        MinBet = other.MinBet;
      }
      if (other.HasMiddleBet) {
        MiddleBet = other.MiddleBet;
      }
      if (other.HasHighBet) {
        HighBet = other.HighBet;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Roomid = input.ReadString();
            break;
          }
          case 18: {
            Manager = input.ReadString();
            break;
          }
          case 24: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 32: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 40: {
            Blind = input.ReadInt32();
            break;
          }
          case 48: {
            MinBet = input.ReadInt32();
            break;
          }
          case 56: {
            MiddleBet = input.ReadInt32();
            break;
          }
          case 64: {
            HighBet = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Roomid = input.ReadString();
            break;
          }
          case 18: {
            Manager = input.ReadString();
            break;
          }
          case 24: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 32: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 40: {
            Blind = input.ReadInt32();
            break;
          }
          case 48: {
            MinBet = input.ReadInt32();
            break;
          }
          case 56: {
            MiddleBet = input.ReadInt32();
            break;
          }
          case 64: {
            HighBet = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AddItemCoinREQ : pb::IMessage<AddItemCoinREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AddItemCoinREQ> _parser = new pb::MessageParser<AddItemCoinREQ>(() => new AddItemCoinREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AddItemCoinREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddItemCoinREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddItemCoinREQ(AddItemCoinREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      uids_ = other.uids_.Clone();
      itemIds_ = other.itemIds_.Clone();
      itemTypes_ = other.itemTypes_.Clone();
      itemValues_ = other.itemValues_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddItemCoinREQ Clone() {
      return new AddItemCoinREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 2;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 1) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uids" field.</summary>
    public const int UidsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_uids_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> uids_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///俱乐部成员uids
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Uids {
      get { return uids_; }
    }

    /// <summary>Field number for the "item_ids" field.</summary>
    public const int ItemIdsFieldNumber = 4;
    private static readonly pb::FieldCodec<long> _repeated_itemIds_codec
        = pb::FieldCodec.ForInt64(34);
    private readonly pbc::RepeatedField<long> itemIds_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///回收物品id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> ItemIds {
      get { return itemIds_; }
    }

    /// <summary>Field number for the "item_types" field.</summary>
    public const int ItemTypesFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_itemTypes_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> itemTypes_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///回收物品类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> ItemTypes {
      get { return itemTypes_; }
    }

    /// <summary>Field number for the "item_values" field.</summary>
    public const int ItemValuesFieldNumber = 6;
    private static readonly pb::FieldCodec<long> _repeated_itemValues_codec
        = pb::FieldCodec.ForInt64(50);
    private readonly pbc::RepeatedField<long> itemValues_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///回收物品价值,正数回收给玩家，负数回收给俱乐部
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> ItemValues {
      get { return itemValues_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AddItemCoinREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AddItemCoinREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if(!uids_.Equals(other.uids_)) return false;
      if(!itemIds_.Equals(other.itemIds_)) return false;
      if(!itemTypes_.Equals(other.itemTypes_)) return false;
      if(!itemValues_.Equals(other.itemValues_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      hash ^= uids_.GetHashCode();
      hash ^= itemIds_.GetHashCode();
      hash ^= itemTypes_.GetHashCode();
      hash ^= itemValues_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      uids_.WriteTo(output, _repeated_uids_codec);
      itemIds_.WriteTo(output, _repeated_itemIds_codec);
      itemTypes_.WriteTo(output, _repeated_itemTypes_codec);
      itemValues_.WriteTo(output, _repeated_itemValues_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      uids_.WriteTo(ref output, _repeated_uids_codec);
      itemIds_.WriteTo(ref output, _repeated_itemIds_codec);
      itemTypes_.WriteTo(ref output, _repeated_itemTypes_codec);
      itemValues_.WriteTo(ref output, _repeated_itemValues_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      size += uids_.CalculateSize(_repeated_uids_codec);
      size += itemIds_.CalculateSize(_repeated_itemIds_codec);
      size += itemTypes_.CalculateSize(_repeated_itemTypes_codec);
      size += itemValues_.CalculateSize(_repeated_itemValues_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AddItemCoinREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      uids_.Add(other.uids_);
      itemIds_.Add(other.itemIds_);
      itemTypes_.Add(other.itemTypes_);
      itemValues_.Add(other.itemValues_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 26: {
            uids_.AddEntriesFrom(input, _repeated_uids_codec);
            break;
          }
          case 34:
          case 32: {
            itemIds_.AddEntriesFrom(input, _repeated_itemIds_codec);
            break;
          }
          case 42:
          case 40: {
            itemTypes_.AddEntriesFrom(input, _repeated_itemTypes_codec);
            break;
          }
          case 50:
          case 48: {
            itemValues_.AddEntriesFrom(input, _repeated_itemValues_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 26: {
            uids_.AddEntriesFrom(ref input, _repeated_uids_codec);
            break;
          }
          case 34:
          case 32: {
            itemIds_.AddEntriesFrom(ref input, _repeated_itemIds_codec);
            break;
          }
          case 42:
          case 40: {
            itemTypes_.AddEntriesFrom(ref input, _repeated_itemTypes_codec);
            break;
          }
          case 50:
          case 48: {
            itemValues_.AddEntriesFrom(ref input, _repeated_itemValues_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AddItemCoinRSP : pb::IMessage<AddItemCoinRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AddItemCoinRSP> _parser = new pb::MessageParser<AddItemCoinRSP>(() => new AddItemCoinRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AddItemCoinRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddItemCoinRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddItemCoinRSP(AddItemCoinRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      clubPpcoin_ = other.clubPpcoin_;
      info_ = other.info_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddItemCoinRSP Clone() {
      return new AddItemCoinRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// 0:全部成功, 1:部分成功且返回全部失败id, 2:部分成功且返回部分失败id -1 参数错误 -2 没有权限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 2;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 3;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 2) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "club_ppcoin" field.</summary>
    public const int ClubPpcoinFieldNumber = 4;
    private readonly static int ClubPpcoinDefaultValue = 0;

    private int clubPpcoin_;
    /// <summary>
    ///俱乐部剩余PP币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ClubPpcoin {
      get { if ((_hasBits0 & 4) != 0) { return clubPpcoin_; } else { return ClubPpcoinDefaultValue; } }
      set {
        _hasBits0 |= 4;
        clubPpcoin_ = value;
      }
    }
    /// <summary>Gets whether the "club_ppcoin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubPpcoin {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "club_ppcoin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubPpcoin() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Texas.Protocol.SimpleItemInfo> _repeated_info_codec
        = pb::FieldCodec.ForMessage(42, global::Texas.Protocol.SimpleItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.SimpleItemInfo> info_ = new pbc::RepeatedField<global::Texas.Protocol.SimpleItemInfo>();
    /// <summary>
    ///回收物品的信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.SimpleItemInfo> Info {
      get { return info_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AddItemCoinRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AddItemCoinRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (ClubPpcoin != other.ClubPpcoin) return false;
      if(!info_.Equals(other.info_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasClubPpcoin) hash ^= ClubPpcoin.GetHashCode();
      hash ^= info_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(24);
        output.WriteInt32(Leagueid);
      }
      if (HasClubPpcoin) {
        output.WriteRawTag(32);
        output.WriteInt32(ClubPpcoin);
      }
      info_.WriteTo(output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(24);
        output.WriteInt32(Leagueid);
      }
      if (HasClubPpcoin) {
        output.WriteRawTag(32);
        output.WriteInt32(ClubPpcoin);
      }
      info_.WriteTo(ref output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasClubPpcoin) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClubPpcoin);
      }
      size += info_.CalculateSize(_repeated_info_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AddItemCoinRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasClubPpcoin) {
        ClubPpcoin = other.ClubPpcoin;
      }
      info_.Add(other.info_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
          case 24: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 32: {
            ClubPpcoin = input.ReadInt32();
            break;
          }
          case 42: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
          case 24: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 32: {
            ClubPpcoin = input.ReadInt32();
            break;
          }
          case 42: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubAction : pb::IMessage<ClubAction>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubAction> _parser = new pb::MessageParser<ClubAction>(() => new ClubAction());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAction(ClubAction other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      fromUid_ = other.fromUid_;
      toUid_ = other.toUid_;
      type_ = other.type_;
      actionTime_ = other.actionTime_;
      attach_ = other.attach_;
      leagueid_ = other.leagueid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAction Clone() {
      return new ClubAction(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "from_uid" field.</summary>
    public const int FromUidFieldNumber = 2;
    private readonly static long FromUidDefaultValue = 0L;

    private long fromUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FromUid {
      get { if ((_hasBits0 & 1) != 0) { return fromUid_; } else { return FromUidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        fromUid_ = value;
      }
    }
    /// <summary>Gets whether the "from_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFromUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "from_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFromUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "to_uid" field.</summary>
    public const int ToUidFieldNumber = 3;
    private readonly static long ToUidDefaultValue = 0L;

    private long toUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ToUid {
      get { if ((_hasBits0 & 2) != 0) { return toUid_; } else { return ToUidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        toUid_ = value;
      }
    }
    /// <summary>Gets whether the "to_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasToUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "to_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearToUid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "action_time" field.</summary>
    public const int ActionTimeFieldNumber = 5;
    private readonly static uint ActionTimeDefaultValue = 0;

    private uint actionTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ActionTime {
      get { if ((_hasBits0 & 4) != 0) { return actionTime_; } else { return ActionTimeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        actionTime_ = value;
      }
    }
    /// <summary>Gets whether the "action_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActionTime {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "action_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActionTime() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "attach" field.</summary>
    public const int AttachFieldNumber = 6;
    private readonly static string AttachDefaultValue = "";

    private string attach_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Attach {
      get { return attach_ ?? AttachDefaultValue; }
      set {
        attach_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "attach" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAttach {
      get { return attach_ != null; }
    }
    /// <summary>Clears the value of the "attach" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAttach() {
      attach_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 7;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 8) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (FromUid != other.FromUid) return false;
      if (ToUid != other.ToUid) return false;
      if (Type != other.Type) return false;
      if (ActionTime != other.ActionTime) return false;
      if (Attach != other.Attach) return false;
      if (Leagueid != other.Leagueid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasFromUid) hash ^= FromUid.GetHashCode();
      if (HasToUid) hash ^= ToUid.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasActionTime) hash ^= ActionTime.GetHashCode();
      if (HasAttach) hash ^= Attach.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasFromUid) {
        output.WriteRawTag(16);
        output.WriteInt64(FromUid);
      }
      if (HasToUid) {
        output.WriteRawTag(24);
        output.WriteInt64(ToUid);
      }
      if (HasType) {
        output.WriteRawTag(34);
        output.WriteString(Type);
      }
      if (HasActionTime) {
        output.WriteRawTag(40);
        output.WriteUInt32(ActionTime);
      }
      if (HasAttach) {
        output.WriteRawTag(50);
        output.WriteString(Attach);
      }
      if (HasLeagueid) {
        output.WriteRawTag(56);
        output.WriteInt32(Leagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasFromUid) {
        output.WriteRawTag(16);
        output.WriteInt64(FromUid);
      }
      if (HasToUid) {
        output.WriteRawTag(24);
        output.WriteInt64(ToUid);
      }
      if (HasType) {
        output.WriteRawTag(34);
        output.WriteString(Type);
      }
      if (HasActionTime) {
        output.WriteRawTag(40);
        output.WriteUInt32(ActionTime);
      }
      if (HasAttach) {
        output.WriteRawTag(50);
        output.WriteString(Attach);
      }
      if (HasLeagueid) {
        output.WriteRawTag(56);
        output.WriteInt32(Leagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasFromUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FromUid);
      }
      if (HasToUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ToUid);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasActionTime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ActionTime);
      }
      if (HasAttach) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Attach);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubAction other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasFromUid) {
        FromUid = other.FromUid;
      }
      if (other.HasToUid) {
        ToUid = other.ToUid;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasActionTime) {
        ActionTime = other.ActionTime;
      }
      if (other.HasAttach) {
        Attach = other.Attach;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            FromUid = input.ReadInt64();
            break;
          }
          case 24: {
            ToUid = input.ReadInt64();
            break;
          }
          case 34: {
            Type = input.ReadString();
            break;
          }
          case 40: {
            ActionTime = input.ReadUInt32();
            break;
          }
          case 50: {
            Attach = input.ReadString();
            break;
          }
          case 56: {
            Leagueid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            FromUid = input.ReadInt64();
            break;
          }
          case 24: {
            ToUid = input.ReadInt64();
            break;
          }
          case 34: {
            Type = input.ReadString();
            break;
          }
          case 40: {
            ActionTime = input.ReadUInt32();
            break;
          }
          case 50: {
            Attach = input.ReadString();
            break;
          }
          case 56: {
            Leagueid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SinglePPCoinFlowREQ : pb::IMessage<SinglePPCoinFlowREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SinglePPCoinFlowREQ> _parser = new pb::MessageParser<SinglePPCoinFlowREQ>(() => new SinglePPCoinFlowREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SinglePPCoinFlowREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SinglePPCoinFlowREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SinglePPCoinFlowREQ(SinglePPCoinFlowREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SinglePPCoinFlowREQ Clone() {
      return new SinglePPCoinFlowREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 2;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 1) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SinglePPCoinFlowREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SinglePPCoinFlowREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SinglePPCoinFlowREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SinglePPCoinFlowRSP : pb::IMessage<SinglePPCoinFlowRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SinglePPCoinFlowRSP> _parser = new pb::MessageParser<SinglePPCoinFlowRSP>(() => new SinglePPCoinFlowRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SinglePPCoinFlowRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SinglePPCoinFlowRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SinglePPCoinFlowRSP(SinglePPCoinFlowRSP other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      info_ = other.info_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SinglePPCoinFlowRSP Clone() {
      return new SinglePPCoinFlowRSP(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 2;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 1) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PPCoinFlowInfo> _repeated_info_codec
        = pb::FieldCodec.ForMessage(26, global::Texas.Protocol.PPCoinFlowInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PPCoinFlowInfo> info_ = new pbc::RepeatedField<global::Texas.Protocol.PPCoinFlowInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PPCoinFlowInfo> Info {
      get { return info_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SinglePPCoinFlowRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SinglePPCoinFlowRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if(!info_.Equals(other.info_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      hash ^= info_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      info_.WriteTo(output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      info_.WriteTo(ref output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      size += info_.CalculateSize(_repeated_info_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SinglePPCoinFlowRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      info_.Add(other.info_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 26: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 26: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class KickClubUserREQ : pb::IMessage<KickClubUserREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KickClubUserREQ> _parser = new pb::MessageParser<KickClubUserREQ>(() => new KickClubUserREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KickClubUserREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KickClubUserREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KickClubUserREQ(KickClubUserREQ other) : this() {
      clubid_ = other.clubid_;
      uid_ = other.uid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KickClubUserREQ Clone() {
      return new KickClubUserREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static string UidDefaultValue = "";

    private string uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_ ?? UidDefaultValue; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return uid_ != null; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      uid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KickClubUserREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KickClubUserREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Uid != other.Uid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasUid) {
        output.WriteRawTag(18);
        output.WriteString(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasUid) {
        output.WriteRawTag(18);
        output.WriteString(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KickClubUserREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 18: {
            Uid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 18: {
            Uid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class KickClubUserRSP : pb::IMessage<KickClubUserRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KickClubUserRSP> _parser = new pb::MessageParser<KickClubUserRSP>(() => new KickClubUserRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KickClubUserRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KickClubUserRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KickClubUserRSP(KickClubUserRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      clubid_ = other.clubid_;
      uid_ = other.uid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KickClubUserRSP Clone() {
      return new KickClubUserRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// -1：用户不是俱乐部会员  -2：权限不够，管理员不能删管理员或创始人  -3：不能踢创始人或者管理员 -4：被踢用户已在该俱乐部mtt或者sng中 -5：被踢用户在现金桌桌中(包括大菠萝)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 2;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 3;
    private readonly static string UidDefaultValue = "";

    private string uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_ ?? UidDefaultValue; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return uid_ != null; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      uid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KickClubUserRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KickClubUserRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Clubid != other.Clubid) return false;
      if (Uid != other.Uid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (HasUid) {
        output.WriteRawTag(26);
        output.WriteString(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (HasUid) {
        output.WriteRawTag(26);
        output.WriteString(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KickClubUserRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
          case 26: {
            Uid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
          case 26: {
            Uid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetRedPointDataREQ : pb::IMessage<GetRedPointDataREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetRedPointDataREQ> _parser = new pb::MessageParser<GetRedPointDataREQ>(() => new GetRedPointDataREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetRedPointDataREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRedPointDataREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRedPointDataREQ(GetRedPointDataREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRedPointDataREQ Clone() {
      return new GetRedPointDataREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 2;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 1) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetRedPointDataREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetRedPointDataREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetRedPointDataREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetRedPointDataRSP : pb::IMessage<GetRedPointDataRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetRedPointDataRSP> _parser = new pb::MessageParser<GetRedPointDataRSP>(() => new GetRedPointDataRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetRedPointDataRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRedPointDataRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRedPointDataRSP(GetRedPointDataRSP other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_.Clone();
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRedPointDataRSP Clone() {
      return new GetRedPointDataRSP(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_type_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> type_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///1:背包
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Type {
      get { return type_; }
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 2;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 3;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 1) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetRedPointDataRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetRedPointDataRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!type_.Equals(other.type_)) return false;
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= type_.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      type_.WriteTo(output, _repeated_type_codec);
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(24);
        output.WriteInt32(Leagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      type_.WriteTo(ref output, _repeated_type_codec);
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(24);
        output.WriteInt32(Leagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += type_.CalculateSize(_repeated_type_codec);
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetRedPointDataRSP other) {
      if (other == null) {
        return;
      }
      type_.Add(other.type_);
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            type_.AddEntriesFrom(input, _repeated_type_codec);
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
          case 24: {
            Leagueid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            type_.AddEntriesFrom(ref input, _repeated_type_codec);
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
          case 24: {
            Leagueid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RoomTopREQ : pb::IMessage<RoomTopREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoomTopREQ> _parser = new pb::MessageParser<RoomTopREQ>(() => new RoomTopREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RoomTopREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomTopREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomTopREQ(RoomTopREQ other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      isTop_ = other.isTop_;
      clubid_ = other.clubid_;
      isPpstRoom_ = other.isPpstRoom_;
      isPpsrRoom_ = other.isPpsrRoom_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomTopREQ Clone() {
      return new RoomTopREQ(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static string RoomidDefaultValue = "";

    private string roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Roomid {
      get { return roomid_ ?? RoomidDefaultValue; }
      set {
        roomid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return roomid_ != null; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      roomid_ = null;
    }

    /// <summary>Field number for the "is_top" field.</summary>
    public const int IsTopFieldNumber = 2;
    private readonly static bool IsTopDefaultValue = false;

    private bool isTop_;
    /// <summary>
    ///true：置顶   false：取消置顶
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsTop {
      get { if ((_hasBits0 & 1) != 0) { return isTop_; } else { return IsTopDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isTop_ = value;
      }
    }
    /// <summary>Gets whether the "is_top" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsTop {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_top" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsTop() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 3;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "is_ppst_room" field.</summary>
    public const int IsPpstRoomFieldNumber = 4;
    private readonly static bool IsPpstRoomDefaultValue = false;

    private bool isPpstRoom_;
    /// <summary>
    ///是否為PPST房間，方便後端做搜尋用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPpstRoom {
      get { if ((_hasBits0 & 2) != 0) { return isPpstRoom_; } else { return IsPpstRoomDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isPpstRoom_ = value;
      }
    }
    /// <summary>Gets whether the "is_ppst_room" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPpstRoom {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_ppst_room" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPpstRoom() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "is_ppsr_room" field.</summary>
    public const int IsPpsrRoomFieldNumber = 5;
    private readonly static bool IsPpsrRoomDefaultValue = false;

    private bool isPpsrRoom_;
    /// <summary>
    ///是否為PPSR房間，方便後端做搜尋用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPpsrRoom {
      get { if ((_hasBits0 & 4) != 0) { return isPpsrRoom_; } else { return IsPpsrRoomDefaultValue; } }
      set {
        _hasBits0 |= 4;
        isPpsrRoom_ = value;
      }
    }
    /// <summary>Gets whether the "is_ppsr_room" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPpsrRoom {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "is_ppsr_room" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPpsrRoom() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RoomTopREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RoomTopREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (IsTop != other.IsTop) return false;
      if (Clubid != other.Clubid) return false;
      if (IsPpstRoom != other.IsPpstRoom) return false;
      if (IsPpsrRoom != other.IsPpsrRoom) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasIsTop) hash ^= IsTop.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasIsPpstRoom) hash ^= IsPpstRoom.GetHashCode();
      if (HasIsPpsrRoom) hash ^= IsPpsrRoom.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(10);
        output.WriteString(Roomid);
      }
      if (HasIsTop) {
        output.WriteRawTag(16);
        output.WriteBool(IsTop);
      }
      if (HasClubid) {
        output.WriteRawTag(26);
        output.WriteString(Clubid);
      }
      if (HasIsPpstRoom) {
        output.WriteRawTag(32);
        output.WriteBool(IsPpstRoom);
      }
      if (HasIsPpsrRoom) {
        output.WriteRawTag(40);
        output.WriteBool(IsPpsrRoom);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(10);
        output.WriteString(Roomid);
      }
      if (HasIsTop) {
        output.WriteRawTag(16);
        output.WriteBool(IsTop);
      }
      if (HasClubid) {
        output.WriteRawTag(26);
        output.WriteString(Clubid);
      }
      if (HasIsPpstRoom) {
        output.WriteRawTag(32);
        output.WriteBool(IsPpstRoom);
      }
      if (HasIsPpsrRoom) {
        output.WriteRawTag(40);
        output.WriteBool(IsPpsrRoom);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Roomid);
      }
      if (HasIsTop) {
        size += 1 + 1;
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasIsPpstRoom) {
        size += 1 + 1;
      }
      if (HasIsPpsrRoom) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RoomTopREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasIsTop) {
        IsTop = other.IsTop;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasIsPpstRoom) {
        IsPpstRoom = other.IsPpstRoom;
      }
      if (other.HasIsPpsrRoom) {
        IsPpsrRoom = other.IsPpsrRoom;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Roomid = input.ReadString();
            break;
          }
          case 16: {
            IsTop = input.ReadBool();
            break;
          }
          case 26: {
            Clubid = input.ReadString();
            break;
          }
          case 32: {
            IsPpstRoom = input.ReadBool();
            break;
          }
          case 40: {
            IsPpsrRoom = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Roomid = input.ReadString();
            break;
          }
          case 16: {
            IsTop = input.ReadBool();
            break;
          }
          case 26: {
            Clubid = input.ReadString();
            break;
          }
          case 32: {
            IsPpstRoom = input.ReadBool();
            break;
          }
          case 40: {
            IsPpsrRoom = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RoomTopRSP : pb::IMessage<RoomTopRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoomTopRSP> _parser = new pb::MessageParser<RoomTopRSP>(() => new RoomTopRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RoomTopRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomTopRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomTopRSP(RoomTopRSP other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      isTop_ = other.isTop_;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomTopRSP Clone() {
      return new RoomTopRSP(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static string RoomidDefaultValue = "";

    private string roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Roomid {
      get { return roomid_ ?? RoomidDefaultValue; }
      set {
        roomid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return roomid_ != null; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      roomid_ = null;
    }

    /// <summary>Field number for the "is_top" field.</summary>
    public const int IsTopFieldNumber = 2;
    private readonly static bool IsTopDefaultValue = false;

    private bool isTop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsTop {
      get { if ((_hasBits0 & 1) != 0) { return isTop_; } else { return IsTopDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isTop_ = value;
      }
    }
    /// <summary>Gets whether the "is_top" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsTop {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_top" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsTop() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 3;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0:成功  -1:其他失败  -2：roomid不存在  -3：置顶已满  -4：roomid不存在置顶中 -5：没有权限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 2) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RoomTopRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RoomTopRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (IsTop != other.IsTop) return false;
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasIsTop) hash ^= IsTop.GetHashCode();
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(10);
        output.WriteString(Roomid);
      }
      if (HasIsTop) {
        output.WriteRawTag(16);
        output.WriteBool(IsTop);
      }
      if (HasCode) {
        output.WriteRawTag(24);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(10);
        output.WriteString(Roomid);
      }
      if (HasIsTop) {
        output.WriteRawTag(16);
        output.WriteBool(IsTop);
      }
      if (HasCode) {
        output.WriteRawTag(24);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Roomid);
      }
      if (HasIsTop) {
        size += 1 + 1;
      }
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RoomTopRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasIsTop) {
        IsTop = other.IsTop;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Roomid = input.ReadString();
            break;
          }
          case 16: {
            IsTop = input.ReadBool();
            break;
          }
          case 24: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Roomid = input.ReadString();
            break;
          }
          case 16: {
            IsTop = input.ReadBool();
            break;
          }
          case 24: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubManagerAuthoritySetREQ : pb::IMessage<ClubManagerAuthoritySetREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubManagerAuthoritySetREQ> _parser = new pb::MessageParser<ClubManagerAuthoritySetREQ>(() => new ClubManagerAuthoritySetREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubManagerAuthoritySetREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubManagerAuthoritySetREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubManagerAuthoritySetREQ(ClubManagerAuthoritySetREQ other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      clubid_ = other.clubid_;
      authorityDetail_ = other.authorityDetail_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubManagerAuthoritySetREQ Clone() {
      return new ClubManagerAuthoritySetREQ(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 2;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 2) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "authority_detail" field.</summary>
    public const int AuthorityDetailFieldNumber = 3;
    private readonly static int AuthorityDetailDefaultValue = 0;

    private int authorityDetail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AuthorityDetail {
      get { if ((_hasBits0 & 4) != 0) { return authorityDetail_; } else { return AuthorityDetailDefaultValue; } }
      set {
        _hasBits0 |= 4;
        authorityDetail_ = value;
      }
    }
    /// <summary>Gets whether the "authority_detail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAuthorityDetail {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "authority_detail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAuthorityDetail() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubManagerAuthoritySetREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubManagerAuthoritySetREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Clubid != other.Clubid) return false;
      if (AuthorityDetail != other.AuthorityDetail) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasAuthorityDetail) hash ^= AuthorityDetail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(16);
        output.WriteInt32(Clubid);
      }
      if (HasAuthorityDetail) {
        output.WriteRawTag(24);
        output.WriteInt32(AuthorityDetail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(16);
        output.WriteInt32(Clubid);
      }
      if (HasAuthorityDetail) {
        output.WriteRawTag(24);
        output.WriteInt32(AuthorityDetail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasAuthorityDetail) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AuthorityDetail);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubManagerAuthoritySetREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasAuthorityDetail) {
        AuthorityDetail = other.AuthorityDetail;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 16: {
            Clubid = input.ReadInt32();
            break;
          }
          case 24: {
            AuthorityDetail = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 16: {
            Clubid = input.ReadInt32();
            break;
          }
          case 24: {
            AuthorityDetail = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubManagerAuthoritySetRSP : pb::IMessage<ClubManagerAuthoritySetRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubManagerAuthoritySetRSP> _parser = new pb::MessageParser<ClubManagerAuthoritySetRSP>(() => new ClubManagerAuthoritySetRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubManagerAuthoritySetRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubManagerAuthoritySetRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubManagerAuthoritySetRSP(ClubManagerAuthoritySetRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      uid_ = other.uid_;
      clubid_ = other.clubid_;
      authorityDetail_ = other.authorityDetail_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubManagerAuthoritySetRSP Clone() {
      return new ClubManagerAuthoritySetRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0 success -1 没有权限 -2 被设置者不是管理员
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 2) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 3;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 4) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "authority_detail" field.</summary>
    public const int AuthorityDetailFieldNumber = 4;
    private readonly static int AuthorityDetailDefaultValue = 0;

    private int authorityDetail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AuthorityDetail {
      get { if ((_hasBits0 & 8) != 0) { return authorityDetail_; } else { return AuthorityDetailDefaultValue; } }
      set {
        _hasBits0 |= 8;
        authorityDetail_ = value;
      }
    }
    /// <summary>Gets whether the "authority_detail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAuthorityDetail {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "authority_detail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAuthorityDetail() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubManagerAuthoritySetRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubManagerAuthoritySetRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Uid != other.Uid) return false;
      if (Clubid != other.Clubid) return false;
      if (AuthorityDetail != other.AuthorityDetail) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasAuthorityDetail) hash ^= AuthorityDetail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(24);
        output.WriteInt32(Clubid);
      }
      if (HasAuthorityDetail) {
        output.WriteRawTag(32);
        output.WriteInt32(AuthorityDetail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(24);
        output.WriteInt32(Clubid);
      }
      if (HasAuthorityDetail) {
        output.WriteRawTag(32);
        output.WriteInt32(AuthorityDetail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasAuthorityDetail) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AuthorityDetail);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubManagerAuthoritySetRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasAuthorityDetail) {
        AuthorityDetail = other.AuthorityDetail;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
          case 24: {
            Clubid = input.ReadInt32();
            break;
          }
          case 32: {
            AuthorityDetail = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
          case 24: {
            Clubid = input.ReadInt32();
            break;
          }
          case 32: {
            AuthorityDetail = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubStormInfoREQ : pb::IMessage<ClubStormInfoREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubStormInfoREQ> _parser = new pb::MessageParser<ClubStormInfoREQ>(() => new ClubStormInfoREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubStormInfoREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubStormInfoREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubStormInfoREQ(ClubStormInfoREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubStormInfoREQ Clone() {
      return new ClubStormInfoREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 1) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubStormInfoREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubStormInfoREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(8);
        output.WriteInt32(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(8);
        output.WriteInt32(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubStormInfoREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Clubid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Clubid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubStormInfoRSP : pb::IMessage<ClubStormInfoRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubStormInfoRSP> _parser = new pb::MessageParser<ClubStormInfoRSP>(() => new ClubStormInfoRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubStormInfoRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubStormInfoRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubStormInfoRSP(ClubStormInfoRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      storm_ = other.storm_ != null ? other.storm_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubStormInfoRSP Clone() {
      return new ClubStormInfoRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "storm" field.</summary>
    public const int StormFieldNumber = 2;
    private global::Texas.Protocol.PPchipsStormInfo storm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PPchipsStormInfo Storm {
      get { return storm_; }
      set {
        storm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubStormInfoRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubStormInfoRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Storm, other.Storm)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (storm_ != null) hash ^= Storm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (storm_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Storm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (storm_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Storm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (storm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Storm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubStormInfoRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.storm_ != null) {
        if (storm_ == null) {
          Storm = new global::Texas.Protocol.PPchipsStormInfo();
        }
        Storm.MergeFrom(other.Storm);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (storm_ == null) {
              Storm = new global::Texas.Protocol.PPchipsStormInfo();
            }
            input.ReadMessage(Storm);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (storm_ == null) {
              Storm = new global::Texas.Protocol.PPchipsStormInfo();
            }
            input.ReadMessage(Storm);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubSuspendAgentREQ : pb::IMessage<ClubSuspendAgentREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubSuspendAgentREQ> _parser = new pb::MessageParser<ClubSuspendAgentREQ>(() => new ClubSuspendAgentREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubSuspendAgentREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubSuspendAgentREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubSuspendAgentREQ(ClubSuspendAgentREQ other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      clubid_ = other.clubid_;
      action_ = other.action_;
      today_ = other.today_;
      thisWeekBeginDay_ = other.thisWeekBeginDay_;
      timezone_ = other.timezone_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubSuspendAgentREQ Clone() {
      return new ClubSuspendAgentREQ(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static string UidDefaultValue = "";

    private string uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_ ?? UidDefaultValue; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return uid_ != null; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      uid_ = null;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 2;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 3;
    private readonly static int ActionDefaultValue = 0;

    private int action_;
    /// <summary>
    ///0 = 暫停  1 = 恢復
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Action {
      get { if ((_hasBits0 & 1) != 0) { return action_; } else { return ActionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        action_ = value;
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAction {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "today" field.</summary>
    public const int TodayFieldNumber = 4;
    private readonly static int TodayDefaultValue = 0;

    private int today_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Today {
      get { if ((_hasBits0 & 2) != 0) { return today_; } else { return TodayDefaultValue; } }
      set {
        _hasBits0 |= 2;
        today_ = value;
      }
    }
    /// <summary>Gets whether the "today" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasToday {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "today" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearToday() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "this_week_begin_day" field.</summary>
    public const int ThisWeekBeginDayFieldNumber = 5;
    private readonly static int ThisWeekBeginDayDefaultValue = 0;

    private int thisWeekBeginDay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ThisWeekBeginDay {
      get { if ((_hasBits0 & 4) != 0) { return thisWeekBeginDay_; } else { return ThisWeekBeginDayDefaultValue; } }
      set {
        _hasBits0 |= 4;
        thisWeekBeginDay_ = value;
      }
    }
    /// <summary>Gets whether the "this_week_begin_day" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasThisWeekBeginDay {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "this_week_begin_day" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearThisWeekBeginDay() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "timezone" field.</summary>
    public const int TimezoneFieldNumber = 6;
    private readonly static int TimezoneDefaultValue = 0;

    private int timezone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Timezone {
      get { if ((_hasBits0 & 8) != 0) { return timezone_; } else { return TimezoneDefaultValue; } }
      set {
        _hasBits0 |= 8;
        timezone_ = value;
      }
    }
    /// <summary>Gets whether the "timezone" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimezone {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "timezone" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimezone() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubSuspendAgentREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubSuspendAgentREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Clubid != other.Clubid) return false;
      if (Action != other.Action) return false;
      if (Today != other.Today) return false;
      if (ThisWeekBeginDay != other.ThisWeekBeginDay) return false;
      if (Timezone != other.Timezone) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasAction) hash ^= Action.GetHashCode();
      if (HasToday) hash ^= Today.GetHashCode();
      if (HasThisWeekBeginDay) hash ^= ThisWeekBeginDay.GetHashCode();
      if (HasTimezone) hash ^= Timezone.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (HasAction) {
        output.WriteRawTag(24);
        output.WriteInt32(Action);
      }
      if (HasToday) {
        output.WriteRawTag(32);
        output.WriteInt32(Today);
      }
      if (HasThisWeekBeginDay) {
        output.WriteRawTag(40);
        output.WriteInt32(ThisWeekBeginDay);
      }
      if (HasTimezone) {
        output.WriteRawTag(48);
        output.WriteInt32(Timezone);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (HasAction) {
        output.WriteRawTag(24);
        output.WriteInt32(Action);
      }
      if (HasToday) {
        output.WriteRawTag(32);
        output.WriteInt32(Today);
      }
      if (HasThisWeekBeginDay) {
        output.WriteRawTag(40);
        output.WriteInt32(ThisWeekBeginDay);
      }
      if (HasTimezone) {
        output.WriteRawTag(48);
        output.WriteInt32(Timezone);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Action);
      }
      if (HasToday) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Today);
      }
      if (HasThisWeekBeginDay) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThisWeekBeginDay);
      }
      if (HasTimezone) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Timezone);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubSuspendAgentREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      if (other.HasToday) {
        Today = other.Today;
      }
      if (other.HasThisWeekBeginDay) {
        ThisWeekBeginDay = other.ThisWeekBeginDay;
      }
      if (other.HasTimezone) {
        Timezone = other.Timezone;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
          case 24: {
            Action = input.ReadInt32();
            break;
          }
          case 32: {
            Today = input.ReadInt32();
            break;
          }
          case 40: {
            ThisWeekBeginDay = input.ReadInt32();
            break;
          }
          case 48: {
            Timezone = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
          case 24: {
            Action = input.ReadInt32();
            break;
          }
          case 32: {
            Today = input.ReadInt32();
            break;
          }
          case 40: {
            ThisWeekBeginDay = input.ReadInt32();
            break;
          }
          case 48: {
            Timezone = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubSuspendAgentRSP : pb::IMessage<ClubSuspendAgentRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubSuspendAgentRSP> _parser = new pb::MessageParser<ClubSuspendAgentRSP>(() => new ClubSuspendAgentRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubSuspendAgentRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubSuspendAgentRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubSuspendAgentRSP(ClubSuspendAgentRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      action_ = other.action_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubSuspendAgentRSP Clone() {
      return new ClubSuspendAgentRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 2;
    private readonly static int ActionDefaultValue = 0;

    private int action_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Action {
      get { if ((_hasBits0 & 2) != 0) { return action_; } else { return ActionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        action_ = value;
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAction {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubSuspendAgentRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubSuspendAgentRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Action != other.Action) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasAction) hash ^= Action.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasAction) {
        output.WriteRawTag(16);
        output.WriteInt32(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasAction) {
        output.WriteRawTag(16);
        output.WriteInt32(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Action);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubSuspendAgentRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Action = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Action = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubAgentStatusREQ : pb::IMessage<ClubAgentStatusREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubAgentStatusREQ> _parser = new pb::MessageParser<ClubAgentStatusREQ>(() => new ClubAgentStatusREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubAgentStatusREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAgentStatusREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAgentStatusREQ(ClubAgentStatusREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      agentUid_ = other.agentUid_;
      leagueid_ = other.leagueid_;
      yesterday_ = other.yesterday_;
      today_ = other.today_;
      lastWeekBeginDay_ = other.lastWeekBeginDay_;
      thisWeekBeginDay_ = other.thisWeekBeginDay_;
      timezone_ = other.timezone_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAgentStatusREQ Clone() {
      return new ClubAgentStatusREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "agent_uid" field.</summary>
    public const int AgentUidFieldNumber = 2;
    private readonly static int AgentUidDefaultValue = 0;

    private int agentUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AgentUid {
      get { if ((_hasBits0 & 1) != 0) { return agentUid_; } else { return AgentUidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        agentUid_ = value;
      }
    }
    /// <summary>Gets whether the "agent_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgentUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "agent_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgentUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 3;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 2) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "yesterday" field.</summary>
    public const int YesterdayFieldNumber = 4;
    private readonly static int YesterdayDefaultValue = 0;

    private int yesterday_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Yesterday {
      get { if ((_hasBits0 & 4) != 0) { return yesterday_; } else { return YesterdayDefaultValue; } }
      set {
        _hasBits0 |= 4;
        yesterday_ = value;
      }
    }
    /// <summary>Gets whether the "yesterday" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasYesterday {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "yesterday" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearYesterday() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "today" field.</summary>
    public const int TodayFieldNumber = 5;
    private readonly static int TodayDefaultValue = 0;

    private int today_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Today {
      get { if ((_hasBits0 & 8) != 0) { return today_; } else { return TodayDefaultValue; } }
      set {
        _hasBits0 |= 8;
        today_ = value;
      }
    }
    /// <summary>Gets whether the "today" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasToday {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "today" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearToday() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "last_week_begin_day" field.</summary>
    public const int LastWeekBeginDayFieldNumber = 6;
    private readonly static int LastWeekBeginDayDefaultValue = 0;

    private int lastWeekBeginDay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LastWeekBeginDay {
      get { if ((_hasBits0 & 16) != 0) { return lastWeekBeginDay_; } else { return LastWeekBeginDayDefaultValue; } }
      set {
        _hasBits0 |= 16;
        lastWeekBeginDay_ = value;
      }
    }
    /// <summary>Gets whether the "last_week_begin_day" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLastWeekBeginDay {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "last_week_begin_day" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLastWeekBeginDay() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "this_week_begin_day" field.</summary>
    public const int ThisWeekBeginDayFieldNumber = 7;
    private readonly static int ThisWeekBeginDayDefaultValue = 0;

    private int thisWeekBeginDay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ThisWeekBeginDay {
      get { if ((_hasBits0 & 32) != 0) { return thisWeekBeginDay_; } else { return ThisWeekBeginDayDefaultValue; } }
      set {
        _hasBits0 |= 32;
        thisWeekBeginDay_ = value;
      }
    }
    /// <summary>Gets whether the "this_week_begin_day" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasThisWeekBeginDay {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "this_week_begin_day" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearThisWeekBeginDay() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "timezone" field.</summary>
    public const int TimezoneFieldNumber = 8;
    private readonly static int TimezoneDefaultValue = 0;

    private int timezone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Timezone {
      get { if ((_hasBits0 & 64) != 0) { return timezone_; } else { return TimezoneDefaultValue; } }
      set {
        _hasBits0 |= 64;
        timezone_ = value;
      }
    }
    /// <summary>Gets whether the "timezone" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimezone {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "timezone" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimezone() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubAgentStatusREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubAgentStatusREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (AgentUid != other.AgentUid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (Yesterday != other.Yesterday) return false;
      if (Today != other.Today) return false;
      if (LastWeekBeginDay != other.LastWeekBeginDay) return false;
      if (ThisWeekBeginDay != other.ThisWeekBeginDay) return false;
      if (Timezone != other.Timezone) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasAgentUid) hash ^= AgentUid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasYesterday) hash ^= Yesterday.GetHashCode();
      if (HasToday) hash ^= Today.GetHashCode();
      if (HasLastWeekBeginDay) hash ^= LastWeekBeginDay.GetHashCode();
      if (HasThisWeekBeginDay) hash ^= ThisWeekBeginDay.GetHashCode();
      if (HasTimezone) hash ^= Timezone.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasAgentUid) {
        output.WriteRawTag(16);
        output.WriteInt32(AgentUid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(24);
        output.WriteInt32(Leagueid);
      }
      if (HasYesterday) {
        output.WriteRawTag(32);
        output.WriteInt32(Yesterday);
      }
      if (HasToday) {
        output.WriteRawTag(40);
        output.WriteInt32(Today);
      }
      if (HasLastWeekBeginDay) {
        output.WriteRawTag(48);
        output.WriteInt32(LastWeekBeginDay);
      }
      if (HasThisWeekBeginDay) {
        output.WriteRawTag(56);
        output.WriteInt32(ThisWeekBeginDay);
      }
      if (HasTimezone) {
        output.WriteRawTag(64);
        output.WriteInt32(Timezone);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasAgentUid) {
        output.WriteRawTag(16);
        output.WriteInt32(AgentUid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(24);
        output.WriteInt32(Leagueid);
      }
      if (HasYesterday) {
        output.WriteRawTag(32);
        output.WriteInt32(Yesterday);
      }
      if (HasToday) {
        output.WriteRawTag(40);
        output.WriteInt32(Today);
      }
      if (HasLastWeekBeginDay) {
        output.WriteRawTag(48);
        output.WriteInt32(LastWeekBeginDay);
      }
      if (HasThisWeekBeginDay) {
        output.WriteRawTag(56);
        output.WriteInt32(ThisWeekBeginDay);
      }
      if (HasTimezone) {
        output.WriteRawTag(64);
        output.WriteInt32(Timezone);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasAgentUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AgentUid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasYesterday) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Yesterday);
      }
      if (HasToday) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Today);
      }
      if (HasLastWeekBeginDay) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LastWeekBeginDay);
      }
      if (HasThisWeekBeginDay) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThisWeekBeginDay);
      }
      if (HasTimezone) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Timezone);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubAgentStatusREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasAgentUid) {
        AgentUid = other.AgentUid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasYesterday) {
        Yesterday = other.Yesterday;
      }
      if (other.HasToday) {
        Today = other.Today;
      }
      if (other.HasLastWeekBeginDay) {
        LastWeekBeginDay = other.LastWeekBeginDay;
      }
      if (other.HasThisWeekBeginDay) {
        ThisWeekBeginDay = other.ThisWeekBeginDay;
      }
      if (other.HasTimezone) {
        Timezone = other.Timezone;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            AgentUid = input.ReadInt32();
            break;
          }
          case 24: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 32: {
            Yesterday = input.ReadInt32();
            break;
          }
          case 40: {
            Today = input.ReadInt32();
            break;
          }
          case 48: {
            LastWeekBeginDay = input.ReadInt32();
            break;
          }
          case 56: {
            ThisWeekBeginDay = input.ReadInt32();
            break;
          }
          case 64: {
            Timezone = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            AgentUid = input.ReadInt32();
            break;
          }
          case 24: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 32: {
            Yesterday = input.ReadInt32();
            break;
          }
          case 40: {
            Today = input.ReadInt32();
            break;
          }
          case 48: {
            LastWeekBeginDay = input.ReadInt32();
            break;
          }
          case 56: {
            ThisWeekBeginDay = input.ReadInt32();
            break;
          }
          case 64: {
            Timezone = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubAgentStatusRSP : pb::IMessage<ClubAgentStatusRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubAgentStatusRSP> _parser = new pb::MessageParser<ClubAgentStatusRSP>(() => new ClubAgentStatusRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    private int _hasBits1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubAgentStatusRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAgentStatusRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAgentStatusRSP(ClubAgentStatusRSP other) : this() {
      _hasBits0 = other._hasBits0;
      _hasBits1 = other._hasBits1;
      code_ = other.code_;
      suspendStatus_ = other.suspendStatus_;
      autoban_ = other.autoban_;
      autobanType_ = other.autobanType_;
      autobanLimit_ = other.autobanLimit_;
      profitWeek_ = other.profitWeek_;
      profitDay_ = other.profitDay_;
      profitLastDay_ = other.profitLastDay_;
      profitLastWeek_ = other.profitLastWeek_;
      limitLuckydraw_ = other.limitLuckydraw_;
      limitColorgame_ = other.limitColorgame_;
      limitJackpot_ = other.limitJackpot_;
      limitEvchop_ = other.limitEvchop_;
      luckydrawWeeklyProfit_ = other.luckydrawWeeklyProfit_;
      luckydrawDailyProfit_ = other.luckydrawDailyProfit_;
      colorgameWeeklyProfit_ = other.colorgameWeeklyProfit_;
      colorgameDailyProfit_ = other.colorgameDailyProfit_;
      jackpotWeeklyProfit_ = other.jackpotWeeklyProfit_;
      jackpotDailyProfit_ = other.jackpotDailyProfit_;
      evchopWeeklyProfit_ = other.evchopWeeklyProfit_;
      evchopDailyProfit_ = other.evchopDailyProfit_;
      othersWeeklyProfit_ = other.othersWeeklyProfit_;
      othersDailyProfit_ = other.othersDailyProfit_;
      luckydrawLastWeeklyProfit_ = other.luckydrawLastWeeklyProfit_;
      luckydrawLastDailyProfit_ = other.luckydrawLastDailyProfit_;
      colorgameLastWeeklyProfit_ = other.colorgameLastWeeklyProfit_;
      colorgameLastDailyProfit_ = other.colorgameLastDailyProfit_;
      jackpotLastWeeklyProfit_ = other.jackpotLastWeeklyProfit_;
      jackpotLastDailyProfit_ = other.jackpotLastDailyProfit_;
      evchopLastWeeklyProfit_ = other.evchopLastWeeklyProfit_;
      evchopLastDailyProfit_ = other.evchopLastDailyProfit_;
      othersLastWeeklyProfit_ = other.othersLastWeeklyProfit_;
      othersLastDailyProfit_ = other.othersLastDailyProfit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAgentStatusRSP Clone() {
      return new ClubAgentStatusRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// -1: 沒有權限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "suspend_status" field.</summary>
    public const int SuspendStatusFieldNumber = 2;
    private readonly static bool SuspendStatusDefaultValue = false;

    private bool suspendStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SuspendStatus {
      get { if ((_hasBits0 & 2) != 0) { return suspendStatus_; } else { return SuspendStatusDefaultValue; } }
      set {
        _hasBits0 |= 2;
        suspendStatus_ = value;
      }
    }
    /// <summary>Gets whether the "suspend_status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuspendStatus {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "suspend_status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuspendStatus() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "autoban" field.</summary>
    public const int AutobanFieldNumber = 3;
    private readonly static bool AutobanDefaultValue = false;

    private bool autoban_;
    /// <summary>
    /// 是否開啟自動ban
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Autoban {
      get { if ((_hasBits0 & 4) != 0) { return autoban_; } else { return AutobanDefaultValue; } }
      set {
        _hasBits0 |= 4;
        autoban_ = value;
      }
    }
    /// <summary>Gets whether the "autoban" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAutoban {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "autoban" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAutoban() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "autoban_type" field.</summary>
    public const int AutobanTypeFieldNumber = 4;
    private readonly static int AutobanTypeDefaultValue = 0;

    private int autobanType_;
    /// <summary>
    /// 0: week; 1: day;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AutobanType {
      get { if ((_hasBits0 & 8) != 0) { return autobanType_; } else { return AutobanTypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        autobanType_ = value;
      }
    }
    /// <summary>Gets whether the "autoban_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAutobanType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "autoban_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAutobanType() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "autoban_limit" field.</summary>
    public const int AutobanLimitFieldNumber = 5;
    private readonly static long AutobanLimitDefaultValue = 0L;

    private long autobanLimit_;
    /// <summary>
    /// 0: 无上限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AutobanLimit {
      get { if ((_hasBits0 & 16) != 0) { return autobanLimit_; } else { return AutobanLimitDefaultValue; } }
      set {
        _hasBits0 |= 16;
        autobanLimit_ = value;
      }
    }
    /// <summary>Gets whether the "autoban_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAutobanLimit {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "autoban_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAutobanLimit() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "profit_week" field.</summary>
    public const int ProfitWeekFieldNumber = 6;
    private readonly static long ProfitWeekDefaultValue = 0L;

    private long profitWeek_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ProfitWeek {
      get { if ((_hasBits0 & 32) != 0) { return profitWeek_; } else { return ProfitWeekDefaultValue; } }
      set {
        _hasBits0 |= 32;
        profitWeek_ = value;
      }
    }
    /// <summary>Gets whether the "profit_week" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProfitWeek {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "profit_week" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProfitWeek() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "profit_day" field.</summary>
    public const int ProfitDayFieldNumber = 7;
    private readonly static long ProfitDayDefaultValue = 0L;

    private long profitDay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ProfitDay {
      get { if ((_hasBits0 & 64) != 0) { return profitDay_; } else { return ProfitDayDefaultValue; } }
      set {
        _hasBits0 |= 64;
        profitDay_ = value;
      }
    }
    /// <summary>Gets whether the "profit_day" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProfitDay {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "profit_day" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProfitDay() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "profit_last_day" field.</summary>
    public const int ProfitLastDayFieldNumber = 8;
    private readonly static long ProfitLastDayDefaultValue = 0L;

    private long profitLastDay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ProfitLastDay {
      get { if ((_hasBits0 & 128) != 0) { return profitLastDay_; } else { return ProfitLastDayDefaultValue; } }
      set {
        _hasBits0 |= 128;
        profitLastDay_ = value;
      }
    }
    /// <summary>Gets whether the "profit_last_day" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProfitLastDay {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "profit_last_day" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProfitLastDay() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "profit_last_week" field.</summary>
    public const int ProfitLastWeekFieldNumber = 9;
    private readonly static long ProfitLastWeekDefaultValue = 0L;

    private long profitLastWeek_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ProfitLastWeek {
      get { if ((_hasBits0 & 256) != 0) { return profitLastWeek_; } else { return ProfitLastWeekDefaultValue; } }
      set {
        _hasBits0 |= 256;
        profitLastWeek_ = value;
      }
    }
    /// <summary>Gets whether the "profit_last_week" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProfitLastWeek {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "profit_last_week" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProfitLastWeek() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "limit_luckydraw" field.</summary>
    public const int LimitLuckydrawFieldNumber = 10;
    private readonly static bool LimitLuckydrawDefaultValue = false;

    private bool limitLuckydraw_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LimitLuckydraw {
      get { if ((_hasBits0 & 512) != 0) { return limitLuckydraw_; } else { return LimitLuckydrawDefaultValue; } }
      set {
        _hasBits0 |= 512;
        limitLuckydraw_ = value;
      }
    }
    /// <summary>Gets whether the "limit_luckydraw" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimitLuckydraw {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "limit_luckydraw" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimitLuckydraw() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "limit_colorgame" field.</summary>
    public const int LimitColorgameFieldNumber = 11;
    private readonly static bool LimitColorgameDefaultValue = false;

    private bool limitColorgame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LimitColorgame {
      get { if ((_hasBits0 & 1024) != 0) { return limitColorgame_; } else { return LimitColorgameDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        limitColorgame_ = value;
      }
    }
    /// <summary>Gets whether the "limit_colorgame" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimitColorgame {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "limit_colorgame" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimitColorgame() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "limit_jackpot" field.</summary>
    public const int LimitJackpotFieldNumber = 12;
    private readonly static bool LimitJackpotDefaultValue = false;

    private bool limitJackpot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LimitJackpot {
      get { if ((_hasBits0 & 2048) != 0) { return limitJackpot_; } else { return LimitJackpotDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        limitJackpot_ = value;
      }
    }
    /// <summary>Gets whether the "limit_jackpot" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimitJackpot {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "limit_jackpot" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimitJackpot() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "limit_evchop" field.</summary>
    public const int LimitEvchopFieldNumber = 13;
    private readonly static bool LimitEvchopDefaultValue = false;

    private bool limitEvchop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LimitEvchop {
      get { if ((_hasBits0 & 4096) != 0) { return limitEvchop_; } else { return LimitEvchopDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        limitEvchop_ = value;
      }
    }
    /// <summary>Gets whether the "limit_evchop" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimitEvchop {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "limit_evchop" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimitEvchop() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "luckydraw_weekly_profit" field.</summary>
    public const int LuckydrawWeeklyProfitFieldNumber = 14;
    private readonly static long LuckydrawWeeklyProfitDefaultValue = 0L;

    private long luckydrawWeeklyProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LuckydrawWeeklyProfit {
      get { if ((_hasBits0 & 8192) != 0) { return luckydrawWeeklyProfit_; } else { return LuckydrawWeeklyProfitDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        luckydrawWeeklyProfit_ = value;
      }
    }
    /// <summary>Gets whether the "luckydraw_weekly_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLuckydrawWeeklyProfit {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "luckydraw_weekly_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLuckydrawWeeklyProfit() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "luckydraw_daily_profit" field.</summary>
    public const int LuckydrawDailyProfitFieldNumber = 15;
    private readonly static long LuckydrawDailyProfitDefaultValue = 0L;

    private long luckydrawDailyProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LuckydrawDailyProfit {
      get { if ((_hasBits0 & 16384) != 0) { return luckydrawDailyProfit_; } else { return LuckydrawDailyProfitDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        luckydrawDailyProfit_ = value;
      }
    }
    /// <summary>Gets whether the "luckydraw_daily_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLuckydrawDailyProfit {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "luckydraw_daily_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLuckydrawDailyProfit() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "colorgame_weekly_profit" field.</summary>
    public const int ColorgameWeeklyProfitFieldNumber = 16;
    private readonly static long ColorgameWeeklyProfitDefaultValue = 0L;

    private long colorgameWeeklyProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ColorgameWeeklyProfit {
      get { if ((_hasBits0 & 32768) != 0) { return colorgameWeeklyProfit_; } else { return ColorgameWeeklyProfitDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        colorgameWeeklyProfit_ = value;
      }
    }
    /// <summary>Gets whether the "colorgame_weekly_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasColorgameWeeklyProfit {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "colorgame_weekly_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearColorgameWeeklyProfit() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "colorgame_daily_profit" field.</summary>
    public const int ColorgameDailyProfitFieldNumber = 17;
    private readonly static long ColorgameDailyProfitDefaultValue = 0L;

    private long colorgameDailyProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ColorgameDailyProfit {
      get { if ((_hasBits0 & 65536) != 0) { return colorgameDailyProfit_; } else { return ColorgameDailyProfitDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        colorgameDailyProfit_ = value;
      }
    }
    /// <summary>Gets whether the "colorgame_daily_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasColorgameDailyProfit {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "colorgame_daily_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearColorgameDailyProfit() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "jackpot_weekly_profit" field.</summary>
    public const int JackpotWeeklyProfitFieldNumber = 18;
    private readonly static long JackpotWeeklyProfitDefaultValue = 0L;

    private long jackpotWeeklyProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long JackpotWeeklyProfit {
      get { if ((_hasBits0 & 131072) != 0) { return jackpotWeeklyProfit_; } else { return JackpotWeeklyProfitDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        jackpotWeeklyProfit_ = value;
      }
    }
    /// <summary>Gets whether the "jackpot_weekly_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasJackpotWeeklyProfit {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "jackpot_weekly_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearJackpotWeeklyProfit() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "jackpot_daily_profit" field.</summary>
    public const int JackpotDailyProfitFieldNumber = 19;
    private readonly static long JackpotDailyProfitDefaultValue = 0L;

    private long jackpotDailyProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long JackpotDailyProfit {
      get { if ((_hasBits0 & 262144) != 0) { return jackpotDailyProfit_; } else { return JackpotDailyProfitDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        jackpotDailyProfit_ = value;
      }
    }
    /// <summary>Gets whether the "jackpot_daily_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasJackpotDailyProfit {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "jackpot_daily_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearJackpotDailyProfit() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "evchop_weekly_profit" field.</summary>
    public const int EvchopWeeklyProfitFieldNumber = 20;
    private readonly static long EvchopWeeklyProfitDefaultValue = 0L;

    private long evchopWeeklyProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EvchopWeeklyProfit {
      get { if ((_hasBits0 & 524288) != 0) { return evchopWeeklyProfit_; } else { return EvchopWeeklyProfitDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        evchopWeeklyProfit_ = value;
      }
    }
    /// <summary>Gets whether the "evchop_weekly_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEvchopWeeklyProfit {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "evchop_weekly_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEvchopWeeklyProfit() {
      _hasBits0 &= ~524288;
    }

    /// <summary>Field number for the "evchop_daily_profit" field.</summary>
    public const int EvchopDailyProfitFieldNumber = 21;
    private readonly static long EvchopDailyProfitDefaultValue = 0L;

    private long evchopDailyProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EvchopDailyProfit {
      get { if ((_hasBits0 & 1048576) != 0) { return evchopDailyProfit_; } else { return EvchopDailyProfitDefaultValue; } }
      set {
        _hasBits0 |= 1048576;
        evchopDailyProfit_ = value;
      }
    }
    /// <summary>Gets whether the "evchop_daily_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEvchopDailyProfit {
      get { return (_hasBits0 & 1048576) != 0; }
    }
    /// <summary>Clears the value of the "evchop_daily_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEvchopDailyProfit() {
      _hasBits0 &= ~1048576;
    }

    /// <summary>Field number for the "others_weekly_profit" field.</summary>
    public const int OthersWeeklyProfitFieldNumber = 22;
    private readonly static long OthersWeeklyProfitDefaultValue = 0L;

    private long othersWeeklyProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long OthersWeeklyProfit {
      get { if ((_hasBits0 & 2097152) != 0) { return othersWeeklyProfit_; } else { return OthersWeeklyProfitDefaultValue; } }
      set {
        _hasBits0 |= 2097152;
        othersWeeklyProfit_ = value;
      }
    }
    /// <summary>Gets whether the "others_weekly_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOthersWeeklyProfit {
      get { return (_hasBits0 & 2097152) != 0; }
    }
    /// <summary>Clears the value of the "others_weekly_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOthersWeeklyProfit() {
      _hasBits0 &= ~2097152;
    }

    /// <summary>Field number for the "others_daily_profit" field.</summary>
    public const int OthersDailyProfitFieldNumber = 23;
    private readonly static long OthersDailyProfitDefaultValue = 0L;

    private long othersDailyProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long OthersDailyProfit {
      get { if ((_hasBits0 & 4194304) != 0) { return othersDailyProfit_; } else { return OthersDailyProfitDefaultValue; } }
      set {
        _hasBits0 |= 4194304;
        othersDailyProfit_ = value;
      }
    }
    /// <summary>Gets whether the "others_daily_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOthersDailyProfit {
      get { return (_hasBits0 & 4194304) != 0; }
    }
    /// <summary>Clears the value of the "others_daily_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOthersDailyProfit() {
      _hasBits0 &= ~4194304;
    }

    /// <summary>Field number for the "luckydraw_last_weekly_profit" field.</summary>
    public const int LuckydrawLastWeeklyProfitFieldNumber = 24;
    private readonly static long LuckydrawLastWeeklyProfitDefaultValue = 0L;

    private long luckydrawLastWeeklyProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LuckydrawLastWeeklyProfit {
      get { if ((_hasBits0 & 8388608) != 0) { return luckydrawLastWeeklyProfit_; } else { return LuckydrawLastWeeklyProfitDefaultValue; } }
      set {
        _hasBits0 |= 8388608;
        luckydrawLastWeeklyProfit_ = value;
      }
    }
    /// <summary>Gets whether the "luckydraw_last_weekly_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLuckydrawLastWeeklyProfit {
      get { return (_hasBits0 & 8388608) != 0; }
    }
    /// <summary>Clears the value of the "luckydraw_last_weekly_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLuckydrawLastWeeklyProfit() {
      _hasBits0 &= ~8388608;
    }

    /// <summary>Field number for the "luckydraw_last_daily_profit" field.</summary>
    public const int LuckydrawLastDailyProfitFieldNumber = 25;
    private readonly static long LuckydrawLastDailyProfitDefaultValue = 0L;

    private long luckydrawLastDailyProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LuckydrawLastDailyProfit {
      get { if ((_hasBits0 & 16777216) != 0) { return luckydrawLastDailyProfit_; } else { return LuckydrawLastDailyProfitDefaultValue; } }
      set {
        _hasBits0 |= 16777216;
        luckydrawLastDailyProfit_ = value;
      }
    }
    /// <summary>Gets whether the "luckydraw_last_daily_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLuckydrawLastDailyProfit {
      get { return (_hasBits0 & 16777216) != 0; }
    }
    /// <summary>Clears the value of the "luckydraw_last_daily_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLuckydrawLastDailyProfit() {
      _hasBits0 &= ~16777216;
    }

    /// <summary>Field number for the "colorgame_last_weekly_profit" field.</summary>
    public const int ColorgameLastWeeklyProfitFieldNumber = 26;
    private readonly static long ColorgameLastWeeklyProfitDefaultValue = 0L;

    private long colorgameLastWeeklyProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ColorgameLastWeeklyProfit {
      get { if ((_hasBits0 & 33554432) != 0) { return colorgameLastWeeklyProfit_; } else { return ColorgameLastWeeklyProfitDefaultValue; } }
      set {
        _hasBits0 |= 33554432;
        colorgameLastWeeklyProfit_ = value;
      }
    }
    /// <summary>Gets whether the "colorgame_last_weekly_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasColorgameLastWeeklyProfit {
      get { return (_hasBits0 & 33554432) != 0; }
    }
    /// <summary>Clears the value of the "colorgame_last_weekly_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearColorgameLastWeeklyProfit() {
      _hasBits0 &= ~33554432;
    }

    /// <summary>Field number for the "colorgame_last_daily_profit" field.</summary>
    public const int ColorgameLastDailyProfitFieldNumber = 27;
    private readonly static long ColorgameLastDailyProfitDefaultValue = 0L;

    private long colorgameLastDailyProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ColorgameLastDailyProfit {
      get { if ((_hasBits0 & 67108864) != 0) { return colorgameLastDailyProfit_; } else { return ColorgameLastDailyProfitDefaultValue; } }
      set {
        _hasBits0 |= 67108864;
        colorgameLastDailyProfit_ = value;
      }
    }
    /// <summary>Gets whether the "colorgame_last_daily_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasColorgameLastDailyProfit {
      get { return (_hasBits0 & 67108864) != 0; }
    }
    /// <summary>Clears the value of the "colorgame_last_daily_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearColorgameLastDailyProfit() {
      _hasBits0 &= ~67108864;
    }

    /// <summary>Field number for the "jackpot_last_weekly_profit" field.</summary>
    public const int JackpotLastWeeklyProfitFieldNumber = 28;
    private readonly static long JackpotLastWeeklyProfitDefaultValue = 0L;

    private long jackpotLastWeeklyProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long JackpotLastWeeklyProfit {
      get { if ((_hasBits0 & 134217728) != 0) { return jackpotLastWeeklyProfit_; } else { return JackpotLastWeeklyProfitDefaultValue; } }
      set {
        _hasBits0 |= 134217728;
        jackpotLastWeeklyProfit_ = value;
      }
    }
    /// <summary>Gets whether the "jackpot_last_weekly_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasJackpotLastWeeklyProfit {
      get { return (_hasBits0 & 134217728) != 0; }
    }
    /// <summary>Clears the value of the "jackpot_last_weekly_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearJackpotLastWeeklyProfit() {
      _hasBits0 &= ~134217728;
    }

    /// <summary>Field number for the "jackpot_last_daily_profit" field.</summary>
    public const int JackpotLastDailyProfitFieldNumber = 29;
    private readonly static long JackpotLastDailyProfitDefaultValue = 0L;

    private long jackpotLastDailyProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long JackpotLastDailyProfit {
      get { if ((_hasBits0 & 268435456) != 0) { return jackpotLastDailyProfit_; } else { return JackpotLastDailyProfitDefaultValue; } }
      set {
        _hasBits0 |= 268435456;
        jackpotLastDailyProfit_ = value;
      }
    }
    /// <summary>Gets whether the "jackpot_last_daily_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasJackpotLastDailyProfit {
      get { return (_hasBits0 & 268435456) != 0; }
    }
    /// <summary>Clears the value of the "jackpot_last_daily_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearJackpotLastDailyProfit() {
      _hasBits0 &= ~268435456;
    }

    /// <summary>Field number for the "evchop_last_weekly_profit" field.</summary>
    public const int EvchopLastWeeklyProfitFieldNumber = 30;
    private readonly static long EvchopLastWeeklyProfitDefaultValue = 0L;

    private long evchopLastWeeklyProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EvchopLastWeeklyProfit {
      get { if ((_hasBits0 & 536870912) != 0) { return evchopLastWeeklyProfit_; } else { return EvchopLastWeeklyProfitDefaultValue; } }
      set {
        _hasBits0 |= 536870912;
        evchopLastWeeklyProfit_ = value;
      }
    }
    /// <summary>Gets whether the "evchop_last_weekly_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEvchopLastWeeklyProfit {
      get { return (_hasBits0 & 536870912) != 0; }
    }
    /// <summary>Clears the value of the "evchop_last_weekly_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEvchopLastWeeklyProfit() {
      _hasBits0 &= ~536870912;
    }

    /// <summary>Field number for the "evchop_last_daily_profit" field.</summary>
    public const int EvchopLastDailyProfitFieldNumber = 31;
    private readonly static long EvchopLastDailyProfitDefaultValue = 0L;

    private long evchopLastDailyProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EvchopLastDailyProfit {
      get { if ((_hasBits0 & 1073741824) != 0) { return evchopLastDailyProfit_; } else { return EvchopLastDailyProfitDefaultValue; } }
      set {
        _hasBits0 |= 1073741824;
        evchopLastDailyProfit_ = value;
      }
    }
    /// <summary>Gets whether the "evchop_last_daily_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEvchopLastDailyProfit {
      get { return (_hasBits0 & 1073741824) != 0; }
    }
    /// <summary>Clears the value of the "evchop_last_daily_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEvchopLastDailyProfit() {
      _hasBits0 &= ~1073741824;
    }

    /// <summary>Field number for the "others_last_weekly_profit" field.</summary>
    public const int OthersLastWeeklyProfitFieldNumber = 32;
    private readonly static long OthersLastWeeklyProfitDefaultValue = 0L;

    private long othersLastWeeklyProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long OthersLastWeeklyProfit {
      get { if ((_hasBits0 & -2147483648) != 0) { return othersLastWeeklyProfit_; } else { return OthersLastWeeklyProfitDefaultValue; } }
      set {
        _hasBits0 |= -2147483648;
        othersLastWeeklyProfit_ = value;
      }
    }
    /// <summary>Gets whether the "others_last_weekly_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOthersLastWeeklyProfit {
      get { return (_hasBits0 & -2147483648) != 0; }
    }
    /// <summary>Clears the value of the "others_last_weekly_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOthersLastWeeklyProfit() {
      _hasBits0 &= ~-2147483648;
    }

    /// <summary>Field number for the "others_last_daily_profit" field.</summary>
    public const int OthersLastDailyProfitFieldNumber = 33;
    private readonly static long OthersLastDailyProfitDefaultValue = 0L;

    private long othersLastDailyProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long OthersLastDailyProfit {
      get { if ((_hasBits1 & 1) != 0) { return othersLastDailyProfit_; } else { return OthersLastDailyProfitDefaultValue; } }
      set {
        _hasBits1 |= 1;
        othersLastDailyProfit_ = value;
      }
    }
    /// <summary>Gets whether the "others_last_daily_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOthersLastDailyProfit {
      get { return (_hasBits1 & 1) != 0; }
    }
    /// <summary>Clears the value of the "others_last_daily_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOthersLastDailyProfit() {
      _hasBits1 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubAgentStatusRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubAgentStatusRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (SuspendStatus != other.SuspendStatus) return false;
      if (Autoban != other.Autoban) return false;
      if (AutobanType != other.AutobanType) return false;
      if (AutobanLimit != other.AutobanLimit) return false;
      if (ProfitWeek != other.ProfitWeek) return false;
      if (ProfitDay != other.ProfitDay) return false;
      if (ProfitLastDay != other.ProfitLastDay) return false;
      if (ProfitLastWeek != other.ProfitLastWeek) return false;
      if (LimitLuckydraw != other.LimitLuckydraw) return false;
      if (LimitColorgame != other.LimitColorgame) return false;
      if (LimitJackpot != other.LimitJackpot) return false;
      if (LimitEvchop != other.LimitEvchop) return false;
      if (LuckydrawWeeklyProfit != other.LuckydrawWeeklyProfit) return false;
      if (LuckydrawDailyProfit != other.LuckydrawDailyProfit) return false;
      if (ColorgameWeeklyProfit != other.ColorgameWeeklyProfit) return false;
      if (ColorgameDailyProfit != other.ColorgameDailyProfit) return false;
      if (JackpotWeeklyProfit != other.JackpotWeeklyProfit) return false;
      if (JackpotDailyProfit != other.JackpotDailyProfit) return false;
      if (EvchopWeeklyProfit != other.EvchopWeeklyProfit) return false;
      if (EvchopDailyProfit != other.EvchopDailyProfit) return false;
      if (OthersWeeklyProfit != other.OthersWeeklyProfit) return false;
      if (OthersDailyProfit != other.OthersDailyProfit) return false;
      if (LuckydrawLastWeeklyProfit != other.LuckydrawLastWeeklyProfit) return false;
      if (LuckydrawLastDailyProfit != other.LuckydrawLastDailyProfit) return false;
      if (ColorgameLastWeeklyProfit != other.ColorgameLastWeeklyProfit) return false;
      if (ColorgameLastDailyProfit != other.ColorgameLastDailyProfit) return false;
      if (JackpotLastWeeklyProfit != other.JackpotLastWeeklyProfit) return false;
      if (JackpotLastDailyProfit != other.JackpotLastDailyProfit) return false;
      if (EvchopLastWeeklyProfit != other.EvchopLastWeeklyProfit) return false;
      if (EvchopLastDailyProfit != other.EvchopLastDailyProfit) return false;
      if (OthersLastWeeklyProfit != other.OthersLastWeeklyProfit) return false;
      if (OthersLastDailyProfit != other.OthersLastDailyProfit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasSuspendStatus) hash ^= SuspendStatus.GetHashCode();
      if (HasAutoban) hash ^= Autoban.GetHashCode();
      if (HasAutobanType) hash ^= AutobanType.GetHashCode();
      if (HasAutobanLimit) hash ^= AutobanLimit.GetHashCode();
      if (HasProfitWeek) hash ^= ProfitWeek.GetHashCode();
      if (HasProfitDay) hash ^= ProfitDay.GetHashCode();
      if (HasProfitLastDay) hash ^= ProfitLastDay.GetHashCode();
      if (HasProfitLastWeek) hash ^= ProfitLastWeek.GetHashCode();
      if (HasLimitLuckydraw) hash ^= LimitLuckydraw.GetHashCode();
      if (HasLimitColorgame) hash ^= LimitColorgame.GetHashCode();
      if (HasLimitJackpot) hash ^= LimitJackpot.GetHashCode();
      if (HasLimitEvchop) hash ^= LimitEvchop.GetHashCode();
      if (HasLuckydrawWeeklyProfit) hash ^= LuckydrawWeeklyProfit.GetHashCode();
      if (HasLuckydrawDailyProfit) hash ^= LuckydrawDailyProfit.GetHashCode();
      if (HasColorgameWeeklyProfit) hash ^= ColorgameWeeklyProfit.GetHashCode();
      if (HasColorgameDailyProfit) hash ^= ColorgameDailyProfit.GetHashCode();
      if (HasJackpotWeeklyProfit) hash ^= JackpotWeeklyProfit.GetHashCode();
      if (HasJackpotDailyProfit) hash ^= JackpotDailyProfit.GetHashCode();
      if (HasEvchopWeeklyProfit) hash ^= EvchopWeeklyProfit.GetHashCode();
      if (HasEvchopDailyProfit) hash ^= EvchopDailyProfit.GetHashCode();
      if (HasOthersWeeklyProfit) hash ^= OthersWeeklyProfit.GetHashCode();
      if (HasOthersDailyProfit) hash ^= OthersDailyProfit.GetHashCode();
      if (HasLuckydrawLastWeeklyProfit) hash ^= LuckydrawLastWeeklyProfit.GetHashCode();
      if (HasLuckydrawLastDailyProfit) hash ^= LuckydrawLastDailyProfit.GetHashCode();
      if (HasColorgameLastWeeklyProfit) hash ^= ColorgameLastWeeklyProfit.GetHashCode();
      if (HasColorgameLastDailyProfit) hash ^= ColorgameLastDailyProfit.GetHashCode();
      if (HasJackpotLastWeeklyProfit) hash ^= JackpotLastWeeklyProfit.GetHashCode();
      if (HasJackpotLastDailyProfit) hash ^= JackpotLastDailyProfit.GetHashCode();
      if (HasEvchopLastWeeklyProfit) hash ^= EvchopLastWeeklyProfit.GetHashCode();
      if (HasEvchopLastDailyProfit) hash ^= EvchopLastDailyProfit.GetHashCode();
      if (HasOthersLastWeeklyProfit) hash ^= OthersLastWeeklyProfit.GetHashCode();
      if (HasOthersLastDailyProfit) hash ^= OthersLastDailyProfit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasSuspendStatus) {
        output.WriteRawTag(16);
        output.WriteBool(SuspendStatus);
      }
      if (HasAutoban) {
        output.WriteRawTag(24);
        output.WriteBool(Autoban);
      }
      if (HasAutobanType) {
        output.WriteRawTag(32);
        output.WriteInt32(AutobanType);
      }
      if (HasAutobanLimit) {
        output.WriteRawTag(40);
        output.WriteInt64(AutobanLimit);
      }
      if (HasProfitWeek) {
        output.WriteRawTag(48);
        output.WriteInt64(ProfitWeek);
      }
      if (HasProfitDay) {
        output.WriteRawTag(56);
        output.WriteInt64(ProfitDay);
      }
      if (HasProfitLastDay) {
        output.WriteRawTag(64);
        output.WriteInt64(ProfitLastDay);
      }
      if (HasProfitLastWeek) {
        output.WriteRawTag(72);
        output.WriteInt64(ProfitLastWeek);
      }
      if (HasLimitLuckydraw) {
        output.WriteRawTag(80);
        output.WriteBool(LimitLuckydraw);
      }
      if (HasLimitColorgame) {
        output.WriteRawTag(88);
        output.WriteBool(LimitColorgame);
      }
      if (HasLimitJackpot) {
        output.WriteRawTag(96);
        output.WriteBool(LimitJackpot);
      }
      if (HasLimitEvchop) {
        output.WriteRawTag(104);
        output.WriteBool(LimitEvchop);
      }
      if (HasLuckydrawWeeklyProfit) {
        output.WriteRawTag(112);
        output.WriteInt64(LuckydrawWeeklyProfit);
      }
      if (HasLuckydrawDailyProfit) {
        output.WriteRawTag(120);
        output.WriteInt64(LuckydrawDailyProfit);
      }
      if (HasColorgameWeeklyProfit) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(ColorgameWeeklyProfit);
      }
      if (HasColorgameDailyProfit) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(ColorgameDailyProfit);
      }
      if (HasJackpotWeeklyProfit) {
        output.WriteRawTag(144, 1);
        output.WriteInt64(JackpotWeeklyProfit);
      }
      if (HasJackpotDailyProfit) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(JackpotDailyProfit);
      }
      if (HasEvchopWeeklyProfit) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(EvchopWeeklyProfit);
      }
      if (HasEvchopDailyProfit) {
        output.WriteRawTag(168, 1);
        output.WriteInt64(EvchopDailyProfit);
      }
      if (HasOthersWeeklyProfit) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(OthersWeeklyProfit);
      }
      if (HasOthersDailyProfit) {
        output.WriteRawTag(184, 1);
        output.WriteInt64(OthersDailyProfit);
      }
      if (HasLuckydrawLastWeeklyProfit) {
        output.WriteRawTag(192, 1);
        output.WriteInt64(LuckydrawLastWeeklyProfit);
      }
      if (HasLuckydrawLastDailyProfit) {
        output.WriteRawTag(200, 1);
        output.WriteInt64(LuckydrawLastDailyProfit);
      }
      if (HasColorgameLastWeeklyProfit) {
        output.WriteRawTag(208, 1);
        output.WriteInt64(ColorgameLastWeeklyProfit);
      }
      if (HasColorgameLastDailyProfit) {
        output.WriteRawTag(216, 1);
        output.WriteInt64(ColorgameLastDailyProfit);
      }
      if (HasJackpotLastWeeklyProfit) {
        output.WriteRawTag(224, 1);
        output.WriteInt64(JackpotLastWeeklyProfit);
      }
      if (HasJackpotLastDailyProfit) {
        output.WriteRawTag(232, 1);
        output.WriteInt64(JackpotLastDailyProfit);
      }
      if (HasEvchopLastWeeklyProfit) {
        output.WriteRawTag(240, 1);
        output.WriteInt64(EvchopLastWeeklyProfit);
      }
      if (HasEvchopLastDailyProfit) {
        output.WriteRawTag(248, 1);
        output.WriteInt64(EvchopLastDailyProfit);
      }
      if (HasOthersLastWeeklyProfit) {
        output.WriteRawTag(128, 2);
        output.WriteInt64(OthersLastWeeklyProfit);
      }
      if (HasOthersLastDailyProfit) {
        output.WriteRawTag(136, 2);
        output.WriteInt64(OthersLastDailyProfit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasSuspendStatus) {
        output.WriteRawTag(16);
        output.WriteBool(SuspendStatus);
      }
      if (HasAutoban) {
        output.WriteRawTag(24);
        output.WriteBool(Autoban);
      }
      if (HasAutobanType) {
        output.WriteRawTag(32);
        output.WriteInt32(AutobanType);
      }
      if (HasAutobanLimit) {
        output.WriteRawTag(40);
        output.WriteInt64(AutobanLimit);
      }
      if (HasProfitWeek) {
        output.WriteRawTag(48);
        output.WriteInt64(ProfitWeek);
      }
      if (HasProfitDay) {
        output.WriteRawTag(56);
        output.WriteInt64(ProfitDay);
      }
      if (HasProfitLastDay) {
        output.WriteRawTag(64);
        output.WriteInt64(ProfitLastDay);
      }
      if (HasProfitLastWeek) {
        output.WriteRawTag(72);
        output.WriteInt64(ProfitLastWeek);
      }
      if (HasLimitLuckydraw) {
        output.WriteRawTag(80);
        output.WriteBool(LimitLuckydraw);
      }
      if (HasLimitColorgame) {
        output.WriteRawTag(88);
        output.WriteBool(LimitColorgame);
      }
      if (HasLimitJackpot) {
        output.WriteRawTag(96);
        output.WriteBool(LimitJackpot);
      }
      if (HasLimitEvchop) {
        output.WriteRawTag(104);
        output.WriteBool(LimitEvchop);
      }
      if (HasLuckydrawWeeklyProfit) {
        output.WriteRawTag(112);
        output.WriteInt64(LuckydrawWeeklyProfit);
      }
      if (HasLuckydrawDailyProfit) {
        output.WriteRawTag(120);
        output.WriteInt64(LuckydrawDailyProfit);
      }
      if (HasColorgameWeeklyProfit) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(ColorgameWeeklyProfit);
      }
      if (HasColorgameDailyProfit) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(ColorgameDailyProfit);
      }
      if (HasJackpotWeeklyProfit) {
        output.WriteRawTag(144, 1);
        output.WriteInt64(JackpotWeeklyProfit);
      }
      if (HasJackpotDailyProfit) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(JackpotDailyProfit);
      }
      if (HasEvchopWeeklyProfit) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(EvchopWeeklyProfit);
      }
      if (HasEvchopDailyProfit) {
        output.WriteRawTag(168, 1);
        output.WriteInt64(EvchopDailyProfit);
      }
      if (HasOthersWeeklyProfit) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(OthersWeeklyProfit);
      }
      if (HasOthersDailyProfit) {
        output.WriteRawTag(184, 1);
        output.WriteInt64(OthersDailyProfit);
      }
      if (HasLuckydrawLastWeeklyProfit) {
        output.WriteRawTag(192, 1);
        output.WriteInt64(LuckydrawLastWeeklyProfit);
      }
      if (HasLuckydrawLastDailyProfit) {
        output.WriteRawTag(200, 1);
        output.WriteInt64(LuckydrawLastDailyProfit);
      }
      if (HasColorgameLastWeeklyProfit) {
        output.WriteRawTag(208, 1);
        output.WriteInt64(ColorgameLastWeeklyProfit);
      }
      if (HasColorgameLastDailyProfit) {
        output.WriteRawTag(216, 1);
        output.WriteInt64(ColorgameLastDailyProfit);
      }
      if (HasJackpotLastWeeklyProfit) {
        output.WriteRawTag(224, 1);
        output.WriteInt64(JackpotLastWeeklyProfit);
      }
      if (HasJackpotLastDailyProfit) {
        output.WriteRawTag(232, 1);
        output.WriteInt64(JackpotLastDailyProfit);
      }
      if (HasEvchopLastWeeklyProfit) {
        output.WriteRawTag(240, 1);
        output.WriteInt64(EvchopLastWeeklyProfit);
      }
      if (HasEvchopLastDailyProfit) {
        output.WriteRawTag(248, 1);
        output.WriteInt64(EvchopLastDailyProfit);
      }
      if (HasOthersLastWeeklyProfit) {
        output.WriteRawTag(128, 2);
        output.WriteInt64(OthersLastWeeklyProfit);
      }
      if (HasOthersLastDailyProfit) {
        output.WriteRawTag(136, 2);
        output.WriteInt64(OthersLastDailyProfit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasSuspendStatus) {
        size += 1 + 1;
      }
      if (HasAutoban) {
        size += 1 + 1;
      }
      if (HasAutobanType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AutobanType);
      }
      if (HasAutobanLimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AutobanLimit);
      }
      if (HasProfitWeek) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProfitWeek);
      }
      if (HasProfitDay) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProfitDay);
      }
      if (HasProfitLastDay) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProfitLastDay);
      }
      if (HasProfitLastWeek) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProfitLastWeek);
      }
      if (HasLimitLuckydraw) {
        size += 1 + 1;
      }
      if (HasLimitColorgame) {
        size += 1 + 1;
      }
      if (HasLimitJackpot) {
        size += 1 + 1;
      }
      if (HasLimitEvchop) {
        size += 1 + 1;
      }
      if (HasLuckydrawWeeklyProfit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LuckydrawWeeklyProfit);
      }
      if (HasLuckydrawDailyProfit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LuckydrawDailyProfit);
      }
      if (HasColorgameWeeklyProfit) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(ColorgameWeeklyProfit);
      }
      if (HasColorgameDailyProfit) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(ColorgameDailyProfit);
      }
      if (HasJackpotWeeklyProfit) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(JackpotWeeklyProfit);
      }
      if (HasJackpotDailyProfit) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(JackpotDailyProfit);
      }
      if (HasEvchopWeeklyProfit) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(EvchopWeeklyProfit);
      }
      if (HasEvchopDailyProfit) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(EvchopDailyProfit);
      }
      if (HasOthersWeeklyProfit) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(OthersWeeklyProfit);
      }
      if (HasOthersDailyProfit) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(OthersDailyProfit);
      }
      if (HasLuckydrawLastWeeklyProfit) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(LuckydrawLastWeeklyProfit);
      }
      if (HasLuckydrawLastDailyProfit) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(LuckydrawLastDailyProfit);
      }
      if (HasColorgameLastWeeklyProfit) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(ColorgameLastWeeklyProfit);
      }
      if (HasColorgameLastDailyProfit) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(ColorgameLastDailyProfit);
      }
      if (HasJackpotLastWeeklyProfit) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(JackpotLastWeeklyProfit);
      }
      if (HasJackpotLastDailyProfit) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(JackpotLastDailyProfit);
      }
      if (HasEvchopLastWeeklyProfit) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(EvchopLastWeeklyProfit);
      }
      if (HasEvchopLastDailyProfit) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(EvchopLastDailyProfit);
      }
      if (HasOthersLastWeeklyProfit) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(OthersLastWeeklyProfit);
      }
      if (HasOthersLastDailyProfit) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(OthersLastDailyProfit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubAgentStatusRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasSuspendStatus) {
        SuspendStatus = other.SuspendStatus;
      }
      if (other.HasAutoban) {
        Autoban = other.Autoban;
      }
      if (other.HasAutobanType) {
        AutobanType = other.AutobanType;
      }
      if (other.HasAutobanLimit) {
        AutobanLimit = other.AutobanLimit;
      }
      if (other.HasProfitWeek) {
        ProfitWeek = other.ProfitWeek;
      }
      if (other.HasProfitDay) {
        ProfitDay = other.ProfitDay;
      }
      if (other.HasProfitLastDay) {
        ProfitLastDay = other.ProfitLastDay;
      }
      if (other.HasProfitLastWeek) {
        ProfitLastWeek = other.ProfitLastWeek;
      }
      if (other.HasLimitLuckydraw) {
        LimitLuckydraw = other.LimitLuckydraw;
      }
      if (other.HasLimitColorgame) {
        LimitColorgame = other.LimitColorgame;
      }
      if (other.HasLimitJackpot) {
        LimitJackpot = other.LimitJackpot;
      }
      if (other.HasLimitEvchop) {
        LimitEvchop = other.LimitEvchop;
      }
      if (other.HasLuckydrawWeeklyProfit) {
        LuckydrawWeeklyProfit = other.LuckydrawWeeklyProfit;
      }
      if (other.HasLuckydrawDailyProfit) {
        LuckydrawDailyProfit = other.LuckydrawDailyProfit;
      }
      if (other.HasColorgameWeeklyProfit) {
        ColorgameWeeklyProfit = other.ColorgameWeeklyProfit;
      }
      if (other.HasColorgameDailyProfit) {
        ColorgameDailyProfit = other.ColorgameDailyProfit;
      }
      if (other.HasJackpotWeeklyProfit) {
        JackpotWeeklyProfit = other.JackpotWeeklyProfit;
      }
      if (other.HasJackpotDailyProfit) {
        JackpotDailyProfit = other.JackpotDailyProfit;
      }
      if (other.HasEvchopWeeklyProfit) {
        EvchopWeeklyProfit = other.EvchopWeeklyProfit;
      }
      if (other.HasEvchopDailyProfit) {
        EvchopDailyProfit = other.EvchopDailyProfit;
      }
      if (other.HasOthersWeeklyProfit) {
        OthersWeeklyProfit = other.OthersWeeklyProfit;
      }
      if (other.HasOthersDailyProfit) {
        OthersDailyProfit = other.OthersDailyProfit;
      }
      if (other.HasLuckydrawLastWeeklyProfit) {
        LuckydrawLastWeeklyProfit = other.LuckydrawLastWeeklyProfit;
      }
      if (other.HasLuckydrawLastDailyProfit) {
        LuckydrawLastDailyProfit = other.LuckydrawLastDailyProfit;
      }
      if (other.HasColorgameLastWeeklyProfit) {
        ColorgameLastWeeklyProfit = other.ColorgameLastWeeklyProfit;
      }
      if (other.HasColorgameLastDailyProfit) {
        ColorgameLastDailyProfit = other.ColorgameLastDailyProfit;
      }
      if (other.HasJackpotLastWeeklyProfit) {
        JackpotLastWeeklyProfit = other.JackpotLastWeeklyProfit;
      }
      if (other.HasJackpotLastDailyProfit) {
        JackpotLastDailyProfit = other.JackpotLastDailyProfit;
      }
      if (other.HasEvchopLastWeeklyProfit) {
        EvchopLastWeeklyProfit = other.EvchopLastWeeklyProfit;
      }
      if (other.HasEvchopLastDailyProfit) {
        EvchopLastDailyProfit = other.EvchopLastDailyProfit;
      }
      if (other.HasOthersLastWeeklyProfit) {
        OthersLastWeeklyProfit = other.OthersLastWeeklyProfit;
      }
      if (other.HasOthersLastDailyProfit) {
        OthersLastDailyProfit = other.OthersLastDailyProfit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            SuspendStatus = input.ReadBool();
            break;
          }
          case 24: {
            Autoban = input.ReadBool();
            break;
          }
          case 32: {
            AutobanType = input.ReadInt32();
            break;
          }
          case 40: {
            AutobanLimit = input.ReadInt64();
            break;
          }
          case 48: {
            ProfitWeek = input.ReadInt64();
            break;
          }
          case 56: {
            ProfitDay = input.ReadInt64();
            break;
          }
          case 64: {
            ProfitLastDay = input.ReadInt64();
            break;
          }
          case 72: {
            ProfitLastWeek = input.ReadInt64();
            break;
          }
          case 80: {
            LimitLuckydraw = input.ReadBool();
            break;
          }
          case 88: {
            LimitColorgame = input.ReadBool();
            break;
          }
          case 96: {
            LimitJackpot = input.ReadBool();
            break;
          }
          case 104: {
            LimitEvchop = input.ReadBool();
            break;
          }
          case 112: {
            LuckydrawWeeklyProfit = input.ReadInt64();
            break;
          }
          case 120: {
            LuckydrawDailyProfit = input.ReadInt64();
            break;
          }
          case 128: {
            ColorgameWeeklyProfit = input.ReadInt64();
            break;
          }
          case 136: {
            ColorgameDailyProfit = input.ReadInt64();
            break;
          }
          case 144: {
            JackpotWeeklyProfit = input.ReadInt64();
            break;
          }
          case 152: {
            JackpotDailyProfit = input.ReadInt64();
            break;
          }
          case 160: {
            EvchopWeeklyProfit = input.ReadInt64();
            break;
          }
          case 168: {
            EvchopDailyProfit = input.ReadInt64();
            break;
          }
          case 176: {
            OthersWeeklyProfit = input.ReadInt64();
            break;
          }
          case 184: {
            OthersDailyProfit = input.ReadInt64();
            break;
          }
          case 192: {
            LuckydrawLastWeeklyProfit = input.ReadInt64();
            break;
          }
          case 200: {
            LuckydrawLastDailyProfit = input.ReadInt64();
            break;
          }
          case 208: {
            ColorgameLastWeeklyProfit = input.ReadInt64();
            break;
          }
          case 216: {
            ColorgameLastDailyProfit = input.ReadInt64();
            break;
          }
          case 224: {
            JackpotLastWeeklyProfit = input.ReadInt64();
            break;
          }
          case 232: {
            JackpotLastDailyProfit = input.ReadInt64();
            break;
          }
          case 240: {
            EvchopLastWeeklyProfit = input.ReadInt64();
            break;
          }
          case 248: {
            EvchopLastDailyProfit = input.ReadInt64();
            break;
          }
          case 256: {
            OthersLastWeeklyProfit = input.ReadInt64();
            break;
          }
          case 264: {
            OthersLastDailyProfit = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            SuspendStatus = input.ReadBool();
            break;
          }
          case 24: {
            Autoban = input.ReadBool();
            break;
          }
          case 32: {
            AutobanType = input.ReadInt32();
            break;
          }
          case 40: {
            AutobanLimit = input.ReadInt64();
            break;
          }
          case 48: {
            ProfitWeek = input.ReadInt64();
            break;
          }
          case 56: {
            ProfitDay = input.ReadInt64();
            break;
          }
          case 64: {
            ProfitLastDay = input.ReadInt64();
            break;
          }
          case 72: {
            ProfitLastWeek = input.ReadInt64();
            break;
          }
          case 80: {
            LimitLuckydraw = input.ReadBool();
            break;
          }
          case 88: {
            LimitColorgame = input.ReadBool();
            break;
          }
          case 96: {
            LimitJackpot = input.ReadBool();
            break;
          }
          case 104: {
            LimitEvchop = input.ReadBool();
            break;
          }
          case 112: {
            LuckydrawWeeklyProfit = input.ReadInt64();
            break;
          }
          case 120: {
            LuckydrawDailyProfit = input.ReadInt64();
            break;
          }
          case 128: {
            ColorgameWeeklyProfit = input.ReadInt64();
            break;
          }
          case 136: {
            ColorgameDailyProfit = input.ReadInt64();
            break;
          }
          case 144: {
            JackpotWeeklyProfit = input.ReadInt64();
            break;
          }
          case 152: {
            JackpotDailyProfit = input.ReadInt64();
            break;
          }
          case 160: {
            EvchopWeeklyProfit = input.ReadInt64();
            break;
          }
          case 168: {
            EvchopDailyProfit = input.ReadInt64();
            break;
          }
          case 176: {
            OthersWeeklyProfit = input.ReadInt64();
            break;
          }
          case 184: {
            OthersDailyProfit = input.ReadInt64();
            break;
          }
          case 192: {
            LuckydrawLastWeeklyProfit = input.ReadInt64();
            break;
          }
          case 200: {
            LuckydrawLastDailyProfit = input.ReadInt64();
            break;
          }
          case 208: {
            ColorgameLastWeeklyProfit = input.ReadInt64();
            break;
          }
          case 216: {
            ColorgameLastDailyProfit = input.ReadInt64();
            break;
          }
          case 224: {
            JackpotLastWeeklyProfit = input.ReadInt64();
            break;
          }
          case 232: {
            JackpotLastDailyProfit = input.ReadInt64();
            break;
          }
          case 240: {
            EvchopLastWeeklyProfit = input.ReadInt64();
            break;
          }
          case 248: {
            EvchopLastDailyProfit = input.ReadInt64();
            break;
          }
          case 256: {
            OthersLastWeeklyProfit = input.ReadInt64();
            break;
          }
          case 264: {
            OthersLastDailyProfit = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubAutoSuspendAgentREQ : pb::IMessage<ClubAutoSuspendAgentREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubAutoSuspendAgentREQ> _parser = new pb::MessageParser<ClubAutoSuspendAgentREQ>(() => new ClubAutoSuspendAgentREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubAutoSuspendAgentREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAutoSuspendAgentREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAutoSuspendAgentREQ(ClubAutoSuspendAgentREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      agentUid_ = other.agentUid_;
      enable_ = other.enable_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAutoSuspendAgentREQ Clone() {
      return new ClubAutoSuspendAgentREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "agent_uid" field.</summary>
    public const int AgentUidFieldNumber = 2;
    private readonly static int AgentUidDefaultValue = 0;

    private int agentUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AgentUid {
      get { if ((_hasBits0 & 1) != 0) { return agentUid_; } else { return AgentUidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        agentUid_ = value;
      }
    }
    /// <summary>Gets whether the "agent_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgentUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "agent_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgentUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "enable" field.</summary>
    public const int EnableFieldNumber = 3;
    private readonly static bool EnableDefaultValue = false;

    private bool enable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Enable {
      get { if ((_hasBits0 & 2) != 0) { return enable_; } else { return EnableDefaultValue; } }
      set {
        _hasBits0 |= 2;
        enable_ = value;
      }
    }
    /// <summary>Gets whether the "enable" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnable {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "enable" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnable() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubAutoSuspendAgentREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubAutoSuspendAgentREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (AgentUid != other.AgentUid) return false;
      if (Enable != other.Enable) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasAgentUid) hash ^= AgentUid.GetHashCode();
      if (HasEnable) hash ^= Enable.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasAgentUid) {
        output.WriteRawTag(16);
        output.WriteInt32(AgentUid);
      }
      if (HasEnable) {
        output.WriteRawTag(24);
        output.WriteBool(Enable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasAgentUid) {
        output.WriteRawTag(16);
        output.WriteInt32(AgentUid);
      }
      if (HasEnable) {
        output.WriteRawTag(24);
        output.WriteBool(Enable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasAgentUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AgentUid);
      }
      if (HasEnable) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubAutoSuspendAgentREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasAgentUid) {
        AgentUid = other.AgentUid;
      }
      if (other.HasEnable) {
        Enable = other.Enable;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            AgentUid = input.ReadInt32();
            break;
          }
          case 24: {
            Enable = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            AgentUid = input.ReadInt32();
            break;
          }
          case 24: {
            Enable = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubAutoSuspendAgentRSP : pb::IMessage<ClubAutoSuspendAgentRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubAutoSuspendAgentRSP> _parser = new pb::MessageParser<ClubAutoSuspendAgentRSP>(() => new ClubAutoSuspendAgentRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubAutoSuspendAgentRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAutoSuspendAgentRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAutoSuspendAgentRSP(ClubAutoSuspendAgentRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAutoSuspendAgentRSP Clone() {
      return new ClubAutoSuspendAgentRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// -1:SQL錯誤 -2:無權限 -3:非agent
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubAutoSuspendAgentRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubAutoSuspendAgentRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubAutoSuspendAgentRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubAutoSuspendAgentLimitREQ : pb::IMessage<ClubAutoSuspendAgentLimitREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubAutoSuspendAgentLimitREQ> _parser = new pb::MessageParser<ClubAutoSuspendAgentLimitREQ>(() => new ClubAutoSuspendAgentLimitREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubAutoSuspendAgentLimitREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAutoSuspendAgentLimitREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAutoSuspendAgentLimitREQ(ClubAutoSuspendAgentLimitREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      agentUid_ = other.agentUid_;
      autobanType_ = other.autobanType_;
      autobanLimit_ = other.autobanLimit_;
      limitLuckydraw_ = other.limitLuckydraw_;
      limitColorgame_ = other.limitColorgame_;
      limitJackpot_ = other.limitJackpot_;
      limitEvchop_ = other.limitEvchop_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAutoSuspendAgentLimitREQ Clone() {
      return new ClubAutoSuspendAgentLimitREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "agent_uid" field.</summary>
    public const int AgentUidFieldNumber = 2;
    private readonly static int AgentUidDefaultValue = 0;

    private int agentUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AgentUid {
      get { if ((_hasBits0 & 1) != 0) { return agentUid_; } else { return AgentUidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        agentUid_ = value;
      }
    }
    /// <summary>Gets whether the "agent_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgentUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "agent_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgentUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "autoban_type" field.</summary>
    public const int AutobanTypeFieldNumber = 3;
    private readonly static int AutobanTypeDefaultValue = 0;

    private int autobanType_;
    /// <summary>
    /// 0: week; 1: day;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AutobanType {
      get { if ((_hasBits0 & 2) != 0) { return autobanType_; } else { return AutobanTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        autobanType_ = value;
      }
    }
    /// <summary>Gets whether the "autoban_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAutobanType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "autoban_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAutobanType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "autoban_limit" field.</summary>
    public const int AutobanLimitFieldNumber = 4;
    private readonly static long AutobanLimitDefaultValue = 0L;

    private long autobanLimit_;
    /// <summary>
    /// 0: 无上限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AutobanLimit {
      get { if ((_hasBits0 & 4) != 0) { return autobanLimit_; } else { return AutobanLimitDefaultValue; } }
      set {
        _hasBits0 |= 4;
        autobanLimit_ = value;
      }
    }
    /// <summary>Gets whether the "autoban_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAutobanLimit {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "autoban_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAutobanLimit() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "limit_luckydraw" field.</summary>
    public const int LimitLuckydrawFieldNumber = 5;
    private readonly static bool LimitLuckydrawDefaultValue = false;

    private bool limitLuckydraw_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LimitLuckydraw {
      get { if ((_hasBits0 & 8) != 0) { return limitLuckydraw_; } else { return LimitLuckydrawDefaultValue; } }
      set {
        _hasBits0 |= 8;
        limitLuckydraw_ = value;
      }
    }
    /// <summary>Gets whether the "limit_luckydraw" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimitLuckydraw {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "limit_luckydraw" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimitLuckydraw() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "limit_colorgame" field.</summary>
    public const int LimitColorgameFieldNumber = 6;
    private readonly static bool LimitColorgameDefaultValue = false;

    private bool limitColorgame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LimitColorgame {
      get { if ((_hasBits0 & 16) != 0) { return limitColorgame_; } else { return LimitColorgameDefaultValue; } }
      set {
        _hasBits0 |= 16;
        limitColorgame_ = value;
      }
    }
    /// <summary>Gets whether the "limit_colorgame" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimitColorgame {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "limit_colorgame" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimitColorgame() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "limit_jackpot" field.</summary>
    public const int LimitJackpotFieldNumber = 7;
    private readonly static bool LimitJackpotDefaultValue = false;

    private bool limitJackpot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LimitJackpot {
      get { if ((_hasBits0 & 32) != 0) { return limitJackpot_; } else { return LimitJackpotDefaultValue; } }
      set {
        _hasBits0 |= 32;
        limitJackpot_ = value;
      }
    }
    /// <summary>Gets whether the "limit_jackpot" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimitJackpot {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "limit_jackpot" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimitJackpot() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "limit_evchop" field.</summary>
    public const int LimitEvchopFieldNumber = 8;
    private readonly static bool LimitEvchopDefaultValue = false;

    private bool limitEvchop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LimitEvchop {
      get { if ((_hasBits0 & 64) != 0) { return limitEvchop_; } else { return LimitEvchopDefaultValue; } }
      set {
        _hasBits0 |= 64;
        limitEvchop_ = value;
      }
    }
    /// <summary>Gets whether the "limit_evchop" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimitEvchop {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "limit_evchop" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimitEvchop() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubAutoSuspendAgentLimitREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubAutoSuspendAgentLimitREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (AgentUid != other.AgentUid) return false;
      if (AutobanType != other.AutobanType) return false;
      if (AutobanLimit != other.AutobanLimit) return false;
      if (LimitLuckydraw != other.LimitLuckydraw) return false;
      if (LimitColorgame != other.LimitColorgame) return false;
      if (LimitJackpot != other.LimitJackpot) return false;
      if (LimitEvchop != other.LimitEvchop) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasAgentUid) hash ^= AgentUid.GetHashCode();
      if (HasAutobanType) hash ^= AutobanType.GetHashCode();
      if (HasAutobanLimit) hash ^= AutobanLimit.GetHashCode();
      if (HasLimitLuckydraw) hash ^= LimitLuckydraw.GetHashCode();
      if (HasLimitColorgame) hash ^= LimitColorgame.GetHashCode();
      if (HasLimitJackpot) hash ^= LimitJackpot.GetHashCode();
      if (HasLimitEvchop) hash ^= LimitEvchop.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasAgentUid) {
        output.WriteRawTag(16);
        output.WriteInt32(AgentUid);
      }
      if (HasAutobanType) {
        output.WriteRawTag(24);
        output.WriteInt32(AutobanType);
      }
      if (HasAutobanLimit) {
        output.WriteRawTag(32);
        output.WriteInt64(AutobanLimit);
      }
      if (HasLimitLuckydraw) {
        output.WriteRawTag(40);
        output.WriteBool(LimitLuckydraw);
      }
      if (HasLimitColorgame) {
        output.WriteRawTag(48);
        output.WriteBool(LimitColorgame);
      }
      if (HasLimitJackpot) {
        output.WriteRawTag(56);
        output.WriteBool(LimitJackpot);
      }
      if (HasLimitEvchop) {
        output.WriteRawTag(64);
        output.WriteBool(LimitEvchop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasAgentUid) {
        output.WriteRawTag(16);
        output.WriteInt32(AgentUid);
      }
      if (HasAutobanType) {
        output.WriteRawTag(24);
        output.WriteInt32(AutobanType);
      }
      if (HasAutobanLimit) {
        output.WriteRawTag(32);
        output.WriteInt64(AutobanLimit);
      }
      if (HasLimitLuckydraw) {
        output.WriteRawTag(40);
        output.WriteBool(LimitLuckydraw);
      }
      if (HasLimitColorgame) {
        output.WriteRawTag(48);
        output.WriteBool(LimitColorgame);
      }
      if (HasLimitJackpot) {
        output.WriteRawTag(56);
        output.WriteBool(LimitJackpot);
      }
      if (HasLimitEvchop) {
        output.WriteRawTag(64);
        output.WriteBool(LimitEvchop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasAgentUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AgentUid);
      }
      if (HasAutobanType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AutobanType);
      }
      if (HasAutobanLimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AutobanLimit);
      }
      if (HasLimitLuckydraw) {
        size += 1 + 1;
      }
      if (HasLimitColorgame) {
        size += 1 + 1;
      }
      if (HasLimitJackpot) {
        size += 1 + 1;
      }
      if (HasLimitEvchop) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubAutoSuspendAgentLimitREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasAgentUid) {
        AgentUid = other.AgentUid;
      }
      if (other.HasAutobanType) {
        AutobanType = other.AutobanType;
      }
      if (other.HasAutobanLimit) {
        AutobanLimit = other.AutobanLimit;
      }
      if (other.HasLimitLuckydraw) {
        LimitLuckydraw = other.LimitLuckydraw;
      }
      if (other.HasLimitColorgame) {
        LimitColorgame = other.LimitColorgame;
      }
      if (other.HasLimitJackpot) {
        LimitJackpot = other.LimitJackpot;
      }
      if (other.HasLimitEvchop) {
        LimitEvchop = other.LimitEvchop;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            AgentUid = input.ReadInt32();
            break;
          }
          case 24: {
            AutobanType = input.ReadInt32();
            break;
          }
          case 32: {
            AutobanLimit = input.ReadInt64();
            break;
          }
          case 40: {
            LimitLuckydraw = input.ReadBool();
            break;
          }
          case 48: {
            LimitColorgame = input.ReadBool();
            break;
          }
          case 56: {
            LimitJackpot = input.ReadBool();
            break;
          }
          case 64: {
            LimitEvchop = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            AgentUid = input.ReadInt32();
            break;
          }
          case 24: {
            AutobanType = input.ReadInt32();
            break;
          }
          case 32: {
            AutobanLimit = input.ReadInt64();
            break;
          }
          case 40: {
            LimitLuckydraw = input.ReadBool();
            break;
          }
          case 48: {
            LimitColorgame = input.ReadBool();
            break;
          }
          case 56: {
            LimitJackpot = input.ReadBool();
            break;
          }
          case 64: {
            LimitEvchop = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubAutoSuspendAgentLimitRSP : pb::IMessage<ClubAutoSuspendAgentLimitRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubAutoSuspendAgentLimitRSP> _parser = new pb::MessageParser<ClubAutoSuspendAgentLimitRSP>(() => new ClubAutoSuspendAgentLimitRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubAutoSuspendAgentLimitRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAutoSuspendAgentLimitRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAutoSuspendAgentLimitRSP(ClubAutoSuspendAgentLimitRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAutoSuspendAgentLimitRSP Clone() {
      return new ClubAutoSuspendAgentLimitRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// -1:SQL錯誤 -2:無權限 -3:非agent
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubAutoSuspendAgentLimitRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubAutoSuspendAgentLimitRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubAutoSuspendAgentLimitRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubRoomParameterFilterREQ : pb::IMessage<ClubRoomParameterFilterREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubRoomParameterFilterREQ> _parser = new pb::MessageParser<ClubRoomParameterFilterREQ>(() => new ClubRoomParameterFilterREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubRoomParameterFilterREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubRoomParameterFilterREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubRoomParameterFilterREQ(ClubRoomParameterFilterREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      threshold_ = other.threshold_;
      target_ = other.target_;
      roomType_ = other.roomType_;
      gameMode_ = other.gameMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubRoomParameterFilterREQ Clone() {
      return new ClubRoomParameterFilterREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 1) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 2;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 2) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "threshold" field.</summary>
    public const int ThresholdFieldNumber = 3;
    private readonly static int ThresholdDefaultValue = 0;

    private int threshold_;
    /// <summary>
    /// 門檻值 篩選大於等於的數值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Threshold {
      get { if ((_hasBits0 & 4) != 0) { return threshold_; } else { return ThresholdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        threshold_ = value;
      }
    }
    /// <summary>Gets whether the "threshold" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasThreshold {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "threshold" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearThreshold() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 4;
    private readonly static int TargetDefaultValue = 0;

    private int target_;
    /// <summary>
    /// 選擇要過濾的對象 0:bb, 1:ante
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Target {
      get { if ((_hasBits0 & 8) != 0) { return target_; } else { return TargetDefaultValue; } }
      set {
        _hasBits0 |= 8;
        target_ = value;
      }
    }
    /// <summary>Gets whether the "target" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTarget {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "target" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTarget() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "room_type" field.</summary>
    public const int RoomTypeFieldNumber = 5;
    private readonly static int RoomTypeDefaultValue = 0;

    private int roomType_;
    /// <summary>
    /// 房間類型 NLH ring game:5, PLO ring game:8,...,其他請參考創房協議
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoomType {
      get { if ((_hasBits0 & 16) != 0) { return roomType_; } else { return RoomTypeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        roomType_ = value;
      }
    }
    /// <summary>Gets whether the "room_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomType {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "room_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomType() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "game_mode" field.</summary>
    public const int GameModeFieldNumber = 6;
    private readonly static int GameModeDefaultValue = 0;

    private int gameMode_;
    /// <summary>
    /// 遊戲類型 regular:0, AOF nlh:508, 3-1 nlh,...,其他請參考創房協議
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameMode {
      get { if ((_hasBits0 & 32) != 0) { return gameMode_; } else { return GameModeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        gameMode_ = value;
      }
    }
    /// <summary>Gets whether the "game_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameMode {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "game_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameMode() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubRoomParameterFilterREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubRoomParameterFilterREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (Threshold != other.Threshold) return false;
      if (Target != other.Target) return false;
      if (RoomType != other.RoomType) return false;
      if (GameMode != other.GameMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasThreshold) hash ^= Threshold.GetHashCode();
      if (HasTarget) hash ^= Target.GetHashCode();
      if (HasRoomType) hash ^= RoomType.GetHashCode();
      if (HasGameMode) hash ^= GameMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(8);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasThreshold) {
        output.WriteRawTag(24);
        output.WriteInt32(Threshold);
      }
      if (HasTarget) {
        output.WriteRawTag(32);
        output.WriteInt32(Target);
      }
      if (HasRoomType) {
        output.WriteRawTag(40);
        output.WriteInt32(RoomType);
      }
      if (HasGameMode) {
        output.WriteRawTag(48);
        output.WriteInt32(GameMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(8);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasThreshold) {
        output.WriteRawTag(24);
        output.WriteInt32(Threshold);
      }
      if (HasTarget) {
        output.WriteRawTag(32);
        output.WriteInt32(Target);
      }
      if (HasRoomType) {
        output.WriteRawTag(40);
        output.WriteInt32(RoomType);
      }
      if (HasGameMode) {
        output.WriteRawTag(48);
        output.WriteInt32(GameMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasThreshold) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Threshold);
      }
      if (HasTarget) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Target);
      }
      if (HasRoomType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomType);
      }
      if (HasGameMode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubRoomParameterFilterREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasThreshold) {
        Threshold = other.Threshold;
      }
      if (other.HasTarget) {
        Target = other.Target;
      }
      if (other.HasRoomType) {
        RoomType = other.RoomType;
      }
      if (other.HasGameMode) {
        GameMode = other.GameMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Clubid = input.ReadInt32();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            Threshold = input.ReadInt32();
            break;
          }
          case 32: {
            Target = input.ReadInt32();
            break;
          }
          case 40: {
            RoomType = input.ReadInt32();
            break;
          }
          case 48: {
            GameMode = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Clubid = input.ReadInt32();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            Threshold = input.ReadInt32();
            break;
          }
          case 32: {
            Target = input.ReadInt32();
            break;
          }
          case 40: {
            RoomType = input.ReadInt32();
            break;
          }
          case 48: {
            GameMode = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubRoomParameterFilterRSP : pb::IMessage<ClubRoomParameterFilterRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubRoomParameterFilterRSP> _parser = new pb::MessageParser<ClubRoomParameterFilterRSP>(() => new ClubRoomParameterFilterRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubRoomParameterFilterRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club3Reflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubRoomParameterFilterRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubRoomParameterFilterRSP(ClubRoomParameterFilterRSP other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      code_ = other.code_;
      roomNum_ = other.roomNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubRoomParameterFilterRSP Clone() {
      return new ClubRoomParameterFilterRSP(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 1) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 2;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 2) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 3;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// 0:成功, -1:BB/ante不合法, -2:其他失敗
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 4) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "room_num" field.</summary>
    public const int RoomNumFieldNumber = 4;
    private readonly static int RoomNumDefaultValue = 0;

    private int roomNum_;
    /// <summary>
    /// room_num個一般房間符合過濾條件(大於等於threshold)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoomNum {
      get { if ((_hasBits0 & 8) != 0) { return roomNum_; } else { return RoomNumDefaultValue; } }
      set {
        _hasBits0 |= 8;
        roomNum_ = value;
      }
    }
    /// <summary>Gets whether the "room_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomNum {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "room_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomNum() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubRoomParameterFilterRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubRoomParameterFilterRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (Code != other.Code) return false;
      if (RoomNum != other.RoomNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasRoomNum) hash ^= RoomNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(8);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasCode) {
        output.WriteRawTag(24);
        output.WriteInt32(Code);
      }
      if (HasRoomNum) {
        output.WriteRawTag(32);
        output.WriteInt32(RoomNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(8);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasCode) {
        output.WriteRawTag(24);
        output.WriteInt32(Code);
      }
      if (HasRoomNum) {
        output.WriteRawTag(32);
        output.WriteInt32(RoomNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasRoomNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubRoomParameterFilterRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasRoomNum) {
        RoomNum = other.RoomNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Clubid = input.ReadInt32();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            Code = input.ReadInt32();
            break;
          }
          case 32: {
            RoomNum = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Clubid = input.ReadInt32();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            Code = input.ReadInt32();
            break;
          }
          case 32: {
            RoomNum = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
