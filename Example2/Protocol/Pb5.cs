// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: pb5.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Texas.Protocol {

  /// <summary>Holder for reflection information generated from pb5.proto</summary>
  public static partial class Pb5Reflection {

    #region Descriptor
    /// <summary>File descriptor for pb5.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Pb5Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglwYjUucHJvdG8aDnByZV9iYXNlLnByb3RvGgpiYXNlLnByb3RvGglwYjEu",
            "cHJvdG8aCnBpbmUucHJvdG8aCHRwLnByb3RvGgtwdXNveS5wcm90bxoQbHVj",
            "a3lfZHJhdy5wcm90bxoPY29sb3JnYW1lLnByb3RvGg10b25naXRzLnByb3Rv",
            "IvYBCgxMZWF2ZVJvb21SU1ASEQoEY29kZRgBIAEoBUgAiAEBEhMKBnJlYXNv",
            "bhgCIAEoCUgBiAEBEhEKBGZsYWcYAyABKAVIAogBARITCgZjbHViaWQYBCAB",
            "KAVIA4gBARIVCghsZWFndWVpZBgFIAEoBUgEiAEBEhoKDWNsaWVudF9jbHVi",
            "aWQYBiABKAVIBYgBARISCgVsZWF2ZRgHIAEoCEgGiAEBQgcKBV9jb2RlQgkK",
            "B19yZWFzb25CBwoFX2ZsYWdCCQoHX2NsdWJpZEILCglfbGVhZ3VlaWRCEAoO",
            "X2NsaWVudF9jbHViaWRCCAoGX2xlYXZlIsoBCgxMZWF2ZVJvb21SRVESEQoE",
            "ZmxhZxgBIAEoBUgAiAEBEhkKDHNlYXRfcmVzZXJ2ZRgCIAEoCEgBiAEBEhoK",
            "DWNsaWVudF9jbHViaWQYAyABKAVIAogBARISCgVsZWF2ZRgEIAEoCEgDiAEB",
            "EhcKCmxlYXZlX3R5cGUYBSABKAVIBIgBAUIHCgVfZmxhZ0IPCg1fc2VhdF9y",
            "ZXNlcnZlQhAKDl9jbGllbnRfY2x1YmlkQggKBl9sZWF2ZUINCgtfbGVhdmVf",
            "dHlwZSL3AQoPQWN0aW9uTm90aWZ5QlJDEhMKBnNlYXRpZBgBIAEoBUgAiAEB",
            "EhwKB2FjdGlvbnMYAiADKA4yCy5BY3Rpb25UeXBlEhAKA2JldBgDIAEoA0gB",
            "iAEBEhEKBGNhbGwYBCABKANIAogBARIWCgltaW5fcmFpc2UYBSABKANIA4gB",
            "ARIWCgltYXhfcmFpc2UYBiABKANIBIgBARIWCglsZWZ0X3RpbWUYByABKANI",
            "BYgBAUIJCgdfc2VhdGlkQgYKBF9iZXRCBwoFX2NhbGxCDAoKX21pbl9yYWlz",
            "ZUIMCgpfbWF4X3JhaXNlQgwKCl9sZWZ0X3RpbWUiQgoUUXVpdE11bHRpcGxl",
            "VGFibGVSRVESDgoGcm9vbWlkGAEgAygFEhEKBGZsYWcYAiABKAVIAIgBAUIH",
            "CgVfZmxhZyJOChRRdWl0TXVsdGlwbGVUYWJsZVJTUBIRCgRjb2RlGAEgASgF",
            "SACIAQESEQoEZmxhZxgCIAEoBUgBiAEBQgcKBV9jb2RlQgcKBV9mbGFnIhkK",
            "F1F1aXRBbGxNdWx0aXBsZVRhYmxlUkVRIjUKF1F1aXRBbGxNdWx0aXBsZVRh",
            "YmxlUlNQEhEKBGNvZGUYASABKAVIAIgBAUIHCgVfY29kZSIbChlSb3VuZEhp",
            "bnRNdWx0aXBsZVRhYmxlUkVRIvEDChlSb3VuZEhpbnRNdWx0aXBsZVRhYmxl",
            "UlNQEhUKCHJvb210eXBlGAEgASgNSACIAQESEgoFYmxpbmQYAiABKAVIAYgB",
            "ARIRCgRhbnRlGAMgASgFSAKIAQESEwoGcm9vbWlkGAQgASgFSAOIAQESEwoG",
            "Y2x1YmlkGAUgASgFSASIAQESEwoGc2VhdGlkGAYgASgFSAWIAQESFgoJbGFz",
            "dF90aW1lGAcgASgFSAaIAQESFgoJcm9vbV9uYW1lGAggASgJSAeIAQESFgoJ",
            "Y2x1Yl9uYW1lGAkgASgJSAiIAQESFQoIc2VhdF9udW0YCiABKAVICYgBARIh",
            "Cglyb29tX21vZGUYCyABKA4yCS5Sb29tTW9kZUgKiAEBEiEKCWdhbWVfbW9k",
            "ZRgNIAEoDjIJLkdhbWVNb2RlSAuIAQESEwoGcHBzcmlkGA4gASgFSAyIAQFC",
            "CwoJX3Jvb210eXBlQggKBl9ibGluZEIHCgVfYW50ZUIJCgdfcm9vbWlkQgkK",
            "B19jbHViaWRCCQoHX3NlYXRpZEIMCgpfbGFzdF90aW1lQgwKCl9yb29tX25h",
            "bWVCDAoKX2NsdWJfbmFtZUILCglfc2VhdF9udW1CDAoKX3Jvb21fbW9kZUIM",
            "CgpfZ2FtZV9tb2RlQgkKB19wcHNyaWQiNAoSRmluaXNoUm91bmRIaW50UlNQ",
            "EhMKBnJvb21pZBgBIAEoBUgAiAEBQgkKB19yb29taWQiPAoaTXVsdGlwbGVU",
            "YWJsZUNoYW5nZVJvb21SRVESEwoGcm9vbWlkGAEgASgFSACIAQFCCQoHX3Jv",
            "b21pZCJYChpNdWx0aXBsZVRhYmxlQ2hhbmdlUm9vbVJTUBIRCgRjb2RlGAEg",
            "ASgFSACIAQESEwoGcm9vbWlkGAIgASgFSAGIAQFCBwoFX2NvZGVCCQoHX3Jv",
            "b21pZCIwCg5HZXRSb29tSW5mb1JFURITCgZyb29taWQYASABKAVIAIgBAUIJ",
            "Cgdfcm9vbWlkIs4KCg5HZXRSb29tSW5mb1JTUBIRCgRjb2RlGAEgASgFSACI",
            "AQESEwoGcmVhc29uGAIgASgJSAGIAQESJwoMdGFibGVfc3RhdHVzGAMgASgL",
            "MgwuVGFibGVTdGF0dXNIAogBARIlCgtyb29tX3N0YXR1cxgEIAEoCzILLlJv",
            "b21TdGF0dXNIA4gBARIrCg5wbGF5aW5nX3N0YXR1cxgFIAEoCzIOLlBsYXlp",
            "bmdTdGF0dXNIBIgBARIhCglyb29tX2luZm8YBiABKAsyCS5Sb29tSW5mb0gF",
            "iAEBEiEKCXJvb21fdHlwZRgHIAEoDjIJLlJvb21UeXBlSAaIAQESJwoMc25n",
            "cm9vbV9pbmZvGAggASgLMgwuU25nUm9vbUluZm9IB4gBARInCgxtdHRyb29t",
            "X2luZm8YCSABKAsyDC5NdHRSb29tSW5mb0gIiAEBEhMKBnJvb21pZBgKIAEo",
            "BUgJiAEBEiEKCXJvb21fbW9kZRgLIAEoDjIJLlJvb21Nb2RlSAqIAQESKQoN",
            "cGluZXJvb21faW5mbxgMIAEoCzINLlBpbmVSb29tSW5mb0gLiAEBEi4KEHBp",
            "bmVfcm9vbV9zdGF0dXMYDSABKAsyDy5QaW5lUm9vbVN0YXR1c0gMiAEBEioK",
            "CnN0b3JtX2luZm8YDiABKAsyES5QUGNoaXBzU3Rvcm1JbmZvSA2IAQESJgoM",
            "dHBfcm9vbV9pbmZvGA8gASgLMgsuVHBSb29tSW5mb0gOiAEBEiwKD3RwX3Rh",
            "YmxlX3N0YXR1cxgQIAEoCzIOLlRwVGFibGVTdGF0dXNID4gBARIsCg9wdXNv",
            "eV9yb29tX2luZm8YESABKAsyDi5QdXNveVJvb21JbmZvSBCIAQESMAoRcHVz",
            "b3lfcm9vbV9zdGF0dXMYEiABKAsyEC5QdXNveVJvb21TdGF0dXNIEYgBARIw",
            "ChFsdWNreV9kcmF3X2NvbmZpZxgTIAEoCzIQLkx1Y2t5RHJhd0NvbmZpZ0gS",
            "iAEBEiwKD2NvbG9yX3Jvb21faW5mbxgUIAEoCzIOLkNvbG9yUm9vbUluZm9I",
            "E4gBARIwChFjb2xvcl9yb29tX3N0YXR1cxgVIAEoCzIQLkNvbG9yUm9vbVN0",
            "YXR1c0gUiAEBEjAKEXRvbmdpdHNfcm9vbV9pbmZvGBYgASgLMhAuVG9uZ2l0",
            "c1Jvb21JbmZvSBWIAQESNAoTdG9uZ2l0c19yb29tX3N0YXR1cxgXIAEoCzIS",
            "LlRvbmdpdHNSb29tU3RhdHVzSBaIAQFCBwoFX2NvZGVCCQoHX3JlYXNvbkIP",
            "Cg1fdGFibGVfc3RhdHVzQg4KDF9yb29tX3N0YXR1c0IRCg9fcGxheWluZ19z",
            "dGF0dXNCDAoKX3Jvb21faW5mb0IMCgpfcm9vbV90eXBlQg8KDV9zbmdyb29t",
            "X2luZm9CDwoNX210dHJvb21faW5mb0IJCgdfcm9vbWlkQgwKCl9yb29tX21v",
            "ZGVCEAoOX3BpbmVyb29tX2luZm9CEwoRX3BpbmVfcm9vbV9zdGF0dXNCDQoL",
            "X3N0b3JtX2luZm9CDwoNX3RwX3Jvb21faW5mb0ISChBfdHBfdGFibGVfc3Rh",
            "dHVzQhIKEF9wdXNveV9yb29tX2luZm9CFAoSX3B1c295X3Jvb21fc3RhdHVz",
            "QhQKEl9sdWNreV9kcmF3X2NvbmZpZ0ISChBfY29sb3Jfcm9vbV9pbmZvQhQK",
            "El9jb2xvcl9yb29tX3N0YXR1c0IUChJfdG9uZ2l0c19yb29tX2luZm9CFgoU",
            "X3RvbmdpdHNfcm9vbV9zdGF0dXMidgoUVXNlclZpcEluZm9DaGFuZ2VCUkMS",
            "EAoDdWlkGAEgASgDSACIAQESFgoJdmlwX2xldmVsGAIgASgNSAGIAQESEwoG",
            "cm9vbWlkGAMgASgFSAKIAQFCBgoEX3VpZEIMCgpfdmlwX2xldmVsQgkKB19y",
            "b29taWQikAEKEkZvcnVtTWVzc2FnZU51bVJTUBISCgV0b3RhbBgBIAEoA0gA",
            "iAEBEhEKBGxpa2UYAiABKANIAYgBARIUCgdjb21tZW50GAMgASgDSAKIAQES",
            "EwoGc3lzdGVtGAQgASgDSAOIAQFCCAoGX3RvdGFsQgcKBV9saWtlQgoKCF9j",
            "b21tZW50QgkKB19zeXN0ZW0iTgoSUGxheWluZ1Jvb21MaXN0UkVREhAKA3Vp",
            "ZBgBIAEoA0gAiAEBEhMKBmNsdWJpZBgCIAEoBUgBiAEBQgYKBF91aWRCCQoH",
            "X2NsdWJpZCJbChJQbGF5aW5nUm9vbUxpc3RSU1ASKQoJcm9vbV9saXN0GAEg",
            "AygLMhYuTXVsdGlwbGVUYWJsZVJvb21JbmZvEhEKBGNvZGUYAiABKAVIAIgB",
            "AUIHCgVfY29kZSI7ChNTaG93RGVhbGVyQ2hvaWNlUlNQEhYKCWxlZnRfdGlt",
            "ZRgBIAEoBUgAiAEBQgwKCl9sZWZ0X3RpbWUiNQoPRGVhbGVyQ2hvaWNlUkVR",
            "EhUKCGdhbWV0eXBlGAEgASgFSACIAQFCCwoJX2dhbWV0eXBlIi0KD0RlYWxl",
            "ckNob2ljZVJTUBIRCgRjb2RlGAEgASgFSACIAQFCBwoFX2NvZGUiNQoPRGVh",
            "bGVyQ2hvaWNlQlJDEhUKCGdhbWV0eXBlGAEgASgFSACIAQFCCwoJX2dhbWV0",
            "eXBlIi0KEU90aGVyTGVhdmVSb29tQlJDEhAKA3VpZBgBIAEoA0gAiAEBQgYK",
            "BF91aWQivQEKDEVudGVyUm9vbVJFURIOCgZyb29taWQYASABKAkSEAoDdGlk",
            "GAIgASgJSACIAQESCwoDdWlkGAMgASgJEhMKBmNsdWJpZBgEIAEoCUgBiAEB",
            "EhUKCGxlYWd1ZWlkGAUgASgJSAKIAQESDwoCaXAYBiABKAlIA4gBARIRCgR0",
            "eXBlGAcgASgFSASIAQFCBgoEX3RpZEIJCgdfY2x1YmlkQgsKCV9sZWFndWVp",
            "ZEIFCgNfaXBCBwoFX3R5cGUiyAIKFVByZUVudGVyUGFzc3dkUm9vbVJFURIq",
            "CgR0eXBlGAEgASgOMhcuUHJlRW50ZXJQYXNzd2RSb29tVHlwZUgAiAEBEhMK",
            "BnJvb21pZBgCIAEoBUgBiAEBEhAKA3VpZBgDIAEoA0gCiAEBEhMKBmNsdWJp",
            "ZBgEIAEoBUgDiAEBEhUKCGxlYWd1ZWlkGAUgASgFSASIAQESEwoGcGFzc3dk",
            "GAYgASgJSAWIAQESGwoOc3VwZXJfbGVhZ3VlaWQYByABKAVIBogBARIaCg1j",
            "ZXJ0aWZpY2F0aW9uGAggASgFSAeIAQFCBwoFX3R5cGVCCQoHX3Jvb21pZEIG",
            "CgRfdWlkQgkKB19jbHViaWRCCwoJX2xlYWd1ZWlkQgkKB19wYXNzd2RCEQoP",
            "X3N1cGVyX2xlYWd1ZWlkQhAKDl9jZXJ0aWZpY2F0aW9uIqgCChVQcmVFbnRl",
            "clBhc3N3ZFJvb21SU1ASKgoEdHlwZRgBIAEoDjIXLlByZUVudGVyUGFzc3dk",
            "Um9vbVR5cGVIAIgBARITCgZyb29taWQYAiABKAVIAYgBARIQCgN1aWQYAyAB",
            "KANIAogBARITCgZjbHViaWQYBCABKAVIA4gBARIVCghsZWFndWVpZBgFIAEo",
            "BUgEiAEBEhEKBGNvZGUYBiABKAVIBYgBARIUCgdjaGVja2VkGAcgASgISAaI",
            "AQESEwoGa2lja2VkGAggASgISAeIAQFCBwoFX3R5cGVCCQoHX3Jvb21pZEIG",
            "CgRfdWlkQgkKB19jbHViaWRCCwoJX2xlYWd1ZWlkQgcKBV9jb2RlQgoKCF9j",
            "aGVja2VkQgkKB19raWNrZWQi4wQKD1RhYmxlU2V0dGluZ1JFURISCgViY2x1",
            "YhgBIAEoCEgAiAEBEhIKBWJvcGVuGAIgASgISAGIAQESIAoTb25lYnRuX21v",
            "bGVjdWxlX251bRgDIAEoBUgCiAEBEiMKFm9uZWJ0bl9kZW5vbWluYXRvcl9u",
            "dW0YBCABKAVIA4gBARIgChN0d29idG5fbW9sZWN1bGVfbnVtGAUgASgFSASI",
            "AQESIwoWdHdvYnRuX2Rlbm9taW5hdG9yX251bRgGIAEoBUgFiAEBEiIKFXRo",
            "cmVlYnRuX21vbGVjdWxlX251bRgHIAEoBUgGiAEBEiUKGHRocmVlYnRuX2Rl",
            "bm9taW5hdG9yX251bRgIIAEoBUgHiAEBEhcKCm9uZWJ0bl9udW0YCSABKAVI",
            "CIgBARIXCgp0d29idG5fbnVtGAogASgFSAmIAQESGQoMdGhyZWVidG5fbnVt",
            "GAsgASgFSAqIAQESFQoIcm9vbXR5cGUYDCABKAVIC4gBAUIICgZfYmNsdWJC",
            "CAoGX2JvcGVuQhYKFF9vbmVidG5fbW9sZWN1bGVfbnVtQhkKF19vbmVidG5f",
            "ZGVub21pbmF0b3JfbnVtQhYKFF90d29idG5fbW9sZWN1bGVfbnVtQhkKF190",
            "d29idG5fZGVub21pbmF0b3JfbnVtQhgKFl90aHJlZWJ0bl9tb2xlY3VsZV9u",
            "dW1CGwoZX3RocmVlYnRuX2Rlbm9taW5hdG9yX251bUINCgtfb25lYnRuX251",
            "bUINCgtfdHdvYnRuX251bUIPCg1fdGhyZWVidG5fbnVtQgsKCV9yb29tdHlw",
            "ZSItCg9UYWJsZVNldHRpbmdSU1ASEQoEY29kZRgBIAEoBUgAiAEBQgcKBV9j",
            "b2RlIl8KEU90aGVyRW50ZXJSb29tQlJDEh0KBHVzZXIYASABKAsyCi5Vc2Vy",
            "QnJpZWZIAIgBARIVCghmcmFtZV9pZBgCIAEoCUgBiAEBQgcKBV91c2VyQgsK",
            "CV9mcmFtZV9pZCKEAQoOUmV3YXJkSXRlbUluZm8SDwoCaWQYASABKAVIAIgB",
            "ARIRCgR0eXBlGAIgASgFSAGIAQESFgoJaXRlbV9uYW1lGAMgASgJSAKIAQES",
            "EAoDbnVtGAQgASgFSAOIAQFCBQoDX2lkQgcKBV90eXBlQgwKCl9pdGVtX25h",
            "bWVCBgoEX251bSIQCg5RdWVyeVJld2FyZFJFUSK4AQoOUXVlcnlSZXdhcmRS",
            "U1ASEQoEY29kZRgBIAEoBUgAiAEBEhUKCGl0ZW1fbnVtGAIgASgFSAGIAQES",
            "IgoJaXRlbV9pbmZvGAMgAygLMg8uUmV3YXJkSXRlbUluZm8SGAoLcmV3YXJk",
            "X3R5cGUYBCABKAVIAogBARIQCgNudW0YBSABKAVIA4gBAUIHCgVfY29kZUIL",
            "CglfaXRlbV9udW1CDgoMX3Jld2FyZF90eXBlQgYKBF9udW0iKAoORmV0Y2hS",
            "ZXdhcmRSRVESDwoCaWQYASABKAVIAIgBAUIFCgNfaWQiLAoORmV0Y2hSZXdh",
            "cmRSU1ASEQoEY29kZRgBIAEoBUgAiAEBQgcKBV9jb2RlImMKG1NldEF1dG9D",
            "aGlwUmVwbGVuaXNobWVudFJFURImChllbmFibGVfY2hpcF9yZXBsZW5pc2ht",
            "ZW50GAEgASgISACIAQFCHAoaX2VuYWJsZV9jaGlwX3JlcGxlbmlzaG1lbnQi",
            "IAoeR2V0Q2hpcFJlcGxlbmlzaG1lbnRTZXR0aW5nUkVRImYKHkdldENoaXBS",
            "ZXBsZW5pc2htZW50U2V0dGluZ1JTUBImChllbmFibGVfY2hpcF9yZXBsZW5p",
            "c2htZW50GAEgASgISACIAQFCHAoaX2VuYWJsZV9jaGlwX3JlcGxlbmlzaG1l",
            "bnQqigEKFlByZUVudGVyUGFzc3dkUm9vbVR5cGUSIwofUFJFX0VOVEVSX1BB",
            "U1NXRF9ST09NX1RZUEVfTk9ORRAAEiUKIVBSRV9FTlRFUl9QQVNTV0RfUk9P",
            "TV9UWVBFX1NUQVRVUxABEiQKIFBSRV9FTlRFUl9QQVNTV0RfUk9PTV9UWVBF",
            "X0NIRUNLEAJCGloHL3BicHBnb6oCDlRleGFzLlByb3RvY29sYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Texas.Protocol.PreBaseReflection.Descriptor, global::Texas.Protocol.BaseReflection.Descriptor, global::Texas.Protocol.Pb1Reflection.Descriptor, global::Texas.Protocol.PineReflection.Descriptor, global::Texas.Protocol.TpReflection.Descriptor, global::Texas.Protocol.PusoyReflection.Descriptor, global::Texas.Protocol.LuckyDrawReflection.Descriptor, global::Texas.Protocol.ColorgameReflection.Descriptor, global::Texas.Protocol.TongitsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Texas.Protocol.PreEnterPasswdRoomType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.LeaveRoomRSP), global::Texas.Protocol.LeaveRoomRSP.Parser, new[]{ "Code", "Reason", "Flag", "Clubid", "Leagueid", "ClientClubid", "Leave" }, new[]{ "Code", "Reason", "Flag", "Clubid", "Leagueid", "ClientClubid", "Leave" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.LeaveRoomREQ), global::Texas.Protocol.LeaveRoomREQ.Parser, new[]{ "Flag", "SeatReserve", "ClientClubid", "Leave", "LeaveType" }, new[]{ "Flag", "SeatReserve", "ClientClubid", "Leave", "LeaveType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ActionNotifyBRC), global::Texas.Protocol.ActionNotifyBRC.Parser, new[]{ "Seatid", "Actions", "Bet", "Call", "MinRaise", "MaxRaise", "LeftTime" }, new[]{ "Seatid", "Bet", "Call", "MinRaise", "MaxRaise", "LeftTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.QuitMultipleTableREQ), global::Texas.Protocol.QuitMultipleTableREQ.Parser, new[]{ "Roomid", "Flag" }, new[]{ "Flag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.QuitMultipleTableRSP), global::Texas.Protocol.QuitMultipleTableRSP.Parser, new[]{ "Code", "Flag" }, new[]{ "Code", "Flag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.QuitAllMultipleTableREQ), global::Texas.Protocol.QuitAllMultipleTableREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.QuitAllMultipleTableRSP), global::Texas.Protocol.QuitAllMultipleTableRSP.Parser, new[]{ "Code" }, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.RoundHintMultipleTableREQ), global::Texas.Protocol.RoundHintMultipleTableREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.RoundHintMultipleTableRSP), global::Texas.Protocol.RoundHintMultipleTableRSP.Parser, new[]{ "Roomtype", "Blind", "Ante", "Roomid", "Clubid", "Seatid", "LastTime", "RoomName", "ClubName", "SeatNum", "RoomMode", "GameMode", "Ppsrid" }, new[]{ "Roomtype", "Blind", "Ante", "Roomid", "Clubid", "Seatid", "LastTime", "RoomName", "ClubName", "SeatNum", "RoomMode", "GameMode", "Ppsrid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.FinishRoundHintRSP), global::Texas.Protocol.FinishRoundHintRSP.Parser, new[]{ "Roomid" }, new[]{ "Roomid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MultipleTableChangeRoomREQ), global::Texas.Protocol.MultipleTableChangeRoomREQ.Parser, new[]{ "Roomid" }, new[]{ "Roomid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MultipleTableChangeRoomRSP), global::Texas.Protocol.MultipleTableChangeRoomRSP.Parser, new[]{ "Code", "Roomid" }, new[]{ "Code", "Roomid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.GetRoomInfoREQ), global::Texas.Protocol.GetRoomInfoREQ.Parser, new[]{ "Roomid" }, new[]{ "Roomid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.GetRoomInfoRSP), global::Texas.Protocol.GetRoomInfoRSP.Parser, new[]{ "Code", "Reason", "TableStatus", "RoomStatus", "PlayingStatus", "RoomInfo", "RoomType", "SngroomInfo", "MttroomInfo", "Roomid", "RoomMode", "PineroomInfo", "PineRoomStatus", "StormInfo", "TpRoomInfo", "TpTableStatus", "PusoyRoomInfo", "PusoyRoomStatus", "LuckyDrawConfig", "ColorRoomInfo", "ColorRoomStatus", "TongitsRoomInfo", "TongitsRoomStatus" }, new[]{ "Code", "Reason", "TableStatus", "RoomStatus", "PlayingStatus", "RoomInfo", "RoomType", "SngroomInfo", "MttroomInfo", "Roomid", "RoomMode", "PineroomInfo", "PineRoomStatus", "StormInfo", "TpRoomInfo", "TpTableStatus", "PusoyRoomInfo", "PusoyRoomStatus", "LuckyDrawConfig", "ColorRoomInfo", "ColorRoomStatus", "TongitsRoomInfo", "TongitsRoomStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.UserVipInfoChangeBRC), global::Texas.Protocol.UserVipInfoChangeBRC.Parser, new[]{ "Uid", "VipLevel", "Roomid" }, new[]{ "Uid", "VipLevel", "Roomid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ForumMessageNumRSP), global::Texas.Protocol.ForumMessageNumRSP.Parser, new[]{ "Total", "Like", "Comment", "System" }, new[]{ "Total", "Like", "Comment", "System" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PlayingRoomListREQ), global::Texas.Protocol.PlayingRoomListREQ.Parser, new[]{ "Uid", "Clubid" }, new[]{ "Uid", "Clubid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PlayingRoomListRSP), global::Texas.Protocol.PlayingRoomListRSP.Parser, new[]{ "RoomList", "Code" }, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ShowDealerChoiceRSP), global::Texas.Protocol.ShowDealerChoiceRSP.Parser, new[]{ "LeftTime" }, new[]{ "LeftTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.DealerChoiceREQ), global::Texas.Protocol.DealerChoiceREQ.Parser, new[]{ "Gametype" }, new[]{ "Gametype" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.DealerChoiceRSP), global::Texas.Protocol.DealerChoiceRSP.Parser, new[]{ "Code" }, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.DealerChoiceBRC), global::Texas.Protocol.DealerChoiceBRC.Parser, new[]{ "Gametype" }, new[]{ "Gametype" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.OtherLeaveRoomBRC), global::Texas.Protocol.OtherLeaveRoomBRC.Parser, new[]{ "Uid" }, new[]{ "Uid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.EnterRoomREQ), global::Texas.Protocol.EnterRoomREQ.Parser, new[]{ "Roomid", "Tid", "Uid", "Clubid", "Leagueid", "Ip", "Type" }, new[]{ "Tid", "Clubid", "Leagueid", "Ip", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PreEnterPasswdRoomREQ), global::Texas.Protocol.PreEnterPasswdRoomREQ.Parser, new[]{ "Type", "Roomid", "Uid", "Clubid", "Leagueid", "Passwd", "SuperLeagueid", "Certification" }, new[]{ "Type", "Roomid", "Uid", "Clubid", "Leagueid", "Passwd", "SuperLeagueid", "Certification" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PreEnterPasswdRoomRSP), global::Texas.Protocol.PreEnterPasswdRoomRSP.Parser, new[]{ "Type", "Roomid", "Uid", "Clubid", "Leagueid", "Code", "Checked", "Kicked" }, new[]{ "Type", "Roomid", "Uid", "Clubid", "Leagueid", "Code", "Checked", "Kicked" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TableSettingREQ), global::Texas.Protocol.TableSettingREQ.Parser, new[]{ "Bclub", "Bopen", "OnebtnMoleculeNum", "OnebtnDenominatorNum", "TwobtnMoleculeNum", "TwobtnDenominatorNum", "ThreebtnMoleculeNum", "ThreebtnDenominatorNum", "OnebtnNum", "TwobtnNum", "ThreebtnNum", "Roomtype" }, new[]{ "Bclub", "Bopen", "OnebtnMoleculeNum", "OnebtnDenominatorNum", "TwobtnMoleculeNum", "TwobtnDenominatorNum", "ThreebtnMoleculeNum", "ThreebtnDenominatorNum", "OnebtnNum", "TwobtnNum", "ThreebtnNum", "Roomtype" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TableSettingRSP), global::Texas.Protocol.TableSettingRSP.Parser, new[]{ "Code" }, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.OtherEnterRoomBRC), global::Texas.Protocol.OtherEnterRoomBRC.Parser, new[]{ "User", "FrameId" }, new[]{ "User", "FrameId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.RewardItemInfo), global::Texas.Protocol.RewardItemInfo.Parser, new[]{ "Id", "Type", "ItemName", "Num" }, new[]{ "Id", "Type", "ItemName", "Num" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.QueryRewardREQ), global::Texas.Protocol.QueryRewardREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.QueryRewardRSP), global::Texas.Protocol.QueryRewardRSP.Parser, new[]{ "Code", "ItemNum", "ItemInfo", "RewardType", "Num" }, new[]{ "Code", "ItemNum", "RewardType", "Num" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.FetchRewardREQ), global::Texas.Protocol.FetchRewardREQ.Parser, new[]{ "Id" }, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.FetchRewardRSP), global::Texas.Protocol.FetchRewardRSP.Parser, new[]{ "Code" }, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SetAutoChipReplenishmentREQ), global::Texas.Protocol.SetAutoChipReplenishmentREQ.Parser, new[]{ "EnableChipReplenishment" }, new[]{ "EnableChipReplenishment" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.GetChipReplenishmentSettingREQ), global::Texas.Protocol.GetChipReplenishmentSettingREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.GetChipReplenishmentSettingRSP), global::Texas.Protocol.GetChipReplenishmentSettingRSP.Parser, new[]{ "EnableChipReplenishment" }, new[]{ "EnableChipReplenishment" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// check password before enter private room
  /// </summary>
  public enum PreEnterPasswdRoomType {
    [pbr::OriginalName("PRE_ENTER_PASSWD_ROOM_TYPE_NONE")] None = 0,
    /// <summary>
    /// get status
    /// </summary>
    [pbr::OriginalName("PRE_ENTER_PASSWD_ROOM_TYPE_STATUS")] Status = 1,
    /// <summary>
    /// check passwd
    /// </summary>
    [pbr::OriginalName("PRE_ENTER_PASSWD_ROOM_TYPE_CHECK")] Check = 2,
  }

  #endregion

  #region Messages
  public sealed partial class LeaveRoomRSP : pb::IMessage<LeaveRoomRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LeaveRoomRSP> _parser = new pb::MessageParser<LeaveRoomRSP>(() => new LeaveRoomRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LeaveRoomRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LeaveRoomRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LeaveRoomRSP(LeaveRoomRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      reason_ = other.reason_;
      flag_ = other.flag_;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      clientClubid_ = other.clientClubid_;
      leave_ = other.leave_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LeaveRoomRSP Clone() {
      return new LeaveRoomRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0:成功, -1：失败, 2:下一局離開(tongits)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 2;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "flag" field.</summary>
    public const int FlagFieldNumber = 3;
    private readonly static int FlagDefaultValue = 0;

    private int flag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Flag {
      get { if ((_hasBits0 & 2) != 0) { return flag_; } else { return FlagDefaultValue; } }
      set {
        _hasBits0 |= 2;
        flag_ = value;
      }
    }
    /// <summary>Gets whether the "flag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFlag {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "flag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFlag() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 4;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 4) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 5;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 8) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "client_clubid" field.</summary>
    public const int ClientClubidFieldNumber = 6;
    private readonly static int ClientClubidDefaultValue = 0;

    private int clientClubid_;
    /// <summary>
    /// 前端用于判断,回复请求的值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ClientClubid {
      get { if ((_hasBits0 & 16) != 0) { return clientClubid_; } else { return ClientClubidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        clientClubid_ = value;
      }
    }
    /// <summary>Gets whether the "client_clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientClubid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "client_clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientClubid() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "leave" field.</summary>
    public const int LeaveFieldNumber = 7;
    private readonly static bool LeaveDefaultValue = false;

    private bool leave_;
    /// <summary>
    /// 需要有下局退出的遊戲使用: tongits
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Leave {
      get { if ((_hasBits0 & 32) != 0) { return leave_; } else { return LeaveDefaultValue; } }
      set {
        _hasBits0 |= 32;
        leave_ = value;
      }
    }
    /// <summary>Gets whether the "leave" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeave {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "leave" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeave() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LeaveRoomRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LeaveRoomRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Reason != other.Reason) return false;
      if (Flag != other.Flag) return false;
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (ClientClubid != other.ClientClubid) return false;
      if (Leave != other.Leave) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasFlag) hash ^= Flag.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasClientClubid) hash ^= ClientClubid.GetHashCode();
      if (HasLeave) hash ^= Leave.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasReason) {
        output.WriteRawTag(18);
        output.WriteString(Reason);
      }
      if (HasFlag) {
        output.WriteRawTag(24);
        output.WriteInt32(Flag);
      }
      if (HasClubid) {
        output.WriteRawTag(32);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(40);
        output.WriteInt32(Leagueid);
      }
      if (HasClientClubid) {
        output.WriteRawTag(48);
        output.WriteInt32(ClientClubid);
      }
      if (HasLeave) {
        output.WriteRawTag(56);
        output.WriteBool(Leave);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasReason) {
        output.WriteRawTag(18);
        output.WriteString(Reason);
      }
      if (HasFlag) {
        output.WriteRawTag(24);
        output.WriteInt32(Flag);
      }
      if (HasClubid) {
        output.WriteRawTag(32);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(40);
        output.WriteInt32(Leagueid);
      }
      if (HasClientClubid) {
        output.WriteRawTag(48);
        output.WriteInt32(ClientClubid);
      }
      if (HasLeave) {
        output.WriteRawTag(56);
        output.WriteBool(Leave);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasFlag) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Flag);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasClientClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientClubid);
      }
      if (HasLeave) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LeaveRoomRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasFlag) {
        Flag = other.Flag;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasClientClubid) {
        ClientClubid = other.ClientClubid;
      }
      if (other.HasLeave) {
        Leave = other.Leave;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Reason = input.ReadString();
            break;
          }
          case 24: {
            Flag = input.ReadInt32();
            break;
          }
          case 32: {
            Clubid = input.ReadInt32();
            break;
          }
          case 40: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 48: {
            ClientClubid = input.ReadInt32();
            break;
          }
          case 56: {
            Leave = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Reason = input.ReadString();
            break;
          }
          case 24: {
            Flag = input.ReadInt32();
            break;
          }
          case 32: {
            Clubid = input.ReadInt32();
            break;
          }
          case 40: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 48: {
            ClientClubid = input.ReadInt32();
            break;
          }
          case 56: {
            Leave = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LeaveRoomREQ : pb::IMessage<LeaveRoomREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LeaveRoomREQ> _parser = new pb::MessageParser<LeaveRoomREQ>(() => new LeaveRoomREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LeaveRoomREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LeaveRoomREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LeaveRoomREQ(LeaveRoomREQ other) : this() {
      _hasBits0 = other._hasBits0;
      flag_ = other.flag_;
      seatReserve_ = other.seatReserve_;
      clientClubid_ = other.clientClubid_;
      leave_ = other.leave_;
      leaveType_ = other.leaveType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LeaveRoomREQ Clone() {
      return new LeaveRoomREQ(this);
    }

    /// <summary>Field number for the "flag" field.</summary>
    public const int FlagFieldNumber = 1;
    private readonly static int FlagDefaultValue = 0;

    private int flag_;
    /// <summary>
    /// 前端用于判断跳转
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Flag {
      get { if ((_hasBits0 & 1) != 0) { return flag_; } else { return FlagDefaultValue; } }
      set {
        _hasBits0 |= 1;
        flag_ = value;
      }
    }
    /// <summary>Gets whether the "flag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFlag {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "flag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFlag() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seat_reserve" field.</summary>
    public const int SeatReserveFieldNumber = 2;
    private readonly static bool SeatReserveDefaultValue = false;

    private bool seatReserve_;
    /// <summary>
    /// false、不留座    true、留座
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SeatReserve {
      get { if ((_hasBits0 & 2) != 0) { return seatReserve_; } else { return SeatReserveDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seatReserve_ = value;
      }
    }
    /// <summary>Gets whether the "seat_reserve" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatReserve {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seat_reserve" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatReserve() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "client_clubid" field.</summary>
    public const int ClientClubidFieldNumber = 3;
    private readonly static int ClientClubidDefaultValue = 0;

    private int clientClubid_;
    /// <summary>
    /// 前端用于判断
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ClientClubid {
      get { if ((_hasBits0 & 4) != 0) { return clientClubid_; } else { return ClientClubidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        clientClubid_ = value;
      }
    }
    /// <summary>Gets whether the "client_clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientClubid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "client_clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientClubid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "leave" field.</summary>
    public const int LeaveFieldNumber = 4;
    private readonly static bool LeaveDefaultValue = false;

    private bool leave_;
    /// <summary>
    /// 需要有下局退出的遊戲使用: tongits
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Leave {
      get { if ((_hasBits0 & 8) != 0) { return leave_; } else { return LeaveDefaultValue; } }
      set {
        _hasBits0 |= 8;
        leave_ = value;
      }
    }
    /// <summary>Gets whether the "leave" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeave {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "leave" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeave() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "leave_type" field.</summary>
    public const int LeaveTypeFieldNumber = 5;
    private readonly static int LeaveTypeDefaultValue = 0;

    private int leaveType_;
    /// <summary>
    /// 1 = 立即離開  2 = 下一局離開
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LeaveType {
      get { if ((_hasBits0 & 16) != 0) { return leaveType_; } else { return LeaveTypeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        leaveType_ = value;
      }
    }
    /// <summary>Gets whether the "leave_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeaveType {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "leave_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeaveType() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LeaveRoomREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LeaveRoomREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Flag != other.Flag) return false;
      if (SeatReserve != other.SeatReserve) return false;
      if (ClientClubid != other.ClientClubid) return false;
      if (Leave != other.Leave) return false;
      if (LeaveType != other.LeaveType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFlag) hash ^= Flag.GetHashCode();
      if (HasSeatReserve) hash ^= SeatReserve.GetHashCode();
      if (HasClientClubid) hash ^= ClientClubid.GetHashCode();
      if (HasLeave) hash ^= Leave.GetHashCode();
      if (HasLeaveType) hash ^= LeaveType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFlag) {
        output.WriteRawTag(8);
        output.WriteInt32(Flag);
      }
      if (HasSeatReserve) {
        output.WriteRawTag(16);
        output.WriteBool(SeatReserve);
      }
      if (HasClientClubid) {
        output.WriteRawTag(24);
        output.WriteInt32(ClientClubid);
      }
      if (HasLeave) {
        output.WriteRawTag(32);
        output.WriteBool(Leave);
      }
      if (HasLeaveType) {
        output.WriteRawTag(40);
        output.WriteInt32(LeaveType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFlag) {
        output.WriteRawTag(8);
        output.WriteInt32(Flag);
      }
      if (HasSeatReserve) {
        output.WriteRawTag(16);
        output.WriteBool(SeatReserve);
      }
      if (HasClientClubid) {
        output.WriteRawTag(24);
        output.WriteInt32(ClientClubid);
      }
      if (HasLeave) {
        output.WriteRawTag(32);
        output.WriteBool(Leave);
      }
      if (HasLeaveType) {
        output.WriteRawTag(40);
        output.WriteInt32(LeaveType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFlag) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Flag);
      }
      if (HasSeatReserve) {
        size += 1 + 1;
      }
      if (HasClientClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientClubid);
      }
      if (HasLeave) {
        size += 1 + 1;
      }
      if (HasLeaveType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeaveType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LeaveRoomREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasFlag) {
        Flag = other.Flag;
      }
      if (other.HasSeatReserve) {
        SeatReserve = other.SeatReserve;
      }
      if (other.HasClientClubid) {
        ClientClubid = other.ClientClubid;
      }
      if (other.HasLeave) {
        Leave = other.Leave;
      }
      if (other.HasLeaveType) {
        LeaveType = other.LeaveType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Flag = input.ReadInt32();
            break;
          }
          case 16: {
            SeatReserve = input.ReadBool();
            break;
          }
          case 24: {
            ClientClubid = input.ReadInt32();
            break;
          }
          case 32: {
            Leave = input.ReadBool();
            break;
          }
          case 40: {
            LeaveType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Flag = input.ReadInt32();
            break;
          }
          case 16: {
            SeatReserve = input.ReadBool();
            break;
          }
          case 24: {
            ClientClubid = input.ReadInt32();
            break;
          }
          case 32: {
            Leave = input.ReadBool();
            break;
          }
          case 40: {
            LeaveType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ActionNotifyBRC : pb::IMessage<ActionNotifyBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActionNotifyBRC> _parser = new pb::MessageParser<ActionNotifyBRC>(() => new ActionNotifyBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActionNotifyBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionNotifyBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionNotifyBRC(ActionNotifyBRC other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      actions_ = other.actions_.Clone();
      bet_ = other.bet_;
      call_ = other.call_;
      minRaise_ = other.minRaise_;
      maxRaise_ = other.maxRaise_;
      leftTime_ = other.leftTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionNotifyBRC Clone() {
      return new ActionNotifyBRC(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "actions" field.</summary>
    public const int ActionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ActionType> _repeated_actions_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::Texas.Protocol.ActionType) x);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ActionType> actions_ = new pbc::RepeatedField<global::Texas.Protocol.ActionType>();
    /// <summary>
    ///可操作类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ActionType> Actions {
      get { return actions_; }
    }

    /// <summary>Field number for the "bet" field.</summary>
    public const int BetFieldNumber = 3;
    private readonly static long BetDefaultValue = 0L;

    private long bet_;
    /// <summary>
    ///本次行动最小下注量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Bet {
      get { if ((_hasBits0 & 2) != 0) { return bet_; } else { return BetDefaultValue; } }
      set {
        _hasBits0 |= 2;
        bet_ = value;
      }
    }
    /// <summary>Gets whether the "bet" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBet {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "bet" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBet() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "call" field.</summary>
    public const int CallFieldNumber = 4;
    private readonly static long CallDefaultValue = 0L;

    private long call_;
    /// <summary>
    ///call的下注量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Call {
      get { if ((_hasBits0 & 4) != 0) { return call_; } else { return CallDefaultValue; } }
      set {
        _hasBits0 |= 4;
        call_ = value;
      }
    }
    /// <summary>Gets whether the "call" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCall {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "call" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCall() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "min_raise" field.</summary>
    public const int MinRaiseFieldNumber = 5;
    private readonly static long MinRaiseDefaultValue = 0L;

    private long minRaise_;
    /// <summary>
    ///最小加注量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinRaise {
      get { if ((_hasBits0 & 8) != 0) { return minRaise_; } else { return MinRaiseDefaultValue; } }
      set {
        _hasBits0 |= 8;
        minRaise_ = value;
      }
    }
    /// <summary>Gets whether the "min_raise" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinRaise {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "min_raise" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinRaise() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "max_raise" field.</summary>
    public const int MaxRaiseFieldNumber = 6;
    private readonly static long MaxRaiseDefaultValue = 0L;

    private long maxRaise_;
    /// <summary>
    ///最大加注量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaxRaise {
      get { if ((_hasBits0 & 16) != 0) { return maxRaise_; } else { return MaxRaiseDefaultValue; } }
      set {
        _hasBits0 |= 16;
        maxRaise_ = value;
      }
    }
    /// <summary>Gets whether the "max_raise" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxRaise {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "max_raise" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxRaise() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "left_time" field.</summary>
    public const int LeftTimeFieldNumber = 7;
    private readonly static long LeftTimeDefaultValue = 0L;

    private long leftTime_;
    /// <summary>
    ///剩余思考时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LeftTime {
      get { if ((_hasBits0 & 32) != 0) { return leftTime_; } else { return LeftTimeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        leftTime_ = value;
      }
    }
    /// <summary>Gets whether the "left_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeftTime {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "left_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeftTime() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActionNotifyBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActionNotifyBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if(!actions_.Equals(other.actions_)) return false;
      if (Bet != other.Bet) return false;
      if (Call != other.Call) return false;
      if (MinRaise != other.MinRaise) return false;
      if (MaxRaise != other.MaxRaise) return false;
      if (LeftTime != other.LeftTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      hash ^= actions_.GetHashCode();
      if (HasBet) hash ^= Bet.GetHashCode();
      if (HasCall) hash ^= Call.GetHashCode();
      if (HasMinRaise) hash ^= MinRaise.GetHashCode();
      if (HasMaxRaise) hash ^= MaxRaise.GetHashCode();
      if (HasLeftTime) hash ^= LeftTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      actions_.WriteTo(output, _repeated_actions_codec);
      if (HasBet) {
        output.WriteRawTag(24);
        output.WriteInt64(Bet);
      }
      if (HasCall) {
        output.WriteRawTag(32);
        output.WriteInt64(Call);
      }
      if (HasMinRaise) {
        output.WriteRawTag(40);
        output.WriteInt64(MinRaise);
      }
      if (HasMaxRaise) {
        output.WriteRawTag(48);
        output.WriteInt64(MaxRaise);
      }
      if (HasLeftTime) {
        output.WriteRawTag(56);
        output.WriteInt64(LeftTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      actions_.WriteTo(ref output, _repeated_actions_codec);
      if (HasBet) {
        output.WriteRawTag(24);
        output.WriteInt64(Bet);
      }
      if (HasCall) {
        output.WriteRawTag(32);
        output.WriteInt64(Call);
      }
      if (HasMinRaise) {
        output.WriteRawTag(40);
        output.WriteInt64(MinRaise);
      }
      if (HasMaxRaise) {
        output.WriteRawTag(48);
        output.WriteInt64(MaxRaise);
      }
      if (HasLeftTime) {
        output.WriteRawTag(56);
        output.WriteInt64(LeftTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      size += actions_.CalculateSize(_repeated_actions_codec);
      if (HasBet) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Bet);
      }
      if (HasCall) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Call);
      }
      if (HasMinRaise) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinRaise);
      }
      if (HasMaxRaise) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxRaise);
      }
      if (HasLeftTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LeftTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActionNotifyBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      actions_.Add(other.actions_);
      if (other.HasBet) {
        Bet = other.Bet;
      }
      if (other.HasCall) {
        Call = other.Call;
      }
      if (other.HasMinRaise) {
        MinRaise = other.MinRaise;
      }
      if (other.HasMaxRaise) {
        MaxRaise = other.MaxRaise;
      }
      if (other.HasLeftTime) {
        LeftTime = other.LeftTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            actions_.AddEntriesFrom(input, _repeated_actions_codec);
            break;
          }
          case 24: {
            Bet = input.ReadInt64();
            break;
          }
          case 32: {
            Call = input.ReadInt64();
            break;
          }
          case 40: {
            MinRaise = input.ReadInt64();
            break;
          }
          case 48: {
            MaxRaise = input.ReadInt64();
            break;
          }
          case 56: {
            LeftTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            actions_.AddEntriesFrom(ref input, _repeated_actions_codec);
            break;
          }
          case 24: {
            Bet = input.ReadInt64();
            break;
          }
          case 32: {
            Call = input.ReadInt64();
            break;
          }
          case 40: {
            MinRaise = input.ReadInt64();
            break;
          }
          case 48: {
            MaxRaise = input.ReadInt64();
            break;
          }
          case 56: {
            LeftTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class QuitMultipleTableREQ : pb::IMessage<QuitMultipleTableREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QuitMultipleTableREQ> _parser = new pb::MessageParser<QuitMultipleTableREQ>(() => new QuitMultipleTableREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<QuitMultipleTableREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuitMultipleTableREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuitMultipleTableREQ(QuitMultipleTableREQ other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_.Clone();
      flag_ = other.flag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuitMultipleTableREQ Clone() {
      return new QuitMultipleTableREQ(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_roomid_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> roomid_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Roomid {
      get { return roomid_; }
    }

    /// <summary>Field number for the "flag" field.</summary>
    public const int FlagFieldNumber = 2;
    private readonly static int FlagDefaultValue = 0;

    private int flag_;
    /// <summary>
    ///返回给客户端
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Flag {
      get { if ((_hasBits0 & 1) != 0) { return flag_; } else { return FlagDefaultValue; } }
      set {
        _hasBits0 |= 1;
        flag_ = value;
      }
    }
    /// <summary>Gets whether the "flag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFlag {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "flag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFlag() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as QuitMultipleTableREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(QuitMultipleTableREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!roomid_.Equals(other.roomid_)) return false;
      if (Flag != other.Flag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= roomid_.GetHashCode();
      if (HasFlag) hash ^= Flag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      roomid_.WriteTo(output, _repeated_roomid_codec);
      if (HasFlag) {
        output.WriteRawTag(16);
        output.WriteInt32(Flag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      roomid_.WriteTo(ref output, _repeated_roomid_codec);
      if (HasFlag) {
        output.WriteRawTag(16);
        output.WriteInt32(Flag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += roomid_.CalculateSize(_repeated_roomid_codec);
      if (HasFlag) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Flag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(QuitMultipleTableREQ other) {
      if (other == null) {
        return;
      }
      roomid_.Add(other.roomid_);
      if (other.HasFlag) {
        Flag = other.Flag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            roomid_.AddEntriesFrom(input, _repeated_roomid_codec);
            break;
          }
          case 16: {
            Flag = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            roomid_.AddEntriesFrom(ref input, _repeated_roomid_codec);
            break;
          }
          case 16: {
            Flag = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class QuitMultipleTableRSP : pb::IMessage<QuitMultipleTableRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QuitMultipleTableRSP> _parser = new pb::MessageParser<QuitMultipleTableRSP>(() => new QuitMultipleTableRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<QuitMultipleTableRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuitMultipleTableRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuitMultipleTableRSP(QuitMultipleTableRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      flag_ = other.flag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuitMultipleTableRSP Clone() {
      return new QuitMultipleTableRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// 0 success    -1 fail
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "flag" field.</summary>
    public const int FlagFieldNumber = 2;
    private readonly static int FlagDefaultValue = 0;

    private int flag_;
    /// <summary>
    ///返回给客户端
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Flag {
      get { if ((_hasBits0 & 2) != 0) { return flag_; } else { return FlagDefaultValue; } }
      set {
        _hasBits0 |= 2;
        flag_ = value;
      }
    }
    /// <summary>Gets whether the "flag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFlag {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "flag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFlag() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as QuitMultipleTableRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(QuitMultipleTableRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Flag != other.Flag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasFlag) hash ^= Flag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasFlag) {
        output.WriteRawTag(16);
        output.WriteInt32(Flag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasFlag) {
        output.WriteRawTag(16);
        output.WriteInt32(Flag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasFlag) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Flag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(QuitMultipleTableRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasFlag) {
        Flag = other.Flag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Flag = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Flag = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class QuitAllMultipleTableREQ : pb::IMessage<QuitAllMultipleTableREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QuitAllMultipleTableREQ> _parser = new pb::MessageParser<QuitAllMultipleTableREQ>(() => new QuitAllMultipleTableREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<QuitAllMultipleTableREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuitAllMultipleTableREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuitAllMultipleTableREQ(QuitAllMultipleTableREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuitAllMultipleTableREQ Clone() {
      return new QuitAllMultipleTableREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as QuitAllMultipleTableREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(QuitAllMultipleTableREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(QuitAllMultipleTableREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class QuitAllMultipleTableRSP : pb::IMessage<QuitAllMultipleTableRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QuitAllMultipleTableRSP> _parser = new pb::MessageParser<QuitAllMultipleTableRSP>(() => new QuitAllMultipleTableRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<QuitAllMultipleTableRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuitAllMultipleTableRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuitAllMultipleTableRSP(QuitAllMultipleTableRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuitAllMultipleTableRSP Clone() {
      return new QuitAllMultipleTableRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// 0 success    -1 fail
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as QuitAllMultipleTableRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(QuitAllMultipleTableRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(QuitAllMultipleTableRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RoundHintMultipleTableREQ : pb::IMessage<RoundHintMultipleTableREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoundHintMultipleTableREQ> _parser = new pb::MessageParser<RoundHintMultipleTableREQ>(() => new RoundHintMultipleTableREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RoundHintMultipleTableREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundHintMultipleTableREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundHintMultipleTableREQ(RoundHintMultipleTableREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundHintMultipleTableREQ Clone() {
      return new RoundHintMultipleTableREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RoundHintMultipleTableREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RoundHintMultipleTableREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RoundHintMultipleTableREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class RoundHintMultipleTableRSP : pb::IMessage<RoundHintMultipleTableRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoundHintMultipleTableRSP> _parser = new pb::MessageParser<RoundHintMultipleTableRSP>(() => new RoundHintMultipleTableRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RoundHintMultipleTableRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundHintMultipleTableRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundHintMultipleTableRSP(RoundHintMultipleTableRSP other) : this() {
      _hasBits0 = other._hasBits0;
      roomtype_ = other.roomtype_;
      blind_ = other.blind_;
      ante_ = other.ante_;
      roomid_ = other.roomid_;
      clubid_ = other.clubid_;
      seatid_ = other.seatid_;
      lastTime_ = other.lastTime_;
      roomName_ = other.roomName_;
      clubName_ = other.clubName_;
      seatNum_ = other.seatNum_;
      roomMode_ = other.roomMode_;
      gameMode_ = other.gameMode_;
      ppsrid_ = other.ppsrid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoundHintMultipleTableRSP Clone() {
      return new RoundHintMultipleTableRSP(this);
    }

    /// <summary>Field number for the "roomtype" field.</summary>
    public const int RoomtypeFieldNumber = 1;
    private readonly static uint RoomtypeDefaultValue = 0;

    private uint roomtype_;
    /// <summary>
    /// 1 OMAHA 6人桌 | 2 OMAHA 9人桌 | 3 Cash 6人桌 | 4 Cash 9人桌 | 8 OMAHA 2人桌 | 9 Cash 2人桌 | 10 OFC 2人桌 | 11 OFC 3人桌 | 15 6+ 2人 | 16 6+ 6人 | 17 6+ 9人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Roomtype {
      get { if ((_hasBits0 & 1) != 0) { return roomtype_; } else { return RoomtypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomtype_ = value;
      }
    }
    /// <summary>Gets whether the "roomtype" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomtype {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "roomtype" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomtype() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "blind" field.</summary>
    public const int BlindFieldNumber = 2;
    private readonly static int BlindDefaultValue = 0;

    private int blind_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Blind {
      get { if ((_hasBits0 & 2) != 0) { return blind_; } else { return BlindDefaultValue; } }
      set {
        _hasBits0 |= 2;
        blind_ = value;
      }
    }
    /// <summary>Gets whether the "blind" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlind {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "blind" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlind() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "ante" field.</summary>
    public const int AnteFieldNumber = 3;
    private readonly static int AnteDefaultValue = 0;

    private int ante_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ante {
      get { if ((_hasBits0 & 4) != 0) { return ante_; } else { return AnteDefaultValue; } }
      set {
        _hasBits0 |= 4;
        ante_ = value;
      }
    }
    /// <summary>Gets whether the "ante" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAnte {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "ante" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAnte() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 4;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 8) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 5;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 16) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 6;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 32) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 32;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "last_time" field.</summary>
    public const int LastTimeFieldNumber = 7;
    private readonly static int LastTimeDefaultValue = 0;

    private int lastTime_;
    /// <summary>
    /// 剩余时间，单位秒
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LastTime {
      get { if ((_hasBits0 & 64) != 0) { return lastTime_; } else { return LastTimeDefaultValue; } }
      set {
        _hasBits0 |= 64;
        lastTime_ = value;
      }
    }
    /// <summary>Gets whether the "last_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLastTime {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "last_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLastTime() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "room_name" field.</summary>
    public const int RoomNameFieldNumber = 8;
    private readonly static string RoomNameDefaultValue = "";

    private string roomName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomName {
      get { return roomName_ ?? RoomNameDefaultValue; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "room_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomName {
      get { return roomName_ != null; }
    }
    /// <summary>Clears the value of the "room_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomName() {
      roomName_ = null;
    }

    /// <summary>Field number for the "club_name" field.</summary>
    public const int ClubNameFieldNumber = 9;
    private readonly static string ClubNameDefaultValue = "";

    private string clubName_;
    /// <summary>
    ///房间所属俱乐部名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClubName {
      get { return clubName_ ?? ClubNameDefaultValue; }
      set {
        clubName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "club_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubName {
      get { return clubName_ != null; }
    }
    /// <summary>Clears the value of the "club_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubName() {
      clubName_ = null;
    }

    /// <summary>Field number for the "seat_num" field.</summary>
    public const int SeatNumFieldNumber = 10;
    private readonly static int SeatNumDefaultValue = 0;

    private int seatNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SeatNum {
      get { if ((_hasBits0 & 128) != 0) { return seatNum_; } else { return SeatNumDefaultValue; } }
      set {
        _hasBits0 |= 128;
        seatNum_ = value;
      }
    }
    /// <summary>Gets whether the "seat_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatNum {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "seat_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatNum() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "room_mode" field.</summary>
    public const int RoomModeFieldNumber = 11;
    private readonly static global::Texas.Protocol.RoomMode RoomModeDefaultValue = global::Texas.Protocol.RoomMode.None;

    private global::Texas.Protocol.RoomMode roomMode_;
    /// <summary>
    ///房间属性，如俱乐部/大厅
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomMode RoomMode {
      get { if ((_hasBits0 & 256) != 0) { return roomMode_; } else { return RoomModeDefaultValue; } }
      set {
        _hasBits0 |= 256;
        roomMode_ = value;
      }
    }
    /// <summary>Gets whether the "room_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomMode {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "room_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomMode() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "game_mode" field.</summary>
    public const int GameModeFieldNumber = 13;
    private readonly static global::Texas.Protocol.GameMode GameModeDefaultValue = global::Texas.Protocol.GameMode.Regular;

    private global::Texas.Protocol.GameMode gameMode_;
    /// <summary>
    ///  optional RoomType room_type = 12;//房间类型，如nlh/plp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.GameMode GameMode {
      get { if ((_hasBits0 & 512) != 0) { return gameMode_; } else { return GameModeDefaultValue; } }
      set {
        _hasBits0 |= 512;
        gameMode_ = value;
      }
    }
    /// <summary>Gets whether the "game_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameMode {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "game_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameMode() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "ppsrid" field.</summary>
    public const int PpsridFieldNumber = 14;
    private readonly static int PpsridDefaultValue = 0;

    private int ppsrid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ppsrid {
      get { if ((_hasBits0 & 1024) != 0) { return ppsrid_; } else { return PpsridDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        ppsrid_ = value;
      }
    }
    /// <summary>Gets whether the "ppsrid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpsrid {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "ppsrid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpsrid() {
      _hasBits0 &= ~1024;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RoundHintMultipleTableRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RoundHintMultipleTableRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomtype != other.Roomtype) return false;
      if (Blind != other.Blind) return false;
      if (Ante != other.Ante) return false;
      if (Roomid != other.Roomid) return false;
      if (Clubid != other.Clubid) return false;
      if (Seatid != other.Seatid) return false;
      if (LastTime != other.LastTime) return false;
      if (RoomName != other.RoomName) return false;
      if (ClubName != other.ClubName) return false;
      if (SeatNum != other.SeatNum) return false;
      if (RoomMode != other.RoomMode) return false;
      if (GameMode != other.GameMode) return false;
      if (Ppsrid != other.Ppsrid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomtype) hash ^= Roomtype.GetHashCode();
      if (HasBlind) hash ^= Blind.GetHashCode();
      if (HasAnte) hash ^= Ante.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasLastTime) hash ^= LastTime.GetHashCode();
      if (HasRoomName) hash ^= RoomName.GetHashCode();
      if (HasClubName) hash ^= ClubName.GetHashCode();
      if (HasSeatNum) hash ^= SeatNum.GetHashCode();
      if (HasRoomMode) hash ^= RoomMode.GetHashCode();
      if (HasGameMode) hash ^= GameMode.GetHashCode();
      if (HasPpsrid) hash ^= Ppsrid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomtype) {
        output.WriteRawTag(8);
        output.WriteUInt32(Roomtype);
      }
      if (HasBlind) {
        output.WriteRawTag(16);
        output.WriteInt32(Blind);
      }
      if (HasAnte) {
        output.WriteRawTag(24);
        output.WriteInt32(Ante);
      }
      if (HasRoomid) {
        output.WriteRawTag(32);
        output.WriteInt32(Roomid);
      }
      if (HasClubid) {
        output.WriteRawTag(40);
        output.WriteInt32(Clubid);
      }
      if (HasSeatid) {
        output.WriteRawTag(48);
        output.WriteInt32(Seatid);
      }
      if (HasLastTime) {
        output.WriteRawTag(56);
        output.WriteInt32(LastTime);
      }
      if (HasRoomName) {
        output.WriteRawTag(66);
        output.WriteString(RoomName);
      }
      if (HasClubName) {
        output.WriteRawTag(74);
        output.WriteString(ClubName);
      }
      if (HasSeatNum) {
        output.WriteRawTag(80);
        output.WriteInt32(SeatNum);
      }
      if (HasRoomMode) {
        output.WriteRawTag(88);
        output.WriteEnum((int) RoomMode);
      }
      if (HasGameMode) {
        output.WriteRawTag(104);
        output.WriteEnum((int) GameMode);
      }
      if (HasPpsrid) {
        output.WriteRawTag(112);
        output.WriteInt32(Ppsrid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomtype) {
        output.WriteRawTag(8);
        output.WriteUInt32(Roomtype);
      }
      if (HasBlind) {
        output.WriteRawTag(16);
        output.WriteInt32(Blind);
      }
      if (HasAnte) {
        output.WriteRawTag(24);
        output.WriteInt32(Ante);
      }
      if (HasRoomid) {
        output.WriteRawTag(32);
        output.WriteInt32(Roomid);
      }
      if (HasClubid) {
        output.WriteRawTag(40);
        output.WriteInt32(Clubid);
      }
      if (HasSeatid) {
        output.WriteRawTag(48);
        output.WriteInt32(Seatid);
      }
      if (HasLastTime) {
        output.WriteRawTag(56);
        output.WriteInt32(LastTime);
      }
      if (HasRoomName) {
        output.WriteRawTag(66);
        output.WriteString(RoomName);
      }
      if (HasClubName) {
        output.WriteRawTag(74);
        output.WriteString(ClubName);
      }
      if (HasSeatNum) {
        output.WriteRawTag(80);
        output.WriteInt32(SeatNum);
      }
      if (HasRoomMode) {
        output.WriteRawTag(88);
        output.WriteEnum((int) RoomMode);
      }
      if (HasGameMode) {
        output.WriteRawTag(104);
        output.WriteEnum((int) GameMode);
      }
      if (HasPpsrid) {
        output.WriteRawTag(112);
        output.WriteInt32(Ppsrid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomtype) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Roomtype);
      }
      if (HasBlind) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Blind);
      }
      if (HasAnte) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ante);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasLastTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LastTime);
      }
      if (HasRoomName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (HasClubName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClubName);
      }
      if (HasSeatNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SeatNum);
      }
      if (HasRoomMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomMode);
      }
      if (HasGameMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
      }
      if (HasPpsrid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ppsrid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RoundHintMultipleTableRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomtype) {
        Roomtype = other.Roomtype;
      }
      if (other.HasBlind) {
        Blind = other.Blind;
      }
      if (other.HasAnte) {
        Ante = other.Ante;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasLastTime) {
        LastTime = other.LastTime;
      }
      if (other.HasRoomName) {
        RoomName = other.RoomName;
      }
      if (other.HasClubName) {
        ClubName = other.ClubName;
      }
      if (other.HasSeatNum) {
        SeatNum = other.SeatNum;
      }
      if (other.HasRoomMode) {
        RoomMode = other.RoomMode;
      }
      if (other.HasGameMode) {
        GameMode = other.GameMode;
      }
      if (other.HasPpsrid) {
        Ppsrid = other.Ppsrid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Roomtype = input.ReadUInt32();
            break;
          }
          case 16: {
            Blind = input.ReadInt32();
            break;
          }
          case 24: {
            Ante = input.ReadInt32();
            break;
          }
          case 32: {
            Roomid = input.ReadInt32();
            break;
          }
          case 40: {
            Clubid = input.ReadInt32();
            break;
          }
          case 48: {
            Seatid = input.ReadInt32();
            break;
          }
          case 56: {
            LastTime = input.ReadInt32();
            break;
          }
          case 66: {
            RoomName = input.ReadString();
            break;
          }
          case 74: {
            ClubName = input.ReadString();
            break;
          }
          case 80: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 88: {
            RoomMode = (global::Texas.Protocol.RoomMode) input.ReadEnum();
            break;
          }
          case 104: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 112: {
            Ppsrid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Roomtype = input.ReadUInt32();
            break;
          }
          case 16: {
            Blind = input.ReadInt32();
            break;
          }
          case 24: {
            Ante = input.ReadInt32();
            break;
          }
          case 32: {
            Roomid = input.ReadInt32();
            break;
          }
          case 40: {
            Clubid = input.ReadInt32();
            break;
          }
          case 48: {
            Seatid = input.ReadInt32();
            break;
          }
          case 56: {
            LastTime = input.ReadInt32();
            break;
          }
          case 66: {
            RoomName = input.ReadString();
            break;
          }
          case 74: {
            ClubName = input.ReadString();
            break;
          }
          case 80: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 88: {
            RoomMode = (global::Texas.Protocol.RoomMode) input.ReadEnum();
            break;
          }
          case 104: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 112: {
            Ppsrid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FinishRoundHintRSP : pb::IMessage<FinishRoundHintRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FinishRoundHintRSP> _parser = new pb::MessageParser<FinishRoundHintRSP>(() => new FinishRoundHintRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FinishRoundHintRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FinishRoundHintRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FinishRoundHintRSP(FinishRoundHintRSP other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FinishRoundHintRSP Clone() {
      return new FinishRoundHintRSP(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 1) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FinishRoundHintRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FinishRoundHintRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FinishRoundHintRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MultipleTableChangeRoomREQ : pb::IMessage<MultipleTableChangeRoomREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MultipleTableChangeRoomREQ> _parser = new pb::MessageParser<MultipleTableChangeRoomREQ>(() => new MultipleTableChangeRoomREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MultipleTableChangeRoomREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MultipleTableChangeRoomREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MultipleTableChangeRoomREQ(MultipleTableChangeRoomREQ other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MultipleTableChangeRoomREQ Clone() {
      return new MultipleTableChangeRoomREQ(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 1) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MultipleTableChangeRoomREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MultipleTableChangeRoomREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MultipleTableChangeRoomREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MultipleTableChangeRoomRSP : pb::IMessage<MultipleTableChangeRoomRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MultipleTableChangeRoomRSP> _parser = new pb::MessageParser<MultipleTableChangeRoomRSP>(() => new MultipleTableChangeRoomRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MultipleTableChangeRoomRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MultipleTableChangeRoomRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MultipleTableChangeRoomRSP(MultipleTableChangeRoomRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      roomid_ = other.roomid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MultipleTableChangeRoomRSP Clone() {
      return new MultipleTableChangeRoomRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// 0 success    -1 fail
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 2;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 2) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MultipleTableChangeRoomRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MultipleTableChangeRoomRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Roomid != other.Roomid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(Roomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(Roomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MultipleTableChangeRoomRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Roomid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Roomid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetRoomInfoREQ : pb::IMessage<GetRoomInfoREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetRoomInfoREQ> _parser = new pb::MessageParser<GetRoomInfoREQ>(() => new GetRoomInfoREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetRoomInfoREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRoomInfoREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRoomInfoREQ(GetRoomInfoREQ other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRoomInfoREQ Clone() {
      return new GetRoomInfoREQ(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 1) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetRoomInfoREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetRoomInfoREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetRoomInfoREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetRoomInfoRSP : pb::IMessage<GetRoomInfoRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetRoomInfoRSP> _parser = new pb::MessageParser<GetRoomInfoRSP>(() => new GetRoomInfoRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetRoomInfoRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRoomInfoRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRoomInfoRSP(GetRoomInfoRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      reason_ = other.reason_;
      tableStatus_ = other.tableStatus_ != null ? other.tableStatus_.Clone() : null;
      roomStatus_ = other.roomStatus_ != null ? other.roomStatus_.Clone() : null;
      playingStatus_ = other.playingStatus_ != null ? other.playingStatus_.Clone() : null;
      roomInfo_ = other.roomInfo_ != null ? other.roomInfo_.Clone() : null;
      roomType_ = other.roomType_;
      sngroomInfo_ = other.sngroomInfo_ != null ? other.sngroomInfo_.Clone() : null;
      mttroomInfo_ = other.mttroomInfo_ != null ? other.mttroomInfo_.Clone() : null;
      roomid_ = other.roomid_;
      roomMode_ = other.roomMode_;
      pineroomInfo_ = other.pineroomInfo_ != null ? other.pineroomInfo_.Clone() : null;
      pineRoomStatus_ = other.pineRoomStatus_ != null ? other.pineRoomStatus_.Clone() : null;
      stormInfo_ = other.stormInfo_ != null ? other.stormInfo_.Clone() : null;
      tpRoomInfo_ = other.tpRoomInfo_ != null ? other.tpRoomInfo_.Clone() : null;
      tpTableStatus_ = other.tpTableStatus_ != null ? other.tpTableStatus_.Clone() : null;
      pusoyRoomInfo_ = other.pusoyRoomInfo_ != null ? other.pusoyRoomInfo_.Clone() : null;
      pusoyRoomStatus_ = other.pusoyRoomStatus_ != null ? other.pusoyRoomStatus_.Clone() : null;
      luckyDrawConfig_ = other.luckyDrawConfig_ != null ? other.luckyDrawConfig_.Clone() : null;
      colorRoomInfo_ = other.colorRoomInfo_ != null ? other.colorRoomInfo_.Clone() : null;
      colorRoomStatus_ = other.colorRoomStatus_ != null ? other.colorRoomStatus_.Clone() : null;
      tongitsRoomInfo_ = other.tongitsRoomInfo_ != null ? other.tongitsRoomInfo_.Clone() : null;
      tongitsRoomStatus_ = other.tongitsRoomStatus_ != null ? other.tongitsRoomStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRoomInfoRSP Clone() {
      return new GetRoomInfoRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// 0 success, -1 fail
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 2;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "table_status" field.</summary>
    public const int TableStatusFieldNumber = 3;
    private global::Texas.Protocol.TableStatus tableStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TableStatus TableStatus {
      get { return tableStatus_; }
      set {
        tableStatus_ = value;
      }
    }

    /// <summary>Field number for the "room_status" field.</summary>
    public const int RoomStatusFieldNumber = 4;
    private global::Texas.Protocol.RoomStatus roomStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomStatus RoomStatus {
      get { return roomStatus_; }
      set {
        roomStatus_ = value;
      }
    }

    /// <summary>Field number for the "playing_status" field.</summary>
    public const int PlayingStatusFieldNumber = 5;
    private global::Texas.Protocol.PlayingStatus playingStatus_;
    /// <summary>
    /// 玩家在坐信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PlayingStatus PlayingStatus {
      get { return playingStatus_; }
      set {
        playingStatus_ = value;
      }
    }

    /// <summary>Field number for the "room_info" field.</summary>
    public const int RoomInfoFieldNumber = 6;
    private global::Texas.Protocol.RoomInfo roomInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomInfo RoomInfo {
      get { return roomInfo_; }
      set {
        roomInfo_ = value;
      }
    }

    /// <summary>Field number for the "room_type" field.</summary>
    public const int RoomTypeFieldNumber = 7;
    private readonly static global::Texas.Protocol.RoomType RoomTypeDefaultValue = global::Texas.Protocol.RoomType.TestRoom;

    private global::Texas.Protocol.RoomType roomType_;
    /// <summary>
    /// sng房间使用sngroom_info  mtt房间使用sngroom_info + mttroom_info
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomType RoomType {
      get { if ((_hasBits0 & 2) != 0) { return roomType_; } else { return RoomTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        roomType_ = value;
      }
    }
    /// <summary>Gets whether the "room_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "room_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "sngroom_info" field.</summary>
    public const int SngroomInfoFieldNumber = 8;
    private global::Texas.Protocol.SngRoomInfo sngroomInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.SngRoomInfo SngroomInfo {
      get { return sngroomInfo_; }
      set {
        sngroomInfo_ = value;
      }
    }

    /// <summary>Field number for the "mttroom_info" field.</summary>
    public const int MttroomInfoFieldNumber = 9;
    private global::Texas.Protocol.MttRoomInfo mttroomInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.MttRoomInfo MttroomInfo {
      get { return mttroomInfo_; }
      set {
        mttroomInfo_ = value;
      }
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 10;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 4) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "room_mode" field.</summary>
    public const int RoomModeFieldNumber = 11;
    private readonly static global::Texas.Protocol.RoomMode RoomModeDefaultValue = global::Texas.Protocol.RoomMode.None;

    private global::Texas.Protocol.RoomMode roomMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomMode RoomMode {
      get { if ((_hasBits0 & 8) != 0) { return roomMode_; } else { return RoomModeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        roomMode_ = value;
      }
    }
    /// <summary>Gets whether the "room_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomMode {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "room_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomMode() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "pineroom_info" field.</summary>
    public const int PineroomInfoFieldNumber = 12;
    private global::Texas.Protocol.PineRoomInfo pineroomInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PineRoomInfo PineroomInfo {
      get { return pineroomInfo_; }
      set {
        pineroomInfo_ = value;
      }
    }

    /// <summary>Field number for the "pine_room_status" field.</summary>
    public const int PineRoomStatusFieldNumber = 13;
    private global::Texas.Protocol.PineRoomStatus pineRoomStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PineRoomStatus PineRoomStatus {
      get { return pineRoomStatus_; }
      set {
        pineRoomStatus_ = value;
      }
    }

    /// <summary>Field number for the "storm_info" field.</summary>
    public const int StormInfoFieldNumber = 14;
    private global::Texas.Protocol.PPchipsStormInfo stormInfo_;
    /// <summary>
    /// ppstorm info
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PPchipsStormInfo StormInfo {
      get { return stormInfo_; }
      set {
        stormInfo_ = value;
      }
    }

    /// <summary>Field number for the "tp_room_info" field.</summary>
    public const int TpRoomInfoFieldNumber = 15;
    private global::Texas.Protocol.TpRoomInfo tpRoomInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TpRoomInfo TpRoomInfo {
      get { return tpRoomInfo_; }
      set {
        tpRoomInfo_ = value;
      }
    }

    /// <summary>Field number for the "tp_table_status" field.</summary>
    public const int TpTableStatusFieldNumber = 16;
    private global::Texas.Protocol.TpTableStatus tpTableStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TpTableStatus TpTableStatus {
      get { return tpTableStatus_; }
      set {
        tpTableStatus_ = value;
      }
    }

    /// <summary>Field number for the "pusoy_room_info" field.</summary>
    public const int PusoyRoomInfoFieldNumber = 17;
    private global::Texas.Protocol.PusoyRoomInfo pusoyRoomInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PusoyRoomInfo PusoyRoomInfo {
      get { return pusoyRoomInfo_; }
      set {
        pusoyRoomInfo_ = value;
      }
    }

    /// <summary>Field number for the "pusoy_room_status" field.</summary>
    public const int PusoyRoomStatusFieldNumber = 18;
    private global::Texas.Protocol.PusoyRoomStatus pusoyRoomStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PusoyRoomStatus PusoyRoomStatus {
      get { return pusoyRoomStatus_; }
      set {
        pusoyRoomStatus_ = value;
      }
    }

    /// <summary>Field number for the "lucky_draw_config" field.</summary>
    public const int LuckyDrawConfigFieldNumber = 19;
    private global::Texas.Protocol.LuckyDrawConfig luckyDrawConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.LuckyDrawConfig LuckyDrawConfig {
      get { return luckyDrawConfig_; }
      set {
        luckyDrawConfig_ = value;
      }
    }

    /// <summary>Field number for the "color_room_info" field.</summary>
    public const int ColorRoomInfoFieldNumber = 20;
    private global::Texas.Protocol.ColorRoomInfo colorRoomInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.ColorRoomInfo ColorRoomInfo {
      get { return colorRoomInfo_; }
      set {
        colorRoomInfo_ = value;
      }
    }

    /// <summary>Field number for the "color_room_status" field.</summary>
    public const int ColorRoomStatusFieldNumber = 21;
    private global::Texas.Protocol.ColorRoomStatus colorRoomStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.ColorRoomStatus ColorRoomStatus {
      get { return colorRoomStatus_; }
      set {
        colorRoomStatus_ = value;
      }
    }

    /// <summary>Field number for the "tongits_room_info" field.</summary>
    public const int TongitsRoomInfoFieldNumber = 22;
    private global::Texas.Protocol.TongitsRoomInfo tongitsRoomInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TongitsRoomInfo TongitsRoomInfo {
      get { return tongitsRoomInfo_; }
      set {
        tongitsRoomInfo_ = value;
      }
    }

    /// <summary>Field number for the "tongits_room_status" field.</summary>
    public const int TongitsRoomStatusFieldNumber = 23;
    private global::Texas.Protocol.TongitsRoomStatus tongitsRoomStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TongitsRoomStatus TongitsRoomStatus {
      get { return tongitsRoomStatus_; }
      set {
        tongitsRoomStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetRoomInfoRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetRoomInfoRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Reason != other.Reason) return false;
      if (!object.Equals(TableStatus, other.TableStatus)) return false;
      if (!object.Equals(RoomStatus, other.RoomStatus)) return false;
      if (!object.Equals(PlayingStatus, other.PlayingStatus)) return false;
      if (!object.Equals(RoomInfo, other.RoomInfo)) return false;
      if (RoomType != other.RoomType) return false;
      if (!object.Equals(SngroomInfo, other.SngroomInfo)) return false;
      if (!object.Equals(MttroomInfo, other.MttroomInfo)) return false;
      if (Roomid != other.Roomid) return false;
      if (RoomMode != other.RoomMode) return false;
      if (!object.Equals(PineroomInfo, other.PineroomInfo)) return false;
      if (!object.Equals(PineRoomStatus, other.PineRoomStatus)) return false;
      if (!object.Equals(StormInfo, other.StormInfo)) return false;
      if (!object.Equals(TpRoomInfo, other.TpRoomInfo)) return false;
      if (!object.Equals(TpTableStatus, other.TpTableStatus)) return false;
      if (!object.Equals(PusoyRoomInfo, other.PusoyRoomInfo)) return false;
      if (!object.Equals(PusoyRoomStatus, other.PusoyRoomStatus)) return false;
      if (!object.Equals(LuckyDrawConfig, other.LuckyDrawConfig)) return false;
      if (!object.Equals(ColorRoomInfo, other.ColorRoomInfo)) return false;
      if (!object.Equals(ColorRoomStatus, other.ColorRoomStatus)) return false;
      if (!object.Equals(TongitsRoomInfo, other.TongitsRoomInfo)) return false;
      if (!object.Equals(TongitsRoomStatus, other.TongitsRoomStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (tableStatus_ != null) hash ^= TableStatus.GetHashCode();
      if (roomStatus_ != null) hash ^= RoomStatus.GetHashCode();
      if (playingStatus_ != null) hash ^= PlayingStatus.GetHashCode();
      if (roomInfo_ != null) hash ^= RoomInfo.GetHashCode();
      if (HasRoomType) hash ^= RoomType.GetHashCode();
      if (sngroomInfo_ != null) hash ^= SngroomInfo.GetHashCode();
      if (mttroomInfo_ != null) hash ^= MttroomInfo.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasRoomMode) hash ^= RoomMode.GetHashCode();
      if (pineroomInfo_ != null) hash ^= PineroomInfo.GetHashCode();
      if (pineRoomStatus_ != null) hash ^= PineRoomStatus.GetHashCode();
      if (stormInfo_ != null) hash ^= StormInfo.GetHashCode();
      if (tpRoomInfo_ != null) hash ^= TpRoomInfo.GetHashCode();
      if (tpTableStatus_ != null) hash ^= TpTableStatus.GetHashCode();
      if (pusoyRoomInfo_ != null) hash ^= PusoyRoomInfo.GetHashCode();
      if (pusoyRoomStatus_ != null) hash ^= PusoyRoomStatus.GetHashCode();
      if (luckyDrawConfig_ != null) hash ^= LuckyDrawConfig.GetHashCode();
      if (colorRoomInfo_ != null) hash ^= ColorRoomInfo.GetHashCode();
      if (colorRoomStatus_ != null) hash ^= ColorRoomStatus.GetHashCode();
      if (tongitsRoomInfo_ != null) hash ^= TongitsRoomInfo.GetHashCode();
      if (tongitsRoomStatus_ != null) hash ^= TongitsRoomStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasReason) {
        output.WriteRawTag(18);
        output.WriteString(Reason);
      }
      if (tableStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TableStatus);
      }
      if (roomStatus_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RoomStatus);
      }
      if (playingStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PlayingStatus);
      }
      if (roomInfo_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RoomInfo);
      }
      if (HasRoomType) {
        output.WriteRawTag(56);
        output.WriteEnum((int) RoomType);
      }
      if (sngroomInfo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(SngroomInfo);
      }
      if (mttroomInfo_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(MttroomInfo);
      }
      if (HasRoomid) {
        output.WriteRawTag(80);
        output.WriteInt32(Roomid);
      }
      if (HasRoomMode) {
        output.WriteRawTag(88);
        output.WriteEnum((int) RoomMode);
      }
      if (pineroomInfo_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(PineroomInfo);
      }
      if (pineRoomStatus_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(PineRoomStatus);
      }
      if (stormInfo_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(StormInfo);
      }
      if (tpRoomInfo_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(TpRoomInfo);
      }
      if (tpTableStatus_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(TpTableStatus);
      }
      if (pusoyRoomInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(PusoyRoomInfo);
      }
      if (pusoyRoomStatus_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(PusoyRoomStatus);
      }
      if (luckyDrawConfig_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(LuckyDrawConfig);
      }
      if (colorRoomInfo_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(ColorRoomInfo);
      }
      if (colorRoomStatus_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(ColorRoomStatus);
      }
      if (tongitsRoomInfo_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(TongitsRoomInfo);
      }
      if (tongitsRoomStatus_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(TongitsRoomStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasReason) {
        output.WriteRawTag(18);
        output.WriteString(Reason);
      }
      if (tableStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TableStatus);
      }
      if (roomStatus_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RoomStatus);
      }
      if (playingStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PlayingStatus);
      }
      if (roomInfo_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RoomInfo);
      }
      if (HasRoomType) {
        output.WriteRawTag(56);
        output.WriteEnum((int) RoomType);
      }
      if (sngroomInfo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(SngroomInfo);
      }
      if (mttroomInfo_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(MttroomInfo);
      }
      if (HasRoomid) {
        output.WriteRawTag(80);
        output.WriteInt32(Roomid);
      }
      if (HasRoomMode) {
        output.WriteRawTag(88);
        output.WriteEnum((int) RoomMode);
      }
      if (pineroomInfo_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(PineroomInfo);
      }
      if (pineRoomStatus_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(PineRoomStatus);
      }
      if (stormInfo_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(StormInfo);
      }
      if (tpRoomInfo_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(TpRoomInfo);
      }
      if (tpTableStatus_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(TpTableStatus);
      }
      if (pusoyRoomInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(PusoyRoomInfo);
      }
      if (pusoyRoomStatus_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(PusoyRoomStatus);
      }
      if (luckyDrawConfig_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(LuckyDrawConfig);
      }
      if (colorRoomInfo_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(ColorRoomInfo);
      }
      if (colorRoomStatus_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(ColorRoomStatus);
      }
      if (tongitsRoomInfo_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(TongitsRoomInfo);
      }
      if (tongitsRoomStatus_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(TongitsRoomStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (tableStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TableStatus);
      }
      if (roomStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomStatus);
      }
      if (playingStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayingStatus);
      }
      if (roomInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomInfo);
      }
      if (HasRoomType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomType);
      }
      if (sngroomInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SngroomInfo);
      }
      if (mttroomInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MttroomInfo);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasRoomMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomMode);
      }
      if (pineroomInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PineroomInfo);
      }
      if (pineRoomStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PineRoomStatus);
      }
      if (stormInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StormInfo);
      }
      if (tpRoomInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TpRoomInfo);
      }
      if (tpTableStatus_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TpTableStatus);
      }
      if (pusoyRoomInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PusoyRoomInfo);
      }
      if (pusoyRoomStatus_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PusoyRoomStatus);
      }
      if (luckyDrawConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LuckyDrawConfig);
      }
      if (colorRoomInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ColorRoomInfo);
      }
      if (colorRoomStatus_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ColorRoomStatus);
      }
      if (tongitsRoomInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TongitsRoomInfo);
      }
      if (tongitsRoomStatus_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TongitsRoomStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetRoomInfoRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.tableStatus_ != null) {
        if (tableStatus_ == null) {
          TableStatus = new global::Texas.Protocol.TableStatus();
        }
        TableStatus.MergeFrom(other.TableStatus);
      }
      if (other.roomStatus_ != null) {
        if (roomStatus_ == null) {
          RoomStatus = new global::Texas.Protocol.RoomStatus();
        }
        RoomStatus.MergeFrom(other.RoomStatus);
      }
      if (other.playingStatus_ != null) {
        if (playingStatus_ == null) {
          PlayingStatus = new global::Texas.Protocol.PlayingStatus();
        }
        PlayingStatus.MergeFrom(other.PlayingStatus);
      }
      if (other.roomInfo_ != null) {
        if (roomInfo_ == null) {
          RoomInfo = new global::Texas.Protocol.RoomInfo();
        }
        RoomInfo.MergeFrom(other.RoomInfo);
      }
      if (other.HasRoomType) {
        RoomType = other.RoomType;
      }
      if (other.sngroomInfo_ != null) {
        if (sngroomInfo_ == null) {
          SngroomInfo = new global::Texas.Protocol.SngRoomInfo();
        }
        SngroomInfo.MergeFrom(other.SngroomInfo);
      }
      if (other.mttroomInfo_ != null) {
        if (mttroomInfo_ == null) {
          MttroomInfo = new global::Texas.Protocol.MttRoomInfo();
        }
        MttroomInfo.MergeFrom(other.MttroomInfo);
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasRoomMode) {
        RoomMode = other.RoomMode;
      }
      if (other.pineroomInfo_ != null) {
        if (pineroomInfo_ == null) {
          PineroomInfo = new global::Texas.Protocol.PineRoomInfo();
        }
        PineroomInfo.MergeFrom(other.PineroomInfo);
      }
      if (other.pineRoomStatus_ != null) {
        if (pineRoomStatus_ == null) {
          PineRoomStatus = new global::Texas.Protocol.PineRoomStatus();
        }
        PineRoomStatus.MergeFrom(other.PineRoomStatus);
      }
      if (other.stormInfo_ != null) {
        if (stormInfo_ == null) {
          StormInfo = new global::Texas.Protocol.PPchipsStormInfo();
        }
        StormInfo.MergeFrom(other.StormInfo);
      }
      if (other.tpRoomInfo_ != null) {
        if (tpRoomInfo_ == null) {
          TpRoomInfo = new global::Texas.Protocol.TpRoomInfo();
        }
        TpRoomInfo.MergeFrom(other.TpRoomInfo);
      }
      if (other.tpTableStatus_ != null) {
        if (tpTableStatus_ == null) {
          TpTableStatus = new global::Texas.Protocol.TpTableStatus();
        }
        TpTableStatus.MergeFrom(other.TpTableStatus);
      }
      if (other.pusoyRoomInfo_ != null) {
        if (pusoyRoomInfo_ == null) {
          PusoyRoomInfo = new global::Texas.Protocol.PusoyRoomInfo();
        }
        PusoyRoomInfo.MergeFrom(other.PusoyRoomInfo);
      }
      if (other.pusoyRoomStatus_ != null) {
        if (pusoyRoomStatus_ == null) {
          PusoyRoomStatus = new global::Texas.Protocol.PusoyRoomStatus();
        }
        PusoyRoomStatus.MergeFrom(other.PusoyRoomStatus);
      }
      if (other.luckyDrawConfig_ != null) {
        if (luckyDrawConfig_ == null) {
          LuckyDrawConfig = new global::Texas.Protocol.LuckyDrawConfig();
        }
        LuckyDrawConfig.MergeFrom(other.LuckyDrawConfig);
      }
      if (other.colorRoomInfo_ != null) {
        if (colorRoomInfo_ == null) {
          ColorRoomInfo = new global::Texas.Protocol.ColorRoomInfo();
        }
        ColorRoomInfo.MergeFrom(other.ColorRoomInfo);
      }
      if (other.colorRoomStatus_ != null) {
        if (colorRoomStatus_ == null) {
          ColorRoomStatus = new global::Texas.Protocol.ColorRoomStatus();
        }
        ColorRoomStatus.MergeFrom(other.ColorRoomStatus);
      }
      if (other.tongitsRoomInfo_ != null) {
        if (tongitsRoomInfo_ == null) {
          TongitsRoomInfo = new global::Texas.Protocol.TongitsRoomInfo();
        }
        TongitsRoomInfo.MergeFrom(other.TongitsRoomInfo);
      }
      if (other.tongitsRoomStatus_ != null) {
        if (tongitsRoomStatus_ == null) {
          TongitsRoomStatus = new global::Texas.Protocol.TongitsRoomStatus();
        }
        TongitsRoomStatus.MergeFrom(other.TongitsRoomStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Reason = input.ReadString();
            break;
          }
          case 26: {
            if (tableStatus_ == null) {
              TableStatus = new global::Texas.Protocol.TableStatus();
            }
            input.ReadMessage(TableStatus);
            break;
          }
          case 34: {
            if (roomStatus_ == null) {
              RoomStatus = new global::Texas.Protocol.RoomStatus();
            }
            input.ReadMessage(RoomStatus);
            break;
          }
          case 42: {
            if (playingStatus_ == null) {
              PlayingStatus = new global::Texas.Protocol.PlayingStatus();
            }
            input.ReadMessage(PlayingStatus);
            break;
          }
          case 50: {
            if (roomInfo_ == null) {
              RoomInfo = new global::Texas.Protocol.RoomInfo();
            }
            input.ReadMessage(RoomInfo);
            break;
          }
          case 56: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 66: {
            if (sngroomInfo_ == null) {
              SngroomInfo = new global::Texas.Protocol.SngRoomInfo();
            }
            input.ReadMessage(SngroomInfo);
            break;
          }
          case 74: {
            if (mttroomInfo_ == null) {
              MttroomInfo = new global::Texas.Protocol.MttRoomInfo();
            }
            input.ReadMessage(MttroomInfo);
            break;
          }
          case 80: {
            Roomid = input.ReadInt32();
            break;
          }
          case 88: {
            RoomMode = (global::Texas.Protocol.RoomMode) input.ReadEnum();
            break;
          }
          case 98: {
            if (pineroomInfo_ == null) {
              PineroomInfo = new global::Texas.Protocol.PineRoomInfo();
            }
            input.ReadMessage(PineroomInfo);
            break;
          }
          case 106: {
            if (pineRoomStatus_ == null) {
              PineRoomStatus = new global::Texas.Protocol.PineRoomStatus();
            }
            input.ReadMessage(PineRoomStatus);
            break;
          }
          case 114: {
            if (stormInfo_ == null) {
              StormInfo = new global::Texas.Protocol.PPchipsStormInfo();
            }
            input.ReadMessage(StormInfo);
            break;
          }
          case 122: {
            if (tpRoomInfo_ == null) {
              TpRoomInfo = new global::Texas.Protocol.TpRoomInfo();
            }
            input.ReadMessage(TpRoomInfo);
            break;
          }
          case 130: {
            if (tpTableStatus_ == null) {
              TpTableStatus = new global::Texas.Protocol.TpTableStatus();
            }
            input.ReadMessage(TpTableStatus);
            break;
          }
          case 138: {
            if (pusoyRoomInfo_ == null) {
              PusoyRoomInfo = new global::Texas.Protocol.PusoyRoomInfo();
            }
            input.ReadMessage(PusoyRoomInfo);
            break;
          }
          case 146: {
            if (pusoyRoomStatus_ == null) {
              PusoyRoomStatus = new global::Texas.Protocol.PusoyRoomStatus();
            }
            input.ReadMessage(PusoyRoomStatus);
            break;
          }
          case 154: {
            if (luckyDrawConfig_ == null) {
              LuckyDrawConfig = new global::Texas.Protocol.LuckyDrawConfig();
            }
            input.ReadMessage(LuckyDrawConfig);
            break;
          }
          case 162: {
            if (colorRoomInfo_ == null) {
              ColorRoomInfo = new global::Texas.Protocol.ColorRoomInfo();
            }
            input.ReadMessage(ColorRoomInfo);
            break;
          }
          case 170: {
            if (colorRoomStatus_ == null) {
              ColorRoomStatus = new global::Texas.Protocol.ColorRoomStatus();
            }
            input.ReadMessage(ColorRoomStatus);
            break;
          }
          case 178: {
            if (tongitsRoomInfo_ == null) {
              TongitsRoomInfo = new global::Texas.Protocol.TongitsRoomInfo();
            }
            input.ReadMessage(TongitsRoomInfo);
            break;
          }
          case 186: {
            if (tongitsRoomStatus_ == null) {
              TongitsRoomStatus = new global::Texas.Protocol.TongitsRoomStatus();
            }
            input.ReadMessage(TongitsRoomStatus);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Reason = input.ReadString();
            break;
          }
          case 26: {
            if (tableStatus_ == null) {
              TableStatus = new global::Texas.Protocol.TableStatus();
            }
            input.ReadMessage(TableStatus);
            break;
          }
          case 34: {
            if (roomStatus_ == null) {
              RoomStatus = new global::Texas.Protocol.RoomStatus();
            }
            input.ReadMessage(RoomStatus);
            break;
          }
          case 42: {
            if (playingStatus_ == null) {
              PlayingStatus = new global::Texas.Protocol.PlayingStatus();
            }
            input.ReadMessage(PlayingStatus);
            break;
          }
          case 50: {
            if (roomInfo_ == null) {
              RoomInfo = new global::Texas.Protocol.RoomInfo();
            }
            input.ReadMessage(RoomInfo);
            break;
          }
          case 56: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 66: {
            if (sngroomInfo_ == null) {
              SngroomInfo = new global::Texas.Protocol.SngRoomInfo();
            }
            input.ReadMessage(SngroomInfo);
            break;
          }
          case 74: {
            if (mttroomInfo_ == null) {
              MttroomInfo = new global::Texas.Protocol.MttRoomInfo();
            }
            input.ReadMessage(MttroomInfo);
            break;
          }
          case 80: {
            Roomid = input.ReadInt32();
            break;
          }
          case 88: {
            RoomMode = (global::Texas.Protocol.RoomMode) input.ReadEnum();
            break;
          }
          case 98: {
            if (pineroomInfo_ == null) {
              PineroomInfo = new global::Texas.Protocol.PineRoomInfo();
            }
            input.ReadMessage(PineroomInfo);
            break;
          }
          case 106: {
            if (pineRoomStatus_ == null) {
              PineRoomStatus = new global::Texas.Protocol.PineRoomStatus();
            }
            input.ReadMessage(PineRoomStatus);
            break;
          }
          case 114: {
            if (stormInfo_ == null) {
              StormInfo = new global::Texas.Protocol.PPchipsStormInfo();
            }
            input.ReadMessage(StormInfo);
            break;
          }
          case 122: {
            if (tpRoomInfo_ == null) {
              TpRoomInfo = new global::Texas.Protocol.TpRoomInfo();
            }
            input.ReadMessage(TpRoomInfo);
            break;
          }
          case 130: {
            if (tpTableStatus_ == null) {
              TpTableStatus = new global::Texas.Protocol.TpTableStatus();
            }
            input.ReadMessage(TpTableStatus);
            break;
          }
          case 138: {
            if (pusoyRoomInfo_ == null) {
              PusoyRoomInfo = new global::Texas.Protocol.PusoyRoomInfo();
            }
            input.ReadMessage(PusoyRoomInfo);
            break;
          }
          case 146: {
            if (pusoyRoomStatus_ == null) {
              PusoyRoomStatus = new global::Texas.Protocol.PusoyRoomStatus();
            }
            input.ReadMessage(PusoyRoomStatus);
            break;
          }
          case 154: {
            if (luckyDrawConfig_ == null) {
              LuckyDrawConfig = new global::Texas.Protocol.LuckyDrawConfig();
            }
            input.ReadMessage(LuckyDrawConfig);
            break;
          }
          case 162: {
            if (colorRoomInfo_ == null) {
              ColorRoomInfo = new global::Texas.Protocol.ColorRoomInfo();
            }
            input.ReadMessage(ColorRoomInfo);
            break;
          }
          case 170: {
            if (colorRoomStatus_ == null) {
              ColorRoomStatus = new global::Texas.Protocol.ColorRoomStatus();
            }
            input.ReadMessage(ColorRoomStatus);
            break;
          }
          case 178: {
            if (tongitsRoomInfo_ == null) {
              TongitsRoomInfo = new global::Texas.Protocol.TongitsRoomInfo();
            }
            input.ReadMessage(TongitsRoomInfo);
            break;
          }
          case 186: {
            if (tongitsRoomStatus_ == null) {
              TongitsRoomStatus = new global::Texas.Protocol.TongitsRoomStatus();
            }
            input.ReadMessage(TongitsRoomStatus);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///用户vip变化广播信息请求
  /// </summary>
  public sealed partial class UserVipInfoChangeBRC : pb::IMessage<UserVipInfoChangeBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserVipInfoChangeBRC> _parser = new pb::MessageParser<UserVipInfoChangeBRC>(() => new UserVipInfoChangeBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserVipInfoChangeBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserVipInfoChangeBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserVipInfoChangeBRC(UserVipInfoChangeBRC other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      vipLevel_ = other.vipLevel_;
      roomid_ = other.roomid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserVipInfoChangeBRC Clone() {
      return new UserVipInfoChangeBRC(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    /// <summary>
    ///用户 uid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "vip_level" field.</summary>
    public const int VipLevelFieldNumber = 2;
    private readonly static uint VipLevelDefaultValue = 0;

    private uint vipLevel_;
    /// <summary>
    ///当前的 vip 级别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint VipLevel {
      get { if ((_hasBits0 & 2) != 0) { return vipLevel_; } else { return VipLevelDefaultValue; } }
      set {
        _hasBits0 |= 2;
        vipLevel_ = value;
      }
    }
    /// <summary>Gets whether the "vip_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVipLevel {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "vip_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVipLevel() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 3;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    /// <summary>
    /// 需求广播的 roomid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 4) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserVipInfoChangeBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserVipInfoChangeBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (VipLevel != other.VipLevel) return false;
      if (Roomid != other.Roomid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasVipLevel) hash ^= VipLevel.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (HasVipLevel) {
        output.WriteRawTag(16);
        output.WriteUInt32(VipLevel);
      }
      if (HasRoomid) {
        output.WriteRawTag(24);
        output.WriteInt32(Roomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (HasVipLevel) {
        output.WriteRawTag(16);
        output.WriteUInt32(VipLevel);
      }
      if (HasRoomid) {
        output.WriteRawTag(24);
        output.WriteInt32(Roomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasVipLevel) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VipLevel);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserVipInfoChangeBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasVipLevel) {
        VipLevel = other.VipLevel;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 16: {
            VipLevel = input.ReadUInt32();
            break;
          }
          case 24: {
            Roomid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 16: {
            VipLevel = input.ReadUInt32();
            break;
          }
          case 24: {
            Roomid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ForumMessageNumRSP : pb::IMessage<ForumMessageNumRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ForumMessageNumRSP> _parser = new pb::MessageParser<ForumMessageNumRSP>(() => new ForumMessageNumRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ForumMessageNumRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ForumMessageNumRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ForumMessageNumRSP(ForumMessageNumRSP other) : this() {
      _hasBits0 = other._hasBits0;
      total_ = other.total_;
      like_ = other.like_;
      comment_ = other.comment_;
      system_ = other.system_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ForumMessageNumRSP Clone() {
      return new ForumMessageNumRSP(this);
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 1;
    private readonly static long TotalDefaultValue = 0L;

    private long total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Total {
      get { if ((_hasBits0 & 1) != 0) { return total_; } else { return TotalDefaultValue; } }
      set {
        _hasBits0 |= 1;
        total_ = value;
      }
    }
    /// <summary>Gets whether the "total" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotal {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "total" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotal() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "like" field.</summary>
    public const int LikeFieldNumber = 2;
    private readonly static long LikeDefaultValue = 0L;

    private long like_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Like {
      get { if ((_hasBits0 & 2) != 0) { return like_; } else { return LikeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        like_ = value;
      }
    }
    /// <summary>Gets whether the "like" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLike {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "like" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLike() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 3;
    private readonly static long CommentDefaultValue = 0L;

    private long comment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Comment {
      get { if ((_hasBits0 & 4) != 0) { return comment_; } else { return CommentDefaultValue; } }
      set {
        _hasBits0 |= 4;
        comment_ = value;
      }
    }
    /// <summary>Gets whether the "comment" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasComment {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "comment" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearComment() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "system" field.</summary>
    public const int SystemFieldNumber = 4;
    private readonly static long SystemDefaultValue = 0L;

    private long system_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long System {
      get { if ((_hasBits0 & 8) != 0) { return system_; } else { return SystemDefaultValue; } }
      set {
        _hasBits0 |= 8;
        system_ = value;
      }
    }
    /// <summary>Gets whether the "system" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSystem {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "system" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSystem() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ForumMessageNumRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ForumMessageNumRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Total != other.Total) return false;
      if (Like != other.Like) return false;
      if (Comment != other.Comment) return false;
      if (System != other.System) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTotal) hash ^= Total.GetHashCode();
      if (HasLike) hash ^= Like.GetHashCode();
      if (HasComment) hash ^= Comment.GetHashCode();
      if (HasSystem) hash ^= System.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTotal) {
        output.WriteRawTag(8);
        output.WriteInt64(Total);
      }
      if (HasLike) {
        output.WriteRawTag(16);
        output.WriteInt64(Like);
      }
      if (HasComment) {
        output.WriteRawTag(24);
        output.WriteInt64(Comment);
      }
      if (HasSystem) {
        output.WriteRawTag(32);
        output.WriteInt64(System);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTotal) {
        output.WriteRawTag(8);
        output.WriteInt64(Total);
      }
      if (HasLike) {
        output.WriteRawTag(16);
        output.WriteInt64(Like);
      }
      if (HasComment) {
        output.WriteRawTag(24);
        output.WriteInt64(Comment);
      }
      if (HasSystem) {
        output.WriteRawTag(32);
        output.WriteInt64(System);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTotal) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Total);
      }
      if (HasLike) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Like);
      }
      if (HasComment) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Comment);
      }
      if (HasSystem) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(System);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ForumMessageNumRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasTotal) {
        Total = other.Total;
      }
      if (other.HasLike) {
        Like = other.Like;
      }
      if (other.HasComment) {
        Comment = other.Comment;
      }
      if (other.HasSystem) {
        System = other.System;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Total = input.ReadInt64();
            break;
          }
          case 16: {
            Like = input.ReadInt64();
            break;
          }
          case 24: {
            Comment = input.ReadInt64();
            break;
          }
          case 32: {
            System = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Total = input.ReadInt64();
            break;
          }
          case 16: {
            Like = input.ReadInt64();
            break;
          }
          case 24: {
            Comment = input.ReadInt64();
            break;
          }
          case 32: {
            System = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayingRoomListREQ : pb::IMessage<PlayingRoomListREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayingRoomListREQ> _parser = new pb::MessageParser<PlayingRoomListREQ>(() => new PlayingRoomListREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayingRoomListREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayingRoomListREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayingRoomListREQ(PlayingRoomListREQ other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      clubid_ = other.clubid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayingRoomListREQ Clone() {
      return new PlayingRoomListREQ(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 2;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 2) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayingRoomListREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayingRoomListREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Clubid != other.Clubid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(16);
        output.WriteInt32(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(16);
        output.WriteInt32(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayingRoomListREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 16: {
            Clubid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 16: {
            Clubid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayingRoomListRSP : pb::IMessage<PlayingRoomListRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayingRoomListRSP> _parser = new pb::MessageParser<PlayingRoomListRSP>(() => new PlayingRoomListRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayingRoomListRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayingRoomListRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayingRoomListRSP(PlayingRoomListRSP other) : this() {
      _hasBits0 = other._hasBits0;
      roomList_ = other.roomList_.Clone();
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayingRoomListRSP Clone() {
      return new PlayingRoomListRSP(this);
    }

    /// <summary>Field number for the "room_list" field.</summary>
    public const int RoomListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.MultipleTableRoomInfo> _repeated_roomList_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.MultipleTableRoomInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.MultipleTableRoomInfo> roomList_ = new pbc::RepeatedField<global::Texas.Protocol.MultipleTableRoomInfo>();
    /// <summary>
    ///多桌列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.MultipleTableRoomInfo> RoomList {
      get { return roomList_; }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0:成功   -1：失败
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayingRoomListRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayingRoomListRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!roomList_.Equals(other.roomList_)) return false;
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= roomList_.GetHashCode();
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      roomList_.WriteTo(output, _repeated_roomList_codec);
      if (HasCode) {
        output.WriteRawTag(16);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      roomList_.WriteTo(ref output, _repeated_roomList_codec);
      if (HasCode) {
        output.WriteRawTag(16);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += roomList_.CalculateSize(_repeated_roomList_codec);
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayingRoomListRSP other) {
      if (other == null) {
        return;
      }
      roomList_.Add(other.roomList_);
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            roomList_.AddEntriesFrom(input, _repeated_roomList_codec);
            break;
          }
          case 16: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            roomList_.AddEntriesFrom(ref input, _repeated_roomList_codec);
            break;
          }
          case 16: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ShowDealerChoiceRSP : pb::IMessage<ShowDealerChoiceRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShowDealerChoiceRSP> _parser = new pb::MessageParser<ShowDealerChoiceRSP>(() => new ShowDealerChoiceRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ShowDealerChoiceRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShowDealerChoiceRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShowDealerChoiceRSP(ShowDealerChoiceRSP other) : this() {
      _hasBits0 = other._hasBits0;
      leftTime_ = other.leftTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShowDealerChoiceRSP Clone() {
      return new ShowDealerChoiceRSP(this);
    }

    /// <summary>Field number for the "left_time" field.</summary>
    public const int LeftTimeFieldNumber = 1;
    private readonly static int LeftTimeDefaultValue = 0;

    private int leftTime_;
    /// <summary>
    ///剩余时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LeftTime {
      get { if ((_hasBits0 & 1) != 0) { return leftTime_; } else { return LeftTimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leftTime_ = value;
      }
    }
    /// <summary>Gets whether the "left_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeftTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "left_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeftTime() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ShowDealerChoiceRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ShowDealerChoiceRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LeftTime != other.LeftTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLeftTime) hash ^= LeftTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLeftTime) {
        output.WriteRawTag(8);
        output.WriteInt32(LeftTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLeftTime) {
        output.WriteRawTag(8);
        output.WriteInt32(LeftTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLeftTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeftTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ShowDealerChoiceRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasLeftTime) {
        LeftTime = other.LeftTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LeftTime = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LeftTime = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DealerChoiceREQ : pb::IMessage<DealerChoiceREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DealerChoiceREQ> _parser = new pb::MessageParser<DealerChoiceREQ>(() => new DealerChoiceREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DealerChoiceREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DealerChoiceREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DealerChoiceREQ(DealerChoiceREQ other) : this() {
      _hasBits0 = other._hasBits0;
      gametype_ = other.gametype_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DealerChoiceREQ Clone() {
      return new DealerChoiceREQ(this);
    }

    /// <summary>Field number for the "gametype" field.</summary>
    public const int GametypeFieldNumber = 1;
    private readonly static int GametypeDefaultValue = 0;

    private int gametype_;
    /// <summary>
    ///0:无类型 1:NLH  2:PLO-5    3:PLO-4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Gametype {
      get { if ((_hasBits0 & 1) != 0) { return gametype_; } else { return GametypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gametype_ = value;
      }
    }
    /// <summary>Gets whether the "gametype" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGametype {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "gametype" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGametype() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DealerChoiceREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DealerChoiceREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gametype != other.Gametype) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGametype) hash ^= Gametype.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGametype) {
        output.WriteRawTag(8);
        output.WriteInt32(Gametype);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGametype) {
        output.WriteRawTag(8);
        output.WriteInt32(Gametype);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGametype) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gametype);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DealerChoiceREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasGametype) {
        Gametype = other.Gametype;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Gametype = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Gametype = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DealerChoiceRSP : pb::IMessage<DealerChoiceRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DealerChoiceRSP> _parser = new pb::MessageParser<DealerChoiceRSP>(() => new DealerChoiceRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DealerChoiceRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DealerChoiceRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DealerChoiceRSP(DealerChoiceRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DealerChoiceRSP Clone() {
      return new DealerChoiceRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0:成功    1:失败
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DealerChoiceRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DealerChoiceRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DealerChoiceRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DealerChoiceBRC : pb::IMessage<DealerChoiceBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DealerChoiceBRC> _parser = new pb::MessageParser<DealerChoiceBRC>(() => new DealerChoiceBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DealerChoiceBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DealerChoiceBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DealerChoiceBRC(DealerChoiceBRC other) : this() {
      _hasBits0 = other._hasBits0;
      gametype_ = other.gametype_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DealerChoiceBRC Clone() {
      return new DealerChoiceBRC(this);
    }

    /// <summary>Field number for the "gametype" field.</summary>
    public const int GametypeFieldNumber = 1;
    private readonly static int GametypeDefaultValue = 0;

    private int gametype_;
    /// <summary>
    ///0:无类型 1:NLH  2:PLO-5    3:PLO-4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Gametype {
      get { if ((_hasBits0 & 1) != 0) { return gametype_; } else { return GametypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gametype_ = value;
      }
    }
    /// <summary>Gets whether the "gametype" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGametype {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "gametype" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGametype() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DealerChoiceBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DealerChoiceBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gametype != other.Gametype) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGametype) hash ^= Gametype.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGametype) {
        output.WriteRawTag(8);
        output.WriteInt32(Gametype);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGametype) {
        output.WriteRawTag(8);
        output.WriteInt32(Gametype);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGametype) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gametype);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DealerChoiceBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasGametype) {
        Gametype = other.Gametype;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Gametype = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Gametype = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OtherLeaveRoomBRC : pb::IMessage<OtherLeaveRoomBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OtherLeaveRoomBRC> _parser = new pb::MessageParser<OtherLeaveRoomBRC>(() => new OtherLeaveRoomBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OtherLeaveRoomBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OtherLeaveRoomBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OtherLeaveRoomBRC(OtherLeaveRoomBRC other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OtherLeaveRoomBRC Clone() {
      return new OtherLeaveRoomBRC(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OtherLeaveRoomBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OtherLeaveRoomBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OtherLeaveRoomBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EnterRoomREQ : pb::IMessage<EnterRoomREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EnterRoomREQ> _parser = new pb::MessageParser<EnterRoomREQ>(() => new EnterRoomREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EnterRoomREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnterRoomREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnterRoomREQ(EnterRoomREQ other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      tid_ = other.tid_;
      uid_ = other.uid_;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      ip_ = other.ip_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnterRoomREQ Clone() {
      return new EnterRoomREQ(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private string roomid_ = "";
    /// <summary>
    ///version 0.1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Roomid {
      get { return roomid_; }
      set {
        roomid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tid" field.</summary>
    public const int TidFieldNumber = 2;
    private readonly static string TidDefaultValue = "";

    private string tid_;
    /// <summary>
    ///mtt可以指定tid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tid {
      get { return tid_ ?? TidDefaultValue; }
      set {
        tid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTid {
      get { return tid_ != null; }
    }
    /// <summary>Clears the value of the "tid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTid() {
      tid_ = null;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 3;
    private string uid_ = "";
    /// <summary>
    ///version 0.1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 4;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 5;
    private readonly static string LeagueidDefaultValue = "";

    private string leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Leagueid {
      get { return leagueid_ ?? LeagueidDefaultValue; }
      set {
        leagueid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return leagueid_ != null; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      leagueid_ = null;
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 6;
    private readonly static string IpDefaultValue = "";

    private string ip_;
    /// <summary>
    ///version 0.1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ip {
      get { return ip_ ?? IpDefaultValue; }
      set {
        ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ip" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIp {
      get { return ip_ != null; }
    }
    /// <summary>Clears the value of the "ip" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIp() {
      ip_ = null;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 7;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    ///0其他, 1围观
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EnterRoomREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EnterRoomREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (Tid != other.Tid) return false;
      if (Uid != other.Uid) return false;
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (Ip != other.Ip) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Roomid.Length != 0) hash ^= Roomid.GetHashCode();
      if (HasTid) hash ^= Tid.GetHashCode();
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasIp) hash ^= Ip.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Roomid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Roomid);
      }
      if (HasTid) {
        output.WriteRawTag(18);
        output.WriteString(Tid);
      }
      if (Uid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(34);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(42);
        output.WriteString(Leagueid);
      }
      if (HasIp) {
        output.WriteRawTag(50);
        output.WriteString(Ip);
      }
      if (HasType) {
        output.WriteRawTag(56);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Roomid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Roomid);
      }
      if (HasTid) {
        output.WriteRawTag(18);
        output.WriteString(Tid);
      }
      if (Uid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(34);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(42);
        output.WriteString(Leagueid);
      }
      if (HasIp) {
        output.WriteRawTag(50);
        output.WriteString(Ip);
      }
      if (HasType) {
        output.WriteRawTag(56);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Roomid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Roomid);
      }
      if (HasTid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tid);
      }
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Leagueid);
      }
      if (HasIp) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EnterRoomREQ other) {
      if (other == null) {
        return;
      }
      if (other.Roomid.Length != 0) {
        Roomid = other.Roomid;
      }
      if (other.HasTid) {
        Tid = other.Tid;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasIp) {
        Ip = other.Ip;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Roomid = input.ReadString();
            break;
          }
          case 18: {
            Tid = input.ReadString();
            break;
          }
          case 26: {
            Uid = input.ReadString();
            break;
          }
          case 34: {
            Clubid = input.ReadString();
            break;
          }
          case 42: {
            Leagueid = input.ReadString();
            break;
          }
          case 50: {
            Ip = input.ReadString();
            break;
          }
          case 56: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Roomid = input.ReadString();
            break;
          }
          case 18: {
            Tid = input.ReadString();
            break;
          }
          case 26: {
            Uid = input.ReadString();
            break;
          }
          case 34: {
            Clubid = input.ReadString();
            break;
          }
          case 42: {
            Leagueid = input.ReadString();
            break;
          }
          case 50: {
            Ip = input.ReadString();
            break;
          }
          case 56: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PreEnterPasswdRoomREQ : pb::IMessage<PreEnterPasswdRoomREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PreEnterPasswdRoomREQ> _parser = new pb::MessageParser<PreEnterPasswdRoomREQ>(() => new PreEnterPasswdRoomREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PreEnterPasswdRoomREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PreEnterPasswdRoomREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PreEnterPasswdRoomREQ(PreEnterPasswdRoomREQ other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      roomid_ = other.roomid_;
      uid_ = other.uid_;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      passwd_ = other.passwd_;
      superLeagueid_ = other.superLeagueid_;
      certification_ = other.certification_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PreEnterPasswdRoomREQ Clone() {
      return new PreEnterPasswdRoomREQ(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static global::Texas.Protocol.PreEnterPasswdRoomType TypeDefaultValue = global::Texas.Protocol.PreEnterPasswdRoomType.None;

    private global::Texas.Protocol.PreEnterPasswdRoomType type_;
    /// <summary>
    /// required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PreEnterPasswdRoomType Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 2;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    /// <summary>
    /// required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 2) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 3;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    /// <summary>
    /// required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 4) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 4;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    /// <summary>
    /// required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 8) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 5;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    /// <summary>
    /// optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 16) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "passwd" field.</summary>
    public const int PasswdFieldNumber = 6;
    private readonly static string PasswdDefaultValue = "";

    private string passwd_;
    /// <summary>
    /// optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Passwd {
      get { return passwd_ ?? PasswdDefaultValue; }
      set {
        passwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "passwd" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPasswd {
      get { return passwd_ != null; }
    }
    /// <summary>Clears the value of the "passwd" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPasswd() {
      passwd_ = null;
    }

    /// <summary>Field number for the "super_leagueid" field.</summary>
    public const int SuperLeagueidFieldNumber = 7;
    private readonly static int SuperLeagueidDefaultValue = 0;

    private int superLeagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueid {
      get { if ((_hasBits0 & 32) != 0) { return superLeagueid_; } else { return SuperLeagueidDefaultValue; } }
      set {
        _hasBits0 |= 32;
        superLeagueid_ = value;
      }
    }
    /// <summary>Gets whether the "super_leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueid {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "super_leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueid() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "certification" field.</summary>
    public const int CertificationFieldNumber = 8;
    private readonly static int CertificationDefaultValue = 0;

    private int certification_;
    /// <summary>
    ///俱樂部會員認證
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Certification {
      get { if ((_hasBits0 & 64) != 0) { return certification_; } else { return CertificationDefaultValue; } }
      set {
        _hasBits0 |= 64;
        certification_ = value;
      }
    }
    /// <summary>Gets whether the "certification" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCertification {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "certification" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCertification() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PreEnterPasswdRoomREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PreEnterPasswdRoomREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Roomid != other.Roomid) return false;
      if (Uid != other.Uid) return false;
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (Passwd != other.Passwd) return false;
      if (SuperLeagueid != other.SuperLeagueid) return false;
      if (Certification != other.Certification) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasPasswd) hash ^= Passwd.GetHashCode();
      if (HasSuperLeagueid) hash ^= SuperLeagueid.GetHashCode();
      if (HasCertification) hash ^= Certification.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(Roomid);
      }
      if (HasUid) {
        output.WriteRawTag(24);
        output.WriteInt64(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(32);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(40);
        output.WriteInt32(Leagueid);
      }
      if (HasPasswd) {
        output.WriteRawTag(50);
        output.WriteString(Passwd);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(56);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasCertification) {
        output.WriteRawTag(64);
        output.WriteInt32(Certification);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(Roomid);
      }
      if (HasUid) {
        output.WriteRawTag(24);
        output.WriteInt64(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(32);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(40);
        output.WriteInt32(Leagueid);
      }
      if (HasPasswd) {
        output.WriteRawTag(50);
        output.WriteString(Passwd);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(56);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasCertification) {
        output.WriteRawTag(64);
        output.WriteInt32(Certification);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasPasswd) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Passwd);
      }
      if (HasSuperLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueid);
      }
      if (HasCertification) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Certification);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PreEnterPasswdRoomREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasPasswd) {
        Passwd = other.Passwd;
      }
      if (other.HasSuperLeagueid) {
        SuperLeagueid = other.SuperLeagueid;
      }
      if (other.HasCertification) {
        Certification = other.Certification;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Texas.Protocol.PreEnterPasswdRoomType) input.ReadEnum();
            break;
          }
          case 16: {
            Roomid = input.ReadInt32();
            break;
          }
          case 24: {
            Uid = input.ReadInt64();
            break;
          }
          case 32: {
            Clubid = input.ReadInt32();
            break;
          }
          case 40: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 50: {
            Passwd = input.ReadString();
            break;
          }
          case 56: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 64: {
            Certification = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Texas.Protocol.PreEnterPasswdRoomType) input.ReadEnum();
            break;
          }
          case 16: {
            Roomid = input.ReadInt32();
            break;
          }
          case 24: {
            Uid = input.ReadInt64();
            break;
          }
          case 32: {
            Clubid = input.ReadInt32();
            break;
          }
          case 40: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 50: {
            Passwd = input.ReadString();
            break;
          }
          case 56: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 64: {
            Certification = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PreEnterPasswdRoomRSP : pb::IMessage<PreEnterPasswdRoomRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PreEnterPasswdRoomRSP> _parser = new pb::MessageParser<PreEnterPasswdRoomRSP>(() => new PreEnterPasswdRoomRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PreEnterPasswdRoomRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PreEnterPasswdRoomRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PreEnterPasswdRoomRSP(PreEnterPasswdRoomRSP other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      roomid_ = other.roomid_;
      uid_ = other.uid_;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      code_ = other.code_;
      checked_ = other.checked_;
      kicked_ = other.kicked_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PreEnterPasswdRoomRSP Clone() {
      return new PreEnterPasswdRoomRSP(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static global::Texas.Protocol.PreEnterPasswdRoomType TypeDefaultValue = global::Texas.Protocol.PreEnterPasswdRoomType.None;

    private global::Texas.Protocol.PreEnterPasswdRoomType type_;
    /// <summary>
    /// from req
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PreEnterPasswdRoomType Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 2;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    /// <summary>
    /// from req
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 2) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 3;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    /// <summary>
    /// from req
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 4) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 4;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    /// <summary>
    /// from req
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 8) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 5;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    /// <summary>
    /// from req
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 16) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 6;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// 0: success; -1: no room; -2: not private room; -3: fail; -4: has not enough PPChips; -5 not certified
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 32) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "checked" field.</summary>
    public const int CheckedFieldNumber = 7;
    private readonly static bool CheckedDefaultValue = false;

    private bool checked_;
    /// <summary>
    /// optional: passwd checked
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Checked {
      get { if ((_hasBits0 & 64) != 0) { return checked_; } else { return CheckedDefaultValue; } }
      set {
        _hasBits0 |= 64;
        checked_ = value;
      }
    }
    /// <summary>Gets whether the "checked" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChecked {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "checked" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChecked() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "kicked" field.</summary>
    public const int KickedFieldNumber = 8;
    private readonly static bool KickedDefaultValue = false;

    private bool kicked_;
    /// <summary>
    /// optional: user be kicked
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Kicked {
      get { if ((_hasBits0 & 128) != 0) { return kicked_; } else { return KickedDefaultValue; } }
      set {
        _hasBits0 |= 128;
        kicked_ = value;
      }
    }
    /// <summary>Gets whether the "kicked" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasKicked {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "kicked" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearKicked() {
      _hasBits0 &= ~128;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PreEnterPasswdRoomRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PreEnterPasswdRoomRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Roomid != other.Roomid) return false;
      if (Uid != other.Uid) return false;
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (Code != other.Code) return false;
      if (Checked != other.Checked) return false;
      if (Kicked != other.Kicked) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasChecked) hash ^= Checked.GetHashCode();
      if (HasKicked) hash ^= Kicked.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(Roomid);
      }
      if (HasUid) {
        output.WriteRawTag(24);
        output.WriteInt64(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(32);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(40);
        output.WriteInt32(Leagueid);
      }
      if (HasCode) {
        output.WriteRawTag(48);
        output.WriteInt32(Code);
      }
      if (HasChecked) {
        output.WriteRawTag(56);
        output.WriteBool(Checked);
      }
      if (HasKicked) {
        output.WriteRawTag(64);
        output.WriteBool(Kicked);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(Roomid);
      }
      if (HasUid) {
        output.WriteRawTag(24);
        output.WriteInt64(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(32);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(40);
        output.WriteInt32(Leagueid);
      }
      if (HasCode) {
        output.WriteRawTag(48);
        output.WriteInt32(Code);
      }
      if (HasChecked) {
        output.WriteRawTag(56);
        output.WriteBool(Checked);
      }
      if (HasKicked) {
        output.WriteRawTag(64);
        output.WriteBool(Kicked);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasChecked) {
        size += 1 + 1;
      }
      if (HasKicked) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PreEnterPasswdRoomRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasChecked) {
        Checked = other.Checked;
      }
      if (other.HasKicked) {
        Kicked = other.Kicked;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Texas.Protocol.PreEnterPasswdRoomType) input.ReadEnum();
            break;
          }
          case 16: {
            Roomid = input.ReadInt32();
            break;
          }
          case 24: {
            Uid = input.ReadInt64();
            break;
          }
          case 32: {
            Clubid = input.ReadInt32();
            break;
          }
          case 40: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 48: {
            Code = input.ReadInt32();
            break;
          }
          case 56: {
            Checked = input.ReadBool();
            break;
          }
          case 64: {
            Kicked = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Texas.Protocol.PreEnterPasswdRoomType) input.ReadEnum();
            break;
          }
          case 16: {
            Roomid = input.ReadInt32();
            break;
          }
          case 24: {
            Uid = input.ReadInt64();
            break;
          }
          case 32: {
            Clubid = input.ReadInt32();
            break;
          }
          case 40: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 48: {
            Code = input.ReadInt32();
            break;
          }
          case 56: {
            Checked = input.ReadBool();
            break;
          }
          case 64: {
            Kicked = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///牌桌设置
  /// </summary>
  public sealed partial class TableSettingREQ : pb::IMessage<TableSettingREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TableSettingREQ> _parser = new pb::MessageParser<TableSettingREQ>(() => new TableSettingREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TableSettingREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TableSettingREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TableSettingREQ(TableSettingREQ other) : this() {
      _hasBits0 = other._hasBits0;
      bclub_ = other.bclub_;
      bopen_ = other.bopen_;
      onebtnMoleculeNum_ = other.onebtnMoleculeNum_;
      onebtnDenominatorNum_ = other.onebtnDenominatorNum_;
      twobtnMoleculeNum_ = other.twobtnMoleculeNum_;
      twobtnDenominatorNum_ = other.twobtnDenominatorNum_;
      threebtnMoleculeNum_ = other.threebtnMoleculeNum_;
      threebtnDenominatorNum_ = other.threebtnDenominatorNum_;
      onebtnNum_ = other.onebtnNum_;
      twobtnNum_ = other.twobtnNum_;
      threebtnNum_ = other.threebtnNum_;
      roomtype_ = other.roomtype_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TableSettingREQ Clone() {
      return new TableSettingREQ(this);
    }

    /// <summary>Field number for the "bclub" field.</summary>
    public const int BclubFieldNumber = 1;
    private readonly static bool BclubDefaultValue = false;

    private bool bclub_;
    /// <summary>
    ///是否俱乐部
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Bclub {
      get { if ((_hasBits0 & 1) != 0) { return bclub_; } else { return BclubDefaultValue; } }
      set {
        _hasBits0 |= 1;
        bclub_ = value;
      }
    }
    /// <summary>Gets whether the "bclub" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBclub {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "bclub" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBclub() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "bopen" field.</summary>
    public const int BopenFieldNumber = 2;
    private readonly static bool BopenDefaultValue = false;

    private bool bopen_;
    /// <summary>
    ///开关是否打开
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Bopen {
      get { if ((_hasBits0 & 2) != 0) { return bopen_; } else { return BopenDefaultValue; } }
      set {
        _hasBits0 |= 2;
        bopen_ = value;
      }
    }
    /// <summary>Gets whether the "bopen" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBopen {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "bopen" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBopen() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "onebtn_molecule_num" field.</summary>
    public const int OnebtnMoleculeNumFieldNumber = 3;
    private readonly static int OnebtnMoleculeNumDefaultValue = 0;

    private int onebtnMoleculeNum_;
    /// <summary>
    ///第一个自定义下注按钮的倍数分子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OnebtnMoleculeNum {
      get { if ((_hasBits0 & 4) != 0) { return onebtnMoleculeNum_; } else { return OnebtnMoleculeNumDefaultValue; } }
      set {
        _hasBits0 |= 4;
        onebtnMoleculeNum_ = value;
      }
    }
    /// <summary>Gets whether the "onebtn_molecule_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOnebtnMoleculeNum {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "onebtn_molecule_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOnebtnMoleculeNum() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "onebtn_denominator_num" field.</summary>
    public const int OnebtnDenominatorNumFieldNumber = 4;
    private readonly static int OnebtnDenominatorNumDefaultValue = 0;

    private int onebtnDenominatorNum_;
    /// <summary>
    ///第一个自定义下注按钮的倍数分母
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OnebtnDenominatorNum {
      get { if ((_hasBits0 & 8) != 0) { return onebtnDenominatorNum_; } else { return OnebtnDenominatorNumDefaultValue; } }
      set {
        _hasBits0 |= 8;
        onebtnDenominatorNum_ = value;
      }
    }
    /// <summary>Gets whether the "onebtn_denominator_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOnebtnDenominatorNum {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "onebtn_denominator_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOnebtnDenominatorNum() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "twobtn_molecule_num" field.</summary>
    public const int TwobtnMoleculeNumFieldNumber = 5;
    private readonly static int TwobtnMoleculeNumDefaultValue = 0;

    private int twobtnMoleculeNum_;
    /// <summary>
    ///第二个自定义下注按钮的倍数分子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TwobtnMoleculeNum {
      get { if ((_hasBits0 & 16) != 0) { return twobtnMoleculeNum_; } else { return TwobtnMoleculeNumDefaultValue; } }
      set {
        _hasBits0 |= 16;
        twobtnMoleculeNum_ = value;
      }
    }
    /// <summary>Gets whether the "twobtn_molecule_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTwobtnMoleculeNum {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "twobtn_molecule_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTwobtnMoleculeNum() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "twobtn_denominator_num" field.</summary>
    public const int TwobtnDenominatorNumFieldNumber = 6;
    private readonly static int TwobtnDenominatorNumDefaultValue = 0;

    private int twobtnDenominatorNum_;
    /// <summary>
    ///第二个自定义下注按钮的倍数分母
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TwobtnDenominatorNum {
      get { if ((_hasBits0 & 32) != 0) { return twobtnDenominatorNum_; } else { return TwobtnDenominatorNumDefaultValue; } }
      set {
        _hasBits0 |= 32;
        twobtnDenominatorNum_ = value;
      }
    }
    /// <summary>Gets whether the "twobtn_denominator_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTwobtnDenominatorNum {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "twobtn_denominator_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTwobtnDenominatorNum() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "threebtn_molecule_num" field.</summary>
    public const int ThreebtnMoleculeNumFieldNumber = 7;
    private readonly static int ThreebtnMoleculeNumDefaultValue = 0;

    private int threebtnMoleculeNum_;
    /// <summary>
    ///第三个自定义下注按钮的倍数分子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ThreebtnMoleculeNum {
      get { if ((_hasBits0 & 64) != 0) { return threebtnMoleculeNum_; } else { return ThreebtnMoleculeNumDefaultValue; } }
      set {
        _hasBits0 |= 64;
        threebtnMoleculeNum_ = value;
      }
    }
    /// <summary>Gets whether the "threebtn_molecule_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasThreebtnMoleculeNum {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "threebtn_molecule_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearThreebtnMoleculeNum() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "threebtn_denominator_num" field.</summary>
    public const int ThreebtnDenominatorNumFieldNumber = 8;
    private readonly static int ThreebtnDenominatorNumDefaultValue = 0;

    private int threebtnDenominatorNum_;
    /// <summary>
    ///第三个自定义下注按钮的倍数分母
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ThreebtnDenominatorNum {
      get { if ((_hasBits0 & 128) != 0) { return threebtnDenominatorNum_; } else { return ThreebtnDenominatorNumDefaultValue; } }
      set {
        _hasBits0 |= 128;
        threebtnDenominatorNum_ = value;
      }
    }
    /// <summary>Gets whether the "threebtn_denominator_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasThreebtnDenominatorNum {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "threebtn_denominator_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearThreebtnDenominatorNum() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "onebtn_num" field.</summary>
    public const int OnebtnNumFieldNumber = 9;
    private readonly static int OnebtnNumDefaultValue = 0;

    private int onebtnNum_;
    /// <summary>
    ///第一个加倍按钮数值(乘以100倍)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OnebtnNum {
      get { if ((_hasBits0 & 256) != 0) { return onebtnNum_; } else { return OnebtnNumDefaultValue; } }
      set {
        _hasBits0 |= 256;
        onebtnNum_ = value;
      }
    }
    /// <summary>Gets whether the "onebtn_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOnebtnNum {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "onebtn_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOnebtnNum() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "twobtn_num" field.</summary>
    public const int TwobtnNumFieldNumber = 10;
    private readonly static int TwobtnNumDefaultValue = 0;

    private int twobtnNum_;
    /// <summary>
    ///第二个加倍按钮数值(乘以100倍)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TwobtnNum {
      get { if ((_hasBits0 & 512) != 0) { return twobtnNum_; } else { return TwobtnNumDefaultValue; } }
      set {
        _hasBits0 |= 512;
        twobtnNum_ = value;
      }
    }
    /// <summary>Gets whether the "twobtn_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTwobtnNum {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "twobtn_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTwobtnNum() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "threebtn_num" field.</summary>
    public const int ThreebtnNumFieldNumber = 11;
    private readonly static int ThreebtnNumDefaultValue = 0;

    private int threebtnNum_;
    /// <summary>
    ///第三个加倍按钮数值(乘以100倍)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ThreebtnNum {
      get { if ((_hasBits0 & 1024) != 0) { return threebtnNum_; } else { return ThreebtnNumDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        threebtnNum_ = value;
      }
    }
    /// <summary>Gets whether the "threebtn_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasThreebtnNum {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "threebtn_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearThreebtnNum() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "roomtype" field.</summary>
    public const int RoomtypeFieldNumber = 12;
    private readonly static int RoomtypeDefaultValue = 0;

    private int roomtype_;
    /// <summary>
    ///1:NLH    2:PLO
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomtype {
      get { if ((_hasBits0 & 2048) != 0) { return roomtype_; } else { return RoomtypeDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        roomtype_ = value;
      }
    }
    /// <summary>Gets whether the "roomtype" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomtype {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "roomtype" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomtype() {
      _hasBits0 &= ~2048;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TableSettingREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TableSettingREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bclub != other.Bclub) return false;
      if (Bopen != other.Bopen) return false;
      if (OnebtnMoleculeNum != other.OnebtnMoleculeNum) return false;
      if (OnebtnDenominatorNum != other.OnebtnDenominatorNum) return false;
      if (TwobtnMoleculeNum != other.TwobtnMoleculeNum) return false;
      if (TwobtnDenominatorNum != other.TwobtnDenominatorNum) return false;
      if (ThreebtnMoleculeNum != other.ThreebtnMoleculeNum) return false;
      if (ThreebtnDenominatorNum != other.ThreebtnDenominatorNum) return false;
      if (OnebtnNum != other.OnebtnNum) return false;
      if (TwobtnNum != other.TwobtnNum) return false;
      if (ThreebtnNum != other.ThreebtnNum) return false;
      if (Roomtype != other.Roomtype) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBclub) hash ^= Bclub.GetHashCode();
      if (HasBopen) hash ^= Bopen.GetHashCode();
      if (HasOnebtnMoleculeNum) hash ^= OnebtnMoleculeNum.GetHashCode();
      if (HasOnebtnDenominatorNum) hash ^= OnebtnDenominatorNum.GetHashCode();
      if (HasTwobtnMoleculeNum) hash ^= TwobtnMoleculeNum.GetHashCode();
      if (HasTwobtnDenominatorNum) hash ^= TwobtnDenominatorNum.GetHashCode();
      if (HasThreebtnMoleculeNum) hash ^= ThreebtnMoleculeNum.GetHashCode();
      if (HasThreebtnDenominatorNum) hash ^= ThreebtnDenominatorNum.GetHashCode();
      if (HasOnebtnNum) hash ^= OnebtnNum.GetHashCode();
      if (HasTwobtnNum) hash ^= TwobtnNum.GetHashCode();
      if (HasThreebtnNum) hash ^= ThreebtnNum.GetHashCode();
      if (HasRoomtype) hash ^= Roomtype.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBclub) {
        output.WriteRawTag(8);
        output.WriteBool(Bclub);
      }
      if (HasBopen) {
        output.WriteRawTag(16);
        output.WriteBool(Bopen);
      }
      if (HasOnebtnMoleculeNum) {
        output.WriteRawTag(24);
        output.WriteInt32(OnebtnMoleculeNum);
      }
      if (HasOnebtnDenominatorNum) {
        output.WriteRawTag(32);
        output.WriteInt32(OnebtnDenominatorNum);
      }
      if (HasTwobtnMoleculeNum) {
        output.WriteRawTag(40);
        output.WriteInt32(TwobtnMoleculeNum);
      }
      if (HasTwobtnDenominatorNum) {
        output.WriteRawTag(48);
        output.WriteInt32(TwobtnDenominatorNum);
      }
      if (HasThreebtnMoleculeNum) {
        output.WriteRawTag(56);
        output.WriteInt32(ThreebtnMoleculeNum);
      }
      if (HasThreebtnDenominatorNum) {
        output.WriteRawTag(64);
        output.WriteInt32(ThreebtnDenominatorNum);
      }
      if (HasOnebtnNum) {
        output.WriteRawTag(72);
        output.WriteInt32(OnebtnNum);
      }
      if (HasTwobtnNum) {
        output.WriteRawTag(80);
        output.WriteInt32(TwobtnNum);
      }
      if (HasThreebtnNum) {
        output.WriteRawTag(88);
        output.WriteInt32(ThreebtnNum);
      }
      if (HasRoomtype) {
        output.WriteRawTag(96);
        output.WriteInt32(Roomtype);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBclub) {
        output.WriteRawTag(8);
        output.WriteBool(Bclub);
      }
      if (HasBopen) {
        output.WriteRawTag(16);
        output.WriteBool(Bopen);
      }
      if (HasOnebtnMoleculeNum) {
        output.WriteRawTag(24);
        output.WriteInt32(OnebtnMoleculeNum);
      }
      if (HasOnebtnDenominatorNum) {
        output.WriteRawTag(32);
        output.WriteInt32(OnebtnDenominatorNum);
      }
      if (HasTwobtnMoleculeNum) {
        output.WriteRawTag(40);
        output.WriteInt32(TwobtnMoleculeNum);
      }
      if (HasTwobtnDenominatorNum) {
        output.WriteRawTag(48);
        output.WriteInt32(TwobtnDenominatorNum);
      }
      if (HasThreebtnMoleculeNum) {
        output.WriteRawTag(56);
        output.WriteInt32(ThreebtnMoleculeNum);
      }
      if (HasThreebtnDenominatorNum) {
        output.WriteRawTag(64);
        output.WriteInt32(ThreebtnDenominatorNum);
      }
      if (HasOnebtnNum) {
        output.WriteRawTag(72);
        output.WriteInt32(OnebtnNum);
      }
      if (HasTwobtnNum) {
        output.WriteRawTag(80);
        output.WriteInt32(TwobtnNum);
      }
      if (HasThreebtnNum) {
        output.WriteRawTag(88);
        output.WriteInt32(ThreebtnNum);
      }
      if (HasRoomtype) {
        output.WriteRawTag(96);
        output.WriteInt32(Roomtype);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBclub) {
        size += 1 + 1;
      }
      if (HasBopen) {
        size += 1 + 1;
      }
      if (HasOnebtnMoleculeNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OnebtnMoleculeNum);
      }
      if (HasOnebtnDenominatorNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OnebtnDenominatorNum);
      }
      if (HasTwobtnMoleculeNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TwobtnMoleculeNum);
      }
      if (HasTwobtnDenominatorNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TwobtnDenominatorNum);
      }
      if (HasThreebtnMoleculeNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThreebtnMoleculeNum);
      }
      if (HasThreebtnDenominatorNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThreebtnDenominatorNum);
      }
      if (HasOnebtnNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OnebtnNum);
      }
      if (HasTwobtnNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TwobtnNum);
      }
      if (HasThreebtnNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThreebtnNum);
      }
      if (HasRoomtype) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomtype);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TableSettingREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasBclub) {
        Bclub = other.Bclub;
      }
      if (other.HasBopen) {
        Bopen = other.Bopen;
      }
      if (other.HasOnebtnMoleculeNum) {
        OnebtnMoleculeNum = other.OnebtnMoleculeNum;
      }
      if (other.HasOnebtnDenominatorNum) {
        OnebtnDenominatorNum = other.OnebtnDenominatorNum;
      }
      if (other.HasTwobtnMoleculeNum) {
        TwobtnMoleculeNum = other.TwobtnMoleculeNum;
      }
      if (other.HasTwobtnDenominatorNum) {
        TwobtnDenominatorNum = other.TwobtnDenominatorNum;
      }
      if (other.HasThreebtnMoleculeNum) {
        ThreebtnMoleculeNum = other.ThreebtnMoleculeNum;
      }
      if (other.HasThreebtnDenominatorNum) {
        ThreebtnDenominatorNum = other.ThreebtnDenominatorNum;
      }
      if (other.HasOnebtnNum) {
        OnebtnNum = other.OnebtnNum;
      }
      if (other.HasTwobtnNum) {
        TwobtnNum = other.TwobtnNum;
      }
      if (other.HasThreebtnNum) {
        ThreebtnNum = other.ThreebtnNum;
      }
      if (other.HasRoomtype) {
        Roomtype = other.Roomtype;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Bclub = input.ReadBool();
            break;
          }
          case 16: {
            Bopen = input.ReadBool();
            break;
          }
          case 24: {
            OnebtnMoleculeNum = input.ReadInt32();
            break;
          }
          case 32: {
            OnebtnDenominatorNum = input.ReadInt32();
            break;
          }
          case 40: {
            TwobtnMoleculeNum = input.ReadInt32();
            break;
          }
          case 48: {
            TwobtnDenominatorNum = input.ReadInt32();
            break;
          }
          case 56: {
            ThreebtnMoleculeNum = input.ReadInt32();
            break;
          }
          case 64: {
            ThreebtnDenominatorNum = input.ReadInt32();
            break;
          }
          case 72: {
            OnebtnNum = input.ReadInt32();
            break;
          }
          case 80: {
            TwobtnNum = input.ReadInt32();
            break;
          }
          case 88: {
            ThreebtnNum = input.ReadInt32();
            break;
          }
          case 96: {
            Roomtype = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Bclub = input.ReadBool();
            break;
          }
          case 16: {
            Bopen = input.ReadBool();
            break;
          }
          case 24: {
            OnebtnMoleculeNum = input.ReadInt32();
            break;
          }
          case 32: {
            OnebtnDenominatorNum = input.ReadInt32();
            break;
          }
          case 40: {
            TwobtnMoleculeNum = input.ReadInt32();
            break;
          }
          case 48: {
            TwobtnDenominatorNum = input.ReadInt32();
            break;
          }
          case 56: {
            ThreebtnMoleculeNum = input.ReadInt32();
            break;
          }
          case 64: {
            ThreebtnDenominatorNum = input.ReadInt32();
            break;
          }
          case 72: {
            OnebtnNum = input.ReadInt32();
            break;
          }
          case 80: {
            TwobtnNum = input.ReadInt32();
            break;
          }
          case 88: {
            ThreebtnNum = input.ReadInt32();
            break;
          }
          case 96: {
            Roomtype = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TableSettingRSP : pb::IMessage<TableSettingRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TableSettingRSP> _parser = new pb::MessageParser<TableSettingRSP>(() => new TableSettingRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TableSettingRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TableSettingRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TableSettingRSP(TableSettingRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TableSettingRSP Clone() {
      return new TableSettingRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0:成功   -1：失败
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TableSettingRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TableSettingRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TableSettingRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OtherEnterRoomBRC : pb::IMessage<OtherEnterRoomBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OtherEnterRoomBRC> _parser = new pb::MessageParser<OtherEnterRoomBRC>(() => new OtherEnterRoomBRC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OtherEnterRoomBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OtherEnterRoomBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OtherEnterRoomBRC(OtherEnterRoomBRC other) : this() {
      user_ = other.user_ != null ? other.user_.Clone() : null;
      frameId_ = other.frameId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OtherEnterRoomBRC Clone() {
      return new OtherEnterRoomBRC(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private global::Texas.Protocol.UserBrief user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.UserBrief User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "frame_id" field.</summary>
    public const int FrameIdFieldNumber = 2;
    private readonly static string FrameIdDefaultValue = "";

    private string frameId_;
    /// <summary>
    ///玩家头像框id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FrameId {
      get { return frameId_ ?? FrameIdDefaultValue; }
      set {
        frameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "frame_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrameId {
      get { return frameId_ != null; }
    }
    /// <summary>Clears the value of the "frame_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrameId() {
      frameId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OtherEnterRoomBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OtherEnterRoomBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(User, other.User)) return false;
      if (FrameId != other.FrameId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (user_ != null) hash ^= User.GetHashCode();
      if (HasFrameId) hash ^= FrameId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (HasFrameId) {
        output.WriteRawTag(18);
        output.WriteString(FrameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (HasFrameId) {
        output.WriteRawTag(18);
        output.WriteString(FrameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (HasFrameId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FrameId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OtherEnterRoomBRC other) {
      if (other == null) {
        return;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::Texas.Protocol.UserBrief();
        }
        User.MergeFrom(other.User);
      }
      if (other.HasFrameId) {
        FrameId = other.FrameId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (user_ == null) {
              User = new global::Texas.Protocol.UserBrief();
            }
            input.ReadMessage(User);
            break;
          }
          case 18: {
            FrameId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (user_ == null) {
              User = new global::Texas.Protocol.UserBrief();
            }
            input.ReadMessage(User);
            break;
          }
          case 18: {
            FrameId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///获取奖励信息
  /// </summary>
  public sealed partial class RewardItemInfo : pb::IMessage<RewardItemInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RewardItemInfo> _parser = new pb::MessageParser<RewardItemInfo>(() => new RewardItemInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RewardItemInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RewardItemInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RewardItemInfo(RewardItemInfo other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      type_ = other.type_;
      itemName_ = other.itemName_;
      num_ = other.num_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RewardItemInfo Clone() {
      return new RewardItemInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    /// <summary>
    ///唯一标识，获取id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    ///类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 2) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "item_name" field.</summary>
    public const int ItemNameFieldNumber = 3;
    private readonly static string ItemNameDefaultValue = "";

    private string itemName_;
    /// <summary>
    ///名称，如果是表情，对应表情名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ItemName {
      get { return itemName_ ?? ItemNameDefaultValue; }
      set {
        itemName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "item_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasItemName {
      get { return itemName_ != null; }
    }
    /// <summary>Clears the value of the "item_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearItemName() {
      itemName_ = null;
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 4;
    private readonly static int NumDefaultValue = 0;

    private int num_;
    /// <summary>
    ///个数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Num {
      get { if ((_hasBits0 & 4) != 0) { return num_; } else { return NumDefaultValue; } }
      set {
        _hasBits0 |= 4;
        num_ = value;
      }
    }
    /// <summary>Gets whether the "num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNum {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNum() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RewardItemInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RewardItemInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if (ItemName != other.ItemName) return false;
      if (Num != other.Num) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasItemName) hash ^= ItemName.GetHashCode();
      if (HasNum) hash ^= Num.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (HasItemName) {
        output.WriteRawTag(26);
        output.WriteString(ItemName);
      }
      if (HasNum) {
        output.WriteRawTag(32);
        output.WriteInt32(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (HasItemName) {
        output.WriteRawTag(26);
        output.WriteString(ItemName);
      }
      if (HasNum) {
        output.WriteRawTag(32);
        output.WriteInt32(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasItemName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemName);
      }
      if (HasNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RewardItemInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasItemName) {
        ItemName = other.ItemName;
      }
      if (other.HasNum) {
        Num = other.Num;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 26: {
            ItemName = input.ReadString();
            break;
          }
          case 32: {
            Num = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 26: {
            ItemName = input.ReadString();
            break;
          }
          case 32: {
            Num = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class QueryRewardREQ : pb::IMessage<QueryRewardREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QueryRewardREQ> _parser = new pb::MessageParser<QueryRewardREQ>(() => new QueryRewardREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<QueryRewardREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QueryRewardREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QueryRewardREQ(QueryRewardREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QueryRewardREQ Clone() {
      return new QueryRewardREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as QueryRewardREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(QueryRewardREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(QueryRewardREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class QueryRewardRSP : pb::IMessage<QueryRewardRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QueryRewardRSP> _parser = new pb::MessageParser<QueryRewardRSP>(() => new QueryRewardRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<QueryRewardRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QueryRewardRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QueryRewardRSP(QueryRewardRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      itemNum_ = other.itemNum_;
      itemInfo_ = other.itemInfo_.Clone();
      rewardType_ = other.rewardType_;
      num_ = other.num_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QueryRewardRSP Clone() {
      return new QueryRewardRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///  返回0表示成功，-1表示失败
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "item_num" field.</summary>
    public const int ItemNumFieldNumber = 2;
    private readonly static int ItemNumDefaultValue = 0;

    private int itemNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ItemNum {
      get { if ((_hasBits0 & 2) != 0) { return itemNum_; } else { return ItemNumDefaultValue; } }
      set {
        _hasBits0 |= 2;
        itemNum_ = value;
      }
    }
    /// <summary>Gets whether the "item_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasItemNum {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "item_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearItemNum() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "item_info" field.</summary>
    public const int ItemInfoFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Texas.Protocol.RewardItemInfo> _repeated_itemInfo_codec
        = pb::FieldCodec.ForMessage(26, global::Texas.Protocol.RewardItemInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.RewardItemInfo> itemInfo_ = new pbc::RepeatedField<global::Texas.Protocol.RewardItemInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.RewardItemInfo> ItemInfo {
      get { return itemInfo_; }
    }

    /// <summary>Field number for the "reward_type" field.</summary>
    public const int RewardTypeFieldNumber = 4;
    private readonly static int RewardTypeDefaultValue = 0;

    private int rewardType_;
    /// <summary>
    ///奖励类型，1：推送,2：邮件,3：周年,
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RewardType {
      get { if ((_hasBits0 & 4) != 0) { return rewardType_; } else { return RewardTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        rewardType_ = value;
      }
    }
    /// <summary>Gets whether the "reward_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRewardType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "reward_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRewardType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 5;
    private readonly static int NumDefaultValue = 0;

    private int num_;
    /// <summary>
    ///周年数目：n周年;邮件：n天
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Num {
      get { if ((_hasBits0 & 8) != 0) { return num_; } else { return NumDefaultValue; } }
      set {
        _hasBits0 |= 8;
        num_ = value;
      }
    }
    /// <summary>Gets whether the "num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNum {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNum() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as QueryRewardRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(QueryRewardRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (ItemNum != other.ItemNum) return false;
      if(!itemInfo_.Equals(other.itemInfo_)) return false;
      if (RewardType != other.RewardType) return false;
      if (Num != other.Num) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasItemNum) hash ^= ItemNum.GetHashCode();
      hash ^= itemInfo_.GetHashCode();
      if (HasRewardType) hash ^= RewardType.GetHashCode();
      if (HasNum) hash ^= Num.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasItemNum) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemNum);
      }
      itemInfo_.WriteTo(output, _repeated_itemInfo_codec);
      if (HasRewardType) {
        output.WriteRawTag(32);
        output.WriteInt32(RewardType);
      }
      if (HasNum) {
        output.WriteRawTag(40);
        output.WriteInt32(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasItemNum) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemNum);
      }
      itemInfo_.WriteTo(ref output, _repeated_itemInfo_codec);
      if (HasRewardType) {
        output.WriteRawTag(32);
        output.WriteInt32(RewardType);
      }
      if (HasNum) {
        output.WriteRawTag(40);
        output.WriteInt32(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasItemNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemNum);
      }
      size += itemInfo_.CalculateSize(_repeated_itemInfo_codec);
      if (HasRewardType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewardType);
      }
      if (HasNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(QueryRewardRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasItemNum) {
        ItemNum = other.ItemNum;
      }
      itemInfo_.Add(other.itemInfo_);
      if (other.HasRewardType) {
        RewardType = other.RewardType;
      }
      if (other.HasNum) {
        Num = other.Num;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            ItemNum = input.ReadInt32();
            break;
          }
          case 26: {
            itemInfo_.AddEntriesFrom(input, _repeated_itemInfo_codec);
            break;
          }
          case 32: {
            RewardType = input.ReadInt32();
            break;
          }
          case 40: {
            Num = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            ItemNum = input.ReadInt32();
            break;
          }
          case 26: {
            itemInfo_.AddEntriesFrom(ref input, _repeated_itemInfo_codec);
            break;
          }
          case 32: {
            RewardType = input.ReadInt32();
            break;
          }
          case 40: {
            Num = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FetchRewardREQ : pb::IMessage<FetchRewardREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FetchRewardREQ> _parser = new pb::MessageParser<FetchRewardREQ>(() => new FetchRewardREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FetchRewardREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FetchRewardREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FetchRewardREQ(FetchRewardREQ other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FetchRewardREQ Clone() {
      return new FetchRewardREQ(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    /// <summary>
    ///唯一标识，获取id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FetchRewardREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FetchRewardREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FetchRewardREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FetchRewardRSP : pb::IMessage<FetchRewardRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FetchRewardRSP> _parser = new pb::MessageParser<FetchRewardRSP>(() => new FetchRewardRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FetchRewardRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FetchRewardRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FetchRewardRSP(FetchRewardRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FetchRewardRSP Clone() {
      return new FetchRewardRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///  返回0表示成功，-1表示失败
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FetchRewardRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FetchRewardRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FetchRewardRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetAutoChipReplenishmentREQ : pb::IMessage<SetAutoChipReplenishmentREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetAutoChipReplenishmentREQ> _parser = new pb::MessageParser<SetAutoChipReplenishmentREQ>(() => new SetAutoChipReplenishmentREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetAutoChipReplenishmentREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetAutoChipReplenishmentREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetAutoChipReplenishmentREQ(SetAutoChipReplenishmentREQ other) : this() {
      _hasBits0 = other._hasBits0;
      enableChipReplenishment_ = other.enableChipReplenishment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetAutoChipReplenishmentREQ Clone() {
      return new SetAutoChipReplenishmentREQ(this);
    }

    /// <summary>Field number for the "enable_chip_replenishment" field.</summary>
    public const int EnableChipReplenishmentFieldNumber = 1;
    private readonly static bool EnableChipReplenishmentDefaultValue = false;

    private bool enableChipReplenishment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableChipReplenishment {
      get { if ((_hasBits0 & 1) != 0) { return enableChipReplenishment_; } else { return EnableChipReplenishmentDefaultValue; } }
      set {
        _hasBits0 |= 1;
        enableChipReplenishment_ = value;
      }
    }
    /// <summary>Gets whether the "enable_chip_replenishment" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableChipReplenishment {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "enable_chip_replenishment" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableChipReplenishment() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetAutoChipReplenishmentREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetAutoChipReplenishmentREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnableChipReplenishment != other.EnableChipReplenishment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEnableChipReplenishment) hash ^= EnableChipReplenishment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasEnableChipReplenishment) {
        output.WriteRawTag(8);
        output.WriteBool(EnableChipReplenishment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasEnableChipReplenishment) {
        output.WriteRawTag(8);
        output.WriteBool(EnableChipReplenishment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasEnableChipReplenishment) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetAutoChipReplenishmentREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasEnableChipReplenishment) {
        EnableChipReplenishment = other.EnableChipReplenishment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EnableChipReplenishment = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EnableChipReplenishment = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetChipReplenishmentSettingREQ : pb::IMessage<GetChipReplenishmentSettingREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetChipReplenishmentSettingREQ> _parser = new pb::MessageParser<GetChipReplenishmentSettingREQ>(() => new GetChipReplenishmentSettingREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetChipReplenishmentSettingREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetChipReplenishmentSettingREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetChipReplenishmentSettingREQ(GetChipReplenishmentSettingREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetChipReplenishmentSettingREQ Clone() {
      return new GetChipReplenishmentSettingREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetChipReplenishmentSettingREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetChipReplenishmentSettingREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetChipReplenishmentSettingREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class GetChipReplenishmentSettingRSP : pb::IMessage<GetChipReplenishmentSettingRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetChipReplenishmentSettingRSP> _parser = new pb::MessageParser<GetChipReplenishmentSettingRSP>(() => new GetChipReplenishmentSettingRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetChipReplenishmentSettingRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb5Reflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetChipReplenishmentSettingRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetChipReplenishmentSettingRSP(GetChipReplenishmentSettingRSP other) : this() {
      _hasBits0 = other._hasBits0;
      enableChipReplenishment_ = other.enableChipReplenishment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetChipReplenishmentSettingRSP Clone() {
      return new GetChipReplenishmentSettingRSP(this);
    }

    /// <summary>Field number for the "enable_chip_replenishment" field.</summary>
    public const int EnableChipReplenishmentFieldNumber = 1;
    private readonly static bool EnableChipReplenishmentDefaultValue = false;

    private bool enableChipReplenishment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableChipReplenishment {
      get { if ((_hasBits0 & 1) != 0) { return enableChipReplenishment_; } else { return EnableChipReplenishmentDefaultValue; } }
      set {
        _hasBits0 |= 1;
        enableChipReplenishment_ = value;
      }
    }
    /// <summary>Gets whether the "enable_chip_replenishment" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableChipReplenishment {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "enable_chip_replenishment" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableChipReplenishment() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetChipReplenishmentSettingRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetChipReplenishmentSettingRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnableChipReplenishment != other.EnableChipReplenishment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEnableChipReplenishment) hash ^= EnableChipReplenishment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasEnableChipReplenishment) {
        output.WriteRawTag(8);
        output.WriteBool(EnableChipReplenishment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasEnableChipReplenishment) {
        output.WriteRawTag(8);
        output.WriteBool(EnableChipReplenishment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasEnableChipReplenishment) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetChipReplenishmentSettingRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasEnableChipReplenishment) {
        EnableChipReplenishment = other.EnableChipReplenishment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EnableChipReplenishment = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EnableChipReplenishment = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
