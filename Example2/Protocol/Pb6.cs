// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: pb6.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Texas.Protocol {

  /// <summary>Holder for reflection information generated from pb6.proto</summary>
  public static partial class Pb6Reflection {

    #region Descriptor
    /// <summary>File descriptor for pb6.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Pb6Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglwYjYucHJvdG8aDnByZV9iYXNlLnByb3RvGgpiYXNlLnByb3RvGgpwaW5l",
            "LnByb3RvGglzbmcucHJvdG8aCXBiMS5wcm90bxoJcGI0LnByb3RvGgtwdXNv",
            "eS5wcm90bxoIdHAucHJvdG8aEGx1Y2t5X2RyYXcucHJvdG8aD2NvbG9yZ2Ft",
            "ZS5wcm90bxoNdG9uZ2l0cy5wcm90byKzAQoOU2hvd0NhcHRjaGFSU1ASEQoE",
            "dHlwZRgBIAEoBUgAiAEBEhwKD3NsaWRlX3BhcmFtZXRlchgCIAEoBUgBiAEB",
            "EhYKDmljb25fcGFyYW1ldGVyGAMgAygFEhUKDW51bV9wYXJhbWV0ZXIYBCAD",
            "KAUSFgoJbGVmdF90aW1lGAUgASgFSAKIAQFCBwoFX3R5cGVCEgoQX3NsaWRl",
            "X3BhcmFtZXRlckIMCgpfbGVmdF90aW1lIisKDUVuZENhcHRjaGFSU1ASEQoE",
            "dHlwZRgBIAEoBUgAiAEBQgcKBV90eXBlIqABCgpDYXB0Y2hhUkVREhEKBHR5",
            "cGUYASABKAVIAIgBARIcCg9zbGlkZV9wYXJhbWV0ZXIYAiABKAVIAYgBARIW",
            "Cg5pY29uX3BhcmFtZXRlchgDIAMoBRIaCg1udW1fcGFyYW1ldGVyGAQgASgF",
            "SAKIAQFCBwoFX3R5cGVCEgoQX3NsaWRlX3BhcmFtZXRlckIQCg5fbnVtX3Bh",
            "cmFtZXRlciIoCgpDYXB0Y2hhUlNQEhEKBGNvZGUYASABKAVIAIgBAUIHCgVf",
            "Y29kZSK1AQoTQ2FwdGNoYUZhaWxMZWF2ZVJTUBITCgZyb29taWQYASABKAVI",
            "AIgBARIhCglyb29tX3R5cGUYAiABKA4yCS5Sb29tVHlwZUgBiAEBEiEKCWdh",
            "bWVfbW9kZRgDIAEoDjIJLkdhbWVNb2RlSAKIAQESEgoFYmxpbmQYBCABKAVI",
            "A4gBAUIJCgdfcm9vbWlkQgwKCl9yb29tX3R5cGVCDAoKX2dhbWVfbW9kZUII",
            "CgZfYmxpbmQihg8KDEVudGVyUm9vbVJTUBIRCgRjb2RlGAEgASgFSACIAQES",
            "EwoGcmVhc29uGAIgASgJSAGIAQESJwoMdGFibGVfc3RhdHVzGAMgASgLMgwu",
            "VGFibGVTdGF0dXNIAogBARIlCgtyb29tX3N0YXR1cxgEIAEoCzILLlJvb21T",
            "dGF0dXNIA4gBARIrCg5wbGF5aW5nX3N0YXR1cxgFIAEoCzIOLlBsYXlpbmdT",
            "dGF0dXNIBIgBARIhCglyb29tX2luZm8YBiABKAsyCS5Sb29tSW5mb0gFiAEB",
            "EiEKCXJvb21fdHlwZRgHIAEoDjIJLlJvb21UeXBlSAaIAQESJwoMc25ncm9v",
            "bV9pbmZvGAggASgLMgwuU25nUm9vbUluZm9IB4gBARInCgxtdHRyb29tX2lu",
            "Zm8YCSABKAsyDC5NdHRSb29tSW5mb0gIiAEBEhMKBnJvb21pZBgKIAEoBUgJ",
            "iAEBEiEKCXJvb21fbW9kZRgLIAEoDjIJLlJvb21Nb2RlSAqIAQESKQoNcGlu",
            "ZXJvb21faW5mbxgMIAEoCzINLlBpbmVSb29tSW5mb0gLiAEBEi4KEHBpbmVf",
            "cm9vbV9zdGF0dXMYDSABKAsyDy5QaW5lUm9vbVN0YXR1c0gMiAEBEikKCXJv",
            "b21fbGlzdBgOIAMoCzIWLk11bHRpcGxlVGFibGVSb29tSW5mbxIRCgR0eXBl",
            "GA8gASgFSA2IAQESMAoLc3BpbnVwX2luZm8YECABKAsyFi5TcGluVXBEcmF3",
            "TG90dGVyeUluZm9IDogBARIvCg9ndWVzc19oYW5kX2luZm8YESABKAsyES5H",
            "dWVzc0hhbmRTdWJJbmZvSA+IAQESKgoKc3Rvcm1faW5mbxgSIAEoCzIRLlBQ",
            "Y2hpcHNTdG9ybUluZm9IEIgBARI7Chd3YWl0aW5nX2dhbWVfc3RhcnRfaW5m",
            "bxgTIAEoCzIVLldhaXRpbmdHYW1lU3RhcnRJbmZvSBGIAQESKQoNY2FsbGdh",
            "bWVfaW5mbxgUIAEoCzINLkNhbGxHYW1lSW5mb0gSiAEBEiEKCXVzZXJfdnBp",
            "cBgVIAEoCzIJLlVzZXJWcGlwSBOIAQESKgoMY2FwdGNoYV9pbmZvGBYgASgL",
            "Mg8uU2hvd0NhcHRjaGFSU1BIFIgBARIaCg11c2VyX2xlYWd1ZWlkGBcgASgF",
            "SBWIAQESIAoTdXNlcl9zdXBlcl9sZWFndWVpZBgYIAEoBUgWiAEBEiwKD3B1",
            "c295X3Jvb21faW5mbxgZIAEoCzIOLlB1c295Um9vbUluZm9IF4gBARIwChFw",
            "dXNveV9yb29tX3N0YXR1cxgaIAEoCzIQLlB1c295Um9vbVN0YXR1c0gYiAEB",
            "EiYKDHRwX3Jvb21faW5mbxgbIAEoCzILLlRwUm9vbUluZm9IGYgBARIsCg90",
            "cF90YWJsZV9zdGF0dXMYHCABKAsyDi5UcFRhYmxlU3RhdHVzSBqIAQESMAoR",
            "bHVja3lfZHJhd19jb25maWcYHSABKAsyEC5MdWNreURyYXdDb25maWdIG4gB",
            "ARIsCg9jb2xvcl9yb29tX2luZm8YHiABKAsyDi5Db2xvclJvb21JbmZvSByI",
            "AQESMAoRY29sb3Jfcm9vbV9zdGF0dXMYHyABKAsyEC5Db2xvclJvb21TdGF0",
            "dXNIHYgBARIwChF0b25naXRzX3Jvb21faW5mbxggIAEoCzIQLlRvbmdpdHNS",
            "b29tSW5mb0geiAEBEjQKE3RvbmdpdHNfcm9vbV9zdGF0dXMYISABKAsyEi5U",
            "b25naXRzUm9vbVN0YXR1c0gfiAEBQgcKBV9jb2RlQgkKB19yZWFzb25CDwoN",
            "X3RhYmxlX3N0YXR1c0IOCgxfcm9vbV9zdGF0dXNCEQoPX3BsYXlpbmdfc3Rh",
            "dHVzQgwKCl9yb29tX2luZm9CDAoKX3Jvb21fdHlwZUIPCg1fc25ncm9vbV9p",
            "bmZvQg8KDV9tdHRyb29tX2luZm9CCQoHX3Jvb21pZEIMCgpfcm9vbV9tb2Rl",
            "QhAKDl9waW5lcm9vbV9pbmZvQhMKEV9waW5lX3Jvb21fc3RhdHVzQgcKBV90",
            "eXBlQg4KDF9zcGludXBfaW5mb0ISChBfZ3Vlc3NfaGFuZF9pbmZvQg0KC19z",
            "dG9ybV9pbmZvQhoKGF93YWl0aW5nX2dhbWVfc3RhcnRfaW5mb0IQCg5fY2Fs",
            "bGdhbWVfaW5mb0IMCgpfdXNlcl92cGlwQg8KDV9jYXB0Y2hhX2luZm9CEAoO",
            "X3VzZXJfbGVhZ3VlaWRCFgoUX3VzZXJfc3VwZXJfbGVhZ3VlaWRCEgoQX3B1",
            "c295X3Jvb21faW5mb0IUChJfcHVzb3lfcm9vbV9zdGF0dXNCDwoNX3RwX3Jv",
            "b21faW5mb0ISChBfdHBfdGFibGVfc3RhdHVzQhQKEl9sdWNreV9kcmF3X2Nv",
            "bmZpZ0ISChBfY29sb3Jfcm9vbV9pbmZvQhQKEl9jb2xvcl9yb29tX3N0YXR1",
            "c0IUChJfdG9uZ2l0c19yb29tX2luZm9CFgoUX3RvbmdpdHNfcm9vbV9zdGF0",
            "dXMiPAoORGlzY2FyZENhcmRSRVESGQoMZGlzY2FyZF9jYXJkGAEgASgFSACI",
            "AQFCDwoNX2Rpc2NhcmRfY2FyZCJYCg5EaXNjYXJkQ2FyZFJTUBIRCgRjb2Rl",
            "GAEgASgFSACIAQESGQoMZGlzY2FyZF9jYXJkGAIgASgFSAGIAQFCBwoFX2Nv",
            "ZGVCDwoNX2Rpc2NhcmRfY2FyZCIgCg5EaXNjYXJkQ2FyZEJSQxIOCgZzZWF0",
            "aWQYASADKAUiNgoOU2hvd0Rpc2NhcmRCUkMSFgoJbGVmdF90aW1lGAEgASgF",
            "SACIAQFCDAoKX2xlZnRfdGltZSIPCg1FbmREaXNjYXJkQlJDQhhaBS9nb3Bi",
            "qgIOVGV4YXMuUHJvdG9jb2xiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Texas.Protocol.PreBaseReflection.Descriptor, global::Texas.Protocol.BaseReflection.Descriptor, global::Texas.Protocol.PineReflection.Descriptor, global::Texas.Protocol.SngReflection.Descriptor, global::Texas.Protocol.Pb1Reflection.Descriptor, global::Texas.Protocol.Pb4Reflection.Descriptor, global::Texas.Protocol.PusoyReflection.Descriptor, global::Texas.Protocol.TpReflection.Descriptor, global::Texas.Protocol.LuckyDrawReflection.Descriptor, global::Texas.Protocol.ColorgameReflection.Descriptor, global::Texas.Protocol.TongitsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ShowCaptchaRSP), global::Texas.Protocol.ShowCaptchaRSP.Parser, new[]{ "Type", "SlideParameter", "IconParameter", "NumParameter", "LeftTime" }, new[]{ "Type", "SlideParameter", "LeftTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.EndCaptchaRSP), global::Texas.Protocol.EndCaptchaRSP.Parser, new[]{ "Type" }, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.CaptchaREQ), global::Texas.Protocol.CaptchaREQ.Parser, new[]{ "Type", "SlideParameter", "IconParameter", "NumParameter" }, new[]{ "Type", "SlideParameter", "NumParameter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.CaptchaRSP), global::Texas.Protocol.CaptchaRSP.Parser, new[]{ "Code" }, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.CaptchaFailLeaveRSP), global::Texas.Protocol.CaptchaFailLeaveRSP.Parser, new[]{ "Roomid", "RoomType", "GameMode", "Blind" }, new[]{ "Roomid", "RoomType", "GameMode", "Blind" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.EnterRoomRSP), global::Texas.Protocol.EnterRoomRSP.Parser, new[]{ "Code", "Reason", "TableStatus", "RoomStatus", "PlayingStatus", "RoomInfo", "RoomType", "SngroomInfo", "MttroomInfo", "Roomid", "RoomMode", "PineroomInfo", "PineRoomStatus", "RoomList", "Type", "SpinupInfo", "GuessHandInfo", "StormInfo", "WaitingGameStartInfo", "CallgameInfo", "UserVpip", "CaptchaInfo", "UserLeagueid", "UserSuperLeagueid", "PusoyRoomInfo", "PusoyRoomStatus", "TpRoomInfo", "TpTableStatus", "LuckyDrawConfig", "ColorRoomInfo", "ColorRoomStatus", "TongitsRoomInfo", "TongitsRoomStatus" }, new[]{ "Code", "Reason", "TableStatus", "RoomStatus", "PlayingStatus", "RoomInfo", "RoomType", "SngroomInfo", "MttroomInfo", "Roomid", "RoomMode", "PineroomInfo", "PineRoomStatus", "Type", "SpinupInfo", "GuessHandInfo", "StormInfo", "WaitingGameStartInfo", "CallgameInfo", "UserVpip", "CaptchaInfo", "UserLeagueid", "UserSuperLeagueid", "PusoyRoomInfo", "PusoyRoomStatus", "TpRoomInfo", "TpTableStatus", "LuckyDrawConfig", "ColorRoomInfo", "ColorRoomStatus", "TongitsRoomInfo", "TongitsRoomStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.DiscardCardREQ), global::Texas.Protocol.DiscardCardREQ.Parser, new[]{ "DiscardCard" }, new[]{ "DiscardCard" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.DiscardCardRSP), global::Texas.Protocol.DiscardCardRSP.Parser, new[]{ "Code", "DiscardCard" }, new[]{ "Code", "DiscardCard" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.DiscardCardBRC), global::Texas.Protocol.DiscardCardBRC.Parser, new[]{ "Seatid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ShowDiscardBRC), global::Texas.Protocol.ShowDiscardBRC.Parser, new[]{ "LeftTime" }, new[]{ "LeftTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.EndDiscardBRC), global::Texas.Protocol.EndDiscardBRC.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///展示人机校验
  /// </summary>
  public sealed partial class ShowCaptchaRSP : pb::IMessage<ShowCaptchaRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShowCaptchaRSP> _parser = new pb::MessageParser<ShowCaptchaRSP>(() => new ShowCaptchaRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ShowCaptchaRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb6Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShowCaptchaRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShowCaptchaRSP(ShowCaptchaRSP other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      slideParameter_ = other.slideParameter_;
      iconParameter_ = other.iconParameter_.Clone();
      numParameter_ = other.numParameter_.Clone();
      leftTime_ = other.leftTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShowCaptchaRSP Clone() {
      return new ShowCaptchaRSP(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    ///0:滑动验证   1:图标点选  2：数字计算
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "slide_parameter" field.</summary>
    public const int SlideParameterFieldNumber = 2;
    private readonly static int SlideParameterDefaultValue = 0;

    private int slideParameter_;
    /// <summary>
    ///滑动验证 取值范围是[0,11]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SlideParameter {
      get { if ((_hasBits0 & 2) != 0) { return slideParameter_; } else { return SlideParameterDefaultValue; } }
      set {
        _hasBits0 |= 2;
        slideParameter_ = value;
      }
    }
    /// <summary>Gets whether the "slide_parameter" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSlideParameter {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "slide_parameter" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSlideParameter() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "icon_parameter" field.</summary>
    public const int IconParameterFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_iconParameter_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> iconParameter_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///图标点选
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> IconParameter {
      get { return iconParameter_; }
    }

    /// <summary>Field number for the "num_parameter" field.</summary>
    public const int NumParameterFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_numParameter_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> numParameter_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///数值计算
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> NumParameter {
      get { return numParameter_; }
    }

    /// <summary>Field number for the "left_time" field.</summary>
    public const int LeftTimeFieldNumber = 5;
    private readonly static int LeftTimeDefaultValue = 0;

    private int leftTime_;
    /// <summary>
    ///剩余时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LeftTime {
      get { if ((_hasBits0 & 4) != 0) { return leftTime_; } else { return LeftTimeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        leftTime_ = value;
      }
    }
    /// <summary>Gets whether the "left_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeftTime {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "left_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeftTime() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ShowCaptchaRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ShowCaptchaRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (SlideParameter != other.SlideParameter) return false;
      if(!iconParameter_.Equals(other.iconParameter_)) return false;
      if(!numParameter_.Equals(other.numParameter_)) return false;
      if (LeftTime != other.LeftTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasSlideParameter) hash ^= SlideParameter.GetHashCode();
      hash ^= iconParameter_.GetHashCode();
      hash ^= numParameter_.GetHashCode();
      if (HasLeftTime) hash ^= LeftTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasSlideParameter) {
        output.WriteRawTag(16);
        output.WriteInt32(SlideParameter);
      }
      iconParameter_.WriteTo(output, _repeated_iconParameter_codec);
      numParameter_.WriteTo(output, _repeated_numParameter_codec);
      if (HasLeftTime) {
        output.WriteRawTag(40);
        output.WriteInt32(LeftTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasSlideParameter) {
        output.WriteRawTag(16);
        output.WriteInt32(SlideParameter);
      }
      iconParameter_.WriteTo(ref output, _repeated_iconParameter_codec);
      numParameter_.WriteTo(ref output, _repeated_numParameter_codec);
      if (HasLeftTime) {
        output.WriteRawTag(40);
        output.WriteInt32(LeftTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasSlideParameter) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SlideParameter);
      }
      size += iconParameter_.CalculateSize(_repeated_iconParameter_codec);
      size += numParameter_.CalculateSize(_repeated_numParameter_codec);
      if (HasLeftTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeftTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ShowCaptchaRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasSlideParameter) {
        SlideParameter = other.SlideParameter;
      }
      iconParameter_.Add(other.iconParameter_);
      numParameter_.Add(other.numParameter_);
      if (other.HasLeftTime) {
        LeftTime = other.LeftTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            SlideParameter = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            iconParameter_.AddEntriesFrom(input, _repeated_iconParameter_codec);
            break;
          }
          case 34:
          case 32: {
            numParameter_.AddEntriesFrom(input, _repeated_numParameter_codec);
            break;
          }
          case 40: {
            LeftTime = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            SlideParameter = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            iconParameter_.AddEntriesFrom(ref input, _repeated_iconParameter_codec);
            break;
          }
          case 34:
          case 32: {
            numParameter_.AddEntriesFrom(ref input, _repeated_numParameter_codec);
            break;
          }
          case 40: {
            LeftTime = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///超时结束人机校验
  /// </summary>
  public sealed partial class EndCaptchaRSP : pb::IMessage<EndCaptchaRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndCaptchaRSP> _parser = new pb::MessageParser<EndCaptchaRSP>(() => new EndCaptchaRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EndCaptchaRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb6Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EndCaptchaRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EndCaptchaRSP(EndCaptchaRSP other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EndCaptchaRSP Clone() {
      return new EndCaptchaRSP(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    ///0:第一个周期超时 1：第二个周期超时
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EndCaptchaRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EndCaptchaRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EndCaptchaRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///人机校验请求
  /// </summary>
  public sealed partial class CaptchaREQ : pb::IMessage<CaptchaREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CaptchaREQ> _parser = new pb::MessageParser<CaptchaREQ>(() => new CaptchaREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CaptchaREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb6Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CaptchaREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CaptchaREQ(CaptchaREQ other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      slideParameter_ = other.slideParameter_;
      iconParameter_ = other.iconParameter_.Clone();
      numParameter_ = other.numParameter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CaptchaREQ Clone() {
      return new CaptchaREQ(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    ///0:滑动验证   1:图标点选  2：数字计算
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "slide_parameter" field.</summary>
    public const int SlideParameterFieldNumber = 2;
    private readonly static int SlideParameterDefaultValue = 0;

    private int slideParameter_;
    /// <summary>
    ///滑动验证 取值范围是[0,9]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SlideParameter {
      get { if ((_hasBits0 & 2) != 0) { return slideParameter_; } else { return SlideParameterDefaultValue; } }
      set {
        _hasBits0 |= 2;
        slideParameter_ = value;
      }
    }
    /// <summary>Gets whether the "slide_parameter" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSlideParameter {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "slide_parameter" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSlideParameter() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "icon_parameter" field.</summary>
    public const int IconParameterFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_iconParameter_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> iconParameter_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///图标点选
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> IconParameter {
      get { return iconParameter_; }
    }

    /// <summary>Field number for the "num_parameter" field.</summary>
    public const int NumParameterFieldNumber = 4;
    private readonly static int NumParameterDefaultValue = 0;

    private int numParameter_;
    /// <summary>
    ///数值计算
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumParameter {
      get { if ((_hasBits0 & 4) != 0) { return numParameter_; } else { return NumParameterDefaultValue; } }
      set {
        _hasBits0 |= 4;
        numParameter_ = value;
      }
    }
    /// <summary>Gets whether the "num_parameter" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumParameter {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "num_parameter" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumParameter() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CaptchaREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CaptchaREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (SlideParameter != other.SlideParameter) return false;
      if(!iconParameter_.Equals(other.iconParameter_)) return false;
      if (NumParameter != other.NumParameter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasSlideParameter) hash ^= SlideParameter.GetHashCode();
      hash ^= iconParameter_.GetHashCode();
      if (HasNumParameter) hash ^= NumParameter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasSlideParameter) {
        output.WriteRawTag(16);
        output.WriteInt32(SlideParameter);
      }
      iconParameter_.WriteTo(output, _repeated_iconParameter_codec);
      if (HasNumParameter) {
        output.WriteRawTag(32);
        output.WriteInt32(NumParameter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasSlideParameter) {
        output.WriteRawTag(16);
        output.WriteInt32(SlideParameter);
      }
      iconParameter_.WriteTo(ref output, _repeated_iconParameter_codec);
      if (HasNumParameter) {
        output.WriteRawTag(32);
        output.WriteInt32(NumParameter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasSlideParameter) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SlideParameter);
      }
      size += iconParameter_.CalculateSize(_repeated_iconParameter_codec);
      if (HasNumParameter) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumParameter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CaptchaREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasSlideParameter) {
        SlideParameter = other.SlideParameter;
      }
      iconParameter_.Add(other.iconParameter_);
      if (other.HasNumParameter) {
        NumParameter = other.NumParameter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            SlideParameter = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            iconParameter_.AddEntriesFrom(input, _repeated_iconParameter_codec);
            break;
          }
          case 32: {
            NumParameter = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            SlideParameter = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            iconParameter_.AddEntriesFrom(ref input, _repeated_iconParameter_codec);
            break;
          }
          case 32: {
            NumParameter = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CaptchaRSP : pb::IMessage<CaptchaRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CaptchaRSP> _parser = new pb::MessageParser<CaptchaRSP>(() => new CaptchaRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CaptchaRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb6Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CaptchaRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CaptchaRSP(CaptchaRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CaptchaRSP Clone() {
      return new CaptchaRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0:成功  -1：失败 -2：超时
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CaptchaRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CaptchaRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CaptchaRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CaptchaFailLeaveRSP : pb::IMessage<CaptchaFailLeaveRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CaptchaFailLeaveRSP> _parser = new pb::MessageParser<CaptchaFailLeaveRSP>(() => new CaptchaFailLeaveRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CaptchaFailLeaveRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb6Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CaptchaFailLeaveRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CaptchaFailLeaveRSP(CaptchaFailLeaveRSP other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      roomType_ = other.roomType_;
      gameMode_ = other.gameMode_;
      blind_ = other.blind_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CaptchaFailLeaveRSP Clone() {
      return new CaptchaFailLeaveRSP(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 1) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "room_type" field.</summary>
    public const int RoomTypeFieldNumber = 2;
    private readonly static global::Texas.Protocol.RoomType RoomTypeDefaultValue = global::Texas.Protocol.RoomType.TestRoom;

    private global::Texas.Protocol.RoomType roomType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomType RoomType {
      get { if ((_hasBits0 & 2) != 0) { return roomType_; } else { return RoomTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        roomType_ = value;
      }
    }
    /// <summary>Gets whether the "room_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "room_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "game_mode" field.</summary>
    public const int GameModeFieldNumber = 3;
    private readonly static global::Texas.Protocol.GameMode GameModeDefaultValue = global::Texas.Protocol.GameMode.Regular;

    private global::Texas.Protocol.GameMode gameMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.GameMode GameMode {
      get { if ((_hasBits0 & 4) != 0) { return gameMode_; } else { return GameModeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        gameMode_ = value;
      }
    }
    /// <summary>Gets whether the "game_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameMode {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "game_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameMode() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "blind" field.</summary>
    public const int BlindFieldNumber = 4;
    private readonly static int BlindDefaultValue = 0;

    private int blind_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Blind {
      get { if ((_hasBits0 & 8) != 0) { return blind_; } else { return BlindDefaultValue; } }
      set {
        _hasBits0 |= 8;
        blind_ = value;
      }
    }
    /// <summary>Gets whether the "blind" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlind {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "blind" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlind() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CaptchaFailLeaveRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CaptchaFailLeaveRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (RoomType != other.RoomType) return false;
      if (GameMode != other.GameMode) return false;
      if (Blind != other.Blind) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasRoomType) hash ^= RoomType.GetHashCode();
      if (HasGameMode) hash ^= GameMode.GetHashCode();
      if (HasBlind) hash ^= Blind.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasRoomType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) RoomType);
      }
      if (HasGameMode) {
        output.WriteRawTag(24);
        output.WriteEnum((int) GameMode);
      }
      if (HasBlind) {
        output.WriteRawTag(32);
        output.WriteInt32(Blind);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasRoomType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) RoomType);
      }
      if (HasGameMode) {
        output.WriteRawTag(24);
        output.WriteEnum((int) GameMode);
      }
      if (HasBlind) {
        output.WriteRawTag(32);
        output.WriteInt32(Blind);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasRoomType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomType);
      }
      if (HasGameMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
      }
      if (HasBlind) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Blind);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CaptchaFailLeaveRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasRoomType) {
        RoomType = other.RoomType;
      }
      if (other.HasGameMode) {
        GameMode = other.GameMode;
      }
      if (other.HasBlind) {
        Blind = other.Blind;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 24: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 32: {
            Blind = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 24: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 32: {
            Blind = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EnterRoomRSP : pb::IMessage<EnterRoomRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EnterRoomRSP> _parser = new pb::MessageParser<EnterRoomRSP>(() => new EnterRoomRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EnterRoomRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb6Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnterRoomRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnterRoomRSP(EnterRoomRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      reason_ = other.reason_;
      tableStatus_ = other.tableStatus_ != null ? other.tableStatus_.Clone() : null;
      roomStatus_ = other.roomStatus_ != null ? other.roomStatus_.Clone() : null;
      playingStatus_ = other.playingStatus_ != null ? other.playingStatus_.Clone() : null;
      roomInfo_ = other.roomInfo_ != null ? other.roomInfo_.Clone() : null;
      roomType_ = other.roomType_;
      sngroomInfo_ = other.sngroomInfo_ != null ? other.sngroomInfo_.Clone() : null;
      mttroomInfo_ = other.mttroomInfo_ != null ? other.mttroomInfo_.Clone() : null;
      roomid_ = other.roomid_;
      roomMode_ = other.roomMode_;
      pineroomInfo_ = other.pineroomInfo_ != null ? other.pineroomInfo_.Clone() : null;
      pineRoomStatus_ = other.pineRoomStatus_ != null ? other.pineRoomStatus_.Clone() : null;
      roomList_ = other.roomList_.Clone();
      type_ = other.type_;
      spinupInfo_ = other.spinupInfo_ != null ? other.spinupInfo_.Clone() : null;
      guessHandInfo_ = other.guessHandInfo_ != null ? other.guessHandInfo_.Clone() : null;
      stormInfo_ = other.stormInfo_ != null ? other.stormInfo_.Clone() : null;
      waitingGameStartInfo_ = other.waitingGameStartInfo_ != null ? other.waitingGameStartInfo_.Clone() : null;
      callgameInfo_ = other.callgameInfo_ != null ? other.callgameInfo_.Clone() : null;
      userVpip_ = other.userVpip_ != null ? other.userVpip_.Clone() : null;
      captchaInfo_ = other.captchaInfo_ != null ? other.captchaInfo_.Clone() : null;
      userLeagueid_ = other.userLeagueid_;
      userSuperLeagueid_ = other.userSuperLeagueid_;
      pusoyRoomInfo_ = other.pusoyRoomInfo_ != null ? other.pusoyRoomInfo_.Clone() : null;
      pusoyRoomStatus_ = other.pusoyRoomStatus_ != null ? other.pusoyRoomStatus_.Clone() : null;
      tpRoomInfo_ = other.tpRoomInfo_ != null ? other.tpRoomInfo_.Clone() : null;
      tpTableStatus_ = other.tpTableStatus_ != null ? other.tpTableStatus_.Clone() : null;
      luckyDrawConfig_ = other.luckyDrawConfig_ != null ? other.luckyDrawConfig_.Clone() : null;
      colorRoomInfo_ = other.colorRoomInfo_ != null ? other.colorRoomInfo_.Clone() : null;
      colorRoomStatus_ = other.colorRoomStatus_ != null ? other.colorRoomStatus_.Clone() : null;
      tongitsRoomInfo_ = other.tongitsRoomInfo_ != null ? other.tongitsRoomInfo_.Clone() : null;
      tongitsRoomStatus_ = other.tongitsRoomStatus_ != null ? other.tongitsRoomStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnterRoomRSP Clone() {
      return new EnterRoomRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 2;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "table_status" field.</summary>
    public const int TableStatusFieldNumber = 3;
    private global::Texas.Protocol.TableStatus tableStatus_;
    /// <summary>
    ///version 0.1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TableStatus TableStatus {
      get { return tableStatus_; }
      set {
        tableStatus_ = value;
      }
    }

    /// <summary>Field number for the "room_status" field.</summary>
    public const int RoomStatusFieldNumber = 4;
    private global::Texas.Protocol.RoomStatus roomStatus_;
    /// <summary>
    ///version 0.1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomStatus RoomStatus {
      get { return roomStatus_; }
      set {
        roomStatus_ = value;
      }
    }

    /// <summary>Field number for the "playing_status" field.</summary>
    public const int PlayingStatusFieldNumber = 5;
    private global::Texas.Protocol.PlayingStatus playingStatus_;
    /// <summary>
    /// 玩家在坐信息	//version 0.1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PlayingStatus PlayingStatus {
      get { return playingStatus_; }
      set {
        playingStatus_ = value;
      }
    }

    /// <summary>Field number for the "room_info" field.</summary>
    public const int RoomInfoFieldNumber = 6;
    private global::Texas.Protocol.RoomInfo roomInfo_;
    /// <summary>
    ///version 0.1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomInfo RoomInfo {
      get { return roomInfo_; }
      set {
        roomInfo_ = value;
      }
    }

    /// <summary>Field number for the "room_type" field.</summary>
    public const int RoomTypeFieldNumber = 7;
    private readonly static global::Texas.Protocol.RoomType RoomTypeDefaultValue = global::Texas.Protocol.RoomType.TestRoom;

    private global::Texas.Protocol.RoomType roomType_;
    /// <summary>
    /// //version 0.1 sng房间使用sngroom_info  mtt房间使用sngroom_info + mttroom_info
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomType RoomType {
      get { if ((_hasBits0 & 2) != 0) { return roomType_; } else { return RoomTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        roomType_ = value;
      }
    }
    /// <summary>Gets whether the "room_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "room_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "sngroom_info" field.</summary>
    public const int SngroomInfoFieldNumber = 8;
    private global::Texas.Protocol.SngRoomInfo sngroomInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.SngRoomInfo SngroomInfo {
      get { return sngroomInfo_; }
      set {
        sngroomInfo_ = value;
      }
    }

    /// <summary>Field number for the "mttroom_info" field.</summary>
    public const int MttroomInfoFieldNumber = 9;
    private global::Texas.Protocol.MttRoomInfo mttroomInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.MttRoomInfo MttroomInfo {
      get { return mttroomInfo_; }
      set {
        mttroomInfo_ = value;
      }
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 10;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    /// <summary>
    ///version 0.1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 4) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "room_mode" field.</summary>
    public const int RoomModeFieldNumber = 11;
    private readonly static global::Texas.Protocol.RoomMode RoomModeDefaultValue = global::Texas.Protocol.RoomMode.None;

    private global::Texas.Protocol.RoomMode roomMode_;
    /// <summary>
    ///version 0.1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomMode RoomMode {
      get { if ((_hasBits0 & 8) != 0) { return roomMode_; } else { return RoomModeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        roomMode_ = value;
      }
    }
    /// <summary>Gets whether the "room_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomMode {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "room_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomMode() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "pineroom_info" field.</summary>
    public const int PineroomInfoFieldNumber = 12;
    private global::Texas.Protocol.PineRoomInfo pineroomInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PineRoomInfo PineroomInfo {
      get { return pineroomInfo_; }
      set {
        pineroomInfo_ = value;
      }
    }

    /// <summary>Field number for the "pine_room_status" field.</summary>
    public const int PineRoomStatusFieldNumber = 13;
    private global::Texas.Protocol.PineRoomStatus pineRoomStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PineRoomStatus PineRoomStatus {
      get { return pineRoomStatus_; }
      set {
        pineRoomStatus_ = value;
      }
    }

    /// <summary>Field number for the "room_list" field.</summary>
    public const int RoomListFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Texas.Protocol.MultipleTableRoomInfo> _repeated_roomList_codec
        = pb::FieldCodec.ForMessage(114, global::Texas.Protocol.MultipleTableRoomInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.MultipleTableRoomInfo> roomList_ = new pbc::RepeatedField<global::Texas.Protocol.MultipleTableRoomInfo>();
    /// <summary>
    /// 多桌列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.MultipleTableRoomInfo> RoomList {
      get { return roomList_; }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 15;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    /// 0其他, 1围观
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 16) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "spinup_info" field.</summary>
    public const int SpinupInfoFieldNumber = 16;
    private global::Texas.Protocol.SpinUpDrawLotteryInfo spinupInfo_;
    /// <summary>
    /// spinup摇奖信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.SpinUpDrawLotteryInfo SpinupInfo {
      get { return spinupInfo_; }
      set {
        spinupInfo_ = value;
      }
    }

    /// <summary>Field number for the "guess_hand_info" field.</summary>
    public const int GuessHandInfoFieldNumber = 17;
    private global::Texas.Protocol.GuessHandSubInfo guessHandInfo_;
    /// <summary>
    /// 猜手牌信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.GuessHandSubInfo GuessHandInfo {
      get { return guessHandInfo_; }
      set {
        guessHandInfo_ = value;
      }
    }

    /// <summary>Field number for the "storm_info" field.</summary>
    public const int StormInfoFieldNumber = 18;
    private global::Texas.Protocol.PPchipsStormInfo stormInfo_;
    /// <summary>
    /// ppstorm info
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PPchipsStormInfo StormInfo {
      get { return stormInfo_; }
      set {
        stormInfo_ = value;
      }
    }

    /// <summary>Field number for the "waiting_game_start_info" field.</summary>
    public const int WaitingGameStartInfoFieldNumber = 19;
    private global::Texas.Protocol.WaitingGameStartInfo waitingGameStartInfo_;
    /// <summary>
    /// 等待弹窗信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.WaitingGameStartInfo WaitingGameStartInfo {
      get { return waitingGameStartInfo_; }
      set {
        waitingGameStartInfo_ = value;
      }
    }

    /// <summary>Field number for the "callgame_info" field.</summary>
    public const int CallgameInfoFieldNumber = 20;
    private global::Texas.Protocol.CallGameInfo callgameInfo_;
    /// <summary>
    /// CallGame信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.CallGameInfo CallgameInfo {
      get { return callgameInfo_; }
      set {
        callgameInfo_ = value;
      }
    }

    /// <summary>Field number for the "user_vpip" field.</summary>
    public const int UserVpipFieldNumber = 21;
    private global::Texas.Protocol.UserVpip userVpip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.UserVpip UserVpip {
      get { return userVpip_; }
      set {
        userVpip_ = value;
      }
    }

    /// <summary>Field number for the "captcha_info" field.</summary>
    public const int CaptchaInfoFieldNumber = 22;
    private global::Texas.Protocol.ShowCaptchaRSP captchaInfo_;
    /// <summary>
    ///人机校验信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.ShowCaptchaRSP CaptchaInfo {
      get { return captchaInfo_; }
      set {
        captchaInfo_ = value;
      }
    }

    /// <summary>Field number for the "user_leagueid" field.</summary>
    public const int UserLeagueidFieldNumber = 23;
    private readonly static int UserLeagueidDefaultValue = 0;

    private int userLeagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UserLeagueid {
      get { if ((_hasBits0 & 32) != 0) { return userLeagueid_; } else { return UserLeagueidDefaultValue; } }
      set {
        _hasBits0 |= 32;
        userLeagueid_ = value;
      }
    }
    /// <summary>Gets whether the "user_leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserLeagueid {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "user_leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserLeagueid() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "user_super_leagueid" field.</summary>
    public const int UserSuperLeagueidFieldNumber = 24;
    private readonly static int UserSuperLeagueidDefaultValue = 0;

    private int userSuperLeagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UserSuperLeagueid {
      get { if ((_hasBits0 & 64) != 0) { return userSuperLeagueid_; } else { return UserSuperLeagueidDefaultValue; } }
      set {
        _hasBits0 |= 64;
        userSuperLeagueid_ = value;
      }
    }
    /// <summary>Gets whether the "user_super_leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserSuperLeagueid {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "user_super_leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserSuperLeagueid() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "pusoy_room_info" field.</summary>
    public const int PusoyRoomInfoFieldNumber = 25;
    private global::Texas.Protocol.PusoyRoomInfo pusoyRoomInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PusoyRoomInfo PusoyRoomInfo {
      get { return pusoyRoomInfo_; }
      set {
        pusoyRoomInfo_ = value;
      }
    }

    /// <summary>Field number for the "pusoy_room_status" field.</summary>
    public const int PusoyRoomStatusFieldNumber = 26;
    private global::Texas.Protocol.PusoyRoomStatus pusoyRoomStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PusoyRoomStatus PusoyRoomStatus {
      get { return pusoyRoomStatus_; }
      set {
        pusoyRoomStatus_ = value;
      }
    }

    /// <summary>Field number for the "tp_room_info" field.</summary>
    public const int TpRoomInfoFieldNumber = 27;
    private global::Texas.Protocol.TpRoomInfo tpRoomInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TpRoomInfo TpRoomInfo {
      get { return tpRoomInfo_; }
      set {
        tpRoomInfo_ = value;
      }
    }

    /// <summary>Field number for the "tp_table_status" field.</summary>
    public const int TpTableStatusFieldNumber = 28;
    private global::Texas.Protocol.TpTableStatus tpTableStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TpTableStatus TpTableStatus {
      get { return tpTableStatus_; }
      set {
        tpTableStatus_ = value;
      }
    }

    /// <summary>Field number for the "lucky_draw_config" field.</summary>
    public const int LuckyDrawConfigFieldNumber = 29;
    private global::Texas.Protocol.LuckyDrawConfig luckyDrawConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.LuckyDrawConfig LuckyDrawConfig {
      get { return luckyDrawConfig_; }
      set {
        luckyDrawConfig_ = value;
      }
    }

    /// <summary>Field number for the "color_room_info" field.</summary>
    public const int ColorRoomInfoFieldNumber = 30;
    private global::Texas.Protocol.ColorRoomInfo colorRoomInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.ColorRoomInfo ColorRoomInfo {
      get { return colorRoomInfo_; }
      set {
        colorRoomInfo_ = value;
      }
    }

    /// <summary>Field number for the "color_room_status" field.</summary>
    public const int ColorRoomStatusFieldNumber = 31;
    private global::Texas.Protocol.ColorRoomStatus colorRoomStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.ColorRoomStatus ColorRoomStatus {
      get { return colorRoomStatus_; }
      set {
        colorRoomStatus_ = value;
      }
    }

    /// <summary>Field number for the "tongits_room_info" field.</summary>
    public const int TongitsRoomInfoFieldNumber = 32;
    private global::Texas.Protocol.TongitsRoomInfo tongitsRoomInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TongitsRoomInfo TongitsRoomInfo {
      get { return tongitsRoomInfo_; }
      set {
        tongitsRoomInfo_ = value;
      }
    }

    /// <summary>Field number for the "tongits_room_status" field.</summary>
    public const int TongitsRoomStatusFieldNumber = 33;
    private global::Texas.Protocol.TongitsRoomStatus tongitsRoomStatus_;
    /// <summary>
    ///new_game_proto
    ///optional NewGameRoomInfo newgame_room_info     = 1000;
    ///optional NewGameRoomStatus newgame_room_status = 1001;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TongitsRoomStatus TongitsRoomStatus {
      get { return tongitsRoomStatus_; }
      set {
        tongitsRoomStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EnterRoomRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EnterRoomRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Reason != other.Reason) return false;
      if (!object.Equals(TableStatus, other.TableStatus)) return false;
      if (!object.Equals(RoomStatus, other.RoomStatus)) return false;
      if (!object.Equals(PlayingStatus, other.PlayingStatus)) return false;
      if (!object.Equals(RoomInfo, other.RoomInfo)) return false;
      if (RoomType != other.RoomType) return false;
      if (!object.Equals(SngroomInfo, other.SngroomInfo)) return false;
      if (!object.Equals(MttroomInfo, other.MttroomInfo)) return false;
      if (Roomid != other.Roomid) return false;
      if (RoomMode != other.RoomMode) return false;
      if (!object.Equals(PineroomInfo, other.PineroomInfo)) return false;
      if (!object.Equals(PineRoomStatus, other.PineRoomStatus)) return false;
      if(!roomList_.Equals(other.roomList_)) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(SpinupInfo, other.SpinupInfo)) return false;
      if (!object.Equals(GuessHandInfo, other.GuessHandInfo)) return false;
      if (!object.Equals(StormInfo, other.StormInfo)) return false;
      if (!object.Equals(WaitingGameStartInfo, other.WaitingGameStartInfo)) return false;
      if (!object.Equals(CallgameInfo, other.CallgameInfo)) return false;
      if (!object.Equals(UserVpip, other.UserVpip)) return false;
      if (!object.Equals(CaptchaInfo, other.CaptchaInfo)) return false;
      if (UserLeagueid != other.UserLeagueid) return false;
      if (UserSuperLeagueid != other.UserSuperLeagueid) return false;
      if (!object.Equals(PusoyRoomInfo, other.PusoyRoomInfo)) return false;
      if (!object.Equals(PusoyRoomStatus, other.PusoyRoomStatus)) return false;
      if (!object.Equals(TpRoomInfo, other.TpRoomInfo)) return false;
      if (!object.Equals(TpTableStatus, other.TpTableStatus)) return false;
      if (!object.Equals(LuckyDrawConfig, other.LuckyDrawConfig)) return false;
      if (!object.Equals(ColorRoomInfo, other.ColorRoomInfo)) return false;
      if (!object.Equals(ColorRoomStatus, other.ColorRoomStatus)) return false;
      if (!object.Equals(TongitsRoomInfo, other.TongitsRoomInfo)) return false;
      if (!object.Equals(TongitsRoomStatus, other.TongitsRoomStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (tableStatus_ != null) hash ^= TableStatus.GetHashCode();
      if (roomStatus_ != null) hash ^= RoomStatus.GetHashCode();
      if (playingStatus_ != null) hash ^= PlayingStatus.GetHashCode();
      if (roomInfo_ != null) hash ^= RoomInfo.GetHashCode();
      if (HasRoomType) hash ^= RoomType.GetHashCode();
      if (sngroomInfo_ != null) hash ^= SngroomInfo.GetHashCode();
      if (mttroomInfo_ != null) hash ^= MttroomInfo.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasRoomMode) hash ^= RoomMode.GetHashCode();
      if (pineroomInfo_ != null) hash ^= PineroomInfo.GetHashCode();
      if (pineRoomStatus_ != null) hash ^= PineRoomStatus.GetHashCode();
      hash ^= roomList_.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (spinupInfo_ != null) hash ^= SpinupInfo.GetHashCode();
      if (guessHandInfo_ != null) hash ^= GuessHandInfo.GetHashCode();
      if (stormInfo_ != null) hash ^= StormInfo.GetHashCode();
      if (waitingGameStartInfo_ != null) hash ^= WaitingGameStartInfo.GetHashCode();
      if (callgameInfo_ != null) hash ^= CallgameInfo.GetHashCode();
      if (userVpip_ != null) hash ^= UserVpip.GetHashCode();
      if (captchaInfo_ != null) hash ^= CaptchaInfo.GetHashCode();
      if (HasUserLeagueid) hash ^= UserLeagueid.GetHashCode();
      if (HasUserSuperLeagueid) hash ^= UserSuperLeagueid.GetHashCode();
      if (pusoyRoomInfo_ != null) hash ^= PusoyRoomInfo.GetHashCode();
      if (pusoyRoomStatus_ != null) hash ^= PusoyRoomStatus.GetHashCode();
      if (tpRoomInfo_ != null) hash ^= TpRoomInfo.GetHashCode();
      if (tpTableStatus_ != null) hash ^= TpTableStatus.GetHashCode();
      if (luckyDrawConfig_ != null) hash ^= LuckyDrawConfig.GetHashCode();
      if (colorRoomInfo_ != null) hash ^= ColorRoomInfo.GetHashCode();
      if (colorRoomStatus_ != null) hash ^= ColorRoomStatus.GetHashCode();
      if (tongitsRoomInfo_ != null) hash ^= TongitsRoomInfo.GetHashCode();
      if (tongitsRoomStatus_ != null) hash ^= TongitsRoomStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasReason) {
        output.WriteRawTag(18);
        output.WriteString(Reason);
      }
      if (tableStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TableStatus);
      }
      if (roomStatus_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RoomStatus);
      }
      if (playingStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PlayingStatus);
      }
      if (roomInfo_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RoomInfo);
      }
      if (HasRoomType) {
        output.WriteRawTag(56);
        output.WriteEnum((int) RoomType);
      }
      if (sngroomInfo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(SngroomInfo);
      }
      if (mttroomInfo_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(MttroomInfo);
      }
      if (HasRoomid) {
        output.WriteRawTag(80);
        output.WriteInt32(Roomid);
      }
      if (HasRoomMode) {
        output.WriteRawTag(88);
        output.WriteEnum((int) RoomMode);
      }
      if (pineroomInfo_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(PineroomInfo);
      }
      if (pineRoomStatus_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(PineRoomStatus);
      }
      roomList_.WriteTo(output, _repeated_roomList_codec);
      if (HasType) {
        output.WriteRawTag(120);
        output.WriteInt32(Type);
      }
      if (spinupInfo_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(SpinupInfo);
      }
      if (guessHandInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(GuessHandInfo);
      }
      if (stormInfo_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(StormInfo);
      }
      if (waitingGameStartInfo_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(WaitingGameStartInfo);
      }
      if (callgameInfo_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(CallgameInfo);
      }
      if (userVpip_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(UserVpip);
      }
      if (captchaInfo_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(CaptchaInfo);
      }
      if (HasUserLeagueid) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(UserLeagueid);
      }
      if (HasUserSuperLeagueid) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(UserSuperLeagueid);
      }
      if (pusoyRoomInfo_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(PusoyRoomInfo);
      }
      if (pusoyRoomStatus_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(PusoyRoomStatus);
      }
      if (tpRoomInfo_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(TpRoomInfo);
      }
      if (tpTableStatus_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(TpTableStatus);
      }
      if (luckyDrawConfig_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(LuckyDrawConfig);
      }
      if (colorRoomInfo_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(ColorRoomInfo);
      }
      if (colorRoomStatus_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(ColorRoomStatus);
      }
      if (tongitsRoomInfo_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(TongitsRoomInfo);
      }
      if (tongitsRoomStatus_ != null) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(TongitsRoomStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasReason) {
        output.WriteRawTag(18);
        output.WriteString(Reason);
      }
      if (tableStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TableStatus);
      }
      if (roomStatus_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RoomStatus);
      }
      if (playingStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PlayingStatus);
      }
      if (roomInfo_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RoomInfo);
      }
      if (HasRoomType) {
        output.WriteRawTag(56);
        output.WriteEnum((int) RoomType);
      }
      if (sngroomInfo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(SngroomInfo);
      }
      if (mttroomInfo_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(MttroomInfo);
      }
      if (HasRoomid) {
        output.WriteRawTag(80);
        output.WriteInt32(Roomid);
      }
      if (HasRoomMode) {
        output.WriteRawTag(88);
        output.WriteEnum((int) RoomMode);
      }
      if (pineroomInfo_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(PineroomInfo);
      }
      if (pineRoomStatus_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(PineRoomStatus);
      }
      roomList_.WriteTo(ref output, _repeated_roomList_codec);
      if (HasType) {
        output.WriteRawTag(120);
        output.WriteInt32(Type);
      }
      if (spinupInfo_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(SpinupInfo);
      }
      if (guessHandInfo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(GuessHandInfo);
      }
      if (stormInfo_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(StormInfo);
      }
      if (waitingGameStartInfo_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(WaitingGameStartInfo);
      }
      if (callgameInfo_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(CallgameInfo);
      }
      if (userVpip_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(UserVpip);
      }
      if (captchaInfo_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(CaptchaInfo);
      }
      if (HasUserLeagueid) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(UserLeagueid);
      }
      if (HasUserSuperLeagueid) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(UserSuperLeagueid);
      }
      if (pusoyRoomInfo_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(PusoyRoomInfo);
      }
      if (pusoyRoomStatus_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(PusoyRoomStatus);
      }
      if (tpRoomInfo_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(TpRoomInfo);
      }
      if (tpTableStatus_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(TpTableStatus);
      }
      if (luckyDrawConfig_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(LuckyDrawConfig);
      }
      if (colorRoomInfo_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(ColorRoomInfo);
      }
      if (colorRoomStatus_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(ColorRoomStatus);
      }
      if (tongitsRoomInfo_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(TongitsRoomInfo);
      }
      if (tongitsRoomStatus_ != null) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(TongitsRoomStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (tableStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TableStatus);
      }
      if (roomStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomStatus);
      }
      if (playingStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayingStatus);
      }
      if (roomInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomInfo);
      }
      if (HasRoomType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomType);
      }
      if (sngroomInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SngroomInfo);
      }
      if (mttroomInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MttroomInfo);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasRoomMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomMode);
      }
      if (pineroomInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PineroomInfo);
      }
      if (pineRoomStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PineRoomStatus);
      }
      size += roomList_.CalculateSize(_repeated_roomList_codec);
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (spinupInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SpinupInfo);
      }
      if (guessHandInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GuessHandInfo);
      }
      if (stormInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StormInfo);
      }
      if (waitingGameStartInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(WaitingGameStartInfo);
      }
      if (callgameInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CallgameInfo);
      }
      if (userVpip_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UserVpip);
      }
      if (captchaInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CaptchaInfo);
      }
      if (HasUserLeagueid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UserLeagueid);
      }
      if (HasUserSuperLeagueid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UserSuperLeagueid);
      }
      if (pusoyRoomInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PusoyRoomInfo);
      }
      if (pusoyRoomStatus_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PusoyRoomStatus);
      }
      if (tpRoomInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TpRoomInfo);
      }
      if (tpTableStatus_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TpTableStatus);
      }
      if (luckyDrawConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LuckyDrawConfig);
      }
      if (colorRoomInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ColorRoomInfo);
      }
      if (colorRoomStatus_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ColorRoomStatus);
      }
      if (tongitsRoomInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TongitsRoomInfo);
      }
      if (tongitsRoomStatus_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TongitsRoomStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EnterRoomRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.tableStatus_ != null) {
        if (tableStatus_ == null) {
          TableStatus = new global::Texas.Protocol.TableStatus();
        }
        TableStatus.MergeFrom(other.TableStatus);
      }
      if (other.roomStatus_ != null) {
        if (roomStatus_ == null) {
          RoomStatus = new global::Texas.Protocol.RoomStatus();
        }
        RoomStatus.MergeFrom(other.RoomStatus);
      }
      if (other.playingStatus_ != null) {
        if (playingStatus_ == null) {
          PlayingStatus = new global::Texas.Protocol.PlayingStatus();
        }
        PlayingStatus.MergeFrom(other.PlayingStatus);
      }
      if (other.roomInfo_ != null) {
        if (roomInfo_ == null) {
          RoomInfo = new global::Texas.Protocol.RoomInfo();
        }
        RoomInfo.MergeFrom(other.RoomInfo);
      }
      if (other.HasRoomType) {
        RoomType = other.RoomType;
      }
      if (other.sngroomInfo_ != null) {
        if (sngroomInfo_ == null) {
          SngroomInfo = new global::Texas.Protocol.SngRoomInfo();
        }
        SngroomInfo.MergeFrom(other.SngroomInfo);
      }
      if (other.mttroomInfo_ != null) {
        if (mttroomInfo_ == null) {
          MttroomInfo = new global::Texas.Protocol.MttRoomInfo();
        }
        MttroomInfo.MergeFrom(other.MttroomInfo);
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasRoomMode) {
        RoomMode = other.RoomMode;
      }
      if (other.pineroomInfo_ != null) {
        if (pineroomInfo_ == null) {
          PineroomInfo = new global::Texas.Protocol.PineRoomInfo();
        }
        PineroomInfo.MergeFrom(other.PineroomInfo);
      }
      if (other.pineRoomStatus_ != null) {
        if (pineRoomStatus_ == null) {
          PineRoomStatus = new global::Texas.Protocol.PineRoomStatus();
        }
        PineRoomStatus.MergeFrom(other.PineRoomStatus);
      }
      roomList_.Add(other.roomList_);
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.spinupInfo_ != null) {
        if (spinupInfo_ == null) {
          SpinupInfo = new global::Texas.Protocol.SpinUpDrawLotteryInfo();
        }
        SpinupInfo.MergeFrom(other.SpinupInfo);
      }
      if (other.guessHandInfo_ != null) {
        if (guessHandInfo_ == null) {
          GuessHandInfo = new global::Texas.Protocol.GuessHandSubInfo();
        }
        GuessHandInfo.MergeFrom(other.GuessHandInfo);
      }
      if (other.stormInfo_ != null) {
        if (stormInfo_ == null) {
          StormInfo = new global::Texas.Protocol.PPchipsStormInfo();
        }
        StormInfo.MergeFrom(other.StormInfo);
      }
      if (other.waitingGameStartInfo_ != null) {
        if (waitingGameStartInfo_ == null) {
          WaitingGameStartInfo = new global::Texas.Protocol.WaitingGameStartInfo();
        }
        WaitingGameStartInfo.MergeFrom(other.WaitingGameStartInfo);
      }
      if (other.callgameInfo_ != null) {
        if (callgameInfo_ == null) {
          CallgameInfo = new global::Texas.Protocol.CallGameInfo();
        }
        CallgameInfo.MergeFrom(other.CallgameInfo);
      }
      if (other.userVpip_ != null) {
        if (userVpip_ == null) {
          UserVpip = new global::Texas.Protocol.UserVpip();
        }
        UserVpip.MergeFrom(other.UserVpip);
      }
      if (other.captchaInfo_ != null) {
        if (captchaInfo_ == null) {
          CaptchaInfo = new global::Texas.Protocol.ShowCaptchaRSP();
        }
        CaptchaInfo.MergeFrom(other.CaptchaInfo);
      }
      if (other.HasUserLeagueid) {
        UserLeagueid = other.UserLeagueid;
      }
      if (other.HasUserSuperLeagueid) {
        UserSuperLeagueid = other.UserSuperLeagueid;
      }
      if (other.pusoyRoomInfo_ != null) {
        if (pusoyRoomInfo_ == null) {
          PusoyRoomInfo = new global::Texas.Protocol.PusoyRoomInfo();
        }
        PusoyRoomInfo.MergeFrom(other.PusoyRoomInfo);
      }
      if (other.pusoyRoomStatus_ != null) {
        if (pusoyRoomStatus_ == null) {
          PusoyRoomStatus = new global::Texas.Protocol.PusoyRoomStatus();
        }
        PusoyRoomStatus.MergeFrom(other.PusoyRoomStatus);
      }
      if (other.tpRoomInfo_ != null) {
        if (tpRoomInfo_ == null) {
          TpRoomInfo = new global::Texas.Protocol.TpRoomInfo();
        }
        TpRoomInfo.MergeFrom(other.TpRoomInfo);
      }
      if (other.tpTableStatus_ != null) {
        if (tpTableStatus_ == null) {
          TpTableStatus = new global::Texas.Protocol.TpTableStatus();
        }
        TpTableStatus.MergeFrom(other.TpTableStatus);
      }
      if (other.luckyDrawConfig_ != null) {
        if (luckyDrawConfig_ == null) {
          LuckyDrawConfig = new global::Texas.Protocol.LuckyDrawConfig();
        }
        LuckyDrawConfig.MergeFrom(other.LuckyDrawConfig);
      }
      if (other.colorRoomInfo_ != null) {
        if (colorRoomInfo_ == null) {
          ColorRoomInfo = new global::Texas.Protocol.ColorRoomInfo();
        }
        ColorRoomInfo.MergeFrom(other.ColorRoomInfo);
      }
      if (other.colorRoomStatus_ != null) {
        if (colorRoomStatus_ == null) {
          ColorRoomStatus = new global::Texas.Protocol.ColorRoomStatus();
        }
        ColorRoomStatus.MergeFrom(other.ColorRoomStatus);
      }
      if (other.tongitsRoomInfo_ != null) {
        if (tongitsRoomInfo_ == null) {
          TongitsRoomInfo = new global::Texas.Protocol.TongitsRoomInfo();
        }
        TongitsRoomInfo.MergeFrom(other.TongitsRoomInfo);
      }
      if (other.tongitsRoomStatus_ != null) {
        if (tongitsRoomStatus_ == null) {
          TongitsRoomStatus = new global::Texas.Protocol.TongitsRoomStatus();
        }
        TongitsRoomStatus.MergeFrom(other.TongitsRoomStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Reason = input.ReadString();
            break;
          }
          case 26: {
            if (tableStatus_ == null) {
              TableStatus = new global::Texas.Protocol.TableStatus();
            }
            input.ReadMessage(TableStatus);
            break;
          }
          case 34: {
            if (roomStatus_ == null) {
              RoomStatus = new global::Texas.Protocol.RoomStatus();
            }
            input.ReadMessage(RoomStatus);
            break;
          }
          case 42: {
            if (playingStatus_ == null) {
              PlayingStatus = new global::Texas.Protocol.PlayingStatus();
            }
            input.ReadMessage(PlayingStatus);
            break;
          }
          case 50: {
            if (roomInfo_ == null) {
              RoomInfo = new global::Texas.Protocol.RoomInfo();
            }
            input.ReadMessage(RoomInfo);
            break;
          }
          case 56: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 66: {
            if (sngroomInfo_ == null) {
              SngroomInfo = new global::Texas.Protocol.SngRoomInfo();
            }
            input.ReadMessage(SngroomInfo);
            break;
          }
          case 74: {
            if (mttroomInfo_ == null) {
              MttroomInfo = new global::Texas.Protocol.MttRoomInfo();
            }
            input.ReadMessage(MttroomInfo);
            break;
          }
          case 80: {
            Roomid = input.ReadInt32();
            break;
          }
          case 88: {
            RoomMode = (global::Texas.Protocol.RoomMode) input.ReadEnum();
            break;
          }
          case 98: {
            if (pineroomInfo_ == null) {
              PineroomInfo = new global::Texas.Protocol.PineRoomInfo();
            }
            input.ReadMessage(PineroomInfo);
            break;
          }
          case 106: {
            if (pineRoomStatus_ == null) {
              PineRoomStatus = new global::Texas.Protocol.PineRoomStatus();
            }
            input.ReadMessage(PineRoomStatus);
            break;
          }
          case 114: {
            roomList_.AddEntriesFrom(input, _repeated_roomList_codec);
            break;
          }
          case 120: {
            Type = input.ReadInt32();
            break;
          }
          case 130: {
            if (spinupInfo_ == null) {
              SpinupInfo = new global::Texas.Protocol.SpinUpDrawLotteryInfo();
            }
            input.ReadMessage(SpinupInfo);
            break;
          }
          case 138: {
            if (guessHandInfo_ == null) {
              GuessHandInfo = new global::Texas.Protocol.GuessHandSubInfo();
            }
            input.ReadMessage(GuessHandInfo);
            break;
          }
          case 146: {
            if (stormInfo_ == null) {
              StormInfo = new global::Texas.Protocol.PPchipsStormInfo();
            }
            input.ReadMessage(StormInfo);
            break;
          }
          case 154: {
            if (waitingGameStartInfo_ == null) {
              WaitingGameStartInfo = new global::Texas.Protocol.WaitingGameStartInfo();
            }
            input.ReadMessage(WaitingGameStartInfo);
            break;
          }
          case 162: {
            if (callgameInfo_ == null) {
              CallgameInfo = new global::Texas.Protocol.CallGameInfo();
            }
            input.ReadMessage(CallgameInfo);
            break;
          }
          case 170: {
            if (userVpip_ == null) {
              UserVpip = new global::Texas.Protocol.UserVpip();
            }
            input.ReadMessage(UserVpip);
            break;
          }
          case 178: {
            if (captchaInfo_ == null) {
              CaptchaInfo = new global::Texas.Protocol.ShowCaptchaRSP();
            }
            input.ReadMessage(CaptchaInfo);
            break;
          }
          case 184: {
            UserLeagueid = input.ReadInt32();
            break;
          }
          case 192: {
            UserSuperLeagueid = input.ReadInt32();
            break;
          }
          case 202: {
            if (pusoyRoomInfo_ == null) {
              PusoyRoomInfo = new global::Texas.Protocol.PusoyRoomInfo();
            }
            input.ReadMessage(PusoyRoomInfo);
            break;
          }
          case 210: {
            if (pusoyRoomStatus_ == null) {
              PusoyRoomStatus = new global::Texas.Protocol.PusoyRoomStatus();
            }
            input.ReadMessage(PusoyRoomStatus);
            break;
          }
          case 218: {
            if (tpRoomInfo_ == null) {
              TpRoomInfo = new global::Texas.Protocol.TpRoomInfo();
            }
            input.ReadMessage(TpRoomInfo);
            break;
          }
          case 226: {
            if (tpTableStatus_ == null) {
              TpTableStatus = new global::Texas.Protocol.TpTableStatus();
            }
            input.ReadMessage(TpTableStatus);
            break;
          }
          case 234: {
            if (luckyDrawConfig_ == null) {
              LuckyDrawConfig = new global::Texas.Protocol.LuckyDrawConfig();
            }
            input.ReadMessage(LuckyDrawConfig);
            break;
          }
          case 242: {
            if (colorRoomInfo_ == null) {
              ColorRoomInfo = new global::Texas.Protocol.ColorRoomInfo();
            }
            input.ReadMessage(ColorRoomInfo);
            break;
          }
          case 250: {
            if (colorRoomStatus_ == null) {
              ColorRoomStatus = new global::Texas.Protocol.ColorRoomStatus();
            }
            input.ReadMessage(ColorRoomStatus);
            break;
          }
          case 258: {
            if (tongitsRoomInfo_ == null) {
              TongitsRoomInfo = new global::Texas.Protocol.TongitsRoomInfo();
            }
            input.ReadMessage(TongitsRoomInfo);
            break;
          }
          case 266: {
            if (tongitsRoomStatus_ == null) {
              TongitsRoomStatus = new global::Texas.Protocol.TongitsRoomStatus();
            }
            input.ReadMessage(TongitsRoomStatus);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Reason = input.ReadString();
            break;
          }
          case 26: {
            if (tableStatus_ == null) {
              TableStatus = new global::Texas.Protocol.TableStatus();
            }
            input.ReadMessage(TableStatus);
            break;
          }
          case 34: {
            if (roomStatus_ == null) {
              RoomStatus = new global::Texas.Protocol.RoomStatus();
            }
            input.ReadMessage(RoomStatus);
            break;
          }
          case 42: {
            if (playingStatus_ == null) {
              PlayingStatus = new global::Texas.Protocol.PlayingStatus();
            }
            input.ReadMessage(PlayingStatus);
            break;
          }
          case 50: {
            if (roomInfo_ == null) {
              RoomInfo = new global::Texas.Protocol.RoomInfo();
            }
            input.ReadMessage(RoomInfo);
            break;
          }
          case 56: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 66: {
            if (sngroomInfo_ == null) {
              SngroomInfo = new global::Texas.Protocol.SngRoomInfo();
            }
            input.ReadMessage(SngroomInfo);
            break;
          }
          case 74: {
            if (mttroomInfo_ == null) {
              MttroomInfo = new global::Texas.Protocol.MttRoomInfo();
            }
            input.ReadMessage(MttroomInfo);
            break;
          }
          case 80: {
            Roomid = input.ReadInt32();
            break;
          }
          case 88: {
            RoomMode = (global::Texas.Protocol.RoomMode) input.ReadEnum();
            break;
          }
          case 98: {
            if (pineroomInfo_ == null) {
              PineroomInfo = new global::Texas.Protocol.PineRoomInfo();
            }
            input.ReadMessage(PineroomInfo);
            break;
          }
          case 106: {
            if (pineRoomStatus_ == null) {
              PineRoomStatus = new global::Texas.Protocol.PineRoomStatus();
            }
            input.ReadMessage(PineRoomStatus);
            break;
          }
          case 114: {
            roomList_.AddEntriesFrom(ref input, _repeated_roomList_codec);
            break;
          }
          case 120: {
            Type = input.ReadInt32();
            break;
          }
          case 130: {
            if (spinupInfo_ == null) {
              SpinupInfo = new global::Texas.Protocol.SpinUpDrawLotteryInfo();
            }
            input.ReadMessage(SpinupInfo);
            break;
          }
          case 138: {
            if (guessHandInfo_ == null) {
              GuessHandInfo = new global::Texas.Protocol.GuessHandSubInfo();
            }
            input.ReadMessage(GuessHandInfo);
            break;
          }
          case 146: {
            if (stormInfo_ == null) {
              StormInfo = new global::Texas.Protocol.PPchipsStormInfo();
            }
            input.ReadMessage(StormInfo);
            break;
          }
          case 154: {
            if (waitingGameStartInfo_ == null) {
              WaitingGameStartInfo = new global::Texas.Protocol.WaitingGameStartInfo();
            }
            input.ReadMessage(WaitingGameStartInfo);
            break;
          }
          case 162: {
            if (callgameInfo_ == null) {
              CallgameInfo = new global::Texas.Protocol.CallGameInfo();
            }
            input.ReadMessage(CallgameInfo);
            break;
          }
          case 170: {
            if (userVpip_ == null) {
              UserVpip = new global::Texas.Protocol.UserVpip();
            }
            input.ReadMessage(UserVpip);
            break;
          }
          case 178: {
            if (captchaInfo_ == null) {
              CaptchaInfo = new global::Texas.Protocol.ShowCaptchaRSP();
            }
            input.ReadMessage(CaptchaInfo);
            break;
          }
          case 184: {
            UserLeagueid = input.ReadInt32();
            break;
          }
          case 192: {
            UserSuperLeagueid = input.ReadInt32();
            break;
          }
          case 202: {
            if (pusoyRoomInfo_ == null) {
              PusoyRoomInfo = new global::Texas.Protocol.PusoyRoomInfo();
            }
            input.ReadMessage(PusoyRoomInfo);
            break;
          }
          case 210: {
            if (pusoyRoomStatus_ == null) {
              PusoyRoomStatus = new global::Texas.Protocol.PusoyRoomStatus();
            }
            input.ReadMessage(PusoyRoomStatus);
            break;
          }
          case 218: {
            if (tpRoomInfo_ == null) {
              TpRoomInfo = new global::Texas.Protocol.TpRoomInfo();
            }
            input.ReadMessage(TpRoomInfo);
            break;
          }
          case 226: {
            if (tpTableStatus_ == null) {
              TpTableStatus = new global::Texas.Protocol.TpTableStatus();
            }
            input.ReadMessage(TpTableStatus);
            break;
          }
          case 234: {
            if (luckyDrawConfig_ == null) {
              LuckyDrawConfig = new global::Texas.Protocol.LuckyDrawConfig();
            }
            input.ReadMessage(LuckyDrawConfig);
            break;
          }
          case 242: {
            if (colorRoomInfo_ == null) {
              ColorRoomInfo = new global::Texas.Protocol.ColorRoomInfo();
            }
            input.ReadMessage(ColorRoomInfo);
            break;
          }
          case 250: {
            if (colorRoomStatus_ == null) {
              ColorRoomStatus = new global::Texas.Protocol.ColorRoomStatus();
            }
            input.ReadMessage(ColorRoomStatus);
            break;
          }
          case 258: {
            if (tongitsRoomInfo_ == null) {
              TongitsRoomInfo = new global::Texas.Protocol.TongitsRoomInfo();
            }
            input.ReadMessage(TongitsRoomInfo);
            break;
          }
          case 266: {
            if (tongitsRoomStatus_ == null) {
              TongitsRoomStatus = new global::Texas.Protocol.TongitsRoomStatus();
            }
            input.ReadMessage(TongitsRoomStatus);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DiscardCardREQ : pb::IMessage<DiscardCardREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DiscardCardREQ> _parser = new pb::MessageParser<DiscardCardREQ>(() => new DiscardCardREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DiscardCardREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb6Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiscardCardREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiscardCardREQ(DiscardCardREQ other) : this() {
      _hasBits0 = other._hasBits0;
      discardCard_ = other.discardCard_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiscardCardREQ Clone() {
      return new DiscardCardREQ(this);
    }

    /// <summary>Field number for the "discard_card" field.</summary>
    public const int DiscardCardFieldNumber = 1;
    private readonly static int DiscardCardDefaultValue = 0;

    private int discardCard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DiscardCard {
      get { if ((_hasBits0 & 1) != 0) { return discardCard_; } else { return DiscardCardDefaultValue; } }
      set {
        _hasBits0 |= 1;
        discardCard_ = value;
      }
    }
    /// <summary>Gets whether the "discard_card" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDiscardCard {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "discard_card" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDiscardCard() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DiscardCardREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DiscardCardREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DiscardCard != other.DiscardCard) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDiscardCard) hash ^= DiscardCard.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDiscardCard) {
        output.WriteRawTag(8);
        output.WriteInt32(DiscardCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDiscardCard) {
        output.WriteRawTag(8);
        output.WriteInt32(DiscardCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasDiscardCard) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DiscardCard);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DiscardCardREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasDiscardCard) {
        DiscardCard = other.DiscardCard;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DiscardCard = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DiscardCard = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DiscardCardRSP : pb::IMessage<DiscardCardRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DiscardCardRSP> _parser = new pb::MessageParser<DiscardCardRSP>(() => new DiscardCardRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DiscardCardRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb6Reflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiscardCardRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiscardCardRSP(DiscardCardRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      discardCard_ = other.discardCard_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiscardCardRSP Clone() {
      return new DiscardCardRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0:成功    -1：失败
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "discard_card" field.</summary>
    public const int DiscardCardFieldNumber = 2;
    private readonly static int DiscardCardDefaultValue = 0;

    private int discardCard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DiscardCard {
      get { if ((_hasBits0 & 2) != 0) { return discardCard_; } else { return DiscardCardDefaultValue; } }
      set {
        _hasBits0 |= 2;
        discardCard_ = value;
      }
    }
    /// <summary>Gets whether the "discard_card" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDiscardCard {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "discard_card" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDiscardCard() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DiscardCardRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DiscardCardRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (DiscardCard != other.DiscardCard) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasDiscardCard) hash ^= DiscardCard.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasDiscardCard) {
        output.WriteRawTag(16);
        output.WriteInt32(DiscardCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasDiscardCard) {
        output.WriteRawTag(16);
        output.WriteInt32(DiscardCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasDiscardCard) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DiscardCard);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DiscardCardRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasDiscardCard) {
        DiscardCard = other.DiscardCard;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            DiscardCard = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            DiscardCard = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DiscardCardBRC : pb::IMessage<DiscardCardBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DiscardCardBRC> _parser = new pb::MessageParser<DiscardCardBRC>(() => new DiscardCardBRC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DiscardCardBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb6Reflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiscardCardBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiscardCardBRC(DiscardCardBRC other) : this() {
      seatid_ = other.seatid_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiscardCardBRC Clone() {
      return new DiscardCardBRC(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_seatid_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> seatid_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///弃牌玩家座位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Seatid {
      get { return seatid_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DiscardCardBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DiscardCardBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!seatid_.Equals(other.seatid_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= seatid_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      seatid_.WriteTo(output, _repeated_seatid_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      seatid_.WriteTo(ref output, _repeated_seatid_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += seatid_.CalculateSize(_repeated_seatid_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DiscardCardBRC other) {
      if (other == null) {
        return;
      }
      seatid_.Add(other.seatid_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            seatid_.AddEntriesFrom(input, _repeated_seatid_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            seatid_.AddEntriesFrom(ref input, _repeated_seatid_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ShowDiscardBRC : pb::IMessage<ShowDiscardBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShowDiscardBRC> _parser = new pb::MessageParser<ShowDiscardBRC>(() => new ShowDiscardBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ShowDiscardBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb6Reflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShowDiscardBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShowDiscardBRC(ShowDiscardBRC other) : this() {
      _hasBits0 = other._hasBits0;
      leftTime_ = other.leftTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ShowDiscardBRC Clone() {
      return new ShowDiscardBRC(this);
    }

    /// <summary>Field number for the "left_time" field.</summary>
    public const int LeftTimeFieldNumber = 1;
    private readonly static int LeftTimeDefaultValue = 0;

    private int leftTime_;
    /// <summary>
    ///剩余时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LeftTime {
      get { if ((_hasBits0 & 1) != 0) { return leftTime_; } else { return LeftTimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leftTime_ = value;
      }
    }
    /// <summary>Gets whether the "left_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeftTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "left_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeftTime() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ShowDiscardBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ShowDiscardBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LeftTime != other.LeftTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLeftTime) hash ^= LeftTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLeftTime) {
        output.WriteRawTag(8);
        output.WriteInt32(LeftTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLeftTime) {
        output.WriteRawTag(8);
        output.WriteInt32(LeftTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLeftTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeftTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ShowDiscardBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasLeftTime) {
        LeftTime = other.LeftTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LeftTime = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LeftTime = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EndDiscardBRC : pb::IMessage<EndDiscardBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndDiscardBRC> _parser = new pb::MessageParser<EndDiscardBRC>(() => new EndDiscardBRC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EndDiscardBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Pb6Reflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EndDiscardBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EndDiscardBRC(EndDiscardBRC other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EndDiscardBRC Clone() {
      return new EndDiscardBRC(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EndDiscardBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EndDiscardBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EndDiscardBRC other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
