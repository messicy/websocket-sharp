// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: pine.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Texas.Protocol {

  /// <summary>Holder for reflection information generated from pine.proto</summary>
  public static partial class PineReflection {

    #region Descriptor
    /// <summary>File descriptor for pine.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PineReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpwaW5lLnByb3RvGglwYjIucHJvdG8aCmJhc2UucHJvdG8aDnByZV9iYXNl",
            "LnByb3RvGgtwaW5lMS5wcm90byL6DwoMUGluZVJvb21JbmZvEhMKBnJvb21p",
            "ZBgBIAEoBUgAiAEBEhQKB293bmVyaWQYAiABKANIAYgBARITCgZjbHViaWQY",
            "AyABKAVIAogBARIVCghsZWFndWVpZBgEIAEoBUgDiAEBEhUKCHNlYXRfbnVt",
            "GAUgASgFSASIAQESFgoJcm9vbV9uYW1lGAYgASgJSAWIAQESGAoLYWN0aW9u",
            "X3RpbWUYByABKAVIBogBARIXCgpiYXNlX3Njb3JlGAggASgDSAeIAQESGgoN",
            "ZGVmYXVsdF9idXlpbhgJIAEoBUgIiAEBEhYKCW1pbl9idXlpbhgKIAEoA0gJ",
            "iAEBEhgKC2FjdGlvbl90eXBlGAsgASgFSAqIAQESFQoIZmVlcG9pbnQYDCAB",
            "KAVIC4gBARITCgZmZWVjYXAYDSABKAVIDIgBARIWCglnYW1lX3RpbWUYDiAB",
            "KAVIDYgBARIWCglncHNfbGltaXQYDyABKAhIDogBARIVCghpcF9saW1pdBgQ",
            "IAEoCEgPiAEBEh8KEmdwc19kaXN0YW5jZV9saW1pdBgRIAEoBUgQiAEBEhcK",
            "Cm93bmVyX25hbWUYEiABKAlIEYgBARIXCgpvd25lcl9pY29uGBMgASgJSBKI",
            "AQESFgoJY2x1Yl9uYW1lGBQgASgJSBOIAQESFgoJY2x1Yl9pY29uGBUgASgJ",
            "SBSIAQESGQoMY2x1Yl9vd25lcmlkGBYgASgDSBWIAQESFQoIcGxhdGZvcm0Y",
            "FyABKAlIFogBARITCgZyZWdpb24YGCABKAVIF4gBARIWCgltYXhfYnV5aW4Y",
            "GSABKANIGIgBARIhCglyb29tX21vZGUYGiABKA4yCS5Sb29tTW9kZUgZiAEB",
            "EhoKDWNyZWF0ZV9jbHViaWQYGyABKAVIGogBARIhCglnYW1lX21vZGUYHCAB",
            "KA4yCS5HYW1lTW9kZUgbiAEBEhcKCmF1dG9fc3RhcnQYHSABKAVIHIgBARIi",
            "ChVjYXJkX2hvbGRlcl92aXBfbGV2ZWwYHiABKAVIHYgBARITCgZ0ZW1waWQY",
            "HyABKAlIHogBARIZCgxyZWJhdGVfcG9pbnQYICABKANIH4gBARIdChByZWJh",
            "dGVfaGFuZHNfbnVtGCEgASgDSCCIAQESGAoLY2FyZWVyX2RhdGEYIiABKAhI",
            "IYgBARIkChdpc19hdXRvX2RlbGF5X3Jvb21fb3ZlchgjIAEoCEgiiAEBEicK",
            "GmF1dG9fZGVsYXlfcm9vbV9vdmVyX3RpbWVzGCQgASgFSCOIAQESIAoTaXNf",
            "YXV0b19jcmVhdGVfcm9vbRglIAEoCEgkiAEBEhUKCG1vZHVsZWlkGCYgASgD",
            "SCWIAQESGwoOZm9yYmlkZGVuX2NoYXQYJyABKAhIJogBARIeChFuZXdfZGVm",
            "YXVsdF9idXlpbhgoIAEoA0gniAEBEhkKDHBhc3N3ZF9saW1pdBgpIAEoCEgo",
            "iAEBEhMKBnBhc3N3ZBgqIAEoCUgpiAEBEhsKDnN1cGVyX2xlYWd1ZWlkGCsg",
            "ASgFSCqIAQESHgoRc3VwZXJfbGVhZ3VlX3R5cGUYLCABKAVIK4gBARIWCglp",
            "c19iYW5fcGMYLSABKAhILIgBARIaCg1pc19jaGVja19tYWlsGC4gASgISC2I",
            "AQESIAoTZm9yYmlkZGVuX2NoYXRfbW9kZRgvIAEoBUguiAEBQgkKB19yb29t",
            "aWRCCgoIX293bmVyaWRCCQoHX2NsdWJpZEILCglfbGVhZ3VlaWRCCwoJX3Nl",
            "YXRfbnVtQgwKCl9yb29tX25hbWVCDgoMX2FjdGlvbl90aW1lQg0KC19iYXNl",
            "X3Njb3JlQhAKDl9kZWZhdWx0X2J1eWluQgwKCl9taW5fYnV5aW5CDgoMX2Fj",
            "dGlvbl90eXBlQgsKCV9mZWVwb2ludEIJCgdfZmVlY2FwQgwKCl9nYW1lX3Rp",
            "bWVCDAoKX2dwc19saW1pdEILCglfaXBfbGltaXRCFQoTX2dwc19kaXN0YW5j",
            "ZV9saW1pdEINCgtfb3duZXJfbmFtZUINCgtfb3duZXJfaWNvbkIMCgpfY2x1",
            "Yl9uYW1lQgwKCl9jbHViX2ljb25CDwoNX2NsdWJfb3duZXJpZEILCglfcGxh",
            "dGZvcm1CCQoHX3JlZ2lvbkIMCgpfbWF4X2J1eWluQgwKCl9yb29tX21vZGVC",
            "EAoOX2NyZWF0ZV9jbHViaWRCDAoKX2dhbWVfbW9kZUINCgtfYXV0b19zdGFy",
            "dEIYChZfY2FyZF9ob2xkZXJfdmlwX2xldmVsQgkKB190ZW1waWRCDwoNX3Jl",
            "YmF0ZV9wb2ludEITChFfcmViYXRlX2hhbmRzX251bUIOCgxfY2FyZWVyX2Rh",
            "dGFCGgoYX2lzX2F1dG9fZGVsYXlfcm9vbV9vdmVyQh0KG19hdXRvX2RlbGF5",
            "X3Jvb21fb3Zlcl90aW1lc0IWChRfaXNfYXV0b19jcmVhdGVfcm9vbUILCglf",
            "bW9kdWxlaWRCEQoPX2ZvcmJpZGRlbl9jaGF0QhQKEl9uZXdfZGVmYXVsdF9i",
            "dXlpbkIPCg1fcGFzc3dkX2xpbWl0QgkKB19wYXNzd2RCEQoPX3N1cGVyX2xl",
            "YWd1ZWlkQhQKEl9zdXBlcl9sZWFndWVfdHlwZUIMCgpfaXNfYmFuX3BjQhAK",
            "Dl9pc19jaGVja19tYWlsQhYKFF9mb3JiaWRkZW5fY2hhdF9tb2RlIocNChFD",
            "cmVhdGVQaW5lUm9vbVJFURITCgZjbHViaWQYASABKAVIAIgBARIVCghsZWFn",
            "dWVpZBgCIAEoBUgBiAEBEhUKCHNlYXRfbnVtGAMgASgFSAKIAQESFgoJcm9v",
            "bV9uYW1lGAQgASgJSAOIAQESGAoLYWN0aW9uX3RpbWUYBSABKAVIBIgBARIX",
            "CgpiYXNlX3Njb3JlGAYgASgDSAWIAQESGgoNZGVmYXVsdF9idXlpbhgHIAEo",
            "BUgGiAEBEhYKCW1pbl9idXlpbhgIIAEoA0gHiAEBEhgKC2FjdGlvbl90eXBl",
            "GAkgASgFSAiIAQESFQoIZmVlcG9pbnQYCiABKAVICYgBARITCgZmZWVjYXAY",
            "CyABKAVICogBARIWCglnYW1lX3RpbWUYDCABKAVIC4gBARIWCglncHNfbGlt",
            "aXQYDSABKAhIDIgBARIVCghpcF9saW1pdBgOIAEoCEgNiAEBEhUKCHRpbWV6",
            "b25lGA8gASgFSA6IAQESFgoJbWF4X2J1eWluGBAgASgDSA+IAQESIQoJZ2Ft",
            "ZV9tb2RlGBEgASgOMgkuR2FtZU1vZGVIEIgBARIXCgphdXRvX3N0YXJ0GBIg",
            "ASgFSBGIAQESEwoGdGVtcGlkGBMgASgJSBKIAQESGQoMcmViYXRlX3BvaW50",
            "GBQgASgDSBOIAQESHQoQcmViYXRlX2hhbmRzX251bRgVIAEoA0gUiAEBEiQK",
            "F2lzX2F1dG9fZGVsYXlfcm9vbV9vdmVyGBYgASgISBWIAQESJwoaYXV0b19k",
            "ZWxheV9yb29tX292ZXJfdGltZXMYFyABKAVIFogBARIgChNpc19hdXRvX2Ny",
            "ZWF0ZV9yb29tGBggASgISBeIAQESHAoPY3JlYXRvcl91c2VyX2lkGBkgASgD",
            "SBiIAQESFQoIbW9kdWxlaWQYGiABKANIGYgBARIXCgptdWx0aV9vcGlkGBsg",
            "ASgJSBqIAQESFAoHY2FuX3VzZRgcIAEoCEgbiAEBEhsKDmZvcmJpZGRlbl9j",
            "aGF0GB0gASgISByIAQESHgoRbmV3X2RlZmF1bHRfYnV5aW4YHiABKANIHYgB",
            "ARIZCgxwYXNzd2RfbGltaXQYHyABKAhIHogBARIbCg5zdXBlcl9sZWFndWVp",
            "ZBggIAEoBUgfiAEBEh4KEXN1cGVyX2xlYWd1ZV90eXBlGCEgASgFSCCIAQES",
            "GgoNZGVyaXZlX3Jvb21pZBgiIAEoBUghiAEBEhYKCWlzX2Jhbl9wYxgjIAEo",
            "CEgiiAEBEhoKDWlzX2NoZWNrX21haWwYJCABKAhII4gBARIgChNmb3JiaWRk",
            "ZW5fY2hhdF9tb2RlGCUgASgFSCSIAQESEAoIYmFuX2NsdWIYJiADKAUSEwoL",
            "YmFuX2NvdW50cnkYJyADKAlCCQoHX2NsdWJpZEILCglfbGVhZ3VlaWRCCwoJ",
            "X3NlYXRfbnVtQgwKCl9yb29tX25hbWVCDgoMX2FjdGlvbl90aW1lQg0KC19i",
            "YXNlX3Njb3JlQhAKDl9kZWZhdWx0X2J1eWluQgwKCl9taW5fYnV5aW5CDgoM",
            "X2FjdGlvbl90eXBlQgsKCV9mZWVwb2ludEIJCgdfZmVlY2FwQgwKCl9nYW1l",
            "X3RpbWVCDAoKX2dwc19saW1pdEILCglfaXBfbGltaXRCCwoJX3RpbWV6b25l",
            "QgwKCl9tYXhfYnV5aW5CDAoKX2dhbWVfbW9kZUINCgtfYXV0b19zdGFydEIJ",
            "CgdfdGVtcGlkQg8KDV9yZWJhdGVfcG9pbnRCEwoRX3JlYmF0ZV9oYW5kc19u",
            "dW1CGgoYX2lzX2F1dG9fZGVsYXlfcm9vbV9vdmVyQh0KG19hdXRvX2RlbGF5",
            "X3Jvb21fb3Zlcl90aW1lc0IWChRfaXNfYXV0b19jcmVhdGVfcm9vbUISChBf",
            "Y3JlYXRvcl91c2VyX2lkQgsKCV9tb2R1bGVpZEINCgtfbXVsdGlfb3BpZEIK",
            "CghfY2FuX3VzZUIRCg9fZm9yYmlkZGVuX2NoYXRCFAoSX25ld19kZWZhdWx0",
            "X2J1eWluQg8KDV9wYXNzd2RfbGltaXRCEQoPX3N1cGVyX2xlYWd1ZWlkQhQK",
            "El9zdXBlcl9sZWFndWVfdHlwZUIQCg5fZGVyaXZlX3Jvb21pZEIMCgpfaXNf",
            "YmFuX3BjQhAKDl9pc19jaGVja19tYWlsQhYKFF9mb3JiaWRkZW5fY2hhdF9t",
            "b2RlImwKEUNyZWF0ZVBpbmVSb29tUlNQEhEKBGNvZGUYASABKAVIAIgBARIp",
            "Cg1waW5lcm9vbV9pbmZvGAIgASgLMg0uUGluZVJvb21JbmZvSAGIAQFCBwoF",
            "X2NvZGVCEAoOX3BpbmVyb29tX2luZm8iigIKDFBpbmVIYW5kQ2FyZBIMCgRj",
            "YXJkGAEgAygFEhIKBXJvdW5kGAIgASgFSACIAQESFAoHZmFudGFzeRgDIAEo",
            "BUgBiAEBEhAKA3VpZBgEIAEoBUgCiAEBEhMKBnNlYXRpZBgFIAEoBUgDiAEB",
            "EiMKFmFkZF9hY3Rpb250aW1lX2RpYW1vbmQYBiABKAVIBIgBARIdChBhY3Rp",
            "b25fbGVmdF90aW1lGAcgASgFSAWIAQFCCAoGX3JvdW5kQgoKCF9mYW50YXN5",
            "QgYKBF91aWRCCQoHX3NlYXRpZEIZChdfYWRkX2FjdGlvbnRpbWVfZGlhbW9u",
            "ZEITChFfYWN0aW9uX2xlZnRfdGltZSKhAQoPUGluZUhhbmRDYXJkQlJDEiAK",
            "CWhhbmRfY2FyZBgBIAMoCzINLlBpbmVIYW5kQ2FyZBIaCg1hY3Rpb25fc2Vh",
            "dGlkGAIgASgFSACIAQESIwoWYWRkX2FjdGlvbnRpbWVfZGlhbW9uZBgDIAEo",
            "BUgBiAEBQhAKDl9hY3Rpb25fc2VhdGlkQhkKF19hZGRfYWN0aW9udGltZV9k",
            "aWFtb25kIkoKDVBpbmVBY3Rpb25SRVESEQoJaGVhZF9jYXJkGAEgAygFEhMK",
            "C21pZGRsZV9jYXJkGAIgAygFEhEKCXRhaWxfY2FyZBgDIAMoBSJKCghXaWxk",
            "Q2FyZBITCgZvcmlnaW4YASABKAVIAIgBARITCgZiZWNvbWUYAiABKAVIAYgB",
            "AUIJCgdfb3JpZ2luQgkKB19iZWNvbWUi2QMKCFBpbmVDYXJkEhcKCmhlYWRf",
            "c2NvcmUYASABKAVIAIgBARIZCgxtaWRkbGVfc2NvcmUYAiABKAVIAYgBARIX",
            "Cgp0YWlsX3Njb3JlGAMgASgFSAKIAQESEQoJaGVhZF9jYXJkGAQgAygFEhMK",
            "C21pZGRsZV9jYXJkGAUgAygFEhEKCXRhaWxfY2FyZBgGIAMoBRIUCgxhYmFu",
            "ZG9uX2NhcmQYByADKAUSIQoJaGVhZF90eXBlGAggASgOMgkuSGFuZFR5cGVI",
            "A4gBARIjCgttaWRkbGVfdHlwZRgJIAEoDjIJLkhhbmRUeXBlSASIAQESIQoJ",
            "dGFpbF90eXBlGAogASgOMgkuSGFuZFR5cGVIBYgBARIRCgRidXN0GAsgASgI",
            "SAaIAQESEQoJaGFuZF9jYXJkGAwgAygFEhIKBXJvdW5kGA0gASgFSAeIAQES",
            "HAoJd2lsZF9jYXJkGA4gAygLMgkuV2lsZENhcmRCDQoLX2hlYWRfc2NvcmVC",
            "DwoNX21pZGRsZV9zY29yZUINCgtfdGFpbF9zY29yZUIMCgpfaGVhZF90eXBl",
            "Qg4KDF9taWRkbGVfdHlwZUIMCgpfdGFpbF90eXBlQgcKBV9idXN0QggKBl9y",
            "b3VuZCJSCg1QaW5lQWN0aW9uUlNQEhEKBGNvZGUYASABKAVIAIgBARIcCgRj",
            "YXJkGAIgASgLMgkuUGluZUNhcmRIAYgBAUIHCgVfY29kZUIHCgVfY2FyZCKr",
            "AQoNUGluZUFjdGlvbkJSQxIQCgN1aWQYASABKAVIAIgBARITCgZzZWF0aWQY",
            "AiABKAVIAYgBARIcCgRjYXJkGAMgASgLMgkuUGluZUNhcmRIAogBARIRCglo",
            "ZWFkX2NhcmQYBCADKAUSEwoLbWlkZGxlX2NhcmQYBSADKAUSEQoJdGFpbF9j",
            "YXJkGAYgAygFQgYKBF91aWRCCQoHX3NlYXRpZEIHCgVfY2FyZCITChFQaW5l",
            "U3RhcnRSZWFkeVJTUCISChBQaW5lU3RvcFJlYWR5UlNQIg4KDFBpbmVSZWFk",
            "eVJFUSJpCg9QaW5lUmVhZHlTdGF0dXMSEAoDdWlkGAEgASgFSACIAQESEwoG",
            "c2VhdGlkGAIgASgFSAGIAQESEgoFcmVhZHkYAyABKAhIAogBAUIGCgRfdWlk",
            "QgkKB19zZWF0aWRCCAoGX3JlYWR5IjYKDFBpbmVSZWFkeUJSQxImCgxyZWFk",
            "eV9zdGF0dXMYASADKAsyEC5QaW5lUmVhZHlTdGF0dXMisgkKEVBpbmVQbGF5",
            "aW5nU3RhdHVzEhAKA3VpZBgBIAEoBUgAiAEBEhMKBnNlYXRpZBgCIAEoBUgB",
            "iAEBEhwKBGNhcmQYAyABKAsyCS5QaW5lQ2FyZEgCiAEBEhwKD3JlYnV5X2xl",
            "ZnRfdGltZRgEIAEoBUgDiAEBEhYKCXZpcF9sZXZlbBgFIAEoDUgEiAEBEhQK",
            "B2ZhbnRhc3kYBiABKAVIBYgBARIYCgtzaXR0aW5nX291dBgHIAEoCEgGiAEB",
            "Eh0KEGFjdGlvbl9sZWZ0X3RpbWUYCCABKAVIB4gBARIRCgRpY29uGAkgASgJ",
            "SAiIAQESEQoEbmFtZRgKIAEoCUgJiAEBEhIKBWNoaXBzGAsgASgDSAqIAQES",
            "EgoFcmVhZHkYDCABKAhIC4gBARIXCgphYmxlX3JlYWR5GA0gASgISAyIAQES",
            "IQoUYWJsZV9yZWFkeV9sZWZ0X3RpbWUYDiABKAhIDYgBARIjChZhZGRfYWN0",
            "aW9udGltZV9kaWFtb25kGA8gASgFSA6IAQESKgodYWRkX2FjdGlvbnRpbWVf",
            "dmlwX2ZyZWVfdGltZXMYECABKAVID4gBARIuCiFhZGRfYWN0aW9udGltZV9n",
            "aWZ0YmFnX2ZyZWVfdGltZXMYESABKAVIEIgBARInChpsZWF2ZV9yb29tX2Fm",
            "dGVyX3RoaXNfaGFuZBgSIAEoCEgRiAEBEhoKDWlzX2RlbGF5X3RpbWUYEyAB",
            "KAhIEogBARITCgZzdGF0dXMYFCABKAVIE4gBARIeChFpc191c2luZ190aW1l",
            "YmFuaxgVIAEoCEgUiAEBEhMKBmNsdWJpZBgWIAEoBUgViAEBEhYKCWNsdWJf",
            "bmFtZRgXIAEoCUgWiAEBEhIKBWxldmVsGBggASgFSBeIAQESFQoIZnJhbWVf",
            "aWQYGSABKAlIGIgBARIXCgpyb2FkX2NoaXBzGBogASgDSBmIAQESGgoNY2Vy",
            "dGlmaWNhdGlvbhgbIAEoBUgaiAEBQgYKBF91aWRCCQoHX3NlYXRpZEIHCgVf",
            "Y2FyZEISChBfcmVidXlfbGVmdF90aW1lQgwKCl92aXBfbGV2ZWxCCgoIX2Zh",
            "bnRhc3lCDgoMX3NpdHRpbmdfb3V0QhMKEV9hY3Rpb25fbGVmdF90aW1lQgcK",
            "BV9pY29uQgcKBV9uYW1lQggKBl9jaGlwc0IICgZfcmVhZHlCDQoLX2FibGVf",
            "cmVhZHlCFwoVX2FibGVfcmVhZHlfbGVmdF90aW1lQhkKF19hZGRfYWN0aW9u",
            "dGltZV9kaWFtb25kQiAKHl9hZGRfYWN0aW9udGltZV92aXBfZnJlZV90aW1l",
            "c0IkCiJfYWRkX2FjdGlvbnRpbWVfZ2lmdGJhZ19mcmVlX3RpbWVzQh0KG19s",
            "ZWF2ZV9yb29tX2FmdGVyX3RoaXNfaGFuZEIQCg5faXNfZGVsYXlfdGltZUIJ",
            "Cgdfc3RhdHVzQhQKEl9pc191c2luZ190aW1lYmFua0IJCgdfY2x1YmlkQgwK",
            "Cl9jbHViX25hbWVCCAoGX2xldmVsQgsKCV9mcmFtZV9pZEINCgtfcm9hZF9j",
            "aGlwc0IQCg5fY2VydGlmaWNhdGlvbiKTAgoPUGluZVJlc3VsdFNjb3JlEhAK",
            "A3VpZBgBIAEoBUgAiAEBEhMKBnNlYXRpZBgCIAEoBUgBiAEBEhcKCmhlYWRf",
            "c2NvcmUYAyABKAVIAogBARIZCgxtaWRkbGVfc2NvcmUYBCABKAVIA4gBARIX",
            "Cgp0YWlsX3Njb3JlGAUgASgFSASIAQESGQoMYWxsd2luX3Njb3JlGAYgASgF",
            "SAWIAQESEwoGcHJvZml0GAcgASgDSAaIAQFCBgoEX3VpZEIJCgdfc2VhdGlk",
            "Qg0KC19oZWFkX3Njb3JlQg8KDV9taWRkbGVfc2NvcmVCDQoLX3RhaWxfc2Nv",
            "cmVCDwoNX2FsbHdpbl9zY29yZUIJCgdfcHJvZml0IowCChBQaW5lUGxheWVy",
            "UmVzdWx0EhAKA3VpZBgBIAEoBUgAiAEBEhMKBnNlYXRpZBgCIAEoBUgBiAEB",
            "EhwKBGNhcmQYAyABKAsyCS5QaW5lQ2FyZEgCiAEBEhQKB2ZhbnRhc3kYBCAB",
            "KAVIA4gBARIRCgRuYW1lGAUgASgJSASIAQESEgoFY2hpcHMYBiABKANIBYgB",
            "ARIRCgRpY29uGAcgASgJSAaIAQESHwoFc2NvcmUYCCADKAsyEC5QaW5lUmVz",
            "dWx0U2NvcmVCBgoEX3VpZEIJCgdfc2VhdGlkQgcKBV9jYXJkQgoKCF9mYW50",
            "YXN5QgcKBV9uYW1lQggKBl9jaGlwc0IHCgVfaWNvbiKPAgoOUGluZVJvb21T",
            "dGF0dXMSLwoTcGluZV9wbGF5aW5nX3N0YXR1cxgBIAMoCzISLlBpbmVQbGF5",
            "aW5nU3RhdHVzEhoKDWRlYWxlcl9zZWF0aWQYAiABKAVIAIgBARIoCg1wbGF5",
            "ZXJfcmVzdWx0GAMgAygLMhEuUGluZVBsYXllclJlc3VsdBIYCgthY3Rpb25f",
            "dHlwZRgEIAEoBUgBiAEBEhkKDHBhc3N3ZF9saW1pdBgFIAEoCEgCiAEBEhMK",
            "BnBhc3N3ZBgGIAEoCUgDiAEBQhAKDl9kZWFsZXJfc2VhdGlkQg4KDF9hY3Rp",
            "b25fdHlwZUIPCg1fcGFzc3dkX2xpbWl0QgkKB19wYXNzd2QiOQoNUGluZVJl",
            "c3VsdEJSQxIoCg1wbGF5ZXJfcmVzdWx0GAEgAygLMhEuUGluZVBsYXllclJl",
            "c3VsdCIPCg1QaW5lR2FtZUlkUkVRIj4KDVBpbmVHYW1lSWRSU1ASDwoHZ2Ft",
            "ZV9pZBgBIAMoCRISCgV0b3RhbBgCIAEoBUgAiAEBQggKBl90b3RhbCIkChFQ",
            "aW5lR2FtZVJlY29yZFJFURIPCgdnYW1lX2lkGAEgAygJIooBCg5QaW5lR2Ft",
            "ZVJlY29yZBIoCg1wbGF5ZXJfcmVzdWx0GAEgAygLMhEuUGluZVBsYXllclJl",
            "c3VsdBIaCg1kZWFsZXJfc2VhdGlkGAIgASgFSACIAQESFAoHZ2FtZV9pZBgD",
            "IAEoCUgBiAEBQhAKDl9kZWFsZXJfc2VhdGlkQgoKCF9nYW1lX2lkIjkKEVBp",
            "bmVHYW1lUmVjb3JkUlNQEiQKC2dhbWVfcmVjb3JkGAEgAygLMg8uUGluZUdh",
            "bWVSZWNvcmQirwEKEVBpbmVHYW1lU3RhcnRJbmZvEhAKA3VpZBgBIAEoBUgA",
            "iAEBEhMKBnNlYXRpZBgCIAEoBUgBiAEBEhIKBWNoaXBzGAMgASgDSAKIAQES",
            "FAoHZmFudGFzeRgEIAEoBUgDiAEBEhQKB3BsYXlpbmcYBSABKAhIBIgBAUIG",
            "CgRfdWlkQgkKB19zZWF0aWRCCAoGX2NoaXBzQgoKCF9mYW50YXN5QgoKCF9w",
            "bGF5aW5nItgBChBQaW5lR2FtZVN0YXJ0QlJDEhoKDWRlYWxlcl9zZWF0aWQY",
            "ASABKAVIAIgBARIWCglsZWZ0X3RpbWUYAiABKAVIAYgBARImCgpzdGFydF9p",
            "bmZvGAMgAygLMhIuUGluZUdhbWVTdGFydEluZm8SGAoLYWN0aW9uX3R5cGUY",
            "BCABKAVIAogBARITCgZnYW1laWQYBSABKAlIA4gBAUIQCg5fZGVhbGVyX3Nl",
            "YXRpZEIMCgpfbGVmdF90aW1lQg4KDF9hY3Rpb25fdHlwZUIJCgdfZ2FtZWlk",
            "IhcKFVBpbmVUYWJsZUNvdW50ZG93bkJSQyISChBQaW5lTmVlZEd1aWRlUkVR",
            "Ii4KEFBpbmVOZWVkR3VpZGVSU1ASEQoEY29kZRgBIAEoBUgAiAEBQgcKBV9j",
            "b2RlIl4KDlBpbmVTaXREb3duQlJDEjQKE3BpbmVfcGxheWluZ19zdGF0dXMY",
            "ASABKAsyEi5QaW5lUGxheWluZ1N0YXR1c0gAiAEBQhYKFF9waW5lX3BsYXlp",
            "bmdfc3RhdHVzIkQKEVBpbmVSb29tU3RhdHVzQlJDEi8KE3BpbmVfcGxheWlu",
            "Z19zdGF0dXMYASADKAsyEi5QaW5lUGxheWluZ1N0YXR1cyIsChBQaW5lTGVh",
            "dmVSb29tQlJDEhAKA3VpZBgBIAEoA0gAiAEBQgYKBF91aWQiSgoQUGluZUxl",
            "YXZlUm9vbVJTUBIRCgRjb2RlGAEgASgFSACIAQESEQoEZmxhZxgCIAEoBUgB",
            "iAEBQgcKBV9jb2RlQgcKBV9mbGFnIrgBChRQaW5lQWRkQWN0aW9uVGltZUJS",
            "QxIRCgRjb2RlGAEgASgFSACIAQESEwoGc2VhdGlkGAIgASgFSAGIAQESFQoI",
            "dGltZWxlZnQYAyABKAVIAogBARIWCgluZXh0X2Nvc3QYBCABKAVIA4gBARIR",
            "CgR0eXBlGAUgASgFSASIAQFCBwoFX2NvZGVCCQoHX3NlYXRpZEILCglfdGlt",
            "ZWxlZnRCDAoKX25leHRfY29zdEIHCgVfdHlwZSI2ChRQaW5lRXhjaGFuZ2VD",
            "aGlwc1JTUBITCgZyZXN1bHQYASABKAVIAIgBAUIJCgdfcmVzdWx0KjkKBVRy",
            "YWNrEg4KClRSQUNLX0hFQUQQABIQCgxUUkFDS19NSURETEUQARIOCgpUUkFD",
            "S19UQUlMEAJCGloHL3BicHBnb6oCDlRleGFzLlByb3RvY29sUANiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Texas.Protocol.Pb2Reflection.Descriptor, global::Texas.Protocol.BaseReflection.Descriptor, global::Texas.Protocol.PreBaseReflection.Descriptor, global::Texas.Protocol.Pine1Reflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Texas.Protocol.Track), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineRoomInfo), global::Texas.Protocol.PineRoomInfo.Parser, new[]{ "Roomid", "Ownerid", "Clubid", "Leagueid", "SeatNum", "RoomName", "ActionTime", "BaseScore", "DefaultBuyin", "MinBuyin", "ActionType", "Feepoint", "Feecap", "GameTime", "GpsLimit", "IpLimit", "GpsDistanceLimit", "OwnerName", "OwnerIcon", "ClubName", "ClubIcon", "ClubOwnerid", "Platform", "Region", "MaxBuyin", "RoomMode", "CreateClubid", "GameMode", "AutoStart", "CardHolderVipLevel", "Tempid", "RebatePoint", "RebateHandsNum", "CareerData", "IsAutoDelayRoomOver", "AutoDelayRoomOverTimes", "IsAutoCreateRoom", "Moduleid", "ForbiddenChat", "NewDefaultBuyin", "PasswdLimit", "Passwd", "SuperLeagueid", "SuperLeagueType", "IsBanPc", "IsCheckMail", "ForbiddenChatMode" }, new[]{ "Roomid", "Ownerid", "Clubid", "Leagueid", "SeatNum", "RoomName", "ActionTime", "BaseScore", "DefaultBuyin", "MinBuyin", "ActionType", "Feepoint", "Feecap", "GameTime", "GpsLimit", "IpLimit", "GpsDistanceLimit", "OwnerName", "OwnerIcon", "ClubName", "ClubIcon", "ClubOwnerid", "Platform", "Region", "MaxBuyin", "RoomMode", "CreateClubid", "GameMode", "AutoStart", "CardHolderVipLevel", "Tempid", "RebatePoint", "RebateHandsNum", "CareerData", "IsAutoDelayRoomOver", "AutoDelayRoomOverTimes", "IsAutoCreateRoom", "Moduleid", "ForbiddenChat", "NewDefaultBuyin", "PasswdLimit", "Passwd", "SuperLeagueid", "SuperLeagueType", "IsBanPc", "IsCheckMail", "ForbiddenChatMode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.CreatePineRoomREQ), global::Texas.Protocol.CreatePineRoomREQ.Parser, new[]{ "Clubid", "Leagueid", "SeatNum", "RoomName", "ActionTime", "BaseScore", "DefaultBuyin", "MinBuyin", "ActionType", "Feepoint", "Feecap", "GameTime", "GpsLimit", "IpLimit", "Timezone", "MaxBuyin", "GameMode", "AutoStart", "Tempid", "RebatePoint", "RebateHandsNum", "IsAutoDelayRoomOver", "AutoDelayRoomOverTimes", "IsAutoCreateRoom", "CreatorUserId", "Moduleid", "MultiOpid", "CanUse", "ForbiddenChat", "NewDefaultBuyin", "PasswdLimit", "SuperLeagueid", "SuperLeagueType", "DeriveRoomid", "IsBanPc", "IsCheckMail", "ForbiddenChatMode", "BanClub", "BanCountry" }, new[]{ "Clubid", "Leagueid", "SeatNum", "RoomName", "ActionTime", "BaseScore", "DefaultBuyin", "MinBuyin", "ActionType", "Feepoint", "Feecap", "GameTime", "GpsLimit", "IpLimit", "Timezone", "MaxBuyin", "GameMode", "AutoStart", "Tempid", "RebatePoint", "RebateHandsNum", "IsAutoDelayRoomOver", "AutoDelayRoomOverTimes", "IsAutoCreateRoom", "CreatorUserId", "Moduleid", "MultiOpid", "CanUse", "ForbiddenChat", "NewDefaultBuyin", "PasswdLimit", "SuperLeagueid", "SuperLeagueType", "DeriveRoomid", "IsBanPc", "IsCheckMail", "ForbiddenChatMode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.CreatePineRoomRSP), global::Texas.Protocol.CreatePineRoomRSP.Parser, new[]{ "Code", "PineroomInfo" }, new[]{ "Code", "PineroomInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineHandCard), global::Texas.Protocol.PineHandCard.Parser, new[]{ "Card", "Round", "Fantasy", "Uid", "Seatid", "AddActiontimeDiamond", "ActionLeftTime" }, new[]{ "Round", "Fantasy", "Uid", "Seatid", "AddActiontimeDiamond", "ActionLeftTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineHandCardBRC), global::Texas.Protocol.PineHandCardBRC.Parser, new[]{ "HandCard", "ActionSeatid", "AddActiontimeDiamond" }, new[]{ "ActionSeatid", "AddActiontimeDiamond" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineActionREQ), global::Texas.Protocol.PineActionREQ.Parser, new[]{ "HeadCard", "MiddleCard", "TailCard" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.WildCard), global::Texas.Protocol.WildCard.Parser, new[]{ "Origin", "Become" }, new[]{ "Origin", "Become" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineCard), global::Texas.Protocol.PineCard.Parser, new[]{ "HeadScore", "MiddleScore", "TailScore", "HeadCard", "MiddleCard", "TailCard", "AbandonCard", "HeadType", "MiddleType", "TailType", "Bust", "HandCard", "Round", "WildCard" }, new[]{ "HeadScore", "MiddleScore", "TailScore", "HeadType", "MiddleType", "TailType", "Bust", "Round" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineActionRSP), global::Texas.Protocol.PineActionRSP.Parser, new[]{ "Code", "Card" }, new[]{ "Code", "Card" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineActionBRC), global::Texas.Protocol.PineActionBRC.Parser, new[]{ "Uid", "Seatid", "Card", "HeadCard", "MiddleCard", "TailCard" }, new[]{ "Uid", "Seatid", "Card" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineStartReadyRSP), global::Texas.Protocol.PineStartReadyRSP.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineStopReadyRSP), global::Texas.Protocol.PineStopReadyRSP.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineReadyREQ), global::Texas.Protocol.PineReadyREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineReadyStatus), global::Texas.Protocol.PineReadyStatus.Parser, new[]{ "Uid", "Seatid", "Ready" }, new[]{ "Uid", "Seatid", "Ready" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineReadyBRC), global::Texas.Protocol.PineReadyBRC.Parser, new[]{ "ReadyStatus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PinePlayingStatus), global::Texas.Protocol.PinePlayingStatus.Parser, new[]{ "Uid", "Seatid", "Card", "RebuyLeftTime", "VipLevel", "Fantasy", "SittingOut", "ActionLeftTime", "Icon", "Name", "Chips", "Ready", "AbleReady", "AbleReadyLeftTime", "AddActiontimeDiamond", "AddActiontimeVipFreeTimes", "AddActiontimeGiftbagFreeTimes", "LeaveRoomAfterThisHand", "IsDelayTime", "Status", "IsUsingTimebank", "Clubid", "ClubName", "Level", "FrameId", "RoadChips", "Certification" }, new[]{ "Uid", "Seatid", "Card", "RebuyLeftTime", "VipLevel", "Fantasy", "SittingOut", "ActionLeftTime", "Icon", "Name", "Chips", "Ready", "AbleReady", "AbleReadyLeftTime", "AddActiontimeDiamond", "AddActiontimeVipFreeTimes", "AddActiontimeGiftbagFreeTimes", "LeaveRoomAfterThisHand", "IsDelayTime", "Status", "IsUsingTimebank", "Clubid", "ClubName", "Level", "FrameId", "RoadChips", "Certification" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineResultScore), global::Texas.Protocol.PineResultScore.Parser, new[]{ "Uid", "Seatid", "HeadScore", "MiddleScore", "TailScore", "AllwinScore", "Profit" }, new[]{ "Uid", "Seatid", "HeadScore", "MiddleScore", "TailScore", "AllwinScore", "Profit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PinePlayerResult), global::Texas.Protocol.PinePlayerResult.Parser, new[]{ "Uid", "Seatid", "Card", "Fantasy", "Name", "Chips", "Icon", "Score" }, new[]{ "Uid", "Seatid", "Card", "Fantasy", "Name", "Chips", "Icon" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineRoomStatus), global::Texas.Protocol.PineRoomStatus.Parser, new[]{ "PinePlayingStatus", "DealerSeatid", "PlayerResult", "ActionType", "PasswdLimit", "Passwd" }, new[]{ "DealerSeatid", "ActionType", "PasswdLimit", "Passwd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineResultBRC), global::Texas.Protocol.PineResultBRC.Parser, new[]{ "PlayerResult" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineGameIdREQ), global::Texas.Protocol.PineGameIdREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineGameIdRSP), global::Texas.Protocol.PineGameIdRSP.Parser, new[]{ "GameId", "Total" }, new[]{ "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineGameRecordREQ), global::Texas.Protocol.PineGameRecordREQ.Parser, new[]{ "GameId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineGameRecord), global::Texas.Protocol.PineGameRecord.Parser, new[]{ "PlayerResult", "DealerSeatid", "GameId" }, new[]{ "DealerSeatid", "GameId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineGameRecordRSP), global::Texas.Protocol.PineGameRecordRSP.Parser, new[]{ "GameRecord" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineGameStartInfo), global::Texas.Protocol.PineGameStartInfo.Parser, new[]{ "Uid", "Seatid", "Chips", "Fantasy", "Playing" }, new[]{ "Uid", "Seatid", "Chips", "Fantasy", "Playing" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineGameStartBRC), global::Texas.Protocol.PineGameStartBRC.Parser, new[]{ "DealerSeatid", "LeftTime", "StartInfo", "ActionType", "Gameid" }, new[]{ "DealerSeatid", "LeftTime", "ActionType", "Gameid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineTableCountdownBRC), global::Texas.Protocol.PineTableCountdownBRC.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineNeedGuideREQ), global::Texas.Protocol.PineNeedGuideREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineNeedGuideRSP), global::Texas.Protocol.PineNeedGuideRSP.Parser, new[]{ "Code" }, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineSitDownBRC), global::Texas.Protocol.PineSitDownBRC.Parser, new[]{ "PinePlayingStatus" }, new[]{ "PinePlayingStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineRoomStatusBRC), global::Texas.Protocol.PineRoomStatusBRC.Parser, new[]{ "PinePlayingStatus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineLeaveRoomBRC), global::Texas.Protocol.PineLeaveRoomBRC.Parser, new[]{ "Uid" }, new[]{ "Uid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineLeaveRoomRSP), global::Texas.Protocol.PineLeaveRoomRSP.Parser, new[]{ "Code", "Flag" }, new[]{ "Code", "Flag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineAddActionTimeBRC), global::Texas.Protocol.PineAddActionTimeBRC.Parser, new[]{ "Code", "Seatid", "Timeleft", "NextCost", "Type" }, new[]{ "Code", "Seatid", "Timeleft", "NextCost", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PineExchangeChipsRSP), global::Texas.Protocol.PineExchangeChipsRSP.Parser, new[]{ "Result" }, new[]{ "Result" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///大菠萝轨道
  /// </summary>
  public enum Track {
    [pbr::OriginalName("TRACK_HEAD")] Head = 0,
    [pbr::OriginalName("TRACK_MIDDLE")] Middle = 1,
    [pbr::OriginalName("TRACK_TAIL")] Tail = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  ///大菠萝房间信息
  /// </summary>
  public sealed partial class PineRoomInfo : pb::IMessage<PineRoomInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineRoomInfo> _parser = new pb::MessageParser<PineRoomInfo>(() => new PineRoomInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    private int _hasBits1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineRoomInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineRoomInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineRoomInfo(PineRoomInfo other) : this() {
      _hasBits0 = other._hasBits0;
      _hasBits1 = other._hasBits1;
      roomid_ = other.roomid_;
      ownerid_ = other.ownerid_;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      seatNum_ = other.seatNum_;
      roomName_ = other.roomName_;
      actionTime_ = other.actionTime_;
      baseScore_ = other.baseScore_;
      defaultBuyin_ = other.defaultBuyin_;
      minBuyin_ = other.minBuyin_;
      actionType_ = other.actionType_;
      feepoint_ = other.feepoint_;
      feecap_ = other.feecap_;
      gameTime_ = other.gameTime_;
      gpsLimit_ = other.gpsLimit_;
      ipLimit_ = other.ipLimit_;
      gpsDistanceLimit_ = other.gpsDistanceLimit_;
      ownerName_ = other.ownerName_;
      ownerIcon_ = other.ownerIcon_;
      clubName_ = other.clubName_;
      clubIcon_ = other.clubIcon_;
      clubOwnerid_ = other.clubOwnerid_;
      platform_ = other.platform_;
      region_ = other.region_;
      maxBuyin_ = other.maxBuyin_;
      roomMode_ = other.roomMode_;
      createClubid_ = other.createClubid_;
      gameMode_ = other.gameMode_;
      autoStart_ = other.autoStart_;
      cardHolderVipLevel_ = other.cardHolderVipLevel_;
      tempid_ = other.tempid_;
      rebatePoint_ = other.rebatePoint_;
      rebateHandsNum_ = other.rebateHandsNum_;
      careerData_ = other.careerData_;
      isAutoDelayRoomOver_ = other.isAutoDelayRoomOver_;
      autoDelayRoomOverTimes_ = other.autoDelayRoomOverTimes_;
      isAutoCreateRoom_ = other.isAutoCreateRoom_;
      moduleid_ = other.moduleid_;
      forbiddenChat_ = other.forbiddenChat_;
      newDefaultBuyin_ = other.newDefaultBuyin_;
      passwdLimit_ = other.passwdLimit_;
      passwd_ = other.passwd_;
      superLeagueid_ = other.superLeagueid_;
      superLeagueType_ = other.superLeagueType_;
      isBanPc_ = other.isBanPc_;
      isCheckMail_ = other.isCheckMail_;
      forbiddenChatMode_ = other.forbiddenChatMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineRoomInfo Clone() {
      return new PineRoomInfo(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 1) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "ownerid" field.</summary>
    public const int OwneridFieldNumber = 2;
    private readonly static long OwneridDefaultValue = 0L;

    private long ownerid_;
    /// <summary>
    ///房主uid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Ownerid {
      get { if ((_hasBits0 & 2) != 0) { return ownerid_; } else { return OwneridDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ownerid_ = value;
      }
    }
    /// <summary>Gets whether the "ownerid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnerid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ownerid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnerid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 3;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    /// <summary>
    ///俱乐部id，0代表普通房间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 4) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 4;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    /// <summary>
    ///联盟id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 8) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "seat_num" field.</summary>
    public const int SeatNumFieldNumber = 5;
    private readonly static int SeatNumDefaultValue = 0;

    private int seatNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SeatNum {
      get { if ((_hasBits0 & 16) != 0) { return seatNum_; } else { return SeatNumDefaultValue; } }
      set {
        _hasBits0 |= 16;
        seatNum_ = value;
      }
    }
    /// <summary>Gets whether the "seat_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatNum {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "seat_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatNum() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "room_name" field.</summary>
    public const int RoomNameFieldNumber = 6;
    private readonly static string RoomNameDefaultValue = "";

    private string roomName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomName {
      get { return roomName_ ?? RoomNameDefaultValue; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "room_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomName {
      get { return roomName_ != null; }
    }
    /// <summary>Clears the value of the "room_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomName() {
      roomName_ = null;
    }

    /// <summary>Field number for the "action_time" field.</summary>
    public const int ActionTimeFieldNumber = 7;
    private readonly static int ActionTimeDefaultValue = 0;

    private int actionTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActionTime {
      get { if ((_hasBits0 & 32) != 0) { return actionTime_; } else { return ActionTimeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        actionTime_ = value;
      }
    }
    /// <summary>Gets whether the "action_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActionTime {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "action_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActionTime() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "base_score" field.</summary>
    public const int BaseScoreFieldNumber = 8;
    private readonly static long BaseScoreDefaultValue = 0L;

    private long baseScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BaseScore {
      get { if ((_hasBits0 & 64) != 0) { return baseScore_; } else { return BaseScoreDefaultValue; } }
      set {
        _hasBits0 |= 64;
        baseScore_ = value;
      }
    }
    /// <summary>Gets whether the "base_score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBaseScore {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "base_score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBaseScore() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "default_buyin" field.</summary>
    public const int DefaultBuyinFieldNumber = 9;
    private readonly static int DefaultBuyinDefaultValue = 0;

    private int defaultBuyin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DefaultBuyin {
      get { if ((_hasBits0 & 128) != 0) { return defaultBuyin_; } else { return DefaultBuyinDefaultValue; } }
      set {
        _hasBits0 |= 128;
        defaultBuyin_ = value;
      }
    }
    /// <summary>Gets whether the "default_buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDefaultBuyin {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "default_buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDefaultBuyin() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "min_buyin" field.</summary>
    public const int MinBuyinFieldNumber = 10;
    private readonly static long MinBuyinDefaultValue = 0L;

    private long minBuyin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinBuyin {
      get { if ((_hasBits0 & 256) != 0) { return minBuyin_; } else { return MinBuyinDefaultValue; } }
      set {
        _hasBits0 |= 256;
        minBuyin_ = value;
      }
    }
    /// <summary>Gets whether the "min_buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinBuyin {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "min_buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinBuyin() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "action_type" field.</summary>
    public const int ActionTypeFieldNumber = 11;
    private readonly static int ActionTypeDefaultValue = 0;

    private int actionType_;
    /// <summary>
    ///1、同时操作  2、顺序操作
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActionType {
      get { if ((_hasBits0 & 512) != 0) { return actionType_; } else { return ActionTypeDefaultValue; } }
      set {
        _hasBits0 |= 512;
        actionType_ = value;
      }
    }
    /// <summary>Gets whether the "action_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActionType {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "action_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActionType() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "feepoint" field.</summary>
    public const int FeepointFieldNumber = 12;
    private readonly static int FeepointDefaultValue = 0;

    private int feepoint_;
    /// <summary>
    ///fee比例，2代表%2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Feepoint {
      get { if ((_hasBits0 & 1024) != 0) { return feepoint_; } else { return FeepointDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        feepoint_ = value;
      }
    }
    /// <summary>Gets whether the "feepoint" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFeepoint {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "feepoint" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFeepoint() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "feecap" field.</summary>
    public const int FeecapFieldNumber = 13;
    private readonly static int FeecapDefaultValue = 0;

    private int feecap_;
    /// <summary>
    ///fee封頂
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Feecap {
      get { if ((_hasBits0 & 2048) != 0) { return feecap_; } else { return FeecapDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        feecap_ = value;
      }
    }
    /// <summary>Gets whether the "feecap" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFeecap {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "feecap" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFeecap() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "game_time" field.</summary>
    public const int GameTimeFieldNumber = 14;
    private readonly static int GameTimeDefaultValue = 0;

    private int gameTime_;
    /// <summary>
    ///游戏时间,0表示无限制
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameTime {
      get { if ((_hasBits0 & 4096) != 0) { return gameTime_; } else { return GameTimeDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        gameTime_ = value;
      }
    }
    /// <summary>Gets whether the "game_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameTime {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "game_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameTime() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "gps_limit" field.</summary>
    public const int GpsLimitFieldNumber = 15;
    private readonly static bool GpsLimitDefaultValue = false;

    private bool gpsLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GpsLimit {
      get { if ((_hasBits0 & 8192) != 0) { return gpsLimit_; } else { return GpsLimitDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        gpsLimit_ = value;
      }
    }
    /// <summary>Gets whether the "gps_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpsLimit {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "gps_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpsLimit() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "ip_limit" field.</summary>
    public const int IpLimitFieldNumber = 16;
    private readonly static bool IpLimitDefaultValue = false;

    private bool ipLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IpLimit {
      get { if ((_hasBits0 & 16384) != 0) { return ipLimit_; } else { return IpLimitDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        ipLimit_ = value;
      }
    }
    /// <summary>Gets whether the "ip_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIpLimit {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "ip_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIpLimit() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "gps_distance_limit" field.</summary>
    public const int GpsDistanceLimitFieldNumber = 17;
    private readonly static int GpsDistanceLimitDefaultValue = 0;

    private int gpsDistanceLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GpsDistanceLimit {
      get { if ((_hasBits0 & 32768) != 0) { return gpsDistanceLimit_; } else { return GpsDistanceLimitDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        gpsDistanceLimit_ = value;
      }
    }
    /// <summary>Gets whether the "gps_distance_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpsDistanceLimit {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "gps_distance_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpsDistanceLimit() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "owner_name" field.</summary>
    public const int OwnerNameFieldNumber = 18;
    private readonly static string OwnerNameDefaultValue = "";

    private string ownerName_;
    /// <summary>
    ///房主名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerName {
      get { return ownerName_ ?? OwnerNameDefaultValue; }
      set {
        ownerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnerName {
      get { return ownerName_ != null; }
    }
    /// <summary>Clears the value of the "owner_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnerName() {
      ownerName_ = null;
    }

    /// <summary>Field number for the "owner_icon" field.</summary>
    public const int OwnerIconFieldNumber = 19;
    private readonly static string OwnerIconDefaultValue = "";

    private string ownerIcon_;
    /// <summary>
    ///房主头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerIcon {
      get { return ownerIcon_ ?? OwnerIconDefaultValue; }
      set {
        ownerIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner_icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnerIcon {
      get { return ownerIcon_ != null; }
    }
    /// <summary>Clears the value of the "owner_icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnerIcon() {
      ownerIcon_ = null;
    }

    /// <summary>Field number for the "club_name" field.</summary>
    public const int ClubNameFieldNumber = 20;
    private readonly static string ClubNameDefaultValue = "";

    private string clubName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClubName {
      get { return clubName_ ?? ClubNameDefaultValue; }
      set {
        clubName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "club_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubName {
      get { return clubName_ != null; }
    }
    /// <summary>Clears the value of the "club_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubName() {
      clubName_ = null;
    }

    /// <summary>Field number for the "club_icon" field.</summary>
    public const int ClubIconFieldNumber = 21;
    private readonly static string ClubIconDefaultValue = "";

    private string clubIcon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClubIcon {
      get { return clubIcon_ ?? ClubIconDefaultValue; }
      set {
        clubIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "club_icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubIcon {
      get { return clubIcon_ != null; }
    }
    /// <summary>Clears the value of the "club_icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubIcon() {
      clubIcon_ = null;
    }

    /// <summary>Field number for the "club_ownerid" field.</summary>
    public const int ClubOwneridFieldNumber = 22;
    private readonly static long ClubOwneridDefaultValue = 0L;

    private long clubOwnerid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ClubOwnerid {
      get { if ((_hasBits0 & 65536) != 0) { return clubOwnerid_; } else { return ClubOwneridDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        clubOwnerid_ = value;
      }
    }
    /// <summary>Gets whether the "club_ownerid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubOwnerid {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "club_ownerid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubOwnerid() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "platform" field.</summary>
    public const int PlatformFieldNumber = 23;
    private readonly static string PlatformDefaultValue = "";

    private string platform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Platform {
      get { return platform_ ?? PlatformDefaultValue; }
      set {
        platform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "platform" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlatform {
      get { return platform_ != null; }
    }
    /// <summary>Clears the value of the "platform" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlatform() {
      platform_ = null;
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 24;
    private readonly static int RegionDefaultValue = 0;

    private int region_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Region {
      get { if ((_hasBits0 & 131072) != 0) { return region_; } else { return RegionDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        region_ = value;
      }
    }
    /// <summary>Gets whether the "region" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRegion {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "region" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRegion() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "max_buyin" field.</summary>
    public const int MaxBuyinFieldNumber = 25;
    private readonly static long MaxBuyinDefaultValue = 0L;

    private long maxBuyin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaxBuyin {
      get { if ((_hasBits0 & 262144) != 0) { return maxBuyin_; } else { return MaxBuyinDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        maxBuyin_ = value;
      }
    }
    /// <summary>Gets whether the "max_buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxBuyin {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "max_buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxBuyin() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "room_mode" field.</summary>
    public const int RoomModeFieldNumber = 26;
    private readonly static global::Texas.Protocol.RoomMode RoomModeDefaultValue = global::Texas.Protocol.RoomMode.None;

    private global::Texas.Protocol.RoomMode roomMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomMode RoomMode {
      get { if ((_hasBits0 & 524288) != 0) { return roomMode_; } else { return RoomModeDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        roomMode_ = value;
      }
    }
    /// <summary>Gets whether the "room_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomMode {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "room_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomMode() {
      _hasBits0 &= ~524288;
    }

    /// <summary>Field number for the "create_clubid" field.</summary>
    public const int CreateClubidFieldNumber = 27;
    private readonly static int CreateClubidDefaultValue = 0;

    private int createClubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CreateClubid {
      get { if ((_hasBits0 & 1048576) != 0) { return createClubid_; } else { return CreateClubidDefaultValue; } }
      set {
        _hasBits0 |= 1048576;
        createClubid_ = value;
      }
    }
    /// <summary>Gets whether the "create_clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCreateClubid {
      get { return (_hasBits0 & 1048576) != 0; }
    }
    /// <summary>Clears the value of the "create_clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCreateClubid() {
      _hasBits0 &= ~1048576;
    }

    /// <summary>Field number for the "game_mode" field.</summary>
    public const int GameModeFieldNumber = 28;
    private readonly static global::Texas.Protocol.GameMode GameModeDefaultValue = global::Texas.Protocol.GameMode.Regular;

    private global::Texas.Protocol.GameMode gameMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.GameMode GameMode {
      get { if ((_hasBits0 & 2097152) != 0) { return gameMode_; } else { return GameModeDefaultValue; } }
      set {
        _hasBits0 |= 2097152;
        gameMode_ = value;
      }
    }
    /// <summary>Gets whether the "game_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameMode {
      get { return (_hasBits0 & 2097152) != 0; }
    }
    /// <summary>Clears the value of the "game_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameMode() {
      _hasBits0 &= ~2097152;
    }

    /// <summary>Field number for the "auto_start" field.</summary>
    public const int AutoStartFieldNumber = 29;
    private readonly static int AutoStartDefaultValue = 0;

    private int autoStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AutoStart {
      get { if ((_hasBits0 & 4194304) != 0) { return autoStart_; } else { return AutoStartDefaultValue; } }
      set {
        _hasBits0 |= 4194304;
        autoStart_ = value;
      }
    }
    /// <summary>Gets whether the "auto_start" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAutoStart {
      get { return (_hasBits0 & 4194304) != 0; }
    }
    /// <summary>Clears the value of the "auto_start" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAutoStart() {
      _hasBits0 &= ~4194304;
    }

    /// <summary>Field number for the "card_holder_vip_level" field.</summary>
    public const int CardHolderVipLevelFieldNumber = 30;
    private readonly static int CardHolderVipLevelDefaultValue = 0;

    private int cardHolderVipLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CardHolderVipLevel {
      get { if ((_hasBits0 & 8388608) != 0) { return cardHolderVipLevel_; } else { return CardHolderVipLevelDefaultValue; } }
      set {
        _hasBits0 |= 8388608;
        cardHolderVipLevel_ = value;
      }
    }
    /// <summary>Gets whether the "card_holder_vip_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCardHolderVipLevel {
      get { return (_hasBits0 & 8388608) != 0; }
    }
    /// <summary>Clears the value of the "card_holder_vip_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCardHolderVipLevel() {
      _hasBits0 &= ~8388608;
    }

    /// <summary>Field number for the "tempid" field.</summary>
    public const int TempidFieldNumber = 31;
    private readonly static string TempidDefaultValue = "";

    private string tempid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tempid {
      get { return tempid_ ?? TempidDefaultValue; }
      set {
        tempid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tempid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTempid {
      get { return tempid_ != null; }
    }
    /// <summary>Clears the value of the "tempid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTempid() {
      tempid_ = null;
    }

    /// <summary>Field number for the "rebate_point" field.</summary>
    public const int RebatePointFieldNumber = 32;
    private readonly static long RebatePointDefaultValue = 0L;

    private long rebatePoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RebatePoint {
      get { if ((_hasBits0 & 16777216) != 0) { return rebatePoint_; } else { return RebatePointDefaultValue; } }
      set {
        _hasBits0 |= 16777216;
        rebatePoint_ = value;
      }
    }
    /// <summary>Gets whether the "rebate_point" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRebatePoint {
      get { return (_hasBits0 & 16777216) != 0; }
    }
    /// <summary>Clears the value of the "rebate_point" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRebatePoint() {
      _hasBits0 &= ~16777216;
    }

    /// <summary>Field number for the "rebate_hands_num" field.</summary>
    public const int RebateHandsNumFieldNumber = 33;
    private readonly static long RebateHandsNumDefaultValue = 0L;

    private long rebateHandsNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RebateHandsNum {
      get { if ((_hasBits0 & 33554432) != 0) { return rebateHandsNum_; } else { return RebateHandsNumDefaultValue; } }
      set {
        _hasBits0 |= 33554432;
        rebateHandsNum_ = value;
      }
    }
    /// <summary>Gets whether the "rebate_hands_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRebateHandsNum {
      get { return (_hasBits0 & 33554432) != 0; }
    }
    /// <summary>Clears the value of the "rebate_hands_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRebateHandsNum() {
      _hasBits0 &= ~33554432;
    }

    /// <summary>Field number for the "career_data" field.</summary>
    public const int CareerDataFieldNumber = 34;
    private readonly static bool CareerDataDefaultValue = false;

    private bool careerData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CareerData {
      get { if ((_hasBits0 & 67108864) != 0) { return careerData_; } else { return CareerDataDefaultValue; } }
      set {
        _hasBits0 |= 67108864;
        careerData_ = value;
      }
    }
    /// <summary>Gets whether the "career_data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCareerData {
      get { return (_hasBits0 & 67108864) != 0; }
    }
    /// <summary>Clears the value of the "career_data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCareerData() {
      _hasBits0 &= ~67108864;
    }

    /// <summary>Field number for the "is_auto_delay_room_over" field.</summary>
    public const int IsAutoDelayRoomOverFieldNumber = 35;
    private readonly static bool IsAutoDelayRoomOverDefaultValue = false;

    private bool isAutoDelayRoomOver_;
    /// <summary>
    ///是否自动延时
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAutoDelayRoomOver {
      get { if ((_hasBits0 & 134217728) != 0) { return isAutoDelayRoomOver_; } else { return IsAutoDelayRoomOverDefaultValue; } }
      set {
        _hasBits0 |= 134217728;
        isAutoDelayRoomOver_ = value;
      }
    }
    /// <summary>Gets whether the "is_auto_delay_room_over" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsAutoDelayRoomOver {
      get { return (_hasBits0 & 134217728) != 0; }
    }
    /// <summary>Clears the value of the "is_auto_delay_room_over" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsAutoDelayRoomOver() {
      _hasBits0 &= ~134217728;
    }

    /// <summary>Field number for the "auto_delay_room_over_times" field.</summary>
    public const int AutoDelayRoomOverTimesFieldNumber = 36;
    private readonly static int AutoDelayRoomOverTimesDefaultValue = 0;

    private int autoDelayRoomOverTimes_;
    /// <summary>
    ///自动延时次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AutoDelayRoomOverTimes {
      get { if ((_hasBits0 & 268435456) != 0) { return autoDelayRoomOverTimes_; } else { return AutoDelayRoomOverTimesDefaultValue; } }
      set {
        _hasBits0 |= 268435456;
        autoDelayRoomOverTimes_ = value;
      }
    }
    /// <summary>Gets whether the "auto_delay_room_over_times" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAutoDelayRoomOverTimes {
      get { return (_hasBits0 & 268435456) != 0; }
    }
    /// <summary>Clears the value of the "auto_delay_room_over_times" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAutoDelayRoomOverTimes() {
      _hasBits0 &= ~268435456;
    }

    /// <summary>Field number for the "is_auto_create_room" field.</summary>
    public const int IsAutoCreateRoomFieldNumber = 37;
    private readonly static bool IsAutoCreateRoomDefaultValue = false;

    private bool isAutoCreateRoom_;
    /// <summary>
    ///是否自动开桌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAutoCreateRoom {
      get { if ((_hasBits0 & 536870912) != 0) { return isAutoCreateRoom_; } else { return IsAutoCreateRoomDefaultValue; } }
      set {
        _hasBits0 |= 536870912;
        isAutoCreateRoom_ = value;
      }
    }
    /// <summary>Gets whether the "is_auto_create_room" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsAutoCreateRoom {
      get { return (_hasBits0 & 536870912) != 0; }
    }
    /// <summary>Clears the value of the "is_auto_create_room" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsAutoCreateRoom() {
      _hasBits0 &= ~536870912;
    }

    /// <summary>Field number for the "moduleid" field.</summary>
    public const int ModuleidFieldNumber = 38;
    private readonly static long ModuleidDefaultValue = 0L;

    private long moduleid_;
    /// <summary>
    /// when module create room use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Moduleid {
      get { if ((_hasBits0 & 1073741824) != 0) { return moduleid_; } else { return ModuleidDefaultValue; } }
      set {
        _hasBits0 |= 1073741824;
        moduleid_ = value;
      }
    }
    /// <summary>Gets whether the "moduleid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModuleid {
      get { return (_hasBits0 & 1073741824) != 0; }
    }
    /// <summary>Clears the value of the "moduleid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModuleid() {
      _hasBits0 &= ~1073741824;
    }

    /// <summary>Field number for the "forbidden_chat" field.</summary>
    public const int ForbiddenChatFieldNumber = 39;
    private readonly static bool ForbiddenChatDefaultValue = false;

    private bool forbiddenChat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ForbiddenChat {
      get { if ((_hasBits0 & -2147483648) != 0) { return forbiddenChat_; } else { return ForbiddenChatDefaultValue; } }
      set {
        _hasBits0 |= -2147483648;
        forbiddenChat_ = value;
      }
    }
    /// <summary>Gets whether the "forbidden_chat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForbiddenChat {
      get { return (_hasBits0 & -2147483648) != 0; }
    }
    /// <summary>Clears the value of the "forbidden_chat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForbiddenChat() {
      _hasBits0 &= ~-2147483648;
    }

    /// <summary>Field number for the "new_default_buyin" field.</summary>
    public const int NewDefaultBuyinFieldNumber = 40;
    private readonly static long NewDefaultBuyinDefaultValue = 0L;

    private long newDefaultBuyin_;
    /// <summary>
    ///大厅大菠萝中用于代替int32的default_buyin字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NewDefaultBuyin {
      get { if ((_hasBits1 & 1) != 0) { return newDefaultBuyin_; } else { return NewDefaultBuyinDefaultValue; } }
      set {
        _hasBits1 |= 1;
        newDefaultBuyin_ = value;
      }
    }
    /// <summary>Gets whether the "new_default_buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNewDefaultBuyin {
      get { return (_hasBits1 & 1) != 0; }
    }
    /// <summary>Clears the value of the "new_default_buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNewDefaultBuyin() {
      _hasBits1 &= ~1;
    }

    /// <summary>Field number for the "passwd_limit" field.</summary>
    public const int PasswdLimitFieldNumber = 41;
    private readonly static bool PasswdLimitDefaultValue = false;

    private bool passwdLimit_;
    /// <summary>
    /// passwd room
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PasswdLimit {
      get { if ((_hasBits1 & 2) != 0) { return passwdLimit_; } else { return PasswdLimitDefaultValue; } }
      set {
        _hasBits1 |= 2;
        passwdLimit_ = value;
      }
    }
    /// <summary>Gets whether the "passwd_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPasswdLimit {
      get { return (_hasBits1 & 2) != 0; }
    }
    /// <summary>Clears the value of the "passwd_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPasswdLimit() {
      _hasBits1 &= ~2;
    }

    /// <summary>Field number for the "passwd" field.</summary>
    public const int PasswdFieldNumber = 42;
    private readonly static string PasswdDefaultValue = "";

    private string passwd_;
    /// <summary>
    /// password
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Passwd {
      get { return passwd_ ?? PasswdDefaultValue; }
      set {
        passwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "passwd" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPasswd {
      get { return passwd_ != null; }
    }
    /// <summary>Clears the value of the "passwd" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPasswd() {
      passwd_ = null;
    }

    /// <summary>Field number for the "super_leagueid" field.</summary>
    public const int SuperLeagueidFieldNumber = 43;
    private readonly static int SuperLeagueidDefaultValue = 0;

    private int superLeagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueid {
      get { if ((_hasBits1 & 4) != 0) { return superLeagueid_; } else { return SuperLeagueidDefaultValue; } }
      set {
        _hasBits1 |= 4;
        superLeagueid_ = value;
      }
    }
    /// <summary>Gets whether the "super_leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueid {
      get { return (_hasBits1 & 4) != 0; }
    }
    /// <summary>Clears the value of the "super_leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueid() {
      _hasBits1 &= ~4;
    }

    /// <summary>Field number for the "super_league_type" field.</summary>
    public const int SuperLeagueTypeFieldNumber = 44;
    private readonly static int SuperLeagueTypeDefaultValue = 0;

    private int superLeagueType_;
    /// <summary>
    /// 1 not ppst
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueType {
      get { if ((_hasBits1 & 8) != 0) { return superLeagueType_; } else { return SuperLeagueTypeDefaultValue; } }
      set {
        _hasBits1 |= 8;
        superLeagueType_ = value;
      }
    }
    /// <summary>Gets whether the "super_league_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueType {
      get { return (_hasBits1 & 8) != 0; }
    }
    /// <summary>Clears the value of the "super_league_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueType() {
      _hasBits1 &= ~8;
    }

    /// <summary>Field number for the "is_ban_pc" field.</summary>
    public const int IsBanPcFieldNumber = 45;
    private readonly static bool IsBanPcDefaultValue = false;

    private bool isBanPc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBanPc {
      get { if ((_hasBits1 & 16) != 0) { return isBanPc_; } else { return IsBanPcDefaultValue; } }
      set {
        _hasBits1 |= 16;
        isBanPc_ = value;
      }
    }
    /// <summary>Gets whether the "is_ban_pc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsBanPc {
      get { return (_hasBits1 & 16) != 0; }
    }
    /// <summary>Clears the value of the "is_ban_pc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsBanPc() {
      _hasBits1 &= ~16;
    }

    /// <summary>Field number for the "is_check_mail" field.</summary>
    public const int IsCheckMailFieldNumber = 46;
    private readonly static bool IsCheckMailDefaultValue = false;

    private bool isCheckMail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCheckMail {
      get { if ((_hasBits1 & 32) != 0) { return isCheckMail_; } else { return IsCheckMailDefaultValue; } }
      set {
        _hasBits1 |= 32;
        isCheckMail_ = value;
      }
    }
    /// <summary>Gets whether the "is_check_mail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsCheckMail {
      get { return (_hasBits1 & 32) != 0; }
    }
    /// <summary>Clears the value of the "is_check_mail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsCheckMail() {
      _hasBits1 &= ~32;
    }

    /// <summary>Field number for the "forbidden_chat_mode" field.</summary>
    public const int ForbiddenChatModeFieldNumber = 47;
    private readonly static int ForbiddenChatModeDefaultValue = 0;

    private int forbiddenChatMode_;
    /// <summary>
    ///0: 全體禁言 1:看客禁言
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ForbiddenChatMode {
      get { if ((_hasBits1 & 64) != 0) { return forbiddenChatMode_; } else { return ForbiddenChatModeDefaultValue; } }
      set {
        _hasBits1 |= 64;
        forbiddenChatMode_ = value;
      }
    }
    /// <summary>Gets whether the "forbidden_chat_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForbiddenChatMode {
      get { return (_hasBits1 & 64) != 0; }
    }
    /// <summary>Clears the value of the "forbidden_chat_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForbiddenChatMode() {
      _hasBits1 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineRoomInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineRoomInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (Ownerid != other.Ownerid) return false;
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (SeatNum != other.SeatNum) return false;
      if (RoomName != other.RoomName) return false;
      if (ActionTime != other.ActionTime) return false;
      if (BaseScore != other.BaseScore) return false;
      if (DefaultBuyin != other.DefaultBuyin) return false;
      if (MinBuyin != other.MinBuyin) return false;
      if (ActionType != other.ActionType) return false;
      if (Feepoint != other.Feepoint) return false;
      if (Feecap != other.Feecap) return false;
      if (GameTime != other.GameTime) return false;
      if (GpsLimit != other.GpsLimit) return false;
      if (IpLimit != other.IpLimit) return false;
      if (GpsDistanceLimit != other.GpsDistanceLimit) return false;
      if (OwnerName != other.OwnerName) return false;
      if (OwnerIcon != other.OwnerIcon) return false;
      if (ClubName != other.ClubName) return false;
      if (ClubIcon != other.ClubIcon) return false;
      if (ClubOwnerid != other.ClubOwnerid) return false;
      if (Platform != other.Platform) return false;
      if (Region != other.Region) return false;
      if (MaxBuyin != other.MaxBuyin) return false;
      if (RoomMode != other.RoomMode) return false;
      if (CreateClubid != other.CreateClubid) return false;
      if (GameMode != other.GameMode) return false;
      if (AutoStart != other.AutoStart) return false;
      if (CardHolderVipLevel != other.CardHolderVipLevel) return false;
      if (Tempid != other.Tempid) return false;
      if (RebatePoint != other.RebatePoint) return false;
      if (RebateHandsNum != other.RebateHandsNum) return false;
      if (CareerData != other.CareerData) return false;
      if (IsAutoDelayRoomOver != other.IsAutoDelayRoomOver) return false;
      if (AutoDelayRoomOverTimes != other.AutoDelayRoomOverTimes) return false;
      if (IsAutoCreateRoom != other.IsAutoCreateRoom) return false;
      if (Moduleid != other.Moduleid) return false;
      if (ForbiddenChat != other.ForbiddenChat) return false;
      if (NewDefaultBuyin != other.NewDefaultBuyin) return false;
      if (PasswdLimit != other.PasswdLimit) return false;
      if (Passwd != other.Passwd) return false;
      if (SuperLeagueid != other.SuperLeagueid) return false;
      if (SuperLeagueType != other.SuperLeagueType) return false;
      if (IsBanPc != other.IsBanPc) return false;
      if (IsCheckMail != other.IsCheckMail) return false;
      if (ForbiddenChatMode != other.ForbiddenChatMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasOwnerid) hash ^= Ownerid.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasSeatNum) hash ^= SeatNum.GetHashCode();
      if (HasRoomName) hash ^= RoomName.GetHashCode();
      if (HasActionTime) hash ^= ActionTime.GetHashCode();
      if (HasBaseScore) hash ^= BaseScore.GetHashCode();
      if (HasDefaultBuyin) hash ^= DefaultBuyin.GetHashCode();
      if (HasMinBuyin) hash ^= MinBuyin.GetHashCode();
      if (HasActionType) hash ^= ActionType.GetHashCode();
      if (HasFeepoint) hash ^= Feepoint.GetHashCode();
      if (HasFeecap) hash ^= Feecap.GetHashCode();
      if (HasGameTime) hash ^= GameTime.GetHashCode();
      if (HasGpsLimit) hash ^= GpsLimit.GetHashCode();
      if (HasIpLimit) hash ^= IpLimit.GetHashCode();
      if (HasGpsDistanceLimit) hash ^= GpsDistanceLimit.GetHashCode();
      if (HasOwnerName) hash ^= OwnerName.GetHashCode();
      if (HasOwnerIcon) hash ^= OwnerIcon.GetHashCode();
      if (HasClubName) hash ^= ClubName.GetHashCode();
      if (HasClubIcon) hash ^= ClubIcon.GetHashCode();
      if (HasClubOwnerid) hash ^= ClubOwnerid.GetHashCode();
      if (HasPlatform) hash ^= Platform.GetHashCode();
      if (HasRegion) hash ^= Region.GetHashCode();
      if (HasMaxBuyin) hash ^= MaxBuyin.GetHashCode();
      if (HasRoomMode) hash ^= RoomMode.GetHashCode();
      if (HasCreateClubid) hash ^= CreateClubid.GetHashCode();
      if (HasGameMode) hash ^= GameMode.GetHashCode();
      if (HasAutoStart) hash ^= AutoStart.GetHashCode();
      if (HasCardHolderVipLevel) hash ^= CardHolderVipLevel.GetHashCode();
      if (HasTempid) hash ^= Tempid.GetHashCode();
      if (HasRebatePoint) hash ^= RebatePoint.GetHashCode();
      if (HasRebateHandsNum) hash ^= RebateHandsNum.GetHashCode();
      if (HasCareerData) hash ^= CareerData.GetHashCode();
      if (HasIsAutoDelayRoomOver) hash ^= IsAutoDelayRoomOver.GetHashCode();
      if (HasAutoDelayRoomOverTimes) hash ^= AutoDelayRoomOverTimes.GetHashCode();
      if (HasIsAutoCreateRoom) hash ^= IsAutoCreateRoom.GetHashCode();
      if (HasModuleid) hash ^= Moduleid.GetHashCode();
      if (HasForbiddenChat) hash ^= ForbiddenChat.GetHashCode();
      if (HasNewDefaultBuyin) hash ^= NewDefaultBuyin.GetHashCode();
      if (HasPasswdLimit) hash ^= PasswdLimit.GetHashCode();
      if (HasPasswd) hash ^= Passwd.GetHashCode();
      if (HasSuperLeagueid) hash ^= SuperLeagueid.GetHashCode();
      if (HasSuperLeagueType) hash ^= SuperLeagueType.GetHashCode();
      if (HasIsBanPc) hash ^= IsBanPc.GetHashCode();
      if (HasIsCheckMail) hash ^= IsCheckMail.GetHashCode();
      if (HasForbiddenChatMode) hash ^= ForbiddenChatMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasOwnerid) {
        output.WriteRawTag(16);
        output.WriteInt64(Ownerid);
      }
      if (HasClubid) {
        output.WriteRawTag(24);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(32);
        output.WriteInt32(Leagueid);
      }
      if (HasSeatNum) {
        output.WriteRawTag(40);
        output.WriteInt32(SeatNum);
      }
      if (HasRoomName) {
        output.WriteRawTag(50);
        output.WriteString(RoomName);
      }
      if (HasActionTime) {
        output.WriteRawTag(56);
        output.WriteInt32(ActionTime);
      }
      if (HasBaseScore) {
        output.WriteRawTag(64);
        output.WriteInt64(BaseScore);
      }
      if (HasDefaultBuyin) {
        output.WriteRawTag(72);
        output.WriteInt32(DefaultBuyin);
      }
      if (HasMinBuyin) {
        output.WriteRawTag(80);
        output.WriteInt64(MinBuyin);
      }
      if (HasActionType) {
        output.WriteRawTag(88);
        output.WriteInt32(ActionType);
      }
      if (HasFeepoint) {
        output.WriteRawTag(96);
        output.WriteInt32(Feepoint);
      }
      if (HasFeecap) {
        output.WriteRawTag(104);
        output.WriteInt32(Feecap);
      }
      if (HasGameTime) {
        output.WriteRawTag(112);
        output.WriteInt32(GameTime);
      }
      if (HasGpsLimit) {
        output.WriteRawTag(120);
        output.WriteBool(GpsLimit);
      }
      if (HasIpLimit) {
        output.WriteRawTag(128, 1);
        output.WriteBool(IpLimit);
      }
      if (HasGpsDistanceLimit) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(GpsDistanceLimit);
      }
      if (HasOwnerName) {
        output.WriteRawTag(146, 1);
        output.WriteString(OwnerName);
      }
      if (HasOwnerIcon) {
        output.WriteRawTag(154, 1);
        output.WriteString(OwnerIcon);
      }
      if (HasClubName) {
        output.WriteRawTag(162, 1);
        output.WriteString(ClubName);
      }
      if (HasClubIcon) {
        output.WriteRawTag(170, 1);
        output.WriteString(ClubIcon);
      }
      if (HasClubOwnerid) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(ClubOwnerid);
      }
      if (HasPlatform) {
        output.WriteRawTag(186, 1);
        output.WriteString(Platform);
      }
      if (HasRegion) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(Region);
      }
      if (HasMaxBuyin) {
        output.WriteRawTag(200, 1);
        output.WriteInt64(MaxBuyin);
      }
      if (HasRoomMode) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) RoomMode);
      }
      if (HasCreateClubid) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(CreateClubid);
      }
      if (HasGameMode) {
        output.WriteRawTag(224, 1);
        output.WriteEnum((int) GameMode);
      }
      if (HasAutoStart) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(AutoStart);
      }
      if (HasCardHolderVipLevel) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(CardHolderVipLevel);
      }
      if (HasTempid) {
        output.WriteRawTag(250, 1);
        output.WriteString(Tempid);
      }
      if (HasRebatePoint) {
        output.WriteRawTag(128, 2);
        output.WriteInt64(RebatePoint);
      }
      if (HasRebateHandsNum) {
        output.WriteRawTag(136, 2);
        output.WriteInt64(RebateHandsNum);
      }
      if (HasCareerData) {
        output.WriteRawTag(144, 2);
        output.WriteBool(CareerData);
      }
      if (HasIsAutoDelayRoomOver) {
        output.WriteRawTag(152, 2);
        output.WriteBool(IsAutoDelayRoomOver);
      }
      if (HasAutoDelayRoomOverTimes) {
        output.WriteRawTag(160, 2);
        output.WriteInt32(AutoDelayRoomOverTimes);
      }
      if (HasIsAutoCreateRoom) {
        output.WriteRawTag(168, 2);
        output.WriteBool(IsAutoCreateRoom);
      }
      if (HasModuleid) {
        output.WriteRawTag(176, 2);
        output.WriteInt64(Moduleid);
      }
      if (HasForbiddenChat) {
        output.WriteRawTag(184, 2);
        output.WriteBool(ForbiddenChat);
      }
      if (HasNewDefaultBuyin) {
        output.WriteRawTag(192, 2);
        output.WriteInt64(NewDefaultBuyin);
      }
      if (HasPasswdLimit) {
        output.WriteRawTag(200, 2);
        output.WriteBool(PasswdLimit);
      }
      if (HasPasswd) {
        output.WriteRawTag(210, 2);
        output.WriteString(Passwd);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(216, 2);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasSuperLeagueType) {
        output.WriteRawTag(224, 2);
        output.WriteInt32(SuperLeagueType);
      }
      if (HasIsBanPc) {
        output.WriteRawTag(232, 2);
        output.WriteBool(IsBanPc);
      }
      if (HasIsCheckMail) {
        output.WriteRawTag(240, 2);
        output.WriteBool(IsCheckMail);
      }
      if (HasForbiddenChatMode) {
        output.WriteRawTag(248, 2);
        output.WriteInt32(ForbiddenChatMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasOwnerid) {
        output.WriteRawTag(16);
        output.WriteInt64(Ownerid);
      }
      if (HasClubid) {
        output.WriteRawTag(24);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(32);
        output.WriteInt32(Leagueid);
      }
      if (HasSeatNum) {
        output.WriteRawTag(40);
        output.WriteInt32(SeatNum);
      }
      if (HasRoomName) {
        output.WriteRawTag(50);
        output.WriteString(RoomName);
      }
      if (HasActionTime) {
        output.WriteRawTag(56);
        output.WriteInt32(ActionTime);
      }
      if (HasBaseScore) {
        output.WriteRawTag(64);
        output.WriteInt64(BaseScore);
      }
      if (HasDefaultBuyin) {
        output.WriteRawTag(72);
        output.WriteInt32(DefaultBuyin);
      }
      if (HasMinBuyin) {
        output.WriteRawTag(80);
        output.WriteInt64(MinBuyin);
      }
      if (HasActionType) {
        output.WriteRawTag(88);
        output.WriteInt32(ActionType);
      }
      if (HasFeepoint) {
        output.WriteRawTag(96);
        output.WriteInt32(Feepoint);
      }
      if (HasFeecap) {
        output.WriteRawTag(104);
        output.WriteInt32(Feecap);
      }
      if (HasGameTime) {
        output.WriteRawTag(112);
        output.WriteInt32(GameTime);
      }
      if (HasGpsLimit) {
        output.WriteRawTag(120);
        output.WriteBool(GpsLimit);
      }
      if (HasIpLimit) {
        output.WriteRawTag(128, 1);
        output.WriteBool(IpLimit);
      }
      if (HasGpsDistanceLimit) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(GpsDistanceLimit);
      }
      if (HasOwnerName) {
        output.WriteRawTag(146, 1);
        output.WriteString(OwnerName);
      }
      if (HasOwnerIcon) {
        output.WriteRawTag(154, 1);
        output.WriteString(OwnerIcon);
      }
      if (HasClubName) {
        output.WriteRawTag(162, 1);
        output.WriteString(ClubName);
      }
      if (HasClubIcon) {
        output.WriteRawTag(170, 1);
        output.WriteString(ClubIcon);
      }
      if (HasClubOwnerid) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(ClubOwnerid);
      }
      if (HasPlatform) {
        output.WriteRawTag(186, 1);
        output.WriteString(Platform);
      }
      if (HasRegion) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(Region);
      }
      if (HasMaxBuyin) {
        output.WriteRawTag(200, 1);
        output.WriteInt64(MaxBuyin);
      }
      if (HasRoomMode) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) RoomMode);
      }
      if (HasCreateClubid) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(CreateClubid);
      }
      if (HasGameMode) {
        output.WriteRawTag(224, 1);
        output.WriteEnum((int) GameMode);
      }
      if (HasAutoStart) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(AutoStart);
      }
      if (HasCardHolderVipLevel) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(CardHolderVipLevel);
      }
      if (HasTempid) {
        output.WriteRawTag(250, 1);
        output.WriteString(Tempid);
      }
      if (HasRebatePoint) {
        output.WriteRawTag(128, 2);
        output.WriteInt64(RebatePoint);
      }
      if (HasRebateHandsNum) {
        output.WriteRawTag(136, 2);
        output.WriteInt64(RebateHandsNum);
      }
      if (HasCareerData) {
        output.WriteRawTag(144, 2);
        output.WriteBool(CareerData);
      }
      if (HasIsAutoDelayRoomOver) {
        output.WriteRawTag(152, 2);
        output.WriteBool(IsAutoDelayRoomOver);
      }
      if (HasAutoDelayRoomOverTimes) {
        output.WriteRawTag(160, 2);
        output.WriteInt32(AutoDelayRoomOverTimes);
      }
      if (HasIsAutoCreateRoom) {
        output.WriteRawTag(168, 2);
        output.WriteBool(IsAutoCreateRoom);
      }
      if (HasModuleid) {
        output.WriteRawTag(176, 2);
        output.WriteInt64(Moduleid);
      }
      if (HasForbiddenChat) {
        output.WriteRawTag(184, 2);
        output.WriteBool(ForbiddenChat);
      }
      if (HasNewDefaultBuyin) {
        output.WriteRawTag(192, 2);
        output.WriteInt64(NewDefaultBuyin);
      }
      if (HasPasswdLimit) {
        output.WriteRawTag(200, 2);
        output.WriteBool(PasswdLimit);
      }
      if (HasPasswd) {
        output.WriteRawTag(210, 2);
        output.WriteString(Passwd);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(216, 2);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasSuperLeagueType) {
        output.WriteRawTag(224, 2);
        output.WriteInt32(SuperLeagueType);
      }
      if (HasIsBanPc) {
        output.WriteRawTag(232, 2);
        output.WriteBool(IsBanPc);
      }
      if (HasIsCheckMail) {
        output.WriteRawTag(240, 2);
        output.WriteBool(IsCheckMail);
      }
      if (HasForbiddenChatMode) {
        output.WriteRawTag(248, 2);
        output.WriteInt32(ForbiddenChatMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasOwnerid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Ownerid);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasSeatNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SeatNum);
      }
      if (HasRoomName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (HasActionTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionTime);
      }
      if (HasBaseScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BaseScore);
      }
      if (HasDefaultBuyin) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DefaultBuyin);
      }
      if (HasMinBuyin) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinBuyin);
      }
      if (HasActionType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionType);
      }
      if (HasFeepoint) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Feepoint);
      }
      if (HasFeecap) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Feecap);
      }
      if (HasGameTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameTime);
      }
      if (HasGpsLimit) {
        size += 1 + 1;
      }
      if (HasIpLimit) {
        size += 2 + 1;
      }
      if (HasGpsDistanceLimit) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(GpsDistanceLimit);
      }
      if (HasOwnerName) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OwnerName);
      }
      if (HasOwnerIcon) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OwnerIcon);
      }
      if (HasClubName) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClubName);
      }
      if (HasClubIcon) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClubIcon);
      }
      if (HasClubOwnerid) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(ClubOwnerid);
      }
      if (HasPlatform) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Platform);
      }
      if (HasRegion) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Region);
      }
      if (HasMaxBuyin) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(MaxBuyin);
      }
      if (HasRoomMode) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) RoomMode);
      }
      if (HasCreateClubid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CreateClubid);
      }
      if (HasGameMode) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
      }
      if (HasAutoStart) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AutoStart);
      }
      if (HasCardHolderVipLevel) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CardHolderVipLevel);
      }
      if (HasTempid) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Tempid);
      }
      if (HasRebatePoint) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(RebatePoint);
      }
      if (HasRebateHandsNum) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(RebateHandsNum);
      }
      if (HasCareerData) {
        size += 2 + 1;
      }
      if (HasIsAutoDelayRoomOver) {
        size += 2 + 1;
      }
      if (HasAutoDelayRoomOverTimes) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AutoDelayRoomOverTimes);
      }
      if (HasIsAutoCreateRoom) {
        size += 2 + 1;
      }
      if (HasModuleid) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Moduleid);
      }
      if (HasForbiddenChat) {
        size += 2 + 1;
      }
      if (HasNewDefaultBuyin) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(NewDefaultBuyin);
      }
      if (HasPasswdLimit) {
        size += 2 + 1;
      }
      if (HasPasswd) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Passwd);
      }
      if (HasSuperLeagueid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueid);
      }
      if (HasSuperLeagueType) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueType);
      }
      if (HasIsBanPc) {
        size += 2 + 1;
      }
      if (HasIsCheckMail) {
        size += 2 + 1;
      }
      if (HasForbiddenChatMode) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ForbiddenChatMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineRoomInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasOwnerid) {
        Ownerid = other.Ownerid;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasSeatNum) {
        SeatNum = other.SeatNum;
      }
      if (other.HasRoomName) {
        RoomName = other.RoomName;
      }
      if (other.HasActionTime) {
        ActionTime = other.ActionTime;
      }
      if (other.HasBaseScore) {
        BaseScore = other.BaseScore;
      }
      if (other.HasDefaultBuyin) {
        DefaultBuyin = other.DefaultBuyin;
      }
      if (other.HasMinBuyin) {
        MinBuyin = other.MinBuyin;
      }
      if (other.HasActionType) {
        ActionType = other.ActionType;
      }
      if (other.HasFeepoint) {
        Feepoint = other.Feepoint;
      }
      if (other.HasFeecap) {
        Feecap = other.Feecap;
      }
      if (other.HasGameTime) {
        GameTime = other.GameTime;
      }
      if (other.HasGpsLimit) {
        GpsLimit = other.GpsLimit;
      }
      if (other.HasIpLimit) {
        IpLimit = other.IpLimit;
      }
      if (other.HasGpsDistanceLimit) {
        GpsDistanceLimit = other.GpsDistanceLimit;
      }
      if (other.HasOwnerName) {
        OwnerName = other.OwnerName;
      }
      if (other.HasOwnerIcon) {
        OwnerIcon = other.OwnerIcon;
      }
      if (other.HasClubName) {
        ClubName = other.ClubName;
      }
      if (other.HasClubIcon) {
        ClubIcon = other.ClubIcon;
      }
      if (other.HasClubOwnerid) {
        ClubOwnerid = other.ClubOwnerid;
      }
      if (other.HasPlatform) {
        Platform = other.Platform;
      }
      if (other.HasRegion) {
        Region = other.Region;
      }
      if (other.HasMaxBuyin) {
        MaxBuyin = other.MaxBuyin;
      }
      if (other.HasRoomMode) {
        RoomMode = other.RoomMode;
      }
      if (other.HasCreateClubid) {
        CreateClubid = other.CreateClubid;
      }
      if (other.HasGameMode) {
        GameMode = other.GameMode;
      }
      if (other.HasAutoStart) {
        AutoStart = other.AutoStart;
      }
      if (other.HasCardHolderVipLevel) {
        CardHolderVipLevel = other.CardHolderVipLevel;
      }
      if (other.HasTempid) {
        Tempid = other.Tempid;
      }
      if (other.HasRebatePoint) {
        RebatePoint = other.RebatePoint;
      }
      if (other.HasRebateHandsNum) {
        RebateHandsNum = other.RebateHandsNum;
      }
      if (other.HasCareerData) {
        CareerData = other.CareerData;
      }
      if (other.HasIsAutoDelayRoomOver) {
        IsAutoDelayRoomOver = other.IsAutoDelayRoomOver;
      }
      if (other.HasAutoDelayRoomOverTimes) {
        AutoDelayRoomOverTimes = other.AutoDelayRoomOverTimes;
      }
      if (other.HasIsAutoCreateRoom) {
        IsAutoCreateRoom = other.IsAutoCreateRoom;
      }
      if (other.HasModuleid) {
        Moduleid = other.Moduleid;
      }
      if (other.HasForbiddenChat) {
        ForbiddenChat = other.ForbiddenChat;
      }
      if (other.HasNewDefaultBuyin) {
        NewDefaultBuyin = other.NewDefaultBuyin;
      }
      if (other.HasPasswdLimit) {
        PasswdLimit = other.PasswdLimit;
      }
      if (other.HasPasswd) {
        Passwd = other.Passwd;
      }
      if (other.HasSuperLeagueid) {
        SuperLeagueid = other.SuperLeagueid;
      }
      if (other.HasSuperLeagueType) {
        SuperLeagueType = other.SuperLeagueType;
      }
      if (other.HasIsBanPc) {
        IsBanPc = other.IsBanPc;
      }
      if (other.HasIsCheckMail) {
        IsCheckMail = other.IsCheckMail;
      }
      if (other.HasForbiddenChatMode) {
        ForbiddenChatMode = other.ForbiddenChatMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Ownerid = input.ReadInt64();
            break;
          }
          case 24: {
            Clubid = input.ReadInt32();
            break;
          }
          case 32: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 40: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 50: {
            RoomName = input.ReadString();
            break;
          }
          case 56: {
            ActionTime = input.ReadInt32();
            break;
          }
          case 64: {
            BaseScore = input.ReadInt64();
            break;
          }
          case 72: {
            DefaultBuyin = input.ReadInt32();
            break;
          }
          case 80: {
            MinBuyin = input.ReadInt64();
            break;
          }
          case 88: {
            ActionType = input.ReadInt32();
            break;
          }
          case 96: {
            Feepoint = input.ReadInt32();
            break;
          }
          case 104: {
            Feecap = input.ReadInt32();
            break;
          }
          case 112: {
            GameTime = input.ReadInt32();
            break;
          }
          case 120: {
            GpsLimit = input.ReadBool();
            break;
          }
          case 128: {
            IpLimit = input.ReadBool();
            break;
          }
          case 136: {
            GpsDistanceLimit = input.ReadInt32();
            break;
          }
          case 146: {
            OwnerName = input.ReadString();
            break;
          }
          case 154: {
            OwnerIcon = input.ReadString();
            break;
          }
          case 162: {
            ClubName = input.ReadString();
            break;
          }
          case 170: {
            ClubIcon = input.ReadString();
            break;
          }
          case 176: {
            ClubOwnerid = input.ReadInt64();
            break;
          }
          case 186: {
            Platform = input.ReadString();
            break;
          }
          case 192: {
            Region = input.ReadInt32();
            break;
          }
          case 200: {
            MaxBuyin = input.ReadInt64();
            break;
          }
          case 208: {
            RoomMode = (global::Texas.Protocol.RoomMode) input.ReadEnum();
            break;
          }
          case 216: {
            CreateClubid = input.ReadInt32();
            break;
          }
          case 224: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 232: {
            AutoStart = input.ReadInt32();
            break;
          }
          case 240: {
            CardHolderVipLevel = input.ReadInt32();
            break;
          }
          case 250: {
            Tempid = input.ReadString();
            break;
          }
          case 256: {
            RebatePoint = input.ReadInt64();
            break;
          }
          case 264: {
            RebateHandsNum = input.ReadInt64();
            break;
          }
          case 272: {
            CareerData = input.ReadBool();
            break;
          }
          case 280: {
            IsAutoDelayRoomOver = input.ReadBool();
            break;
          }
          case 288: {
            AutoDelayRoomOverTimes = input.ReadInt32();
            break;
          }
          case 296: {
            IsAutoCreateRoom = input.ReadBool();
            break;
          }
          case 304: {
            Moduleid = input.ReadInt64();
            break;
          }
          case 312: {
            ForbiddenChat = input.ReadBool();
            break;
          }
          case 320: {
            NewDefaultBuyin = input.ReadInt64();
            break;
          }
          case 328: {
            PasswdLimit = input.ReadBool();
            break;
          }
          case 338: {
            Passwd = input.ReadString();
            break;
          }
          case 344: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 352: {
            SuperLeagueType = input.ReadInt32();
            break;
          }
          case 360: {
            IsBanPc = input.ReadBool();
            break;
          }
          case 368: {
            IsCheckMail = input.ReadBool();
            break;
          }
          case 376: {
            ForbiddenChatMode = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Ownerid = input.ReadInt64();
            break;
          }
          case 24: {
            Clubid = input.ReadInt32();
            break;
          }
          case 32: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 40: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 50: {
            RoomName = input.ReadString();
            break;
          }
          case 56: {
            ActionTime = input.ReadInt32();
            break;
          }
          case 64: {
            BaseScore = input.ReadInt64();
            break;
          }
          case 72: {
            DefaultBuyin = input.ReadInt32();
            break;
          }
          case 80: {
            MinBuyin = input.ReadInt64();
            break;
          }
          case 88: {
            ActionType = input.ReadInt32();
            break;
          }
          case 96: {
            Feepoint = input.ReadInt32();
            break;
          }
          case 104: {
            Feecap = input.ReadInt32();
            break;
          }
          case 112: {
            GameTime = input.ReadInt32();
            break;
          }
          case 120: {
            GpsLimit = input.ReadBool();
            break;
          }
          case 128: {
            IpLimit = input.ReadBool();
            break;
          }
          case 136: {
            GpsDistanceLimit = input.ReadInt32();
            break;
          }
          case 146: {
            OwnerName = input.ReadString();
            break;
          }
          case 154: {
            OwnerIcon = input.ReadString();
            break;
          }
          case 162: {
            ClubName = input.ReadString();
            break;
          }
          case 170: {
            ClubIcon = input.ReadString();
            break;
          }
          case 176: {
            ClubOwnerid = input.ReadInt64();
            break;
          }
          case 186: {
            Platform = input.ReadString();
            break;
          }
          case 192: {
            Region = input.ReadInt32();
            break;
          }
          case 200: {
            MaxBuyin = input.ReadInt64();
            break;
          }
          case 208: {
            RoomMode = (global::Texas.Protocol.RoomMode) input.ReadEnum();
            break;
          }
          case 216: {
            CreateClubid = input.ReadInt32();
            break;
          }
          case 224: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 232: {
            AutoStart = input.ReadInt32();
            break;
          }
          case 240: {
            CardHolderVipLevel = input.ReadInt32();
            break;
          }
          case 250: {
            Tempid = input.ReadString();
            break;
          }
          case 256: {
            RebatePoint = input.ReadInt64();
            break;
          }
          case 264: {
            RebateHandsNum = input.ReadInt64();
            break;
          }
          case 272: {
            CareerData = input.ReadBool();
            break;
          }
          case 280: {
            IsAutoDelayRoomOver = input.ReadBool();
            break;
          }
          case 288: {
            AutoDelayRoomOverTimes = input.ReadInt32();
            break;
          }
          case 296: {
            IsAutoCreateRoom = input.ReadBool();
            break;
          }
          case 304: {
            Moduleid = input.ReadInt64();
            break;
          }
          case 312: {
            ForbiddenChat = input.ReadBool();
            break;
          }
          case 320: {
            NewDefaultBuyin = input.ReadInt64();
            break;
          }
          case 328: {
            PasswdLimit = input.ReadBool();
            break;
          }
          case 338: {
            Passwd = input.ReadString();
            break;
          }
          case 344: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 352: {
            SuperLeagueType = input.ReadInt32();
            break;
          }
          case 360: {
            IsBanPc = input.ReadBool();
            break;
          }
          case 368: {
            IsCheckMail = input.ReadBool();
            break;
          }
          case 376: {
            ForbiddenChatMode = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///创建大菠萝房间请求
  /// </summary>
  public sealed partial class CreatePineRoomREQ : pb::IMessage<CreatePineRoomREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatePineRoomREQ> _parser = new pb::MessageParser<CreatePineRoomREQ>(() => new CreatePineRoomREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    private int _hasBits1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatePineRoomREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatePineRoomREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatePineRoomREQ(CreatePineRoomREQ other) : this() {
      _hasBits0 = other._hasBits0;
      _hasBits1 = other._hasBits1;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      seatNum_ = other.seatNum_;
      roomName_ = other.roomName_;
      actionTime_ = other.actionTime_;
      baseScore_ = other.baseScore_;
      defaultBuyin_ = other.defaultBuyin_;
      minBuyin_ = other.minBuyin_;
      actionType_ = other.actionType_;
      feepoint_ = other.feepoint_;
      feecap_ = other.feecap_;
      gameTime_ = other.gameTime_;
      gpsLimit_ = other.gpsLimit_;
      ipLimit_ = other.ipLimit_;
      timezone_ = other.timezone_;
      maxBuyin_ = other.maxBuyin_;
      gameMode_ = other.gameMode_;
      autoStart_ = other.autoStart_;
      tempid_ = other.tempid_;
      rebatePoint_ = other.rebatePoint_;
      rebateHandsNum_ = other.rebateHandsNum_;
      isAutoDelayRoomOver_ = other.isAutoDelayRoomOver_;
      autoDelayRoomOverTimes_ = other.autoDelayRoomOverTimes_;
      isAutoCreateRoom_ = other.isAutoCreateRoom_;
      creatorUserId_ = other.creatorUserId_;
      moduleid_ = other.moduleid_;
      multiOpid_ = other.multiOpid_;
      canUse_ = other.canUse_;
      forbiddenChat_ = other.forbiddenChat_;
      newDefaultBuyin_ = other.newDefaultBuyin_;
      passwdLimit_ = other.passwdLimit_;
      superLeagueid_ = other.superLeagueid_;
      superLeagueType_ = other.superLeagueType_;
      deriveRoomid_ = other.deriveRoomid_;
      isBanPc_ = other.isBanPc_;
      isCheckMail_ = other.isCheckMail_;
      forbiddenChatMode_ = other.forbiddenChatMode_;
      banClub_ = other.banClub_.Clone();
      banCountry_ = other.banCountry_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatePineRoomREQ Clone() {
      return new CreatePineRoomREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 1) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 2;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 2) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "seat_num" field.</summary>
    public const int SeatNumFieldNumber = 3;
    private readonly static int SeatNumDefaultValue = 0;

    private int seatNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SeatNum {
      get { if ((_hasBits0 & 4) != 0) { return seatNum_; } else { return SeatNumDefaultValue; } }
      set {
        _hasBits0 |= 4;
        seatNum_ = value;
      }
    }
    /// <summary>Gets whether the "seat_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatNum {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "seat_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatNum() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "room_name" field.</summary>
    public const int RoomNameFieldNumber = 4;
    private readonly static string RoomNameDefaultValue = "";

    private string roomName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomName {
      get { return roomName_ ?? RoomNameDefaultValue; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "room_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomName {
      get { return roomName_ != null; }
    }
    /// <summary>Clears the value of the "room_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomName() {
      roomName_ = null;
    }

    /// <summary>Field number for the "action_time" field.</summary>
    public const int ActionTimeFieldNumber = 5;
    private readonly static int ActionTimeDefaultValue = 0;

    private int actionTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActionTime {
      get { if ((_hasBits0 & 8) != 0) { return actionTime_; } else { return ActionTimeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        actionTime_ = value;
      }
    }
    /// <summary>Gets whether the "action_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActionTime {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "action_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActionTime() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "base_score" field.</summary>
    public const int BaseScoreFieldNumber = 6;
    private readonly static long BaseScoreDefaultValue = 0L;

    private long baseScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BaseScore {
      get { if ((_hasBits0 & 16) != 0) { return baseScore_; } else { return BaseScoreDefaultValue; } }
      set {
        _hasBits0 |= 16;
        baseScore_ = value;
      }
    }
    /// <summary>Gets whether the "base_score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBaseScore {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "base_score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBaseScore() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "default_buyin" field.</summary>
    public const int DefaultBuyinFieldNumber = 7;
    private readonly static int DefaultBuyinDefaultValue = 0;

    private int defaultBuyin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DefaultBuyin {
      get { if ((_hasBits0 & 32) != 0) { return defaultBuyin_; } else { return DefaultBuyinDefaultValue; } }
      set {
        _hasBits0 |= 32;
        defaultBuyin_ = value;
      }
    }
    /// <summary>Gets whether the "default_buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDefaultBuyin {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "default_buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDefaultBuyin() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "min_buyin" field.</summary>
    public const int MinBuyinFieldNumber = 8;
    private readonly static long MinBuyinDefaultValue = 0L;

    private long minBuyin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinBuyin {
      get { if ((_hasBits0 & 64) != 0) { return minBuyin_; } else { return MinBuyinDefaultValue; } }
      set {
        _hasBits0 |= 64;
        minBuyin_ = value;
      }
    }
    /// <summary>Gets whether the "min_buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinBuyin {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "min_buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinBuyin() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "action_type" field.</summary>
    public const int ActionTypeFieldNumber = 9;
    private readonly static int ActionTypeDefaultValue = 0;

    private int actionType_;
    /// <summary>
    ///1、同时操作  2、顺序操作
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActionType {
      get { if ((_hasBits0 & 128) != 0) { return actionType_; } else { return ActionTypeDefaultValue; } }
      set {
        _hasBits0 |= 128;
        actionType_ = value;
      }
    }
    /// <summary>Gets whether the "action_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActionType {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "action_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActionType() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "feepoint" field.</summary>
    public const int FeepointFieldNumber = 10;
    private readonly static int FeepointDefaultValue = 0;

    private int feepoint_;
    /// <summary>
    ///fee比例，2代表%2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Feepoint {
      get { if ((_hasBits0 & 256) != 0) { return feepoint_; } else { return FeepointDefaultValue; } }
      set {
        _hasBits0 |= 256;
        feepoint_ = value;
      }
    }
    /// <summary>Gets whether the "feepoint" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFeepoint {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "feepoint" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFeepoint() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "feecap" field.</summary>
    public const int FeecapFieldNumber = 11;
    private readonly static int FeecapDefaultValue = 0;

    private int feecap_;
    /// <summary>
    ///fee封頂
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Feecap {
      get { if ((_hasBits0 & 512) != 0) { return feecap_; } else { return FeecapDefaultValue; } }
      set {
        _hasBits0 |= 512;
        feecap_ = value;
      }
    }
    /// <summary>Gets whether the "feecap" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFeecap {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "feecap" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFeecap() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "game_time" field.</summary>
    public const int GameTimeFieldNumber = 12;
    private readonly static int GameTimeDefaultValue = 0;

    private int gameTime_;
    /// <summary>
    ///游戏时间,0表示无限制
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameTime {
      get { if ((_hasBits0 & 1024) != 0) { return gameTime_; } else { return GameTimeDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        gameTime_ = value;
      }
    }
    /// <summary>Gets whether the "game_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameTime {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "game_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameTime() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "gps_limit" field.</summary>
    public const int GpsLimitFieldNumber = 13;
    private readonly static bool GpsLimitDefaultValue = false;

    private bool gpsLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GpsLimit {
      get { if ((_hasBits0 & 2048) != 0) { return gpsLimit_; } else { return GpsLimitDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        gpsLimit_ = value;
      }
    }
    /// <summary>Gets whether the "gps_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpsLimit {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "gps_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpsLimit() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "ip_limit" field.</summary>
    public const int IpLimitFieldNumber = 14;
    private readonly static bool IpLimitDefaultValue = false;

    private bool ipLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IpLimit {
      get { if ((_hasBits0 & 4096) != 0) { return ipLimit_; } else { return IpLimitDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        ipLimit_ = value;
      }
    }
    /// <summary>Gets whether the "ip_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIpLimit {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "ip_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIpLimit() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "timezone" field.</summary>
    public const int TimezoneFieldNumber = 15;
    private readonly static int TimezoneDefaultValue = 0;

    private int timezone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Timezone {
      get { if ((_hasBits0 & 8192) != 0) { return timezone_; } else { return TimezoneDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        timezone_ = value;
      }
    }
    /// <summary>Gets whether the "timezone" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimezone {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "timezone" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimezone() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "max_buyin" field.</summary>
    public const int MaxBuyinFieldNumber = 16;
    private readonly static long MaxBuyinDefaultValue = 0L;

    private long maxBuyin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaxBuyin {
      get { if ((_hasBits0 & 16384) != 0) { return maxBuyin_; } else { return MaxBuyinDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        maxBuyin_ = value;
      }
    }
    /// <summary>Gets whether the "max_buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxBuyin {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "max_buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxBuyin() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "game_mode" field.</summary>
    public const int GameModeFieldNumber = 17;
    private readonly static global::Texas.Protocol.GameMode GameModeDefaultValue = global::Texas.Protocol.GameMode.Regular;

    private global::Texas.Protocol.GameMode gameMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.GameMode GameMode {
      get { if ((_hasBits0 & 32768) != 0) { return gameMode_; } else { return GameModeDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        gameMode_ = value;
      }
    }
    /// <summary>Gets whether the "game_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameMode {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "game_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameMode() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "auto_start" field.</summary>
    public const int AutoStartFieldNumber = 18;
    private readonly static int AutoStartDefaultValue = 0;

    private int autoStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AutoStart {
      get { if ((_hasBits0 & 65536) != 0) { return autoStart_; } else { return AutoStartDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        autoStart_ = value;
      }
    }
    /// <summary>Gets whether the "auto_start" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAutoStart {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "auto_start" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAutoStart() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "tempid" field.</summary>
    public const int TempidFieldNumber = 19;
    private readonly static string TempidDefaultValue = "";

    private string tempid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tempid {
      get { return tempid_ ?? TempidDefaultValue; }
      set {
        tempid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tempid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTempid {
      get { return tempid_ != null; }
    }
    /// <summary>Clears the value of the "tempid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTempid() {
      tempid_ = null;
    }

    /// <summary>Field number for the "rebate_point" field.</summary>
    public const int RebatePointFieldNumber = 20;
    private readonly static long RebatePointDefaultValue = 0L;

    private long rebatePoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RebatePoint {
      get { if ((_hasBits0 & 131072) != 0) { return rebatePoint_; } else { return RebatePointDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        rebatePoint_ = value;
      }
    }
    /// <summary>Gets whether the "rebate_point" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRebatePoint {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "rebate_point" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRebatePoint() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "rebate_hands_num" field.</summary>
    public const int RebateHandsNumFieldNumber = 21;
    private readonly static long RebateHandsNumDefaultValue = 0L;

    private long rebateHandsNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RebateHandsNum {
      get { if ((_hasBits0 & 262144) != 0) { return rebateHandsNum_; } else { return RebateHandsNumDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        rebateHandsNum_ = value;
      }
    }
    /// <summary>Gets whether the "rebate_hands_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRebateHandsNum {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "rebate_hands_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRebateHandsNum() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "is_auto_delay_room_over" field.</summary>
    public const int IsAutoDelayRoomOverFieldNumber = 22;
    private readonly static bool IsAutoDelayRoomOverDefaultValue = false;

    private bool isAutoDelayRoomOver_;
    /// <summary>
    ///是否自动延时
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAutoDelayRoomOver {
      get { if ((_hasBits0 & 524288) != 0) { return isAutoDelayRoomOver_; } else { return IsAutoDelayRoomOverDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        isAutoDelayRoomOver_ = value;
      }
    }
    /// <summary>Gets whether the "is_auto_delay_room_over" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsAutoDelayRoomOver {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "is_auto_delay_room_over" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsAutoDelayRoomOver() {
      _hasBits0 &= ~524288;
    }

    /// <summary>Field number for the "auto_delay_room_over_times" field.</summary>
    public const int AutoDelayRoomOverTimesFieldNumber = 23;
    private readonly static int AutoDelayRoomOverTimesDefaultValue = 0;

    private int autoDelayRoomOverTimes_;
    /// <summary>
    ///自动延时次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AutoDelayRoomOverTimes {
      get { if ((_hasBits0 & 1048576) != 0) { return autoDelayRoomOverTimes_; } else { return AutoDelayRoomOverTimesDefaultValue; } }
      set {
        _hasBits0 |= 1048576;
        autoDelayRoomOverTimes_ = value;
      }
    }
    /// <summary>Gets whether the "auto_delay_room_over_times" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAutoDelayRoomOverTimes {
      get { return (_hasBits0 & 1048576) != 0; }
    }
    /// <summary>Clears the value of the "auto_delay_room_over_times" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAutoDelayRoomOverTimes() {
      _hasBits0 &= ~1048576;
    }

    /// <summary>Field number for the "is_auto_create_room" field.</summary>
    public const int IsAutoCreateRoomFieldNumber = 24;
    private readonly static bool IsAutoCreateRoomDefaultValue = false;

    private bool isAutoCreateRoom_;
    /// <summary>
    ///是否自动开桌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAutoCreateRoom {
      get { if ((_hasBits0 & 2097152) != 0) { return isAutoCreateRoom_; } else { return IsAutoCreateRoomDefaultValue; } }
      set {
        _hasBits0 |= 2097152;
        isAutoCreateRoom_ = value;
      }
    }
    /// <summary>Gets whether the "is_auto_create_room" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsAutoCreateRoom {
      get { return (_hasBits0 & 2097152) != 0; }
    }
    /// <summary>Clears the value of the "is_auto_create_room" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsAutoCreateRoom() {
      _hasBits0 &= ~2097152;
    }

    /// <summary>Field number for the "creator_user_id" field.</summary>
    public const int CreatorUserIdFieldNumber = 25;
    private readonly static long CreatorUserIdDefaultValue = 0L;

    private long creatorUserId_;
    /// <summary>
    ///创建者用户ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CreatorUserId {
      get { if ((_hasBits0 & 4194304) != 0) { return creatorUserId_; } else { return CreatorUserIdDefaultValue; } }
      set {
        _hasBits0 |= 4194304;
        creatorUserId_ = value;
      }
    }
    /// <summary>Gets whether the "creator_user_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCreatorUserId {
      get { return (_hasBits0 & 4194304) != 0; }
    }
    /// <summary>Clears the value of the "creator_user_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCreatorUserId() {
      _hasBits0 &= ~4194304;
    }

    /// <summary>Field number for the "moduleid" field.</summary>
    public const int ModuleidFieldNumber = 26;
    private readonly static long ModuleidDefaultValue = 0L;

    private long moduleid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Moduleid {
      get { if ((_hasBits0 & 8388608) != 0) { return moduleid_; } else { return ModuleidDefaultValue; } }
      set {
        _hasBits0 |= 8388608;
        moduleid_ = value;
      }
    }
    /// <summary>Gets whether the "moduleid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModuleid {
      get { return (_hasBits0 & 8388608) != 0; }
    }
    /// <summary>Clears the value of the "moduleid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModuleid() {
      _hasBits0 &= ~8388608;
    }

    /// <summary>Field number for the "multi_opid" field.</summary>
    public const int MultiOpidFieldNumber = 27;
    private readonly static string MultiOpidDefaultValue = "";

    private string multiOpid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MultiOpid {
      get { return multiOpid_ ?? MultiOpidDefaultValue; }
      set {
        multiOpid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "multi_opid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMultiOpid {
      get { return multiOpid_ != null; }
    }
    /// <summary>Clears the value of the "multi_opid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMultiOpid() {
      multiOpid_ = null;
    }

    /// <summary>Field number for the "can_use" field.</summary>
    public const int CanUseFieldNumber = 28;
    private readonly static bool CanUseDefaultValue = false;

    private bool canUse_;
    /// <summary>
    /// is module can use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanUse {
      get { if ((_hasBits0 & 16777216) != 0) { return canUse_; } else { return CanUseDefaultValue; } }
      set {
        _hasBits0 |= 16777216;
        canUse_ = value;
      }
    }
    /// <summary>Gets whether the "can_use" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCanUse {
      get { return (_hasBits0 & 16777216) != 0; }
    }
    /// <summary>Clears the value of the "can_use" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCanUse() {
      _hasBits0 &= ~16777216;
    }

    /// <summary>Field number for the "forbidden_chat" field.</summary>
    public const int ForbiddenChatFieldNumber = 29;
    private readonly static bool ForbiddenChatDefaultValue = false;

    private bool forbiddenChat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ForbiddenChat {
      get { if ((_hasBits0 & 33554432) != 0) { return forbiddenChat_; } else { return ForbiddenChatDefaultValue; } }
      set {
        _hasBits0 |= 33554432;
        forbiddenChat_ = value;
      }
    }
    /// <summary>Gets whether the "forbidden_chat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForbiddenChat {
      get { return (_hasBits0 & 33554432) != 0; }
    }
    /// <summary>Clears the value of the "forbidden_chat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForbiddenChat() {
      _hasBits0 &= ~33554432;
    }

    /// <summary>Field number for the "new_default_buyin" field.</summary>
    public const int NewDefaultBuyinFieldNumber = 30;
    private readonly static long NewDefaultBuyinDefaultValue = 0L;

    private long newDefaultBuyin_;
    /// <summary>
    ///大厅大菠萝中用于代替int32的default_buyin字段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NewDefaultBuyin {
      get { if ((_hasBits0 & 67108864) != 0) { return newDefaultBuyin_; } else { return NewDefaultBuyinDefaultValue; } }
      set {
        _hasBits0 |= 67108864;
        newDefaultBuyin_ = value;
      }
    }
    /// <summary>Gets whether the "new_default_buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNewDefaultBuyin {
      get { return (_hasBits0 & 67108864) != 0; }
    }
    /// <summary>Clears the value of the "new_default_buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNewDefaultBuyin() {
      _hasBits0 &= ~67108864;
    }

    /// <summary>Field number for the "passwd_limit" field.</summary>
    public const int PasswdLimitFieldNumber = 31;
    private readonly static bool PasswdLimitDefaultValue = false;

    private bool passwdLimit_;
    /// <summary>
    /// passwd room
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PasswdLimit {
      get { if ((_hasBits0 & 134217728) != 0) { return passwdLimit_; } else { return PasswdLimitDefaultValue; } }
      set {
        _hasBits0 |= 134217728;
        passwdLimit_ = value;
      }
    }
    /// <summary>Gets whether the "passwd_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPasswdLimit {
      get { return (_hasBits0 & 134217728) != 0; }
    }
    /// <summary>Clears the value of the "passwd_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPasswdLimit() {
      _hasBits0 &= ~134217728;
    }

    /// <summary>Field number for the "super_leagueid" field.</summary>
    public const int SuperLeagueidFieldNumber = 32;
    private readonly static int SuperLeagueidDefaultValue = 0;

    private int superLeagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueid {
      get { if ((_hasBits0 & 268435456) != 0) { return superLeagueid_; } else { return SuperLeagueidDefaultValue; } }
      set {
        _hasBits0 |= 268435456;
        superLeagueid_ = value;
      }
    }
    /// <summary>Gets whether the "super_leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueid {
      get { return (_hasBits0 & 268435456) != 0; }
    }
    /// <summary>Clears the value of the "super_leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueid() {
      _hasBits0 &= ~268435456;
    }

    /// <summary>Field number for the "super_league_type" field.</summary>
    public const int SuperLeagueTypeFieldNumber = 33;
    private readonly static int SuperLeagueTypeDefaultValue = 0;

    private int superLeagueType_;
    /// <summary>
    ///1表示非ppst的超级联盟
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueType {
      get { if ((_hasBits0 & 536870912) != 0) { return superLeagueType_; } else { return SuperLeagueTypeDefaultValue; } }
      set {
        _hasBits0 |= 536870912;
        superLeagueType_ = value;
      }
    }
    /// <summary>Gets whether the "super_league_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueType {
      get { return (_hasBits0 & 536870912) != 0; }
    }
    /// <summary>Clears the value of the "super_league_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueType() {
      _hasBits0 &= ~536870912;
    }

    /// <summary>Field number for the "derive_roomid" field.</summary>
    public const int DeriveRoomidFieldNumber = 34;
    private readonly static int DeriveRoomidDefaultValue = 0;

    private int deriveRoomid_;
    /// <summary>
    ///该房间的自动创桌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DeriveRoomid {
      get { if ((_hasBits0 & 1073741824) != 0) { return deriveRoomid_; } else { return DeriveRoomidDefaultValue; } }
      set {
        _hasBits0 |= 1073741824;
        deriveRoomid_ = value;
      }
    }
    /// <summary>Gets whether the "derive_roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeriveRoomid {
      get { return (_hasBits0 & 1073741824) != 0; }
    }
    /// <summary>Clears the value of the "derive_roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeriveRoomid() {
      _hasBits0 &= ~1073741824;
    }

    /// <summary>Field number for the "is_ban_pc" field.</summary>
    public const int IsBanPcFieldNumber = 35;
    private readonly static bool IsBanPcDefaultValue = false;

    private bool isBanPc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBanPc {
      get { if ((_hasBits0 & -2147483648) != 0) { return isBanPc_; } else { return IsBanPcDefaultValue; } }
      set {
        _hasBits0 |= -2147483648;
        isBanPc_ = value;
      }
    }
    /// <summary>Gets whether the "is_ban_pc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsBanPc {
      get { return (_hasBits0 & -2147483648) != 0; }
    }
    /// <summary>Clears the value of the "is_ban_pc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsBanPc() {
      _hasBits0 &= ~-2147483648;
    }

    /// <summary>Field number for the "is_check_mail" field.</summary>
    public const int IsCheckMailFieldNumber = 36;
    private readonly static bool IsCheckMailDefaultValue = false;

    private bool isCheckMail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCheckMail {
      get { if ((_hasBits1 & 1) != 0) { return isCheckMail_; } else { return IsCheckMailDefaultValue; } }
      set {
        _hasBits1 |= 1;
        isCheckMail_ = value;
      }
    }
    /// <summary>Gets whether the "is_check_mail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsCheckMail {
      get { return (_hasBits1 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_check_mail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsCheckMail() {
      _hasBits1 &= ~1;
    }

    /// <summary>Field number for the "forbidden_chat_mode" field.</summary>
    public const int ForbiddenChatModeFieldNumber = 37;
    private readonly static int ForbiddenChatModeDefaultValue = 0;

    private int forbiddenChatMode_;
    /// <summary>
    ///0: 全體禁言 1:看客禁言
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ForbiddenChatMode {
      get { if ((_hasBits1 & 2) != 0) { return forbiddenChatMode_; } else { return ForbiddenChatModeDefaultValue; } }
      set {
        _hasBits1 |= 2;
        forbiddenChatMode_ = value;
      }
    }
    /// <summary>Gets whether the "forbidden_chat_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForbiddenChatMode {
      get { return (_hasBits1 & 2) != 0; }
    }
    /// <summary>Clears the value of the "forbidden_chat_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForbiddenChatMode() {
      _hasBits1 &= ~2;
    }

    /// <summary>Field number for the "ban_club" field.</summary>
    public const int BanClubFieldNumber = 38;
    private static readonly pb::FieldCodec<int> _repeated_banClub_codec
        = pb::FieldCodec.ForInt32(306);
    private readonly pbc::RepeatedField<int> banClub_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// restriction for clubs and regions
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> BanClub {
      get { return banClub_; }
    }

    /// <summary>Field number for the "ban_country" field.</summary>
    public const int BanCountryFieldNumber = 39;
    private static readonly pb::FieldCodec<string> _repeated_banCountry_codec
        = pb::FieldCodec.ForString(314);
    private readonly pbc::RepeatedField<string> banCountry_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 限制注册地为某些国家的用户不能看到和加入牌桌，缩写
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> BanCountry {
      get { return banCountry_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatePineRoomREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatePineRoomREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (SeatNum != other.SeatNum) return false;
      if (RoomName != other.RoomName) return false;
      if (ActionTime != other.ActionTime) return false;
      if (BaseScore != other.BaseScore) return false;
      if (DefaultBuyin != other.DefaultBuyin) return false;
      if (MinBuyin != other.MinBuyin) return false;
      if (ActionType != other.ActionType) return false;
      if (Feepoint != other.Feepoint) return false;
      if (Feecap != other.Feecap) return false;
      if (GameTime != other.GameTime) return false;
      if (GpsLimit != other.GpsLimit) return false;
      if (IpLimit != other.IpLimit) return false;
      if (Timezone != other.Timezone) return false;
      if (MaxBuyin != other.MaxBuyin) return false;
      if (GameMode != other.GameMode) return false;
      if (AutoStart != other.AutoStart) return false;
      if (Tempid != other.Tempid) return false;
      if (RebatePoint != other.RebatePoint) return false;
      if (RebateHandsNum != other.RebateHandsNum) return false;
      if (IsAutoDelayRoomOver != other.IsAutoDelayRoomOver) return false;
      if (AutoDelayRoomOverTimes != other.AutoDelayRoomOverTimes) return false;
      if (IsAutoCreateRoom != other.IsAutoCreateRoom) return false;
      if (CreatorUserId != other.CreatorUserId) return false;
      if (Moduleid != other.Moduleid) return false;
      if (MultiOpid != other.MultiOpid) return false;
      if (CanUse != other.CanUse) return false;
      if (ForbiddenChat != other.ForbiddenChat) return false;
      if (NewDefaultBuyin != other.NewDefaultBuyin) return false;
      if (PasswdLimit != other.PasswdLimit) return false;
      if (SuperLeagueid != other.SuperLeagueid) return false;
      if (SuperLeagueType != other.SuperLeagueType) return false;
      if (DeriveRoomid != other.DeriveRoomid) return false;
      if (IsBanPc != other.IsBanPc) return false;
      if (IsCheckMail != other.IsCheckMail) return false;
      if (ForbiddenChatMode != other.ForbiddenChatMode) return false;
      if(!banClub_.Equals(other.banClub_)) return false;
      if(!banCountry_.Equals(other.banCountry_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasSeatNum) hash ^= SeatNum.GetHashCode();
      if (HasRoomName) hash ^= RoomName.GetHashCode();
      if (HasActionTime) hash ^= ActionTime.GetHashCode();
      if (HasBaseScore) hash ^= BaseScore.GetHashCode();
      if (HasDefaultBuyin) hash ^= DefaultBuyin.GetHashCode();
      if (HasMinBuyin) hash ^= MinBuyin.GetHashCode();
      if (HasActionType) hash ^= ActionType.GetHashCode();
      if (HasFeepoint) hash ^= Feepoint.GetHashCode();
      if (HasFeecap) hash ^= Feecap.GetHashCode();
      if (HasGameTime) hash ^= GameTime.GetHashCode();
      if (HasGpsLimit) hash ^= GpsLimit.GetHashCode();
      if (HasIpLimit) hash ^= IpLimit.GetHashCode();
      if (HasTimezone) hash ^= Timezone.GetHashCode();
      if (HasMaxBuyin) hash ^= MaxBuyin.GetHashCode();
      if (HasGameMode) hash ^= GameMode.GetHashCode();
      if (HasAutoStart) hash ^= AutoStart.GetHashCode();
      if (HasTempid) hash ^= Tempid.GetHashCode();
      if (HasRebatePoint) hash ^= RebatePoint.GetHashCode();
      if (HasRebateHandsNum) hash ^= RebateHandsNum.GetHashCode();
      if (HasIsAutoDelayRoomOver) hash ^= IsAutoDelayRoomOver.GetHashCode();
      if (HasAutoDelayRoomOverTimes) hash ^= AutoDelayRoomOverTimes.GetHashCode();
      if (HasIsAutoCreateRoom) hash ^= IsAutoCreateRoom.GetHashCode();
      if (HasCreatorUserId) hash ^= CreatorUserId.GetHashCode();
      if (HasModuleid) hash ^= Moduleid.GetHashCode();
      if (HasMultiOpid) hash ^= MultiOpid.GetHashCode();
      if (HasCanUse) hash ^= CanUse.GetHashCode();
      if (HasForbiddenChat) hash ^= ForbiddenChat.GetHashCode();
      if (HasNewDefaultBuyin) hash ^= NewDefaultBuyin.GetHashCode();
      if (HasPasswdLimit) hash ^= PasswdLimit.GetHashCode();
      if (HasSuperLeagueid) hash ^= SuperLeagueid.GetHashCode();
      if (HasSuperLeagueType) hash ^= SuperLeagueType.GetHashCode();
      if (HasDeriveRoomid) hash ^= DeriveRoomid.GetHashCode();
      if (HasIsBanPc) hash ^= IsBanPc.GetHashCode();
      if (HasIsCheckMail) hash ^= IsCheckMail.GetHashCode();
      if (HasForbiddenChatMode) hash ^= ForbiddenChatMode.GetHashCode();
      hash ^= banClub_.GetHashCode();
      hash ^= banCountry_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(8);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasSeatNum) {
        output.WriteRawTag(24);
        output.WriteInt32(SeatNum);
      }
      if (HasRoomName) {
        output.WriteRawTag(34);
        output.WriteString(RoomName);
      }
      if (HasActionTime) {
        output.WriteRawTag(40);
        output.WriteInt32(ActionTime);
      }
      if (HasBaseScore) {
        output.WriteRawTag(48);
        output.WriteInt64(BaseScore);
      }
      if (HasDefaultBuyin) {
        output.WriteRawTag(56);
        output.WriteInt32(DefaultBuyin);
      }
      if (HasMinBuyin) {
        output.WriteRawTag(64);
        output.WriteInt64(MinBuyin);
      }
      if (HasActionType) {
        output.WriteRawTag(72);
        output.WriteInt32(ActionType);
      }
      if (HasFeepoint) {
        output.WriteRawTag(80);
        output.WriteInt32(Feepoint);
      }
      if (HasFeecap) {
        output.WriteRawTag(88);
        output.WriteInt32(Feecap);
      }
      if (HasGameTime) {
        output.WriteRawTag(96);
        output.WriteInt32(GameTime);
      }
      if (HasGpsLimit) {
        output.WriteRawTag(104);
        output.WriteBool(GpsLimit);
      }
      if (HasIpLimit) {
        output.WriteRawTag(112);
        output.WriteBool(IpLimit);
      }
      if (HasTimezone) {
        output.WriteRawTag(120);
        output.WriteInt32(Timezone);
      }
      if (HasMaxBuyin) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(MaxBuyin);
      }
      if (HasGameMode) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) GameMode);
      }
      if (HasAutoStart) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(AutoStart);
      }
      if (HasTempid) {
        output.WriteRawTag(154, 1);
        output.WriteString(Tempid);
      }
      if (HasRebatePoint) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(RebatePoint);
      }
      if (HasRebateHandsNum) {
        output.WriteRawTag(168, 1);
        output.WriteInt64(RebateHandsNum);
      }
      if (HasIsAutoDelayRoomOver) {
        output.WriteRawTag(176, 1);
        output.WriteBool(IsAutoDelayRoomOver);
      }
      if (HasAutoDelayRoomOverTimes) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(AutoDelayRoomOverTimes);
      }
      if (HasIsAutoCreateRoom) {
        output.WriteRawTag(192, 1);
        output.WriteBool(IsAutoCreateRoom);
      }
      if (HasCreatorUserId) {
        output.WriteRawTag(200, 1);
        output.WriteInt64(CreatorUserId);
      }
      if (HasModuleid) {
        output.WriteRawTag(208, 1);
        output.WriteInt64(Moduleid);
      }
      if (HasMultiOpid) {
        output.WriteRawTag(218, 1);
        output.WriteString(MultiOpid);
      }
      if (HasCanUse) {
        output.WriteRawTag(224, 1);
        output.WriteBool(CanUse);
      }
      if (HasForbiddenChat) {
        output.WriteRawTag(232, 1);
        output.WriteBool(ForbiddenChat);
      }
      if (HasNewDefaultBuyin) {
        output.WriteRawTag(240, 1);
        output.WriteInt64(NewDefaultBuyin);
      }
      if (HasPasswdLimit) {
        output.WriteRawTag(248, 1);
        output.WriteBool(PasswdLimit);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(128, 2);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasSuperLeagueType) {
        output.WriteRawTag(136, 2);
        output.WriteInt32(SuperLeagueType);
      }
      if (HasDeriveRoomid) {
        output.WriteRawTag(144, 2);
        output.WriteInt32(DeriveRoomid);
      }
      if (HasIsBanPc) {
        output.WriteRawTag(152, 2);
        output.WriteBool(IsBanPc);
      }
      if (HasIsCheckMail) {
        output.WriteRawTag(160, 2);
        output.WriteBool(IsCheckMail);
      }
      if (HasForbiddenChatMode) {
        output.WriteRawTag(168, 2);
        output.WriteInt32(ForbiddenChatMode);
      }
      banClub_.WriteTo(output, _repeated_banClub_codec);
      banCountry_.WriteTo(output, _repeated_banCountry_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(8);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasSeatNum) {
        output.WriteRawTag(24);
        output.WriteInt32(SeatNum);
      }
      if (HasRoomName) {
        output.WriteRawTag(34);
        output.WriteString(RoomName);
      }
      if (HasActionTime) {
        output.WriteRawTag(40);
        output.WriteInt32(ActionTime);
      }
      if (HasBaseScore) {
        output.WriteRawTag(48);
        output.WriteInt64(BaseScore);
      }
      if (HasDefaultBuyin) {
        output.WriteRawTag(56);
        output.WriteInt32(DefaultBuyin);
      }
      if (HasMinBuyin) {
        output.WriteRawTag(64);
        output.WriteInt64(MinBuyin);
      }
      if (HasActionType) {
        output.WriteRawTag(72);
        output.WriteInt32(ActionType);
      }
      if (HasFeepoint) {
        output.WriteRawTag(80);
        output.WriteInt32(Feepoint);
      }
      if (HasFeecap) {
        output.WriteRawTag(88);
        output.WriteInt32(Feecap);
      }
      if (HasGameTime) {
        output.WriteRawTag(96);
        output.WriteInt32(GameTime);
      }
      if (HasGpsLimit) {
        output.WriteRawTag(104);
        output.WriteBool(GpsLimit);
      }
      if (HasIpLimit) {
        output.WriteRawTag(112);
        output.WriteBool(IpLimit);
      }
      if (HasTimezone) {
        output.WriteRawTag(120);
        output.WriteInt32(Timezone);
      }
      if (HasMaxBuyin) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(MaxBuyin);
      }
      if (HasGameMode) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) GameMode);
      }
      if (HasAutoStart) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(AutoStart);
      }
      if (HasTempid) {
        output.WriteRawTag(154, 1);
        output.WriteString(Tempid);
      }
      if (HasRebatePoint) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(RebatePoint);
      }
      if (HasRebateHandsNum) {
        output.WriteRawTag(168, 1);
        output.WriteInt64(RebateHandsNum);
      }
      if (HasIsAutoDelayRoomOver) {
        output.WriteRawTag(176, 1);
        output.WriteBool(IsAutoDelayRoomOver);
      }
      if (HasAutoDelayRoomOverTimes) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(AutoDelayRoomOverTimes);
      }
      if (HasIsAutoCreateRoom) {
        output.WriteRawTag(192, 1);
        output.WriteBool(IsAutoCreateRoom);
      }
      if (HasCreatorUserId) {
        output.WriteRawTag(200, 1);
        output.WriteInt64(CreatorUserId);
      }
      if (HasModuleid) {
        output.WriteRawTag(208, 1);
        output.WriteInt64(Moduleid);
      }
      if (HasMultiOpid) {
        output.WriteRawTag(218, 1);
        output.WriteString(MultiOpid);
      }
      if (HasCanUse) {
        output.WriteRawTag(224, 1);
        output.WriteBool(CanUse);
      }
      if (HasForbiddenChat) {
        output.WriteRawTag(232, 1);
        output.WriteBool(ForbiddenChat);
      }
      if (HasNewDefaultBuyin) {
        output.WriteRawTag(240, 1);
        output.WriteInt64(NewDefaultBuyin);
      }
      if (HasPasswdLimit) {
        output.WriteRawTag(248, 1);
        output.WriteBool(PasswdLimit);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(128, 2);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasSuperLeagueType) {
        output.WriteRawTag(136, 2);
        output.WriteInt32(SuperLeagueType);
      }
      if (HasDeriveRoomid) {
        output.WriteRawTag(144, 2);
        output.WriteInt32(DeriveRoomid);
      }
      if (HasIsBanPc) {
        output.WriteRawTag(152, 2);
        output.WriteBool(IsBanPc);
      }
      if (HasIsCheckMail) {
        output.WriteRawTag(160, 2);
        output.WriteBool(IsCheckMail);
      }
      if (HasForbiddenChatMode) {
        output.WriteRawTag(168, 2);
        output.WriteInt32(ForbiddenChatMode);
      }
      banClub_.WriteTo(ref output, _repeated_banClub_codec);
      banCountry_.WriteTo(ref output, _repeated_banCountry_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasSeatNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SeatNum);
      }
      if (HasRoomName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (HasActionTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionTime);
      }
      if (HasBaseScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BaseScore);
      }
      if (HasDefaultBuyin) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DefaultBuyin);
      }
      if (HasMinBuyin) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinBuyin);
      }
      if (HasActionType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionType);
      }
      if (HasFeepoint) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Feepoint);
      }
      if (HasFeecap) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Feecap);
      }
      if (HasGameTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameTime);
      }
      if (HasGpsLimit) {
        size += 1 + 1;
      }
      if (HasIpLimit) {
        size += 1 + 1;
      }
      if (HasTimezone) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Timezone);
      }
      if (HasMaxBuyin) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(MaxBuyin);
      }
      if (HasGameMode) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
      }
      if (HasAutoStart) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AutoStart);
      }
      if (HasTempid) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Tempid);
      }
      if (HasRebatePoint) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(RebatePoint);
      }
      if (HasRebateHandsNum) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(RebateHandsNum);
      }
      if (HasIsAutoDelayRoomOver) {
        size += 2 + 1;
      }
      if (HasAutoDelayRoomOverTimes) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AutoDelayRoomOverTimes);
      }
      if (HasIsAutoCreateRoom) {
        size += 2 + 1;
      }
      if (HasCreatorUserId) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(CreatorUserId);
      }
      if (HasModuleid) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Moduleid);
      }
      if (HasMultiOpid) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MultiOpid);
      }
      if (HasCanUse) {
        size += 2 + 1;
      }
      if (HasForbiddenChat) {
        size += 2 + 1;
      }
      if (HasNewDefaultBuyin) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(NewDefaultBuyin);
      }
      if (HasPasswdLimit) {
        size += 2 + 1;
      }
      if (HasSuperLeagueid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueid);
      }
      if (HasSuperLeagueType) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueType);
      }
      if (HasDeriveRoomid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DeriveRoomid);
      }
      if (HasIsBanPc) {
        size += 2 + 1;
      }
      if (HasIsCheckMail) {
        size += 2 + 1;
      }
      if (HasForbiddenChatMode) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ForbiddenChatMode);
      }
      size += banClub_.CalculateSize(_repeated_banClub_codec);
      size += banCountry_.CalculateSize(_repeated_banCountry_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatePineRoomREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasSeatNum) {
        SeatNum = other.SeatNum;
      }
      if (other.HasRoomName) {
        RoomName = other.RoomName;
      }
      if (other.HasActionTime) {
        ActionTime = other.ActionTime;
      }
      if (other.HasBaseScore) {
        BaseScore = other.BaseScore;
      }
      if (other.HasDefaultBuyin) {
        DefaultBuyin = other.DefaultBuyin;
      }
      if (other.HasMinBuyin) {
        MinBuyin = other.MinBuyin;
      }
      if (other.HasActionType) {
        ActionType = other.ActionType;
      }
      if (other.HasFeepoint) {
        Feepoint = other.Feepoint;
      }
      if (other.HasFeecap) {
        Feecap = other.Feecap;
      }
      if (other.HasGameTime) {
        GameTime = other.GameTime;
      }
      if (other.HasGpsLimit) {
        GpsLimit = other.GpsLimit;
      }
      if (other.HasIpLimit) {
        IpLimit = other.IpLimit;
      }
      if (other.HasTimezone) {
        Timezone = other.Timezone;
      }
      if (other.HasMaxBuyin) {
        MaxBuyin = other.MaxBuyin;
      }
      if (other.HasGameMode) {
        GameMode = other.GameMode;
      }
      if (other.HasAutoStart) {
        AutoStart = other.AutoStart;
      }
      if (other.HasTempid) {
        Tempid = other.Tempid;
      }
      if (other.HasRebatePoint) {
        RebatePoint = other.RebatePoint;
      }
      if (other.HasRebateHandsNum) {
        RebateHandsNum = other.RebateHandsNum;
      }
      if (other.HasIsAutoDelayRoomOver) {
        IsAutoDelayRoomOver = other.IsAutoDelayRoomOver;
      }
      if (other.HasAutoDelayRoomOverTimes) {
        AutoDelayRoomOverTimes = other.AutoDelayRoomOverTimes;
      }
      if (other.HasIsAutoCreateRoom) {
        IsAutoCreateRoom = other.IsAutoCreateRoom;
      }
      if (other.HasCreatorUserId) {
        CreatorUserId = other.CreatorUserId;
      }
      if (other.HasModuleid) {
        Moduleid = other.Moduleid;
      }
      if (other.HasMultiOpid) {
        MultiOpid = other.MultiOpid;
      }
      if (other.HasCanUse) {
        CanUse = other.CanUse;
      }
      if (other.HasForbiddenChat) {
        ForbiddenChat = other.ForbiddenChat;
      }
      if (other.HasNewDefaultBuyin) {
        NewDefaultBuyin = other.NewDefaultBuyin;
      }
      if (other.HasPasswdLimit) {
        PasswdLimit = other.PasswdLimit;
      }
      if (other.HasSuperLeagueid) {
        SuperLeagueid = other.SuperLeagueid;
      }
      if (other.HasSuperLeagueType) {
        SuperLeagueType = other.SuperLeagueType;
      }
      if (other.HasDeriveRoomid) {
        DeriveRoomid = other.DeriveRoomid;
      }
      if (other.HasIsBanPc) {
        IsBanPc = other.IsBanPc;
      }
      if (other.HasIsCheckMail) {
        IsCheckMail = other.IsCheckMail;
      }
      if (other.HasForbiddenChatMode) {
        ForbiddenChatMode = other.ForbiddenChatMode;
      }
      banClub_.Add(other.banClub_);
      banCountry_.Add(other.banCountry_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Clubid = input.ReadInt32();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 34: {
            RoomName = input.ReadString();
            break;
          }
          case 40: {
            ActionTime = input.ReadInt32();
            break;
          }
          case 48: {
            BaseScore = input.ReadInt64();
            break;
          }
          case 56: {
            DefaultBuyin = input.ReadInt32();
            break;
          }
          case 64: {
            MinBuyin = input.ReadInt64();
            break;
          }
          case 72: {
            ActionType = input.ReadInt32();
            break;
          }
          case 80: {
            Feepoint = input.ReadInt32();
            break;
          }
          case 88: {
            Feecap = input.ReadInt32();
            break;
          }
          case 96: {
            GameTime = input.ReadInt32();
            break;
          }
          case 104: {
            GpsLimit = input.ReadBool();
            break;
          }
          case 112: {
            IpLimit = input.ReadBool();
            break;
          }
          case 120: {
            Timezone = input.ReadInt32();
            break;
          }
          case 128: {
            MaxBuyin = input.ReadInt64();
            break;
          }
          case 136: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 144: {
            AutoStart = input.ReadInt32();
            break;
          }
          case 154: {
            Tempid = input.ReadString();
            break;
          }
          case 160: {
            RebatePoint = input.ReadInt64();
            break;
          }
          case 168: {
            RebateHandsNum = input.ReadInt64();
            break;
          }
          case 176: {
            IsAutoDelayRoomOver = input.ReadBool();
            break;
          }
          case 184: {
            AutoDelayRoomOverTimes = input.ReadInt32();
            break;
          }
          case 192: {
            IsAutoCreateRoom = input.ReadBool();
            break;
          }
          case 200: {
            CreatorUserId = input.ReadInt64();
            break;
          }
          case 208: {
            Moduleid = input.ReadInt64();
            break;
          }
          case 218: {
            MultiOpid = input.ReadString();
            break;
          }
          case 224: {
            CanUse = input.ReadBool();
            break;
          }
          case 232: {
            ForbiddenChat = input.ReadBool();
            break;
          }
          case 240: {
            NewDefaultBuyin = input.ReadInt64();
            break;
          }
          case 248: {
            PasswdLimit = input.ReadBool();
            break;
          }
          case 256: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 264: {
            SuperLeagueType = input.ReadInt32();
            break;
          }
          case 272: {
            DeriveRoomid = input.ReadInt32();
            break;
          }
          case 280: {
            IsBanPc = input.ReadBool();
            break;
          }
          case 288: {
            IsCheckMail = input.ReadBool();
            break;
          }
          case 296: {
            ForbiddenChatMode = input.ReadInt32();
            break;
          }
          case 306:
          case 304: {
            banClub_.AddEntriesFrom(input, _repeated_banClub_codec);
            break;
          }
          case 314: {
            banCountry_.AddEntriesFrom(input, _repeated_banCountry_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Clubid = input.ReadInt32();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 34: {
            RoomName = input.ReadString();
            break;
          }
          case 40: {
            ActionTime = input.ReadInt32();
            break;
          }
          case 48: {
            BaseScore = input.ReadInt64();
            break;
          }
          case 56: {
            DefaultBuyin = input.ReadInt32();
            break;
          }
          case 64: {
            MinBuyin = input.ReadInt64();
            break;
          }
          case 72: {
            ActionType = input.ReadInt32();
            break;
          }
          case 80: {
            Feepoint = input.ReadInt32();
            break;
          }
          case 88: {
            Feecap = input.ReadInt32();
            break;
          }
          case 96: {
            GameTime = input.ReadInt32();
            break;
          }
          case 104: {
            GpsLimit = input.ReadBool();
            break;
          }
          case 112: {
            IpLimit = input.ReadBool();
            break;
          }
          case 120: {
            Timezone = input.ReadInt32();
            break;
          }
          case 128: {
            MaxBuyin = input.ReadInt64();
            break;
          }
          case 136: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 144: {
            AutoStart = input.ReadInt32();
            break;
          }
          case 154: {
            Tempid = input.ReadString();
            break;
          }
          case 160: {
            RebatePoint = input.ReadInt64();
            break;
          }
          case 168: {
            RebateHandsNum = input.ReadInt64();
            break;
          }
          case 176: {
            IsAutoDelayRoomOver = input.ReadBool();
            break;
          }
          case 184: {
            AutoDelayRoomOverTimes = input.ReadInt32();
            break;
          }
          case 192: {
            IsAutoCreateRoom = input.ReadBool();
            break;
          }
          case 200: {
            CreatorUserId = input.ReadInt64();
            break;
          }
          case 208: {
            Moduleid = input.ReadInt64();
            break;
          }
          case 218: {
            MultiOpid = input.ReadString();
            break;
          }
          case 224: {
            CanUse = input.ReadBool();
            break;
          }
          case 232: {
            ForbiddenChat = input.ReadBool();
            break;
          }
          case 240: {
            NewDefaultBuyin = input.ReadInt64();
            break;
          }
          case 248: {
            PasswdLimit = input.ReadBool();
            break;
          }
          case 256: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 264: {
            SuperLeagueType = input.ReadInt32();
            break;
          }
          case 272: {
            DeriveRoomid = input.ReadInt32();
            break;
          }
          case 280: {
            IsBanPc = input.ReadBool();
            break;
          }
          case 288: {
            IsCheckMail = input.ReadBool();
            break;
          }
          case 296: {
            ForbiddenChatMode = input.ReadInt32();
            break;
          }
          case 306:
          case 304: {
            banClub_.AddEntriesFrom(ref input, _repeated_banClub_codec);
            break;
          }
          case 314: {
            banCountry_.AddEntriesFrom(ref input, _repeated_banCountry_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///创建大菠萝房间返回
  /// </summary>
  public sealed partial class CreatePineRoomRSP : pb::IMessage<CreatePineRoomRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreatePineRoomRSP> _parser = new pb::MessageParser<CreatePineRoomRSP>(() => new CreatePineRoomRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreatePineRoomRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatePineRoomRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatePineRoomRSP(CreatePineRoomRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      pineroomInfo_ = other.pineroomInfo_ != null ? other.pineroomInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreatePineRoomRSP Clone() {
      return new CreatePineRoomRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///-1 参数错误(或不够砖石)    -2 最低买入大于默认买入    -3 不在灰度测试白名单中    -4 停服不能创建房间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "pineroom_info" field.</summary>
    public const int PineroomInfoFieldNumber = 2;
    private global::Texas.Protocol.PineRoomInfo pineroomInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PineRoomInfo PineroomInfo {
      get { return pineroomInfo_; }
      set {
        pineroomInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreatePineRoomRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreatePineRoomRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(PineroomInfo, other.PineroomInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (pineroomInfo_ != null) hash ^= PineroomInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (pineroomInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PineroomInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (pineroomInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PineroomInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (pineroomInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PineroomInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreatePineRoomRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.pineroomInfo_ != null) {
        if (pineroomInfo_ == null) {
          PineroomInfo = new global::Texas.Protocol.PineRoomInfo();
        }
        PineroomInfo.MergeFrom(other.PineroomInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (pineroomInfo_ == null) {
              PineroomInfo = new global::Texas.Protocol.PineRoomInfo();
            }
            input.ReadMessage(PineroomInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (pineroomInfo_ == null) {
              PineroomInfo = new global::Texas.Protocol.PineRoomInfo();
            }
            input.ReadMessage(PineroomInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PineHandCard : pb::IMessage<PineHandCard>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineHandCard> _parser = new pb::MessageParser<PineHandCard>(() => new PineHandCard());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineHandCard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineHandCard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineHandCard(PineHandCard other) : this() {
      _hasBits0 = other._hasBits0;
      card_ = other.card_.Clone();
      round_ = other.round_;
      fantasy_ = other.fantasy_;
      uid_ = other.uid_;
      seatid_ = other.seatid_;
      addActiontimeDiamond_ = other.addActiontimeDiamond_;
      actionLeftTime_ = other.actionLeftTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineHandCard Clone() {
      return new PineHandCard(this);
    }

    /// <summary>Field number for the "card" field.</summary>
    public const int CardFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_card_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> card_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Card {
      get { return card_; }
    }

    /// <summary>Field number for the "round" field.</summary>
    public const int RoundFieldNumber = 2;
    private readonly static int RoundDefaultValue = 0;

    private int round_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Round {
      get { if ((_hasBits0 & 1) != 0) { return round_; } else { return RoundDefaultValue; } }
      set {
        _hasBits0 |= 1;
        round_ = value;
      }
    }
    /// <summary>Gets whether the "round" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRound {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "round" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRound() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "fantasy" field.</summary>
    public const int FantasyFieldNumber = 3;
    private readonly static int FantasyDefaultValue = 0;

    private int fantasy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Fantasy {
      get { if ((_hasBits0 & 2) != 0) { return fantasy_; } else { return FantasyDefaultValue; } }
      set {
        _hasBits0 |= 2;
        fantasy_ = value;
      }
    }
    /// <summary>Gets whether the "fantasy" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFantasy {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "fantasy" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFantasy() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 4;
    private readonly static int UidDefaultValue = 0;

    private int uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Uid {
      get { if ((_hasBits0 & 4) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 5;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 8) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "add_actiontime_diamond" field.</summary>
    public const int AddActiontimeDiamondFieldNumber = 6;
    private readonly static int AddActiontimeDiamondDefaultValue = 0;

    private int addActiontimeDiamond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AddActiontimeDiamond {
      get { if ((_hasBits0 & 16) != 0) { return addActiontimeDiamond_; } else { return AddActiontimeDiamondDefaultValue; } }
      set {
        _hasBits0 |= 16;
        addActiontimeDiamond_ = value;
      }
    }
    /// <summary>Gets whether the "add_actiontime_diamond" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAddActiontimeDiamond {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "add_actiontime_diamond" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAddActiontimeDiamond() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "action_left_time" field.</summary>
    public const int ActionLeftTimeFieldNumber = 7;
    private readonly static int ActionLeftTimeDefaultValue = 0;

    private int actionLeftTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActionLeftTime {
      get { if ((_hasBits0 & 32) != 0) { return actionLeftTime_; } else { return ActionLeftTimeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        actionLeftTime_ = value;
      }
    }
    /// <summary>Gets whether the "action_left_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActionLeftTime {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "action_left_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActionLeftTime() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineHandCard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineHandCard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!card_.Equals(other.card_)) return false;
      if (Round != other.Round) return false;
      if (Fantasy != other.Fantasy) return false;
      if (Uid != other.Uid) return false;
      if (Seatid != other.Seatid) return false;
      if (AddActiontimeDiamond != other.AddActiontimeDiamond) return false;
      if (ActionLeftTime != other.ActionLeftTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= card_.GetHashCode();
      if (HasRound) hash ^= Round.GetHashCode();
      if (HasFantasy) hash ^= Fantasy.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasAddActiontimeDiamond) hash ^= AddActiontimeDiamond.GetHashCode();
      if (HasActionLeftTime) hash ^= ActionLeftTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      card_.WriteTo(output, _repeated_card_codec);
      if (HasRound) {
        output.WriteRawTag(16);
        output.WriteInt32(Round);
      }
      if (HasFantasy) {
        output.WriteRawTag(24);
        output.WriteInt32(Fantasy);
      }
      if (HasUid) {
        output.WriteRawTag(32);
        output.WriteInt32(Uid);
      }
      if (HasSeatid) {
        output.WriteRawTag(40);
        output.WriteInt32(Seatid);
      }
      if (HasAddActiontimeDiamond) {
        output.WriteRawTag(48);
        output.WriteInt32(AddActiontimeDiamond);
      }
      if (HasActionLeftTime) {
        output.WriteRawTag(56);
        output.WriteInt32(ActionLeftTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      card_.WriteTo(ref output, _repeated_card_codec);
      if (HasRound) {
        output.WriteRawTag(16);
        output.WriteInt32(Round);
      }
      if (HasFantasy) {
        output.WriteRawTag(24);
        output.WriteInt32(Fantasy);
      }
      if (HasUid) {
        output.WriteRawTag(32);
        output.WriteInt32(Uid);
      }
      if (HasSeatid) {
        output.WriteRawTag(40);
        output.WriteInt32(Seatid);
      }
      if (HasAddActiontimeDiamond) {
        output.WriteRawTag(48);
        output.WriteInt32(AddActiontimeDiamond);
      }
      if (HasActionLeftTime) {
        output.WriteRawTag(56);
        output.WriteInt32(ActionLeftTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += card_.CalculateSize(_repeated_card_codec);
      if (HasRound) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Round);
      }
      if (HasFantasy) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Fantasy);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uid);
      }
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasAddActiontimeDiamond) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AddActiontimeDiamond);
      }
      if (HasActionLeftTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionLeftTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineHandCard other) {
      if (other == null) {
        return;
      }
      card_.Add(other.card_);
      if (other.HasRound) {
        Round = other.Round;
      }
      if (other.HasFantasy) {
        Fantasy = other.Fantasy;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasAddActiontimeDiamond) {
        AddActiontimeDiamond = other.AddActiontimeDiamond;
      }
      if (other.HasActionLeftTime) {
        ActionLeftTime = other.ActionLeftTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            card_.AddEntriesFrom(input, _repeated_card_codec);
            break;
          }
          case 16: {
            Round = input.ReadInt32();
            break;
          }
          case 24: {
            Fantasy = input.ReadInt32();
            break;
          }
          case 32: {
            Uid = input.ReadInt32();
            break;
          }
          case 40: {
            Seatid = input.ReadInt32();
            break;
          }
          case 48: {
            AddActiontimeDiamond = input.ReadInt32();
            break;
          }
          case 56: {
            ActionLeftTime = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            card_.AddEntriesFrom(ref input, _repeated_card_codec);
            break;
          }
          case 16: {
            Round = input.ReadInt32();
            break;
          }
          case 24: {
            Fantasy = input.ReadInt32();
            break;
          }
          case 32: {
            Uid = input.ReadInt32();
            break;
          }
          case 40: {
            Seatid = input.ReadInt32();
            break;
          }
          case 48: {
            AddActiontimeDiamond = input.ReadInt32();
            break;
          }
          case 56: {
            ActionLeftTime = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///大菠萝发牌广播
  /// </summary>
  public sealed partial class PineHandCardBRC : pb::IMessage<PineHandCardBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineHandCardBRC> _parser = new pb::MessageParser<PineHandCardBRC>(() => new PineHandCardBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineHandCardBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineHandCardBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineHandCardBRC(PineHandCardBRC other) : this() {
      _hasBits0 = other._hasBits0;
      handCard_ = other.handCard_.Clone();
      actionSeatid_ = other.actionSeatid_;
      addActiontimeDiamond_ = other.addActiontimeDiamond_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineHandCardBRC Clone() {
      return new PineHandCardBRC(this);
    }

    /// <summary>Field number for the "hand_card" field.</summary>
    public const int HandCardFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PineHandCard> _repeated_handCard_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.PineHandCard.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PineHandCard> handCard_ = new pbc::RepeatedField<global::Texas.Protocol.PineHandCard>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PineHandCard> HandCard {
      get { return handCard_; }
    }

    /// <summary>Field number for the "action_seatid" field.</summary>
    public const int ActionSeatidFieldNumber = 2;
    private readonly static int ActionSeatidDefaultValue = 0;

    private int actionSeatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActionSeatid {
      get { if ((_hasBits0 & 1) != 0) { return actionSeatid_; } else { return ActionSeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        actionSeatid_ = value;
      }
    }
    /// <summary>Gets whether the "action_seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActionSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "action_seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActionSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "add_actiontime_diamond" field.</summary>
    public const int AddActiontimeDiamondFieldNumber = 3;
    private readonly static int AddActiontimeDiamondDefaultValue = 0;

    private int addActiontimeDiamond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AddActiontimeDiamond {
      get { if ((_hasBits0 & 2) != 0) { return addActiontimeDiamond_; } else { return AddActiontimeDiamondDefaultValue; } }
      set {
        _hasBits0 |= 2;
        addActiontimeDiamond_ = value;
      }
    }
    /// <summary>Gets whether the "add_actiontime_diamond" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAddActiontimeDiamond {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "add_actiontime_diamond" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAddActiontimeDiamond() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineHandCardBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineHandCardBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!handCard_.Equals(other.handCard_)) return false;
      if (ActionSeatid != other.ActionSeatid) return false;
      if (AddActiontimeDiamond != other.AddActiontimeDiamond) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= handCard_.GetHashCode();
      if (HasActionSeatid) hash ^= ActionSeatid.GetHashCode();
      if (HasAddActiontimeDiamond) hash ^= AddActiontimeDiamond.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      handCard_.WriteTo(output, _repeated_handCard_codec);
      if (HasActionSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(ActionSeatid);
      }
      if (HasAddActiontimeDiamond) {
        output.WriteRawTag(24);
        output.WriteInt32(AddActiontimeDiamond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      handCard_.WriteTo(ref output, _repeated_handCard_codec);
      if (HasActionSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(ActionSeatid);
      }
      if (HasAddActiontimeDiamond) {
        output.WriteRawTag(24);
        output.WriteInt32(AddActiontimeDiamond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += handCard_.CalculateSize(_repeated_handCard_codec);
      if (HasActionSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionSeatid);
      }
      if (HasAddActiontimeDiamond) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AddActiontimeDiamond);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineHandCardBRC other) {
      if (other == null) {
        return;
      }
      handCard_.Add(other.handCard_);
      if (other.HasActionSeatid) {
        ActionSeatid = other.ActionSeatid;
      }
      if (other.HasAddActiontimeDiamond) {
        AddActiontimeDiamond = other.AddActiontimeDiamond;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            handCard_.AddEntriesFrom(input, _repeated_handCard_codec);
            break;
          }
          case 16: {
            ActionSeatid = input.ReadInt32();
            break;
          }
          case 24: {
            AddActiontimeDiamond = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            handCard_.AddEntriesFrom(ref input, _repeated_handCard_codec);
            break;
          }
          case 16: {
            ActionSeatid = input.ReadInt32();
            break;
          }
          case 24: {
            AddActiontimeDiamond = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///大菠萝行动请求
  /// </summary>
  public sealed partial class PineActionREQ : pb::IMessage<PineActionREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineActionREQ> _parser = new pb::MessageParser<PineActionREQ>(() => new PineActionREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineActionREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineActionREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineActionREQ(PineActionREQ other) : this() {
      headCard_ = other.headCard_.Clone();
      middleCard_ = other.middleCard_.Clone();
      tailCard_ = other.tailCard_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineActionREQ Clone() {
      return new PineActionREQ(this);
    }

    /// <summary>Field number for the "head_card" field.</summary>
    public const int HeadCardFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_headCard_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> headCard_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> HeadCard {
      get { return headCard_; }
    }

    /// <summary>Field number for the "middle_card" field.</summary>
    public const int MiddleCardFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_middleCard_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> middleCard_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> MiddleCard {
      get { return middleCard_; }
    }

    /// <summary>Field number for the "tail_card" field.</summary>
    public const int TailCardFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_tailCard_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> tailCard_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> TailCard {
      get { return tailCard_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineActionREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineActionREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!headCard_.Equals(other.headCard_)) return false;
      if(!middleCard_.Equals(other.middleCard_)) return false;
      if(!tailCard_.Equals(other.tailCard_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= headCard_.GetHashCode();
      hash ^= middleCard_.GetHashCode();
      hash ^= tailCard_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      headCard_.WriteTo(output, _repeated_headCard_codec);
      middleCard_.WriteTo(output, _repeated_middleCard_codec);
      tailCard_.WriteTo(output, _repeated_tailCard_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      headCard_.WriteTo(ref output, _repeated_headCard_codec);
      middleCard_.WriteTo(ref output, _repeated_middleCard_codec);
      tailCard_.WriteTo(ref output, _repeated_tailCard_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += headCard_.CalculateSize(_repeated_headCard_codec);
      size += middleCard_.CalculateSize(_repeated_middleCard_codec);
      size += tailCard_.CalculateSize(_repeated_tailCard_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineActionREQ other) {
      if (other == null) {
        return;
      }
      headCard_.Add(other.headCard_);
      middleCard_.Add(other.middleCard_);
      tailCard_.Add(other.tailCard_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            headCard_.AddEntriesFrom(input, _repeated_headCard_codec);
            break;
          }
          case 18:
          case 16: {
            middleCard_.AddEntriesFrom(input, _repeated_middleCard_codec);
            break;
          }
          case 26:
          case 24: {
            tailCard_.AddEntriesFrom(input, _repeated_tailCard_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            headCard_.AddEntriesFrom(ref input, _repeated_headCard_codec);
            break;
          }
          case 18:
          case 16: {
            middleCard_.AddEntriesFrom(ref input, _repeated_middleCard_codec);
            break;
          }
          case 26:
          case 24: {
            tailCard_.AddEntriesFrom(ref input, _repeated_tailCard_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WildCard : pb::IMessage<WildCard>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WildCard> _parser = new pb::MessageParser<WildCard>(() => new WildCard());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WildCard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WildCard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WildCard(WildCard other) : this() {
      _hasBits0 = other._hasBits0;
      origin_ = other.origin_;
      become_ = other.become_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WildCard Clone() {
      return new WildCard(this);
    }

    /// <summary>Field number for the "origin" field.</summary>
    public const int OriginFieldNumber = 1;
    private readonly static int OriginDefaultValue = 0;

    private int origin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Origin {
      get { if ((_hasBits0 & 1) != 0) { return origin_; } else { return OriginDefaultValue; } }
      set {
        _hasBits0 |= 1;
        origin_ = value;
      }
    }
    /// <summary>Gets whether the "origin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOrigin {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "origin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOrigin() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "become" field.</summary>
    public const int BecomeFieldNumber = 2;
    private readonly static int BecomeDefaultValue = 0;

    private int become_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Become {
      get { if ((_hasBits0 & 2) != 0) { return become_; } else { return BecomeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        become_ = value;
      }
    }
    /// <summary>Gets whether the "become" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBecome {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "become" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBecome() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WildCard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WildCard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Origin != other.Origin) return false;
      if (Become != other.Become) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOrigin) hash ^= Origin.GetHashCode();
      if (HasBecome) hash ^= Become.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOrigin) {
        output.WriteRawTag(8);
        output.WriteInt32(Origin);
      }
      if (HasBecome) {
        output.WriteRawTag(16);
        output.WriteInt32(Become);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOrigin) {
        output.WriteRawTag(8);
        output.WriteInt32(Origin);
      }
      if (HasBecome) {
        output.WriteRawTag(16);
        output.WriteInt32(Become);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasOrigin) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Origin);
      }
      if (HasBecome) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Become);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WildCard other) {
      if (other == null) {
        return;
      }
      if (other.HasOrigin) {
        Origin = other.Origin;
      }
      if (other.HasBecome) {
        Become = other.Become;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Origin = input.ReadInt32();
            break;
          }
          case 16: {
            Become = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Origin = input.ReadInt32();
            break;
          }
          case 16: {
            Become = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PineCard : pb::IMessage<PineCard>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineCard> _parser = new pb::MessageParser<PineCard>(() => new PineCard());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineCard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineCard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineCard(PineCard other) : this() {
      _hasBits0 = other._hasBits0;
      headScore_ = other.headScore_;
      middleScore_ = other.middleScore_;
      tailScore_ = other.tailScore_;
      headCard_ = other.headCard_.Clone();
      middleCard_ = other.middleCard_.Clone();
      tailCard_ = other.tailCard_.Clone();
      abandonCard_ = other.abandonCard_.Clone();
      headType_ = other.headType_;
      middleType_ = other.middleType_;
      tailType_ = other.tailType_;
      bust_ = other.bust_;
      handCard_ = other.handCard_.Clone();
      round_ = other.round_;
      wildCard_ = other.wildCard_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineCard Clone() {
      return new PineCard(this);
    }

    /// <summary>Field number for the "head_score" field.</summary>
    public const int HeadScoreFieldNumber = 1;
    private readonly static int HeadScoreDefaultValue = 0;

    private int headScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HeadScore {
      get { if ((_hasBits0 & 1) != 0) { return headScore_; } else { return HeadScoreDefaultValue; } }
      set {
        _hasBits0 |= 1;
        headScore_ = value;
      }
    }
    /// <summary>Gets whether the "head_score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeadScore {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "head_score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeadScore() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "middle_score" field.</summary>
    public const int MiddleScoreFieldNumber = 2;
    private readonly static int MiddleScoreDefaultValue = 0;

    private int middleScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MiddleScore {
      get { if ((_hasBits0 & 2) != 0) { return middleScore_; } else { return MiddleScoreDefaultValue; } }
      set {
        _hasBits0 |= 2;
        middleScore_ = value;
      }
    }
    /// <summary>Gets whether the "middle_score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMiddleScore {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "middle_score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMiddleScore() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "tail_score" field.</summary>
    public const int TailScoreFieldNumber = 3;
    private readonly static int TailScoreDefaultValue = 0;

    private int tailScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TailScore {
      get { if ((_hasBits0 & 4) != 0) { return tailScore_; } else { return TailScoreDefaultValue; } }
      set {
        _hasBits0 |= 4;
        tailScore_ = value;
      }
    }
    /// <summary>Gets whether the "tail_score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTailScore {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "tail_score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTailScore() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "head_card" field.</summary>
    public const int HeadCardFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_headCard_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> headCard_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> HeadCard {
      get { return headCard_; }
    }

    /// <summary>Field number for the "middle_card" field.</summary>
    public const int MiddleCardFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_middleCard_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> middleCard_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> MiddleCard {
      get { return middleCard_; }
    }

    /// <summary>Field number for the "tail_card" field.</summary>
    public const int TailCardFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_tailCard_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> tailCard_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> TailCard {
      get { return tailCard_; }
    }

    /// <summary>Field number for the "abandon_card" field.</summary>
    public const int AbandonCardFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_abandonCard_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> abandonCard_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> AbandonCard {
      get { return abandonCard_; }
    }

    /// <summary>Field number for the "head_type" field.</summary>
    public const int HeadTypeFieldNumber = 8;
    private readonly static global::Texas.Protocol.HandType HeadTypeDefaultValue = global::Texas.Protocol.HandType.TypeNone;

    private global::Texas.Protocol.HandType headType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.HandType HeadType {
      get { if ((_hasBits0 & 8) != 0) { return headType_; } else { return HeadTypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        headType_ = value;
      }
    }
    /// <summary>Gets whether the "head_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeadType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "head_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeadType() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "middle_type" field.</summary>
    public const int MiddleTypeFieldNumber = 9;
    private readonly static global::Texas.Protocol.HandType MiddleTypeDefaultValue = global::Texas.Protocol.HandType.TypeNone;

    private global::Texas.Protocol.HandType middleType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.HandType MiddleType {
      get { if ((_hasBits0 & 16) != 0) { return middleType_; } else { return MiddleTypeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        middleType_ = value;
      }
    }
    /// <summary>Gets whether the "middle_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMiddleType {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "middle_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMiddleType() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "tail_type" field.</summary>
    public const int TailTypeFieldNumber = 10;
    private readonly static global::Texas.Protocol.HandType TailTypeDefaultValue = global::Texas.Protocol.HandType.TypeNone;

    private global::Texas.Protocol.HandType tailType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.HandType TailType {
      get { if ((_hasBits0 & 32) != 0) { return tailType_; } else { return TailTypeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        tailType_ = value;
      }
    }
    /// <summary>Gets whether the "tail_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTailType {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "tail_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTailType() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "bust" field.</summary>
    public const int BustFieldNumber = 11;
    private readonly static bool BustDefaultValue = false;

    private bool bust_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Bust {
      get { if ((_hasBits0 & 64) != 0) { return bust_; } else { return BustDefaultValue; } }
      set {
        _hasBits0 |= 64;
        bust_ = value;
      }
    }
    /// <summary>Gets whether the "bust" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBust {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "bust" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBust() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "hand_card" field.</summary>
    public const int HandCardFieldNumber = 12;
    private static readonly pb::FieldCodec<int> _repeated_handCard_codec
        = pb::FieldCodec.ForInt32(98);
    private readonly pbc::RepeatedField<int> handCard_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> HandCard {
      get { return handCard_; }
    }

    /// <summary>Field number for the "round" field.</summary>
    public const int RoundFieldNumber = 13;
    private readonly static int RoundDefaultValue = 0;

    private int round_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Round {
      get { if ((_hasBits0 & 128) != 0) { return round_; } else { return RoundDefaultValue; } }
      set {
        _hasBits0 |= 128;
        round_ = value;
      }
    }
    /// <summary>Gets whether the "round" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRound {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "round" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRound() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "wild_card" field.</summary>
    public const int WildCardFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Texas.Protocol.WildCard> _repeated_wildCard_codec
        = pb::FieldCodec.ForMessage(114, global::Texas.Protocol.WildCard.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.WildCard> wildCard_ = new pbc::RepeatedField<global::Texas.Protocol.WildCard>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.WildCard> WildCard {
      get { return wildCard_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineCard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineCard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeadScore != other.HeadScore) return false;
      if (MiddleScore != other.MiddleScore) return false;
      if (TailScore != other.TailScore) return false;
      if(!headCard_.Equals(other.headCard_)) return false;
      if(!middleCard_.Equals(other.middleCard_)) return false;
      if(!tailCard_.Equals(other.tailCard_)) return false;
      if(!abandonCard_.Equals(other.abandonCard_)) return false;
      if (HeadType != other.HeadType) return false;
      if (MiddleType != other.MiddleType) return false;
      if (TailType != other.TailType) return false;
      if (Bust != other.Bust) return false;
      if(!handCard_.Equals(other.handCard_)) return false;
      if (Round != other.Round) return false;
      if(!wildCard_.Equals(other.wildCard_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHeadScore) hash ^= HeadScore.GetHashCode();
      if (HasMiddleScore) hash ^= MiddleScore.GetHashCode();
      if (HasTailScore) hash ^= TailScore.GetHashCode();
      hash ^= headCard_.GetHashCode();
      hash ^= middleCard_.GetHashCode();
      hash ^= tailCard_.GetHashCode();
      hash ^= abandonCard_.GetHashCode();
      if (HasHeadType) hash ^= HeadType.GetHashCode();
      if (HasMiddleType) hash ^= MiddleType.GetHashCode();
      if (HasTailType) hash ^= TailType.GetHashCode();
      if (HasBust) hash ^= Bust.GetHashCode();
      hash ^= handCard_.GetHashCode();
      if (HasRound) hash ^= Round.GetHashCode();
      hash ^= wildCard_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHeadScore) {
        output.WriteRawTag(8);
        output.WriteInt32(HeadScore);
      }
      if (HasMiddleScore) {
        output.WriteRawTag(16);
        output.WriteInt32(MiddleScore);
      }
      if (HasTailScore) {
        output.WriteRawTag(24);
        output.WriteInt32(TailScore);
      }
      headCard_.WriteTo(output, _repeated_headCard_codec);
      middleCard_.WriteTo(output, _repeated_middleCard_codec);
      tailCard_.WriteTo(output, _repeated_tailCard_codec);
      abandonCard_.WriteTo(output, _repeated_abandonCard_codec);
      if (HasHeadType) {
        output.WriteRawTag(64);
        output.WriteEnum((int) HeadType);
      }
      if (HasMiddleType) {
        output.WriteRawTag(72);
        output.WriteEnum((int) MiddleType);
      }
      if (HasTailType) {
        output.WriteRawTag(80);
        output.WriteEnum((int) TailType);
      }
      if (HasBust) {
        output.WriteRawTag(88);
        output.WriteBool(Bust);
      }
      handCard_.WriteTo(output, _repeated_handCard_codec);
      if (HasRound) {
        output.WriteRawTag(104);
        output.WriteInt32(Round);
      }
      wildCard_.WriteTo(output, _repeated_wildCard_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHeadScore) {
        output.WriteRawTag(8);
        output.WriteInt32(HeadScore);
      }
      if (HasMiddleScore) {
        output.WriteRawTag(16);
        output.WriteInt32(MiddleScore);
      }
      if (HasTailScore) {
        output.WriteRawTag(24);
        output.WriteInt32(TailScore);
      }
      headCard_.WriteTo(ref output, _repeated_headCard_codec);
      middleCard_.WriteTo(ref output, _repeated_middleCard_codec);
      tailCard_.WriteTo(ref output, _repeated_tailCard_codec);
      abandonCard_.WriteTo(ref output, _repeated_abandonCard_codec);
      if (HasHeadType) {
        output.WriteRawTag(64);
        output.WriteEnum((int) HeadType);
      }
      if (HasMiddleType) {
        output.WriteRawTag(72);
        output.WriteEnum((int) MiddleType);
      }
      if (HasTailType) {
        output.WriteRawTag(80);
        output.WriteEnum((int) TailType);
      }
      if (HasBust) {
        output.WriteRawTag(88);
        output.WriteBool(Bust);
      }
      handCard_.WriteTo(ref output, _repeated_handCard_codec);
      if (HasRound) {
        output.WriteRawTag(104);
        output.WriteInt32(Round);
      }
      wildCard_.WriteTo(ref output, _repeated_wildCard_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasHeadScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeadScore);
      }
      if (HasMiddleScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MiddleScore);
      }
      if (HasTailScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TailScore);
      }
      size += headCard_.CalculateSize(_repeated_headCard_codec);
      size += middleCard_.CalculateSize(_repeated_middleCard_codec);
      size += tailCard_.CalculateSize(_repeated_tailCard_codec);
      size += abandonCard_.CalculateSize(_repeated_abandonCard_codec);
      if (HasHeadType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) HeadType);
      }
      if (HasMiddleType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MiddleType);
      }
      if (HasTailType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TailType);
      }
      if (HasBust) {
        size += 1 + 1;
      }
      size += handCard_.CalculateSize(_repeated_handCard_codec);
      if (HasRound) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Round);
      }
      size += wildCard_.CalculateSize(_repeated_wildCard_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineCard other) {
      if (other == null) {
        return;
      }
      if (other.HasHeadScore) {
        HeadScore = other.HeadScore;
      }
      if (other.HasMiddleScore) {
        MiddleScore = other.MiddleScore;
      }
      if (other.HasTailScore) {
        TailScore = other.TailScore;
      }
      headCard_.Add(other.headCard_);
      middleCard_.Add(other.middleCard_);
      tailCard_.Add(other.tailCard_);
      abandonCard_.Add(other.abandonCard_);
      if (other.HasHeadType) {
        HeadType = other.HeadType;
      }
      if (other.HasMiddleType) {
        MiddleType = other.MiddleType;
      }
      if (other.HasTailType) {
        TailType = other.TailType;
      }
      if (other.HasBust) {
        Bust = other.Bust;
      }
      handCard_.Add(other.handCard_);
      if (other.HasRound) {
        Round = other.Round;
      }
      wildCard_.Add(other.wildCard_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HeadScore = input.ReadInt32();
            break;
          }
          case 16: {
            MiddleScore = input.ReadInt32();
            break;
          }
          case 24: {
            TailScore = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            headCard_.AddEntriesFrom(input, _repeated_headCard_codec);
            break;
          }
          case 42:
          case 40: {
            middleCard_.AddEntriesFrom(input, _repeated_middleCard_codec);
            break;
          }
          case 50:
          case 48: {
            tailCard_.AddEntriesFrom(input, _repeated_tailCard_codec);
            break;
          }
          case 58:
          case 56: {
            abandonCard_.AddEntriesFrom(input, _repeated_abandonCard_codec);
            break;
          }
          case 64: {
            HeadType = (global::Texas.Protocol.HandType) input.ReadEnum();
            break;
          }
          case 72: {
            MiddleType = (global::Texas.Protocol.HandType) input.ReadEnum();
            break;
          }
          case 80: {
            TailType = (global::Texas.Protocol.HandType) input.ReadEnum();
            break;
          }
          case 88: {
            Bust = input.ReadBool();
            break;
          }
          case 98:
          case 96: {
            handCard_.AddEntriesFrom(input, _repeated_handCard_codec);
            break;
          }
          case 104: {
            Round = input.ReadInt32();
            break;
          }
          case 114: {
            wildCard_.AddEntriesFrom(input, _repeated_wildCard_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            HeadScore = input.ReadInt32();
            break;
          }
          case 16: {
            MiddleScore = input.ReadInt32();
            break;
          }
          case 24: {
            TailScore = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            headCard_.AddEntriesFrom(ref input, _repeated_headCard_codec);
            break;
          }
          case 42:
          case 40: {
            middleCard_.AddEntriesFrom(ref input, _repeated_middleCard_codec);
            break;
          }
          case 50:
          case 48: {
            tailCard_.AddEntriesFrom(ref input, _repeated_tailCard_codec);
            break;
          }
          case 58:
          case 56: {
            abandonCard_.AddEntriesFrom(ref input, _repeated_abandonCard_codec);
            break;
          }
          case 64: {
            HeadType = (global::Texas.Protocol.HandType) input.ReadEnum();
            break;
          }
          case 72: {
            MiddleType = (global::Texas.Protocol.HandType) input.ReadEnum();
            break;
          }
          case 80: {
            TailType = (global::Texas.Protocol.HandType) input.ReadEnum();
            break;
          }
          case 88: {
            Bust = input.ReadBool();
            break;
          }
          case 98:
          case 96: {
            handCard_.AddEntriesFrom(ref input, _repeated_handCard_codec);
            break;
          }
          case 104: {
            Round = input.ReadInt32();
            break;
          }
          case 114: {
            wildCard_.AddEntriesFrom(ref input, _repeated_wildCard_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///大菠萝行动返回
  /// </summary>
  public sealed partial class PineActionRSP : pb::IMessage<PineActionRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineActionRSP> _parser = new pb::MessageParser<PineActionRSP>(() => new PineActionRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineActionRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineActionRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineActionRSP(PineActionRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      card_ = other.card_ != null ? other.card_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineActionRSP Clone() {
      return new PineActionRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// -2 已经操作过    -1 不合法    0 成功    1 需要确认    2 取消成功
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "card" field.</summary>
    public const int CardFieldNumber = 2;
    private global::Texas.Protocol.PineCard card_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PineCard Card {
      get { return card_; }
      set {
        card_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineActionRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineActionRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Card, other.Card)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (card_ != null) hash ^= Card.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (card_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Card);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (card_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Card);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (card_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Card);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineActionRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.card_ != null) {
        if (card_ == null) {
          Card = new global::Texas.Protocol.PineCard();
        }
        Card.MergeFrom(other.Card);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (card_ == null) {
              Card = new global::Texas.Protocol.PineCard();
            }
            input.ReadMessage(Card);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (card_ == null) {
              Card = new global::Texas.Protocol.PineCard();
            }
            input.ReadMessage(Card);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///大菠萝行动广播
  /// </summary>
  public sealed partial class PineActionBRC : pb::IMessage<PineActionBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineActionBRC> _parser = new pb::MessageParser<PineActionBRC>(() => new PineActionBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineActionBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineActionBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineActionBRC(PineActionBRC other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      seatid_ = other.seatid_;
      card_ = other.card_ != null ? other.card_.Clone() : null;
      headCard_ = other.headCard_.Clone();
      middleCard_ = other.middleCard_.Clone();
      tailCard_ = other.tailCard_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineActionBRC Clone() {
      return new PineActionBRC(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static int UidDefaultValue = 0;

    private int uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 2;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 2) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "card" field.</summary>
    public const int CardFieldNumber = 3;
    private global::Texas.Protocol.PineCard card_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PineCard Card {
      get { return card_; }
      set {
        card_ = value;
      }
    }

    /// <summary>Field number for the "head_card" field.</summary>
    public const int HeadCardFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_headCard_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> headCard_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> HeadCard {
      get { return headCard_; }
    }

    /// <summary>Field number for the "middle_card" field.</summary>
    public const int MiddleCardFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_middleCard_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> middleCard_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> MiddleCard {
      get { return middleCard_; }
    }

    /// <summary>Field number for the "tail_card" field.</summary>
    public const int TailCardFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_tailCard_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> tailCard_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> TailCard {
      get { return tailCard_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineActionBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineActionBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Seatid != other.Seatid) return false;
      if (!object.Equals(Card, other.Card)) return false;
      if(!headCard_.Equals(other.headCard_)) return false;
      if(!middleCard_.Equals(other.middleCard_)) return false;
      if(!tailCard_.Equals(other.tailCard_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (card_ != null) hash ^= Card.GetHashCode();
      hash ^= headCard_.GetHashCode();
      hash ^= middleCard_.GetHashCode();
      hash ^= tailCard_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt32(Uid);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (card_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Card);
      }
      headCard_.WriteTo(output, _repeated_headCard_codec);
      middleCard_.WriteTo(output, _repeated_middleCard_codec);
      tailCard_.WriteTo(output, _repeated_tailCard_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt32(Uid);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (card_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Card);
      }
      headCard_.WriteTo(ref output, _repeated_headCard_codec);
      middleCard_.WriteTo(ref output, _repeated_middleCard_codec);
      tailCard_.WriteTo(ref output, _repeated_tailCard_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uid);
      }
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (card_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Card);
      }
      size += headCard_.CalculateSize(_repeated_headCard_codec);
      size += middleCard_.CalculateSize(_repeated_middleCard_codec);
      size += tailCard_.CalculateSize(_repeated_tailCard_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineActionBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.card_ != null) {
        if (card_ == null) {
          Card = new global::Texas.Protocol.PineCard();
        }
        Card.MergeFrom(other.Card);
      }
      headCard_.Add(other.headCard_);
      middleCard_.Add(other.middleCard_);
      tailCard_.Add(other.tailCard_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 26: {
            if (card_ == null) {
              Card = new global::Texas.Protocol.PineCard();
            }
            input.ReadMessage(Card);
            break;
          }
          case 34:
          case 32: {
            headCard_.AddEntriesFrom(input, _repeated_headCard_codec);
            break;
          }
          case 42:
          case 40: {
            middleCard_.AddEntriesFrom(input, _repeated_middleCard_codec);
            break;
          }
          case 50:
          case 48: {
            tailCard_.AddEntriesFrom(input, _repeated_tailCard_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Uid = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 26: {
            if (card_ == null) {
              Card = new global::Texas.Protocol.PineCard();
            }
            input.ReadMessage(Card);
            break;
          }
          case 34:
          case 32: {
            headCard_.AddEntriesFrom(ref input, _repeated_headCard_codec);
            break;
          }
          case 42:
          case 40: {
            middleCard_.AddEntriesFrom(ref input, _repeated_middleCard_codec);
            break;
          }
          case 50:
          case 48: {
            tailCard_.AddEntriesFrom(ref input, _repeated_tailCard_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///大菠萝可以准备返回
  /// </summary>
  public sealed partial class PineStartReadyRSP : pb::IMessage<PineStartReadyRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineStartReadyRSP> _parser = new pb::MessageParser<PineStartReadyRSP>(() => new PineStartReadyRSP());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineStartReadyRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineStartReadyRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineStartReadyRSP(PineStartReadyRSP other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineStartReadyRSP Clone() {
      return new PineStartReadyRSP(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineStartReadyRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineStartReadyRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineStartReadyRSP other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  ///大菠萝结束准备返回
  /// </summary>
  public sealed partial class PineStopReadyRSP : pb::IMessage<PineStopReadyRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineStopReadyRSP> _parser = new pb::MessageParser<PineStopReadyRSP>(() => new PineStopReadyRSP());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineStopReadyRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineStopReadyRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineStopReadyRSP(PineStopReadyRSP other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineStopReadyRSP Clone() {
      return new PineStopReadyRSP(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineStopReadyRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineStopReadyRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineStopReadyRSP other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  ///大菠萝准备请求
  /// </summary>
  public sealed partial class PineReadyREQ : pb::IMessage<PineReadyREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineReadyREQ> _parser = new pb::MessageParser<PineReadyREQ>(() => new PineReadyREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineReadyREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineReadyREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineReadyREQ(PineReadyREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineReadyREQ Clone() {
      return new PineReadyREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineReadyREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineReadyREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineReadyREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  ///大菠萝准备状态
  /// </summary>
  public sealed partial class PineReadyStatus : pb::IMessage<PineReadyStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineReadyStatus> _parser = new pb::MessageParser<PineReadyStatus>(() => new PineReadyStatus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineReadyStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineReadyStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineReadyStatus(PineReadyStatus other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      seatid_ = other.seatid_;
      ready_ = other.ready_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineReadyStatus Clone() {
      return new PineReadyStatus(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static int UidDefaultValue = 0;

    private int uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 2;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 2) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "ready" field.</summary>
    public const int ReadyFieldNumber = 3;
    private readonly static bool ReadyDefaultValue = false;

    private bool ready_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Ready {
      get { if ((_hasBits0 & 4) != 0) { return ready_; } else { return ReadyDefaultValue; } }
      set {
        _hasBits0 |= 4;
        ready_ = value;
      }
    }
    /// <summary>Gets whether the "ready" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReady {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "ready" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReady() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineReadyStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineReadyStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Seatid != other.Seatid) return false;
      if (Ready != other.Ready) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasReady) hash ^= Ready.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt32(Uid);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasReady) {
        output.WriteRawTag(24);
        output.WriteBool(Ready);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt32(Uid);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasReady) {
        output.WriteRawTag(24);
        output.WriteBool(Ready);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uid);
      }
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasReady) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineReadyStatus other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasReady) {
        Ready = other.Ready;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            Ready = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Uid = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            Ready = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///大菠萝准备广播
  /// </summary>
  public sealed partial class PineReadyBRC : pb::IMessage<PineReadyBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineReadyBRC> _parser = new pb::MessageParser<PineReadyBRC>(() => new PineReadyBRC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineReadyBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineReadyBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineReadyBRC(PineReadyBRC other) : this() {
      readyStatus_ = other.readyStatus_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineReadyBRC Clone() {
      return new PineReadyBRC(this);
    }

    /// <summary>Field number for the "ready_status" field.</summary>
    public const int ReadyStatusFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PineReadyStatus> _repeated_readyStatus_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.PineReadyStatus.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PineReadyStatus> readyStatus_ = new pbc::RepeatedField<global::Texas.Protocol.PineReadyStatus>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PineReadyStatus> ReadyStatus {
      get { return readyStatus_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineReadyBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineReadyBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!readyStatus_.Equals(other.readyStatus_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= readyStatus_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      readyStatus_.WriteTo(output, _repeated_readyStatus_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      readyStatus_.WriteTo(ref output, _repeated_readyStatus_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += readyStatus_.CalculateSize(_repeated_readyStatus_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineReadyBRC other) {
      if (other == null) {
        return;
      }
      readyStatus_.Add(other.readyStatus_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            readyStatus_.AddEntriesFrom(input, _repeated_readyStatus_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            readyStatus_.AddEntriesFrom(ref input, _repeated_readyStatus_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///大菠萝游戏状态
  /// </summary>
  public sealed partial class PinePlayingStatus : pb::IMessage<PinePlayingStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PinePlayingStatus> _parser = new pb::MessageParser<PinePlayingStatus>(() => new PinePlayingStatus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PinePlayingStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PinePlayingStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PinePlayingStatus(PinePlayingStatus other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      seatid_ = other.seatid_;
      card_ = other.card_ != null ? other.card_.Clone() : null;
      rebuyLeftTime_ = other.rebuyLeftTime_;
      vipLevel_ = other.vipLevel_;
      fantasy_ = other.fantasy_;
      sittingOut_ = other.sittingOut_;
      actionLeftTime_ = other.actionLeftTime_;
      icon_ = other.icon_;
      name_ = other.name_;
      chips_ = other.chips_;
      ready_ = other.ready_;
      ableReady_ = other.ableReady_;
      ableReadyLeftTime_ = other.ableReadyLeftTime_;
      addActiontimeDiamond_ = other.addActiontimeDiamond_;
      addActiontimeVipFreeTimes_ = other.addActiontimeVipFreeTimes_;
      addActiontimeGiftbagFreeTimes_ = other.addActiontimeGiftbagFreeTimes_;
      leaveRoomAfterThisHand_ = other.leaveRoomAfterThisHand_;
      isDelayTime_ = other.isDelayTime_;
      status_ = other.status_;
      isUsingTimebank_ = other.isUsingTimebank_;
      clubid_ = other.clubid_;
      clubName_ = other.clubName_;
      level_ = other.level_;
      frameId_ = other.frameId_;
      roadChips_ = other.roadChips_;
      certification_ = other.certification_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PinePlayingStatus Clone() {
      return new PinePlayingStatus(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static int UidDefaultValue = 0;

    private int uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 2;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 2) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "card" field.</summary>
    public const int CardFieldNumber = 3;
    private global::Texas.Protocol.PineCard card_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PineCard Card {
      get { return card_; }
      set {
        card_ = value;
      }
    }

    /// <summary>Field number for the "rebuy_left_time" field.</summary>
    public const int RebuyLeftTimeFieldNumber = 4;
    private readonly static int RebuyLeftTimeDefaultValue = 0;

    private int rebuyLeftTime_;
    /// <summary>
    ///等待rebuy剩余时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RebuyLeftTime {
      get { if ((_hasBits0 & 4) != 0) { return rebuyLeftTime_; } else { return RebuyLeftTimeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        rebuyLeftTime_ = value;
      }
    }
    /// <summary>Gets whether the "rebuy_left_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRebuyLeftTime {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "rebuy_left_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRebuyLeftTime() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "vip_level" field.</summary>
    public const int VipLevelFieldNumber = 5;
    private readonly static uint VipLevelDefaultValue = 0;

    private uint vipLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint VipLevel {
      get { if ((_hasBits0 & 8) != 0) { return vipLevel_; } else { return VipLevelDefaultValue; } }
      set {
        _hasBits0 |= 8;
        vipLevel_ = value;
      }
    }
    /// <summary>Gets whether the "vip_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVipLevel {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "vip_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVipLevel() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "fantasy" field.</summary>
    public const int FantasyFieldNumber = 6;
    private readonly static int FantasyDefaultValue = 0;

    private int fantasy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Fantasy {
      get { if ((_hasBits0 & 16) != 0) { return fantasy_; } else { return FantasyDefaultValue; } }
      set {
        _hasBits0 |= 16;
        fantasy_ = value;
      }
    }
    /// <summary>Gets whether the "fantasy" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFantasy {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "fantasy" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFantasy() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "sitting_out" field.</summary>
    public const int SittingOutFieldNumber = 7;
    private readonly static bool SittingOutDefaultValue = false;

    private bool sittingOut_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SittingOut {
      get { if ((_hasBits0 & 32) != 0) { return sittingOut_; } else { return SittingOutDefaultValue; } }
      set {
        _hasBits0 |= 32;
        sittingOut_ = value;
      }
    }
    /// <summary>Gets whether the "sitting_out" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSittingOut {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "sitting_out" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSittingOut() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "action_left_time" field.</summary>
    public const int ActionLeftTimeFieldNumber = 8;
    private readonly static int ActionLeftTimeDefaultValue = 0;

    private int actionLeftTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActionLeftTime {
      get { if ((_hasBits0 & 64) != 0) { return actionLeftTime_; } else { return ActionLeftTimeDefaultValue; } }
      set {
        _hasBits0 |= 64;
        actionLeftTime_ = value;
      }
    }
    /// <summary>Gets whether the "action_left_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActionLeftTime {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "action_left_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActionLeftTime() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 9;
    private readonly static string IconDefaultValue = "";

    private string icon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_ ?? IconDefaultValue; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIcon {
      get { return icon_ != null; }
    }
    /// <summary>Clears the value of the "icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIcon() {
      icon_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 10;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "chips" field.</summary>
    public const int ChipsFieldNumber = 11;
    private readonly static long ChipsDefaultValue = 0L;

    private long chips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Chips {
      get { if ((_hasBits0 & 128) != 0) { return chips_; } else { return ChipsDefaultValue; } }
      set {
        _hasBits0 |= 128;
        chips_ = value;
      }
    }
    /// <summary>Gets whether the "chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChips {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChips() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "ready" field.</summary>
    public const int ReadyFieldNumber = 12;
    private readonly static bool ReadyDefaultValue = false;

    private bool ready_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Ready {
      get { if ((_hasBits0 & 256) != 0) { return ready_; } else { return ReadyDefaultValue; } }
      set {
        _hasBits0 |= 256;
        ready_ = value;
      }
    }
    /// <summary>Gets whether the "ready" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReady {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "ready" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReady() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "able_ready" field.</summary>
    public const int AbleReadyFieldNumber = 13;
    private readonly static bool AbleReadyDefaultValue = false;

    private bool ableReady_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AbleReady {
      get { if ((_hasBits0 & 512) != 0) { return ableReady_; } else { return AbleReadyDefaultValue; } }
      set {
        _hasBits0 |= 512;
        ableReady_ = value;
      }
    }
    /// <summary>Gets whether the "able_ready" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAbleReady {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "able_ready" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAbleReady() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "able_ready_left_time" field.</summary>
    public const int AbleReadyLeftTimeFieldNumber = 14;
    private readonly static bool AbleReadyLeftTimeDefaultValue = false;

    private bool ableReadyLeftTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AbleReadyLeftTime {
      get { if ((_hasBits0 & 1024) != 0) { return ableReadyLeftTime_; } else { return AbleReadyLeftTimeDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        ableReadyLeftTime_ = value;
      }
    }
    /// <summary>Gets whether the "able_ready_left_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAbleReadyLeftTime {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "able_ready_left_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAbleReadyLeftTime() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "add_actiontime_diamond" field.</summary>
    public const int AddActiontimeDiamondFieldNumber = 15;
    private readonly static int AddActiontimeDiamondDefaultValue = 0;

    private int addActiontimeDiamond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AddActiontimeDiamond {
      get { if ((_hasBits0 & 2048) != 0) { return addActiontimeDiamond_; } else { return AddActiontimeDiamondDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        addActiontimeDiamond_ = value;
      }
    }
    /// <summary>Gets whether the "add_actiontime_diamond" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAddActiontimeDiamond {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "add_actiontime_diamond" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAddActiontimeDiamond() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "add_actiontime_vip_free_times" field.</summary>
    public const int AddActiontimeVipFreeTimesFieldNumber = 16;
    private readonly static int AddActiontimeVipFreeTimesDefaultValue = 0;

    private int addActiontimeVipFreeTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AddActiontimeVipFreeTimes {
      get { if ((_hasBits0 & 4096) != 0) { return addActiontimeVipFreeTimes_; } else { return AddActiontimeVipFreeTimesDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        addActiontimeVipFreeTimes_ = value;
      }
    }
    /// <summary>Gets whether the "add_actiontime_vip_free_times" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAddActiontimeVipFreeTimes {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "add_actiontime_vip_free_times" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAddActiontimeVipFreeTimes() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "add_actiontime_giftbag_free_times" field.</summary>
    public const int AddActiontimeGiftbagFreeTimesFieldNumber = 17;
    private readonly static int AddActiontimeGiftbagFreeTimesDefaultValue = 0;

    private int addActiontimeGiftbagFreeTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AddActiontimeGiftbagFreeTimes {
      get { if ((_hasBits0 & 8192) != 0) { return addActiontimeGiftbagFreeTimes_; } else { return AddActiontimeGiftbagFreeTimesDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        addActiontimeGiftbagFreeTimes_ = value;
      }
    }
    /// <summary>Gets whether the "add_actiontime_giftbag_free_times" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAddActiontimeGiftbagFreeTimes {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "add_actiontime_giftbag_free_times" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAddActiontimeGiftbagFreeTimes() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "leave_room_after_this_hand" field.</summary>
    public const int LeaveRoomAfterThisHandFieldNumber = 18;
    private readonly static bool LeaveRoomAfterThisHandDefaultValue = false;

    private bool leaveRoomAfterThisHand_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LeaveRoomAfterThisHand {
      get { if ((_hasBits0 & 16384) != 0) { return leaveRoomAfterThisHand_; } else { return LeaveRoomAfterThisHandDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        leaveRoomAfterThisHand_ = value;
      }
    }
    /// <summary>Gets whether the "leave_room_after_this_hand" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeaveRoomAfterThisHand {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "leave_room_after_this_hand" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeaveRoomAfterThisHand() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "is_delay_time" field.</summary>
    public const int IsDelayTimeFieldNumber = 19;
    private readonly static bool IsDelayTimeDefaultValue = false;

    private bool isDelayTime_;
    /// <summary>
    ///是否正在延时
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsDelayTime {
      get { if ((_hasBits0 & 32768) != 0) { return isDelayTime_; } else { return IsDelayTimeDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        isDelayTime_ = value;
      }
    }
    /// <summary>Gets whether the "is_delay_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsDelayTime {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "is_delay_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsDelayTime() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 20;
    private readonly static int StatusDefaultValue = 0;

    private int status_;
    /// <summary>
    ///0 正常    1 等待买入
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Status {
      get { if ((_hasBits0 & 65536) != 0) { return status_; } else { return StatusDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatus {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatus() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "is_using_timebank" field.</summary>
    public const int IsUsingTimebankFieldNumber = 21;
    private readonly static bool IsUsingTimebankDefaultValue = false;

    private bool isUsingTimebank_;
    /// <summary>
    ///是否正在使用时间银行
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsUsingTimebank {
      get { if ((_hasBits0 & 131072) != 0) { return isUsingTimebank_; } else { return IsUsingTimebankDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        isUsingTimebank_ = value;
      }
    }
    /// <summary>Gets whether the "is_using_timebank" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsUsingTimebank {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "is_using_timebank" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsUsingTimebank() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 22;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 262144) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "club_name" field.</summary>
    public const int ClubNameFieldNumber = 23;
    private readonly static string ClubNameDefaultValue = "";

    private string clubName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClubName {
      get { return clubName_ ?? ClubNameDefaultValue; }
      set {
        clubName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "club_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubName {
      get { return clubName_ != null; }
    }
    /// <summary>Clears the value of the "club_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubName() {
      clubName_ = null;
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 24;
    private readonly static int LevelDefaultValue = 0;

    private int level_;
    /// <summary>
    ///用户等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Level {
      get { if ((_hasBits0 & 524288) != 0) { return level_; } else { return LevelDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        level_ = value;
      }
    }
    /// <summary>Gets whether the "level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLevel {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLevel() {
      _hasBits0 &= ~524288;
    }

    /// <summary>Field number for the "frame_id" field.</summary>
    public const int FrameIdFieldNumber = 25;
    private readonly static string FrameIdDefaultValue = "";

    private string frameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FrameId {
      get { return frameId_ ?? FrameIdDefaultValue; }
      set {
        frameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "frame_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrameId {
      get { return frameId_ != null; }
    }
    /// <summary>Clears the value of the "frame_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrameId() {
      frameId_ = null;
    }

    /// <summary>Field number for the "road_chips" field.</summary>
    public const int RoadChipsFieldNumber = 26;
    private readonly static long RoadChipsDefaultValue = 0L;

    private long roadChips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RoadChips {
      get { if ((_hasBits0 & 1048576) != 0) { return roadChips_; } else { return RoadChipsDefaultValue; } }
      set {
        _hasBits0 |= 1048576;
        roadChips_ = value;
      }
    }
    /// <summary>Gets whether the "road_chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoadChips {
      get { return (_hasBits0 & 1048576) != 0; }
    }
    /// <summary>Clears the value of the "road_chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoadChips() {
      _hasBits0 &= ~1048576;
    }

    /// <summary>Field number for the "certification" field.</summary>
    public const int CertificationFieldNumber = 27;
    private readonly static int CertificationDefaultValue = 0;

    private int certification_;
    /// <summary>
    ///俱樂部會員認證
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Certification {
      get { if ((_hasBits0 & 2097152) != 0) { return certification_; } else { return CertificationDefaultValue; } }
      set {
        _hasBits0 |= 2097152;
        certification_ = value;
      }
    }
    /// <summary>Gets whether the "certification" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCertification {
      get { return (_hasBits0 & 2097152) != 0; }
    }
    /// <summary>Clears the value of the "certification" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCertification() {
      _hasBits0 &= ~2097152;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PinePlayingStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PinePlayingStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Seatid != other.Seatid) return false;
      if (!object.Equals(Card, other.Card)) return false;
      if (RebuyLeftTime != other.RebuyLeftTime) return false;
      if (VipLevel != other.VipLevel) return false;
      if (Fantasy != other.Fantasy) return false;
      if (SittingOut != other.SittingOut) return false;
      if (ActionLeftTime != other.ActionLeftTime) return false;
      if (Icon != other.Icon) return false;
      if (Name != other.Name) return false;
      if (Chips != other.Chips) return false;
      if (Ready != other.Ready) return false;
      if (AbleReady != other.AbleReady) return false;
      if (AbleReadyLeftTime != other.AbleReadyLeftTime) return false;
      if (AddActiontimeDiamond != other.AddActiontimeDiamond) return false;
      if (AddActiontimeVipFreeTimes != other.AddActiontimeVipFreeTimes) return false;
      if (AddActiontimeGiftbagFreeTimes != other.AddActiontimeGiftbagFreeTimes) return false;
      if (LeaveRoomAfterThisHand != other.LeaveRoomAfterThisHand) return false;
      if (IsDelayTime != other.IsDelayTime) return false;
      if (Status != other.Status) return false;
      if (IsUsingTimebank != other.IsUsingTimebank) return false;
      if (Clubid != other.Clubid) return false;
      if (ClubName != other.ClubName) return false;
      if (Level != other.Level) return false;
      if (FrameId != other.FrameId) return false;
      if (RoadChips != other.RoadChips) return false;
      if (Certification != other.Certification) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (card_ != null) hash ^= Card.GetHashCode();
      if (HasRebuyLeftTime) hash ^= RebuyLeftTime.GetHashCode();
      if (HasVipLevel) hash ^= VipLevel.GetHashCode();
      if (HasFantasy) hash ^= Fantasy.GetHashCode();
      if (HasSittingOut) hash ^= SittingOut.GetHashCode();
      if (HasActionLeftTime) hash ^= ActionLeftTime.GetHashCode();
      if (HasIcon) hash ^= Icon.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasChips) hash ^= Chips.GetHashCode();
      if (HasReady) hash ^= Ready.GetHashCode();
      if (HasAbleReady) hash ^= AbleReady.GetHashCode();
      if (HasAbleReadyLeftTime) hash ^= AbleReadyLeftTime.GetHashCode();
      if (HasAddActiontimeDiamond) hash ^= AddActiontimeDiamond.GetHashCode();
      if (HasAddActiontimeVipFreeTimes) hash ^= AddActiontimeVipFreeTimes.GetHashCode();
      if (HasAddActiontimeGiftbagFreeTimes) hash ^= AddActiontimeGiftbagFreeTimes.GetHashCode();
      if (HasLeaveRoomAfterThisHand) hash ^= LeaveRoomAfterThisHand.GetHashCode();
      if (HasIsDelayTime) hash ^= IsDelayTime.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (HasIsUsingTimebank) hash ^= IsUsingTimebank.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasClubName) hash ^= ClubName.GetHashCode();
      if (HasLevel) hash ^= Level.GetHashCode();
      if (HasFrameId) hash ^= FrameId.GetHashCode();
      if (HasRoadChips) hash ^= RoadChips.GetHashCode();
      if (HasCertification) hash ^= Certification.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt32(Uid);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (card_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Card);
      }
      if (HasRebuyLeftTime) {
        output.WriteRawTag(32);
        output.WriteInt32(RebuyLeftTime);
      }
      if (HasVipLevel) {
        output.WriteRawTag(40);
        output.WriteUInt32(VipLevel);
      }
      if (HasFantasy) {
        output.WriteRawTag(48);
        output.WriteInt32(Fantasy);
      }
      if (HasSittingOut) {
        output.WriteRawTag(56);
        output.WriteBool(SittingOut);
      }
      if (HasActionLeftTime) {
        output.WriteRawTag(64);
        output.WriteInt32(ActionLeftTime);
      }
      if (HasIcon) {
        output.WriteRawTag(74);
        output.WriteString(Icon);
      }
      if (HasName) {
        output.WriteRawTag(82);
        output.WriteString(Name);
      }
      if (HasChips) {
        output.WriteRawTag(88);
        output.WriteInt64(Chips);
      }
      if (HasReady) {
        output.WriteRawTag(96);
        output.WriteBool(Ready);
      }
      if (HasAbleReady) {
        output.WriteRawTag(104);
        output.WriteBool(AbleReady);
      }
      if (HasAbleReadyLeftTime) {
        output.WriteRawTag(112);
        output.WriteBool(AbleReadyLeftTime);
      }
      if (HasAddActiontimeDiamond) {
        output.WriteRawTag(120);
        output.WriteInt32(AddActiontimeDiamond);
      }
      if (HasAddActiontimeVipFreeTimes) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(AddActiontimeVipFreeTimes);
      }
      if (HasAddActiontimeGiftbagFreeTimes) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(AddActiontimeGiftbagFreeTimes);
      }
      if (HasLeaveRoomAfterThisHand) {
        output.WriteRawTag(144, 1);
        output.WriteBool(LeaveRoomAfterThisHand);
      }
      if (HasIsDelayTime) {
        output.WriteRawTag(152, 1);
        output.WriteBool(IsDelayTime);
      }
      if (HasStatus) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(Status);
      }
      if (HasIsUsingTimebank) {
        output.WriteRawTag(168, 1);
        output.WriteBool(IsUsingTimebank);
      }
      if (HasClubid) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(Clubid);
      }
      if (HasClubName) {
        output.WriteRawTag(186, 1);
        output.WriteString(ClubName);
      }
      if (HasLevel) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(Level);
      }
      if (HasFrameId) {
        output.WriteRawTag(202, 1);
        output.WriteString(FrameId);
      }
      if (HasRoadChips) {
        output.WriteRawTag(208, 1);
        output.WriteInt64(RoadChips);
      }
      if (HasCertification) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(Certification);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt32(Uid);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (card_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Card);
      }
      if (HasRebuyLeftTime) {
        output.WriteRawTag(32);
        output.WriteInt32(RebuyLeftTime);
      }
      if (HasVipLevel) {
        output.WriteRawTag(40);
        output.WriteUInt32(VipLevel);
      }
      if (HasFantasy) {
        output.WriteRawTag(48);
        output.WriteInt32(Fantasy);
      }
      if (HasSittingOut) {
        output.WriteRawTag(56);
        output.WriteBool(SittingOut);
      }
      if (HasActionLeftTime) {
        output.WriteRawTag(64);
        output.WriteInt32(ActionLeftTime);
      }
      if (HasIcon) {
        output.WriteRawTag(74);
        output.WriteString(Icon);
      }
      if (HasName) {
        output.WriteRawTag(82);
        output.WriteString(Name);
      }
      if (HasChips) {
        output.WriteRawTag(88);
        output.WriteInt64(Chips);
      }
      if (HasReady) {
        output.WriteRawTag(96);
        output.WriteBool(Ready);
      }
      if (HasAbleReady) {
        output.WriteRawTag(104);
        output.WriteBool(AbleReady);
      }
      if (HasAbleReadyLeftTime) {
        output.WriteRawTag(112);
        output.WriteBool(AbleReadyLeftTime);
      }
      if (HasAddActiontimeDiamond) {
        output.WriteRawTag(120);
        output.WriteInt32(AddActiontimeDiamond);
      }
      if (HasAddActiontimeVipFreeTimes) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(AddActiontimeVipFreeTimes);
      }
      if (HasAddActiontimeGiftbagFreeTimes) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(AddActiontimeGiftbagFreeTimes);
      }
      if (HasLeaveRoomAfterThisHand) {
        output.WriteRawTag(144, 1);
        output.WriteBool(LeaveRoomAfterThisHand);
      }
      if (HasIsDelayTime) {
        output.WriteRawTag(152, 1);
        output.WriteBool(IsDelayTime);
      }
      if (HasStatus) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(Status);
      }
      if (HasIsUsingTimebank) {
        output.WriteRawTag(168, 1);
        output.WriteBool(IsUsingTimebank);
      }
      if (HasClubid) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(Clubid);
      }
      if (HasClubName) {
        output.WriteRawTag(186, 1);
        output.WriteString(ClubName);
      }
      if (HasLevel) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(Level);
      }
      if (HasFrameId) {
        output.WriteRawTag(202, 1);
        output.WriteString(FrameId);
      }
      if (HasRoadChips) {
        output.WriteRawTag(208, 1);
        output.WriteInt64(RoadChips);
      }
      if (HasCertification) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(Certification);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uid);
      }
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (card_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Card);
      }
      if (HasRebuyLeftTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RebuyLeftTime);
      }
      if (HasVipLevel) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VipLevel);
      }
      if (HasFantasy) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Fantasy);
      }
      if (HasSittingOut) {
        size += 1 + 1;
      }
      if (HasActionLeftTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionLeftTime);
      }
      if (HasIcon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Chips);
      }
      if (HasReady) {
        size += 1 + 1;
      }
      if (HasAbleReady) {
        size += 1 + 1;
      }
      if (HasAbleReadyLeftTime) {
        size += 1 + 1;
      }
      if (HasAddActiontimeDiamond) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AddActiontimeDiamond);
      }
      if (HasAddActiontimeVipFreeTimes) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AddActiontimeVipFreeTimes);
      }
      if (HasAddActiontimeGiftbagFreeTimes) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AddActiontimeGiftbagFreeTimes);
      }
      if (HasLeaveRoomAfterThisHand) {
        size += 2 + 1;
      }
      if (HasIsDelayTime) {
        size += 2 + 1;
      }
      if (HasStatus) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (HasIsUsingTimebank) {
        size += 2 + 1;
      }
      if (HasClubid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasClubName) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClubName);
      }
      if (HasLevel) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (HasFrameId) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(FrameId);
      }
      if (HasRoadChips) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(RoadChips);
      }
      if (HasCertification) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Certification);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PinePlayingStatus other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.card_ != null) {
        if (card_ == null) {
          Card = new global::Texas.Protocol.PineCard();
        }
        Card.MergeFrom(other.Card);
      }
      if (other.HasRebuyLeftTime) {
        RebuyLeftTime = other.RebuyLeftTime;
      }
      if (other.HasVipLevel) {
        VipLevel = other.VipLevel;
      }
      if (other.HasFantasy) {
        Fantasy = other.Fantasy;
      }
      if (other.HasSittingOut) {
        SittingOut = other.SittingOut;
      }
      if (other.HasActionLeftTime) {
        ActionLeftTime = other.ActionLeftTime;
      }
      if (other.HasIcon) {
        Icon = other.Icon;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasChips) {
        Chips = other.Chips;
      }
      if (other.HasReady) {
        Ready = other.Ready;
      }
      if (other.HasAbleReady) {
        AbleReady = other.AbleReady;
      }
      if (other.HasAbleReadyLeftTime) {
        AbleReadyLeftTime = other.AbleReadyLeftTime;
      }
      if (other.HasAddActiontimeDiamond) {
        AddActiontimeDiamond = other.AddActiontimeDiamond;
      }
      if (other.HasAddActiontimeVipFreeTimes) {
        AddActiontimeVipFreeTimes = other.AddActiontimeVipFreeTimes;
      }
      if (other.HasAddActiontimeGiftbagFreeTimes) {
        AddActiontimeGiftbagFreeTimes = other.AddActiontimeGiftbagFreeTimes;
      }
      if (other.HasLeaveRoomAfterThisHand) {
        LeaveRoomAfterThisHand = other.LeaveRoomAfterThisHand;
      }
      if (other.HasIsDelayTime) {
        IsDelayTime = other.IsDelayTime;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.HasIsUsingTimebank) {
        IsUsingTimebank = other.IsUsingTimebank;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasClubName) {
        ClubName = other.ClubName;
      }
      if (other.HasLevel) {
        Level = other.Level;
      }
      if (other.HasFrameId) {
        FrameId = other.FrameId;
      }
      if (other.HasRoadChips) {
        RoadChips = other.RoadChips;
      }
      if (other.HasCertification) {
        Certification = other.Certification;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 26: {
            if (card_ == null) {
              Card = new global::Texas.Protocol.PineCard();
            }
            input.ReadMessage(Card);
            break;
          }
          case 32: {
            RebuyLeftTime = input.ReadInt32();
            break;
          }
          case 40: {
            VipLevel = input.ReadUInt32();
            break;
          }
          case 48: {
            Fantasy = input.ReadInt32();
            break;
          }
          case 56: {
            SittingOut = input.ReadBool();
            break;
          }
          case 64: {
            ActionLeftTime = input.ReadInt32();
            break;
          }
          case 74: {
            Icon = input.ReadString();
            break;
          }
          case 82: {
            Name = input.ReadString();
            break;
          }
          case 88: {
            Chips = input.ReadInt64();
            break;
          }
          case 96: {
            Ready = input.ReadBool();
            break;
          }
          case 104: {
            AbleReady = input.ReadBool();
            break;
          }
          case 112: {
            AbleReadyLeftTime = input.ReadBool();
            break;
          }
          case 120: {
            AddActiontimeDiamond = input.ReadInt32();
            break;
          }
          case 128: {
            AddActiontimeVipFreeTimes = input.ReadInt32();
            break;
          }
          case 136: {
            AddActiontimeGiftbagFreeTimes = input.ReadInt32();
            break;
          }
          case 144: {
            LeaveRoomAfterThisHand = input.ReadBool();
            break;
          }
          case 152: {
            IsDelayTime = input.ReadBool();
            break;
          }
          case 160: {
            Status = input.ReadInt32();
            break;
          }
          case 168: {
            IsUsingTimebank = input.ReadBool();
            break;
          }
          case 176: {
            Clubid = input.ReadInt32();
            break;
          }
          case 186: {
            ClubName = input.ReadString();
            break;
          }
          case 192: {
            Level = input.ReadInt32();
            break;
          }
          case 202: {
            FrameId = input.ReadString();
            break;
          }
          case 208: {
            RoadChips = input.ReadInt64();
            break;
          }
          case 216: {
            Certification = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Uid = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 26: {
            if (card_ == null) {
              Card = new global::Texas.Protocol.PineCard();
            }
            input.ReadMessage(Card);
            break;
          }
          case 32: {
            RebuyLeftTime = input.ReadInt32();
            break;
          }
          case 40: {
            VipLevel = input.ReadUInt32();
            break;
          }
          case 48: {
            Fantasy = input.ReadInt32();
            break;
          }
          case 56: {
            SittingOut = input.ReadBool();
            break;
          }
          case 64: {
            ActionLeftTime = input.ReadInt32();
            break;
          }
          case 74: {
            Icon = input.ReadString();
            break;
          }
          case 82: {
            Name = input.ReadString();
            break;
          }
          case 88: {
            Chips = input.ReadInt64();
            break;
          }
          case 96: {
            Ready = input.ReadBool();
            break;
          }
          case 104: {
            AbleReady = input.ReadBool();
            break;
          }
          case 112: {
            AbleReadyLeftTime = input.ReadBool();
            break;
          }
          case 120: {
            AddActiontimeDiamond = input.ReadInt32();
            break;
          }
          case 128: {
            AddActiontimeVipFreeTimes = input.ReadInt32();
            break;
          }
          case 136: {
            AddActiontimeGiftbagFreeTimes = input.ReadInt32();
            break;
          }
          case 144: {
            LeaveRoomAfterThisHand = input.ReadBool();
            break;
          }
          case 152: {
            IsDelayTime = input.ReadBool();
            break;
          }
          case 160: {
            Status = input.ReadInt32();
            break;
          }
          case 168: {
            IsUsingTimebank = input.ReadBool();
            break;
          }
          case 176: {
            Clubid = input.ReadInt32();
            break;
          }
          case 186: {
            ClubName = input.ReadString();
            break;
          }
          case 192: {
            Level = input.ReadInt32();
            break;
          }
          case 202: {
            FrameId = input.ReadString();
            break;
          }
          case 208: {
            RoadChips = input.ReadInt64();
            break;
          }
          case 216: {
            Certification = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///大菠萝局终结果比分
  /// </summary>
  public sealed partial class PineResultScore : pb::IMessage<PineResultScore>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineResultScore> _parser = new pb::MessageParser<PineResultScore>(() => new PineResultScore());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineResultScore> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineResultScore() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineResultScore(PineResultScore other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      seatid_ = other.seatid_;
      headScore_ = other.headScore_;
      middleScore_ = other.middleScore_;
      tailScore_ = other.tailScore_;
      allwinScore_ = other.allwinScore_;
      profit_ = other.profit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineResultScore Clone() {
      return new PineResultScore(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static int UidDefaultValue = 0;

    private int uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 2;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 2) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "head_score" field.</summary>
    public const int HeadScoreFieldNumber = 3;
    private readonly static int HeadScoreDefaultValue = 0;

    private int headScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HeadScore {
      get { if ((_hasBits0 & 4) != 0) { return headScore_; } else { return HeadScoreDefaultValue; } }
      set {
        _hasBits0 |= 4;
        headScore_ = value;
      }
    }
    /// <summary>Gets whether the "head_score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeadScore {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "head_score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeadScore() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "middle_score" field.</summary>
    public const int MiddleScoreFieldNumber = 4;
    private readonly static int MiddleScoreDefaultValue = 0;

    private int middleScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MiddleScore {
      get { if ((_hasBits0 & 8) != 0) { return middleScore_; } else { return MiddleScoreDefaultValue; } }
      set {
        _hasBits0 |= 8;
        middleScore_ = value;
      }
    }
    /// <summary>Gets whether the "middle_score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMiddleScore {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "middle_score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMiddleScore() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "tail_score" field.</summary>
    public const int TailScoreFieldNumber = 5;
    private readonly static int TailScoreDefaultValue = 0;

    private int tailScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TailScore {
      get { if ((_hasBits0 & 16) != 0) { return tailScore_; } else { return TailScoreDefaultValue; } }
      set {
        _hasBits0 |= 16;
        tailScore_ = value;
      }
    }
    /// <summary>Gets whether the "tail_score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTailScore {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "tail_score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTailScore() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "allwin_score" field.</summary>
    public const int AllwinScoreFieldNumber = 6;
    private readonly static int AllwinScoreDefaultValue = 0;

    private int allwinScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AllwinScore {
      get { if ((_hasBits0 & 32) != 0) { return allwinScore_; } else { return AllwinScoreDefaultValue; } }
      set {
        _hasBits0 |= 32;
        allwinScore_ = value;
      }
    }
    /// <summary>Gets whether the "allwin_score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAllwinScore {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "allwin_score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAllwinScore() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "profit" field.</summary>
    public const int ProfitFieldNumber = 7;
    private readonly static long ProfitDefaultValue = 0L;

    private long profit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Profit {
      get { if ((_hasBits0 & 64) != 0) { return profit_; } else { return ProfitDefaultValue; } }
      set {
        _hasBits0 |= 64;
        profit_ = value;
      }
    }
    /// <summary>Gets whether the "profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProfit {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProfit() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineResultScore);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineResultScore other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Seatid != other.Seatid) return false;
      if (HeadScore != other.HeadScore) return false;
      if (MiddleScore != other.MiddleScore) return false;
      if (TailScore != other.TailScore) return false;
      if (AllwinScore != other.AllwinScore) return false;
      if (Profit != other.Profit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasHeadScore) hash ^= HeadScore.GetHashCode();
      if (HasMiddleScore) hash ^= MiddleScore.GetHashCode();
      if (HasTailScore) hash ^= TailScore.GetHashCode();
      if (HasAllwinScore) hash ^= AllwinScore.GetHashCode();
      if (HasProfit) hash ^= Profit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt32(Uid);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasHeadScore) {
        output.WriteRawTag(24);
        output.WriteInt32(HeadScore);
      }
      if (HasMiddleScore) {
        output.WriteRawTag(32);
        output.WriteInt32(MiddleScore);
      }
      if (HasTailScore) {
        output.WriteRawTag(40);
        output.WriteInt32(TailScore);
      }
      if (HasAllwinScore) {
        output.WriteRawTag(48);
        output.WriteInt32(AllwinScore);
      }
      if (HasProfit) {
        output.WriteRawTag(56);
        output.WriteInt64(Profit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt32(Uid);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasHeadScore) {
        output.WriteRawTag(24);
        output.WriteInt32(HeadScore);
      }
      if (HasMiddleScore) {
        output.WriteRawTag(32);
        output.WriteInt32(MiddleScore);
      }
      if (HasTailScore) {
        output.WriteRawTag(40);
        output.WriteInt32(TailScore);
      }
      if (HasAllwinScore) {
        output.WriteRawTag(48);
        output.WriteInt32(AllwinScore);
      }
      if (HasProfit) {
        output.WriteRawTag(56);
        output.WriteInt64(Profit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uid);
      }
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasHeadScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeadScore);
      }
      if (HasMiddleScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MiddleScore);
      }
      if (HasTailScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TailScore);
      }
      if (HasAllwinScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AllwinScore);
      }
      if (HasProfit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Profit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineResultScore other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasHeadScore) {
        HeadScore = other.HeadScore;
      }
      if (other.HasMiddleScore) {
        MiddleScore = other.MiddleScore;
      }
      if (other.HasTailScore) {
        TailScore = other.TailScore;
      }
      if (other.HasAllwinScore) {
        AllwinScore = other.AllwinScore;
      }
      if (other.HasProfit) {
        Profit = other.Profit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            HeadScore = input.ReadInt32();
            break;
          }
          case 32: {
            MiddleScore = input.ReadInt32();
            break;
          }
          case 40: {
            TailScore = input.ReadInt32();
            break;
          }
          case 48: {
            AllwinScore = input.ReadInt32();
            break;
          }
          case 56: {
            Profit = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Uid = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            HeadScore = input.ReadInt32();
            break;
          }
          case 32: {
            MiddleScore = input.ReadInt32();
            break;
          }
          case 40: {
            TailScore = input.ReadInt32();
            break;
          }
          case 48: {
            AllwinScore = input.ReadInt32();
            break;
          }
          case 56: {
            Profit = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///大菠萝局终玩家结果
  /// </summary>
  public sealed partial class PinePlayerResult : pb::IMessage<PinePlayerResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PinePlayerResult> _parser = new pb::MessageParser<PinePlayerResult>(() => new PinePlayerResult());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PinePlayerResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PinePlayerResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PinePlayerResult(PinePlayerResult other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      seatid_ = other.seatid_;
      card_ = other.card_ != null ? other.card_.Clone() : null;
      fantasy_ = other.fantasy_;
      name_ = other.name_;
      chips_ = other.chips_;
      icon_ = other.icon_;
      score_ = other.score_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PinePlayerResult Clone() {
      return new PinePlayerResult(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static int UidDefaultValue = 0;

    private int uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 2;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 2) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "card" field.</summary>
    public const int CardFieldNumber = 3;
    private global::Texas.Protocol.PineCard card_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PineCard Card {
      get { return card_; }
      set {
        card_ = value;
      }
    }

    /// <summary>Field number for the "fantasy" field.</summary>
    public const int FantasyFieldNumber = 4;
    private readonly static int FantasyDefaultValue = 0;

    private int fantasy_;
    /// <summary>
    ///下局范特西
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Fantasy {
      get { if ((_hasBits0 & 4) != 0) { return fantasy_; } else { return FantasyDefaultValue; } }
      set {
        _hasBits0 |= 4;
        fantasy_ = value;
      }
    }
    /// <summary>Gets whether the "fantasy" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFantasy {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "fantasy" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFantasy() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "chips" field.</summary>
    public const int ChipsFieldNumber = 6;
    private readonly static long ChipsDefaultValue = 0L;

    private long chips_;
    /// <summary>
    ///结算后手上的筹码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Chips {
      get { if ((_hasBits0 & 8) != 0) { return chips_; } else { return ChipsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        chips_ = value;
      }
    }
    /// <summary>Gets whether the "chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChips {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChips() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 7;
    private readonly static string IconDefaultValue = "";

    private string icon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_ ?? IconDefaultValue; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIcon {
      get { return icon_ != null; }
    }
    /// <summary>Clears the value of the "icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIcon() {
      icon_ = null;
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PineResultScore> _repeated_score_codec
        = pb::FieldCodec.ForMessage(66, global::Texas.Protocol.PineResultScore.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PineResultScore> score_ = new pbc::RepeatedField<global::Texas.Protocol.PineResultScore>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PineResultScore> Score {
      get { return score_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PinePlayerResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PinePlayerResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Seatid != other.Seatid) return false;
      if (!object.Equals(Card, other.Card)) return false;
      if (Fantasy != other.Fantasy) return false;
      if (Name != other.Name) return false;
      if (Chips != other.Chips) return false;
      if (Icon != other.Icon) return false;
      if(!score_.Equals(other.score_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (card_ != null) hash ^= Card.GetHashCode();
      if (HasFantasy) hash ^= Fantasy.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasChips) hash ^= Chips.GetHashCode();
      if (HasIcon) hash ^= Icon.GetHashCode();
      hash ^= score_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt32(Uid);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (card_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Card);
      }
      if (HasFantasy) {
        output.WriteRawTag(32);
        output.WriteInt32(Fantasy);
      }
      if (HasName) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (HasChips) {
        output.WriteRawTag(48);
        output.WriteInt64(Chips);
      }
      if (HasIcon) {
        output.WriteRawTag(58);
        output.WriteString(Icon);
      }
      score_.WriteTo(output, _repeated_score_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt32(Uid);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (card_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Card);
      }
      if (HasFantasy) {
        output.WriteRawTag(32);
        output.WriteInt32(Fantasy);
      }
      if (HasName) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (HasChips) {
        output.WriteRawTag(48);
        output.WriteInt64(Chips);
      }
      if (HasIcon) {
        output.WriteRawTag(58);
        output.WriteString(Icon);
      }
      score_.WriteTo(ref output, _repeated_score_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uid);
      }
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (card_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Card);
      }
      if (HasFantasy) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Fantasy);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Chips);
      }
      if (HasIcon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      size += score_.CalculateSize(_repeated_score_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PinePlayerResult other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.card_ != null) {
        if (card_ == null) {
          Card = new global::Texas.Protocol.PineCard();
        }
        Card.MergeFrom(other.Card);
      }
      if (other.HasFantasy) {
        Fantasy = other.Fantasy;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasChips) {
        Chips = other.Chips;
      }
      if (other.HasIcon) {
        Icon = other.Icon;
      }
      score_.Add(other.score_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 26: {
            if (card_ == null) {
              Card = new global::Texas.Protocol.PineCard();
            }
            input.ReadMessage(Card);
            break;
          }
          case 32: {
            Fantasy = input.ReadInt32();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 48: {
            Chips = input.ReadInt64();
            break;
          }
          case 58: {
            Icon = input.ReadString();
            break;
          }
          case 66: {
            score_.AddEntriesFrom(input, _repeated_score_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Uid = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 26: {
            if (card_ == null) {
              Card = new global::Texas.Protocol.PineCard();
            }
            input.ReadMessage(Card);
            break;
          }
          case 32: {
            Fantasy = input.ReadInt32();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 48: {
            Chips = input.ReadInt64();
            break;
          }
          case 58: {
            Icon = input.ReadString();
            break;
          }
          case 66: {
            score_.AddEntriesFrom(ref input, _repeated_score_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///大菠萝房间信息
  /// </summary>
  public sealed partial class PineRoomStatus : pb::IMessage<PineRoomStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineRoomStatus> _parser = new pb::MessageParser<PineRoomStatus>(() => new PineRoomStatus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineRoomStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineRoomStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineRoomStatus(PineRoomStatus other) : this() {
      _hasBits0 = other._hasBits0;
      pinePlayingStatus_ = other.pinePlayingStatus_.Clone();
      dealerSeatid_ = other.dealerSeatid_;
      playerResult_ = other.playerResult_.Clone();
      actionType_ = other.actionType_;
      passwdLimit_ = other.passwdLimit_;
      passwd_ = other.passwd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineRoomStatus Clone() {
      return new PineRoomStatus(this);
    }

    /// <summary>Field number for the "pine_playing_status" field.</summary>
    public const int PinePlayingStatusFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PinePlayingStatus> _repeated_pinePlayingStatus_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.PinePlayingStatus.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PinePlayingStatus> pinePlayingStatus_ = new pbc::RepeatedField<global::Texas.Protocol.PinePlayingStatus>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PinePlayingStatus> PinePlayingStatus {
      get { return pinePlayingStatus_; }
    }

    /// <summary>Field number for the "dealer_seatid" field.</summary>
    public const int DealerSeatidFieldNumber = 2;
    private readonly static int DealerSeatidDefaultValue = 0;

    private int dealerSeatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DealerSeatid {
      get { if ((_hasBits0 & 1) != 0) { return dealerSeatid_; } else { return DealerSeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        dealerSeatid_ = value;
      }
    }
    /// <summary>Gets whether the "dealer_seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDealerSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "dealer_seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDealerSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "player_result" field.</summary>
    public const int PlayerResultFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PinePlayerResult> _repeated_playerResult_codec
        = pb::FieldCodec.ForMessage(26, global::Texas.Protocol.PinePlayerResult.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PinePlayerResult> playerResult_ = new pbc::RepeatedField<global::Texas.Protocol.PinePlayerResult>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PinePlayerResult> PlayerResult {
      get { return playerResult_; }
    }

    /// <summary>Field number for the "action_type" field.</summary>
    public const int ActionTypeFieldNumber = 4;
    private readonly static int ActionTypeDefaultValue = 0;

    private int actionType_;
    /// <summary>
    ///1、同时操作  2、顺序操作
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActionType {
      get { if ((_hasBits0 & 2) != 0) { return actionType_; } else { return ActionTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        actionType_ = value;
      }
    }
    /// <summary>Gets whether the "action_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActionType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "action_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActionType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "passwd_limit" field.</summary>
    public const int PasswdLimitFieldNumber = 5;
    private readonly static bool PasswdLimitDefaultValue = false;

    private bool passwdLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PasswdLimit {
      get { if ((_hasBits0 & 4) != 0) { return passwdLimit_; } else { return PasswdLimitDefaultValue; } }
      set {
        _hasBits0 |= 4;
        passwdLimit_ = value;
      }
    }
    /// <summary>Gets whether the "passwd_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPasswdLimit {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "passwd_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPasswdLimit() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "passwd" field.</summary>
    public const int PasswdFieldNumber = 6;
    private readonly static string PasswdDefaultValue = "";

    private string passwd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Passwd {
      get { return passwd_ ?? PasswdDefaultValue; }
      set {
        passwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "passwd" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPasswd {
      get { return passwd_ != null; }
    }
    /// <summary>Clears the value of the "passwd" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPasswd() {
      passwd_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineRoomStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineRoomStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pinePlayingStatus_.Equals(other.pinePlayingStatus_)) return false;
      if (DealerSeatid != other.DealerSeatid) return false;
      if(!playerResult_.Equals(other.playerResult_)) return false;
      if (ActionType != other.ActionType) return false;
      if (PasswdLimit != other.PasswdLimit) return false;
      if (Passwd != other.Passwd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pinePlayingStatus_.GetHashCode();
      if (HasDealerSeatid) hash ^= DealerSeatid.GetHashCode();
      hash ^= playerResult_.GetHashCode();
      if (HasActionType) hash ^= ActionType.GetHashCode();
      if (HasPasswdLimit) hash ^= PasswdLimit.GetHashCode();
      if (HasPasswd) hash ^= Passwd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      pinePlayingStatus_.WriteTo(output, _repeated_pinePlayingStatus_codec);
      if (HasDealerSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(DealerSeatid);
      }
      playerResult_.WriteTo(output, _repeated_playerResult_codec);
      if (HasActionType) {
        output.WriteRawTag(32);
        output.WriteInt32(ActionType);
      }
      if (HasPasswdLimit) {
        output.WriteRawTag(40);
        output.WriteBool(PasswdLimit);
      }
      if (HasPasswd) {
        output.WriteRawTag(50);
        output.WriteString(Passwd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      pinePlayingStatus_.WriteTo(ref output, _repeated_pinePlayingStatus_codec);
      if (HasDealerSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(DealerSeatid);
      }
      playerResult_.WriteTo(ref output, _repeated_playerResult_codec);
      if (HasActionType) {
        output.WriteRawTag(32);
        output.WriteInt32(ActionType);
      }
      if (HasPasswdLimit) {
        output.WriteRawTag(40);
        output.WriteBool(PasswdLimit);
      }
      if (HasPasswd) {
        output.WriteRawTag(50);
        output.WriteString(Passwd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += pinePlayingStatus_.CalculateSize(_repeated_pinePlayingStatus_codec);
      if (HasDealerSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DealerSeatid);
      }
      size += playerResult_.CalculateSize(_repeated_playerResult_codec);
      if (HasActionType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionType);
      }
      if (HasPasswdLimit) {
        size += 1 + 1;
      }
      if (HasPasswd) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Passwd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineRoomStatus other) {
      if (other == null) {
        return;
      }
      pinePlayingStatus_.Add(other.pinePlayingStatus_);
      if (other.HasDealerSeatid) {
        DealerSeatid = other.DealerSeatid;
      }
      playerResult_.Add(other.playerResult_);
      if (other.HasActionType) {
        ActionType = other.ActionType;
      }
      if (other.HasPasswdLimit) {
        PasswdLimit = other.PasswdLimit;
      }
      if (other.HasPasswd) {
        Passwd = other.Passwd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            pinePlayingStatus_.AddEntriesFrom(input, _repeated_pinePlayingStatus_codec);
            break;
          }
          case 16: {
            DealerSeatid = input.ReadInt32();
            break;
          }
          case 26: {
            playerResult_.AddEntriesFrom(input, _repeated_playerResult_codec);
            break;
          }
          case 32: {
            ActionType = input.ReadInt32();
            break;
          }
          case 40: {
            PasswdLimit = input.ReadBool();
            break;
          }
          case 50: {
            Passwd = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            pinePlayingStatus_.AddEntriesFrom(ref input, _repeated_pinePlayingStatus_codec);
            break;
          }
          case 16: {
            DealerSeatid = input.ReadInt32();
            break;
          }
          case 26: {
            playerResult_.AddEntriesFrom(ref input, _repeated_playerResult_codec);
            break;
          }
          case 32: {
            ActionType = input.ReadInt32();
            break;
          }
          case 40: {
            PasswdLimit = input.ReadBool();
            break;
          }
          case 50: {
            Passwd = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///大菠萝局终结果广播
  /// </summary>
  public sealed partial class PineResultBRC : pb::IMessage<PineResultBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineResultBRC> _parser = new pb::MessageParser<PineResultBRC>(() => new PineResultBRC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineResultBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineResultBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineResultBRC(PineResultBRC other) : this() {
      playerResult_ = other.playerResult_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineResultBRC Clone() {
      return new PineResultBRC(this);
    }

    /// <summary>Field number for the "player_result" field.</summary>
    public const int PlayerResultFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PinePlayerResult> _repeated_playerResult_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.PinePlayerResult.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PinePlayerResult> playerResult_ = new pbc::RepeatedField<global::Texas.Protocol.PinePlayerResult>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PinePlayerResult> PlayerResult {
      get { return playerResult_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineResultBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineResultBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!playerResult_.Equals(other.playerResult_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= playerResult_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      playerResult_.WriteTo(output, _repeated_playerResult_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      playerResult_.WriteTo(ref output, _repeated_playerResult_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += playerResult_.CalculateSize(_repeated_playerResult_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineResultBRC other) {
      if (other == null) {
        return;
      }
      playerResult_.Add(other.playerResult_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            playerResult_.AddEntriesFrom(input, _repeated_playerResult_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            playerResult_.AddEntriesFrom(ref input, _repeated_playerResult_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///大菠萝牌局回顾请求
  /// </summary>
  public sealed partial class PineGameIdREQ : pb::IMessage<PineGameIdREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineGameIdREQ> _parser = new pb::MessageParser<PineGameIdREQ>(() => new PineGameIdREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineGameIdREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineGameIdREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineGameIdREQ(PineGameIdREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineGameIdREQ Clone() {
      return new PineGameIdREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineGameIdREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineGameIdREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineGameIdREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  ///大菠萝牌局回顾返回
  /// </summary>
  public sealed partial class PineGameIdRSP : pb::IMessage<PineGameIdRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineGameIdRSP> _parser = new pb::MessageParser<PineGameIdRSP>(() => new PineGameIdRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineGameIdRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineGameIdRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineGameIdRSP(PineGameIdRSP other) : this() {
      _hasBits0 = other._hasBits0;
      gameId_ = other.gameId_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineGameIdRSP Clone() {
      return new PineGameIdRSP(this);
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_gameId_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> gameId_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> GameId {
      get { return gameId_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private readonly static int TotalDefaultValue = 0;

    private int total_;
    /// <summary>
    ///总数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Total {
      get { if ((_hasBits0 & 1) != 0) { return total_; } else { return TotalDefaultValue; } }
      set {
        _hasBits0 |= 1;
        total_ = value;
      }
    }
    /// <summary>Gets whether the "total" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotal {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "total" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotal() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineGameIdRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineGameIdRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gameId_.Equals(other.gameId_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gameId_.GetHashCode();
      if (HasTotal) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      gameId_.WriteTo(output, _repeated_gameId_codec);
      if (HasTotal) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      gameId_.WriteTo(ref output, _repeated_gameId_codec);
      if (HasTotal) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += gameId_.CalculateSize(_repeated_gameId_codec);
      if (HasTotal) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineGameIdRSP other) {
      if (other == null) {
        return;
      }
      gameId_.Add(other.gameId_);
      if (other.HasTotal) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            gameId_.AddEntriesFrom(input, _repeated_gameId_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            gameId_.AddEntriesFrom(ref input, _repeated_gameId_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///大菠萝牌局请求
  /// </summary>
  public sealed partial class PineGameRecordREQ : pb::IMessage<PineGameRecordREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineGameRecordREQ> _parser = new pb::MessageParser<PineGameRecordREQ>(() => new PineGameRecordREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineGameRecordREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineGameRecordREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineGameRecordREQ(PineGameRecordREQ other) : this() {
      gameId_ = other.gameId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineGameRecordREQ Clone() {
      return new PineGameRecordREQ(this);
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_gameId_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> gameId_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> GameId {
      get { return gameId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineGameRecordREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineGameRecordREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gameId_.Equals(other.gameId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gameId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      gameId_.WriteTo(output, _repeated_gameId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      gameId_.WriteTo(ref output, _repeated_gameId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += gameId_.CalculateSize(_repeated_gameId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineGameRecordREQ other) {
      if (other == null) {
        return;
      }
      gameId_.Add(other.gameId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            gameId_.AddEntriesFrom(input, _repeated_gameId_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            gameId_.AddEntriesFrom(ref input, _repeated_gameId_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///大菠萝牌局记录
  /// </summary>
  public sealed partial class PineGameRecord : pb::IMessage<PineGameRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineGameRecord> _parser = new pb::MessageParser<PineGameRecord>(() => new PineGameRecord());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineGameRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineGameRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineGameRecord(PineGameRecord other) : this() {
      _hasBits0 = other._hasBits0;
      playerResult_ = other.playerResult_.Clone();
      dealerSeatid_ = other.dealerSeatid_;
      gameId_ = other.gameId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineGameRecord Clone() {
      return new PineGameRecord(this);
    }

    /// <summary>Field number for the "player_result" field.</summary>
    public const int PlayerResultFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PinePlayerResult> _repeated_playerResult_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.PinePlayerResult.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PinePlayerResult> playerResult_ = new pbc::RepeatedField<global::Texas.Protocol.PinePlayerResult>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PinePlayerResult> PlayerResult {
      get { return playerResult_; }
    }

    /// <summary>Field number for the "dealer_seatid" field.</summary>
    public const int DealerSeatidFieldNumber = 2;
    private readonly static int DealerSeatidDefaultValue = 0;

    private int dealerSeatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DealerSeatid {
      get { if ((_hasBits0 & 1) != 0) { return dealerSeatid_; } else { return DealerSeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        dealerSeatid_ = value;
      }
    }
    /// <summary>Gets whether the "dealer_seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDealerSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "dealer_seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDealerSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 3;
    private readonly static string GameIdDefaultValue = "";

    private string gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GameId {
      get { return gameId_ ?? GameIdDefaultValue; }
      set {
        gameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "game_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return gameId_ != null; }
    }
    /// <summary>Clears the value of the "game_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      gameId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineGameRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineGameRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!playerResult_.Equals(other.playerResult_)) return false;
      if (DealerSeatid != other.DealerSeatid) return false;
      if (GameId != other.GameId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= playerResult_.GetHashCode();
      if (HasDealerSeatid) hash ^= DealerSeatid.GetHashCode();
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      playerResult_.WriteTo(output, _repeated_playerResult_codec);
      if (HasDealerSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(DealerSeatid);
      }
      if (HasGameId) {
        output.WriteRawTag(26);
        output.WriteString(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      playerResult_.WriteTo(ref output, _repeated_playerResult_codec);
      if (HasDealerSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(DealerSeatid);
      }
      if (HasGameId) {
        output.WriteRawTag(26);
        output.WriteString(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += playerResult_.CalculateSize(_repeated_playerResult_codec);
      if (HasDealerSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DealerSeatid);
      }
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineGameRecord other) {
      if (other == null) {
        return;
      }
      playerResult_.Add(other.playerResult_);
      if (other.HasDealerSeatid) {
        DealerSeatid = other.DealerSeatid;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            playerResult_.AddEntriesFrom(input, _repeated_playerResult_codec);
            break;
          }
          case 16: {
            DealerSeatid = input.ReadInt32();
            break;
          }
          case 26: {
            GameId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            playerResult_.AddEntriesFrom(ref input, _repeated_playerResult_codec);
            break;
          }
          case 16: {
            DealerSeatid = input.ReadInt32();
            break;
          }
          case 26: {
            GameId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///大菠萝牌局返回
  /// </summary>
  public sealed partial class PineGameRecordRSP : pb::IMessage<PineGameRecordRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineGameRecordRSP> _parser = new pb::MessageParser<PineGameRecordRSP>(() => new PineGameRecordRSP());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineGameRecordRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineGameRecordRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineGameRecordRSP(PineGameRecordRSP other) : this() {
      gameRecord_ = other.gameRecord_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineGameRecordRSP Clone() {
      return new PineGameRecordRSP(this);
    }

    /// <summary>Field number for the "game_record" field.</summary>
    public const int GameRecordFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PineGameRecord> _repeated_gameRecord_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.PineGameRecord.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PineGameRecord> gameRecord_ = new pbc::RepeatedField<global::Texas.Protocol.PineGameRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PineGameRecord> GameRecord {
      get { return gameRecord_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineGameRecordRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineGameRecordRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gameRecord_.Equals(other.gameRecord_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gameRecord_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      gameRecord_.WriteTo(output, _repeated_gameRecord_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      gameRecord_.WriteTo(ref output, _repeated_gameRecord_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += gameRecord_.CalculateSize(_repeated_gameRecord_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineGameRecordRSP other) {
      if (other == null) {
        return;
      }
      gameRecord_.Add(other.gameRecord_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            gameRecord_.AddEntriesFrom(input, _repeated_gameRecord_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            gameRecord_.AddEntriesFrom(ref input, _repeated_gameRecord_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PineGameStartInfo : pb::IMessage<PineGameStartInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineGameStartInfo> _parser = new pb::MessageParser<PineGameStartInfo>(() => new PineGameStartInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineGameStartInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineGameStartInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineGameStartInfo(PineGameStartInfo other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      seatid_ = other.seatid_;
      chips_ = other.chips_;
      fantasy_ = other.fantasy_;
      playing_ = other.playing_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineGameStartInfo Clone() {
      return new PineGameStartInfo(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static int UidDefaultValue = 0;

    private int uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 2;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 2) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "chips" field.</summary>
    public const int ChipsFieldNumber = 3;
    private readonly static long ChipsDefaultValue = 0L;

    private long chips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Chips {
      get { if ((_hasBits0 & 4) != 0) { return chips_; } else { return ChipsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        chips_ = value;
      }
    }
    /// <summary>Gets whether the "chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChips {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChips() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "fantasy" field.</summary>
    public const int FantasyFieldNumber = 4;
    private readonly static int FantasyDefaultValue = 0;

    private int fantasy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Fantasy {
      get { if ((_hasBits0 & 8) != 0) { return fantasy_; } else { return FantasyDefaultValue; } }
      set {
        _hasBits0 |= 8;
        fantasy_ = value;
      }
    }
    /// <summary>Gets whether the "fantasy" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFantasy {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "fantasy" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFantasy() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "playing" field.</summary>
    public const int PlayingFieldNumber = 5;
    private readonly static bool PlayingDefaultValue = false;

    private bool playing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Playing {
      get { if ((_hasBits0 & 16) != 0) { return playing_; } else { return PlayingDefaultValue; } }
      set {
        _hasBits0 |= 16;
        playing_ = value;
      }
    }
    /// <summary>Gets whether the "playing" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlaying {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "playing" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlaying() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineGameStartInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineGameStartInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Seatid != other.Seatid) return false;
      if (Chips != other.Chips) return false;
      if (Fantasy != other.Fantasy) return false;
      if (Playing != other.Playing) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasChips) hash ^= Chips.GetHashCode();
      if (HasFantasy) hash ^= Fantasy.GetHashCode();
      if (HasPlaying) hash ^= Playing.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt32(Uid);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasChips) {
        output.WriteRawTag(24);
        output.WriteInt64(Chips);
      }
      if (HasFantasy) {
        output.WriteRawTag(32);
        output.WriteInt32(Fantasy);
      }
      if (HasPlaying) {
        output.WriteRawTag(40);
        output.WriteBool(Playing);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt32(Uid);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasChips) {
        output.WriteRawTag(24);
        output.WriteInt64(Chips);
      }
      if (HasFantasy) {
        output.WriteRawTag(32);
        output.WriteInt32(Fantasy);
      }
      if (HasPlaying) {
        output.WriteRawTag(40);
        output.WriteBool(Playing);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uid);
      }
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Chips);
      }
      if (HasFantasy) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Fantasy);
      }
      if (HasPlaying) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineGameStartInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasChips) {
        Chips = other.Chips;
      }
      if (other.HasFantasy) {
        Fantasy = other.Fantasy;
      }
      if (other.HasPlaying) {
        Playing = other.Playing;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            Chips = input.ReadInt64();
            break;
          }
          case 32: {
            Fantasy = input.ReadInt32();
            break;
          }
          case 40: {
            Playing = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Uid = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            Chips = input.ReadInt64();
            break;
          }
          case 32: {
            Fantasy = input.ReadInt32();
            break;
          }
          case 40: {
            Playing = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PineGameStartBRC : pb::IMessage<PineGameStartBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineGameStartBRC> _parser = new pb::MessageParser<PineGameStartBRC>(() => new PineGameStartBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineGameStartBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineGameStartBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineGameStartBRC(PineGameStartBRC other) : this() {
      _hasBits0 = other._hasBits0;
      dealerSeatid_ = other.dealerSeatid_;
      leftTime_ = other.leftTime_;
      startInfo_ = other.startInfo_.Clone();
      actionType_ = other.actionType_;
      gameid_ = other.gameid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineGameStartBRC Clone() {
      return new PineGameStartBRC(this);
    }

    /// <summary>Field number for the "dealer_seatid" field.</summary>
    public const int DealerSeatidFieldNumber = 1;
    private readonly static int DealerSeatidDefaultValue = 0;

    private int dealerSeatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DealerSeatid {
      get { if ((_hasBits0 & 1) != 0) { return dealerSeatid_; } else { return DealerSeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        dealerSeatid_ = value;
      }
    }
    /// <summary>Gets whether the "dealer_seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDealerSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "dealer_seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDealerSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "left_time" field.</summary>
    public const int LeftTimeFieldNumber = 2;
    private readonly static int LeftTimeDefaultValue = 0;

    private int leftTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LeftTime {
      get { if ((_hasBits0 & 2) != 0) { return leftTime_; } else { return LeftTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        leftTime_ = value;
      }
    }
    /// <summary>Gets whether the "left_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeftTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "left_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeftTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "start_info" field.</summary>
    public const int StartInfoFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PineGameStartInfo> _repeated_startInfo_codec
        = pb::FieldCodec.ForMessage(26, global::Texas.Protocol.PineGameStartInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PineGameStartInfo> startInfo_ = new pbc::RepeatedField<global::Texas.Protocol.PineGameStartInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PineGameStartInfo> StartInfo {
      get { return startInfo_; }
    }

    /// <summary>Field number for the "action_type" field.</summary>
    public const int ActionTypeFieldNumber = 4;
    private readonly static int ActionTypeDefaultValue = 0;

    private int actionType_;
    /// <summary>
    ///1、同时操作  2、顺序操作
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActionType {
      get { if ((_hasBits0 & 4) != 0) { return actionType_; } else { return ActionTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        actionType_ = value;
      }
    }
    /// <summary>Gets whether the "action_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActionType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "action_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActionType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "gameid" field.</summary>
    public const int GameidFieldNumber = 5;
    private readonly static string GameidDefaultValue = "";

    private string gameid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Gameid {
      get { return gameid_ ?? GameidDefaultValue; }
      set {
        gameid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "gameid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameid {
      get { return gameid_ != null; }
    }
    /// <summary>Clears the value of the "gameid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameid() {
      gameid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineGameStartBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineGameStartBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DealerSeatid != other.DealerSeatid) return false;
      if (LeftTime != other.LeftTime) return false;
      if(!startInfo_.Equals(other.startInfo_)) return false;
      if (ActionType != other.ActionType) return false;
      if (Gameid != other.Gameid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDealerSeatid) hash ^= DealerSeatid.GetHashCode();
      if (HasLeftTime) hash ^= LeftTime.GetHashCode();
      hash ^= startInfo_.GetHashCode();
      if (HasActionType) hash ^= ActionType.GetHashCode();
      if (HasGameid) hash ^= Gameid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDealerSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(DealerSeatid);
      }
      if (HasLeftTime) {
        output.WriteRawTag(16);
        output.WriteInt32(LeftTime);
      }
      startInfo_.WriteTo(output, _repeated_startInfo_codec);
      if (HasActionType) {
        output.WriteRawTag(32);
        output.WriteInt32(ActionType);
      }
      if (HasGameid) {
        output.WriteRawTag(42);
        output.WriteString(Gameid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDealerSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(DealerSeatid);
      }
      if (HasLeftTime) {
        output.WriteRawTag(16);
        output.WriteInt32(LeftTime);
      }
      startInfo_.WriteTo(ref output, _repeated_startInfo_codec);
      if (HasActionType) {
        output.WriteRawTag(32);
        output.WriteInt32(ActionType);
      }
      if (HasGameid) {
        output.WriteRawTag(42);
        output.WriteString(Gameid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasDealerSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DealerSeatid);
      }
      if (HasLeftTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeftTime);
      }
      size += startInfo_.CalculateSize(_repeated_startInfo_codec);
      if (HasActionType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionType);
      }
      if (HasGameid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gameid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineGameStartBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasDealerSeatid) {
        DealerSeatid = other.DealerSeatid;
      }
      if (other.HasLeftTime) {
        LeftTime = other.LeftTime;
      }
      startInfo_.Add(other.startInfo_);
      if (other.HasActionType) {
        ActionType = other.ActionType;
      }
      if (other.HasGameid) {
        Gameid = other.Gameid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DealerSeatid = input.ReadInt32();
            break;
          }
          case 16: {
            LeftTime = input.ReadInt32();
            break;
          }
          case 26: {
            startInfo_.AddEntriesFrom(input, _repeated_startInfo_codec);
            break;
          }
          case 32: {
            ActionType = input.ReadInt32();
            break;
          }
          case 42: {
            Gameid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DealerSeatid = input.ReadInt32();
            break;
          }
          case 16: {
            LeftTime = input.ReadInt32();
            break;
          }
          case 26: {
            startInfo_.AddEntriesFrom(ref input, _repeated_startInfo_codec);
            break;
          }
          case 32: {
            ActionType = input.ReadInt32();
            break;
          }
          case 42: {
            Gameid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PineTableCountdownBRC : pb::IMessage<PineTableCountdownBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineTableCountdownBRC> _parser = new pb::MessageParser<PineTableCountdownBRC>(() => new PineTableCountdownBRC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineTableCountdownBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineTableCountdownBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineTableCountdownBRC(PineTableCountdownBRC other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineTableCountdownBRC Clone() {
      return new PineTableCountdownBRC(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineTableCountdownBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineTableCountdownBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineTableCountdownBRC other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class PineNeedGuideREQ : pb::IMessage<PineNeedGuideREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineNeedGuideREQ> _parser = new pb::MessageParser<PineNeedGuideREQ>(() => new PineNeedGuideREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineNeedGuideREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineNeedGuideREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineNeedGuideREQ(PineNeedGuideREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineNeedGuideREQ Clone() {
      return new PineNeedGuideREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineNeedGuideREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineNeedGuideREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineNeedGuideREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class PineNeedGuideRSP : pb::IMessage<PineNeedGuideRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineNeedGuideRSP> _parser = new pb::MessageParser<PineNeedGuideRSP>(() => new PineNeedGuideRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineNeedGuideRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineNeedGuideRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineNeedGuideRSP(PineNeedGuideRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineNeedGuideRSP Clone() {
      return new PineNeedGuideRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineNeedGuideRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineNeedGuideRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineNeedGuideRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PineSitDownBRC : pb::IMessage<PineSitDownBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineSitDownBRC> _parser = new pb::MessageParser<PineSitDownBRC>(() => new PineSitDownBRC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineSitDownBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineSitDownBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineSitDownBRC(PineSitDownBRC other) : this() {
      pinePlayingStatus_ = other.pinePlayingStatus_ != null ? other.pinePlayingStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineSitDownBRC Clone() {
      return new PineSitDownBRC(this);
    }

    /// <summary>Field number for the "pine_playing_status" field.</summary>
    public const int PinePlayingStatusFieldNumber = 1;
    private global::Texas.Protocol.PinePlayingStatus pinePlayingStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PinePlayingStatus PinePlayingStatus {
      get { return pinePlayingStatus_; }
      set {
        pinePlayingStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineSitDownBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineSitDownBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PinePlayingStatus, other.PinePlayingStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (pinePlayingStatus_ != null) hash ^= PinePlayingStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (pinePlayingStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PinePlayingStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (pinePlayingStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PinePlayingStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (pinePlayingStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PinePlayingStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineSitDownBRC other) {
      if (other == null) {
        return;
      }
      if (other.pinePlayingStatus_ != null) {
        if (pinePlayingStatus_ == null) {
          PinePlayingStatus = new global::Texas.Protocol.PinePlayingStatus();
        }
        PinePlayingStatus.MergeFrom(other.PinePlayingStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (pinePlayingStatus_ == null) {
              PinePlayingStatus = new global::Texas.Protocol.PinePlayingStatus();
            }
            input.ReadMessage(PinePlayingStatus);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (pinePlayingStatus_ == null) {
              PinePlayingStatus = new global::Texas.Protocol.PinePlayingStatus();
            }
            input.ReadMessage(PinePlayingStatus);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///大菠萝房间信息
  /// </summary>
  public sealed partial class PineRoomStatusBRC : pb::IMessage<PineRoomStatusBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineRoomStatusBRC> _parser = new pb::MessageParser<PineRoomStatusBRC>(() => new PineRoomStatusBRC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineRoomStatusBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineRoomStatusBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineRoomStatusBRC(PineRoomStatusBRC other) : this() {
      pinePlayingStatus_ = other.pinePlayingStatus_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineRoomStatusBRC Clone() {
      return new PineRoomStatusBRC(this);
    }

    /// <summary>Field number for the "pine_playing_status" field.</summary>
    public const int PinePlayingStatusFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PinePlayingStatus> _repeated_pinePlayingStatus_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.PinePlayingStatus.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PinePlayingStatus> pinePlayingStatus_ = new pbc::RepeatedField<global::Texas.Protocol.PinePlayingStatus>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PinePlayingStatus> PinePlayingStatus {
      get { return pinePlayingStatus_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineRoomStatusBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineRoomStatusBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pinePlayingStatus_.Equals(other.pinePlayingStatus_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pinePlayingStatus_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      pinePlayingStatus_.WriteTo(output, _repeated_pinePlayingStatus_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      pinePlayingStatus_.WriteTo(ref output, _repeated_pinePlayingStatus_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += pinePlayingStatus_.CalculateSize(_repeated_pinePlayingStatus_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineRoomStatusBRC other) {
      if (other == null) {
        return;
      }
      pinePlayingStatus_.Add(other.pinePlayingStatus_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            pinePlayingStatus_.AddEntriesFrom(input, _repeated_pinePlayingStatus_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            pinePlayingStatus_.AddEntriesFrom(ref input, _repeated_pinePlayingStatus_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PineLeaveRoomBRC : pb::IMessage<PineLeaveRoomBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineLeaveRoomBRC> _parser = new pb::MessageParser<PineLeaveRoomBRC>(() => new PineLeaveRoomBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineLeaveRoomBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineLeaveRoomBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineLeaveRoomBRC(PineLeaveRoomBRC other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineLeaveRoomBRC Clone() {
      return new PineLeaveRoomBRC(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineLeaveRoomBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineLeaveRoomBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineLeaveRoomBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PineLeaveRoomRSP : pb::IMessage<PineLeaveRoomRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineLeaveRoomRSP> _parser = new pb::MessageParser<PineLeaveRoomRSP>(() => new PineLeaveRoomRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineLeaveRoomRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineLeaveRoomRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineLeaveRoomRSP(PineLeaveRoomRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      flag_ = other.flag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineLeaveRoomRSP Clone() {
      return new PineLeaveRoomRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "flag" field.</summary>
    public const int FlagFieldNumber = 2;
    private readonly static int FlagDefaultValue = 0;

    private int flag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Flag {
      get { if ((_hasBits0 & 2) != 0) { return flag_; } else { return FlagDefaultValue; } }
      set {
        _hasBits0 |= 2;
        flag_ = value;
      }
    }
    /// <summary>Gets whether the "flag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFlag {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "flag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFlag() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineLeaveRoomRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineLeaveRoomRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Flag != other.Flag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasFlag) hash ^= Flag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasFlag) {
        output.WriteRawTag(16);
        output.WriteInt32(Flag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasFlag) {
        output.WriteRawTag(16);
        output.WriteInt32(Flag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasFlag) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Flag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineLeaveRoomRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasFlag) {
        Flag = other.Flag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Flag = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Flag = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PineAddActionTimeBRC : pb::IMessage<PineAddActionTimeBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineAddActionTimeBRC> _parser = new pb::MessageParser<PineAddActionTimeBRC>(() => new PineAddActionTimeBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineAddActionTimeBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineAddActionTimeBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineAddActionTimeBRC(PineAddActionTimeBRC other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      seatid_ = other.seatid_;
      timeleft_ = other.timeleft_;
      nextCost_ = other.nextCost_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineAddActionTimeBRC Clone() {
      return new PineAddActionTimeBRC(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///-1 钻石不够   -2 不是下注座位   -3超过延时次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 2;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 2) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "timeleft" field.</summary>
    public const int TimeleftFieldNumber = 3;
    private readonly static int TimeleftDefaultValue = 0;

    private int timeleft_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Timeleft {
      get { if ((_hasBits0 & 4) != 0) { return timeleft_; } else { return TimeleftDefaultValue; } }
      set {
        _hasBits0 |= 4;
        timeleft_ = value;
      }
    }
    /// <summary>Gets whether the "timeleft" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimeleft {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "timeleft" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimeleft() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "next_cost" field.</summary>
    public const int NextCostFieldNumber = 4;
    private readonly static int NextCostDefaultValue = 0;

    private int nextCost_;
    /// <summary>
    ///下一次的钻石花费
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NextCost {
      get { if ((_hasBits0 & 8) != 0) { return nextCost_; } else { return NextCostDefaultValue; } }
      set {
        _hasBits0 |= 8;
        nextCost_ = value;
      }
    }
    /// <summary>Gets whether the "next_cost" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNextCost {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "next_cost" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNextCost() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 16) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineAddActionTimeBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineAddActionTimeBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Seatid != other.Seatid) return false;
      if (Timeleft != other.Timeleft) return false;
      if (NextCost != other.NextCost) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasTimeleft) hash ^= Timeleft.GetHashCode();
      if (HasNextCost) hash ^= NextCost.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasTimeleft) {
        output.WriteRawTag(24);
        output.WriteInt32(Timeleft);
      }
      if (HasNextCost) {
        output.WriteRawTag(32);
        output.WriteInt32(NextCost);
      }
      if (HasType) {
        output.WriteRawTag(40);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasTimeleft) {
        output.WriteRawTag(24);
        output.WriteInt32(Timeleft);
      }
      if (HasNextCost) {
        output.WriteRawTag(32);
        output.WriteInt32(NextCost);
      }
      if (HasType) {
        output.WriteRawTag(40);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasTimeleft) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Timeleft);
      }
      if (HasNextCost) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NextCost);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineAddActionTimeBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasTimeleft) {
        Timeleft = other.Timeleft;
      }
      if (other.HasNextCost) {
        NextCost = other.NextCost;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            Timeleft = input.ReadInt32();
            break;
          }
          case 32: {
            NextCost = input.ReadInt32();
            break;
          }
          case 40: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            Timeleft = input.ReadInt32();
            break;
          }
          case 32: {
            NextCost = input.ReadInt32();
            break;
          }
          case 40: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PineExchangeChipsRSP : pb::IMessage<PineExchangeChipsRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PineExchangeChipsRSP> _parser = new pb::MessageParser<PineExchangeChipsRSP>(() => new PineExchangeChipsRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PineExchangeChipsRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.PineReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineExchangeChipsRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineExchangeChipsRSP(PineExchangeChipsRSP other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PineExchangeChipsRSP Clone() {
      return new PineExchangeChipsRSP(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static int ResultDefaultValue = 0;

    private int result_;
    /// <summary>
    ///1 不补码成功    0 成功  -1 失败
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PineExchangeChipsRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PineExchangeChipsRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PineExchangeChipsRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
