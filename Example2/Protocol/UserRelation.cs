// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: user_relation.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Texas.Protocol {

  /// <summary>Holder for reflection information generated from user_relation.proto</summary>
  public static partial class UserRelationReflection {

    #region Descriptor
    /// <summary>File descriptor for user_relation.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UserRelationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChN1c2VyX3JlbGF0aW9uLnByb3RvGgpiYXNlLnByb3RvIs0BCgxVc2VyTWFy",
            "a0luZm8SEAoDdWlkGAEgASgJSACIAQESFAoHY29udGVudBgCIAEoCUgBiAEB",
            "EiQKCm1hcmtfY29sb3IYAyABKA4yCy5NYXJrQ29sb3JzSAKIAQESGAoLbm9f",
            "c3BlYWtpbmcYBCABKAVIA4gBARIVCghub19pbWFnZRgFIAEoBUgEiAEBQgYK",
            "BF91aWRCCgoIX2NvbnRlbnRCDQoLX21hcmtfY29sb3JCDgoMX25vX3NwZWFr",
            "aW5nQgsKCV9ub19pbWFnZSJ+CgtNYXJrVXNlclJFURIQCgN1aWQYASABKAlI",
            "AIgBARIgCgRtYXJrGAIgASgLMg0uVXNlck1hcmtJbmZvSAGIAQESGQoMcmVx",
            "X2Jhbl90eXBlGAMgASgDSAKIAQFCBgoEX3VpZEIHCgVfbWFya0IPCg1fcmVx",
            "X2Jhbl90eXBlIj0KD0dldFVzZXJNYXJrc1JFURIQCgN1aWQYASABKAlIAIgB",
            "ARIQCghtYXJrX3VpZBgCIAMoA0IGCgRfdWlkIkgKD0dldFVzZXJNYXJrc1JT",
            "UBIQCgN1aWQYASABKAlIAIgBARIbCgRtYXJrGAIgAygLMg0uVXNlck1hcmtJ",
            "bmZvQgYKBF91aWQiFAoSR2V0VXNlckFsbE1hcmtzUkVRIjEKEkdldFVzZXJB",
            "bGxNYXJrc1JTUBIbCgRtYXJrGAEgAygLMg0uVXNlck1hcmtJbmZvIoYBCgpS",
            "ZXdhcmRJbmZvEhEKBHR5cGUYASABKAVIAIgBARIQCgNudW0YAiABKANIAYgB",
            "ARIWCglpdGVtX25hbWUYAyABKAlIAogBARISCgVleHRyYRgEIAEoCUgDiAEB",
            "QgcKBV90eXBlQgYKBF9udW1CDAoKX2l0ZW1fbmFtZUIICgZfZXh0cmEiEgoQ",
            "VXNlckxldmVsSW5mb1JFUSKhAgoQVXNlckxldmVsSW5mb1JTUBISCgVsZXZl",
            "bBgBIAEoBUgAiAEBEhcKCmV4cGVyaWVuY2UYAiABKANIAYgBARIcCg90aGlz",
            "X2V4cGVyaWVuY2UYAyABKANIAogBARIcCg9uZXh0X2V4cGVyaWVuY2UYBCAB",
            "KANIA4gBARIhCgxuZXh0X3Jld2FyZHMYBSADKAsyCy5SZXdhcmRJbmZvEhEK",
            "BGRheXMYBiABKAVIBIgBARIWCgltYXhfbGV2ZWwYByABKAVIBYgBAUIICgZf",
            "bGV2ZWxCDQoLX2V4cGVyaWVuY2VCEgoQX3RoaXNfZXhwZXJpZW5jZUISChBf",
            "bmV4dF9leHBlcmllbmNlQgcKBV9kYXlzQgwKCl9tYXhfbGV2ZWwiUQoTVXNl",
            "ckxldmVsUmV3YXJkc0JSQxISCgVsZXZlbBgBIAEoBUgAiAEBEhwKB3Jld2Fy",
            "ZHMYAiADKAsyCy5SZXdhcmRJbmZvQggKBl9sZXZlbCJAChFPbGRVc2VyUmV3",
            "YXJkc0JSQxIrCg1sZXZlbF9yZXdhcmRzGAEgAygLMhQuVXNlckxldmVsUmV3",
            "YXJkc0JSQyKKAQoQR2V0VGFza1Jld2FyZFJFURIUCgd0YXNrX2lkGAEgASgF",
            "SACIAQESEQoEdHlwZRgCIAEoBUgBiAEBEhAKA2RheRgDIAEoBUgCiAEBEhMK",
            "BnJvb21pZBgEIAEoCUgDiAEBQgoKCF90YXNrX2lkQgcKBV90eXBlQgYKBF9k",
            "YXlCCQoHX3Jvb21pZCKMAQoQR2V0VGFza1Jld2FyZFJTUBIRCgRjb2RlGAEg",
            "ASgFSACIAQESFAoHdGFza19pZBgCIAEoBUgBiAEBEhEKBHR5cGUYAyABKAVI",
            "AogBARITCgZyb29taWQYBCABKAlIA4gBAUIHCgVfY29kZUIKCghfdGFza19p",
            "ZEIHCgVfdHlwZUIJCgdfcm9vbWlkItECCgtOZXdUYXNrSW5mbxIPCgJpZBgB",
            "IAEoBUgAiAEBEhMKBnN0YXR1cxgCIAEoBUgBiAEBEhMKBm1vZHVsZRgDIAEo",
            "BUgCiAEBEhEKBHR5cGUYBCABKAVIA4gBARIUCgdjb250ZW50GAUgASgJSASI",
            "AQESFQoIcHJvZ3Jlc3MYBiABKAlIBYgBARIcCgdyZF9pbmZvGAcgAygLMgsu",
            "UmV3YXJkSW5mbxIVCghkdXJfdHlwZRgIIAEoBUgGiAEBEhQKB3NvcnRfaWQY",
            "CSABKAVIB4gBARIWCgl0YXNrX2luZm8YCiABKAlICIgBAUIFCgNfaWRCCQoH",
            "X3N0YXR1c0IJCgdfbW9kdWxlQgcKBV90eXBlQgoKCF9jb250ZW50QgsKCV9w",
            "cm9ncmVzc0ILCglfZHVyX3R5cGVCCgoIX3NvcnRfaWRCDAoKX3Rhc2tfaW5m",
            "byIsCg5HZXRUYXNrTGlzdFJFURIRCgRsYW5nGAEgASgJSACIAQFCBwoFX2xh",
            "bmcilQEKDkdldFRhc2tMaXN0UlNQEhsKBXRhc2tzGAEgAygLMgwuTmV3VGFz",
            "a0luZm8SFwoKbGVhdmVfdGltZRgCIAEoBUgAiAEBEhAKA2RheRgDIAEoBUgB",
            "iAEBEhYKCW5ld19kYXl0aBgEIAEoBUgCiAEBQg0KC19sZWF2ZV90aW1lQgYK",
            "BF9kYXlCDAoKX25ld19kYXl0aCLSAQoQVXNlclJld2FyZE5vdGlmeRIQCgN1",
            "aWQYASABKANIAIgBARITCgZjbHViaWQYAiABKAVIAYgBARISCgVjaGlwcxgD",
            "IAEoA0gCiAEBEhUKCHN0b3JtX25vGAQgASgFSAOIAQESFQoIbGVhZ3VlaWQY",
            "BSABKAVIBIgBARITCgZyb29taWQYBiABKAVIBYgBAUIGCgRfdWlkQgkKB19j",
            "bHViaWRCCAoGX2NoaXBzQgsKCV9zdG9ybV9ub0ILCglfbGVhZ3VlaWRCCQoH",
            "X3Jvb21pZCJ3Cg1Vc2VyUmV3YXJkUkVREhMKBmNsdWJpZBgBIAEoBUgAiAEB",
            "EhUKCGxlYWd1ZWlkGAIgASgFSAGIAQESFQoIc3Rvcm1fbm8YAyABKAVIAogB",
            "AUIJCgdfY2x1YmlkQgsKCV9sZWFndWVpZEILCglfc3Rvcm1fbm8iaAoKVXNl",
            "clJld2FyZBIQCgN1aWQYASABKANIAIgBARISCgVjaGlwcxgCIAEoA0gBiAEB",
            "EhUKCG5pY2tuYW1lGAMgASgJSAKIAQFCBgoEX3VpZEIICgZfY2hpcHNCCwoJ",
            "X25pY2tuYW1lIvEBCg1Vc2VyUmV3YXJkUlNQEhEKBGNvZGUYASABKANIAIgB",
            "ARISCgVjaGlwcxgCIAEoA0gBiAEBEhwKB3Jld2FyZHMYAyADKAsyCy5Vc2Vy",
            "UmV3YXJkEhUKCHN0b3JtX25vGAQgASgFSAKIAQESFAoHbWludXRlcxgFIAEo",
            "BUgDiAEBEhUKCGxlYWd1ZWlkGAYgASgFSASIAQESEwoGY2x1YmlkGAcgASgF",
            "SAWIAQFCBwoFX2NvZGVCCAoGX2NoaXBzQgsKCV9zdG9ybV9ub0IKCghfbWlu",
            "dXRlc0ILCglfbGVhZ3VlaWRCCQoHX2NsdWJpZCLeAQoYVXNlclN0b3JtUmV3",
            "YXJkQnJvYWRjYXN0EhAKA3VpZBgBIAEoA0gAiAEBEhUKCG5pY2tuYW1lGAIg",
            "ASgJSAGIAQESEgoFY2hpcHMYAyABKANIAogBARITCgZjbHViaWQYBCABKAVI",
            "A4gBARIVCghsZWFndWVpZBgFIAEoBUgEiAEBEhUKCHN0b3JtX25vGAYgASgF",
            "SAWIAQFCBgoEX3VpZEILCglfbmlja25hbWVCCAoGX2NoaXBzQgkKB19jbHVi",
            "aWRCCwoJX2xlYWd1ZWlkQgsKCV9zdG9ybV9ubyJDChJTdG9ybUluZm9Ccm9h",
            "ZGNhc3QSJAoEaW5mbxgBIAEoCzIRLlBQY2hpcHNTdG9ybUluZm9IAIgBAUIH",
            "CgVfaW5mbyLMAQoRVXNlclNoYXJlSW5mb1B1c2gSEQoEdHlwZRgBIAEoBUgA",
            "iAEBEhAKA251bRgCIAEoBUgBiAEBEhIKBWNoaXBzGAMgASgDSAKIAQESEwoG",
            "cm9vbWlkGAQgASgFSAOIAQESEQoJdXNlcl9jYXJkGAUgAygFEhIKCnJvdW5k",
            "X2NhcmQYBiADKAUSEgoFYmxpbmQYByABKANIBIgBAUIHCgVfdHlwZUIGCgRf",
            "bnVtQggKBl9jaGlwc0IJCgdfcm9vbWlkQggKBl9ibGluZCJRChdVc2VyUGlj",
            "dHVyZUZyYW1lTGlzdFJFURItCgR0eXBlGAEgASgOMhouVXNlclF1ZXJ5UGlj",
            "dHVyZUZyYW1lVHlwZUgAiAEBQgcKBV90eXBlIroCChRVc2VyUGljdHVyZUZy",
            "YW1lSW5mbxIRCgR0eXBlGAEgASgFSACIAQESFQoIZnJhbWVfaWQYAiABKAlI",
            "AYgBARIRCgRsb2NrGAMgASgISAKIAQESFgoJcGVybWFuZW50GAQgASgISAOI",
            "AQESGAoLcmVtYWluX2RheXMYBSABKAVIBIgBARIbCg5zaG93X3JlZF9wb2lu",
            "dBgGIAEoCEgFiAEBEhYKCWxvY2tfaGlkZRgHIAEoCEgGiAEBEhQKB2lzX3dh",
            "YXIYCCABKAhIB4gBAUIHCgVfdHlwZUILCglfZnJhbWVfaWRCBwoFX2xvY2tC",
            "DAoKX3Blcm1hbmVudEIOCgxfcmVtYWluX2RheXNCEQoPX3Nob3dfcmVkX3Bv",
            "aW50QgwKCl9sb2NrX2hpZGVCCgoIX2lzX3dhYXIigAIKF1VzZXJQaWN0dXJl",
            "RnJhbWVMaXN0UlNQEhQKB3JldGNvZGUYASABKAVIAIgBARItCgR0eXBlGAIg",
            "ASgOMhouVXNlclF1ZXJ5UGljdHVyZUZyYW1lVHlwZUgBiAEBEhUKCGlzX3Vz",
            "aW5nGAMgASgISAKIAQESLgoKaW5mb191c2luZxgEIAEoCzIVLlVzZXJQaWN0",
            "dXJlRnJhbWVJbmZvSAOIAQESKAoJaW5mb19saXN0GAUgAygLMhUuVXNlclBp",
            "Y3R1cmVGcmFtZUluZm9CCgoIX3JldGNvZGVCBwoFX3R5cGVCCwoJX2lzX3Vz",
            "aW5nQg0KC19pbmZvX3VzaW5nIlsKGVVzZXJDaGFuZ2VQaWN0dXJlRnJhbWVS",
            "RVESEQoEdHlwZRgBIAEoBUgAiAEBEhUKCGZyYW1lX2lkGAIgASgJSAGIAQFC",
            "BwoFX3R5cGVCCwoJX2ZyYW1lX2lkIuYBChlVc2VyQ2hhbmdlUGljdHVyZUZy",
            "YW1lUlNQEhQKB3JldGNvZGUYASABKAVIAIgBARIRCgR0eXBlGAIgASgFSAGI",
            "AQESFQoIZnJhbWVfaWQYAyABKAlIAogBARIuCgppbmZvX3VzaW5nGAQgASgL",
            "MhUuVXNlclBpY3R1cmVGcmFtZUluZm9IA4gBARIoCglpbmZvX2xpc3QYBSAD",
            "KAsyFS5Vc2VyUGljdHVyZUZyYW1lSW5mb0IKCghfcmV0Y29kZUIHCgVfdHlw",
            "ZUILCglfZnJhbWVfaWRCDQoLX2luZm9fdXNpbmciIAoeVXNlclRyeVRvR2V0",
            "TmV3UGljdHVyZUZyYW1lUkVRIpABCh5Vc2VyVHJ5VG9HZXROZXdQaWN0dXJl",
            "RnJhbWVSU1ASFAoHcmV0Y29kZRgBIAEoBUgAiAEBEhUKCGZyYW1lX2lkGAIg",
            "ASgJSAGIAQESGAoLYWN0aXZlX3RpbWUYAyABKANIAogBAUIKCghfcmV0Y29k",
            "ZUILCglfZnJhbWVfaWRCDgoMX2FjdGl2ZV90aW1lIp8BChlVc2VyQ2hhbmdl",
            "UGljdHVyZUZyYW1lQlJDEhAKA3VpZBgBIAEoCUgAiAEBEhgKC2NoYW5nZV90",
            "eXBlGAIgASgFSAGIAQESEQoEdHlwZRgDIAEoBUgCiAEBEhUKCGZyYW1lX2lk",
            "GAQgASgJSAOIAQFCBgoEX3VpZEIOCgxfY2hhbmdlX3R5cGVCBwoFX3R5cGVC",
            "CwoJX2ZyYW1lX2lkIiAKHlVzZXJHZXRQaWN0dXJlRnJhbWVSZWRQb2ludFJF",
            "USJsCh5Vc2VyR2V0UGljdHVyZUZyYW1lUmVkUG9pbnRSU1ASEQoEY29kZRgB",
            "IAEoBUgAiAEBEhsKDnNob3dfcmVkX3BvaW50GAIgASgISAGIAQFCBwoFX2Nv",
            "ZGVCEQoPX3Nob3dfcmVkX3BvaW50KpQBCgpNYXJrQ29sb3JzEgwKCE5PX0NP",
            "TE9SEAASCgoGWUVMTE9XEAESCgoGT1JBTkdFEAISBwoDUkVEEAMSCAoEUElO",
            "SxAEEggKBEJMVUUQBRIOCgpMSUdIVF9CTFVFEAYSCgoGUFVSUExFEAcSDQoJ",
            "REVFUF9QSU5LEAgSCQoFR1JFRU4QCRINCglTRUFfR1JFRU4QCiqSAQoZVXNl",
            "clF1ZXJ5UGljdHVyZUZyYW1lVHlwZRImCiJVU0VSX1FVRVJZX1BJQ1RVUkVf",
            "RlJBTUVfVFlQRV9OT05FEAASJgoiVVNFUl9RVUVSWV9QSUNUVVJFX0ZSQU1F",
            "X1RZUEVfTElTVBABEiUKIVVTRVJfUVVFUllfUElDVFVSRV9GUkFNRV9UWVBF",
            "X05FVxACKqkBChRVc2VyUGljdHVyZUZyYW1lVHlwZRIgChxVU0VSX1BJQ1RV",
            "UkVfRlJBTUVfVFlQRV9OT05FEAASJAogVVNFUl9QSUNUVVJFX0ZSQU1FX1RZ",
            "UEVfVklQX0NBUkQQARIkCiBVU0VSX1BJQ1RVUkVfRlJBTUVfVFlQRV9BQ1RJ",
            "VklUWRACEiMKH1VTRVJfUElDVFVSRV9GUkFNRV9UWVBFX0RFRkFVTFQQA0Ia",
            "WgcvcGJwcGdvqgIOVGV4YXMuUHJvdG9jb2xiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Texas.Protocol.BaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Texas.Protocol.MarkColors), typeof(global::Texas.Protocol.UserQueryPictureFrameType), typeof(global::Texas.Protocol.UserPictureFrameType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.UserMarkInfo), global::Texas.Protocol.UserMarkInfo.Parser, new[]{ "Uid", "Content", "MarkColor", "NoSpeaking", "NoImage" }, new[]{ "Uid", "Content", "MarkColor", "NoSpeaking", "NoImage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MarkUserREQ), global::Texas.Protocol.MarkUserREQ.Parser, new[]{ "Uid", "Mark", "ReqBanType" }, new[]{ "Uid", "Mark", "ReqBanType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.GetUserMarksREQ), global::Texas.Protocol.GetUserMarksREQ.Parser, new[]{ "Uid", "MarkUid" }, new[]{ "Uid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.GetUserMarksRSP), global::Texas.Protocol.GetUserMarksRSP.Parser, new[]{ "Uid", "Mark" }, new[]{ "Uid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.GetUserAllMarksREQ), global::Texas.Protocol.GetUserAllMarksREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.GetUserAllMarksRSP), global::Texas.Protocol.GetUserAllMarksRSP.Parser, new[]{ "Mark" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.RewardInfo), global::Texas.Protocol.RewardInfo.Parser, new[]{ "Type", "Num", "ItemName", "Extra" }, new[]{ "Type", "Num", "ItemName", "Extra" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.UserLevelInfoREQ), global::Texas.Protocol.UserLevelInfoREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.UserLevelInfoRSP), global::Texas.Protocol.UserLevelInfoRSP.Parser, new[]{ "Level", "Experience", "ThisExperience", "NextExperience", "NextRewards", "Days", "MaxLevel" }, new[]{ "Level", "Experience", "ThisExperience", "NextExperience", "Days", "MaxLevel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.UserLevelRewardsBRC), global::Texas.Protocol.UserLevelRewardsBRC.Parser, new[]{ "Level", "Rewards" }, new[]{ "Level" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.OldUserRewardsBRC), global::Texas.Protocol.OldUserRewardsBRC.Parser, new[]{ "LevelRewards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.GetTaskRewardREQ), global::Texas.Protocol.GetTaskRewardREQ.Parser, new[]{ "TaskId", "Type", "Day", "Roomid" }, new[]{ "TaskId", "Type", "Day", "Roomid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.GetTaskRewardRSP), global::Texas.Protocol.GetTaskRewardRSP.Parser, new[]{ "Code", "TaskId", "Type", "Roomid" }, new[]{ "Code", "TaskId", "Type", "Roomid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.NewTaskInfo), global::Texas.Protocol.NewTaskInfo.Parser, new[]{ "Id", "Status", "Module", "Type", "Content", "Progress", "RdInfo", "DurType", "SortId", "TaskInfo" }, new[]{ "Id", "Status", "Module", "Type", "Content", "Progress", "DurType", "SortId", "TaskInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.GetTaskListREQ), global::Texas.Protocol.GetTaskListREQ.Parser, new[]{ "Lang" }, new[]{ "Lang" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.GetTaskListRSP), global::Texas.Protocol.GetTaskListRSP.Parser, new[]{ "Tasks", "LeaveTime", "Day", "NewDayth" }, new[]{ "LeaveTime", "Day", "NewDayth" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.UserRewardNotify), global::Texas.Protocol.UserRewardNotify.Parser, new[]{ "Uid", "Clubid", "Chips", "StormNo", "Leagueid", "Roomid" }, new[]{ "Uid", "Clubid", "Chips", "StormNo", "Leagueid", "Roomid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.UserRewardREQ), global::Texas.Protocol.UserRewardREQ.Parser, new[]{ "Clubid", "Leagueid", "StormNo" }, new[]{ "Clubid", "Leagueid", "StormNo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.UserReward), global::Texas.Protocol.UserReward.Parser, new[]{ "Uid", "Chips", "Nickname" }, new[]{ "Uid", "Chips", "Nickname" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.UserRewardRSP), global::Texas.Protocol.UserRewardRSP.Parser, new[]{ "Code", "Chips", "Rewards", "StormNo", "Minutes", "Leagueid", "Clubid" }, new[]{ "Code", "Chips", "StormNo", "Minutes", "Leagueid", "Clubid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.UserStormRewardBroadcast), global::Texas.Protocol.UserStormRewardBroadcast.Parser, new[]{ "Uid", "Nickname", "Chips", "Clubid", "Leagueid", "StormNo" }, new[]{ "Uid", "Nickname", "Chips", "Clubid", "Leagueid", "StormNo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.StormInfoBroadcast), global::Texas.Protocol.StormInfoBroadcast.Parser, new[]{ "Info" }, new[]{ "Info" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.UserShareInfoPush), global::Texas.Protocol.UserShareInfoPush.Parser, new[]{ "Type", "Num", "Chips", "Roomid", "UserCard", "RoundCard", "Blind" }, new[]{ "Type", "Num", "Chips", "Roomid", "Blind" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.UserPictureFrameListREQ), global::Texas.Protocol.UserPictureFrameListREQ.Parser, new[]{ "Type" }, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.UserPictureFrameInfo), global::Texas.Protocol.UserPictureFrameInfo.Parser, new[]{ "Type", "FrameId", "Lock", "Permanent", "RemainDays", "ShowRedPoint", "LockHide", "IsWaar" }, new[]{ "Type", "FrameId", "Lock", "Permanent", "RemainDays", "ShowRedPoint", "LockHide", "IsWaar" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.UserPictureFrameListRSP), global::Texas.Protocol.UserPictureFrameListRSP.Parser, new[]{ "Retcode", "Type", "IsUsing", "InfoUsing", "InfoList" }, new[]{ "Retcode", "Type", "IsUsing", "InfoUsing" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.UserChangePictureFrameREQ), global::Texas.Protocol.UserChangePictureFrameREQ.Parser, new[]{ "Type", "FrameId" }, new[]{ "Type", "FrameId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.UserChangePictureFrameRSP), global::Texas.Protocol.UserChangePictureFrameRSP.Parser, new[]{ "Retcode", "Type", "FrameId", "InfoUsing", "InfoList" }, new[]{ "Retcode", "Type", "FrameId", "InfoUsing" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.UserTryToGetNewPictureFrameREQ), global::Texas.Protocol.UserTryToGetNewPictureFrameREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.UserTryToGetNewPictureFrameRSP), global::Texas.Protocol.UserTryToGetNewPictureFrameRSP.Parser, new[]{ "Retcode", "FrameId", "ActiveTime" }, new[]{ "Retcode", "FrameId", "ActiveTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.UserChangePictureFrameBRC), global::Texas.Protocol.UserChangePictureFrameBRC.Parser, new[]{ "Uid", "ChangeType", "Type", "FrameId" }, new[]{ "Uid", "ChangeType", "Type", "FrameId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.UserGetPictureFrameRedPointREQ), global::Texas.Protocol.UserGetPictureFrameRedPointREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.UserGetPictureFrameRedPointRSP), global::Texas.Protocol.UserGetPictureFrameRedPointRSP.Parser, new[]{ "Code", "ShowRedPoint" }, new[]{ "Code", "ShowRedPoint" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MarkColors {
    [pbr::OriginalName("NO_COLOR")] NoColor = 0,
    [pbr::OriginalName("YELLOW")] Yellow = 1,
    [pbr::OriginalName("ORANGE")] Orange = 2,
    [pbr::OriginalName("RED")] Red = 3,
    [pbr::OriginalName("PINK")] Pink = 4,
    [pbr::OriginalName("BLUE")] Blue = 5,
    [pbr::OriginalName("LIGHT_BLUE")] LightBlue = 6,
    [pbr::OriginalName("PURPLE")] Purple = 7,
    [pbr::OriginalName("DEEP_PINK")] DeepPink = 8,
    [pbr::OriginalName("GREEN")] Green = 9,
    [pbr::OriginalName("SEA_GREEN")] SeaGreen = 10,
  }

  /// <summary>
  ///获取头像框列表
  /// </summary>
  public enum UserQueryPictureFrameType {
    [pbr::OriginalName("USER_QUERY_PICTURE_FRAME_TYPE_NONE")] None = 0,
    /// <summary>
    ///获取头像框列表
    /// </summary>
    [pbr::OriginalName("USER_QUERY_PICTURE_FRAME_TYPE_LIST")] List = 1,
    /// <summary>
    ///查询新领取头像框（用于删除红点）
    /// </summary>
    [pbr::OriginalName("USER_QUERY_PICTURE_FRAME_TYPE_NEW")] New = 2,
  }

  public enum UserPictureFrameType {
    [pbr::OriginalName("USER_PICTURE_FRAME_TYPE_NONE")] None = 0,
    /// <summary>
    ///VIP头像框类型
    /// </summary>
    [pbr::OriginalName("USER_PICTURE_FRAME_TYPE_VIP_CARD")] VipCard = 1,
    /// <summary>
    ///活动头像框类型
    /// </summary>
    [pbr::OriginalName("USER_PICTURE_FRAME_TYPE_ACTIVITY")] Activity = 2,
    /// <summary>
    ///默认头像框类型
    /// </summary>
    [pbr::OriginalName("USER_PICTURE_FRAME_TYPE_DEFAULT")] Default = 3,
  }

  #endregion

  #region Messages
  /// <summary>
  ///客户端有设置标记窗口，设置禁言与禁头像窗口，均为同一个协议
  /// </summary>
  public sealed partial class UserMarkInfo : pb::IMessage<UserMarkInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserMarkInfo> _parser = new pb::MessageParser<UserMarkInfo>(() => new UserMarkInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserMarkInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserMarkInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserMarkInfo(UserMarkInfo other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      content_ = other.content_;
      markColor_ = other.markColor_;
      noSpeaking_ = other.noSpeaking_;
      noImage_ = other.noImage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserMarkInfo Clone() {
      return new UserMarkInfo(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static string UidDefaultValue = "";

    private string uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_ ?? UidDefaultValue; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return uid_ != null; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      uid_ = null;
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 2;
    private readonly static string ContentDefaultValue = "";

    private string content_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Content {
      get { return content_ ?? ContentDefaultValue; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "content" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContent {
      get { return content_ != null; }
    }
    /// <summary>Clears the value of the "content" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContent() {
      content_ = null;
    }

    /// <summary>Field number for the "mark_color" field.</summary>
    public const int MarkColorFieldNumber = 3;
    private readonly static global::Texas.Protocol.MarkColors MarkColorDefaultValue = global::Texas.Protocol.MarkColors.NoColor;

    private global::Texas.Protocol.MarkColors markColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.MarkColors MarkColor {
      get { if ((_hasBits0 & 1) != 0) { return markColor_; } else { return MarkColorDefaultValue; } }
      set {
        _hasBits0 |= 1;
        markColor_ = value;
      }
    }
    /// <summary>Gets whether the "mark_color" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMarkColor {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "mark_color" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMarkColor() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "no_speaking" field.</summary>
    public const int NoSpeakingFieldNumber = 4;
    private readonly static int NoSpeakingDefaultValue = 0;

    private int noSpeaking_;
    /// <summary>
    ///禁言与屏蔽头像配置与获取相关协议
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NoSpeaking {
      get { if ((_hasBits0 & 2) != 0) { return noSpeaking_; } else { return NoSpeakingDefaultValue; } }
      set {
        _hasBits0 |= 2;
        noSpeaking_ = value;
      }
    }
    /// <summary>Gets whether the "no_speaking" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNoSpeaking {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "no_speaking" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNoSpeaking() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "no_image" field.</summary>
    public const int NoImageFieldNumber = 5;
    private readonly static int NoImageDefaultValue = 0;

    private int noImage_;
    /// <summary>
    ///是否禁头像，0表示不禁，1表示禁头像，如果禁头像了，客户端用默认头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NoImage {
      get { if ((_hasBits0 & 4) != 0) { return noImage_; } else { return NoImageDefaultValue; } }
      set {
        _hasBits0 |= 4;
        noImage_ = value;
      }
    }
    /// <summary>Gets whether the "no_image" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNoImage {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "no_image" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNoImage() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserMarkInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserMarkInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Content != other.Content) return false;
      if (MarkColor != other.MarkColor) return false;
      if (NoSpeaking != other.NoSpeaking) return false;
      if (NoImage != other.NoImage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasContent) hash ^= Content.GetHashCode();
      if (HasMarkColor) hash ^= MarkColor.GetHashCode();
      if (HasNoSpeaking) hash ^= NoSpeaking.GetHashCode();
      if (HasNoImage) hash ^= NoImage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (HasContent) {
        output.WriteRawTag(18);
        output.WriteString(Content);
      }
      if (HasMarkColor) {
        output.WriteRawTag(24);
        output.WriteEnum((int) MarkColor);
      }
      if (HasNoSpeaking) {
        output.WriteRawTag(32);
        output.WriteInt32(NoSpeaking);
      }
      if (HasNoImage) {
        output.WriteRawTag(40);
        output.WriteInt32(NoImage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (HasContent) {
        output.WriteRawTag(18);
        output.WriteString(Content);
      }
      if (HasMarkColor) {
        output.WriteRawTag(24);
        output.WriteEnum((int) MarkColor);
      }
      if (HasNoSpeaking) {
        output.WriteRawTag(32);
        output.WriteInt32(NoSpeaking);
      }
      if (HasNoImage) {
        output.WriteRawTag(40);
        output.WriteInt32(NoImage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (HasContent) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (HasMarkColor) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MarkColor);
      }
      if (HasNoSpeaking) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NoSpeaking);
      }
      if (HasNoImage) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NoImage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserMarkInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasContent) {
        Content = other.Content;
      }
      if (other.HasMarkColor) {
        MarkColor = other.MarkColor;
      }
      if (other.HasNoSpeaking) {
        NoSpeaking = other.NoSpeaking;
      }
      if (other.HasNoImage) {
        NoImage = other.NoImage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            Content = input.ReadString();
            break;
          }
          case 24: {
            MarkColor = (global::Texas.Protocol.MarkColors) input.ReadEnum();
            break;
          }
          case 32: {
            NoSpeaking = input.ReadInt32();
            break;
          }
          case 40: {
            NoImage = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            Content = input.ReadString();
            break;
          }
          case 24: {
            MarkColor = (global::Texas.Protocol.MarkColors) input.ReadEnum();
            break;
          }
          case 32: {
            NoSpeaking = input.ReadInt32();
            break;
          }
          case 40: {
            NoImage = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MarkUserREQ : pb::IMessage<MarkUserREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MarkUserREQ> _parser = new pb::MessageParser<MarkUserREQ>(() => new MarkUserREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MarkUserREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarkUserREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarkUserREQ(MarkUserREQ other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      mark_ = other.mark_ != null ? other.mark_.Clone() : null;
      reqBanType_ = other.reqBanType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarkUserREQ Clone() {
      return new MarkUserREQ(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static string UidDefaultValue = "";

    private string uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_ ?? UidDefaultValue; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return uid_ != null; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      uid_ = null;
    }

    /// <summary>Field number for the "mark" field.</summary>
    public const int MarkFieldNumber = 2;
    private global::Texas.Protocol.UserMarkInfo mark_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.UserMarkInfo Mark {
      get { return mark_; }
      set {
        mark_ = value;
      }
    }

    /// <summary>Field number for the "req_ban_type" field.</summary>
    public const int ReqBanTypeFieldNumber = 3;
    private readonly static long ReqBanTypeDefaultValue = 0L;

    private long reqBanType_;
    /// <summary>
    ///0：设置标记， 1：设置禁言 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ReqBanType {
      get { if ((_hasBits0 & 1) != 0) { return reqBanType_; } else { return ReqBanTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        reqBanType_ = value;
      }
    }
    /// <summary>Gets whether the "req_ban_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReqBanType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "req_ban_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReqBanType() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MarkUserREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MarkUserREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (!object.Equals(Mark, other.Mark)) return false;
      if (ReqBanType != other.ReqBanType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (mark_ != null) hash ^= Mark.GetHashCode();
      if (HasReqBanType) hash ^= ReqBanType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (mark_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Mark);
      }
      if (HasReqBanType) {
        output.WriteRawTag(24);
        output.WriteInt64(ReqBanType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (mark_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Mark);
      }
      if (HasReqBanType) {
        output.WriteRawTag(24);
        output.WriteInt64(ReqBanType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (mark_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mark);
      }
      if (HasReqBanType) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReqBanType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MarkUserREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.mark_ != null) {
        if (mark_ == null) {
          Mark = new global::Texas.Protocol.UserMarkInfo();
        }
        Mark.MergeFrom(other.Mark);
      }
      if (other.HasReqBanType) {
        ReqBanType = other.ReqBanType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            if (mark_ == null) {
              Mark = new global::Texas.Protocol.UserMarkInfo();
            }
            input.ReadMessage(Mark);
            break;
          }
          case 24: {
            ReqBanType = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            if (mark_ == null) {
              Mark = new global::Texas.Protocol.UserMarkInfo();
            }
            input.ReadMessage(Mark);
            break;
          }
          case 24: {
            ReqBanType = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetUserMarksREQ : pb::IMessage<GetUserMarksREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetUserMarksREQ> _parser = new pb::MessageParser<GetUserMarksREQ>(() => new GetUserMarksREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetUserMarksREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserMarksREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserMarksREQ(GetUserMarksREQ other) : this() {
      uid_ = other.uid_;
      markUid_ = other.markUid_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserMarksREQ Clone() {
      return new GetUserMarksREQ(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static string UidDefaultValue = "";

    private string uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_ ?? UidDefaultValue; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return uid_ != null; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      uid_ = null;
    }

    /// <summary>Field number for the "mark_uid" field.</summary>
    public const int MarkUidFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_markUid_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> markUid_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> MarkUid {
      get { return markUid_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetUserMarksREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetUserMarksREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if(!markUid_.Equals(other.markUid_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      hash ^= markUid_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      markUid_.WriteTo(output, _repeated_markUid_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      markUid_.WriteTo(ref output, _repeated_markUid_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      size += markUid_.CalculateSize(_repeated_markUid_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetUserMarksREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      markUid_.Add(other.markUid_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            markUid_.AddEntriesFrom(input, _repeated_markUid_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            markUid_.AddEntriesFrom(ref input, _repeated_markUid_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetUserMarksRSP : pb::IMessage<GetUserMarksRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetUserMarksRSP> _parser = new pb::MessageParser<GetUserMarksRSP>(() => new GetUserMarksRSP());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetUserMarksRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserMarksRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserMarksRSP(GetUserMarksRSP other) : this() {
      uid_ = other.uid_;
      mark_ = other.mark_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserMarksRSP Clone() {
      return new GetUserMarksRSP(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static string UidDefaultValue = "";

    private string uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_ ?? UidDefaultValue; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return uid_ != null; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      uid_ = null;
    }

    /// <summary>Field number for the "mark" field.</summary>
    public const int MarkFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Texas.Protocol.UserMarkInfo> _repeated_mark_codec
        = pb::FieldCodec.ForMessage(18, global::Texas.Protocol.UserMarkInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.UserMarkInfo> mark_ = new pbc::RepeatedField<global::Texas.Protocol.UserMarkInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.UserMarkInfo> Mark {
      get { return mark_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetUserMarksRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetUserMarksRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if(!mark_.Equals(other.mark_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      hash ^= mark_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      mark_.WriteTo(output, _repeated_mark_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      mark_.WriteTo(ref output, _repeated_mark_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      size += mark_.CalculateSize(_repeated_mark_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetUserMarksRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      mark_.Add(other.mark_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            mark_.AddEntriesFrom(input, _repeated_mark_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            mark_.AddEntriesFrom(ref input, _repeated_mark_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///最大设置1000人，禁言加标记作为一条记录，共1000条
  /// </summary>
  public sealed partial class GetUserAllMarksREQ : pb::IMessage<GetUserAllMarksREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetUserAllMarksREQ> _parser = new pb::MessageParser<GetUserAllMarksREQ>(() => new GetUserAllMarksREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetUserAllMarksREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserAllMarksREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserAllMarksREQ(GetUserAllMarksREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserAllMarksREQ Clone() {
      return new GetUserAllMarksREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetUserAllMarksREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetUserAllMarksREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetUserAllMarksREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class GetUserAllMarksRSP : pb::IMessage<GetUserAllMarksRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetUserAllMarksRSP> _parser = new pb::MessageParser<GetUserAllMarksRSP>(() => new GetUserAllMarksRSP());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetUserAllMarksRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserAllMarksRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserAllMarksRSP(GetUserAllMarksRSP other) : this() {
      mark_ = other.mark_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserAllMarksRSP Clone() {
      return new GetUserAllMarksRSP(this);
    }

    /// <summary>Field number for the "mark" field.</summary>
    public const int MarkFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.UserMarkInfo> _repeated_mark_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.UserMarkInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.UserMarkInfo> mark_ = new pbc::RepeatedField<global::Texas.Protocol.UserMarkInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.UserMarkInfo> Mark {
      get { return mark_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetUserAllMarksRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetUserAllMarksRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mark_.Equals(other.mark_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mark_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mark_.WriteTo(output, _repeated_mark_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mark_.WriteTo(ref output, _repeated_mark_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += mark_.CalculateSize(_repeated_mark_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetUserAllMarksRSP other) {
      if (other == null) {
        return;
      }
      mark_.Add(other.mark_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mark_.AddEntriesFrom(input, _repeated_mark_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mark_.AddEntriesFrom(ref input, _repeated_mark_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RewardInfo : pb::IMessage<RewardInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RewardInfo> _parser = new pb::MessageParser<RewardInfo>(() => new RewardInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RewardInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RewardInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RewardInfo(RewardInfo other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      num_ = other.num_;
      itemName_ = other.itemName_;
      extra_ = other.extra_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RewardInfo Clone() {
      return new RewardInfo(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    /// 1表示金币 2表示钻石 3表示物品,4表示积分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 2;
    private readonly static long NumDefaultValue = 0L;

    private long num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Num {
      get { if ((_hasBits0 & 2) != 0) { return num_; } else { return NumDefaultValue; } }
      set {
        _hasBits0 |= 2;
        num_ = value;
      }
    }
    /// <summary>Gets whether the "num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNum {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNum() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "item_name" field.</summary>
    public const int ItemNameFieldNumber = 3;
    private readonly static string ItemNameDefaultValue = "";

    private string itemName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ItemName {
      get { return itemName_ ?? ItemNameDefaultValue; }
      set {
        itemName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "item_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasItemName {
      get { return itemName_ != null; }
    }
    /// <summary>Clears the value of the "item_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearItemName() {
      itemName_ = null;
    }

    /// <summary>Field number for the "extra" field.</summary>
    public const int ExtraFieldNumber = 4;
    private readonly static string ExtraDefaultValue = "";

    private string extra_;
    /// <summary>
    /// 额外字段用于区分奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Extra {
      get { return extra_ ?? ExtraDefaultValue; }
      set {
        extra_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "extra" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExtra {
      get { return extra_ != null; }
    }
    /// <summary>Clears the value of the "extra" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExtra() {
      extra_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RewardInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RewardInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Num != other.Num) return false;
      if (ItemName != other.ItemName) return false;
      if (Extra != other.Extra) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasNum) hash ^= Num.GetHashCode();
      if (HasItemName) hash ^= ItemName.GetHashCode();
      if (HasExtra) hash ^= Extra.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasNum) {
        output.WriteRawTag(16);
        output.WriteInt64(Num);
      }
      if (HasItemName) {
        output.WriteRawTag(26);
        output.WriteString(ItemName);
      }
      if (HasExtra) {
        output.WriteRawTag(34);
        output.WriteString(Extra);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasNum) {
        output.WriteRawTag(16);
        output.WriteInt64(Num);
      }
      if (HasItemName) {
        output.WriteRawTag(26);
        output.WriteString(ItemName);
      }
      if (HasExtra) {
        output.WriteRawTag(34);
        output.WriteString(Extra);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Num);
      }
      if (HasItemName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemName);
      }
      if (HasExtra) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Extra);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RewardInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasNum) {
        Num = other.Num;
      }
      if (other.HasItemName) {
        ItemName = other.ItemName;
      }
      if (other.HasExtra) {
        Extra = other.Extra;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            Num = input.ReadInt64();
            break;
          }
          case 26: {
            ItemName = input.ReadString();
            break;
          }
          case 34: {
            Extra = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            Num = input.ReadInt64();
            break;
          }
          case 26: {
            ItemName = input.ReadString();
            break;
          }
          case 34: {
            Extra = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///用户等级信息请求
  /// </summary>
  public sealed partial class UserLevelInfoREQ : pb::IMessage<UserLevelInfoREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserLevelInfoREQ> _parser = new pb::MessageParser<UserLevelInfoREQ>(() => new UserLevelInfoREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserLevelInfoREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserLevelInfoREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserLevelInfoREQ(UserLevelInfoREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserLevelInfoREQ Clone() {
      return new UserLevelInfoREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserLevelInfoREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserLevelInfoREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserLevelInfoREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class UserLevelInfoRSP : pb::IMessage<UserLevelInfoRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserLevelInfoRSP> _parser = new pb::MessageParser<UserLevelInfoRSP>(() => new UserLevelInfoRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserLevelInfoRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserLevelInfoRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserLevelInfoRSP(UserLevelInfoRSP other) : this() {
      _hasBits0 = other._hasBits0;
      level_ = other.level_;
      experience_ = other.experience_;
      thisExperience_ = other.thisExperience_;
      nextExperience_ = other.nextExperience_;
      nextRewards_ = other.nextRewards_.Clone();
      days_ = other.days_;
      maxLevel_ = other.maxLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserLevelInfoRSP Clone() {
      return new UserLevelInfoRSP(this);
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 1;
    private readonly static int LevelDefaultValue = 0;

    private int level_;
    /// <summary>
    ///等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Level {
      get { if ((_hasBits0 & 1) != 0) { return level_; } else { return LevelDefaultValue; } }
      set {
        _hasBits0 |= 1;
        level_ = value;
      }
    }
    /// <summary>Gets whether the "level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLevel {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLevel() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "experience" field.</summary>
    public const int ExperienceFieldNumber = 2;
    private readonly static long ExperienceDefaultValue = 0L;

    private long experience_;
    /// <summary>
    ///当前经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Experience {
      get { if ((_hasBits0 & 2) != 0) { return experience_; } else { return ExperienceDefaultValue; } }
      set {
        _hasBits0 |= 2;
        experience_ = value;
      }
    }
    /// <summary>Gets whether the "experience" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExperience {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "experience" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExperience() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "this_experience" field.</summary>
    public const int ThisExperienceFieldNumber = 3;
    private readonly static long ThisExperienceDefaultValue = 0L;

    private long thisExperience_;
    /// <summary>
    ///当前等级经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ThisExperience {
      get { if ((_hasBits0 & 4) != 0) { return thisExperience_; } else { return ThisExperienceDefaultValue; } }
      set {
        _hasBits0 |= 4;
        thisExperience_ = value;
      }
    }
    /// <summary>Gets whether the "this_experience" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasThisExperience {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "this_experience" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearThisExperience() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "next_experience" field.</summary>
    public const int NextExperienceFieldNumber = 4;
    private readonly static long NextExperienceDefaultValue = 0L;

    private long nextExperience_;
    /// <summary>
    ///下一等级经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NextExperience {
      get { if ((_hasBits0 & 8) != 0) { return nextExperience_; } else { return NextExperienceDefaultValue; } }
      set {
        _hasBits0 |= 8;
        nextExperience_ = value;
      }
    }
    /// <summary>Gets whether the "next_experience" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNextExperience {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "next_experience" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNextExperience() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "next_rewards" field.</summary>
    public const int NextRewardsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Texas.Protocol.RewardInfo> _repeated_nextRewards_codec
        = pb::FieldCodec.ForMessage(42, global::Texas.Protocol.RewardInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.RewardInfo> nextRewards_ = new pbc::RepeatedField<global::Texas.Protocol.RewardInfo>();
    /// <summary>
    ///下一等级奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.RewardInfo> NextRewards {
      get { return nextRewards_; }
    }

    /// <summary>Field number for the "days" field.</summary>
    public const int DaysFieldNumber = 6;
    private readonly static int DaysDefaultValue = 0;

    private int days_;
    /// <summary>
    ///用户加入pp天数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Days {
      get { if ((_hasBits0 & 16) != 0) { return days_; } else { return DaysDefaultValue; } }
      set {
        _hasBits0 |= 16;
        days_ = value;
      }
    }
    /// <summary>Gets whether the "days" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDays {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "days" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDays() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "max_level" field.</summary>
    public const int MaxLevelFieldNumber = 7;
    private readonly static int MaxLevelDefaultValue = 0;

    private int maxLevel_;
    /// <summary>
    ///最高等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxLevel {
      get { if ((_hasBits0 & 32) != 0) { return maxLevel_; } else { return MaxLevelDefaultValue; } }
      set {
        _hasBits0 |= 32;
        maxLevel_ = value;
      }
    }
    /// <summary>Gets whether the "max_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxLevel {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "max_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxLevel() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserLevelInfoRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserLevelInfoRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Level != other.Level) return false;
      if (Experience != other.Experience) return false;
      if (ThisExperience != other.ThisExperience) return false;
      if (NextExperience != other.NextExperience) return false;
      if(!nextRewards_.Equals(other.nextRewards_)) return false;
      if (Days != other.Days) return false;
      if (MaxLevel != other.MaxLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLevel) hash ^= Level.GetHashCode();
      if (HasExperience) hash ^= Experience.GetHashCode();
      if (HasThisExperience) hash ^= ThisExperience.GetHashCode();
      if (HasNextExperience) hash ^= NextExperience.GetHashCode();
      hash ^= nextRewards_.GetHashCode();
      if (HasDays) hash ^= Days.GetHashCode();
      if (HasMaxLevel) hash ^= MaxLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLevel) {
        output.WriteRawTag(8);
        output.WriteInt32(Level);
      }
      if (HasExperience) {
        output.WriteRawTag(16);
        output.WriteInt64(Experience);
      }
      if (HasThisExperience) {
        output.WriteRawTag(24);
        output.WriteInt64(ThisExperience);
      }
      if (HasNextExperience) {
        output.WriteRawTag(32);
        output.WriteInt64(NextExperience);
      }
      nextRewards_.WriteTo(output, _repeated_nextRewards_codec);
      if (HasDays) {
        output.WriteRawTag(48);
        output.WriteInt32(Days);
      }
      if (HasMaxLevel) {
        output.WriteRawTag(56);
        output.WriteInt32(MaxLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLevel) {
        output.WriteRawTag(8);
        output.WriteInt32(Level);
      }
      if (HasExperience) {
        output.WriteRawTag(16);
        output.WriteInt64(Experience);
      }
      if (HasThisExperience) {
        output.WriteRawTag(24);
        output.WriteInt64(ThisExperience);
      }
      if (HasNextExperience) {
        output.WriteRawTag(32);
        output.WriteInt64(NextExperience);
      }
      nextRewards_.WriteTo(ref output, _repeated_nextRewards_codec);
      if (HasDays) {
        output.WriteRawTag(48);
        output.WriteInt32(Days);
      }
      if (HasMaxLevel) {
        output.WriteRawTag(56);
        output.WriteInt32(MaxLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLevel) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (HasExperience) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Experience);
      }
      if (HasThisExperience) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ThisExperience);
      }
      if (HasNextExperience) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NextExperience);
      }
      size += nextRewards_.CalculateSize(_repeated_nextRewards_codec);
      if (HasDays) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Days);
      }
      if (HasMaxLevel) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserLevelInfoRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasLevel) {
        Level = other.Level;
      }
      if (other.HasExperience) {
        Experience = other.Experience;
      }
      if (other.HasThisExperience) {
        ThisExperience = other.ThisExperience;
      }
      if (other.HasNextExperience) {
        NextExperience = other.NextExperience;
      }
      nextRewards_.Add(other.nextRewards_);
      if (other.HasDays) {
        Days = other.Days;
      }
      if (other.HasMaxLevel) {
        MaxLevel = other.MaxLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Level = input.ReadInt32();
            break;
          }
          case 16: {
            Experience = input.ReadInt64();
            break;
          }
          case 24: {
            ThisExperience = input.ReadInt64();
            break;
          }
          case 32: {
            NextExperience = input.ReadInt64();
            break;
          }
          case 42: {
            nextRewards_.AddEntriesFrom(input, _repeated_nextRewards_codec);
            break;
          }
          case 48: {
            Days = input.ReadInt32();
            break;
          }
          case 56: {
            MaxLevel = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Level = input.ReadInt32();
            break;
          }
          case 16: {
            Experience = input.ReadInt64();
            break;
          }
          case 24: {
            ThisExperience = input.ReadInt64();
            break;
          }
          case 32: {
            NextExperience = input.ReadInt64();
            break;
          }
          case 42: {
            nextRewards_.AddEntriesFrom(ref input, _repeated_nextRewards_codec);
            break;
          }
          case 48: {
            Days = input.ReadInt32();
            break;
          }
          case 56: {
            MaxLevel = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserLevelRewardsBRC : pb::IMessage<UserLevelRewardsBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserLevelRewardsBRC> _parser = new pb::MessageParser<UserLevelRewardsBRC>(() => new UserLevelRewardsBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserLevelRewardsBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserLevelRewardsBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserLevelRewardsBRC(UserLevelRewardsBRC other) : this() {
      _hasBits0 = other._hasBits0;
      level_ = other.level_;
      rewards_ = other.rewards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserLevelRewardsBRC Clone() {
      return new UserLevelRewardsBRC(this);
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 1;
    private readonly static int LevelDefaultValue = 0;

    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Level {
      get { if ((_hasBits0 & 1) != 0) { return level_; } else { return LevelDefaultValue; } }
      set {
        _hasBits0 |= 1;
        level_ = value;
      }
    }
    /// <summary>Gets whether the "level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLevel {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLevel() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "rewards" field.</summary>
    public const int RewardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Texas.Protocol.RewardInfo> _repeated_rewards_codec
        = pb::FieldCodec.ForMessage(18, global::Texas.Protocol.RewardInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.RewardInfo> rewards_ = new pbc::RepeatedField<global::Texas.Protocol.RewardInfo>();
    /// <summary>
    ///奖品
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.RewardInfo> Rewards {
      get { return rewards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserLevelRewardsBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserLevelRewardsBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Level != other.Level) return false;
      if(!rewards_.Equals(other.rewards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLevel) hash ^= Level.GetHashCode();
      hash ^= rewards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLevel) {
        output.WriteRawTag(8);
        output.WriteInt32(Level);
      }
      rewards_.WriteTo(output, _repeated_rewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLevel) {
        output.WriteRawTag(8);
        output.WriteInt32(Level);
      }
      rewards_.WriteTo(ref output, _repeated_rewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLevel) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      size += rewards_.CalculateSize(_repeated_rewards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserLevelRewardsBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasLevel) {
        Level = other.Level;
      }
      rewards_.Add(other.rewards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Level = input.ReadInt32();
            break;
          }
          case 18: {
            rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Level = input.ReadInt32();
            break;
          }
          case 18: {
            rewards_.AddEntriesFrom(ref input, _repeated_rewards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///老用户等级奖励推送
  /// </summary>
  public sealed partial class OldUserRewardsBRC : pb::IMessage<OldUserRewardsBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OldUserRewardsBRC> _parser = new pb::MessageParser<OldUserRewardsBRC>(() => new OldUserRewardsBRC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OldUserRewardsBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OldUserRewardsBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OldUserRewardsBRC(OldUserRewardsBRC other) : this() {
      levelRewards_ = other.levelRewards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OldUserRewardsBRC Clone() {
      return new OldUserRewardsBRC(this);
    }

    /// <summary>Field number for the "level_rewards" field.</summary>
    public const int LevelRewardsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.UserLevelRewardsBRC> _repeated_levelRewards_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.UserLevelRewardsBRC.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.UserLevelRewardsBRC> levelRewards_ = new pbc::RepeatedField<global::Texas.Protocol.UserLevelRewardsBRC>();
    /// <summary>
    ///多级奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.UserLevelRewardsBRC> LevelRewards {
      get { return levelRewards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OldUserRewardsBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OldUserRewardsBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!levelRewards_.Equals(other.levelRewards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= levelRewards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      levelRewards_.WriteTo(output, _repeated_levelRewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      levelRewards_.WriteTo(ref output, _repeated_levelRewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += levelRewards_.CalculateSize(_repeated_levelRewards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OldUserRewardsBRC other) {
      if (other == null) {
        return;
      }
      levelRewards_.Add(other.levelRewards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            levelRewards_.AddEntriesFrom(input, _repeated_levelRewards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            levelRewards_.AddEntriesFrom(ref input, _repeated_levelRewards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///领取任务奖励
  /// </summary>
  public sealed partial class GetTaskRewardREQ : pb::IMessage<GetTaskRewardREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetTaskRewardREQ> _parser = new pb::MessageParser<GetTaskRewardREQ>(() => new GetTaskRewardREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetTaskRewardREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTaskRewardREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTaskRewardREQ(GetTaskRewardREQ other) : this() {
      _hasBits0 = other._hasBits0;
      taskId_ = other.taskId_;
      type_ = other.type_;
      day_ = other.day_;
      roomid_ = other.roomid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTaskRewardREQ Clone() {
      return new GetTaskRewardREQ(this);
    }

    /// <summary>Field number for the "task_id" field.</summary>
    public const int TaskIdFieldNumber = 1;
    private readonly static int TaskIdDefaultValue = 0;

    private int taskId_;
    /// <summary>
    ///任务id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TaskId {
      get { if ((_hasBits0 & 1) != 0) { return taskId_; } else { return TaskIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        taskId_ = value;
      }
    }
    /// <summary>Gets whether the "task_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTaskId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "task_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTaskId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    ///type任务类型,主要未了兼容旧任务,1;赢金币,2;下注,3;赢牌手数,4;参与SNG,5;参与MTT,6;赢SNG,7;赢MTT,8;MTT钱圈,9;赢牌牌型,10;俱乐部体验,11;每日签到,12;分享牌局录像,13;社区观看3手牌,14;社区单条评论获得10个赞,15;参加一场官方赛事,16;每日登录任务;17参与spinup;18荷官打赏
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 2) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "day" field.</summary>
    public const int DayFieldNumber = 3;
    private readonly static int DayDefaultValue = 0;

    private int day_;
    /// <summary>
    ///日期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Day {
      get { if ((_hasBits0 & 4) != 0) { return day_; } else { return DayDefaultValue; } }
      set {
        _hasBits0 |= 4;
        day_ = value;
      }
    }
    /// <summary>Gets whether the "day" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDay {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "day" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDay() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 4;
    private readonly static string RoomidDefaultValue = "";

    private string roomid_;
    /// <summary>
    ///用于windows多进程区分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Roomid {
      get { return roomid_ ?? RoomidDefaultValue; }
      set {
        roomid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return roomid_ != null; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      roomid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetTaskRewardREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetTaskRewardREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskId != other.TaskId) return false;
      if (Type != other.Type) return false;
      if (Day != other.Day) return false;
      if (Roomid != other.Roomid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTaskId) hash ^= TaskId.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasDay) hash ^= Day.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTaskId) {
        output.WriteRawTag(8);
        output.WriteInt32(TaskId);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (HasDay) {
        output.WriteRawTag(24);
        output.WriteInt32(Day);
      }
      if (HasRoomid) {
        output.WriteRawTag(34);
        output.WriteString(Roomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTaskId) {
        output.WriteRawTag(8);
        output.WriteInt32(TaskId);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (HasDay) {
        output.WriteRawTag(24);
        output.WriteInt32(Day);
      }
      if (HasRoomid) {
        output.WriteRawTag(34);
        output.WriteString(Roomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTaskId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskId);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasDay) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Day);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Roomid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetTaskRewardREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasTaskId) {
        TaskId = other.TaskId;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasDay) {
        Day = other.Day;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TaskId = input.ReadInt32();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 24: {
            Day = input.ReadInt32();
            break;
          }
          case 34: {
            Roomid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TaskId = input.ReadInt32();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 24: {
            Day = input.ReadInt32();
            break;
          }
          case 34: {
            Roomid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetTaskRewardRSP : pb::IMessage<GetTaskRewardRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetTaskRewardRSP> _parser = new pb::MessageParser<GetTaskRewardRSP>(() => new GetTaskRewardRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetTaskRewardRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTaskRewardRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTaskRewardRSP(GetTaskRewardRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      taskId_ = other.taskId_;
      type_ = other.type_;
      roomid_ = other.roomid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTaskRewardRSP Clone() {
      return new GetTaskRewardRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0成功 -1失败 -2已领取 -3未完成 -4超过IP限制 -5系统错误
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "task_id" field.</summary>
    public const int TaskIdFieldNumber = 2;
    private readonly static int TaskIdDefaultValue = 0;

    private int taskId_;
    /// <summary>
    ///任务id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TaskId {
      get { if ((_hasBits0 & 2) != 0) { return taskId_; } else { return TaskIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        taskId_ = value;
      }
    }
    /// <summary>Gets whether the "task_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTaskId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "task_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTaskId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    ///任务类型,主要未了兼容旧任务
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 4) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 4;
    private readonly static string RoomidDefaultValue = "";

    private string roomid_;
    /// <summary>
    ///用于windows多进程区分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Roomid {
      get { return roomid_ ?? RoomidDefaultValue; }
      set {
        roomid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return roomid_ != null; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      roomid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetTaskRewardRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetTaskRewardRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (TaskId != other.TaskId) return false;
      if (Type != other.Type) return false;
      if (Roomid != other.Roomid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasTaskId) hash ^= TaskId.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasTaskId) {
        output.WriteRawTag(16);
        output.WriteInt32(TaskId);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (HasRoomid) {
        output.WriteRawTag(34);
        output.WriteString(Roomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasTaskId) {
        output.WriteRawTag(16);
        output.WriteInt32(TaskId);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (HasRoomid) {
        output.WriteRawTag(34);
        output.WriteString(Roomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasTaskId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskId);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Roomid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetTaskRewardRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasTaskId) {
        TaskId = other.TaskId;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            TaskId = input.ReadInt32();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
          case 34: {
            Roomid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            TaskId = input.ReadInt32();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
          case 34: {
            Roomid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///任务信息
  /// </summary>
  public sealed partial class NewTaskInfo : pb::IMessage<NewTaskInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NewTaskInfo> _parser = new pb::MessageParser<NewTaskInfo>(() => new NewTaskInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NewTaskInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewTaskInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewTaskInfo(NewTaskInfo other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      status_ = other.status_;
      module_ = other.module_;
      type_ = other.type_;
      content_ = other.content_;
      progress_ = other.progress_;
      rdInfo_ = other.rdInfo_.Clone();
      durType_ = other.durType_;
      sortId_ = other.sortId_;
      taskInfo_ = other.taskInfo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NewTaskInfo Clone() {
      return new NewTaskInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private readonly static int StatusDefaultValue = 0;

    private int status_;
    /// <summary>
    /// 0:未完成，1:已完成,2:已领取
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Status {
      get { if ((_hasBits0 & 2) != 0) { return status_; } else { return StatusDefaultValue; } }
      set {
        _hasBits0 |= 2;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatus {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatus() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "module" field.</summary>
    public const int ModuleFieldNumber = 3;
    private readonly static int ModuleDefaultValue = 0;

    private int module_;
    /// <summary>
    ///任务分类，0:游戏大厅，1:俱乐部，2:官方赛事，3:社区，4:综合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Module {
      get { if ((_hasBits0 & 4) != 0) { return module_; } else { return ModuleDefaultValue; } }
      set {
        _hasBits0 |= 4;
        module_ = value;
      }
    }
    /// <summary>Gets whether the "module" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModule {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "module" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModule() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    ///任务类型,同GetTaskRewardREQ中的type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 8) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 5;
    private readonly static string ContentDefaultValue = "";

    private string content_;
    /// <summary>
    ///任务内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Content {
      get { return content_ ?? ContentDefaultValue; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "content" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContent {
      get { return content_ != null; }
    }
    /// <summary>Clears the value of the "content" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContent() {
      content_ = null;
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 6;
    private readonly static string ProgressDefaultValue = "";

    private string progress_;
    /// <summary>
    ///任务进度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Progress {
      get { return progress_ ?? ProgressDefaultValue; }
      set {
        progress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "progress" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProgress {
      get { return progress_ != null; }
    }
    /// <summary>Clears the value of the "progress" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProgress() {
      progress_ = null;
    }

    /// <summary>Field number for the "rd_info" field.</summary>
    public const int RdInfoFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Texas.Protocol.RewardInfo> _repeated_rdInfo_codec
        = pb::FieldCodec.ForMessage(58, global::Texas.Protocol.RewardInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.RewardInfo> rdInfo_ = new pbc::RepeatedField<global::Texas.Protocol.RewardInfo>();
    /// <summary>
    ///任务奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.RewardInfo> RdInfo {
      get { return rdInfo_; }
    }

    /// <summary>Field number for the "dur_type" field.</summary>
    public const int DurTypeFieldNumber = 8;
    private readonly static int DurTypeDefaultValue = 0;

    private int durType_;
    /// <summary>
    ///0:1次性任务，1：每日周期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DurType {
      get { if ((_hasBits0 & 16) != 0) { return durType_; } else { return DurTypeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        durType_ = value;
      }
    }
    /// <summary>Gets whether the "dur_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDurType {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "dur_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDurType() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "sort_id" field.</summary>
    public const int SortIdFieldNumber = 9;
    private readonly static int SortIdDefaultValue = 0;

    private int sortId_;
    /// <summary>
    ///排序值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SortId {
      get { if ((_hasBits0 & 32) != 0) { return sortId_; } else { return SortIdDefaultValue; } }
      set {
        _hasBits0 |= 32;
        sortId_ = value;
      }
    }
    /// <summary>Gets whether the "sort_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSortId {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "sort_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSortId() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "task_info" field.</summary>
    public const int TaskInfoFieldNumber = 10;
    private readonly static string TaskInfoDefaultValue = "";

    private string taskInfo_;
    /// <summary>
    ///task_info任务信息详情:[game_type:游戏类型(1-NLD 德州 2-PLO 奥马哈 3-OFC 大菠萝) coin_amount:赢币数量(原值) blind:盲注级别(原值) game_num:手牌数 set_num:牌局数 card_type:赢牌牌型 buyin:买入(原值)]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TaskInfo {
      get { return taskInfo_ ?? TaskInfoDefaultValue; }
      set {
        taskInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "task_info" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTaskInfo {
      get { return taskInfo_ != null; }
    }
    /// <summary>Clears the value of the "task_info" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTaskInfo() {
      taskInfo_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NewTaskInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NewTaskInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Status != other.Status) return false;
      if (Module != other.Module) return false;
      if (Type != other.Type) return false;
      if (Content != other.Content) return false;
      if (Progress != other.Progress) return false;
      if(!rdInfo_.Equals(other.rdInfo_)) return false;
      if (DurType != other.DurType) return false;
      if (SortId != other.SortId) return false;
      if (TaskInfo != other.TaskInfo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (HasModule) hash ^= Module.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasContent) hash ^= Content.GetHashCode();
      if (HasProgress) hash ^= Progress.GetHashCode();
      hash ^= rdInfo_.GetHashCode();
      if (HasDurType) hash ^= DurType.GetHashCode();
      if (HasSortId) hash ^= SortId.GetHashCode();
      if (HasTaskInfo) hash ^= TaskInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasStatus) {
        output.WriteRawTag(16);
        output.WriteInt32(Status);
      }
      if (HasModule) {
        output.WriteRawTag(24);
        output.WriteInt32(Module);
      }
      if (HasType) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (HasContent) {
        output.WriteRawTag(42);
        output.WriteString(Content);
      }
      if (HasProgress) {
        output.WriteRawTag(50);
        output.WriteString(Progress);
      }
      rdInfo_.WriteTo(output, _repeated_rdInfo_codec);
      if (HasDurType) {
        output.WriteRawTag(64);
        output.WriteInt32(DurType);
      }
      if (HasSortId) {
        output.WriteRawTag(72);
        output.WriteInt32(SortId);
      }
      if (HasTaskInfo) {
        output.WriteRawTag(82);
        output.WriteString(TaskInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasStatus) {
        output.WriteRawTag(16);
        output.WriteInt32(Status);
      }
      if (HasModule) {
        output.WriteRawTag(24);
        output.WriteInt32(Module);
      }
      if (HasType) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (HasContent) {
        output.WriteRawTag(42);
        output.WriteString(Content);
      }
      if (HasProgress) {
        output.WriteRawTag(50);
        output.WriteString(Progress);
      }
      rdInfo_.WriteTo(ref output, _repeated_rdInfo_codec);
      if (HasDurType) {
        output.WriteRawTag(64);
        output.WriteInt32(DurType);
      }
      if (HasSortId) {
        output.WriteRawTag(72);
        output.WriteInt32(SortId);
      }
      if (HasTaskInfo) {
        output.WriteRawTag(82);
        output.WriteString(TaskInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (HasModule) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Module);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasContent) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (HasProgress) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Progress);
      }
      size += rdInfo_.CalculateSize(_repeated_rdInfo_codec);
      if (HasDurType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DurType);
      }
      if (HasSortId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SortId);
      }
      if (HasTaskInfo) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NewTaskInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.HasModule) {
        Module = other.Module;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasContent) {
        Content = other.Content;
      }
      if (other.HasProgress) {
        Progress = other.Progress;
      }
      rdInfo_.Add(other.rdInfo_);
      if (other.HasDurType) {
        DurType = other.DurType;
      }
      if (other.HasSortId) {
        SortId = other.SortId;
      }
      if (other.HasTaskInfo) {
        TaskInfo = other.TaskInfo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Status = input.ReadInt32();
            break;
          }
          case 24: {
            Module = input.ReadInt32();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
          case 42: {
            Content = input.ReadString();
            break;
          }
          case 50: {
            Progress = input.ReadString();
            break;
          }
          case 58: {
            rdInfo_.AddEntriesFrom(input, _repeated_rdInfo_codec);
            break;
          }
          case 64: {
            DurType = input.ReadInt32();
            break;
          }
          case 72: {
            SortId = input.ReadInt32();
            break;
          }
          case 82: {
            TaskInfo = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Status = input.ReadInt32();
            break;
          }
          case 24: {
            Module = input.ReadInt32();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
          case 42: {
            Content = input.ReadString();
            break;
          }
          case 50: {
            Progress = input.ReadString();
            break;
          }
          case 58: {
            rdInfo_.AddEntriesFrom(ref input, _repeated_rdInfo_codec);
            break;
          }
          case 64: {
            DurType = input.ReadInt32();
            break;
          }
          case 72: {
            SortId = input.ReadInt32();
            break;
          }
          case 82: {
            TaskInfo = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///获取任务列表
  /// </summary>
  public sealed partial class GetTaskListREQ : pb::IMessage<GetTaskListREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetTaskListREQ> _parser = new pb::MessageParser<GetTaskListREQ>(() => new GetTaskListREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetTaskListREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTaskListREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTaskListREQ(GetTaskListREQ other) : this() {
      lang_ = other.lang_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTaskListREQ Clone() {
      return new GetTaskListREQ(this);
    }

    /// <summary>Field number for the "lang" field.</summary>
    public const int LangFieldNumber = 1;
    private readonly static string LangDefaultValue = "";

    private string lang_;
    /// <summary>
    ///客户端语言
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Lang {
      get { return lang_ ?? LangDefaultValue; }
      set {
        lang_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "lang" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLang {
      get { return lang_ != null; }
    }
    /// <summary>Clears the value of the "lang" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLang() {
      lang_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetTaskListREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetTaskListREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Lang != other.Lang) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLang) hash ^= Lang.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLang) {
        output.WriteRawTag(10);
        output.WriteString(Lang);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLang) {
        output.WriteRawTag(10);
        output.WriteString(Lang);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLang) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Lang);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetTaskListREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasLang) {
        Lang = other.Lang;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Lang = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Lang = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///任务列表返回
  /// </summary>
  public sealed partial class GetTaskListRSP : pb::IMessage<GetTaskListRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetTaskListRSP> _parser = new pb::MessageParser<GetTaskListRSP>(() => new GetTaskListRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetTaskListRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTaskListRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTaskListRSP(GetTaskListRSP other) : this() {
      _hasBits0 = other._hasBits0;
      tasks_ = other.tasks_.Clone();
      leaveTime_ = other.leaveTime_;
      day_ = other.day_;
      newDayth_ = other.newDayth_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTaskListRSP Clone() {
      return new GetTaskListRSP(this);
    }

    /// <summary>Field number for the "tasks" field.</summary>
    public const int TasksFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.NewTaskInfo> _repeated_tasks_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.NewTaskInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.NewTaskInfo> tasks_ = new pbc::RepeatedField<global::Texas.Protocol.NewTaskInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.NewTaskInfo> Tasks {
      get { return tasks_; }
    }

    /// <summary>Field number for the "leave_time" field.</summary>
    public const int LeaveTimeFieldNumber = 2;
    private readonly static int LeaveTimeDefaultValue = 0;

    private int leaveTime_;
    /// <summary>
    ///格式：1573023600-->2019-11-06 15:00:00
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LeaveTime {
      get { if ((_hasBits0 & 1) != 0) { return leaveTime_; } else { return LeaveTimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leaveTime_ = value;
      }
    }
    /// <summary>Gets whether the "leave_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeaveTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "leave_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeaveTime() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "day" field.</summary>
    public const int DayFieldNumber = 3;
    private readonly static int DayDefaultValue = 0;

    private int day_;
    /// <summary>
    ///日期,格式：20191106
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Day {
      get { if ((_hasBits0 & 2) != 0) { return day_; } else { return DayDefaultValue; } }
      set {
        _hasBits0 |= 2;
        day_ = value;
      }
    }
    /// <summary>Gets whether the "day" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDay {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "day" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDay() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "new_dayth" field.</summary>
    public const int NewDaythFieldNumber = 4;
    private readonly static int NewDaythDefaultValue = 0;

    private int newDayth_;
    /// <summary>
    ///新用户的任务第几天
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NewDayth {
      get { if ((_hasBits0 & 4) != 0) { return newDayth_; } else { return NewDaythDefaultValue; } }
      set {
        _hasBits0 |= 4;
        newDayth_ = value;
      }
    }
    /// <summary>Gets whether the "new_dayth" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNewDayth {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "new_dayth" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNewDayth() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetTaskListRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetTaskListRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tasks_.Equals(other.tasks_)) return false;
      if (LeaveTime != other.LeaveTime) return false;
      if (Day != other.Day) return false;
      if (NewDayth != other.NewDayth) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tasks_.GetHashCode();
      if (HasLeaveTime) hash ^= LeaveTime.GetHashCode();
      if (HasDay) hash ^= Day.GetHashCode();
      if (HasNewDayth) hash ^= NewDayth.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      tasks_.WriteTo(output, _repeated_tasks_codec);
      if (HasLeaveTime) {
        output.WriteRawTag(16);
        output.WriteInt32(LeaveTime);
      }
      if (HasDay) {
        output.WriteRawTag(24);
        output.WriteInt32(Day);
      }
      if (HasNewDayth) {
        output.WriteRawTag(32);
        output.WriteInt32(NewDayth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      tasks_.WriteTo(ref output, _repeated_tasks_codec);
      if (HasLeaveTime) {
        output.WriteRawTag(16);
        output.WriteInt32(LeaveTime);
      }
      if (HasDay) {
        output.WriteRawTag(24);
        output.WriteInt32(Day);
      }
      if (HasNewDayth) {
        output.WriteRawTag(32);
        output.WriteInt32(NewDayth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += tasks_.CalculateSize(_repeated_tasks_codec);
      if (HasLeaveTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeaveTime);
      }
      if (HasDay) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Day);
      }
      if (HasNewDayth) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NewDayth);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetTaskListRSP other) {
      if (other == null) {
        return;
      }
      tasks_.Add(other.tasks_);
      if (other.HasLeaveTime) {
        LeaveTime = other.LeaveTime;
      }
      if (other.HasDay) {
        Day = other.Day;
      }
      if (other.HasNewDayth) {
        NewDayth = other.NewDayth;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tasks_.AddEntriesFrom(input, _repeated_tasks_codec);
            break;
          }
          case 16: {
            LeaveTime = input.ReadInt32();
            break;
          }
          case 24: {
            Day = input.ReadInt32();
            break;
          }
          case 32: {
            NewDayth = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            tasks_.AddEntriesFrom(ref input, _repeated_tasks_codec);
            break;
          }
          case 16: {
            LeaveTime = input.ReadInt32();
            break;
          }
          case 24: {
            Day = input.ReadInt32();
            break;
          }
          case 32: {
            NewDayth = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserRewardNotify : pb::IMessage<UserRewardNotify>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserRewardNotify> _parser = new pb::MessageParser<UserRewardNotify>(() => new UserRewardNotify());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserRewardNotify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserRewardNotify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserRewardNotify(UserRewardNotify other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      clubid_ = other.clubid_;
      chips_ = other.chips_;
      stormNo_ = other.stormNo_;
      leagueid_ = other.leagueid_;
      roomid_ = other.roomid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserRewardNotify Clone() {
      return new UserRewardNotify(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 2;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 2) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "chips" field.</summary>
    public const int ChipsFieldNumber = 3;
    private readonly static long ChipsDefaultValue = 0L;

    private long chips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Chips {
      get { if ((_hasBits0 & 4) != 0) { return chips_; } else { return ChipsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        chips_ = value;
      }
    }
    /// <summary>Gets whether the "chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChips {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChips() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "storm_no" field.</summary>
    public const int StormNoFieldNumber = 4;
    private readonly static int StormNoDefaultValue = 0;

    private int stormNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StormNo {
      get { if ((_hasBits0 & 8) != 0) { return stormNo_; } else { return StormNoDefaultValue; } }
      set {
        _hasBits0 |= 8;
        stormNo_ = value;
      }
    }
    /// <summary>Gets whether the "storm_no" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStormNo {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "storm_no" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStormNo() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 5;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 16) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 6;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 32) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 32;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserRewardNotify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserRewardNotify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Clubid != other.Clubid) return false;
      if (Chips != other.Chips) return false;
      if (StormNo != other.StormNo) return false;
      if (Leagueid != other.Leagueid) return false;
      if (Roomid != other.Roomid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasChips) hash ^= Chips.GetHashCode();
      if (HasStormNo) hash ^= StormNo.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(16);
        output.WriteInt32(Clubid);
      }
      if (HasChips) {
        output.WriteRawTag(24);
        output.WriteInt64(Chips);
      }
      if (HasStormNo) {
        output.WriteRawTag(32);
        output.WriteInt32(StormNo);
      }
      if (HasLeagueid) {
        output.WriteRawTag(40);
        output.WriteInt32(Leagueid);
      }
      if (HasRoomid) {
        output.WriteRawTag(48);
        output.WriteInt32(Roomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(16);
        output.WriteInt32(Clubid);
      }
      if (HasChips) {
        output.WriteRawTag(24);
        output.WriteInt64(Chips);
      }
      if (HasStormNo) {
        output.WriteRawTag(32);
        output.WriteInt32(StormNo);
      }
      if (HasLeagueid) {
        output.WriteRawTag(40);
        output.WriteInt32(Leagueid);
      }
      if (HasRoomid) {
        output.WriteRawTag(48);
        output.WriteInt32(Roomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Chips);
      }
      if (HasStormNo) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StormNo);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserRewardNotify other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasChips) {
        Chips = other.Chips;
      }
      if (other.HasStormNo) {
        StormNo = other.StormNo;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 16: {
            Clubid = input.ReadInt32();
            break;
          }
          case 24: {
            Chips = input.ReadInt64();
            break;
          }
          case 32: {
            StormNo = input.ReadInt32();
            break;
          }
          case 40: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 48: {
            Roomid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 16: {
            Clubid = input.ReadInt32();
            break;
          }
          case 24: {
            Chips = input.ReadInt64();
            break;
          }
          case 32: {
            StormNo = input.ReadInt32();
            break;
          }
          case 40: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 48: {
            Roomid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserRewardREQ : pb::IMessage<UserRewardREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserRewardREQ> _parser = new pb::MessageParser<UserRewardREQ>(() => new UserRewardREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserRewardREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserRewardREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserRewardREQ(UserRewardREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      stormNo_ = other.stormNo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserRewardREQ Clone() {
      return new UserRewardREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 1) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 2;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 2) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "storm_no" field.</summary>
    public const int StormNoFieldNumber = 3;
    private readonly static int StormNoDefaultValue = 0;

    private int stormNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StormNo {
      get { if ((_hasBits0 & 4) != 0) { return stormNo_; } else { return StormNoDefaultValue; } }
      set {
        _hasBits0 |= 4;
        stormNo_ = value;
      }
    }
    /// <summary>Gets whether the "storm_no" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStormNo {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "storm_no" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStormNo() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserRewardREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserRewardREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (StormNo != other.StormNo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasStormNo) hash ^= StormNo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(8);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasStormNo) {
        output.WriteRawTag(24);
        output.WriteInt32(StormNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(8);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasStormNo) {
        output.WriteRawTag(24);
        output.WriteInt32(StormNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasStormNo) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StormNo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserRewardREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasStormNo) {
        StormNo = other.StormNo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Clubid = input.ReadInt32();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            StormNo = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Clubid = input.ReadInt32();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            StormNo = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserReward : pb::IMessage<UserReward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserReward> _parser = new pb::MessageParser<UserReward>(() => new UserReward());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserReward(UserReward other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      chips_ = other.chips_;
      nickname_ = other.nickname_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserReward Clone() {
      return new UserReward(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "chips" field.</summary>
    public const int ChipsFieldNumber = 2;
    private readonly static long ChipsDefaultValue = 0L;

    private long chips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Chips {
      get { if ((_hasBits0 & 2) != 0) { return chips_; } else { return ChipsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        chips_ = value;
      }
    }
    /// <summary>Gets whether the "chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChips {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChips() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 3;
    private readonly static string NicknameDefaultValue = "";

    private string nickname_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Nickname {
      get { return nickname_ ?? NicknameDefaultValue; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "nickname" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNickname {
      get { return nickname_ != null; }
    }
    /// <summary>Clears the value of the "nickname" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNickname() {
      nickname_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Chips != other.Chips) return false;
      if (Nickname != other.Nickname) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasChips) hash ^= Chips.GetHashCode();
      if (HasNickname) hash ^= Nickname.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (HasChips) {
        output.WriteRawTag(16);
        output.WriteInt64(Chips);
      }
      if (HasNickname) {
        output.WriteRawTag(26);
        output.WriteString(Nickname);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (HasChips) {
        output.WriteRawTag(16);
        output.WriteInt64(Chips);
      }
      if (HasNickname) {
        output.WriteRawTag(26);
        output.WriteString(Nickname);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Chips);
      }
      if (HasNickname) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserReward other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasChips) {
        Chips = other.Chips;
      }
      if (other.HasNickname) {
        Nickname = other.Nickname;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 16: {
            Chips = input.ReadInt64();
            break;
          }
          case 26: {
            Nickname = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 16: {
            Chips = input.ReadInt64();
            break;
          }
          case 26: {
            Nickname = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserRewardRSP : pb::IMessage<UserRewardRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserRewardRSP> _parser = new pb::MessageParser<UserRewardRSP>(() => new UserRewardRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserRewardRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserRewardRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserRewardRSP(UserRewardRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      chips_ = other.chips_;
      rewards_ = other.rewards_.Clone();
      stormNo_ = other.stormNo_;
      minutes_ = other.minutes_;
      leagueid_ = other.leagueid_;
      clubid_ = other.clubid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserRewardRSP Clone() {
      return new UserRewardRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static long CodeDefaultValue = 0L;

    private long code_;
    /// <summary>
    /// 0 success other error
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "chips" field.</summary>
    public const int ChipsFieldNumber = 2;
    private readonly static long ChipsDefaultValue = 0L;

    private long chips_;
    /// <summary>
    /// query uid get reward chips
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Chips {
      get { if ((_hasBits0 & 2) != 0) { return chips_; } else { return ChipsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        chips_ = value;
      }
    }
    /// <summary>Gets whether the "chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChips {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChips() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "rewards" field.</summary>
    public const int RewardsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Texas.Protocol.UserReward> _repeated_rewards_codec
        = pb::FieldCodec.ForMessage(26, global::Texas.Protocol.UserReward.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.UserReward> rewards_ = new pbc::RepeatedField<global::Texas.Protocol.UserReward>();
    /// <summary>
    /// the last fifty get reward info
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.UserReward> Rewards {
      get { return rewards_; }
    }

    /// <summary>Field number for the "storm_no" field.</summary>
    public const int StormNoFieldNumber = 4;
    private readonly static int StormNoDefaultValue = 0;

    private int stormNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StormNo {
      get { if ((_hasBits0 & 4) != 0) { return stormNo_; } else { return StormNoDefaultValue; } }
      set {
        _hasBits0 |= 4;
        stormNo_ = value;
      }
    }
    /// <summary>Gets whether the "storm_no" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStormNo {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "storm_no" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStormNo() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "minutes" field.</summary>
    public const int MinutesFieldNumber = 5;
    private readonly static int MinutesDefaultValue = 0;

    private int minutes_;
    /// <summary>
    /// user playing time when storm begin
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Minutes {
      get { if ((_hasBits0 & 8) != 0) { return minutes_; } else { return MinutesDefaultValue; } }
      set {
        _hasBits0 |= 8;
        minutes_ = value;
      }
    }
    /// <summary>Gets whether the "minutes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinutes {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "minutes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinutes() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 6;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 16) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 7;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 32) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 32;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserRewardRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserRewardRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Chips != other.Chips) return false;
      if(!rewards_.Equals(other.rewards_)) return false;
      if (StormNo != other.StormNo) return false;
      if (Minutes != other.Minutes) return false;
      if (Leagueid != other.Leagueid) return false;
      if (Clubid != other.Clubid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasChips) hash ^= Chips.GetHashCode();
      hash ^= rewards_.GetHashCode();
      if (HasStormNo) hash ^= StormNo.GetHashCode();
      if (HasMinutes) hash ^= Minutes.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt64(Code);
      }
      if (HasChips) {
        output.WriteRawTag(16);
        output.WriteInt64(Chips);
      }
      rewards_.WriteTo(output, _repeated_rewards_codec);
      if (HasStormNo) {
        output.WriteRawTag(32);
        output.WriteInt32(StormNo);
      }
      if (HasMinutes) {
        output.WriteRawTag(40);
        output.WriteInt32(Minutes);
      }
      if (HasLeagueid) {
        output.WriteRawTag(48);
        output.WriteInt32(Leagueid);
      }
      if (HasClubid) {
        output.WriteRawTag(56);
        output.WriteInt32(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt64(Code);
      }
      if (HasChips) {
        output.WriteRawTag(16);
        output.WriteInt64(Chips);
      }
      rewards_.WriteTo(ref output, _repeated_rewards_codec);
      if (HasStormNo) {
        output.WriteRawTag(32);
        output.WriteInt32(StormNo);
      }
      if (HasMinutes) {
        output.WriteRawTag(40);
        output.WriteInt32(Minutes);
      }
      if (HasLeagueid) {
        output.WriteRawTag(48);
        output.WriteInt32(Leagueid);
      }
      if (HasClubid) {
        output.WriteRawTag(56);
        output.WriteInt32(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Code);
      }
      if (HasChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Chips);
      }
      size += rewards_.CalculateSize(_repeated_rewards_codec);
      if (HasStormNo) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StormNo);
      }
      if (HasMinutes) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Minutes);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserRewardRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasChips) {
        Chips = other.Chips;
      }
      rewards_.Add(other.rewards_);
      if (other.HasStormNo) {
        StormNo = other.StormNo;
      }
      if (other.HasMinutes) {
        Minutes = other.Minutes;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt64();
            break;
          }
          case 16: {
            Chips = input.ReadInt64();
            break;
          }
          case 26: {
            rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
            break;
          }
          case 32: {
            StormNo = input.ReadInt32();
            break;
          }
          case 40: {
            Minutes = input.ReadInt32();
            break;
          }
          case 48: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 56: {
            Clubid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt64();
            break;
          }
          case 16: {
            Chips = input.ReadInt64();
            break;
          }
          case 26: {
            rewards_.AddEntriesFrom(ref input, _repeated_rewards_codec);
            break;
          }
          case 32: {
            StormNo = input.ReadInt32();
            break;
          }
          case 40: {
            Minutes = input.ReadInt32();
            break;
          }
          case 48: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 56: {
            Clubid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserStormRewardBroadcast : pb::IMessage<UserStormRewardBroadcast>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserStormRewardBroadcast> _parser = new pb::MessageParser<UserStormRewardBroadcast>(() => new UserStormRewardBroadcast());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserStormRewardBroadcast> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserStormRewardBroadcast() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserStormRewardBroadcast(UserStormRewardBroadcast other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      nickname_ = other.nickname_;
      chips_ = other.chips_;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      stormNo_ = other.stormNo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserStormRewardBroadcast Clone() {
      return new UserStormRewardBroadcast(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 2;
    private readonly static string NicknameDefaultValue = "";

    private string nickname_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Nickname {
      get { return nickname_ ?? NicknameDefaultValue; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "nickname" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNickname {
      get { return nickname_ != null; }
    }
    /// <summary>Clears the value of the "nickname" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNickname() {
      nickname_ = null;
    }

    /// <summary>Field number for the "chips" field.</summary>
    public const int ChipsFieldNumber = 3;
    private readonly static long ChipsDefaultValue = 0L;

    private long chips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Chips {
      get { if ((_hasBits0 & 2) != 0) { return chips_; } else { return ChipsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        chips_ = value;
      }
    }
    /// <summary>Gets whether the "chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChips {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChips() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 4;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 4) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 5;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 8) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "storm_no" field.</summary>
    public const int StormNoFieldNumber = 6;
    private readonly static int StormNoDefaultValue = 0;

    private int stormNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StormNo {
      get { if ((_hasBits0 & 16) != 0) { return stormNo_; } else { return StormNoDefaultValue; } }
      set {
        _hasBits0 |= 16;
        stormNo_ = value;
      }
    }
    /// <summary>Gets whether the "storm_no" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStormNo {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "storm_no" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStormNo() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserStormRewardBroadcast);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserStormRewardBroadcast other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Nickname != other.Nickname) return false;
      if (Chips != other.Chips) return false;
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (StormNo != other.StormNo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasNickname) hash ^= Nickname.GetHashCode();
      if (HasChips) hash ^= Chips.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasStormNo) hash ^= StormNo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (HasNickname) {
        output.WriteRawTag(18);
        output.WriteString(Nickname);
      }
      if (HasChips) {
        output.WriteRawTag(24);
        output.WriteInt64(Chips);
      }
      if (HasClubid) {
        output.WriteRawTag(32);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(40);
        output.WriteInt32(Leagueid);
      }
      if (HasStormNo) {
        output.WriteRawTag(48);
        output.WriteInt32(StormNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (HasNickname) {
        output.WriteRawTag(18);
        output.WriteString(Nickname);
      }
      if (HasChips) {
        output.WriteRawTag(24);
        output.WriteInt64(Chips);
      }
      if (HasClubid) {
        output.WriteRawTag(32);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(40);
        output.WriteInt32(Leagueid);
      }
      if (HasStormNo) {
        output.WriteRawTag(48);
        output.WriteInt32(StormNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasNickname) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (HasChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Chips);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasStormNo) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StormNo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserStormRewardBroadcast other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasNickname) {
        Nickname = other.Nickname;
      }
      if (other.HasChips) {
        Chips = other.Chips;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasStormNo) {
        StormNo = other.StormNo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 18: {
            Nickname = input.ReadString();
            break;
          }
          case 24: {
            Chips = input.ReadInt64();
            break;
          }
          case 32: {
            Clubid = input.ReadInt32();
            break;
          }
          case 40: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 48: {
            StormNo = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 18: {
            Nickname = input.ReadString();
            break;
          }
          case 24: {
            Chips = input.ReadInt64();
            break;
          }
          case 32: {
            Clubid = input.ReadInt32();
            break;
          }
          case 40: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 48: {
            StormNo = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StormInfoBroadcast : pb::IMessage<StormInfoBroadcast>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StormInfoBroadcast> _parser = new pb::MessageParser<StormInfoBroadcast>(() => new StormInfoBroadcast());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StormInfoBroadcast> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StormInfoBroadcast() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StormInfoBroadcast(StormInfoBroadcast other) : this() {
      info_ = other.info_ != null ? other.info_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StormInfoBroadcast Clone() {
      return new StormInfoBroadcast(this);
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 1;
    private global::Texas.Protocol.PPchipsStormInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PPchipsStormInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StormInfoBroadcast);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StormInfoBroadcast other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Info, other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (info_ != null) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StormInfoBroadcast other) {
      if (other == null) {
        return;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Texas.Protocol.PPchipsStormInfo();
        }
        Info.MergeFrom(other.Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::Texas.Protocol.PPchipsStormInfo();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::Texas.Protocol.PPchipsStormInfo();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserShareInfoPush : pb::IMessage<UserShareInfoPush>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserShareInfoPush> _parser = new pb::MessageParser<UserShareInfoPush>(() => new UserShareInfoPush());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserShareInfoPush> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserShareInfoPush() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserShareInfoPush(UserShareInfoPush other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      num_ = other.num_;
      chips_ = other.chips_;
      roomid_ = other.roomid_;
      userCard_ = other.userCard_.Clone();
      roundCard_ = other.roundCard_.Clone();
      blind_ = other.blind_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserShareInfoPush Clone() {
      return new UserShareInfoPush(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    ///type 1 100bb  2 ofc 30 times score 3 fantsy 45 times score 4 ROYAL_FLUSH
    ///type 5 STRAIGHT_FLUSH  6 FOUR_A_KIND
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 2;
    private readonly static int NumDefaultValue = 0;

    private int num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Num {
      get { if ((_hasBits0 & 2) != 0) { return num_; } else { return NumDefaultValue; } }
      set {
        _hasBits0 |= 2;
        num_ = value;
      }
    }
    /// <summary>Gets whether the "num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNum {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNum() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "chips" field.</summary>
    public const int ChipsFieldNumber = 3;
    private readonly static long ChipsDefaultValue = 0L;

    private long chips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Chips {
      get { if ((_hasBits0 & 4) != 0) { return chips_; } else { return ChipsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        chips_ = value;
      }
    }
    /// <summary>Gets whether the "chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChips {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChips() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 4;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 8) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "user_card" field.</summary>
    public const int UserCardFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_userCard_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> userCard_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> UserCard {
      get { return userCard_; }
    }

    /// <summary>Field number for the "round_card" field.</summary>
    public const int RoundCardFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_roundCard_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> roundCard_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> RoundCard {
      get { return roundCard_; }
    }

    /// <summary>Field number for the "blind" field.</summary>
    public const int BlindFieldNumber = 7;
    private readonly static long BlindDefaultValue = 0L;

    private long blind_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Blind {
      get { if ((_hasBits0 & 16) != 0) { return blind_; } else { return BlindDefaultValue; } }
      set {
        _hasBits0 |= 16;
        blind_ = value;
      }
    }
    /// <summary>Gets whether the "blind" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlind {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "blind" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlind() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserShareInfoPush);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserShareInfoPush other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Num != other.Num) return false;
      if (Chips != other.Chips) return false;
      if (Roomid != other.Roomid) return false;
      if(!userCard_.Equals(other.userCard_)) return false;
      if(!roundCard_.Equals(other.roundCard_)) return false;
      if (Blind != other.Blind) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasNum) hash ^= Num.GetHashCode();
      if (HasChips) hash ^= Chips.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      hash ^= userCard_.GetHashCode();
      hash ^= roundCard_.GetHashCode();
      if (HasBlind) hash ^= Blind.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasNum) {
        output.WriteRawTag(16);
        output.WriteInt32(Num);
      }
      if (HasChips) {
        output.WriteRawTag(24);
        output.WriteInt64(Chips);
      }
      if (HasRoomid) {
        output.WriteRawTag(32);
        output.WriteInt32(Roomid);
      }
      userCard_.WriteTo(output, _repeated_userCard_codec);
      roundCard_.WriteTo(output, _repeated_roundCard_codec);
      if (HasBlind) {
        output.WriteRawTag(56);
        output.WriteInt64(Blind);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasNum) {
        output.WriteRawTag(16);
        output.WriteInt32(Num);
      }
      if (HasChips) {
        output.WriteRawTag(24);
        output.WriteInt64(Chips);
      }
      if (HasRoomid) {
        output.WriteRawTag(32);
        output.WriteInt32(Roomid);
      }
      userCard_.WriteTo(ref output, _repeated_userCard_codec);
      roundCard_.WriteTo(ref output, _repeated_roundCard_codec);
      if (HasBlind) {
        output.WriteRawTag(56);
        output.WriteInt64(Blind);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (HasChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Chips);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      size += userCard_.CalculateSize(_repeated_userCard_codec);
      size += roundCard_.CalculateSize(_repeated_roundCard_codec);
      if (HasBlind) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Blind);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserShareInfoPush other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasNum) {
        Num = other.Num;
      }
      if (other.HasChips) {
        Chips = other.Chips;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      userCard_.Add(other.userCard_);
      roundCard_.Add(other.roundCard_);
      if (other.HasBlind) {
        Blind = other.Blind;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            Num = input.ReadInt32();
            break;
          }
          case 24: {
            Chips = input.ReadInt64();
            break;
          }
          case 32: {
            Roomid = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            userCard_.AddEntriesFrom(input, _repeated_userCard_codec);
            break;
          }
          case 50:
          case 48: {
            roundCard_.AddEntriesFrom(input, _repeated_roundCard_codec);
            break;
          }
          case 56: {
            Blind = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            Num = input.ReadInt32();
            break;
          }
          case 24: {
            Chips = input.ReadInt64();
            break;
          }
          case 32: {
            Roomid = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            userCard_.AddEntriesFrom(ref input, _repeated_userCard_codec);
            break;
          }
          case 50:
          case 48: {
            roundCard_.AddEntriesFrom(ref input, _repeated_roundCard_codec);
            break;
          }
          case 56: {
            Blind = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserPictureFrameListREQ : pb::IMessage<UserPictureFrameListREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserPictureFrameListREQ> _parser = new pb::MessageParser<UserPictureFrameListREQ>(() => new UserPictureFrameListREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserPictureFrameListREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserPictureFrameListREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserPictureFrameListREQ(UserPictureFrameListREQ other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserPictureFrameListREQ Clone() {
      return new UserPictureFrameListREQ(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static global::Texas.Protocol.UserQueryPictureFrameType TypeDefaultValue = global::Texas.Protocol.UserQueryPictureFrameType.None;

    private global::Texas.Protocol.UserQueryPictureFrameType type_;
    /// <summary>
    ///查询类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.UserQueryPictureFrameType Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserPictureFrameListREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserPictureFrameListREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserPictureFrameListREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Texas.Protocol.UserQueryPictureFrameType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Texas.Protocol.UserQueryPictureFrameType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserPictureFrameInfo : pb::IMessage<UserPictureFrameInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserPictureFrameInfo> _parser = new pb::MessageParser<UserPictureFrameInfo>(() => new UserPictureFrameInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserPictureFrameInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserPictureFrameInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserPictureFrameInfo(UserPictureFrameInfo other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      frameId_ = other.frameId_;
      lock_ = other.lock_;
      permanent_ = other.permanent_;
      remainDays_ = other.remainDays_;
      showRedPoint_ = other.showRedPoint_;
      lockHide_ = other.lockHide_;
      isWaar_ = other.isWaar_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserPictureFrameInfo Clone() {
      return new UserPictureFrameInfo(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    ///头像框类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "frame_id" field.</summary>
    public const int FrameIdFieldNumber = 2;
    private readonly static string FrameIdDefaultValue = "";

    private string frameId_;
    /// <summary>
    ///头像框id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FrameId {
      get { return frameId_ ?? FrameIdDefaultValue; }
      set {
        frameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "frame_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrameId {
      get { return frameId_ != null; }
    }
    /// <summary>Clears the value of the "frame_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrameId() {
      frameId_ = null;
    }

    /// <summary>Field number for the "lock" field.</summary>
    public const int LockFieldNumber = 3;
    private readonly static bool LockDefaultValue = false;

    private bool lock_;
    /// <summary>
    ///true锁住，false已解锁
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Lock {
      get { if ((_hasBits0 & 2) != 0) { return lock_; } else { return LockDefaultValue; } }
      set {
        _hasBits0 |= 2;
        lock_ = value;
      }
    }
    /// <summary>Gets whether the "lock" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLock {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "lock" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLock() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "permanent" field.</summary>
    public const int PermanentFieldNumber = 4;
    private readonly static bool PermanentDefaultValue = false;

    private bool permanent_;
    /// <summary>
    ///true永久, false非永久
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Permanent {
      get { if ((_hasBits0 & 4) != 0) { return permanent_; } else { return PermanentDefaultValue; } }
      set {
        _hasBits0 |= 4;
        permanent_ = value;
      }
    }
    /// <summary>Gets whether the "permanent" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPermanent {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "permanent" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPermanent() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "remain_days" field.</summary>
    public const int RemainDaysFieldNumber = 5;
    private readonly static int RemainDaysDefaultValue = 0;

    private int remainDays_;
    /// <summary>
    ///剩余天数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RemainDays {
      get { if ((_hasBits0 & 8) != 0) { return remainDays_; } else { return RemainDaysDefaultValue; } }
      set {
        _hasBits0 |= 8;
        remainDays_ = value;
      }
    }
    /// <summary>Gets whether the "remain_days" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRemainDays {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "remain_days" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRemainDays() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "show_red_point" field.</summary>
    public const int ShowRedPointFieldNumber = 6;
    private readonly static bool ShowRedPointDefaultValue = false;

    private bool showRedPoint_;
    /// <summary>
    ///true展示红点，false不需展示红点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ShowRedPoint {
      get { if ((_hasBits0 & 16) != 0) { return showRedPoint_; } else { return ShowRedPointDefaultValue; } }
      set {
        _hasBits0 |= 16;
        showRedPoint_ = value;
      }
    }
    /// <summary>Gets whether the "show_red_point" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShowRedPoint {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "show_red_point" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShowRedPoint() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "lock_hide" field.</summary>
    public const int LockHideFieldNumber = 7;
    private readonly static bool LockHideDefaultValue = false;

    private bool lockHide_;
    /// <summary>
    ///true锁住需隐藏，false锁住无需隐藏
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LockHide {
      get { if ((_hasBits0 & 32) != 0) { return lockHide_; } else { return LockHideDefaultValue; } }
      set {
        _hasBits0 |= 32;
        lockHide_ = value;
      }
    }
    /// <summary>Gets whether the "lock_hide" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLockHide {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "lock_hide" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLockHide() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "is_waar" field.</summary>
    public const int IsWaarFieldNumber = 8;
    private readonly static bool IsWaarDefaultValue = false;

    private bool isWaar_;
    /// <summary>
    ///true佩戴，false没有佩戴
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsWaar {
      get { if ((_hasBits0 & 64) != 0) { return isWaar_; } else { return IsWaarDefaultValue; } }
      set {
        _hasBits0 |= 64;
        isWaar_ = value;
      }
    }
    /// <summary>Gets whether the "is_waar" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsWaar {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "is_waar" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsWaar() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserPictureFrameInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserPictureFrameInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (FrameId != other.FrameId) return false;
      if (Lock != other.Lock) return false;
      if (Permanent != other.Permanent) return false;
      if (RemainDays != other.RemainDays) return false;
      if (ShowRedPoint != other.ShowRedPoint) return false;
      if (LockHide != other.LockHide) return false;
      if (IsWaar != other.IsWaar) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasFrameId) hash ^= FrameId.GetHashCode();
      if (HasLock) hash ^= Lock.GetHashCode();
      if (HasPermanent) hash ^= Permanent.GetHashCode();
      if (HasRemainDays) hash ^= RemainDays.GetHashCode();
      if (HasShowRedPoint) hash ^= ShowRedPoint.GetHashCode();
      if (HasLockHide) hash ^= LockHide.GetHashCode();
      if (HasIsWaar) hash ^= IsWaar.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasFrameId) {
        output.WriteRawTag(18);
        output.WriteString(FrameId);
      }
      if (HasLock) {
        output.WriteRawTag(24);
        output.WriteBool(Lock);
      }
      if (HasPermanent) {
        output.WriteRawTag(32);
        output.WriteBool(Permanent);
      }
      if (HasRemainDays) {
        output.WriteRawTag(40);
        output.WriteInt32(RemainDays);
      }
      if (HasShowRedPoint) {
        output.WriteRawTag(48);
        output.WriteBool(ShowRedPoint);
      }
      if (HasLockHide) {
        output.WriteRawTag(56);
        output.WriteBool(LockHide);
      }
      if (HasIsWaar) {
        output.WriteRawTag(64);
        output.WriteBool(IsWaar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasFrameId) {
        output.WriteRawTag(18);
        output.WriteString(FrameId);
      }
      if (HasLock) {
        output.WriteRawTag(24);
        output.WriteBool(Lock);
      }
      if (HasPermanent) {
        output.WriteRawTag(32);
        output.WriteBool(Permanent);
      }
      if (HasRemainDays) {
        output.WriteRawTag(40);
        output.WriteInt32(RemainDays);
      }
      if (HasShowRedPoint) {
        output.WriteRawTag(48);
        output.WriteBool(ShowRedPoint);
      }
      if (HasLockHide) {
        output.WriteRawTag(56);
        output.WriteBool(LockHide);
      }
      if (HasIsWaar) {
        output.WriteRawTag(64);
        output.WriteBool(IsWaar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasFrameId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FrameId);
      }
      if (HasLock) {
        size += 1 + 1;
      }
      if (HasPermanent) {
        size += 1 + 1;
      }
      if (HasRemainDays) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainDays);
      }
      if (HasShowRedPoint) {
        size += 1 + 1;
      }
      if (HasLockHide) {
        size += 1 + 1;
      }
      if (HasIsWaar) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserPictureFrameInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasFrameId) {
        FrameId = other.FrameId;
      }
      if (other.HasLock) {
        Lock = other.Lock;
      }
      if (other.HasPermanent) {
        Permanent = other.Permanent;
      }
      if (other.HasRemainDays) {
        RemainDays = other.RemainDays;
      }
      if (other.HasShowRedPoint) {
        ShowRedPoint = other.ShowRedPoint;
      }
      if (other.HasLockHide) {
        LockHide = other.LockHide;
      }
      if (other.HasIsWaar) {
        IsWaar = other.IsWaar;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            FrameId = input.ReadString();
            break;
          }
          case 24: {
            Lock = input.ReadBool();
            break;
          }
          case 32: {
            Permanent = input.ReadBool();
            break;
          }
          case 40: {
            RemainDays = input.ReadInt32();
            break;
          }
          case 48: {
            ShowRedPoint = input.ReadBool();
            break;
          }
          case 56: {
            LockHide = input.ReadBool();
            break;
          }
          case 64: {
            IsWaar = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            FrameId = input.ReadString();
            break;
          }
          case 24: {
            Lock = input.ReadBool();
            break;
          }
          case 32: {
            Permanent = input.ReadBool();
            break;
          }
          case 40: {
            RemainDays = input.ReadInt32();
            break;
          }
          case 48: {
            ShowRedPoint = input.ReadBool();
            break;
          }
          case 56: {
            LockHide = input.ReadBool();
            break;
          }
          case 64: {
            IsWaar = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserPictureFrameListRSP : pb::IMessage<UserPictureFrameListRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserPictureFrameListRSP> _parser = new pb::MessageParser<UserPictureFrameListRSP>(() => new UserPictureFrameListRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserPictureFrameListRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserPictureFrameListRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserPictureFrameListRSP(UserPictureFrameListRSP other) : this() {
      _hasBits0 = other._hasBits0;
      retcode_ = other.retcode_;
      type_ = other.type_;
      isUsing_ = other.isUsing_;
      infoUsing_ = other.infoUsing_ != null ? other.infoUsing_.Clone() : null;
      infoList_ = other.infoList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserPictureFrameListRSP Clone() {
      return new UserPictureFrameListRSP(this);
    }

    /// <summary>Field number for the "retcode" field.</summary>
    public const int RetcodeFieldNumber = 1;
    private readonly static int RetcodeDefaultValue = 0;

    private int retcode_;
    /// <summary>
    ///0 success. -1 error
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Retcode {
      get { if ((_hasBits0 & 1) != 0) { return retcode_; } else { return RetcodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        retcode_ = value;
      }
    }
    /// <summary>Gets whether the "retcode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRetcode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "retcode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRetcode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private readonly static global::Texas.Protocol.UserQueryPictureFrameType TypeDefaultValue = global::Texas.Protocol.UserQueryPictureFrameType.None;

    private global::Texas.Protocol.UserQueryPictureFrameType type_;
    /// <summary>
    ///查询类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.UserQueryPictureFrameType Type {
      get { if ((_hasBits0 & 2) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "is_using" field.</summary>
    public const int IsUsingFieldNumber = 3;
    private readonly static bool IsUsingDefaultValue = false;

    private bool isUsing_;
    /// <summary>
    ///true当前有正在使用的头像框, false当前没有在使用的头像框
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsUsing {
      get { if ((_hasBits0 & 4) != 0) { return isUsing_; } else { return IsUsingDefaultValue; } }
      set {
        _hasBits0 |= 4;
        isUsing_ = value;
      }
    }
    /// <summary>Gets whether the "is_using" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsUsing {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "is_using" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsUsing() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "info_using" field.</summary>
    public const int InfoUsingFieldNumber = 4;
    private global::Texas.Protocol.UserPictureFrameInfo infoUsing_;
    /// <summary>
    ///当前正在使用的头像框
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.UserPictureFrameInfo InfoUsing {
      get { return infoUsing_; }
      set {
        infoUsing_ = value;
      }
    }

    /// <summary>Field number for the "info_list" field.</summary>
    public const int InfoListFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Texas.Protocol.UserPictureFrameInfo> _repeated_infoList_codec
        = pb::FieldCodec.ForMessage(42, global::Texas.Protocol.UserPictureFrameInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.UserPictureFrameInfo> infoList_ = new pbc::RepeatedField<global::Texas.Protocol.UserPictureFrameInfo>();
    /// <summary>
    ///头像框列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.UserPictureFrameInfo> InfoList {
      get { return infoList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserPictureFrameListRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserPictureFrameListRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Retcode != other.Retcode) return false;
      if (Type != other.Type) return false;
      if (IsUsing != other.IsUsing) return false;
      if (!object.Equals(InfoUsing, other.InfoUsing)) return false;
      if(!infoList_.Equals(other.infoList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRetcode) hash ^= Retcode.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasIsUsing) hash ^= IsUsing.GetHashCode();
      if (infoUsing_ != null) hash ^= InfoUsing.GetHashCode();
      hash ^= infoList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRetcode) {
        output.WriteRawTag(8);
        output.WriteInt32(Retcode);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (HasIsUsing) {
        output.WriteRawTag(24);
        output.WriteBool(IsUsing);
      }
      if (infoUsing_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(InfoUsing);
      }
      infoList_.WriteTo(output, _repeated_infoList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRetcode) {
        output.WriteRawTag(8);
        output.WriteInt32(Retcode);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (HasIsUsing) {
        output.WriteRawTag(24);
        output.WriteBool(IsUsing);
      }
      if (infoUsing_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(InfoUsing);
      }
      infoList_.WriteTo(ref output, _repeated_infoList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRetcode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Retcode);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasIsUsing) {
        size += 1 + 1;
      }
      if (infoUsing_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InfoUsing);
      }
      size += infoList_.CalculateSize(_repeated_infoList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserPictureFrameListRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasRetcode) {
        Retcode = other.Retcode;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasIsUsing) {
        IsUsing = other.IsUsing;
      }
      if (other.infoUsing_ != null) {
        if (infoUsing_ == null) {
          InfoUsing = new global::Texas.Protocol.UserPictureFrameInfo();
        }
        InfoUsing.MergeFrom(other.InfoUsing);
      }
      infoList_.Add(other.infoList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Retcode = input.ReadInt32();
            break;
          }
          case 16: {
            Type = (global::Texas.Protocol.UserQueryPictureFrameType) input.ReadEnum();
            break;
          }
          case 24: {
            IsUsing = input.ReadBool();
            break;
          }
          case 34: {
            if (infoUsing_ == null) {
              InfoUsing = new global::Texas.Protocol.UserPictureFrameInfo();
            }
            input.ReadMessage(InfoUsing);
            break;
          }
          case 42: {
            infoList_.AddEntriesFrom(input, _repeated_infoList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Retcode = input.ReadInt32();
            break;
          }
          case 16: {
            Type = (global::Texas.Protocol.UserQueryPictureFrameType) input.ReadEnum();
            break;
          }
          case 24: {
            IsUsing = input.ReadBool();
            break;
          }
          case 34: {
            if (infoUsing_ == null) {
              InfoUsing = new global::Texas.Protocol.UserPictureFrameInfo();
            }
            input.ReadMessage(InfoUsing);
            break;
          }
          case 42: {
            infoList_.AddEntriesFrom(ref input, _repeated_infoList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///使用/切换/领取头像
  /// </summary>
  public sealed partial class UserChangePictureFrameREQ : pb::IMessage<UserChangePictureFrameREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserChangePictureFrameREQ> _parser = new pb::MessageParser<UserChangePictureFrameREQ>(() => new UserChangePictureFrameREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserChangePictureFrameREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserChangePictureFrameREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserChangePictureFrameREQ(UserChangePictureFrameREQ other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      frameId_ = other.frameId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserChangePictureFrameREQ Clone() {
      return new UserChangePictureFrameREQ(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    ///1使用或切换头像框, 2领取头像框
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "frame_id" field.</summary>
    public const int FrameIdFieldNumber = 2;
    private readonly static string FrameIdDefaultValue = "";

    private string frameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FrameId {
      get { return frameId_ ?? FrameIdDefaultValue; }
      set {
        frameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "frame_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrameId {
      get { return frameId_ != null; }
    }
    /// <summary>Clears the value of the "frame_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrameId() {
      frameId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserChangePictureFrameREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserChangePictureFrameREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (FrameId != other.FrameId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasFrameId) hash ^= FrameId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasFrameId) {
        output.WriteRawTag(18);
        output.WriteString(FrameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasFrameId) {
        output.WriteRawTag(18);
        output.WriteString(FrameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasFrameId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FrameId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserChangePictureFrameREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasFrameId) {
        FrameId = other.FrameId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            FrameId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            FrameId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserChangePictureFrameRSP : pb::IMessage<UserChangePictureFrameRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserChangePictureFrameRSP> _parser = new pb::MessageParser<UserChangePictureFrameRSP>(() => new UserChangePictureFrameRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserChangePictureFrameRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserChangePictureFrameRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserChangePictureFrameRSP(UserChangePictureFrameRSP other) : this() {
      _hasBits0 = other._hasBits0;
      retcode_ = other.retcode_;
      type_ = other.type_;
      frameId_ = other.frameId_;
      infoUsing_ = other.infoUsing_ != null ? other.infoUsing_.Clone() : null;
      infoList_ = other.infoList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserChangePictureFrameRSP Clone() {
      return new UserChangePictureFrameRSP(this);
    }

    /// <summary>Field number for the "retcode" field.</summary>
    public const int RetcodeFieldNumber = 1;
    private readonly static int RetcodeDefaultValue = 0;

    private int retcode_;
    /// <summary>
    ///0 success，-1 error， 1未解锁，2已过期，3正在使用无需切换, 4已解锁
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Retcode {
      get { if ((_hasBits0 & 1) != 0) { return retcode_; } else { return RetcodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        retcode_ = value;
      }
    }
    /// <summary>Gets whether the "retcode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRetcode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "retcode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRetcode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    ///1使用或切换头像框, 2领取头像框
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 2) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "frame_id" field.</summary>
    public const int FrameIdFieldNumber = 3;
    private readonly static string FrameIdDefaultValue = "";

    private string frameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FrameId {
      get { return frameId_ ?? FrameIdDefaultValue; }
      set {
        frameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "frame_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrameId {
      get { return frameId_ != null; }
    }
    /// <summary>Clears the value of the "frame_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrameId() {
      frameId_ = null;
    }

    /// <summary>Field number for the "info_using" field.</summary>
    public const int InfoUsingFieldNumber = 4;
    private global::Texas.Protocol.UserPictureFrameInfo infoUsing_;
    /// <summary>
    ///当前正在使用的头像框
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.UserPictureFrameInfo InfoUsing {
      get { return infoUsing_; }
      set {
        infoUsing_ = value;
      }
    }

    /// <summary>Field number for the "info_list" field.</summary>
    public const int InfoListFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Texas.Protocol.UserPictureFrameInfo> _repeated_infoList_codec
        = pb::FieldCodec.ForMessage(42, global::Texas.Protocol.UserPictureFrameInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.UserPictureFrameInfo> infoList_ = new pbc::RepeatedField<global::Texas.Protocol.UserPictureFrameInfo>();
    /// <summary>
    ///头像框列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.UserPictureFrameInfo> InfoList {
      get { return infoList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserChangePictureFrameRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserChangePictureFrameRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Retcode != other.Retcode) return false;
      if (Type != other.Type) return false;
      if (FrameId != other.FrameId) return false;
      if (!object.Equals(InfoUsing, other.InfoUsing)) return false;
      if(!infoList_.Equals(other.infoList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRetcode) hash ^= Retcode.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasFrameId) hash ^= FrameId.GetHashCode();
      if (infoUsing_ != null) hash ^= InfoUsing.GetHashCode();
      hash ^= infoList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRetcode) {
        output.WriteRawTag(8);
        output.WriteInt32(Retcode);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (HasFrameId) {
        output.WriteRawTag(26);
        output.WriteString(FrameId);
      }
      if (infoUsing_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(InfoUsing);
      }
      infoList_.WriteTo(output, _repeated_infoList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRetcode) {
        output.WriteRawTag(8);
        output.WriteInt32(Retcode);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (HasFrameId) {
        output.WriteRawTag(26);
        output.WriteString(FrameId);
      }
      if (infoUsing_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(InfoUsing);
      }
      infoList_.WriteTo(ref output, _repeated_infoList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRetcode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Retcode);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasFrameId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FrameId);
      }
      if (infoUsing_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InfoUsing);
      }
      size += infoList_.CalculateSize(_repeated_infoList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserChangePictureFrameRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasRetcode) {
        Retcode = other.Retcode;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasFrameId) {
        FrameId = other.FrameId;
      }
      if (other.infoUsing_ != null) {
        if (infoUsing_ == null) {
          InfoUsing = new global::Texas.Protocol.UserPictureFrameInfo();
        }
        InfoUsing.MergeFrom(other.InfoUsing);
      }
      infoList_.Add(other.infoList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Retcode = input.ReadInt32();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 26: {
            FrameId = input.ReadString();
            break;
          }
          case 34: {
            if (infoUsing_ == null) {
              InfoUsing = new global::Texas.Protocol.UserPictureFrameInfo();
            }
            input.ReadMessage(InfoUsing);
            break;
          }
          case 42: {
            infoList_.AddEntriesFrom(input, _repeated_infoList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Retcode = input.ReadInt32();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 26: {
            FrameId = input.ReadString();
            break;
          }
          case 34: {
            if (infoUsing_ == null) {
              InfoUsing = new global::Texas.Protocol.UserPictureFrameInfo();
            }
            input.ReadMessage(InfoUsing);
            break;
          }
          case 42: {
            infoList_.AddEntriesFrom(ref input, _repeated_infoList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///获取头像框弹窗
  /// </summary>
  public sealed partial class UserTryToGetNewPictureFrameREQ : pb::IMessage<UserTryToGetNewPictureFrameREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserTryToGetNewPictureFrameREQ> _parser = new pb::MessageParser<UserTryToGetNewPictureFrameREQ>(() => new UserTryToGetNewPictureFrameREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserTryToGetNewPictureFrameREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTryToGetNewPictureFrameREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTryToGetNewPictureFrameREQ(UserTryToGetNewPictureFrameREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTryToGetNewPictureFrameREQ Clone() {
      return new UserTryToGetNewPictureFrameREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserTryToGetNewPictureFrameREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserTryToGetNewPictureFrameREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserTryToGetNewPictureFrameREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class UserTryToGetNewPictureFrameRSP : pb::IMessage<UserTryToGetNewPictureFrameRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserTryToGetNewPictureFrameRSP> _parser = new pb::MessageParser<UserTryToGetNewPictureFrameRSP>(() => new UserTryToGetNewPictureFrameRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserTryToGetNewPictureFrameRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTryToGetNewPictureFrameRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTryToGetNewPictureFrameRSP(UserTryToGetNewPictureFrameRSP other) : this() {
      _hasBits0 = other._hasBits0;
      retcode_ = other.retcode_;
      frameId_ = other.frameId_;
      activeTime_ = other.activeTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTryToGetNewPictureFrameRSP Clone() {
      return new UserTryToGetNewPictureFrameRSP(this);
    }

    /// <summary>Field number for the "retcode" field.</summary>
    public const int RetcodeFieldNumber = 1;
    private readonly static int RetcodeDefaultValue = 0;

    private int retcode_;
    /// <summary>
    ///0 success，-1 error， 1未解锁，2已领取
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Retcode {
      get { if ((_hasBits0 & 1) != 0) { return retcode_; } else { return RetcodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        retcode_ = value;
      }
    }
    /// <summary>Gets whether the "retcode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRetcode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "retcode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRetcode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "frame_id" field.</summary>
    public const int FrameIdFieldNumber = 2;
    private readonly static string FrameIdDefaultValue = "";

    private string frameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FrameId {
      get { return frameId_ ?? FrameIdDefaultValue; }
      set {
        frameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "frame_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrameId {
      get { return frameId_ != null; }
    }
    /// <summary>Clears the value of the "frame_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrameId() {
      frameId_ = null;
    }

    /// <summary>Field number for the "active_time" field.</summary>
    public const int ActiveTimeFieldNumber = 3;
    private readonly static long ActiveTimeDefaultValue = 0L;

    private long activeTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ActiveTime {
      get { if ((_hasBits0 & 2) != 0) { return activeTime_; } else { return ActiveTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        activeTime_ = value;
      }
    }
    /// <summary>Gets whether the "active_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActiveTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "active_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActiveTime() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserTryToGetNewPictureFrameRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserTryToGetNewPictureFrameRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Retcode != other.Retcode) return false;
      if (FrameId != other.FrameId) return false;
      if (ActiveTime != other.ActiveTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRetcode) hash ^= Retcode.GetHashCode();
      if (HasFrameId) hash ^= FrameId.GetHashCode();
      if (HasActiveTime) hash ^= ActiveTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRetcode) {
        output.WriteRawTag(8);
        output.WriteInt32(Retcode);
      }
      if (HasFrameId) {
        output.WriteRawTag(18);
        output.WriteString(FrameId);
      }
      if (HasActiveTime) {
        output.WriteRawTag(24);
        output.WriteInt64(ActiveTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRetcode) {
        output.WriteRawTag(8);
        output.WriteInt32(Retcode);
      }
      if (HasFrameId) {
        output.WriteRawTag(18);
        output.WriteString(FrameId);
      }
      if (HasActiveTime) {
        output.WriteRawTag(24);
        output.WriteInt64(ActiveTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRetcode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Retcode);
      }
      if (HasFrameId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FrameId);
      }
      if (HasActiveTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ActiveTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserTryToGetNewPictureFrameRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasRetcode) {
        Retcode = other.Retcode;
      }
      if (other.HasFrameId) {
        FrameId = other.FrameId;
      }
      if (other.HasActiveTime) {
        ActiveTime = other.ActiveTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Retcode = input.ReadInt32();
            break;
          }
          case 18: {
            FrameId = input.ReadString();
            break;
          }
          case 24: {
            ActiveTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Retcode = input.ReadInt32();
            break;
          }
          case 18: {
            FrameId = input.ReadString();
            break;
          }
          case 24: {
            ActiveTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserChangePictureFrameBRC : pb::IMessage<UserChangePictureFrameBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserChangePictureFrameBRC> _parser = new pb::MessageParser<UserChangePictureFrameBRC>(() => new UserChangePictureFrameBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserChangePictureFrameBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserChangePictureFrameBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserChangePictureFrameBRC(UserChangePictureFrameBRC other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      changeType_ = other.changeType_;
      type_ = other.type_;
      frameId_ = other.frameId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserChangePictureFrameBRC Clone() {
      return new UserChangePictureFrameBRC(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static string UidDefaultValue = "";

    private string uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_ ?? UidDefaultValue; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return uid_ != null; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      uid_ = null;
    }

    /// <summary>Field number for the "change_type" field.</summary>
    public const int ChangeTypeFieldNumber = 2;
    private readonly static int ChangeTypeDefaultValue = 0;

    private int changeType_;
    /// <summary>
    ///1 change or use , 2 expired
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChangeType {
      get { if ((_hasBits0 & 1) != 0) { return changeType_; } else { return ChangeTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        changeType_ = value;
      }
    }
    /// <summary>Gets whether the "change_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChangeType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "change_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChangeType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    ///头像框类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 2) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "frame_id" field.</summary>
    public const int FrameIdFieldNumber = 4;
    private readonly static string FrameIdDefaultValue = "";

    private string frameId_;
    /// <summary>
    ///头像框id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FrameId {
      get { return frameId_ ?? FrameIdDefaultValue; }
      set {
        frameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "frame_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrameId {
      get { return frameId_ != null; }
    }
    /// <summary>Clears the value of the "frame_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrameId() {
      frameId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserChangePictureFrameBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserChangePictureFrameBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (ChangeType != other.ChangeType) return false;
      if (Type != other.Type) return false;
      if (FrameId != other.FrameId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasChangeType) hash ^= ChangeType.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasFrameId) hash ^= FrameId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (HasChangeType) {
        output.WriteRawTag(16);
        output.WriteInt32(ChangeType);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (HasFrameId) {
        output.WriteRawTag(34);
        output.WriteString(FrameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (HasChangeType) {
        output.WriteRawTag(16);
        output.WriteInt32(ChangeType);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (HasFrameId) {
        output.WriteRawTag(34);
        output.WriteString(FrameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (HasChangeType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChangeType);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasFrameId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FrameId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserChangePictureFrameBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasChangeType) {
        ChangeType = other.ChangeType;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasFrameId) {
        FrameId = other.FrameId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 16: {
            ChangeType = input.ReadInt32();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
          case 34: {
            FrameId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 16: {
            ChangeType = input.ReadInt32();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
          case 34: {
            FrameId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserGetPictureFrameRedPointREQ : pb::IMessage<UserGetPictureFrameRedPointREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserGetPictureFrameRedPointREQ> _parser = new pb::MessageParser<UserGetPictureFrameRedPointREQ>(() => new UserGetPictureFrameRedPointREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserGetPictureFrameRedPointREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserGetPictureFrameRedPointREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserGetPictureFrameRedPointREQ(UserGetPictureFrameRedPointREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserGetPictureFrameRedPointREQ Clone() {
      return new UserGetPictureFrameRedPointREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserGetPictureFrameRedPointREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserGetPictureFrameRedPointREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserGetPictureFrameRedPointREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class UserGetPictureFrameRedPointRSP : pb::IMessage<UserGetPictureFrameRedPointRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserGetPictureFrameRedPointRSP> _parser = new pb::MessageParser<UserGetPictureFrameRedPointRSP>(() => new UserGetPictureFrameRedPointRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserGetPictureFrameRedPointRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.UserRelationReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserGetPictureFrameRedPointRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserGetPictureFrameRedPointRSP(UserGetPictureFrameRedPointRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      showRedPoint_ = other.showRedPoint_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserGetPictureFrameRedPointRSP Clone() {
      return new UserGetPictureFrameRedPointRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0 success, -1 error
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "show_red_point" field.</summary>
    public const int ShowRedPointFieldNumber = 2;
    private readonly static bool ShowRedPointDefaultValue = false;

    private bool showRedPoint_;
    /// <summary>
    ///true展示红点，false不需展示红点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ShowRedPoint {
      get { if ((_hasBits0 & 2) != 0) { return showRedPoint_; } else { return ShowRedPointDefaultValue; } }
      set {
        _hasBits0 |= 2;
        showRedPoint_ = value;
      }
    }
    /// <summary>Gets whether the "show_red_point" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShowRedPoint {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "show_red_point" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShowRedPoint() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserGetPictureFrameRedPointRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserGetPictureFrameRedPointRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (ShowRedPoint != other.ShowRedPoint) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasShowRedPoint) hash ^= ShowRedPoint.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasShowRedPoint) {
        output.WriteRawTag(16);
        output.WriteBool(ShowRedPoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasShowRedPoint) {
        output.WriteRawTag(16);
        output.WriteBool(ShowRedPoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasShowRedPoint) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserGetPictureFrameRedPointRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasShowRedPoint) {
        ShowRedPoint = other.ShowRedPoint;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            ShowRedPoint = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            ShowRedPoint = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
