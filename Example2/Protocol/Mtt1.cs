// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mtt1.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Texas.Protocol {

  /// <summary>Holder for reflection information generated from mtt1.proto</summary>
  public static partial class Mtt1Reflection {

    #region Descriptor
    /// <summary>File descriptor for mtt1.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Mtt1Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgptdHQxLnByb3RvGg5wcmVfYmFzZS5wcm90bxoKYmFzZS5wcm90bxoKcHBn",
            "bC5wcm90byKpFgoQQ3JlYXRlTXR0Um9vbVJFURIWCglyb29tX25hbWUYASAB",
            "KAlIAIgBARIZCgx1cGJsaW5kX3RpbWUYAiABKAVIAYgBARIYCgthY3Rpb25f",
            "dGltZRgDIAEoBUgCiAEBEhIKBWJ1eWluGAQgASgDSAOIAQESGAoLYmVnaW5f",
            "Y2hpcHMYBSABKANIBIgBARIXCgpibGluZF90eXBlGAYgASgFSAWIAQESFwoK",
            "YXV0aF9saW1pdBgHIAEoCEgGiAEBEhMKBmNsdWJpZBgIIAEoBUgHiAEBEhUK",
            "CHNlYXRfbnVtGAkgASgFSAiIAQESEwoGY2hhcmdlGAogASgDSAmIAQESFQoI",
            "dGltZXpvbmUYEiABKAVICogBARIbCg5tdHRfc3RhcnRfdGltZRgLIAEoA0gL",
            "iAEBEhsKDm1pbl9wbGF5ZXJfbnVtGAwgASgFSAyIAQESGwoObWF4X3BsYXll",
            "cl9udW0YDSABKAVIDYgBARIdChBkZWxheV9qb2luX2xldmVsGA4gASgFSA6I",
            "AQESFgoJcmVidXlfbnVtGA8gASgFSA+IAQESFwoKYWRkb25fcmF0ZRgQIAEo",
            "A0gQiAEBEhcKCmJyZWFrX3RpbWUYESABKAVIEYgBARITCgZyb29taWQYEyAB",
            "KAVIEogBARIVCghsZWFndWVpZBgUIAEoBUgTiAEBEhkKDGVuc3VyZV9jaGlw",
            "cxgVIAEoA0gUiAEBEhoKDWh1bnRlcl9yZXdhcmQYFiABKANIFYgBARIUCgdy",
            "ZWJ1eWluGBcgASgDSBaIAQESGAoLYWRkb25fYnV5aW4YGCABKANIF4gBARIw",
            "CgxwZXJjZW50X3R5cGUYGSABKA4yFS5NdHRSZXdhcmRQZXJjZW50VHlwZUgY",
            "iAEBEiEKCWdhbWVfbW9kZRgaIAEoDjIJLkdhbWVNb2RlSBmIAQESIAoIcm9v",
            "bXR5cGUYGyABKA4yCS5Sb29tVHlwZUgaiAEBEh8KEmlzX3Nub3diYWxsX2h1",
            "bnRlchgcIAEoCEgbiAEBEh4KEXNpdHRpbmdfb3V0X2xldmVsGB0gASgFSByI",
            "AQESGQoMaXNfc2F0ZWxsaXRlGB4gASgISB2IAQESKgoMcmV3YXJkX2l0ZW1z",
            "GB8gAygLMhQuUmV3YXJkQ29uZmlndXJlSXRlbRIVCghtb2R1bGVpZBggIAEo",
            "A0geiAEBEhcKCm11bHRpX29waWQYISABKAlIH4gBARIUCgdjYW5fdXNlGCIg",
            "ASgISCCIAQESGwoOZm9yYmlkZGVuX2NoYXQYIyABKAhIIYgBARIbCg5lYXJs",
            "eV9iaXJkX251bRgkIAEoBUgiiAEBEhsKDnN1cGVyX2xlYWd1ZWlkGCUgASgF",
            "SCOIAQESHAoPYnJlYWtfdGltZV93YWl0GCYgASgFSCSIAQESHAoPYnJlYWtf",
            "dGltZV9yZXN0GCcgASgFSCWIAQESHAoPYWRkb25fdGltZV9yZXN0GCggASgF",
            "SCaIAQESGQoMcGFzc3dkX2xpbWl0GCkgASgISCeIAQESGQoMaXNfZ3JvdXBf",
            "bXR0GCogASgISCiIAQESHQoQZ3JvdXBfb3Zlcl9sZXZlbBgrIAEoBUgpiAEB",
            "EhwKFGdyb3VwX210dF9zdGFydF90aW1lGCwgAygDEhoKDWlzX2ZyZWV6ZV9v",
            "dXQYLSABKAhIKogBARIeChFzdXBlcl9sZWFndWVfdHlwZRguIAEoBUgriAEB",
            "EhkKDGNoYXJnZV9yYXRpbxgvIAEoBUgsiAEBEhcKCnJlYnV5X3JhdGUYMCAB",
            "KAVILYgBARIgChNlYXJseV9iaXJkX2Rpc2NvdW50GDEgASgFSC6IAQESKAoL",
            "cmV3YXJkX21vZGUYMiABKA4yDi5NdHRSZXdhcmRNb2RlSC+IAQESFgoJaXNf",
            "YmFuX3BjGDMgASgISDCIAQESGgoNaXNfY2hlY2tfbWFpbBg0IAEoCEgxiAEB",
            "EisKHnVwYmxpbmRfdGltZV9hZnRlcl9yZWJ1eV9lbmRlZBg1IAEoBUgyiAEB",
            "EisKHnVwYmxpbmRfdGltZV9hZnRlcl9maW5hbF90YWJsZRg2IAEoBUgziAEB",
            "EhMKBnBwc3RpZBg3IAEoBUg0iAEBEiAKE2ZvcmJpZGRlbl9jaGF0X21vZGUY",
            "OCABKAVINYgBARIYCgtzaXR0aW5nX291dBg5IAEoCEg2iAEBEhwKD2lzX3Bw",
            "Z2xfdHJ5b3V0cxg6IAEoCEg3iAEBEhoKDWlzX3BwZ2xfZmluYWwYOyABKAhI",
            "OIgBARIuChBwcGdsX3NlYXNvbl9pbmZvGDwgASgLMg8uUFBHTFNlYXNvbklu",
            "Zm9IOYgBARIjChZwcGdsX2NsdWJfcHBjaGlwc19yYXRlGD0gASgDSDqIAQES",
            "EAoIYmFuX2NsdWIYPiADKAUSEwoLYmFuX2NvdW50cnkYPyADKAlCDAoKX3Jv",
            "b21fbmFtZUIPCg1fdXBibGluZF90aW1lQg4KDF9hY3Rpb25fdGltZUIICgZf",
            "YnV5aW5CDgoMX2JlZ2luX2NoaXBzQg0KC19ibGluZF90eXBlQg0KC19hdXRo",
            "X2xpbWl0QgkKB19jbHViaWRCCwoJX3NlYXRfbnVtQgkKB19jaGFyZ2VCCwoJ",
            "X3RpbWV6b25lQhEKD19tdHRfc3RhcnRfdGltZUIRCg9fbWluX3BsYXllcl9u",
            "dW1CEQoPX21heF9wbGF5ZXJfbnVtQhMKEV9kZWxheV9qb2luX2xldmVsQgwK",
            "Cl9yZWJ1eV9udW1CDQoLX2FkZG9uX3JhdGVCDQoLX2JyZWFrX3RpbWVCCQoH",
            "X3Jvb21pZEILCglfbGVhZ3VlaWRCDwoNX2Vuc3VyZV9jaGlwc0IQCg5faHVu",
            "dGVyX3Jld2FyZEIKCghfcmVidXlpbkIOCgxfYWRkb25fYnV5aW5CDwoNX3Bl",
            "cmNlbnRfdHlwZUIMCgpfZ2FtZV9tb2RlQgsKCV9yb29tdHlwZUIVChNfaXNf",
            "c25vd2JhbGxfaHVudGVyQhQKEl9zaXR0aW5nX291dF9sZXZlbEIPCg1faXNf",
            "c2F0ZWxsaXRlQgsKCV9tb2R1bGVpZEINCgtfbXVsdGlfb3BpZEIKCghfY2Fu",
            "X3VzZUIRCg9fZm9yYmlkZGVuX2NoYXRCEQoPX2Vhcmx5X2JpcmRfbnVtQhEK",
            "D19zdXBlcl9sZWFndWVpZEISChBfYnJlYWtfdGltZV93YWl0QhIKEF9icmVh",
            "a190aW1lX3Jlc3RCEgoQX2FkZG9uX3RpbWVfcmVzdEIPCg1fcGFzc3dkX2xp",
            "bWl0Qg8KDV9pc19ncm91cF9tdHRCEwoRX2dyb3VwX292ZXJfbGV2ZWxCEAoO",
            "X2lzX2ZyZWV6ZV9vdXRCFAoSX3N1cGVyX2xlYWd1ZV90eXBlQg8KDV9jaGFy",
            "Z2VfcmF0aW9CDQoLX3JlYnV5X3JhdGVCFgoUX2Vhcmx5X2JpcmRfZGlzY291",
            "bnRCDgoMX3Jld2FyZF9tb2RlQgwKCl9pc19iYW5fcGNCEAoOX2lzX2NoZWNr",
            "X21haWxCIQofX3VwYmxpbmRfdGltZV9hZnRlcl9yZWJ1eV9lbmRlZEIhCh9f",
            "dXBibGluZF90aW1lX2FmdGVyX2ZpbmFsX3RhYmxlQgkKB19wcHN0aWRCFgoU",
            "X2ZvcmJpZGRlbl9jaGF0X21vZGVCDgoMX3NpdHRpbmdfb3V0QhIKEF9pc19w",
            "cGdsX3RyeW91dHNCEAoOX2lzX3BwZ2xfZmluYWxCEwoRX3BwZ2xfc2Vhc29u",
            "X2luZm9CGQoXX3BwZ2xfY2x1Yl9wcGNoaXBzX3JhdGUimgEKEENyZWF0ZU10",
            "dFJvb21SU1ASEQoEY29kZRgBIAEoBUgAiAEBEhMKBnJvb21pZBgCIAEoBUgB",
            "iAEBEhkKDGlzX2dyb3VwX210dBgDIAEoCEgCiAEBEhMKBmNsdWJpZBgEIAEo",
            "BUgDiAEBQgcKBV9jb2RlQgkKB19yb29taWRCDwoNX2lzX2dyb3VwX210dEIJ",
            "CgdfY2x1YmlkIuABCgpNdHRJbmZvUkVREhMKBnJvb21pZBgBIAEoBUgAiAEB",
            "EhAKA3VpZBgCIAEoA0gBiAEBEhMKBmNsdWJpZBgDIAEoBUgCiAEBEhYKCWZy",
            "b21fdHlwZRgEIAEoBUgDiAEBEhUKCGxlYWd1ZWlkGAUgASgFSASIAQESGwoO",
            "c3VwZXJfbGVhZ3VlaWQYBiABKAVIBYgBAUIJCgdfcm9vbWlkQgYKBF91aWRC",
            "CQoHX2NsdWJpZEIMCgpfZnJvbV90eXBlQgsKCV9sZWFndWVpZEIRCg9fc3Vw",
            "ZXJfbGVhZ3VlaWQisgEKCk10dEluZm9SU1ASEQoEY29kZRgBIAEoBUgAiAEB",
            "EiMKCHNuZ19pbmZvGAIgASgLMgwuU25nUm9vbUluZm9IAYgBARIjCghtdHRf",
            "aW5mbxgDIAEoCzIMLk10dFJvb21JbmZvSAKIAQESFgoJZnJvbV90eXBlGAQg",
            "ASgFSAOIAQFCBwoFX2NvZGVCCwoJX3NuZ19pbmZvQgsKCV9tdHRfaW5mb0IM",
            "CgpfZnJvbV90eXBlIsABCgxNdHRQbGF5ZXJSRVESEwoGcm9vbWlkGAEgASgF",
            "SACIAQESEAoDdWlkGAIgASgDSAGIAQESGAoLc3RhcnRfaW5kZXgYAyABKAVI",
            "AogBARITCgZhbW91bnQYBCABKAVIA4gBARIaCg1zdXBwb3J0X2dyb3VwGAUg",
            "ASgISASIAQFCCQoHX3Jvb21pZEIGCgRfdWlkQg4KDF9zdGFydF9pbmRleEIJ",
            "CgdfYW1vdW50QhAKDl9zdXBwb3J0X2dyb3VwIp8BCg1NdHRQbGF5ZXJJbmZv",
            "EhAKA3VpZBgBIAEoA0gAiAEBEhEKBG5hbWUYAiABKAlIAYgBARIRCgRpY29u",
            "GAMgASgJSAKIAQESEQoEdHlwZRgEIAEoBUgDiAEBEhQKB2lzX2F1dGgYBSAB",
            "KAhIBIgBAUIGCgRfdWlkQgcKBV9uYW1lQgcKBV9pY29uQgcKBV90eXBlQgoK",
            "CF9pc19hdXRoIoUBChNQcm9tb3Rpb25QbGF5ZXJJbmZvEhAKA3VpZBgBIAEo",
            "A0gAiAEBEhEKBG5hbWUYAiABKAlIAYgBARIRCgRpY29uGAMgASgJSAKIAQES",
            "EgoFY2hpcHMYBCABKANIA4gBAUIGCgRfdWlkQgcKBV9uYW1lQgcKBV9pY29u",
            "QggKBl9jaGlwcyL4AQoVR3JvdXBQcm9tb3Rpb25QbGF5ZXJzEhEKBGZsYWcY",
            "ASABKAlIAIgBARIXCgpwbGF5ZXJfbnVtGAIgASgFSAGIAQESHgoRdG90YWxf",
            "YnV5aW5fdGltZXMYAyABKAVIAogBARITCgZyb29taWQYBCABKAVIA4gBARIT",
            "CgZzdGF0dXMYBSABKAVIBIgBARIlCgdwbGF5ZXJzGAYgAygLMhQuUHJvbW90",
            "aW9uUGxheWVySW5mb0IHCgVfZmxhZ0INCgtfcGxheWVyX251bUIUChJfdG90",
            "YWxfYnV5aW5fdGltZXNCCQoHX3Jvb21pZEIJCgdfc3RhdHVzIoYDCgxNdHRQ",
            "bGF5ZXJSU1ASEQoEY29kZRgBIAEoBUgAiAEBEh8KB3BsYXllcnMYAiADKAsy",
            "Di5NdHRQbGF5ZXJJbmZvEhcKCnBsYXllcl9udW0YAyABKAVIAYgBARIYCgtz",
            "dGFydF9pbmRleBgEIAEoBUgCiAEBEhYKCXRvdGFsX251bRgFIAEoBUgDiAEB",
            "EhsKDnByb21vdGlvbl9mbGFnGAYgASgISASIAQESLQoNZ3JvdXBfcGxheWVy",
            "cxgHIAMoCzIWLkdyb3VwUHJvbW90aW9uUGxheWVycxIaCg1wcm9tb3Rpb25f",
            "bnVtGAggASgFSAWIAQESHgoRdG90YWxfYnV5aW5fdGltZXMYCSABKAVIBogB",
            "AUIHCgVfY29kZUINCgtfcGxheWVyX251bUIOCgxfc3RhcnRfaW5kZXhCDAoK",
            "X3RvdGFsX251bUIRCg9fcHJvbW90aW9uX2ZsYWdCEAoOX3Byb21vdGlvbl9u",
            "dW1CFAoSX3RvdGFsX2J1eWluX3RpbWVzIpEBCgtNdHRUYWJsZVJFURITCgZy",
            "b29taWQYASABKAVIAIgBARIQCgN1aWQYAiABKANIAYgBARIYCgtzdGFydF9p",
            "bmRleBgDIAEoBUgCiAEBEhMKBmFtb3VudBgEIAEoBUgDiAEBQgkKB19yb29t",
            "aWRCBgoEX3VpZEIOCgxfc3RhcnRfaW5kZXhCCQoHX2Ftb3VudCLCAQoMTXR0",
            "VGFibGVJbmZvEhAKA3RpZBgBIAEoBUgAiAEBEhYKCXRvcF9jaGlwcxgCIAEo",
            "A0gBiAEBEhYKCWxvd19jaGlwcxgDIAEoA0gCiAEBEhYKCWF2Z19jaGlwcxgE",
            "IAEoA0gDiAEBEhcKCnBsYXllcl9udW0YBSABKAVIBIgBAUIGCgRfdGlkQgwK",
            "Cl90b3BfY2hpcHNCDAoKX2xvd19jaGlwc0IMCgpfYXZnX2NoaXBzQg0KC19w",
            "bGF5ZXJfbnVtIpcBCgtNdHRUYWJsZVJTUBIRCgRjb2RlGAEgASgFSACIAQES",
            "HAoFdGFibGUYAiADKAsyDS5NdHRUYWJsZUluZm8SFgoJdGFibGVfbnVtGAMg",
            "ASgFSAGIAQESGAoLc3RhcnRfaW5kZXgYBCABKAVIAogBAUIHCgVfY29kZUIM",
            "CgpfdGFibGVfbnVtQg4KDF9zdGFydF9pbmRleCKcAQoQTXR0VGltZUNoYW5n",
            "ZVJFURITCgZyb29taWQYASABKAVIAIgBARIbCg5tdHRfc3RhcnRfdGltZRgC",
            "IAEoA0gBiAEBEhAKA3VpZBgDIAEoA0gCiAEBEhMKBmNsdWJpZBgEIAEoBUgD",
            "iAEBQgkKB19yb29taWRCEQoPX210dF9zdGFydF90aW1lQgYKBF91aWRCCQoH",
            "X2NsdWJpZCKRAQoXTXR0RW5zdXJlQ2hpcHNDaGFuZ2VSRVESEwoGcm9vbWlk",
            "GAEgASgFSACIAQESEgoFY2hpcHMYAiABKANIAYgBARIQCgN1aWQYAyABKANI",
            "AogBARITCgZjbHViaWQYBCABKAVIA4gBAUIJCgdfcm9vbWlkQggKBl9jaGlw",
            "c0IGCgRfdWlkQgkKB19jbHViaWQiNQoXTXR0RW5zdXJlQ2hpcHNDaGFuZ2VS",
            "U1ASEQoEY29kZRgBIAEoBUgAiAEBQgcKBV9jb2RlIi4KEE10dFRpbWVDaGFu",
            "Z2VSU1ASEQoEY29kZRgBIAEoBUgAiAEBQgcKBV9jb2RlIkgKDE10dENhbmNl",
            "bFJFURITCgZyb29taWQYASABKAVIAIgBARIQCgN1aWQYAiABKANIAYgBAUIJ",
            "Cgdfcm9vbWlkQgYKBF91aWQiKgoMTXR0Q2FuY2VsUlNQEhEKBGNvZGUYASAB",
            "KAVIAIgBAUIHCgVfY29kZSKPAQoPTXR0UGF1c2VHYW1lUkVREhMKBnJvb21p",
            "ZBgBIAEoBUgAiAEBEhAKA3VpZBgCIAEoA0gBiAEBEhIKBWNoZWNrGAMgASgI",
            "SAKIAQESFgoJaXNfZGl2aWRlGAQgASgISAOIAQFCCQoHX3Jvb21pZEIGCgRf",
            "dWlkQggKBl9jaGVja0IMCgpfaXNfZGl2aWRlIsEBCg9NdHRQYXVzZUdhbWVS",
            "U1ASEQoEY29kZRgBIAEoBUgAiAEBEhIKBWNoZWNrGAIgASgFSAGIAQESEAoD",
            "dWlkGAMgASgDSAKIAQESFgoJaXNfZGl2aWRlGAQgASgISAOIAQESHgoRbGVm",
            "dF9kaXZpZGVfdGltZXMYBSABKAVIBIgBAUIHCgVfY29kZUIICgZfY2hlY2tC",
            "BgoEX3VpZEIMCgpfaXNfZGl2aWRlQhQKEl9sZWZ0X2RpdmlkZV90aW1lcyJK",
            "Cg5NdHRCYWNrR2FtZVJFURITCgZyb29taWQYASABKAVIAIgBARIQCgN1aWQY",
            "AiABKANIAYgBAUIJCgdfcm9vbWlkQgYKBF91aWQisAEKDk10dEJhY2tHYW1l",
            "QlJDEhEKBGNvZGUYASABKAVIAIgBARIRCgRsZWZ0GAIgASgFSAGIAQESEAoD",
            "dWlkGAMgASgDSAKIAQESFgoJaXNfZGl2aWRlGAQgASgISAOIAQESFwoKaXNf",
            "bWFuYWdlchgFIAEoCEgEiAEBQgcKBV9jb2RlQgcKBV9sZWZ0QgYKBF91aWRC",
            "DAoKX2lzX2RpdmlkZUINCgtfaXNfbWFuYWdlciJTCg9NdHRQYXVzZVRpbWVC",
            "UkMSEQoEbGVmdBgBIAEoBUgAiAEBEhYKCWlzX2RpdmlkZRgCIAEoCEgBiAEB",
            "QgcKBV9sZWZ0QgwKCl9pc19kaXZpZGUiLAoOUm9vbVN1c3BlbmRCUkMSEQoE",
            "dHlwZRgBIAEoBUgAiAEBQgcKBV90eXBlIo4CCgpNdHRKb2luUkVREhMKBnJv",
            "b21pZBgBIAEoBUgAiAEBEhEKBGpvaW4YAiABKAhIAYgBARITCgZjbHViaWQY",
            "AyABKAVIAogBARIRCgR0eXBlGAQgASgFSAOIAQESFQoIbGVhZ3VlaWQYBSAB",
            "KAVIBIgBARIPCgJwYxgGIAEoCEgFiAEBEhQKB2NoYW5uZWwYByABKAlIBogB",
            "ARIZCgxpbnZhbGlkX21haWwYCCABKAhIB4gBAUIJCgdfcm9vbWlkQgcKBV9q",
            "b2luQgkKB19jbHViaWRCBwoFX3R5cGVCCwoJX2xlYWd1ZWlkQgUKA19wY0IK",
            "CghfY2hhbm5lbEIPCg1faW52YWxpZF9tYWlsIqABCgpNdHRKb2luUlNQEhEK",
            "BGNvZGUYASABKAVIAIgBARIRCgRqb2luGAIgASgISAGIAQESEwoGcm9vbWlk",
            "GAMgASgFSAKIAQESEQoEdHlwZRgEIAEoBUgDiAEBEhMKBnRlbXBpZBgFIAEo",
            "CUgEiAEBQgcKBV9jb2RlQgcKBV9qb2luQgkKB19yb29taWRCBwoFX3R5cGVC",
            "CQoHX3RlbXBpZCIOCgxNdHRzdGF0dXNSRVEiigQKDE10dFN0YXR1c1JTUBIR",
            "CgRyYW5rGAEgASgFSACIAQESGAoLYmxpbmRfbGV2ZWwYAiABKAVIAYgBARIY",
            "Cgtqb2luX3N0YXR1cxgDIAEoBUgCiAEBEhkKDHRvdGFsX3Jld2FyZBgEIAEo",
            "A0gDiAEBEh0KEHRvdGFsX3BsYXllcl9udW0YBSABKAVIBIgBARIfChJjdXJy",
            "ZW50X3BsYXllcl9udW0YBiABKAVIBYgBARIWCglhdmdfY2hpcHMYByABKANI",
            "BogBARIWCgl0b3BfY2hpcHMYCCABKANIB4gBARIWCglsb3dfY2hpcHMYCSAB",
            "KANICIgBARIWCglhZGRvbl9udW0YCiABKAVICYgBARIWCglyZWJ1eV9udW0Y",
            "CyABKAVICogBARIeChF0b3RhbF9idXlpbl90aW1lcxgMIAEoBUgLiAEBQgcK",
            "BV9yYW5rQg4KDF9ibGluZF9sZXZlbEIOCgxfam9pbl9zdGF0dXNCDwoNX3Rv",
            "dGFsX3Jld2FyZEITChFfdG90YWxfcGxheWVyX251bUIVChNfY3VycmVudF9w",
            "bGF5ZXJfbnVtQgwKCl9hdmdfY2hpcHNCDAoKX3RvcF9jaGlwc0IMCgpfbG93",
            "X2NoaXBzQgwKCl9hZGRvbl9udW1CDAoKX3JlYnV5X251bUIUChJfdG90YWxf",
            "YnV5aW5fdGltZXMingIKEE10dFJld2FyZExpc3RSRVESEwoGcm9vbWlkGAEg",
            "ASgFSACIAQESGAoLc3RhcnRfaW5kZXgYAiABKAVIAYgBARITCgZhbW91bnQY",
            "AyABKAVIAogBARITCgZzeXN0ZW0YBCABKAlIA4gBARIaCg1uZWVkX2NvbWJp",
            "bmVkGAUgASgISASIAQESFQoIbGVhZ3VlaWQYBiABKAVIBYgBARIbCg5zdXBl",
            "cl9sZWFndWVpZBgHIAEoBUgGiAEBQgkKB19yb29taWRCDgoMX3N0YXJ0X2lu",
            "ZGV4QgkKB19hbW91bnRCCQoHX3N5c3RlbUIQCg5fbmVlZF9jb21iaW5lZEIL",
            "CglfbGVhZ3VlaWRCEQoPX3N1cGVyX2xlYWd1ZWlkIqMCChBNdHRSZXdhcmRM",
            "aXN0UlNQEhkKDGZpeGVkX3Jld2FyZBgCIAEoCEgAiAEBEiMKC3Jld2FyZF9p",
            "bmZvGAMgAygLMg4uTXR0UmV3YXJkSW5mbxIXCgpyZXdhcmRfbnVtGAQgASgF",
            "SAGIAQESGAoLc3RhcnRfaW5kZXgYBSABKAVIAogBARIjChZpc19sZXNzX21p",
            "bmltdW1fcmV3YXJkGAYgASgISAOIAQESGgoNbmVlZF9jb21iaW5lZBgHIAEo",
            "CEgEiAEBQg8KDV9maXhlZF9yZXdhcmRCDQoLX3Jld2FyZF9udW1CDgoMX3N0",
            "YXJ0X2luZGV4QhkKF19pc19sZXNzX21pbmltdW1fcmV3YXJkQhAKDl9uZWVk",
            "X2NvbWJpbmVkIugBCg5NdHRSYW5rTGlzdFJFURITCgZyb29taWQYASABKAVI",
            "AIgBARIQCgN1aWQYAiABKANIAYgBARIYCgtzdGFydF9pbmRleBgDIAEoBUgC",
            "iAEBEhMKBmFtb3VudBgEIAEoBUgDiAEBEhUKCGxlYWd1ZWlkGAUgASgFSASI",
            "AQESGwoOc3VwZXJfbGVhZ3VlaWQYBiABKAVIBYgBAUIJCgdfcm9vbWlkQgYK",
            "BF91aWRCDgoMX3N0YXJ0X2luZGV4QgkKB19hbW91bnRCCwoJX2xlYWd1ZWlk",
            "QhEKD19zdXBlcl9sZWFndWVpZCK5AgoLTXR0UmFua0luZm8SEAoDdWlkGAEg",
            "ASgDSACIAQESEgoFY2hpcHMYAiABKANIAYgBARIRCgRuYW1lGAMgASgJSAKI",
            "AQESEQoEaWNvbhgEIAEoCUgDiAEBEhYKCXJlYnV5X251bRgFIAEoBUgEiAEB",
            "EhYKCWFkZG9uX251bRgGIAEoBUgFiAEBEhcKCmh1bnRlcl9udW0YByABKAVI",
            "BogBARIZCgxodW50ZXJfYm9udXMYCCABKANIB4gBARIRCgRyYW5rGAkgASgF",
            "SAiIAQFCBgoEX3VpZEIICgZfY2hpcHNCBwoFX25hbWVCBwoFX2ljb25CDAoK",
            "X3JlYnV5X251bUIMCgpfYWRkb25fbnVtQg0KC19odW50ZXJfbnVtQg8KDV9o",
            "dW50ZXJfYm9udXNCBwoFX3JhbmsirAEKDk10dFJhbmtMaXN0UlNQEhoKBGlu",
            "Zm8YASADKAsyDC5NdHRSYW5rSW5mbxIWCgl0b3RhbF9udW0YAiABKAVIAIgB",
            "ARIYCgtzdGFydF9pbmRleBgDIAEoBUgBiAEBEiIKB215X2luZm8YBCABKAsy",
            "DC5NdHRSYW5rSW5mb0gCiAEBQgwKCl90b3RhbF9udW1CDgoMX3N0YXJ0X2lu",
            "ZGV4QgoKCF9teV9pbmZvIpYDChBNdHRNeVJhbmtJbmZvQlJDEhEKBHJhbmsY",
            "ASABKAVIAIgBARIbCg5pdG1fcGxheWVyX251bRgCIAEoBUgBiAEBEh0KEHRv",
            "dGFsX3BsYXllcl9udW0YAyABKAVIAogBARIjChZjdXJyZW50X3Jld2FyZF9w",
            "cGNvaW5zGAQgASgDSAOIAQESKAobY3VycmVudF9yZXdhcmRfdGlja2V0X3By",
            "aWNlGAUgASgDSASIAQESJgoZY3VycmVudF9yZXdhcmRfaXRlbV9wcmljZRgG",
            "IAEoA0gFiAEBEh0KEGFsaXZlX3BsYXllcl9udW0YByABKAVIBogBAUIHCgVf",
            "cmFua0IRCg9faXRtX3BsYXllcl9udW1CEwoRX3RvdGFsX3BsYXllcl9udW1C",
            "GQoXX2N1cnJlbnRfcmV3YXJkX3BwY29pbnNCHgocX2N1cnJlbnRfcmV3YXJk",
            "X3RpY2tldF9wcmljZUIcChpfY3VycmVudF9yZXdhcmRfaXRlbV9wcmljZUIT",
            "ChFfYWxpdmVfcGxheWVyX251bSJJCg9NdHRCbGluZFN0b3BCUkMSEQoEdHlw",
            "ZRgBIAEoBUgAiAEBEhEKBGxlZnQYAiABKAVIAYgBAUIHCgVfdHlwZUIHCgVf",
            "bGVmdCItCg9NdHRCcmVha1RpbWVCUkMSEQoEbGVmdBgBIAEoBUgAiAEBQgcK",
            "BV9sZWZ0IkYKDkFkZG9uTm90aWZ5QlJDEhEKBGxlZnQYASABKAVIAIgBARIQ",
            "CgNudW0YAiABKAVIAYgBAUIHCgVfbGVmdEIGCgRfbnVtIkoKDkNoYW5nZVRh",
            "YmxlUkVREhMKBnJvb21pZBgBIAEoBUgAiAEBEhAKA3RpZBgCIAEoBUgBiAEB",
            "QgkKB19yb29taWRCBgoEX3RpZCIKCghBZGRvblJFUSJkCghBZGRvbkJSQxIR",
            "CgRjb2RlGAEgASgFSACIAQESEwoGc2VhdGlkGAIgASgFSAGIAQESEgoFY2hp",
            "cHMYAyABKANIAogBAUIHCgVfY29kZUIJCgdfc2VhdGlkQggKBl9jaGlwcyJN",
            "Cg9NdHRTdGFydExlZnRCUkMSEwoGcm9vbWlkGAEgASgFSACIAQESEQoEbGVm",
            "dBgCIAEoBUgBiAEBQgkKB19yb29taWRCBwoFX2xlZnQiFQoTTXR0V2FpdEdh",
            "bWVTdGFydEJSQyJvCglMb29rZXJSRVESEAoDdGlkGAEgASgFSACIAQESGAoL",
            "c3RhcnRfaW5kZXgYAiABKAVIAYgBARITCgZhbW91bnQYAyABKAVIAogBAUIG",
            "CgRfdGlkQg4KDF9zdGFydF9pbmRleEIJCgdfYW1vdW50IncKCUxvb2tlclJT",
            "UBIYCgR1c2VyGAEgAygLMgouVXNlckJyaWVmEhcKCmxvb2tlcl9udW0YAiAB",
            "KAVIAIgBARIYCgtzdGFydF9pbmRleBgDIAEoBUgBiAEBQg0KC19sb29rZXJf",
            "bnVtQg4KDF9zdGFydF9pbmRleCLWAQoMTXR0U3RhcnRJbmZvEhEKBGZsYWcY",
            "ASABKAlIAIgBARIXCgpzdGFydF90aW1lGAIgASgDSAGIAQESEwoGcm9vbWlk",
            "GAMgASgFSAKIAQESEwoGc3RhdHVzGAQgASgFSAOIAQESEwoGaGFuZGxlGAUg",
            "ASgDSASIAQESFQoIZW5kX3RpbWUYBiABKANIBYgBAUIHCgVfZmxhZ0INCgtf",
            "c3RhcnRfdGltZUIJCgdfcm9vbWlkQgkKB19zdGF0dXNCCQoHX2hhbmRsZUIL",
            "CglfZW5kX3RpbWUiUAoUR3JvdXBNdHRTdGFydFRpbWVSRVESEwoGcm9vbWlk",
            "GAEgASgFSACIAQESEAoDdWlkGAIgASgDSAGIAQFCCQoHX3Jvb21pZEIGCgRf",
            "dWlkIlsKFEdyb3VwTXR0U3RhcnRUaW1lUlNQEhEKBGNvZGUYASABKAVIAIgB",
            "ARInChBncm91cF9zdGFydF9pbmZvGAIgAygLMg0uTXR0U3RhcnRJbmZvQgcK",
            "BV9jb2RlInwKF0dyb3VwTXR0U2V0U3RhcnRUaW1lUkVREicKEGdyb3VwX3N0",
            "YXJ0X2luZm8YASADKAsyDS5NdHRTdGFydEluZm8SEwoGcm9vbWlkGAIgASgF",
            "SACIAQESEAoDdWlkGAMgASgDSAGIAQFCCQoHX3Jvb21pZEIGCgRfdWlkIjUK",
            "F0dyb3VwTXR0U2V0U3RhcnRUaW1lUlNQEhEKBGNvZGUYASABKAVIAIgBAUIH",
            "CgVfY29kZSrhCQoQTXR0Sm9pbkVycm9yQ2RvZRIXChNNVFRfSk9JTl9FUlJP",
            "Ul9OT05FEAASIQodTVRUX0pPSU5fRVJST1JfQUxSRUFEWV9KT0lORUQQARIj",
            "Ch9NVFRfSk9JTl9FUlJPUl9FWENFRURfTUFYX0xJTUlUEAISLQogTVRUX0pP",
            "SU5fRVJST1JfTk9UX0VOT1VHSF9QUENPSU4Q////////////ARIsCh9NVFRf",
            "Sk9JTl9FUlJPUl9ERUxBWV9BUFBMWV9PVkVSEP7//////////wESJAoXTVRU",
            "X0pPSU5fRVJST1JfTk9fUkVCVVkQ/f//////////ARIsCh9NVFRfSk9JTl9F",
            "UlJPUl9BTFJFQURZX0lOX01BVENIEPz//////////wESOQosTVRUX0pPSU5f",
            "RVJST1JfQUxSRUFEWV9BUFBMWV9JTl9BTk9USEVSX0NMVUIQ+///////////",
            "ARIqCh1NVFRfSk9JTl9FUlJPUl9ST09NX05PVF9FWElTVBD6//////////8B",
            "EiQKF01UVF9KT0lOX0VSUk9SX05PVF9USU1FEPn//////////wESIAoTTVRU",
            "X0pPSU5fRVJST1JfREFZMhD4//////////8BEikKHE1UVF9KT0lOX0VSUk9S",
            "X05PX0NPTkNVUlJFTlQQ9///////////ARIiChVNVFRfSk9JTl9FUlJPUl9G",
            "QUlMRUQQ9v//////////ARIlChhNVFRfSk9JTl9FUlJPUl9OT19USUNLRVQQ",
            "9f//////////ARI0CidNVFRfSk9JTl9FUlJPUl9OT19BR1JFRU1FTlRfRk9S",
            "X0xJQ0VOU0UQ9P//////////ARInChpNVFRfSk9JTl9FUlJPUl9DTFVCX0JB",
            "Tk5FRBDz//////////8BEikKHE1UVF9KT0lOX0VSUk9SX0NBTkNFTF9GQUlM",
            "RUQQ8v//////////ARI5CixNVFRfSk9JTl9FUlJPUl9BTFJFQURZX0FQUExZ",
            "X0lOX0FOT1RIRVJfVEVBTRDx//////////8BEiAKE01UVF9KT0lOX0VSUk9S",
            "X0dBTkcQ7///////////ARIkChdNVFRfSk9JTl9FUlJPUl9QQVNTV09SRBDt",
            "//////////8BEigKG01UVF9KT0lOX0VSUk9SX1dST05HX0NMVUJJRBDs////",
            "//////8BEi0KIE1UVF9KT0lOX0VSUk9SX01BVENIX1JFQ09WRVJZSU5HEOv/",
            "/////////wESOAorTVRUX0pPSU5fRVJST1JfQ0xVQl9BUFBMWV9JTl9BTk9U",
            "SEVSX0xFQUdVRRDq//////////8BEiIKFU1UVF9KT0lOX0VSUk9SX0JBTl9Q",
            "QxDp//////////8BEioKHU1UVF9KT0lOX0VSUk9SX05PX0JJTkRFRF9NQUlM",
            "EOj//////////wESJQoYTVRUX0pPSU5fRVJST1JfQkFOX0FHRU5UEOf/////",
            "/////wESJgoZTVRUX0pPSU5fRVJST1JfQkFOX0xFQUdVRRDm//////////8B",
            "Ei4KIU1UVF9KT0lOX0VSUk9SX05PVF9FTk9VR0hfRElBTU9ORBDl////////",
            "//8BEicKGk1UVF9KT0lOX0VSUk9SX0JBTl9DT1VOVFJZEOT//////////wFC",
            "GloHL3BicHBnb6oCDlRleGFzLlByb3RvY29sYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Texas.Protocol.PreBaseReflection.Descriptor, global::Texas.Protocol.BaseReflection.Descriptor, global::Texas.Protocol.PpglReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Texas.Protocol.MttJoinErrorCdoe), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.CreateMttRoomREQ), global::Texas.Protocol.CreateMttRoomREQ.Parser, new[]{ "RoomName", "UpblindTime", "ActionTime", "Buyin", "BeginChips", "BlindType", "AuthLimit", "Clubid", "SeatNum", "Charge", "Timezone", "MttStartTime", "MinPlayerNum", "MaxPlayerNum", "DelayJoinLevel", "RebuyNum", "AddonRate", "BreakTime", "Roomid", "Leagueid", "EnsureChips", "HunterReward", "Rebuyin", "AddonBuyin", "PercentType", "GameMode", "Roomtype", "IsSnowballHunter", "SittingOutLevel", "IsSatellite", "RewardItems", "Moduleid", "MultiOpid", "CanUse", "ForbiddenChat", "EarlyBirdNum", "SuperLeagueid", "BreakTimeWait", "BreakTimeRest", "AddonTimeRest", "PasswdLimit", "IsGroupMtt", "GroupOverLevel", "GroupMttStartTime", "IsFreezeOut", "SuperLeagueType", "ChargeRatio", "RebuyRate", "EarlyBirdDiscount", "RewardMode", "IsBanPc", "IsCheckMail", "UpblindTimeAfterRebuyEnded", "UpblindTimeAfterFinalTable", "Ppstid", "ForbiddenChatMode", "SittingOut", "IsPpglTryouts", "IsPpglFinal", "PpglSeasonInfo", "PpglClubPpchipsRate", "BanClub", "BanCountry" }, new[]{ "RoomName", "UpblindTime", "ActionTime", "Buyin", "BeginChips", "BlindType", "AuthLimit", "Clubid", "SeatNum", "Charge", "Timezone", "MttStartTime", "MinPlayerNum", "MaxPlayerNum", "DelayJoinLevel", "RebuyNum", "AddonRate", "BreakTime", "Roomid", "Leagueid", "EnsureChips", "HunterReward", "Rebuyin", "AddonBuyin", "PercentType", "GameMode", "Roomtype", "IsSnowballHunter", "SittingOutLevel", "IsSatellite", "Moduleid", "MultiOpid", "CanUse", "ForbiddenChat", "EarlyBirdNum", "SuperLeagueid", "BreakTimeWait", "BreakTimeRest", "AddonTimeRest", "PasswdLimit", "IsGroupMtt", "GroupOverLevel", "IsFreezeOut", "SuperLeagueType", "ChargeRatio", "RebuyRate", "EarlyBirdDiscount", "RewardMode", "IsBanPc", "IsCheckMail", "UpblindTimeAfterRebuyEnded", "UpblindTimeAfterFinalTable", "Ppstid", "ForbiddenChatMode", "SittingOut", "IsPpglTryouts", "IsPpglFinal", "PpglSeasonInfo", "PpglClubPpchipsRate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.CreateMttRoomRSP), global::Texas.Protocol.CreateMttRoomRSP.Parser, new[]{ "Code", "Roomid", "IsGroupMtt", "Clubid" }, new[]{ "Code", "Roomid", "IsGroupMtt", "Clubid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttInfoREQ), global::Texas.Protocol.MttInfoREQ.Parser, new[]{ "Roomid", "Uid", "Clubid", "FromType", "Leagueid", "SuperLeagueid" }, new[]{ "Roomid", "Uid", "Clubid", "FromType", "Leagueid", "SuperLeagueid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttInfoRSP), global::Texas.Protocol.MttInfoRSP.Parser, new[]{ "Code", "SngInfo", "MttInfo", "FromType" }, new[]{ "Code", "SngInfo", "MttInfo", "FromType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttPlayerREQ), global::Texas.Protocol.MttPlayerREQ.Parser, new[]{ "Roomid", "Uid", "StartIndex", "Amount", "SupportGroup" }, new[]{ "Roomid", "Uid", "StartIndex", "Amount", "SupportGroup" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttPlayerInfo), global::Texas.Protocol.MttPlayerInfo.Parser, new[]{ "Uid", "Name", "Icon", "Type", "IsAuth" }, new[]{ "Uid", "Name", "Icon", "Type", "IsAuth" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PromotionPlayerInfo), global::Texas.Protocol.PromotionPlayerInfo.Parser, new[]{ "Uid", "Name", "Icon", "Chips" }, new[]{ "Uid", "Name", "Icon", "Chips" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.GroupPromotionPlayers), global::Texas.Protocol.GroupPromotionPlayers.Parser, new[]{ "Flag", "PlayerNum", "TotalBuyinTimes", "Roomid", "Status", "Players" }, new[]{ "Flag", "PlayerNum", "TotalBuyinTimes", "Roomid", "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttPlayerRSP), global::Texas.Protocol.MttPlayerRSP.Parser, new[]{ "Code", "Players", "PlayerNum", "StartIndex", "TotalNum", "PromotionFlag", "GroupPlayers", "PromotionNum", "TotalBuyinTimes" }, new[]{ "Code", "PlayerNum", "StartIndex", "TotalNum", "PromotionFlag", "PromotionNum", "TotalBuyinTimes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttTableREQ), global::Texas.Protocol.MttTableREQ.Parser, new[]{ "Roomid", "Uid", "StartIndex", "Amount" }, new[]{ "Roomid", "Uid", "StartIndex", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttTableInfo), global::Texas.Protocol.MttTableInfo.Parser, new[]{ "Tid", "TopChips", "LowChips", "AvgChips", "PlayerNum" }, new[]{ "Tid", "TopChips", "LowChips", "AvgChips", "PlayerNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttTableRSP), global::Texas.Protocol.MttTableRSP.Parser, new[]{ "Code", "Table", "TableNum", "StartIndex" }, new[]{ "Code", "TableNum", "StartIndex" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttTimeChangeREQ), global::Texas.Protocol.MttTimeChangeREQ.Parser, new[]{ "Roomid", "MttStartTime", "Uid", "Clubid" }, new[]{ "Roomid", "MttStartTime", "Uid", "Clubid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttEnsureChipsChangeREQ), global::Texas.Protocol.MttEnsureChipsChangeREQ.Parser, new[]{ "Roomid", "Chips", "Uid", "Clubid" }, new[]{ "Roomid", "Chips", "Uid", "Clubid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttEnsureChipsChangeRSP), global::Texas.Protocol.MttEnsureChipsChangeRSP.Parser, new[]{ "Code" }, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttTimeChangeRSP), global::Texas.Protocol.MttTimeChangeRSP.Parser, new[]{ "Code" }, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttCancelREQ), global::Texas.Protocol.MttCancelREQ.Parser, new[]{ "Roomid", "Uid" }, new[]{ "Roomid", "Uid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttCancelRSP), global::Texas.Protocol.MttCancelRSP.Parser, new[]{ "Code" }, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttPauseGameREQ), global::Texas.Protocol.MttPauseGameREQ.Parser, new[]{ "Roomid", "Uid", "Check", "IsDivide" }, new[]{ "Roomid", "Uid", "Check", "IsDivide" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttPauseGameRSP), global::Texas.Protocol.MttPauseGameRSP.Parser, new[]{ "Code", "Check", "Uid", "IsDivide", "LeftDivideTimes" }, new[]{ "Code", "Check", "Uid", "IsDivide", "LeftDivideTimes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttBackGameREQ), global::Texas.Protocol.MttBackGameREQ.Parser, new[]{ "Roomid", "Uid" }, new[]{ "Roomid", "Uid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttBackGameBRC), global::Texas.Protocol.MttBackGameBRC.Parser, new[]{ "Code", "Left", "Uid", "IsDivide", "IsManager" }, new[]{ "Code", "Left", "Uid", "IsDivide", "IsManager" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttPauseTimeBRC), global::Texas.Protocol.MttPauseTimeBRC.Parser, new[]{ "Left", "IsDivide" }, new[]{ "Left", "IsDivide" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.RoomSuspendBRC), global::Texas.Protocol.RoomSuspendBRC.Parser, new[]{ "Type" }, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttJoinREQ), global::Texas.Protocol.MttJoinREQ.Parser, new[]{ "Roomid", "Join", "Clubid", "Type", "Leagueid", "Pc", "Channel", "InvalidMail" }, new[]{ "Roomid", "Join", "Clubid", "Type", "Leagueid", "Pc", "Channel", "InvalidMail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttJoinRSP), global::Texas.Protocol.MttJoinRSP.Parser, new[]{ "Code", "Join", "Roomid", "Type", "Tempid" }, new[]{ "Code", "Join", "Roomid", "Type", "Tempid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttstatusREQ), global::Texas.Protocol.MttstatusREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttStatusRSP), global::Texas.Protocol.MttStatusRSP.Parser, new[]{ "Rank", "BlindLevel", "JoinStatus", "TotalReward", "TotalPlayerNum", "CurrentPlayerNum", "AvgChips", "TopChips", "LowChips", "AddonNum", "RebuyNum", "TotalBuyinTimes" }, new[]{ "Rank", "BlindLevel", "JoinStatus", "TotalReward", "TotalPlayerNum", "CurrentPlayerNum", "AvgChips", "TopChips", "LowChips", "AddonNum", "RebuyNum", "TotalBuyinTimes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttRewardListREQ), global::Texas.Protocol.MttRewardListREQ.Parser, new[]{ "Roomid", "StartIndex", "Amount", "System", "NeedCombined", "Leagueid", "SuperLeagueid" }, new[]{ "Roomid", "StartIndex", "Amount", "System", "NeedCombined", "Leagueid", "SuperLeagueid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttRewardListRSP), global::Texas.Protocol.MttRewardListRSP.Parser, new[]{ "FixedReward", "RewardInfo", "RewardNum", "StartIndex", "IsLessMinimumReward", "NeedCombined" }, new[]{ "FixedReward", "RewardNum", "StartIndex", "IsLessMinimumReward", "NeedCombined" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttRankListREQ), global::Texas.Protocol.MttRankListREQ.Parser, new[]{ "Roomid", "Uid", "StartIndex", "Amount", "Leagueid", "SuperLeagueid" }, new[]{ "Roomid", "Uid", "StartIndex", "Amount", "Leagueid", "SuperLeagueid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttRankInfo), global::Texas.Protocol.MttRankInfo.Parser, new[]{ "Uid", "Chips", "Name", "Icon", "RebuyNum", "AddonNum", "HunterNum", "HunterBonus", "Rank" }, new[]{ "Uid", "Chips", "Name", "Icon", "RebuyNum", "AddonNum", "HunterNum", "HunterBonus", "Rank" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttRankListRSP), global::Texas.Protocol.MttRankListRSP.Parser, new[]{ "Info", "TotalNum", "StartIndex", "MyInfo" }, new[]{ "TotalNum", "StartIndex", "MyInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttMyRankInfoBRC), global::Texas.Protocol.MttMyRankInfoBRC.Parser, new[]{ "Rank", "ItmPlayerNum", "TotalPlayerNum", "CurrentRewardPpcoins", "CurrentRewardTicketPrice", "CurrentRewardItemPrice", "AlivePlayerNum" }, new[]{ "Rank", "ItmPlayerNum", "TotalPlayerNum", "CurrentRewardPpcoins", "CurrentRewardTicketPrice", "CurrentRewardItemPrice", "AlivePlayerNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttBlindStopBRC), global::Texas.Protocol.MttBlindStopBRC.Parser, new[]{ "Type", "Left" }, new[]{ "Type", "Left" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttBreakTimeBRC), global::Texas.Protocol.MttBreakTimeBRC.Parser, new[]{ "Left" }, new[]{ "Left" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.AddonNotifyBRC), global::Texas.Protocol.AddonNotifyBRC.Parser, new[]{ "Left", "Num" }, new[]{ "Left", "Num" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ChangeTableREQ), global::Texas.Protocol.ChangeTableREQ.Parser, new[]{ "Roomid", "Tid" }, new[]{ "Roomid", "Tid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.AddonREQ), global::Texas.Protocol.AddonREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.AddonBRC), global::Texas.Protocol.AddonBRC.Parser, new[]{ "Code", "Seatid", "Chips" }, new[]{ "Code", "Seatid", "Chips" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttStartLeftBRC), global::Texas.Protocol.MttStartLeftBRC.Parser, new[]{ "Roomid", "Left" }, new[]{ "Roomid", "Left" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttWaitGameStartBRC), global::Texas.Protocol.MttWaitGameStartBRC.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.LookerREQ), global::Texas.Protocol.LookerREQ.Parser, new[]{ "Tid", "StartIndex", "Amount" }, new[]{ "Tid", "StartIndex", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.LookerRSP), global::Texas.Protocol.LookerRSP.Parser, new[]{ "User", "LookerNum", "StartIndex" }, new[]{ "LookerNum", "StartIndex" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttStartInfo), global::Texas.Protocol.MttStartInfo.Parser, new[]{ "Flag", "StartTime", "Roomid", "Status", "Handle", "EndTime" }, new[]{ "Flag", "StartTime", "Roomid", "Status", "Handle", "EndTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.GroupMttStartTimeREQ), global::Texas.Protocol.GroupMttStartTimeREQ.Parser, new[]{ "Roomid", "Uid" }, new[]{ "Roomid", "Uid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.GroupMttStartTimeRSP), global::Texas.Protocol.GroupMttStartTimeRSP.Parser, new[]{ "Code", "GroupStartInfo" }, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.GroupMttSetStartTimeREQ), global::Texas.Protocol.GroupMttSetStartTimeREQ.Parser, new[]{ "GroupStartInfo", "Roomid", "Uid" }, new[]{ "Roomid", "Uid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.GroupMttSetStartTimeRSP), global::Texas.Protocol.GroupMttSetStartTimeRSP.Parser, new[]{ "Code" }, new[]{ "Code" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MttJoinErrorCdoe {
    /// <summary>
    /// 成功
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_NONE")] MttJoinErrorNone = 0,
    /// <summary>
    /// 已经报名过了
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_ALREADY_JOINED")] MttJoinErrorAlreadyJoined = 1,
    /// <summary>
    /// 已达到报名上限
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_EXCEED_MAX_LIMIT")] MttJoinErrorExceedMaxLimit = 2,
    /// <summary>
    /// 钱不够
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_NOT_ENOUGH_PPCOIN")] MttJoinErrorNotEnoughPpcoin = -1,
    /// <summary>
    /// 延迟报名结束
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_DELAY_APPLY_OVER")] MttJoinErrorDelayApplyOver = -2,
    /// <summary>
    /// 已经没有rebuy机会
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_NO_REBUY")] MttJoinErrorNoRebuy = -3,
    /// <summary>
    /// 正在比赛中不能报名
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_ALREADY_IN_MATCH")] MttJoinErrorAlreadyInMatch = -4,
    /// <summary>
    /// 已在别的俱乐部报名过
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_ALREADY_APPLY_IN_ANOTHER_CLUB")] MttJoinErrorAlreadyApplyInAnotherClub = -5,
    /// <summary>
    /// 房间不存在
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_ROOM_NOT_EXIST")] MttJoinErrorRoomNotExist = -6,
    /// <summary>
    /// 没到报名时间
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_NOT_TIME")] MttJoinErrorNotTime = -7,
    /// <summary>
    /// 分组赛day2不允许操作
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_DAY2")] MttJoinErrorDay2 = -8,
    /// <summary>
    /// 分组赛报名并发控制，不允许用户同时对多场小组赛做报名或者取消报名的操作
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_NO_CONCURRENT")] MttJoinErrorNoConcurrent = -9,
    /// <summary>
    /// 报名失败
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_FAILED")] MttJoinErrorFailed = -10,
    /// <summary>
    /// 无门票
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_NO_TICKET")] MttJoinErrorNoTicket = -11,
    /// <summary>
    /// 需同意条款
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_NO_AGREEMENT_FOR_LICENSE")] MttJoinErrorNoAgreementForLicense = -12,
    /// <summary>
    /// 俱乐部被封禁
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_CLUB_BANNED")] MttJoinErrorClubBanned = -13,
    /// <summary>
    /// 玩家在其他俱乐部报名的，当前俱乐部取消报名失败
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_CANCEL_FAILED")] MttJoinErrorCancelFailed = -14,
    /// <summary>
    /// 玩家已在其他小组报名，当前分组赛只允许在一个小组报名
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_ALREADY_APPLY_IN_ANOTHER_TEAM")] MttJoinErrorAlreadyApplyInAnotherTeam = -15,
    /// <summary>
    /// 伙牌用户
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_GANG")] MttJoinErrorGang = -17,
    /// <summary>
    /// 密码桌未验证
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_PASSWORD")] MttJoinErrorPassword = -19,
    /// <summary>
    /// clubid错误
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_WRONG_CLUBID")] MttJoinErrorWrongClubid = -20,
    /// <summary>
    /// 比赛处于恢复未开始阶段，不接受报名
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_MATCH_RECOVERYING")] MttJoinErrorMatchRecoverying = -21,
    /// <summary>
    /// 玩家同俱乐部在不同的联盟报名过
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_CLUB_APPLY_IN_ANOTHER_LEAGUE")] MttJoinErrorClubApplyInAnotherLeague = -22,
    /// <summary>
    /// 牌桌禁止pc端玩家报名
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_BAN_PC")] MttJoinErrorBanPc = -23,
    /// <summary>
    /// 牌桌禁止未绑定邮箱玩家报名
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_NO_BINDED_MAIL")] MttJoinErrorNoBindedMail = -24,
    /// <summary>
    /// 用戶 agent 已被暫停，顯示 "Host 已限制您進行遊戲"
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_BAN_AGENT")] MttJoinErrorBanAgent = -25,
    /// <summary>
    /// 超聯 ban 聯盟，聯盟被封禁
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_BAN_LEAGUE")] MttJoinErrorBanLeague = -26,
    /// <summary>
    /// 鑽石官賽，鑽石不足無法買入
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_NOT_ENOUGH_DIAMOND")] MttJoinErrorNotEnoughDiamond = -27,
    /// <summary>
    /// 玩家注册地区被限制
    /// </summary>
    [pbr::OriginalName("MTT_JOIN_ERROR_BAN_COUNTRY")] MttJoinErrorBanCountry = -28,
  }

  #endregion

  #region Messages
  public sealed partial class CreateMttRoomREQ : pb::IMessage<CreateMttRoomREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateMttRoomREQ> _parser = new pb::MessageParser<CreateMttRoomREQ>(() => new CreateMttRoomREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    private int _hasBits1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateMttRoomREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateMttRoomREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateMttRoomREQ(CreateMttRoomREQ other) : this() {
      _hasBits0 = other._hasBits0;
      _hasBits1 = other._hasBits1;
      roomName_ = other.roomName_;
      upblindTime_ = other.upblindTime_;
      actionTime_ = other.actionTime_;
      buyin_ = other.buyin_;
      beginChips_ = other.beginChips_;
      blindType_ = other.blindType_;
      authLimit_ = other.authLimit_;
      clubid_ = other.clubid_;
      seatNum_ = other.seatNum_;
      charge_ = other.charge_;
      timezone_ = other.timezone_;
      mttStartTime_ = other.mttStartTime_;
      minPlayerNum_ = other.minPlayerNum_;
      maxPlayerNum_ = other.maxPlayerNum_;
      delayJoinLevel_ = other.delayJoinLevel_;
      rebuyNum_ = other.rebuyNum_;
      addonRate_ = other.addonRate_;
      breakTime_ = other.breakTime_;
      roomid_ = other.roomid_;
      leagueid_ = other.leagueid_;
      ensureChips_ = other.ensureChips_;
      hunterReward_ = other.hunterReward_;
      rebuyin_ = other.rebuyin_;
      addonBuyin_ = other.addonBuyin_;
      percentType_ = other.percentType_;
      gameMode_ = other.gameMode_;
      roomtype_ = other.roomtype_;
      isSnowballHunter_ = other.isSnowballHunter_;
      sittingOutLevel_ = other.sittingOutLevel_;
      isSatellite_ = other.isSatellite_;
      rewardItems_ = other.rewardItems_.Clone();
      moduleid_ = other.moduleid_;
      multiOpid_ = other.multiOpid_;
      canUse_ = other.canUse_;
      forbiddenChat_ = other.forbiddenChat_;
      earlyBirdNum_ = other.earlyBirdNum_;
      superLeagueid_ = other.superLeagueid_;
      breakTimeWait_ = other.breakTimeWait_;
      breakTimeRest_ = other.breakTimeRest_;
      addonTimeRest_ = other.addonTimeRest_;
      passwdLimit_ = other.passwdLimit_;
      isGroupMtt_ = other.isGroupMtt_;
      groupOverLevel_ = other.groupOverLevel_;
      groupMttStartTime_ = other.groupMttStartTime_.Clone();
      isFreezeOut_ = other.isFreezeOut_;
      superLeagueType_ = other.superLeagueType_;
      chargeRatio_ = other.chargeRatio_;
      rebuyRate_ = other.rebuyRate_;
      earlyBirdDiscount_ = other.earlyBirdDiscount_;
      rewardMode_ = other.rewardMode_;
      isBanPc_ = other.isBanPc_;
      isCheckMail_ = other.isCheckMail_;
      upblindTimeAfterRebuyEnded_ = other.upblindTimeAfterRebuyEnded_;
      upblindTimeAfterFinalTable_ = other.upblindTimeAfterFinalTable_;
      ppstid_ = other.ppstid_;
      forbiddenChatMode_ = other.forbiddenChatMode_;
      sittingOut_ = other.sittingOut_;
      isPpglTryouts_ = other.isPpglTryouts_;
      isPpglFinal_ = other.isPpglFinal_;
      ppglSeasonInfo_ = other.ppglSeasonInfo_ != null ? other.ppglSeasonInfo_.Clone() : null;
      ppglClubPpchipsRate_ = other.ppglClubPpchipsRate_;
      banClub_ = other.banClub_.Clone();
      banCountry_ = other.banCountry_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateMttRoomREQ Clone() {
      return new CreateMttRoomREQ(this);
    }

    /// <summary>Field number for the "room_name" field.</summary>
    public const int RoomNameFieldNumber = 1;
    private readonly static string RoomNameDefaultValue = "";

    private string roomName_;
    /// <summary>
    /// 房间名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomName {
      get { return roomName_ ?? RoomNameDefaultValue; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "room_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomName {
      get { return roomName_ != null; }
    }
    /// <summary>Clears the value of the "room_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomName() {
      roomName_ = null;
    }

    /// <summary>Field number for the "upblind_time" field.</summary>
    public const int UpblindTimeFieldNumber = 2;
    private readonly static int UpblindTimeDefaultValue = 0;

    private int upblindTime_;
    /// <summary>
    /// 涨盲时间，单位秒
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UpblindTime {
      get { if ((_hasBits0 & 1) != 0) { return upblindTime_; } else { return UpblindTimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        upblindTime_ = value;
      }
    }
    /// <summary>Gets whether the "upblind_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUpblindTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "upblind_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUpblindTime() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "action_time" field.</summary>
    public const int ActionTimeFieldNumber = 3;
    private readonly static int ActionTimeDefaultValue = 0;

    private int actionTime_;
    /// <summary>
    /// 下注时间，单位秒
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActionTime {
      get { if ((_hasBits0 & 2) != 0) { return actionTime_; } else { return ActionTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        actionTime_ = value;
      }
    }
    /// <summary>Gets whether the "action_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActionTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "action_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActionTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "buyin" field.</summary>
    public const int BuyinFieldNumber = 4;
    private readonly static long BuyinDefaultValue = 0L;

    private long buyin_;
    /// <summary>
    /// 买入，包括服务费
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Buyin {
      get { if ((_hasBits0 & 4) != 0) { return buyin_; } else { return BuyinDefaultValue; } }
      set {
        _hasBits0 |= 4;
        buyin_ = value;
      }
    }
    /// <summary>Gets whether the "buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBuyin {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBuyin() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "begin_chips" field.</summary>
    public const int BeginChipsFieldNumber = 5;
    private readonly static long BeginChipsDefaultValue = 0L;

    private long beginChips_;
    /// <summary>
    /// 初始筹码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BeginChips {
      get { if ((_hasBits0 & 8) != 0) { return beginChips_; } else { return BeginChipsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        beginChips_ = value;
      }
    }
    /// <summary>Gets whether the "begin_chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBeginChips {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "begin_chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBeginChips() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "blind_type" field.</summary>
    public const int BlindTypeFieldNumber = 6;
    private readonly static int BlindTypeDefaultValue = 0;

    private int blindType_;
    /// <summary>
    /// 涨盲类型 1 standard 2 quick  6 deep 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BlindType {
      get { if ((_hasBits0 & 16) != 0) { return blindType_; } else { return BlindTypeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        blindType_ = value;
      }
    }
    /// <summary>Gets whether the "blind_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlindType {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "blind_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlindType() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "auth_limit" field.</summary>
    public const int AuthLimitFieldNumber = 7;
    private readonly static bool AuthLimitDefaultValue = false;

    private bool authLimit_;
    /// <summary>
    /// 是否授权买入
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AuthLimit {
      get { if ((_hasBits0 & 32) != 0) { return authLimit_; } else { return AuthLimitDefaultValue; } }
      set {
        _hasBits0 |= 32;
        authLimit_ = value;
      }
    }
    /// <summary>Gets whether the "auth_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAuthLimit {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "auth_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAuthLimit() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 8;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 64) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 64;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "seat_num" field.</summary>
    public const int SeatNumFieldNumber = 9;
    private readonly static int SeatNumDefaultValue = 0;

    private int seatNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SeatNum {
      get { if ((_hasBits0 & 128) != 0) { return seatNum_; } else { return SeatNumDefaultValue; } }
      set {
        _hasBits0 |= 128;
        seatNum_ = value;
      }
    }
    /// <summary>Gets whether the "seat_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatNum {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "seat_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatNum() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "charge" field.</summary>
    public const int ChargeFieldNumber = 10;
    private readonly static long ChargeDefaultValue = 0L;

    private long charge_;
    /// <summary>
    /// 服务费
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Charge {
      get { if ((_hasBits0 & 256) != 0) { return charge_; } else { return ChargeDefaultValue; } }
      set {
        _hasBits0 |= 256;
        charge_ = value;
      }
    }
    /// <summary>Gets whether the "charge" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCharge {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "charge" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCharge() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "timezone" field.</summary>
    public const int TimezoneFieldNumber = 18;
    private readonly static int TimezoneDefaultValue = 0;

    private int timezone_;
    /// <summary>
    /// mtt相关
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Timezone {
      get { if ((_hasBits0 & 65536) != 0) { return timezone_; } else { return TimezoneDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        timezone_ = value;
      }
    }
    /// <summary>Gets whether the "timezone" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimezone {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "timezone" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimezone() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "mtt_start_time" field.</summary>
    public const int MttStartTimeFieldNumber = 11;
    private readonly static long MttStartTimeDefaultValue = 0L;

    private long mttStartTime_;
    /// <summary>
    /// 开赛时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MttStartTime {
      get { if ((_hasBits0 & 512) != 0) { return mttStartTime_; } else { return MttStartTimeDefaultValue; } }
      set {
        _hasBits0 |= 512;
        mttStartTime_ = value;
      }
    }
    /// <summary>Gets whether the "mtt_start_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMttStartTime {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "mtt_start_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMttStartTime() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "min_player_num" field.</summary>
    public const int MinPlayerNumFieldNumber = 12;
    private readonly static int MinPlayerNumDefaultValue = 0;

    private int minPlayerNum_;
    /// <summary>
    /// 人数下限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MinPlayerNum {
      get { if ((_hasBits0 & 1024) != 0) { return minPlayerNum_; } else { return MinPlayerNumDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        minPlayerNum_ = value;
      }
    }
    /// <summary>Gets whether the "min_player_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinPlayerNum {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "min_player_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinPlayerNum() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "max_player_num" field.</summary>
    public const int MaxPlayerNumFieldNumber = 13;
    private readonly static int MaxPlayerNumDefaultValue = 0;

    private int maxPlayerNum_;
    /// <summary>
    /// 人数上限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxPlayerNum {
      get { if ((_hasBits0 & 2048) != 0) { return maxPlayerNum_; } else { return MaxPlayerNumDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        maxPlayerNum_ = value;
      }
    }
    /// <summary>Gets whether the "max_player_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxPlayerNum {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "max_player_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxPlayerNum() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "delay_join_level" field.</summary>
    public const int DelayJoinLevelFieldNumber = 14;
    private readonly static int DelayJoinLevelDefaultValue = 0;

    private int delayJoinLevel_;
    /// <summary>
    /// 延迟报名结束的盲注级别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DelayJoinLevel {
      get { if ((_hasBits0 & 4096) != 0) { return delayJoinLevel_; } else { return DelayJoinLevelDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        delayJoinLevel_ = value;
      }
    }
    /// <summary>Gets whether the "delay_join_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDelayJoinLevel {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "delay_join_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDelayJoinLevel() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "rebuy_num" field.</summary>
    public const int RebuyNumFieldNumber = 15;
    private readonly static int RebuyNumDefaultValue = 0;

    private int rebuyNum_;
    /// <summary>
    /// rebuy次数  0 0次 -1 无限次
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RebuyNum {
      get { if ((_hasBits0 & 8192) != 0) { return rebuyNum_; } else { return RebuyNumDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        rebuyNum_ = value;
      }
    }
    /// <summary>Gets whether the "rebuy_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRebuyNum {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "rebuy_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRebuyNum() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "addon_rate" field.</summary>
    public const int AddonRateFieldNumber = 16;
    private readonly static long AddonRateDefaultValue = 0L;

    private long addonRate_;
    /// <summary>
    /// addon筹码是买入的几倍   0 没有addon
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AddonRate {
      get { if ((_hasBits0 & 16384) != 0) { return addonRate_; } else { return AddonRateDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        addonRate_ = value;
      }
    }
    /// <summary>Gets whether the "addon_rate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAddonRate {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "addon_rate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAddonRate() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "break_time" field.</summary>
    public const int BreakTimeFieldNumber = 17;
    private readonly static int BreakTimeDefaultValue = 0;

    private int breakTime_;
    /// <summary>
    /// 是否有中场休息  0 没有  1 有
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BreakTime {
      get { if ((_hasBits0 & 32768) != 0) { return breakTime_; } else { return BreakTimeDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        breakTime_ = value;
      }
    }
    /// <summary>Gets whether the "break_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBreakTime {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "break_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBreakTime() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 19;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    /// <summary>
    /// 客户端不需要填
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 131072) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 20;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    /// <summary>
    /// 联盟id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 262144) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "ensure_chips" field.</summary>
    public const int EnsureChipsFieldNumber = 21;
    private readonly static long EnsureChipsDefaultValue = 0L;

    private long ensureChips_;
    /// <summary>
    /// 保底奖池
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EnsureChips {
      get { if ((_hasBits0 & 524288) != 0) { return ensureChips_; } else { return EnsureChipsDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        ensureChips_ = value;
      }
    }
    /// <summary>Gets whether the "ensure_chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnsureChips {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "ensure_chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnsureChips() {
      _hasBits0 &= ~524288;
    }

    /// <summary>Field number for the "hunter_reward" field.</summary>
    public const int HunterRewardFieldNumber = 22;
    private readonly static long HunterRewardDefaultValue = 0L;

    private long hunterReward_;
    /// <summary>
    /// 猎人奖金  为0表示普通赛
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long HunterReward {
      get { if ((_hasBits0 & 1048576) != 0) { return hunterReward_; } else { return HunterRewardDefaultValue; } }
      set {
        _hasBits0 |= 1048576;
        hunterReward_ = value;
      }
    }
    /// <summary>Gets whether the "hunter_reward" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHunterReward {
      get { return (_hasBits0 & 1048576) != 0; }
    }
    /// <summary>Clears the value of the "hunter_reward" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHunterReward() {
      _hasBits0 &= ~1048576;
    }

    /// <summary>Field number for the "rebuyin" field.</summary>
    public const int RebuyinFieldNumber = 23;
    private readonly static long RebuyinDefaultValue = 0L;

    private long rebuyin_;
    /// <summary>
    /// rebuy消耗
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Rebuyin {
      get { if ((_hasBits0 & 2097152) != 0) { return rebuyin_; } else { return RebuyinDefaultValue; } }
      set {
        _hasBits0 |= 2097152;
        rebuyin_ = value;
      }
    }
    /// <summary>Gets whether the "rebuyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRebuyin {
      get { return (_hasBits0 & 2097152) != 0; }
    }
    /// <summary>Clears the value of the "rebuyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRebuyin() {
      _hasBits0 &= ~2097152;
    }

    /// <summary>Field number for the "addon_buyin" field.</summary>
    public const int AddonBuyinFieldNumber = 24;
    private readonly static long AddonBuyinDefaultValue = 0L;

    private long addonBuyin_;
    /// <summary>
    /// addon花费
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AddonBuyin {
      get { if ((_hasBits0 & 4194304) != 0) { return addonBuyin_; } else { return AddonBuyinDefaultValue; } }
      set {
        _hasBits0 |= 4194304;
        addonBuyin_ = value;
      }
    }
    /// <summary>Gets whether the "addon_buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAddonBuyin {
      get { return (_hasBits0 & 4194304) != 0; }
    }
    /// <summary>Clears the value of the "addon_buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAddonBuyin() {
      _hasBits0 &= ~4194304;
    }

    /// <summary>Field number for the "percent_type" field.</summary>
    public const int PercentTypeFieldNumber = 25;
    private readonly static global::Texas.Protocol.MttRewardPercentType PercentTypeDefaultValue = global::Texas.Protocol.MttRewardPercentType.MttTenPercent;

    private global::Texas.Protocol.MttRewardPercentType percentType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.MttRewardPercentType PercentType {
      get { if ((_hasBits0 & 8388608) != 0) { return percentType_; } else { return PercentTypeDefaultValue; } }
      set {
        _hasBits0 |= 8388608;
        percentType_ = value;
      }
    }
    /// <summary>Gets whether the "percent_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPercentType {
      get { return (_hasBits0 & 8388608) != 0; }
    }
    /// <summary>Clears the value of the "percent_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPercentType() {
      _hasBits0 &= ~8388608;
    }

    /// <summary>Field number for the "game_mode" field.</summary>
    public const int GameModeFieldNumber = 26;
    private readonly static global::Texas.Protocol.GameMode GameModeDefaultValue = global::Texas.Protocol.GameMode.Regular;

    private global::Texas.Protocol.GameMode gameMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.GameMode GameMode {
      get { if ((_hasBits0 & 16777216) != 0) { return gameMode_; } else { return GameModeDefaultValue; } }
      set {
        _hasBits0 |= 16777216;
        gameMode_ = value;
      }
    }
    /// <summary>Gets whether the "game_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameMode {
      get { return (_hasBits0 & 16777216) != 0; }
    }
    /// <summary>Clears the value of the "game_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameMode() {
      _hasBits0 &= ~16777216;
    }

    /// <summary>Field number for the "roomtype" field.</summary>
    public const int RoomtypeFieldNumber = 27;
    private readonly static global::Texas.Protocol.RoomType RoomtypeDefaultValue = global::Texas.Protocol.RoomType.TestRoom;

    private global::Texas.Protocol.RoomType roomtype_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomType Roomtype {
      get { if ((_hasBits0 & 33554432) != 0) { return roomtype_; } else { return RoomtypeDefaultValue; } }
      set {
        _hasBits0 |= 33554432;
        roomtype_ = value;
      }
    }
    /// <summary>Gets whether the "roomtype" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomtype {
      get { return (_hasBits0 & 33554432) != 0; }
    }
    /// <summary>Clears the value of the "roomtype" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomtype() {
      _hasBits0 &= ~33554432;
    }

    /// <summary>Field number for the "is_snowball_hunter" field.</summary>
    public const int IsSnowballHunterFieldNumber = 28;
    private readonly static bool IsSnowballHunterDefaultValue = false;

    private bool isSnowballHunter_;
    /// <summary>
    /// 是否滚雪球
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSnowballHunter {
      get { if ((_hasBits0 & 67108864) != 0) { return isSnowballHunter_; } else { return IsSnowballHunterDefaultValue; } }
      set {
        _hasBits0 |= 67108864;
        isSnowballHunter_ = value;
      }
    }
    /// <summary>Gets whether the "is_snowball_hunter" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsSnowballHunter {
      get { return (_hasBits0 & 67108864) != 0; }
    }
    /// <summary>Clears the value of the "is_snowball_hunter" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsSnowballHunter() {
      _hasBits0 &= ~67108864;
    }

    /// <summary>Field number for the "sitting_out_level" field.</summary>
    public const int SittingOutLevelFieldNumber = 29;
    private readonly static int SittingOutLevelDefaultValue = 0;

    private int sittingOutLevel_;
    /// <summary>
    /// 在该级别时将玩家从sitting out踢起并返回报名费,有效值:0 &lt; level &lt; delay_join_level
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SittingOutLevel {
      get { if ((_hasBits0 & 134217728) != 0) { return sittingOutLevel_; } else { return SittingOutLevelDefaultValue; } }
      set {
        _hasBits0 |= 134217728;
        sittingOutLevel_ = value;
      }
    }
    /// <summary>Gets whether the "sitting_out_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSittingOutLevel {
      get { return (_hasBits0 & 134217728) != 0; }
    }
    /// <summary>Clears the value of the "sitting_out_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSittingOutLevel() {
      _hasBits0 &= ~134217728;
    }

    /// <summary>Field number for the "is_satellite" field.</summary>
    public const int IsSatelliteFieldNumber = 30;
    private readonly static bool IsSatelliteDefaultValue = false;

    private bool isSatellite_;
    /// <summary>
    /// 是否是卫星赛
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSatellite {
      get { if ((_hasBits0 & 268435456) != 0) { return isSatellite_; } else { return IsSatelliteDefaultValue; } }
      set {
        _hasBits0 |= 268435456;
        isSatellite_ = value;
      }
    }
    /// <summary>Gets whether the "is_satellite" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsSatellite {
      get { return (_hasBits0 & 268435456) != 0; }
    }
    /// <summary>Clears the value of the "is_satellite" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsSatellite() {
      _hasBits0 &= ~268435456;
    }

    /// <summary>Field number for the "reward_items" field.</summary>
    public const int RewardItemsFieldNumber = 31;
    private static readonly pb::FieldCodec<global::Texas.Protocol.RewardConfigureItem> _repeated_rewardItems_codec
        = pb::FieldCodec.ForMessage(250, global::Texas.Protocol.RewardConfigureItem.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.RewardConfigureItem> rewardItems_ = new pbc::RepeatedField<global::Texas.Protocol.RewardConfigureItem>();
    /// <summary>
    /// 奖励配置列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.RewardConfigureItem> RewardItems {
      get { return rewardItems_; }
    }

    /// <summary>Field number for the "moduleid" field.</summary>
    public const int ModuleidFieldNumber = 32;
    private readonly static long ModuleidDefaultValue = 0L;

    private long moduleid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Moduleid {
      get { if ((_hasBits0 & 536870912) != 0) { return moduleid_; } else { return ModuleidDefaultValue; } }
      set {
        _hasBits0 |= 536870912;
        moduleid_ = value;
      }
    }
    /// <summary>Gets whether the "moduleid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModuleid {
      get { return (_hasBits0 & 536870912) != 0; }
    }
    /// <summary>Clears the value of the "moduleid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModuleid() {
      _hasBits0 &= ~536870912;
    }

    /// <summary>Field number for the "multi_opid" field.</summary>
    public const int MultiOpidFieldNumber = 33;
    private readonly static string MultiOpidDefaultValue = "";

    private string multiOpid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MultiOpid {
      get { return multiOpid_ ?? MultiOpidDefaultValue; }
      set {
        multiOpid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "multi_opid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMultiOpid {
      get { return multiOpid_ != null; }
    }
    /// <summary>Clears the value of the "multi_opid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMultiOpid() {
      multiOpid_ = null;
    }

    /// <summary>Field number for the "can_use" field.</summary>
    public const int CanUseFieldNumber = 34;
    private readonly static bool CanUseDefaultValue = false;

    private bool canUse_;
    /// <summary>
    /// is module can use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanUse {
      get { if ((_hasBits0 & 1073741824) != 0) { return canUse_; } else { return CanUseDefaultValue; } }
      set {
        _hasBits0 |= 1073741824;
        canUse_ = value;
      }
    }
    /// <summary>Gets whether the "can_use" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCanUse {
      get { return (_hasBits0 & 1073741824) != 0; }
    }
    /// <summary>Clears the value of the "can_use" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCanUse() {
      _hasBits0 &= ~1073741824;
    }

    /// <summary>Field number for the "forbidden_chat" field.</summary>
    public const int ForbiddenChatFieldNumber = 35;
    private readonly static bool ForbiddenChatDefaultValue = false;

    private bool forbiddenChat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ForbiddenChat {
      get { if ((_hasBits0 & -2147483648) != 0) { return forbiddenChat_; } else { return ForbiddenChatDefaultValue; } }
      set {
        _hasBits0 |= -2147483648;
        forbiddenChat_ = value;
      }
    }
    /// <summary>Gets whether the "forbidden_chat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForbiddenChat {
      get { return (_hasBits0 & -2147483648) != 0; }
    }
    /// <summary>Clears the value of the "forbidden_chat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForbiddenChat() {
      _hasBits0 &= ~-2147483648;
    }

    /// <summary>Field number for the "early_bird_num" field.</summary>
    public const int EarlyBirdNumFieldNumber = 36;
    private readonly static int EarlyBirdNumDefaultValue = 0;

    private int earlyBirdNum_;
    /// <summary>
    ///早鸟半价 0：没开启  N: 前N名都能享受早鸟半价
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EarlyBirdNum {
      get { if ((_hasBits1 & 1) != 0) { return earlyBirdNum_; } else { return EarlyBirdNumDefaultValue; } }
      set {
        _hasBits1 |= 1;
        earlyBirdNum_ = value;
      }
    }
    /// <summary>Gets whether the "early_bird_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEarlyBirdNum {
      get { return (_hasBits1 & 1) != 0; }
    }
    /// <summary>Clears the value of the "early_bird_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEarlyBirdNum() {
      _hasBits1 &= ~1;
    }

    /// <summary>Field number for the "super_leagueid" field.</summary>
    public const int SuperLeagueidFieldNumber = 37;
    private readonly static int SuperLeagueidDefaultValue = 0;

    private int superLeagueid_;
    /// <summary>
    /// 超级联盟id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueid {
      get { if ((_hasBits1 & 2) != 0) { return superLeagueid_; } else { return SuperLeagueidDefaultValue; } }
      set {
        _hasBits1 |= 2;
        superLeagueid_ = value;
      }
    }
    /// <summary>Gets whether the "super_leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueid {
      get { return (_hasBits1 & 2) != 0; }
    }
    /// <summary>Clears the value of the "super_leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueid() {
      _hasBits1 &= ~2;
    }

    /// <summary>Field number for the "break_time_wait" field.</summary>
    public const int BreakTimeWaitFieldNumber = 38;
    private readonly static int BreakTimeWaitDefaultValue = 0;

    private int breakTimeWait_;
    /// <summary>
    ///超级联盟mtt 每隔多长时间进入休息状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BreakTimeWait {
      get { if ((_hasBits1 & 4) != 0) { return breakTimeWait_; } else { return BreakTimeWaitDefaultValue; } }
      set {
        _hasBits1 |= 4;
        breakTimeWait_ = value;
      }
    }
    /// <summary>Gets whether the "break_time_wait" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBreakTimeWait {
      get { return (_hasBits1 & 4) != 0; }
    }
    /// <summary>Clears the value of the "break_time_wait" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBreakTimeWait() {
      _hasBits1 &= ~4;
    }

    /// <summary>Field number for the "break_time_rest" field.</summary>
    public const int BreakTimeRestFieldNumber = 39;
    private readonly static int BreakTimeRestDefaultValue = 0;

    private int breakTimeRest_;
    /// <summary>
    ///超级联盟mtt 休息持续时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BreakTimeRest {
      get { if ((_hasBits1 & 8) != 0) { return breakTimeRest_; } else { return BreakTimeRestDefaultValue; } }
      set {
        _hasBits1 |= 8;
        breakTimeRest_ = value;
      }
    }
    /// <summary>Gets whether the "break_time_rest" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBreakTimeRest {
      get { return (_hasBits1 & 8) != 0; }
    }
    /// <summary>Clears the value of the "break_time_rest" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBreakTimeRest() {
      _hasBits1 &= ~8;
    }

    /// <summary>Field number for the "addon_time_rest" field.</summary>
    public const int AddonTimeRestFieldNumber = 40;
    private readonly static int AddonTimeRestDefaultValue = 0;

    private int addonTimeRest_;
    /// <summary>
    ///超级联盟mtt 的add-on时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AddonTimeRest {
      get { if ((_hasBits1 & 16) != 0) { return addonTimeRest_; } else { return AddonTimeRestDefaultValue; } }
      set {
        _hasBits1 |= 16;
        addonTimeRest_ = value;
      }
    }
    /// <summary>Gets whether the "addon_time_rest" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAddonTimeRest {
      get { return (_hasBits1 & 16) != 0; }
    }
    /// <summary>Clears the value of the "addon_time_rest" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAddonTimeRest() {
      _hasBits1 &= ~16;
    }

    /// <summary>Field number for the "passwd_limit" field.</summary>
    public const int PasswdLimitFieldNumber = 41;
    private readonly static bool PasswdLimitDefaultValue = false;

    private bool passwdLimit_;
    /// <summary>
    /// 是否密码桌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PasswdLimit {
      get { if ((_hasBits1 & 32) != 0) { return passwdLimit_; } else { return PasswdLimitDefaultValue; } }
      set {
        _hasBits1 |= 32;
        passwdLimit_ = value;
      }
    }
    /// <summary>Gets whether the "passwd_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPasswdLimit {
      get { return (_hasBits1 & 32) != 0; }
    }
    /// <summary>Clears the value of the "passwd_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPasswdLimit() {
      _hasBits1 &= ~32;
    }

    /// <summary>Field number for the "is_group_mtt" field.</summary>
    public const int IsGroupMttFieldNumber = 42;
    private readonly static bool IsGroupMttDefaultValue = false;

    private bool isGroupMtt_;
    /// <summary>
    ///是否分组赛
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsGroupMtt {
      get { if ((_hasBits1 & 64) != 0) { return isGroupMtt_; } else { return IsGroupMttDefaultValue; } }
      set {
        _hasBits1 |= 64;
        isGroupMtt_ = value;
      }
    }
    /// <summary>Gets whether the "is_group_mtt" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsGroupMtt {
      get { return (_hasBits1 & 64) != 0; }
    }
    /// <summary>Clears the value of the "is_group_mtt" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsGroupMtt() {
      _hasBits1 &= ~64;
    }

    /// <summary>Field number for the "group_over_level" field.</summary>
    public const int GroupOverLevelFieldNumber = 43;
    private readonly static int GroupOverLevelDefaultValue = 0;

    private int groupOverLevel_;
    /// <summary>
    ///小组赛结束级别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GroupOverLevel {
      get { if ((_hasBits1 & 128) != 0) { return groupOverLevel_; } else { return GroupOverLevelDefaultValue; } }
      set {
        _hasBits1 |= 128;
        groupOverLevel_ = value;
      }
    }
    /// <summary>Gets whether the "group_over_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGroupOverLevel {
      get { return (_hasBits1 & 128) != 0; }
    }
    /// <summary>Clears the value of the "group_over_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGroupOverLevel() {
      _hasBits1 &= ~128;
    }

    /// <summary>Field number for the "group_mtt_start_time" field.</summary>
    public const int GroupMttStartTimeFieldNumber = 44;
    private static readonly pb::FieldCodec<long> _repeated_groupMttStartTime_codec
        = pb::FieldCodec.ForInt64(354);
    private readonly pbc::RepeatedField<long> groupMttStartTime_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///各个小组的开赛时间 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> GroupMttStartTime {
      get { return groupMttStartTime_; }
    }

    /// <summary>Field number for the "is_freeze_out" field.</summary>
    public const int IsFreezeOutFieldNumber = 45;
    private readonly static bool IsFreezeOutDefaultValue = false;

    private bool isFreezeOut_;
    /// <summary>
    ///是否只允许玩家只在一个小组赛中报名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsFreezeOut {
      get { if ((_hasBits1 & 256) != 0) { return isFreezeOut_; } else { return IsFreezeOutDefaultValue; } }
      set {
        _hasBits1 |= 256;
        isFreezeOut_ = value;
      }
    }
    /// <summary>Gets whether the "is_freeze_out" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsFreezeOut {
      get { return (_hasBits1 & 256) != 0; }
    }
    /// <summary>Clears the value of the "is_freeze_out" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsFreezeOut() {
      _hasBits1 &= ~256;
    }

    /// <summary>Field number for the "super_league_type" field.</summary>
    public const int SuperLeagueTypeFieldNumber = 46;
    private readonly static int SuperLeagueTypeDefaultValue = 0;

    private int superLeagueType_;
    /// <summary>
    ///1表示非ppst的超级联盟
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueType {
      get { if ((_hasBits1 & 512) != 0) { return superLeagueType_; } else { return SuperLeagueTypeDefaultValue; } }
      set {
        _hasBits1 |= 512;
        superLeagueType_ = value;
      }
    }
    /// <summary>Gets whether the "super_league_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueType {
      get { return (_hasBits1 & 512) != 0; }
    }
    /// <summary>Clears the value of the "super_league_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueType() {
      _hasBits1 &= ~512;
    }

    /// <summary>Field number for the "charge_ratio" field.</summary>
    public const int ChargeRatioFieldNumber = 47;
    private readonly static int ChargeRatioDefaultValue = 0;

    private int chargeRatio_;
    /// <summary>
    ///服务费的百分比
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChargeRatio {
      get { if ((_hasBits1 & 1024) != 0) { return chargeRatio_; } else { return ChargeRatioDefaultValue; } }
      set {
        _hasBits1 |= 1024;
        chargeRatio_ = value;
      }
    }
    /// <summary>Gets whether the "charge_ratio" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChargeRatio {
      get { return (_hasBits1 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "charge_ratio" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChargeRatio() {
      _hasBits1 &= ~1024;
    }

    /// <summary>Field number for the "rebuy_rate" field.</summary>
    public const int RebuyRateFieldNumber = 48;
    private readonly static int RebuyRateDefaultValue = 0;

    private int rebuyRate_;
    /// <summary>
    /// rebuy筹码是买入的几倍
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RebuyRate {
      get { if ((_hasBits1 & 2048) != 0) { return rebuyRate_; } else { return RebuyRateDefaultValue; } }
      set {
        _hasBits1 |= 2048;
        rebuyRate_ = value;
      }
    }
    /// <summary>Gets whether the "rebuy_rate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRebuyRate {
      get { return (_hasBits1 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "rebuy_rate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRebuyRate() {
      _hasBits1 &= ~2048;
    }

    /// <summary>Field number for the "early_bird_discount" field.</summary>
    public const int EarlyBirdDiscountFieldNumber = 49;
    private readonly static int EarlyBirdDiscountDefaultValue = 0;

    private int earlyBirdDiscount_;
    /// <summary>
    ///50代表是50%的折扣
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EarlyBirdDiscount {
      get { if ((_hasBits1 & 4096) != 0) { return earlyBirdDiscount_; } else { return EarlyBirdDiscountDefaultValue; } }
      set {
        _hasBits1 |= 4096;
        earlyBirdDiscount_ = value;
      }
    }
    /// <summary>Gets whether the "early_bird_discount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEarlyBirdDiscount {
      get { return (_hasBits1 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "early_bird_discount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEarlyBirdDiscount() {
      _hasBits1 &= ~4096;
    }

    /// <summary>Field number for the "reward_mode" field.</summary>
    public const int RewardModeFieldNumber = 50;
    private readonly static global::Texas.Protocol.MttRewardMode RewardModeDefaultValue = global::Texas.Protocol.MttRewardMode.MttSngDefault;

    private global::Texas.Protocol.MttRewardMode rewardMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.MttRewardMode RewardMode {
      get { if ((_hasBits1 & 8192) != 0) { return rewardMode_; } else { return RewardModeDefaultValue; } }
      set {
        _hasBits1 |= 8192;
        rewardMode_ = value;
      }
    }
    /// <summary>Gets whether the "reward_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRewardMode {
      get { return (_hasBits1 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "reward_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRewardMode() {
      _hasBits1 &= ~8192;
    }

    /// <summary>Field number for the "is_ban_pc" field.</summary>
    public const int IsBanPcFieldNumber = 51;
    private readonly static bool IsBanPcDefaultValue = false;

    private bool isBanPc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBanPc {
      get { if ((_hasBits1 & 16384) != 0) { return isBanPc_; } else { return IsBanPcDefaultValue; } }
      set {
        _hasBits1 |= 16384;
        isBanPc_ = value;
      }
    }
    /// <summary>Gets whether the "is_ban_pc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsBanPc {
      get { return (_hasBits1 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "is_ban_pc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsBanPc() {
      _hasBits1 &= ~16384;
    }

    /// <summary>Field number for the "is_check_mail" field.</summary>
    public const int IsCheckMailFieldNumber = 52;
    private readonly static bool IsCheckMailDefaultValue = false;

    private bool isCheckMail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCheckMail {
      get { if ((_hasBits1 & 32768) != 0) { return isCheckMail_; } else { return IsCheckMailDefaultValue; } }
      set {
        _hasBits1 |= 32768;
        isCheckMail_ = value;
      }
    }
    /// <summary>Gets whether the "is_check_mail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsCheckMail {
      get { return (_hasBits1 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "is_check_mail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsCheckMail() {
      _hasBits1 &= ~32768;
    }

    /// <summary>Field number for the "upblind_time_after_rebuy_ended" field.</summary>
    public const int UpblindTimeAfterRebuyEndedFieldNumber = 53;
    private readonly static int UpblindTimeAfterRebuyEndedDefaultValue = 0;

    private int upblindTimeAfterRebuyEnded_;
    /// <summary>
    ///截止買入後的漲盲時間
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UpblindTimeAfterRebuyEnded {
      get { if ((_hasBits1 & 65536) != 0) { return upblindTimeAfterRebuyEnded_; } else { return UpblindTimeAfterRebuyEndedDefaultValue; } }
      set {
        _hasBits1 |= 65536;
        upblindTimeAfterRebuyEnded_ = value;
      }
    }
    /// <summary>Gets whether the "upblind_time_after_rebuy_ended" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUpblindTimeAfterRebuyEnded {
      get { return (_hasBits1 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "upblind_time_after_rebuy_ended" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUpblindTimeAfterRebuyEnded() {
      _hasBits1 &= ~65536;
    }

    /// <summary>Field number for the "upblind_time_after_final_table" field.</summary>
    public const int UpblindTimeAfterFinalTableFieldNumber = 54;
    private readonly static int UpblindTimeAfterFinalTableDefaultValue = 0;

    private int upblindTimeAfterFinalTable_;
    /// <summary>
    ///進入final table後的漲盲時間
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UpblindTimeAfterFinalTable {
      get { if ((_hasBits1 & 131072) != 0) { return upblindTimeAfterFinalTable_; } else { return UpblindTimeAfterFinalTableDefaultValue; } }
      set {
        _hasBits1 |= 131072;
        upblindTimeAfterFinalTable_ = value;
      }
    }
    /// <summary>Gets whether the "upblind_time_after_final_table" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUpblindTimeAfterFinalTable {
      get { return (_hasBits1 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "upblind_time_after_final_table" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUpblindTimeAfterFinalTable() {
      _hasBits1 &= ~131072;
    }

    /// <summary>Field number for the "ppstid" field.</summary>
    public const int PpstidFieldNumber = 55;
    private readonly static int PpstidDefaultValue = 0;

    private int ppstid_;
    /// <summary>
    ///新版ppstid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ppstid {
      get { if ((_hasBits1 & 262144) != 0) { return ppstid_; } else { return PpstidDefaultValue; } }
      set {
        _hasBits1 |= 262144;
        ppstid_ = value;
      }
    }
    /// <summary>Gets whether the "ppstid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpstid {
      get { return (_hasBits1 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "ppstid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpstid() {
      _hasBits1 &= ~262144;
    }

    /// <summary>Field number for the "forbidden_chat_mode" field.</summary>
    public const int ForbiddenChatModeFieldNumber = 56;
    private readonly static int ForbiddenChatModeDefaultValue = 0;

    private int forbiddenChatMode_;
    /// <summary>
    ///0: 全體禁言 1:看客禁言
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ForbiddenChatMode {
      get { if ((_hasBits1 & 524288) != 0) { return forbiddenChatMode_; } else { return ForbiddenChatModeDefaultValue; } }
      set {
        _hasBits1 |= 524288;
        forbiddenChatMode_ = value;
      }
    }
    /// <summary>Gets whether the "forbidden_chat_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForbiddenChatMode {
      get { return (_hasBits1 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "forbidden_chat_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForbiddenChatMode() {
      _hasBits1 &= ~524288;
    }

    /// <summary>Field number for the "sitting_out" field.</summary>
    public const int SittingOutFieldNumber = 57;
    private readonly static bool SittingOutDefaultValue = false;

    private bool sittingOut_;
    /// <summary>
    /// 是否踢除未入座的玩家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SittingOut {
      get { if ((_hasBits1 & 1048576) != 0) { return sittingOut_; } else { return SittingOutDefaultValue; } }
      set {
        _hasBits1 |= 1048576;
        sittingOut_ = value;
      }
    }
    /// <summary>Gets whether the "sitting_out" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSittingOut {
      get { return (_hasBits1 & 1048576) != 0; }
    }
    /// <summary>Clears the value of the "sitting_out" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSittingOut() {
      _hasBits1 &= ~1048576;
    }

    /// <summary>Field number for the "is_ppgl_tryouts" field.</summary>
    public const int IsPpglTryoutsFieldNumber = 58;
    private readonly static bool IsPpglTryoutsDefaultValue = false;

    private bool isPpglTryouts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPpglTryouts {
      get { if ((_hasBits1 & 2097152) != 0) { return isPpglTryouts_; } else { return IsPpglTryoutsDefaultValue; } }
      set {
        _hasBits1 |= 2097152;
        isPpglTryouts_ = value;
      }
    }
    /// <summary>Gets whether the "is_ppgl_tryouts" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPpglTryouts {
      get { return (_hasBits1 & 2097152) != 0; }
    }
    /// <summary>Clears the value of the "is_ppgl_tryouts" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPpglTryouts() {
      _hasBits1 &= ~2097152;
    }

    /// <summary>Field number for the "is_ppgl_final" field.</summary>
    public const int IsPpglFinalFieldNumber = 59;
    private readonly static bool IsPpglFinalDefaultValue = false;

    private bool isPpglFinal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPpglFinal {
      get { if ((_hasBits1 & 4194304) != 0) { return isPpglFinal_; } else { return IsPpglFinalDefaultValue; } }
      set {
        _hasBits1 |= 4194304;
        isPpglFinal_ = value;
      }
    }
    /// <summary>Gets whether the "is_ppgl_final" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPpglFinal {
      get { return (_hasBits1 & 4194304) != 0; }
    }
    /// <summary>Clears the value of the "is_ppgl_final" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPpglFinal() {
      _hasBits1 &= ~4194304;
    }

    /// <summary>Field number for the "ppgl_season_info" field.</summary>
    public const int PpglSeasonInfoFieldNumber = 60;
    private global::Texas.Protocol.PPGLSeasonInfo ppglSeasonInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.PPGLSeasonInfo PpglSeasonInfo {
      get { return ppglSeasonInfo_; }
      set {
        ppglSeasonInfo_ = value;
      }
    }

    /// <summary>Field number for the "ppgl_club_ppchips_rate" field.</summary>
    public const int PpglClubPpchipsRateFieldNumber = 61;
    private readonly static long PpglClubPpchipsRateDefaultValue = 0L;

    private long ppglClubPpchipsRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PpglClubPpchipsRate {
      get { if ((_hasBits1 & 8388608) != 0) { return ppglClubPpchipsRate_; } else { return PpglClubPpchipsRateDefaultValue; } }
      set {
        _hasBits1 |= 8388608;
        ppglClubPpchipsRate_ = value;
      }
    }
    /// <summary>Gets whether the "ppgl_club_ppchips_rate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpglClubPpchipsRate {
      get { return (_hasBits1 & 8388608) != 0; }
    }
    /// <summary>Clears the value of the "ppgl_club_ppchips_rate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpglClubPpchipsRate() {
      _hasBits1 &= ~8388608;
    }

    /// <summary>Field number for the "ban_club" field.</summary>
    public const int BanClubFieldNumber = 62;
    private static readonly pb::FieldCodec<int> _repeated_banClub_codec
        = pb::FieldCodec.ForInt32(498);
    private readonly pbc::RepeatedField<int> banClub_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// restriction for clubs and regions
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> BanClub {
      get { return banClub_; }
    }

    /// <summary>Field number for the "ban_country" field.</summary>
    public const int BanCountryFieldNumber = 63;
    private static readonly pb::FieldCodec<string> _repeated_banCountry_codec
        = pb::FieldCodec.ForString(506);
    private readonly pbc::RepeatedField<string> banCountry_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 限制注册地为某些国家的用户不能看到和加入牌桌，缩写
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> BanCountry {
      get { return banCountry_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateMttRoomREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateMttRoomREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomName != other.RoomName) return false;
      if (UpblindTime != other.UpblindTime) return false;
      if (ActionTime != other.ActionTime) return false;
      if (Buyin != other.Buyin) return false;
      if (BeginChips != other.BeginChips) return false;
      if (BlindType != other.BlindType) return false;
      if (AuthLimit != other.AuthLimit) return false;
      if (Clubid != other.Clubid) return false;
      if (SeatNum != other.SeatNum) return false;
      if (Charge != other.Charge) return false;
      if (Timezone != other.Timezone) return false;
      if (MttStartTime != other.MttStartTime) return false;
      if (MinPlayerNum != other.MinPlayerNum) return false;
      if (MaxPlayerNum != other.MaxPlayerNum) return false;
      if (DelayJoinLevel != other.DelayJoinLevel) return false;
      if (RebuyNum != other.RebuyNum) return false;
      if (AddonRate != other.AddonRate) return false;
      if (BreakTime != other.BreakTime) return false;
      if (Roomid != other.Roomid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (EnsureChips != other.EnsureChips) return false;
      if (HunterReward != other.HunterReward) return false;
      if (Rebuyin != other.Rebuyin) return false;
      if (AddonBuyin != other.AddonBuyin) return false;
      if (PercentType != other.PercentType) return false;
      if (GameMode != other.GameMode) return false;
      if (Roomtype != other.Roomtype) return false;
      if (IsSnowballHunter != other.IsSnowballHunter) return false;
      if (SittingOutLevel != other.SittingOutLevel) return false;
      if (IsSatellite != other.IsSatellite) return false;
      if(!rewardItems_.Equals(other.rewardItems_)) return false;
      if (Moduleid != other.Moduleid) return false;
      if (MultiOpid != other.MultiOpid) return false;
      if (CanUse != other.CanUse) return false;
      if (ForbiddenChat != other.ForbiddenChat) return false;
      if (EarlyBirdNum != other.EarlyBirdNum) return false;
      if (SuperLeagueid != other.SuperLeagueid) return false;
      if (BreakTimeWait != other.BreakTimeWait) return false;
      if (BreakTimeRest != other.BreakTimeRest) return false;
      if (AddonTimeRest != other.AddonTimeRest) return false;
      if (PasswdLimit != other.PasswdLimit) return false;
      if (IsGroupMtt != other.IsGroupMtt) return false;
      if (GroupOverLevel != other.GroupOverLevel) return false;
      if(!groupMttStartTime_.Equals(other.groupMttStartTime_)) return false;
      if (IsFreezeOut != other.IsFreezeOut) return false;
      if (SuperLeagueType != other.SuperLeagueType) return false;
      if (ChargeRatio != other.ChargeRatio) return false;
      if (RebuyRate != other.RebuyRate) return false;
      if (EarlyBirdDiscount != other.EarlyBirdDiscount) return false;
      if (RewardMode != other.RewardMode) return false;
      if (IsBanPc != other.IsBanPc) return false;
      if (IsCheckMail != other.IsCheckMail) return false;
      if (UpblindTimeAfterRebuyEnded != other.UpblindTimeAfterRebuyEnded) return false;
      if (UpblindTimeAfterFinalTable != other.UpblindTimeAfterFinalTable) return false;
      if (Ppstid != other.Ppstid) return false;
      if (ForbiddenChatMode != other.ForbiddenChatMode) return false;
      if (SittingOut != other.SittingOut) return false;
      if (IsPpglTryouts != other.IsPpglTryouts) return false;
      if (IsPpglFinal != other.IsPpglFinal) return false;
      if (!object.Equals(PpglSeasonInfo, other.PpglSeasonInfo)) return false;
      if (PpglClubPpchipsRate != other.PpglClubPpchipsRate) return false;
      if(!banClub_.Equals(other.banClub_)) return false;
      if(!banCountry_.Equals(other.banCountry_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomName) hash ^= RoomName.GetHashCode();
      if (HasUpblindTime) hash ^= UpblindTime.GetHashCode();
      if (HasActionTime) hash ^= ActionTime.GetHashCode();
      if (HasBuyin) hash ^= Buyin.GetHashCode();
      if (HasBeginChips) hash ^= BeginChips.GetHashCode();
      if (HasBlindType) hash ^= BlindType.GetHashCode();
      if (HasAuthLimit) hash ^= AuthLimit.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasSeatNum) hash ^= SeatNum.GetHashCode();
      if (HasCharge) hash ^= Charge.GetHashCode();
      if (HasTimezone) hash ^= Timezone.GetHashCode();
      if (HasMttStartTime) hash ^= MttStartTime.GetHashCode();
      if (HasMinPlayerNum) hash ^= MinPlayerNum.GetHashCode();
      if (HasMaxPlayerNum) hash ^= MaxPlayerNum.GetHashCode();
      if (HasDelayJoinLevel) hash ^= DelayJoinLevel.GetHashCode();
      if (HasRebuyNum) hash ^= RebuyNum.GetHashCode();
      if (HasAddonRate) hash ^= AddonRate.GetHashCode();
      if (HasBreakTime) hash ^= BreakTime.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasEnsureChips) hash ^= EnsureChips.GetHashCode();
      if (HasHunterReward) hash ^= HunterReward.GetHashCode();
      if (HasRebuyin) hash ^= Rebuyin.GetHashCode();
      if (HasAddonBuyin) hash ^= AddonBuyin.GetHashCode();
      if (HasPercentType) hash ^= PercentType.GetHashCode();
      if (HasGameMode) hash ^= GameMode.GetHashCode();
      if (HasRoomtype) hash ^= Roomtype.GetHashCode();
      if (HasIsSnowballHunter) hash ^= IsSnowballHunter.GetHashCode();
      if (HasSittingOutLevel) hash ^= SittingOutLevel.GetHashCode();
      if (HasIsSatellite) hash ^= IsSatellite.GetHashCode();
      hash ^= rewardItems_.GetHashCode();
      if (HasModuleid) hash ^= Moduleid.GetHashCode();
      if (HasMultiOpid) hash ^= MultiOpid.GetHashCode();
      if (HasCanUse) hash ^= CanUse.GetHashCode();
      if (HasForbiddenChat) hash ^= ForbiddenChat.GetHashCode();
      if (HasEarlyBirdNum) hash ^= EarlyBirdNum.GetHashCode();
      if (HasSuperLeagueid) hash ^= SuperLeagueid.GetHashCode();
      if (HasBreakTimeWait) hash ^= BreakTimeWait.GetHashCode();
      if (HasBreakTimeRest) hash ^= BreakTimeRest.GetHashCode();
      if (HasAddonTimeRest) hash ^= AddonTimeRest.GetHashCode();
      if (HasPasswdLimit) hash ^= PasswdLimit.GetHashCode();
      if (HasIsGroupMtt) hash ^= IsGroupMtt.GetHashCode();
      if (HasGroupOverLevel) hash ^= GroupOverLevel.GetHashCode();
      hash ^= groupMttStartTime_.GetHashCode();
      if (HasIsFreezeOut) hash ^= IsFreezeOut.GetHashCode();
      if (HasSuperLeagueType) hash ^= SuperLeagueType.GetHashCode();
      if (HasChargeRatio) hash ^= ChargeRatio.GetHashCode();
      if (HasRebuyRate) hash ^= RebuyRate.GetHashCode();
      if (HasEarlyBirdDiscount) hash ^= EarlyBirdDiscount.GetHashCode();
      if (HasRewardMode) hash ^= RewardMode.GetHashCode();
      if (HasIsBanPc) hash ^= IsBanPc.GetHashCode();
      if (HasIsCheckMail) hash ^= IsCheckMail.GetHashCode();
      if (HasUpblindTimeAfterRebuyEnded) hash ^= UpblindTimeAfterRebuyEnded.GetHashCode();
      if (HasUpblindTimeAfterFinalTable) hash ^= UpblindTimeAfterFinalTable.GetHashCode();
      if (HasPpstid) hash ^= Ppstid.GetHashCode();
      if (HasForbiddenChatMode) hash ^= ForbiddenChatMode.GetHashCode();
      if (HasSittingOut) hash ^= SittingOut.GetHashCode();
      if (HasIsPpglTryouts) hash ^= IsPpglTryouts.GetHashCode();
      if (HasIsPpglFinal) hash ^= IsPpglFinal.GetHashCode();
      if (ppglSeasonInfo_ != null) hash ^= PpglSeasonInfo.GetHashCode();
      if (HasPpglClubPpchipsRate) hash ^= PpglClubPpchipsRate.GetHashCode();
      hash ^= banClub_.GetHashCode();
      hash ^= banCountry_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomName) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (HasUpblindTime) {
        output.WriteRawTag(16);
        output.WriteInt32(UpblindTime);
      }
      if (HasActionTime) {
        output.WriteRawTag(24);
        output.WriteInt32(ActionTime);
      }
      if (HasBuyin) {
        output.WriteRawTag(32);
        output.WriteInt64(Buyin);
      }
      if (HasBeginChips) {
        output.WriteRawTag(40);
        output.WriteInt64(BeginChips);
      }
      if (HasBlindType) {
        output.WriteRawTag(48);
        output.WriteInt32(BlindType);
      }
      if (HasAuthLimit) {
        output.WriteRawTag(56);
        output.WriteBool(AuthLimit);
      }
      if (HasClubid) {
        output.WriteRawTag(64);
        output.WriteInt32(Clubid);
      }
      if (HasSeatNum) {
        output.WriteRawTag(72);
        output.WriteInt32(SeatNum);
      }
      if (HasCharge) {
        output.WriteRawTag(80);
        output.WriteInt64(Charge);
      }
      if (HasMttStartTime) {
        output.WriteRawTag(88);
        output.WriteInt64(MttStartTime);
      }
      if (HasMinPlayerNum) {
        output.WriteRawTag(96);
        output.WriteInt32(MinPlayerNum);
      }
      if (HasMaxPlayerNum) {
        output.WriteRawTag(104);
        output.WriteInt32(MaxPlayerNum);
      }
      if (HasDelayJoinLevel) {
        output.WriteRawTag(112);
        output.WriteInt32(DelayJoinLevel);
      }
      if (HasRebuyNum) {
        output.WriteRawTag(120);
        output.WriteInt32(RebuyNum);
      }
      if (HasAddonRate) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(AddonRate);
      }
      if (HasBreakTime) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(BreakTime);
      }
      if (HasTimezone) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(Timezone);
      }
      if (HasRoomid) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(Roomid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(Leagueid);
      }
      if (HasEnsureChips) {
        output.WriteRawTag(168, 1);
        output.WriteInt64(EnsureChips);
      }
      if (HasHunterReward) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(HunterReward);
      }
      if (HasRebuyin) {
        output.WriteRawTag(184, 1);
        output.WriteInt64(Rebuyin);
      }
      if (HasAddonBuyin) {
        output.WriteRawTag(192, 1);
        output.WriteInt64(AddonBuyin);
      }
      if (HasPercentType) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) PercentType);
      }
      if (HasGameMode) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) GameMode);
      }
      if (HasRoomtype) {
        output.WriteRawTag(216, 1);
        output.WriteEnum((int) Roomtype);
      }
      if (HasIsSnowballHunter) {
        output.WriteRawTag(224, 1);
        output.WriteBool(IsSnowballHunter);
      }
      if (HasSittingOutLevel) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(SittingOutLevel);
      }
      if (HasIsSatellite) {
        output.WriteRawTag(240, 1);
        output.WriteBool(IsSatellite);
      }
      rewardItems_.WriteTo(output, _repeated_rewardItems_codec);
      if (HasModuleid) {
        output.WriteRawTag(128, 2);
        output.WriteInt64(Moduleid);
      }
      if (HasMultiOpid) {
        output.WriteRawTag(138, 2);
        output.WriteString(MultiOpid);
      }
      if (HasCanUse) {
        output.WriteRawTag(144, 2);
        output.WriteBool(CanUse);
      }
      if (HasForbiddenChat) {
        output.WriteRawTag(152, 2);
        output.WriteBool(ForbiddenChat);
      }
      if (HasEarlyBirdNum) {
        output.WriteRawTag(160, 2);
        output.WriteInt32(EarlyBirdNum);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(168, 2);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasBreakTimeWait) {
        output.WriteRawTag(176, 2);
        output.WriteInt32(BreakTimeWait);
      }
      if (HasBreakTimeRest) {
        output.WriteRawTag(184, 2);
        output.WriteInt32(BreakTimeRest);
      }
      if (HasAddonTimeRest) {
        output.WriteRawTag(192, 2);
        output.WriteInt32(AddonTimeRest);
      }
      if (HasPasswdLimit) {
        output.WriteRawTag(200, 2);
        output.WriteBool(PasswdLimit);
      }
      if (HasIsGroupMtt) {
        output.WriteRawTag(208, 2);
        output.WriteBool(IsGroupMtt);
      }
      if (HasGroupOverLevel) {
        output.WriteRawTag(216, 2);
        output.WriteInt32(GroupOverLevel);
      }
      groupMttStartTime_.WriteTo(output, _repeated_groupMttStartTime_codec);
      if (HasIsFreezeOut) {
        output.WriteRawTag(232, 2);
        output.WriteBool(IsFreezeOut);
      }
      if (HasSuperLeagueType) {
        output.WriteRawTag(240, 2);
        output.WriteInt32(SuperLeagueType);
      }
      if (HasChargeRatio) {
        output.WriteRawTag(248, 2);
        output.WriteInt32(ChargeRatio);
      }
      if (HasRebuyRate) {
        output.WriteRawTag(128, 3);
        output.WriteInt32(RebuyRate);
      }
      if (HasEarlyBirdDiscount) {
        output.WriteRawTag(136, 3);
        output.WriteInt32(EarlyBirdDiscount);
      }
      if (HasRewardMode) {
        output.WriteRawTag(144, 3);
        output.WriteEnum((int) RewardMode);
      }
      if (HasIsBanPc) {
        output.WriteRawTag(152, 3);
        output.WriteBool(IsBanPc);
      }
      if (HasIsCheckMail) {
        output.WriteRawTag(160, 3);
        output.WriteBool(IsCheckMail);
      }
      if (HasUpblindTimeAfterRebuyEnded) {
        output.WriteRawTag(168, 3);
        output.WriteInt32(UpblindTimeAfterRebuyEnded);
      }
      if (HasUpblindTimeAfterFinalTable) {
        output.WriteRawTag(176, 3);
        output.WriteInt32(UpblindTimeAfterFinalTable);
      }
      if (HasPpstid) {
        output.WriteRawTag(184, 3);
        output.WriteInt32(Ppstid);
      }
      if (HasForbiddenChatMode) {
        output.WriteRawTag(192, 3);
        output.WriteInt32(ForbiddenChatMode);
      }
      if (HasSittingOut) {
        output.WriteRawTag(200, 3);
        output.WriteBool(SittingOut);
      }
      if (HasIsPpglTryouts) {
        output.WriteRawTag(208, 3);
        output.WriteBool(IsPpglTryouts);
      }
      if (HasIsPpglFinal) {
        output.WriteRawTag(216, 3);
        output.WriteBool(IsPpglFinal);
      }
      if (ppglSeasonInfo_ != null) {
        output.WriteRawTag(226, 3);
        output.WriteMessage(PpglSeasonInfo);
      }
      if (HasPpglClubPpchipsRate) {
        output.WriteRawTag(232, 3);
        output.WriteInt64(PpglClubPpchipsRate);
      }
      banClub_.WriteTo(output, _repeated_banClub_codec);
      banCountry_.WriteTo(output, _repeated_banCountry_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomName) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (HasUpblindTime) {
        output.WriteRawTag(16);
        output.WriteInt32(UpblindTime);
      }
      if (HasActionTime) {
        output.WriteRawTag(24);
        output.WriteInt32(ActionTime);
      }
      if (HasBuyin) {
        output.WriteRawTag(32);
        output.WriteInt64(Buyin);
      }
      if (HasBeginChips) {
        output.WriteRawTag(40);
        output.WriteInt64(BeginChips);
      }
      if (HasBlindType) {
        output.WriteRawTag(48);
        output.WriteInt32(BlindType);
      }
      if (HasAuthLimit) {
        output.WriteRawTag(56);
        output.WriteBool(AuthLimit);
      }
      if (HasClubid) {
        output.WriteRawTag(64);
        output.WriteInt32(Clubid);
      }
      if (HasSeatNum) {
        output.WriteRawTag(72);
        output.WriteInt32(SeatNum);
      }
      if (HasCharge) {
        output.WriteRawTag(80);
        output.WriteInt64(Charge);
      }
      if (HasMttStartTime) {
        output.WriteRawTag(88);
        output.WriteInt64(MttStartTime);
      }
      if (HasMinPlayerNum) {
        output.WriteRawTag(96);
        output.WriteInt32(MinPlayerNum);
      }
      if (HasMaxPlayerNum) {
        output.WriteRawTag(104);
        output.WriteInt32(MaxPlayerNum);
      }
      if (HasDelayJoinLevel) {
        output.WriteRawTag(112);
        output.WriteInt32(DelayJoinLevel);
      }
      if (HasRebuyNum) {
        output.WriteRawTag(120);
        output.WriteInt32(RebuyNum);
      }
      if (HasAddonRate) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(AddonRate);
      }
      if (HasBreakTime) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(BreakTime);
      }
      if (HasTimezone) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(Timezone);
      }
      if (HasRoomid) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(Roomid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(Leagueid);
      }
      if (HasEnsureChips) {
        output.WriteRawTag(168, 1);
        output.WriteInt64(EnsureChips);
      }
      if (HasHunterReward) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(HunterReward);
      }
      if (HasRebuyin) {
        output.WriteRawTag(184, 1);
        output.WriteInt64(Rebuyin);
      }
      if (HasAddonBuyin) {
        output.WriteRawTag(192, 1);
        output.WriteInt64(AddonBuyin);
      }
      if (HasPercentType) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) PercentType);
      }
      if (HasGameMode) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) GameMode);
      }
      if (HasRoomtype) {
        output.WriteRawTag(216, 1);
        output.WriteEnum((int) Roomtype);
      }
      if (HasIsSnowballHunter) {
        output.WriteRawTag(224, 1);
        output.WriteBool(IsSnowballHunter);
      }
      if (HasSittingOutLevel) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(SittingOutLevel);
      }
      if (HasIsSatellite) {
        output.WriteRawTag(240, 1);
        output.WriteBool(IsSatellite);
      }
      rewardItems_.WriteTo(ref output, _repeated_rewardItems_codec);
      if (HasModuleid) {
        output.WriteRawTag(128, 2);
        output.WriteInt64(Moduleid);
      }
      if (HasMultiOpid) {
        output.WriteRawTag(138, 2);
        output.WriteString(MultiOpid);
      }
      if (HasCanUse) {
        output.WriteRawTag(144, 2);
        output.WriteBool(CanUse);
      }
      if (HasForbiddenChat) {
        output.WriteRawTag(152, 2);
        output.WriteBool(ForbiddenChat);
      }
      if (HasEarlyBirdNum) {
        output.WriteRawTag(160, 2);
        output.WriteInt32(EarlyBirdNum);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(168, 2);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasBreakTimeWait) {
        output.WriteRawTag(176, 2);
        output.WriteInt32(BreakTimeWait);
      }
      if (HasBreakTimeRest) {
        output.WriteRawTag(184, 2);
        output.WriteInt32(BreakTimeRest);
      }
      if (HasAddonTimeRest) {
        output.WriteRawTag(192, 2);
        output.WriteInt32(AddonTimeRest);
      }
      if (HasPasswdLimit) {
        output.WriteRawTag(200, 2);
        output.WriteBool(PasswdLimit);
      }
      if (HasIsGroupMtt) {
        output.WriteRawTag(208, 2);
        output.WriteBool(IsGroupMtt);
      }
      if (HasGroupOverLevel) {
        output.WriteRawTag(216, 2);
        output.WriteInt32(GroupOverLevel);
      }
      groupMttStartTime_.WriteTo(ref output, _repeated_groupMttStartTime_codec);
      if (HasIsFreezeOut) {
        output.WriteRawTag(232, 2);
        output.WriteBool(IsFreezeOut);
      }
      if (HasSuperLeagueType) {
        output.WriteRawTag(240, 2);
        output.WriteInt32(SuperLeagueType);
      }
      if (HasChargeRatio) {
        output.WriteRawTag(248, 2);
        output.WriteInt32(ChargeRatio);
      }
      if (HasRebuyRate) {
        output.WriteRawTag(128, 3);
        output.WriteInt32(RebuyRate);
      }
      if (HasEarlyBirdDiscount) {
        output.WriteRawTag(136, 3);
        output.WriteInt32(EarlyBirdDiscount);
      }
      if (HasRewardMode) {
        output.WriteRawTag(144, 3);
        output.WriteEnum((int) RewardMode);
      }
      if (HasIsBanPc) {
        output.WriteRawTag(152, 3);
        output.WriteBool(IsBanPc);
      }
      if (HasIsCheckMail) {
        output.WriteRawTag(160, 3);
        output.WriteBool(IsCheckMail);
      }
      if (HasUpblindTimeAfterRebuyEnded) {
        output.WriteRawTag(168, 3);
        output.WriteInt32(UpblindTimeAfterRebuyEnded);
      }
      if (HasUpblindTimeAfterFinalTable) {
        output.WriteRawTag(176, 3);
        output.WriteInt32(UpblindTimeAfterFinalTable);
      }
      if (HasPpstid) {
        output.WriteRawTag(184, 3);
        output.WriteInt32(Ppstid);
      }
      if (HasForbiddenChatMode) {
        output.WriteRawTag(192, 3);
        output.WriteInt32(ForbiddenChatMode);
      }
      if (HasSittingOut) {
        output.WriteRawTag(200, 3);
        output.WriteBool(SittingOut);
      }
      if (HasIsPpglTryouts) {
        output.WriteRawTag(208, 3);
        output.WriteBool(IsPpglTryouts);
      }
      if (HasIsPpglFinal) {
        output.WriteRawTag(216, 3);
        output.WriteBool(IsPpglFinal);
      }
      if (ppglSeasonInfo_ != null) {
        output.WriteRawTag(226, 3);
        output.WriteMessage(PpglSeasonInfo);
      }
      if (HasPpglClubPpchipsRate) {
        output.WriteRawTag(232, 3);
        output.WriteInt64(PpglClubPpchipsRate);
      }
      banClub_.WriteTo(ref output, _repeated_banClub_codec);
      banCountry_.WriteTo(ref output, _repeated_banCountry_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (HasUpblindTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UpblindTime);
      }
      if (HasActionTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionTime);
      }
      if (HasBuyin) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Buyin);
      }
      if (HasBeginChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BeginChips);
      }
      if (HasBlindType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BlindType);
      }
      if (HasAuthLimit) {
        size += 1 + 1;
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasSeatNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SeatNum);
      }
      if (HasCharge) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Charge);
      }
      if (HasTimezone) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Timezone);
      }
      if (HasMttStartTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MttStartTime);
      }
      if (HasMinPlayerNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinPlayerNum);
      }
      if (HasMaxPlayerNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPlayerNum);
      }
      if (HasDelayJoinLevel) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DelayJoinLevel);
      }
      if (HasRebuyNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RebuyNum);
      }
      if (HasAddonRate) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(AddonRate);
      }
      if (HasBreakTime) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BreakTime);
      }
      if (HasRoomid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasLeagueid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasEnsureChips) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(EnsureChips);
      }
      if (HasHunterReward) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(HunterReward);
      }
      if (HasRebuyin) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Rebuyin);
      }
      if (HasAddonBuyin) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(AddonBuyin);
      }
      if (HasPercentType) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PercentType);
      }
      if (HasGameMode) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
      }
      if (HasRoomtype) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Roomtype);
      }
      if (HasIsSnowballHunter) {
        size += 2 + 1;
      }
      if (HasSittingOutLevel) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SittingOutLevel);
      }
      if (HasIsSatellite) {
        size += 2 + 1;
      }
      size += rewardItems_.CalculateSize(_repeated_rewardItems_codec);
      if (HasModuleid) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Moduleid);
      }
      if (HasMultiOpid) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MultiOpid);
      }
      if (HasCanUse) {
        size += 2 + 1;
      }
      if (HasForbiddenChat) {
        size += 2 + 1;
      }
      if (HasEarlyBirdNum) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EarlyBirdNum);
      }
      if (HasSuperLeagueid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueid);
      }
      if (HasBreakTimeWait) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BreakTimeWait);
      }
      if (HasBreakTimeRest) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BreakTimeRest);
      }
      if (HasAddonTimeRest) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AddonTimeRest);
      }
      if (HasPasswdLimit) {
        size += 2 + 1;
      }
      if (HasIsGroupMtt) {
        size += 2 + 1;
      }
      if (HasGroupOverLevel) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(GroupOverLevel);
      }
      size += groupMttStartTime_.CalculateSize(_repeated_groupMttStartTime_codec);
      if (HasIsFreezeOut) {
        size += 2 + 1;
      }
      if (HasSuperLeagueType) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueType);
      }
      if (HasChargeRatio) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ChargeRatio);
      }
      if (HasRebuyRate) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RebuyRate);
      }
      if (HasEarlyBirdDiscount) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EarlyBirdDiscount);
      }
      if (HasRewardMode) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) RewardMode);
      }
      if (HasIsBanPc) {
        size += 2 + 1;
      }
      if (HasIsCheckMail) {
        size += 2 + 1;
      }
      if (HasUpblindTimeAfterRebuyEnded) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UpblindTimeAfterRebuyEnded);
      }
      if (HasUpblindTimeAfterFinalTable) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UpblindTimeAfterFinalTable);
      }
      if (HasPpstid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Ppstid);
      }
      if (HasForbiddenChatMode) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ForbiddenChatMode);
      }
      if (HasSittingOut) {
        size += 2 + 1;
      }
      if (HasIsPpglTryouts) {
        size += 2 + 1;
      }
      if (HasIsPpglFinal) {
        size += 2 + 1;
      }
      if (ppglSeasonInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PpglSeasonInfo);
      }
      if (HasPpglClubPpchipsRate) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(PpglClubPpchipsRate);
      }
      size += banClub_.CalculateSize(_repeated_banClub_codec);
      size += banCountry_.CalculateSize(_repeated_banCountry_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateMttRoomREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomName) {
        RoomName = other.RoomName;
      }
      if (other.HasUpblindTime) {
        UpblindTime = other.UpblindTime;
      }
      if (other.HasActionTime) {
        ActionTime = other.ActionTime;
      }
      if (other.HasBuyin) {
        Buyin = other.Buyin;
      }
      if (other.HasBeginChips) {
        BeginChips = other.BeginChips;
      }
      if (other.HasBlindType) {
        BlindType = other.BlindType;
      }
      if (other.HasAuthLimit) {
        AuthLimit = other.AuthLimit;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasSeatNum) {
        SeatNum = other.SeatNum;
      }
      if (other.HasCharge) {
        Charge = other.Charge;
      }
      if (other.HasTimezone) {
        Timezone = other.Timezone;
      }
      if (other.HasMttStartTime) {
        MttStartTime = other.MttStartTime;
      }
      if (other.HasMinPlayerNum) {
        MinPlayerNum = other.MinPlayerNum;
      }
      if (other.HasMaxPlayerNum) {
        MaxPlayerNum = other.MaxPlayerNum;
      }
      if (other.HasDelayJoinLevel) {
        DelayJoinLevel = other.DelayJoinLevel;
      }
      if (other.HasRebuyNum) {
        RebuyNum = other.RebuyNum;
      }
      if (other.HasAddonRate) {
        AddonRate = other.AddonRate;
      }
      if (other.HasBreakTime) {
        BreakTime = other.BreakTime;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasEnsureChips) {
        EnsureChips = other.EnsureChips;
      }
      if (other.HasHunterReward) {
        HunterReward = other.HunterReward;
      }
      if (other.HasRebuyin) {
        Rebuyin = other.Rebuyin;
      }
      if (other.HasAddonBuyin) {
        AddonBuyin = other.AddonBuyin;
      }
      if (other.HasPercentType) {
        PercentType = other.PercentType;
      }
      if (other.HasGameMode) {
        GameMode = other.GameMode;
      }
      if (other.HasRoomtype) {
        Roomtype = other.Roomtype;
      }
      if (other.HasIsSnowballHunter) {
        IsSnowballHunter = other.IsSnowballHunter;
      }
      if (other.HasSittingOutLevel) {
        SittingOutLevel = other.SittingOutLevel;
      }
      if (other.HasIsSatellite) {
        IsSatellite = other.IsSatellite;
      }
      rewardItems_.Add(other.rewardItems_);
      if (other.HasModuleid) {
        Moduleid = other.Moduleid;
      }
      if (other.HasMultiOpid) {
        MultiOpid = other.MultiOpid;
      }
      if (other.HasCanUse) {
        CanUse = other.CanUse;
      }
      if (other.HasForbiddenChat) {
        ForbiddenChat = other.ForbiddenChat;
      }
      if (other.HasEarlyBirdNum) {
        EarlyBirdNum = other.EarlyBirdNum;
      }
      if (other.HasSuperLeagueid) {
        SuperLeagueid = other.SuperLeagueid;
      }
      if (other.HasBreakTimeWait) {
        BreakTimeWait = other.BreakTimeWait;
      }
      if (other.HasBreakTimeRest) {
        BreakTimeRest = other.BreakTimeRest;
      }
      if (other.HasAddonTimeRest) {
        AddonTimeRest = other.AddonTimeRest;
      }
      if (other.HasPasswdLimit) {
        PasswdLimit = other.PasswdLimit;
      }
      if (other.HasIsGroupMtt) {
        IsGroupMtt = other.IsGroupMtt;
      }
      if (other.HasGroupOverLevel) {
        GroupOverLevel = other.GroupOverLevel;
      }
      groupMttStartTime_.Add(other.groupMttStartTime_);
      if (other.HasIsFreezeOut) {
        IsFreezeOut = other.IsFreezeOut;
      }
      if (other.HasSuperLeagueType) {
        SuperLeagueType = other.SuperLeagueType;
      }
      if (other.HasChargeRatio) {
        ChargeRatio = other.ChargeRatio;
      }
      if (other.HasRebuyRate) {
        RebuyRate = other.RebuyRate;
      }
      if (other.HasEarlyBirdDiscount) {
        EarlyBirdDiscount = other.EarlyBirdDiscount;
      }
      if (other.HasRewardMode) {
        RewardMode = other.RewardMode;
      }
      if (other.HasIsBanPc) {
        IsBanPc = other.IsBanPc;
      }
      if (other.HasIsCheckMail) {
        IsCheckMail = other.IsCheckMail;
      }
      if (other.HasUpblindTimeAfterRebuyEnded) {
        UpblindTimeAfterRebuyEnded = other.UpblindTimeAfterRebuyEnded;
      }
      if (other.HasUpblindTimeAfterFinalTable) {
        UpblindTimeAfterFinalTable = other.UpblindTimeAfterFinalTable;
      }
      if (other.HasPpstid) {
        Ppstid = other.Ppstid;
      }
      if (other.HasForbiddenChatMode) {
        ForbiddenChatMode = other.ForbiddenChatMode;
      }
      if (other.HasSittingOut) {
        SittingOut = other.SittingOut;
      }
      if (other.HasIsPpglTryouts) {
        IsPpglTryouts = other.IsPpglTryouts;
      }
      if (other.HasIsPpglFinal) {
        IsPpglFinal = other.IsPpglFinal;
      }
      if (other.ppglSeasonInfo_ != null) {
        if (ppglSeasonInfo_ == null) {
          PpglSeasonInfo = new global::Texas.Protocol.PPGLSeasonInfo();
        }
        PpglSeasonInfo.MergeFrom(other.PpglSeasonInfo);
      }
      if (other.HasPpglClubPpchipsRate) {
        PpglClubPpchipsRate = other.PpglClubPpchipsRate;
      }
      banClub_.Add(other.banClub_);
      banCountry_.Add(other.banCountry_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 16: {
            UpblindTime = input.ReadInt32();
            break;
          }
          case 24: {
            ActionTime = input.ReadInt32();
            break;
          }
          case 32: {
            Buyin = input.ReadInt64();
            break;
          }
          case 40: {
            BeginChips = input.ReadInt64();
            break;
          }
          case 48: {
            BlindType = input.ReadInt32();
            break;
          }
          case 56: {
            AuthLimit = input.ReadBool();
            break;
          }
          case 64: {
            Clubid = input.ReadInt32();
            break;
          }
          case 72: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 80: {
            Charge = input.ReadInt64();
            break;
          }
          case 88: {
            MttStartTime = input.ReadInt64();
            break;
          }
          case 96: {
            MinPlayerNum = input.ReadInt32();
            break;
          }
          case 104: {
            MaxPlayerNum = input.ReadInt32();
            break;
          }
          case 112: {
            DelayJoinLevel = input.ReadInt32();
            break;
          }
          case 120: {
            RebuyNum = input.ReadInt32();
            break;
          }
          case 128: {
            AddonRate = input.ReadInt64();
            break;
          }
          case 136: {
            BreakTime = input.ReadInt32();
            break;
          }
          case 144: {
            Timezone = input.ReadInt32();
            break;
          }
          case 152: {
            Roomid = input.ReadInt32();
            break;
          }
          case 160: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 168: {
            EnsureChips = input.ReadInt64();
            break;
          }
          case 176: {
            HunterReward = input.ReadInt64();
            break;
          }
          case 184: {
            Rebuyin = input.ReadInt64();
            break;
          }
          case 192: {
            AddonBuyin = input.ReadInt64();
            break;
          }
          case 200: {
            PercentType = (global::Texas.Protocol.MttRewardPercentType) input.ReadEnum();
            break;
          }
          case 208: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 216: {
            Roomtype = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 224: {
            IsSnowballHunter = input.ReadBool();
            break;
          }
          case 232: {
            SittingOutLevel = input.ReadInt32();
            break;
          }
          case 240: {
            IsSatellite = input.ReadBool();
            break;
          }
          case 250: {
            rewardItems_.AddEntriesFrom(input, _repeated_rewardItems_codec);
            break;
          }
          case 256: {
            Moduleid = input.ReadInt64();
            break;
          }
          case 266: {
            MultiOpid = input.ReadString();
            break;
          }
          case 272: {
            CanUse = input.ReadBool();
            break;
          }
          case 280: {
            ForbiddenChat = input.ReadBool();
            break;
          }
          case 288: {
            EarlyBirdNum = input.ReadInt32();
            break;
          }
          case 296: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 304: {
            BreakTimeWait = input.ReadInt32();
            break;
          }
          case 312: {
            BreakTimeRest = input.ReadInt32();
            break;
          }
          case 320: {
            AddonTimeRest = input.ReadInt32();
            break;
          }
          case 328: {
            PasswdLimit = input.ReadBool();
            break;
          }
          case 336: {
            IsGroupMtt = input.ReadBool();
            break;
          }
          case 344: {
            GroupOverLevel = input.ReadInt32();
            break;
          }
          case 354:
          case 352: {
            groupMttStartTime_.AddEntriesFrom(input, _repeated_groupMttStartTime_codec);
            break;
          }
          case 360: {
            IsFreezeOut = input.ReadBool();
            break;
          }
          case 368: {
            SuperLeagueType = input.ReadInt32();
            break;
          }
          case 376: {
            ChargeRatio = input.ReadInt32();
            break;
          }
          case 384: {
            RebuyRate = input.ReadInt32();
            break;
          }
          case 392: {
            EarlyBirdDiscount = input.ReadInt32();
            break;
          }
          case 400: {
            RewardMode = (global::Texas.Protocol.MttRewardMode) input.ReadEnum();
            break;
          }
          case 408: {
            IsBanPc = input.ReadBool();
            break;
          }
          case 416: {
            IsCheckMail = input.ReadBool();
            break;
          }
          case 424: {
            UpblindTimeAfterRebuyEnded = input.ReadInt32();
            break;
          }
          case 432: {
            UpblindTimeAfterFinalTable = input.ReadInt32();
            break;
          }
          case 440: {
            Ppstid = input.ReadInt32();
            break;
          }
          case 448: {
            ForbiddenChatMode = input.ReadInt32();
            break;
          }
          case 456: {
            SittingOut = input.ReadBool();
            break;
          }
          case 464: {
            IsPpglTryouts = input.ReadBool();
            break;
          }
          case 472: {
            IsPpglFinal = input.ReadBool();
            break;
          }
          case 482: {
            if (ppglSeasonInfo_ == null) {
              PpglSeasonInfo = new global::Texas.Protocol.PPGLSeasonInfo();
            }
            input.ReadMessage(PpglSeasonInfo);
            break;
          }
          case 488: {
            PpglClubPpchipsRate = input.ReadInt64();
            break;
          }
          case 498:
          case 496: {
            banClub_.AddEntriesFrom(input, _repeated_banClub_codec);
            break;
          }
          case 506: {
            banCountry_.AddEntriesFrom(input, _repeated_banCountry_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 16: {
            UpblindTime = input.ReadInt32();
            break;
          }
          case 24: {
            ActionTime = input.ReadInt32();
            break;
          }
          case 32: {
            Buyin = input.ReadInt64();
            break;
          }
          case 40: {
            BeginChips = input.ReadInt64();
            break;
          }
          case 48: {
            BlindType = input.ReadInt32();
            break;
          }
          case 56: {
            AuthLimit = input.ReadBool();
            break;
          }
          case 64: {
            Clubid = input.ReadInt32();
            break;
          }
          case 72: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 80: {
            Charge = input.ReadInt64();
            break;
          }
          case 88: {
            MttStartTime = input.ReadInt64();
            break;
          }
          case 96: {
            MinPlayerNum = input.ReadInt32();
            break;
          }
          case 104: {
            MaxPlayerNum = input.ReadInt32();
            break;
          }
          case 112: {
            DelayJoinLevel = input.ReadInt32();
            break;
          }
          case 120: {
            RebuyNum = input.ReadInt32();
            break;
          }
          case 128: {
            AddonRate = input.ReadInt64();
            break;
          }
          case 136: {
            BreakTime = input.ReadInt32();
            break;
          }
          case 144: {
            Timezone = input.ReadInt32();
            break;
          }
          case 152: {
            Roomid = input.ReadInt32();
            break;
          }
          case 160: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 168: {
            EnsureChips = input.ReadInt64();
            break;
          }
          case 176: {
            HunterReward = input.ReadInt64();
            break;
          }
          case 184: {
            Rebuyin = input.ReadInt64();
            break;
          }
          case 192: {
            AddonBuyin = input.ReadInt64();
            break;
          }
          case 200: {
            PercentType = (global::Texas.Protocol.MttRewardPercentType) input.ReadEnum();
            break;
          }
          case 208: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 216: {
            Roomtype = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 224: {
            IsSnowballHunter = input.ReadBool();
            break;
          }
          case 232: {
            SittingOutLevel = input.ReadInt32();
            break;
          }
          case 240: {
            IsSatellite = input.ReadBool();
            break;
          }
          case 250: {
            rewardItems_.AddEntriesFrom(ref input, _repeated_rewardItems_codec);
            break;
          }
          case 256: {
            Moduleid = input.ReadInt64();
            break;
          }
          case 266: {
            MultiOpid = input.ReadString();
            break;
          }
          case 272: {
            CanUse = input.ReadBool();
            break;
          }
          case 280: {
            ForbiddenChat = input.ReadBool();
            break;
          }
          case 288: {
            EarlyBirdNum = input.ReadInt32();
            break;
          }
          case 296: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 304: {
            BreakTimeWait = input.ReadInt32();
            break;
          }
          case 312: {
            BreakTimeRest = input.ReadInt32();
            break;
          }
          case 320: {
            AddonTimeRest = input.ReadInt32();
            break;
          }
          case 328: {
            PasswdLimit = input.ReadBool();
            break;
          }
          case 336: {
            IsGroupMtt = input.ReadBool();
            break;
          }
          case 344: {
            GroupOverLevel = input.ReadInt32();
            break;
          }
          case 354:
          case 352: {
            groupMttStartTime_.AddEntriesFrom(ref input, _repeated_groupMttStartTime_codec);
            break;
          }
          case 360: {
            IsFreezeOut = input.ReadBool();
            break;
          }
          case 368: {
            SuperLeagueType = input.ReadInt32();
            break;
          }
          case 376: {
            ChargeRatio = input.ReadInt32();
            break;
          }
          case 384: {
            RebuyRate = input.ReadInt32();
            break;
          }
          case 392: {
            EarlyBirdDiscount = input.ReadInt32();
            break;
          }
          case 400: {
            RewardMode = (global::Texas.Protocol.MttRewardMode) input.ReadEnum();
            break;
          }
          case 408: {
            IsBanPc = input.ReadBool();
            break;
          }
          case 416: {
            IsCheckMail = input.ReadBool();
            break;
          }
          case 424: {
            UpblindTimeAfterRebuyEnded = input.ReadInt32();
            break;
          }
          case 432: {
            UpblindTimeAfterFinalTable = input.ReadInt32();
            break;
          }
          case 440: {
            Ppstid = input.ReadInt32();
            break;
          }
          case 448: {
            ForbiddenChatMode = input.ReadInt32();
            break;
          }
          case 456: {
            SittingOut = input.ReadBool();
            break;
          }
          case 464: {
            IsPpglTryouts = input.ReadBool();
            break;
          }
          case 472: {
            IsPpglFinal = input.ReadBool();
            break;
          }
          case 482: {
            if (ppglSeasonInfo_ == null) {
              PpglSeasonInfo = new global::Texas.Protocol.PPGLSeasonInfo();
            }
            input.ReadMessage(PpglSeasonInfo);
            break;
          }
          case 488: {
            PpglClubPpchipsRate = input.ReadInt64();
            break;
          }
          case 498:
          case 496: {
            banClub_.AddEntriesFrom(ref input, _repeated_banClub_codec);
            break;
          }
          case 506: {
            banCountry_.AddEntriesFrom(ref input, _repeated_banCountry_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// -3 停服 不能创建  -4 钻石不足 俱乐部过期   -5 pp币不足 -6 未灰度到 -7 猎人赛不能开免费赛
  /// -9:猎人赛无法开启卫星赛  -10:付費賽不能踢除尚未入桌的玩家
  /// -100: 早鸟无法开启猎人赛
  /// -101: 早鸟无法开启授权
  /// -102: 开启密码桌失败
  /// -200: ppst沒有權限
  /// </summary>
  public sealed partial class CreateMttRoomRSP : pb::IMessage<CreateMttRoomRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateMttRoomRSP> _parser = new pb::MessageParser<CreateMttRoomRSP>(() => new CreateMttRoomRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateMttRoomRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateMttRoomRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateMttRoomRSP(CreateMttRoomRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      roomid_ = other.roomid_;
      isGroupMtt_ = other.isGroupMtt_;
      clubid_ = other.clubid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateMttRoomRSP Clone() {
      return new CreateMttRoomRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 2;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 2) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "is_group_mtt" field.</summary>
    public const int IsGroupMttFieldNumber = 3;
    private readonly static bool IsGroupMttDefaultValue = false;

    private bool isGroupMtt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsGroupMtt {
      get { if ((_hasBits0 & 4) != 0) { return isGroupMtt_; } else { return IsGroupMttDefaultValue; } }
      set {
        _hasBits0 |= 4;
        isGroupMtt_ = value;
      }
    }
    /// <summary>Gets whether the "is_group_mtt" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsGroupMtt {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "is_group_mtt" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsGroupMtt() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 4;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 8) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateMttRoomRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateMttRoomRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Roomid != other.Roomid) return false;
      if (IsGroupMtt != other.IsGroupMtt) return false;
      if (Clubid != other.Clubid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasIsGroupMtt) hash ^= IsGroupMtt.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(Roomid);
      }
      if (HasIsGroupMtt) {
        output.WriteRawTag(24);
        output.WriteBool(IsGroupMtt);
      }
      if (HasClubid) {
        output.WriteRawTag(32);
        output.WriteInt32(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(Roomid);
      }
      if (HasIsGroupMtt) {
        output.WriteRawTag(24);
        output.WriteBool(IsGroupMtt);
      }
      if (HasClubid) {
        output.WriteRawTag(32);
        output.WriteInt32(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasIsGroupMtt) {
        size += 1 + 1;
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateMttRoomRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasIsGroupMtt) {
        IsGroupMtt = other.IsGroupMtt;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Roomid = input.ReadInt32();
            break;
          }
          case 24: {
            IsGroupMtt = input.ReadBool();
            break;
          }
          case 32: {
            Clubid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Roomid = input.ReadInt32();
            break;
          }
          case 24: {
            IsGroupMtt = input.ReadBool();
            break;
          }
          case 32: {
            Clubid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///房间外mtt信息请求
  /// </summary>
  public sealed partial class MttInfoREQ : pb::IMessage<MttInfoREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttInfoREQ> _parser = new pb::MessageParser<MttInfoREQ>(() => new MttInfoREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttInfoREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttInfoREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttInfoREQ(MttInfoREQ other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      uid_ = other.uid_;
      clubid_ = other.clubid_;
      fromType_ = other.fromType_;
      leagueid_ = other.leagueid_;
      superLeagueid_ = other.superLeagueid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttInfoREQ Clone() {
      return new MttInfoREQ(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 1) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 2) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 3;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 4) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "from_type" field.</summary>
    public const int FromTypeFieldNumber = 4;
    private readonly static int FromTypeDefaultValue = 0;

    private int fromType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FromType {
      get { if ((_hasBits0 & 8) != 0) { return fromType_; } else { return FromTypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        fromType_ = value;
      }
    }
    /// <summary>Gets whether the "from_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFromType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "from_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFromType() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 5;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    /// <summary>
    ///ppst取得轉換幣值使用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 16) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "super_leagueid" field.</summary>
    public const int SuperLeagueidFieldNumber = 6;
    private readonly static int SuperLeagueidDefaultValue = 0;

    private int superLeagueid_;
    /// <summary>
    ///ppst取得轉換幣值使用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueid {
      get { if ((_hasBits0 & 32) != 0) { return superLeagueid_; } else { return SuperLeagueidDefaultValue; } }
      set {
        _hasBits0 |= 32;
        superLeagueid_ = value;
      }
    }
    /// <summary>Gets whether the "super_leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueid {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "super_leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueid() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttInfoREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttInfoREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (Uid != other.Uid) return false;
      if (Clubid != other.Clubid) return false;
      if (FromType != other.FromType) return false;
      if (Leagueid != other.Leagueid) return false;
      if (SuperLeagueid != other.SuperLeagueid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasFromType) hash ^= FromType.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasSuperLeagueid) hash ^= SuperLeagueid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(24);
        output.WriteInt32(Clubid);
      }
      if (HasFromType) {
        output.WriteRawTag(32);
        output.WriteInt32(FromType);
      }
      if (HasLeagueid) {
        output.WriteRawTag(40);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(48);
        output.WriteInt32(SuperLeagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(24);
        output.WriteInt32(Clubid);
      }
      if (HasFromType) {
        output.WriteRawTag(32);
        output.WriteInt32(FromType);
      }
      if (HasLeagueid) {
        output.WriteRawTag(40);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(48);
        output.WriteInt32(SuperLeagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasFromType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FromType);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasSuperLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttInfoREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasFromType) {
        FromType = other.FromType;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasSuperLeagueid) {
        SuperLeagueid = other.SuperLeagueid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
          case 24: {
            Clubid = input.ReadInt32();
            break;
          }
          case 32: {
            FromType = input.ReadInt32();
            break;
          }
          case 40: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 48: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
          case 24: {
            Clubid = input.ReadInt32();
            break;
          }
          case 32: {
            FromType = input.ReadInt32();
            break;
          }
          case 40: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 48: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttInfoRSP : pb::IMessage<MttInfoRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttInfoRSP> _parser = new pb::MessageParser<MttInfoRSP>(() => new MttInfoRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttInfoRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttInfoRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttInfoRSP(MttInfoRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      sngInfo_ = other.sngInfo_ != null ? other.sngInfo_.Clone() : null;
      mttInfo_ = other.mttInfo_ != null ? other.mttInfo_.Clone() : null;
      fromType_ = other.fromType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttInfoRSP Clone() {
      return new MttInfoRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// -1 房间不存在
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "sng_info" field.</summary>
    public const int SngInfoFieldNumber = 2;
    private global::Texas.Protocol.SngRoomInfo sngInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.SngRoomInfo SngInfo {
      get { return sngInfo_; }
      set {
        sngInfo_ = value;
      }
    }

    /// <summary>Field number for the "mtt_info" field.</summary>
    public const int MttInfoFieldNumber = 3;
    private global::Texas.Protocol.MttRoomInfo mttInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.MttRoomInfo MttInfo {
      get { return mttInfo_; }
      set {
        mttInfo_ = value;
      }
    }

    /// <summary>Field number for the "from_type" field.</summary>
    public const int FromTypeFieldNumber = 4;
    private readonly static int FromTypeDefaultValue = 0;

    private int fromType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FromType {
      get { if ((_hasBits0 & 2) != 0) { return fromType_; } else { return FromTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        fromType_ = value;
      }
    }
    /// <summary>Gets whether the "from_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFromType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "from_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFromType() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttInfoRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttInfoRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(SngInfo, other.SngInfo)) return false;
      if (!object.Equals(MttInfo, other.MttInfo)) return false;
      if (FromType != other.FromType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (sngInfo_ != null) hash ^= SngInfo.GetHashCode();
      if (mttInfo_ != null) hash ^= MttInfo.GetHashCode();
      if (HasFromType) hash ^= FromType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (sngInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SngInfo);
      }
      if (mttInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MttInfo);
      }
      if (HasFromType) {
        output.WriteRawTag(32);
        output.WriteInt32(FromType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (sngInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SngInfo);
      }
      if (mttInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MttInfo);
      }
      if (HasFromType) {
        output.WriteRawTag(32);
        output.WriteInt32(FromType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (sngInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SngInfo);
      }
      if (mttInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MttInfo);
      }
      if (HasFromType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FromType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttInfoRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.sngInfo_ != null) {
        if (sngInfo_ == null) {
          SngInfo = new global::Texas.Protocol.SngRoomInfo();
        }
        SngInfo.MergeFrom(other.SngInfo);
      }
      if (other.mttInfo_ != null) {
        if (mttInfo_ == null) {
          MttInfo = new global::Texas.Protocol.MttRoomInfo();
        }
        MttInfo.MergeFrom(other.MttInfo);
      }
      if (other.HasFromType) {
        FromType = other.FromType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (sngInfo_ == null) {
              SngInfo = new global::Texas.Protocol.SngRoomInfo();
            }
            input.ReadMessage(SngInfo);
            break;
          }
          case 26: {
            if (mttInfo_ == null) {
              MttInfo = new global::Texas.Protocol.MttRoomInfo();
            }
            input.ReadMessage(MttInfo);
            break;
          }
          case 32: {
            FromType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (sngInfo_ == null) {
              SngInfo = new global::Texas.Protocol.SngRoomInfo();
            }
            input.ReadMessage(SngInfo);
            break;
          }
          case 26: {
            if (mttInfo_ == null) {
              MttInfo = new global::Texas.Protocol.MttRoomInfo();
            }
            input.ReadMessage(MttInfo);
            break;
          }
          case 32: {
            FromType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttPlayerREQ : pb::IMessage<MttPlayerREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttPlayerREQ> _parser = new pb::MessageParser<MttPlayerREQ>(() => new MttPlayerREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttPlayerREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttPlayerREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttPlayerREQ(MttPlayerREQ other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      uid_ = other.uid_;
      startIndex_ = other.startIndex_;
      amount_ = other.amount_;
      supportGroup_ = other.supportGroup_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttPlayerREQ Clone() {
      return new MttPlayerREQ(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 1) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    /// <summary>
    /// 服务器内部使用 不需要填
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 2) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "start_index" field.</summary>
    public const int StartIndexFieldNumber = 3;
    private readonly static int StartIndexDefaultValue = 0;

    private int startIndex_;
    /// <summary>
    /// 请求从start_index开始的amount条记录,[start_index, start_index+amount),从1开始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartIndex {
      get { if ((_hasBits0 & 4) != 0) { return startIndex_; } else { return StartIndexDefaultValue; } }
      set {
        _hasBits0 |= 4;
        startIndex_ = value;
      }
    }
    /// <summary>Gets whether the "start_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartIndex {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "start_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartIndex() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private readonly static int AmountDefaultValue = 0;

    private int amount_;
    /// <summary>
    /// -1:返回start_index后的所有记录
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Amount {
      get { if ((_hasBits0 & 8) != 0) { return amount_; } else { return AmountDefaultValue; } }
      set {
        _hasBits0 |= 8;
        amount_ = value;
      }
    }
    /// <summary>Gets whether the "amount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAmount {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "amount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAmount() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "support_group" field.</summary>
    public const int SupportGroupFieldNumber = 5;
    private readonly static bool SupportGroupDefaultValue = false;

    private bool supportGroup_;
    /// <summary>
    ///是否支持分组赛新的显示方式
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SupportGroup {
      get { if ((_hasBits0 & 16) != 0) { return supportGroup_; } else { return SupportGroupDefaultValue; } }
      set {
        _hasBits0 |= 16;
        supportGroup_ = value;
      }
    }
    /// <summary>Gets whether the "support_group" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSupportGroup {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "support_group" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSupportGroup() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttPlayerREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttPlayerREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (Uid != other.Uid) return false;
      if (StartIndex != other.StartIndex) return false;
      if (Amount != other.Amount) return false;
      if (SupportGroup != other.SupportGroup) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasStartIndex) hash ^= StartIndex.GetHashCode();
      if (HasAmount) hash ^= Amount.GetHashCode();
      if (HasSupportGroup) hash ^= SupportGroup.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (HasStartIndex) {
        output.WriteRawTag(24);
        output.WriteInt32(StartIndex);
      }
      if (HasAmount) {
        output.WriteRawTag(32);
        output.WriteInt32(Amount);
      }
      if (HasSupportGroup) {
        output.WriteRawTag(40);
        output.WriteBool(SupportGroup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (HasStartIndex) {
        output.WriteRawTag(24);
        output.WriteInt32(StartIndex);
      }
      if (HasAmount) {
        output.WriteRawTag(32);
        output.WriteInt32(Amount);
      }
      if (HasSupportGroup) {
        output.WriteRawTag(40);
        output.WriteBool(SupportGroup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasStartIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (HasAmount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
      }
      if (HasSupportGroup) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttPlayerREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasStartIndex) {
        StartIndex = other.StartIndex;
      }
      if (other.HasAmount) {
        Amount = other.Amount;
      }
      if (other.HasSupportGroup) {
        SupportGroup = other.SupportGroup;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
          case 24: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 32: {
            Amount = input.ReadInt32();
            break;
          }
          case 40: {
            SupportGroup = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
          case 24: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 32: {
            Amount = input.ReadInt32();
            break;
          }
          case 40: {
            SupportGroup = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttPlayerInfo : pb::IMessage<MttPlayerInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttPlayerInfo> _parser = new pb::MessageParser<MttPlayerInfo>(() => new MttPlayerInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttPlayerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttPlayerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttPlayerInfo(MttPlayerInfo other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      name_ = other.name_;
      icon_ = other.icon_;
      type_ = other.type_;
      isAuth_ = other.isAuth_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttPlayerInfo Clone() {
      return new MttPlayerInfo(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 3;
    private readonly static string IconDefaultValue = "";

    private string icon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_ ?? IconDefaultValue; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIcon {
      get { return icon_ != null; }
    }
    /// <summary>Clears the value of the "icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIcon() {
      icon_ = null;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    ///1 报名  2 rebuy  3 addon  4 延迟报名  5 rebuy报名 6 early bird
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 2) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "is_auth" field.</summary>
    public const int IsAuthFieldNumber = 5;
    private readonly static bool IsAuthDefaultValue = false;

    private bool isAuth_;
    /// <summary>
    ///是否已经被授权
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAuth {
      get { if ((_hasBits0 & 4) != 0) { return isAuth_; } else { return IsAuthDefaultValue; } }
      set {
        _hasBits0 |= 4;
        isAuth_ = value;
      }
    }
    /// <summary>Gets whether the "is_auth" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsAuth {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "is_auth" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsAuth() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttPlayerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttPlayerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Name != other.Name) return false;
      if (Icon != other.Icon) return false;
      if (Type != other.Type) return false;
      if (IsAuth != other.IsAuth) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasIcon) hash ^= Icon.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasIsAuth) hash ^= IsAuth.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasIcon) {
        output.WriteRawTag(26);
        output.WriteString(Icon);
      }
      if (HasType) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (HasIsAuth) {
        output.WriteRawTag(40);
        output.WriteBool(IsAuth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasIcon) {
        output.WriteRawTag(26);
        output.WriteString(Icon);
      }
      if (HasType) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (HasIsAuth) {
        output.WriteRawTag(40);
        output.WriteBool(IsAuth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasIcon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasIsAuth) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttPlayerInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasIcon) {
        Icon = other.Icon;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasIsAuth) {
        IsAuth = other.IsAuth;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Icon = input.ReadString();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
          case 40: {
            IsAuth = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Icon = input.ReadString();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
          case 40: {
            IsAuth = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PromotionPlayerInfo : pb::IMessage<PromotionPlayerInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PromotionPlayerInfo> _parser = new pb::MessageParser<PromotionPlayerInfo>(() => new PromotionPlayerInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PromotionPlayerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PromotionPlayerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PromotionPlayerInfo(PromotionPlayerInfo other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      name_ = other.name_;
      icon_ = other.icon_;
      chips_ = other.chips_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PromotionPlayerInfo Clone() {
      return new PromotionPlayerInfo(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 3;
    private readonly static string IconDefaultValue = "";

    private string icon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_ ?? IconDefaultValue; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIcon {
      get { return icon_ != null; }
    }
    /// <summary>Clears the value of the "icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIcon() {
      icon_ = null;
    }

    /// <summary>Field number for the "chips" field.</summary>
    public const int ChipsFieldNumber = 4;
    private readonly static long ChipsDefaultValue = 0L;

    private long chips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Chips {
      get { if ((_hasBits0 & 2) != 0) { return chips_; } else { return ChipsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        chips_ = value;
      }
    }
    /// <summary>Gets whether the "chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChips {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChips() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PromotionPlayerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PromotionPlayerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Name != other.Name) return false;
      if (Icon != other.Icon) return false;
      if (Chips != other.Chips) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasIcon) hash ^= Icon.GetHashCode();
      if (HasChips) hash ^= Chips.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasIcon) {
        output.WriteRawTag(26);
        output.WriteString(Icon);
      }
      if (HasChips) {
        output.WriteRawTag(32);
        output.WriteInt64(Chips);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasIcon) {
        output.WriteRawTag(26);
        output.WriteString(Icon);
      }
      if (HasChips) {
        output.WriteRawTag(32);
        output.WriteInt64(Chips);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasIcon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (HasChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Chips);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PromotionPlayerInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasIcon) {
        Icon = other.Icon;
      }
      if (other.HasChips) {
        Chips = other.Chips;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Icon = input.ReadString();
            break;
          }
          case 32: {
            Chips = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Icon = input.ReadString();
            break;
          }
          case 32: {
            Chips = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GroupPromotionPlayers : pb::IMessage<GroupPromotionPlayers>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GroupPromotionPlayers> _parser = new pb::MessageParser<GroupPromotionPlayers>(() => new GroupPromotionPlayers());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GroupPromotionPlayers> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupPromotionPlayers() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupPromotionPlayers(GroupPromotionPlayers other) : this() {
      _hasBits0 = other._hasBits0;
      flag_ = other.flag_;
      playerNum_ = other.playerNum_;
      totalBuyinTimes_ = other.totalBuyinTimes_;
      roomid_ = other.roomid_;
      status_ = other.status_;
      players_ = other.players_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupPromotionPlayers Clone() {
      return new GroupPromotionPlayers(this);
    }

    /// <summary>Field number for the "flag" field.</summary>
    public const int FlagFieldNumber = 1;
    private readonly static string FlagDefaultValue = "";

    private string flag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Flag {
      get { return flag_ ?? FlagDefaultValue; }
      set {
        flag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "flag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFlag {
      get { return flag_ != null; }
    }
    /// <summary>Clears the value of the "flag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFlag() {
      flag_ = null;
    }

    /// <summary>Field number for the "player_num" field.</summary>
    public const int PlayerNumFieldNumber = 2;
    private readonly static int PlayerNumDefaultValue = 0;

    private int playerNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerNum {
      get { if ((_hasBits0 & 1) != 0) { return playerNum_; } else { return PlayerNumDefaultValue; } }
      set {
        _hasBits0 |= 1;
        playerNum_ = value;
      }
    }
    /// <summary>Gets whether the "player_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerNum {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "player_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerNum() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "total_buyin_times" field.</summary>
    public const int TotalBuyinTimesFieldNumber = 3;
    private readonly static int TotalBuyinTimesDefaultValue = 0;

    private int totalBuyinTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalBuyinTimes {
      get { if ((_hasBits0 & 2) != 0) { return totalBuyinTimes_; } else { return TotalBuyinTimesDefaultValue; } }
      set {
        _hasBits0 |= 2;
        totalBuyinTimes_ = value;
      }
    }
    /// <summary>Gets whether the "total_buyin_times" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalBuyinTimes {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "total_buyin_times" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalBuyinTimes() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 4;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 4) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 5;
    private readonly static int StatusDefaultValue = 0;

    private int status_;
    /// <summary>
    /// 0未开始  1已开始 2正常结束 3 未开赛结束
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Status {
      get { if ((_hasBits0 & 8) != 0) { return status_; } else { return StatusDefaultValue; } }
      set {
        _hasBits0 |= 8;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatus {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatus() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PromotionPlayerInfo> _repeated_players_codec
        = pb::FieldCodec.ForMessage(50, global::Texas.Protocol.PromotionPlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PromotionPlayerInfo> players_ = new pbc::RepeatedField<global::Texas.Protocol.PromotionPlayerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PromotionPlayerInfo> Players {
      get { return players_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GroupPromotionPlayers);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GroupPromotionPlayers other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Flag != other.Flag) return false;
      if (PlayerNum != other.PlayerNum) return false;
      if (TotalBuyinTimes != other.TotalBuyinTimes) return false;
      if (Roomid != other.Roomid) return false;
      if (Status != other.Status) return false;
      if(!players_.Equals(other.players_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFlag) hash ^= Flag.GetHashCode();
      if (HasPlayerNum) hash ^= PlayerNum.GetHashCode();
      if (HasTotalBuyinTimes) hash ^= TotalBuyinTimes.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      hash ^= players_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFlag) {
        output.WriteRawTag(10);
        output.WriteString(Flag);
      }
      if (HasPlayerNum) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerNum);
      }
      if (HasTotalBuyinTimes) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalBuyinTimes);
      }
      if (HasRoomid) {
        output.WriteRawTag(32);
        output.WriteInt32(Roomid);
      }
      if (HasStatus) {
        output.WriteRawTag(40);
        output.WriteInt32(Status);
      }
      players_.WriteTo(output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFlag) {
        output.WriteRawTag(10);
        output.WriteString(Flag);
      }
      if (HasPlayerNum) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerNum);
      }
      if (HasTotalBuyinTimes) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalBuyinTimes);
      }
      if (HasRoomid) {
        output.WriteRawTag(32);
        output.WriteInt32(Roomid);
      }
      if (HasStatus) {
        output.WriteRawTag(40);
        output.WriteInt32(Status);
      }
      players_.WriteTo(ref output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFlag) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Flag);
      }
      if (HasPlayerNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerNum);
      }
      if (HasTotalBuyinTimes) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalBuyinTimes);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GroupPromotionPlayers other) {
      if (other == null) {
        return;
      }
      if (other.HasFlag) {
        Flag = other.Flag;
      }
      if (other.HasPlayerNum) {
        PlayerNum = other.PlayerNum;
      }
      if (other.HasTotalBuyinTimes) {
        TotalBuyinTimes = other.TotalBuyinTimes;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      players_.Add(other.players_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Flag = input.ReadString();
            break;
          }
          case 16: {
            PlayerNum = input.ReadInt32();
            break;
          }
          case 24: {
            TotalBuyinTimes = input.ReadInt32();
            break;
          }
          case 32: {
            Roomid = input.ReadInt32();
            break;
          }
          case 40: {
            Status = input.ReadInt32();
            break;
          }
          case 50: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Flag = input.ReadString();
            break;
          }
          case 16: {
            PlayerNum = input.ReadInt32();
            break;
          }
          case 24: {
            TotalBuyinTimes = input.ReadInt32();
            break;
          }
          case 32: {
            Roomid = input.ReadInt32();
            break;
          }
          case 40: {
            Status = input.ReadInt32();
            break;
          }
          case 50: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttPlayerRSP : pb::IMessage<MttPlayerRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttPlayerRSP> _parser = new pb::MessageParser<MttPlayerRSP>(() => new MttPlayerRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttPlayerRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttPlayerRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttPlayerRSP(MttPlayerRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      players_ = other.players_.Clone();
      playerNum_ = other.playerNum_;
      startIndex_ = other.startIndex_;
      totalNum_ = other.totalNum_;
      promotionFlag_ = other.promotionFlag_;
      groupPlayers_ = other.groupPlayers_.Clone();
      promotionNum_ = other.promotionNum_;
      totalBuyinTimes_ = other.totalBuyinTimes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttPlayerRSP Clone() {
      return new MttPlayerRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// -1 房间不存在
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Texas.Protocol.MttPlayerInfo> _repeated_players_codec
        = pb::FieldCodec.ForMessage(18, global::Texas.Protocol.MttPlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.MttPlayerInfo> players_ = new pbc::RepeatedField<global::Texas.Protocol.MttPlayerInfo>();
    /// <summary>
    /// 最多200个报名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.MttPlayerInfo> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "player_num" field.</summary>
    public const int PlayerNumFieldNumber = 3;
    private readonly static int PlayerNumDefaultValue = 0;

    private int playerNum_;
    /// <summary>
    /// 报名总人数(不含授权人数) 或者 day2的总参赛人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerNum {
      get { if ((_hasBits0 & 2) != 0) { return playerNum_; } else { return PlayerNumDefaultValue; } }
      set {
        _hasBits0 |= 2;
        playerNum_ = value;
      }
    }
    /// <summary>Gets whether the "player_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerNum {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "player_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerNum() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "start_index" field.</summary>
    public const int StartIndexFieldNumber = 4;
    private readonly static int StartIndexDefaultValue = 0;

    private int startIndex_;
    /// <summary>
    /// 报名列表开始索引,从1开始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartIndex {
      get { if ((_hasBits0 & 4) != 0) { return startIndex_; } else { return StartIndexDefaultValue; } }
      set {
        _hasBits0 |= 4;
        startIndex_ = value;
      }
    }
    /// <summary>Gets whether the "start_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartIndex {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "start_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartIndex() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "total_num" field.</summary>
    public const int TotalNumFieldNumber = 5;
    private readonly static int TotalNumDefaultValue = 0;

    private int totalNum_;
    /// <summary>
    /// 报名总人数(包含未授权人数)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalNum {
      get { if ((_hasBits0 & 8) != 0) { return totalNum_; } else { return TotalNumDefaultValue; } }
      set {
        _hasBits0 |= 8;
        totalNum_ = value;
      }
    }
    /// <summary>Gets whether the "total_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalNum {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "total_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalNum() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "promotion_flag" field.</summary>
    public const int PromotionFlagFieldNumber = 6;
    private readonly static bool PromotionFlagDefaultValue = false;

    private bool promotionFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PromotionFlag {
      get { if ((_hasBits0 & 16) != 0) { return promotionFlag_; } else { return PromotionFlagDefaultValue; } }
      set {
        _hasBits0 |= 16;
        promotionFlag_ = value;
      }
    }
    /// <summary>Gets whether the "promotion_flag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPromotionFlag {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "promotion_flag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPromotionFlag() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "group_players" field.</summary>
    public const int GroupPlayersFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Texas.Protocol.GroupPromotionPlayers> _repeated_groupPlayers_codec
        = pb::FieldCodec.ForMessage(58, global::Texas.Protocol.GroupPromotionPlayers.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.GroupPromotionPlayers> groupPlayers_ = new pbc::RepeatedField<global::Texas.Protocol.GroupPromotionPlayers>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.GroupPromotionPlayers> GroupPlayers {
      get { return groupPlayers_; }
    }

    /// <summary>Field number for the "promotion_num" field.</summary>
    public const int PromotionNumFieldNumber = 8;
    private readonly static int PromotionNumDefaultValue = 0;

    private int promotionNum_;
    /// <summary>
    ///晋级人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PromotionNum {
      get { if ((_hasBits0 & 32) != 0) { return promotionNum_; } else { return PromotionNumDefaultValue; } }
      set {
        _hasBits0 |= 32;
        promotionNum_ = value;
      }
    }
    /// <summary>Gets whether the "promotion_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPromotionNum {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "promotion_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPromotionNum() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "total_buyin_times" field.</summary>
    public const int TotalBuyinTimesFieldNumber = 9;
    private readonly static int TotalBuyinTimesDefaultValue = 0;

    private int totalBuyinTimes_;
    /// <summary>
    ///总买入次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalBuyinTimes {
      get { if ((_hasBits0 & 64) != 0) { return totalBuyinTimes_; } else { return TotalBuyinTimesDefaultValue; } }
      set {
        _hasBits0 |= 64;
        totalBuyinTimes_ = value;
      }
    }
    /// <summary>Gets whether the "total_buyin_times" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalBuyinTimes {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "total_buyin_times" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalBuyinTimes() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttPlayerRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttPlayerRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if(!players_.Equals(other.players_)) return false;
      if (PlayerNum != other.PlayerNum) return false;
      if (StartIndex != other.StartIndex) return false;
      if (TotalNum != other.TotalNum) return false;
      if (PromotionFlag != other.PromotionFlag) return false;
      if(!groupPlayers_.Equals(other.groupPlayers_)) return false;
      if (PromotionNum != other.PromotionNum) return false;
      if (TotalBuyinTimes != other.TotalBuyinTimes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      hash ^= players_.GetHashCode();
      if (HasPlayerNum) hash ^= PlayerNum.GetHashCode();
      if (HasStartIndex) hash ^= StartIndex.GetHashCode();
      if (HasTotalNum) hash ^= TotalNum.GetHashCode();
      if (HasPromotionFlag) hash ^= PromotionFlag.GetHashCode();
      hash ^= groupPlayers_.GetHashCode();
      if (HasPromotionNum) hash ^= PromotionNum.GetHashCode();
      if (HasTotalBuyinTimes) hash ^= TotalBuyinTimes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      players_.WriteTo(output, _repeated_players_codec);
      if (HasPlayerNum) {
        output.WriteRawTag(24);
        output.WriteInt32(PlayerNum);
      }
      if (HasStartIndex) {
        output.WriteRawTag(32);
        output.WriteInt32(StartIndex);
      }
      if (HasTotalNum) {
        output.WriteRawTag(40);
        output.WriteInt32(TotalNum);
      }
      if (HasPromotionFlag) {
        output.WriteRawTag(48);
        output.WriteBool(PromotionFlag);
      }
      groupPlayers_.WriteTo(output, _repeated_groupPlayers_codec);
      if (HasPromotionNum) {
        output.WriteRawTag(64);
        output.WriteInt32(PromotionNum);
      }
      if (HasTotalBuyinTimes) {
        output.WriteRawTag(72);
        output.WriteInt32(TotalBuyinTimes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      players_.WriteTo(ref output, _repeated_players_codec);
      if (HasPlayerNum) {
        output.WriteRawTag(24);
        output.WriteInt32(PlayerNum);
      }
      if (HasStartIndex) {
        output.WriteRawTag(32);
        output.WriteInt32(StartIndex);
      }
      if (HasTotalNum) {
        output.WriteRawTag(40);
        output.WriteInt32(TotalNum);
      }
      if (HasPromotionFlag) {
        output.WriteRawTag(48);
        output.WriteBool(PromotionFlag);
      }
      groupPlayers_.WriteTo(ref output, _repeated_groupPlayers_codec);
      if (HasPromotionNum) {
        output.WriteRawTag(64);
        output.WriteInt32(PromotionNum);
      }
      if (HasTotalBuyinTimes) {
        output.WriteRawTag(72);
        output.WriteInt32(TotalBuyinTimes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      if (HasPlayerNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerNum);
      }
      if (HasStartIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (HasTotalNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalNum);
      }
      if (HasPromotionFlag) {
        size += 1 + 1;
      }
      size += groupPlayers_.CalculateSize(_repeated_groupPlayers_codec);
      if (HasPromotionNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PromotionNum);
      }
      if (HasTotalBuyinTimes) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalBuyinTimes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttPlayerRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      players_.Add(other.players_);
      if (other.HasPlayerNum) {
        PlayerNum = other.PlayerNum;
      }
      if (other.HasStartIndex) {
        StartIndex = other.StartIndex;
      }
      if (other.HasTotalNum) {
        TotalNum = other.TotalNum;
      }
      if (other.HasPromotionFlag) {
        PromotionFlag = other.PromotionFlag;
      }
      groupPlayers_.Add(other.groupPlayers_);
      if (other.HasPromotionNum) {
        PromotionNum = other.PromotionNum;
      }
      if (other.HasTotalBuyinTimes) {
        TotalBuyinTimes = other.TotalBuyinTimes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 24: {
            PlayerNum = input.ReadInt32();
            break;
          }
          case 32: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 40: {
            TotalNum = input.ReadInt32();
            break;
          }
          case 48: {
            PromotionFlag = input.ReadBool();
            break;
          }
          case 58: {
            groupPlayers_.AddEntriesFrom(input, _repeated_groupPlayers_codec);
            break;
          }
          case 64: {
            PromotionNum = input.ReadInt32();
            break;
          }
          case 72: {
            TotalBuyinTimes = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
          case 24: {
            PlayerNum = input.ReadInt32();
            break;
          }
          case 32: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 40: {
            TotalNum = input.ReadInt32();
            break;
          }
          case 48: {
            PromotionFlag = input.ReadBool();
            break;
          }
          case 58: {
            groupPlayers_.AddEntriesFrom(ref input, _repeated_groupPlayers_codec);
            break;
          }
          case 64: {
            PromotionNum = input.ReadInt32();
            break;
          }
          case 72: {
            TotalBuyinTimes = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttTableREQ : pb::IMessage<MttTableREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttTableREQ> _parser = new pb::MessageParser<MttTableREQ>(() => new MttTableREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttTableREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttTableREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttTableREQ(MttTableREQ other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      uid_ = other.uid_;
      startIndex_ = other.startIndex_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttTableREQ Clone() {
      return new MttTableREQ(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 1) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 2) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "start_index" field.</summary>
    public const int StartIndexFieldNumber = 3;
    private readonly static int StartIndexDefaultValue = 0;

    private int startIndex_;
    /// <summary>
    /// 请求从start_index开始的amount条记录,[start_index, start_index+amount),从1开始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartIndex {
      get { if ((_hasBits0 & 4) != 0) { return startIndex_; } else { return StartIndexDefaultValue; } }
      set {
        _hasBits0 |= 4;
        startIndex_ = value;
      }
    }
    /// <summary>Gets whether the "start_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartIndex {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "start_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartIndex() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private readonly static int AmountDefaultValue = 0;

    private int amount_;
    /// <summary>
    /// -1:返回start_index后的所有记录
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Amount {
      get { if ((_hasBits0 & 8) != 0) { return amount_; } else { return AmountDefaultValue; } }
      set {
        _hasBits0 |= 8;
        amount_ = value;
      }
    }
    /// <summary>Gets whether the "amount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAmount {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "amount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAmount() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttTableREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttTableREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (Uid != other.Uid) return false;
      if (StartIndex != other.StartIndex) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasStartIndex) hash ^= StartIndex.GetHashCode();
      if (HasAmount) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (HasStartIndex) {
        output.WriteRawTag(24);
        output.WriteInt32(StartIndex);
      }
      if (HasAmount) {
        output.WriteRawTag(32);
        output.WriteInt32(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (HasStartIndex) {
        output.WriteRawTag(24);
        output.WriteInt32(StartIndex);
      }
      if (HasAmount) {
        output.WriteRawTag(32);
        output.WriteInt32(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasStartIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (HasAmount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttTableREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasStartIndex) {
        StartIndex = other.StartIndex;
      }
      if (other.HasAmount) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
          case 24: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 32: {
            Amount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
          case 24: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 32: {
            Amount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///其他桌状态
  /// </summary>
  public sealed partial class MttTableInfo : pb::IMessage<MttTableInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttTableInfo> _parser = new pb::MessageParser<MttTableInfo>(() => new MttTableInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttTableInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttTableInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttTableInfo(MttTableInfo other) : this() {
      _hasBits0 = other._hasBits0;
      tid_ = other.tid_;
      topChips_ = other.topChips_;
      lowChips_ = other.lowChips_;
      avgChips_ = other.avgChips_;
      playerNum_ = other.playerNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttTableInfo Clone() {
      return new MttTableInfo(this);
    }

    /// <summary>Field number for the "tid" field.</summary>
    public const int TidFieldNumber = 1;
    private readonly static int TidDefaultValue = 0;

    private int tid_;
    /// <summary>
    ///table id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Tid {
      get { if ((_hasBits0 & 1) != 0) { return tid_; } else { return TidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        tid_ = value;
      }
    }
    /// <summary>Gets whether the "tid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "tid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "top_chips" field.</summary>
    public const int TopChipsFieldNumber = 2;
    private readonly static long TopChipsDefaultValue = 0L;

    private long topChips_;
    /// <summary>
    ///最深筹码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TopChips {
      get { if ((_hasBits0 & 2) != 0) { return topChips_; } else { return TopChipsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        topChips_ = value;
      }
    }
    /// <summary>Gets whether the "top_chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTopChips {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "top_chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTopChips() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "low_chips" field.</summary>
    public const int LowChipsFieldNumber = 3;
    private readonly static long LowChipsDefaultValue = 0L;

    private long lowChips_;
    /// <summary>
    ///最浅筹码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LowChips {
      get { if ((_hasBits0 & 4) != 0) { return lowChips_; } else { return LowChipsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        lowChips_ = value;
      }
    }
    /// <summary>Gets whether the "low_chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLowChips {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "low_chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLowChips() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "avg_chips" field.</summary>
    public const int AvgChipsFieldNumber = 4;
    private readonly static long AvgChipsDefaultValue = 0L;

    private long avgChips_;
    /// <summary>
    ///平均筹码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AvgChips {
      get { if ((_hasBits0 & 8) != 0) { return avgChips_; } else { return AvgChipsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        avgChips_ = value;
      }
    }
    /// <summary>Gets whether the "avg_chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAvgChips {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "avg_chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAvgChips() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "player_num" field.</summary>
    public const int PlayerNumFieldNumber = 5;
    private readonly static int PlayerNumDefaultValue = 0;

    private int playerNum_;
    /// <summary>
    ///在玩人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerNum {
      get { if ((_hasBits0 & 16) != 0) { return playerNum_; } else { return PlayerNumDefaultValue; } }
      set {
        _hasBits0 |= 16;
        playerNum_ = value;
      }
    }
    /// <summary>Gets whether the "player_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayerNum {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "player_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayerNum() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttTableInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttTableInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tid != other.Tid) return false;
      if (TopChips != other.TopChips) return false;
      if (LowChips != other.LowChips) return false;
      if (AvgChips != other.AvgChips) return false;
      if (PlayerNum != other.PlayerNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTid) hash ^= Tid.GetHashCode();
      if (HasTopChips) hash ^= TopChips.GetHashCode();
      if (HasLowChips) hash ^= LowChips.GetHashCode();
      if (HasAvgChips) hash ^= AvgChips.GetHashCode();
      if (HasPlayerNum) hash ^= PlayerNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTid) {
        output.WriteRawTag(8);
        output.WriteInt32(Tid);
      }
      if (HasTopChips) {
        output.WriteRawTag(16);
        output.WriteInt64(TopChips);
      }
      if (HasLowChips) {
        output.WriteRawTag(24);
        output.WriteInt64(LowChips);
      }
      if (HasAvgChips) {
        output.WriteRawTag(32);
        output.WriteInt64(AvgChips);
      }
      if (HasPlayerNum) {
        output.WriteRawTag(40);
        output.WriteInt32(PlayerNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTid) {
        output.WriteRawTag(8);
        output.WriteInt32(Tid);
      }
      if (HasTopChips) {
        output.WriteRawTag(16);
        output.WriteInt64(TopChips);
      }
      if (HasLowChips) {
        output.WriteRawTag(24);
        output.WriteInt64(LowChips);
      }
      if (HasAvgChips) {
        output.WriteRawTag(32);
        output.WriteInt64(AvgChips);
      }
      if (HasPlayerNum) {
        output.WriteRawTag(40);
        output.WriteInt32(PlayerNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tid);
      }
      if (HasTopChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TopChips);
      }
      if (HasLowChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LowChips);
      }
      if (HasAvgChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AvgChips);
      }
      if (HasPlayerNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttTableInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasTid) {
        Tid = other.Tid;
      }
      if (other.HasTopChips) {
        TopChips = other.TopChips;
      }
      if (other.HasLowChips) {
        LowChips = other.LowChips;
      }
      if (other.HasAvgChips) {
        AvgChips = other.AvgChips;
      }
      if (other.HasPlayerNum) {
        PlayerNum = other.PlayerNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Tid = input.ReadInt32();
            break;
          }
          case 16: {
            TopChips = input.ReadInt64();
            break;
          }
          case 24: {
            LowChips = input.ReadInt64();
            break;
          }
          case 32: {
            AvgChips = input.ReadInt64();
            break;
          }
          case 40: {
            PlayerNum = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Tid = input.ReadInt32();
            break;
          }
          case 16: {
            TopChips = input.ReadInt64();
            break;
          }
          case 24: {
            LowChips = input.ReadInt64();
            break;
          }
          case 32: {
            AvgChips = input.ReadInt64();
            break;
          }
          case 40: {
            PlayerNum = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttTableRSP : pb::IMessage<MttTableRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttTableRSP> _parser = new pb::MessageParser<MttTableRSP>(() => new MttTableRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttTableRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttTableRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttTableRSP(MttTableRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      table_ = other.table_.Clone();
      tableNum_ = other.tableNum_;
      startIndex_ = other.startIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttTableRSP Clone() {
      return new MttTableRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// -1 房间不存在
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "table" field.</summary>
    public const int TableFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Texas.Protocol.MttTableInfo> _repeated_table_codec
        = pb::FieldCodec.ForMessage(18, global::Texas.Protocol.MttTableInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.MttTableInfo> table_ = new pbc::RepeatedField<global::Texas.Protocol.MttTableInfo>();
    /// <summary>
    /// 最多200个桌子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.MttTableInfo> Table {
      get { return table_; }
    }

    /// <summary>Field number for the "table_num" field.</summary>
    public const int TableNumFieldNumber = 3;
    private readonly static int TableNumDefaultValue = 0;

    private int tableNum_;
    /// <summary>
    /// 桌子数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TableNum {
      get { if ((_hasBits0 & 2) != 0) { return tableNum_; } else { return TableNumDefaultValue; } }
      set {
        _hasBits0 |= 2;
        tableNum_ = value;
      }
    }
    /// <summary>Gets whether the "table_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTableNum {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "table_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTableNum() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "start_index" field.</summary>
    public const int StartIndexFieldNumber = 4;
    private readonly static int StartIndexDefaultValue = 0;

    private int startIndex_;
    /// <summary>
    /// 返回桌子列表开始索引,从1开始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartIndex {
      get { if ((_hasBits0 & 4) != 0) { return startIndex_; } else { return StartIndexDefaultValue; } }
      set {
        _hasBits0 |= 4;
        startIndex_ = value;
      }
    }
    /// <summary>Gets whether the "start_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartIndex {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "start_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartIndex() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttTableRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttTableRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if(!table_.Equals(other.table_)) return false;
      if (TableNum != other.TableNum) return false;
      if (StartIndex != other.StartIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      hash ^= table_.GetHashCode();
      if (HasTableNum) hash ^= TableNum.GetHashCode();
      if (HasStartIndex) hash ^= StartIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      table_.WriteTo(output, _repeated_table_codec);
      if (HasTableNum) {
        output.WriteRawTag(24);
        output.WriteInt32(TableNum);
      }
      if (HasStartIndex) {
        output.WriteRawTag(32);
        output.WriteInt32(StartIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      table_.WriteTo(ref output, _repeated_table_codec);
      if (HasTableNum) {
        output.WriteRawTag(24);
        output.WriteInt32(TableNum);
      }
      if (HasStartIndex) {
        output.WriteRawTag(32);
        output.WriteInt32(StartIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      size += table_.CalculateSize(_repeated_table_codec);
      if (HasTableNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TableNum);
      }
      if (HasStartIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttTableRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      table_.Add(other.table_);
      if (other.HasTableNum) {
        TableNum = other.TableNum;
      }
      if (other.HasStartIndex) {
        StartIndex = other.StartIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            table_.AddEntriesFrom(input, _repeated_table_codec);
            break;
          }
          case 24: {
            TableNum = input.ReadInt32();
            break;
          }
          case 32: {
            StartIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            table_.AddEntriesFrom(ref input, _repeated_table_codec);
            break;
          }
          case 24: {
            TableNum = input.ReadInt32();
            break;
          }
          case 32: {
            StartIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///修改开赛时间
  /// </summary>
  public sealed partial class MttTimeChangeREQ : pb::IMessage<MttTimeChangeREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttTimeChangeREQ> _parser = new pb::MessageParser<MttTimeChangeREQ>(() => new MttTimeChangeREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttTimeChangeREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttTimeChangeREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttTimeChangeREQ(MttTimeChangeREQ other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      mttStartTime_ = other.mttStartTime_;
      uid_ = other.uid_;
      clubid_ = other.clubid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttTimeChangeREQ Clone() {
      return new MttTimeChangeREQ(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 1) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "mtt_start_time" field.</summary>
    public const int MttStartTimeFieldNumber = 2;
    private readonly static long MttStartTimeDefaultValue = 0L;

    private long mttStartTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MttStartTime {
      get { if ((_hasBits0 & 2) != 0) { return mttStartTime_; } else { return MttStartTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        mttStartTime_ = value;
      }
    }
    /// <summary>Gets whether the "mtt_start_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMttStartTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "mtt_start_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMttStartTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 3;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 4) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 4;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 8) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttTimeChangeREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttTimeChangeREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (MttStartTime != other.MttStartTime) return false;
      if (Uid != other.Uid) return false;
      if (Clubid != other.Clubid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasMttStartTime) hash ^= MttStartTime.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasMttStartTime) {
        output.WriteRawTag(16);
        output.WriteInt64(MttStartTime);
      }
      if (HasUid) {
        output.WriteRawTag(24);
        output.WriteInt64(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(32);
        output.WriteInt32(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasMttStartTime) {
        output.WriteRawTag(16);
        output.WriteInt64(MttStartTime);
      }
      if (HasUid) {
        output.WriteRawTag(24);
        output.WriteInt64(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(32);
        output.WriteInt32(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasMttStartTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MttStartTime);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttTimeChangeREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasMttStartTime) {
        MttStartTime = other.MttStartTime;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            MttStartTime = input.ReadInt64();
            break;
          }
          case 24: {
            Uid = input.ReadInt64();
            break;
          }
          case 32: {
            Clubid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            MttStartTime = input.ReadInt64();
            break;
          }
          case 24: {
            Uid = input.ReadInt64();
            break;
          }
          case 32: {
            Clubid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttEnsureChipsChangeREQ : pb::IMessage<MttEnsureChipsChangeREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttEnsureChipsChangeREQ> _parser = new pb::MessageParser<MttEnsureChipsChangeREQ>(() => new MttEnsureChipsChangeREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttEnsureChipsChangeREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttEnsureChipsChangeREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttEnsureChipsChangeREQ(MttEnsureChipsChangeREQ other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      chips_ = other.chips_;
      uid_ = other.uid_;
      clubid_ = other.clubid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttEnsureChipsChangeREQ Clone() {
      return new MttEnsureChipsChangeREQ(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 1) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "chips" field.</summary>
    public const int ChipsFieldNumber = 2;
    private readonly static long ChipsDefaultValue = 0L;

    private long chips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Chips {
      get { if ((_hasBits0 & 2) != 0) { return chips_; } else { return ChipsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        chips_ = value;
      }
    }
    /// <summary>Gets whether the "chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChips {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChips() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 3;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 4) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 4;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 8) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttEnsureChipsChangeREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttEnsureChipsChangeREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (Chips != other.Chips) return false;
      if (Uid != other.Uid) return false;
      if (Clubid != other.Clubid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasChips) hash ^= Chips.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasChips) {
        output.WriteRawTag(16);
        output.WriteInt64(Chips);
      }
      if (HasUid) {
        output.WriteRawTag(24);
        output.WriteInt64(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(32);
        output.WriteInt32(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasChips) {
        output.WriteRawTag(16);
        output.WriteInt64(Chips);
      }
      if (HasUid) {
        output.WriteRawTag(24);
        output.WriteInt64(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(32);
        output.WriteInt32(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Chips);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttEnsureChipsChangeREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasChips) {
        Chips = other.Chips;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Chips = input.ReadInt64();
            break;
          }
          case 24: {
            Uid = input.ReadInt64();
            break;
          }
          case 32: {
            Clubid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Chips = input.ReadInt64();
            break;
          }
          case 24: {
            Uid = input.ReadInt64();
            break;
          }
          case 32: {
            Clubid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttEnsureChipsChangeRSP : pb::IMessage<MttEnsureChipsChangeRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttEnsureChipsChangeRSP> _parser = new pb::MessageParser<MttEnsureChipsChangeRSP>(() => new MttEnsureChipsChangeRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttEnsureChipsChangeRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttEnsureChipsChangeRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttEnsureChipsChangeRSP(MttEnsureChipsChangeRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttEnsureChipsChangeRSP Clone() {
      return new MttEnsureChipsChangeRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttEnsureChipsChangeRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttEnsureChipsChangeRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttEnsureChipsChangeRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttTimeChangeRSP : pb::IMessage<MttTimeChangeRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttTimeChangeRSP> _parser = new pb::MessageParser<MttTimeChangeRSP>(() => new MttTimeChangeRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttTimeChangeRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttTimeChangeRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttTimeChangeRSP(MttTimeChangeRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttTimeChangeRSP Clone() {
      return new MttTimeChangeRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttTimeChangeRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttTimeChangeRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttTimeChangeRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///取消比赛
  /// </summary>
  public sealed partial class MttCancelREQ : pb::IMessage<MttCancelREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttCancelREQ> _parser = new pb::MessageParser<MttCancelREQ>(() => new MttCancelREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttCancelREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttCancelREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttCancelREQ(MttCancelREQ other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      uid_ = other.uid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttCancelREQ Clone() {
      return new MttCancelREQ(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 1) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 2) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttCancelREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttCancelREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (Uid != other.Uid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttCancelREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttCancelRSP : pb::IMessage<MttCancelRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttCancelRSP> _parser = new pb::MessageParser<MttCancelRSP>(() => new MttCancelRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttCancelRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttCancelRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttCancelRSP(MttCancelRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttCancelRSP Clone() {
      return new MttCancelRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// 0 成功取消 -1 比赛即将开始，不能取消 -2 分组赛有比赛开始，不能取消
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttCancelRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttCancelRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttCancelRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///暂停比赛, 房主才有这个功能, 最終桌玩家可以發起協商分配協議
  /// </summary>
  public sealed partial class MttPauseGameREQ : pb::IMessage<MttPauseGameREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttPauseGameREQ> _parser = new pb::MessageParser<MttPauseGameREQ>(() => new MttPauseGameREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttPauseGameREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttPauseGameREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttPauseGameREQ(MttPauseGameREQ other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      uid_ = other.uid_;
      check_ = other.check_;
      isDivide_ = other.isDivide_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttPauseGameREQ Clone() {
      return new MttPauseGameREQ(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 1) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 2) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "check" field.</summary>
    public const int CheckFieldNumber = 3;
    private readonly static bool CheckDefaultValue = false;

    private bool check_;
    /// <summary>
    ///0：表示设置, 1：表示check
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Check {
      get { if ((_hasBits0 & 4) != 0) { return check_; } else { return CheckDefaultValue; } }
      set {
        _hasBits0 |= 4;
        check_ = value;
      }
    }
    /// <summary>Gets whether the "check" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCheck {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "check" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCheck() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "is_divide" field.</summary>
    public const int IsDivideFieldNumber = 4;
    private readonly static bool IsDivideDefaultValue = false;

    private bool isDivide_;
    /// <summary>
    ///是否协商分配奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsDivide {
      get { if ((_hasBits0 & 8) != 0) { return isDivide_; } else { return IsDivideDefaultValue; } }
      set {
        _hasBits0 |= 8;
        isDivide_ = value;
      }
    }
    /// <summary>Gets whether the "is_divide" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsDivide {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "is_divide" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsDivide() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttPauseGameREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttPauseGameREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (Uid != other.Uid) return false;
      if (Check != other.Check) return false;
      if (IsDivide != other.IsDivide) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasCheck) hash ^= Check.GetHashCode();
      if (HasIsDivide) hash ^= IsDivide.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (HasCheck) {
        output.WriteRawTag(24);
        output.WriteBool(Check);
      }
      if (HasIsDivide) {
        output.WriteRawTag(32);
        output.WriteBool(IsDivide);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (HasCheck) {
        output.WriteRawTag(24);
        output.WriteBool(Check);
      }
      if (HasIsDivide) {
        output.WriteRawTag(32);
        output.WriteBool(IsDivide);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasCheck) {
        size += 1 + 1;
      }
      if (HasIsDivide) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttPauseGameREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasCheck) {
        Check = other.Check;
      }
      if (other.HasIsDivide) {
        IsDivide = other.IsDivide;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
          case 24: {
            Check = input.ReadBool();
            break;
          }
          case 32: {
            IsDivide = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
          case 24: {
            Check = input.ReadBool();
            break;
          }
          case 32: {
            IsDivide = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttPauseGameRSP : pb::IMessage<MttPauseGameRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttPauseGameRSP> _parser = new pb::MessageParser<MttPauseGameRSP>(() => new MttPauseGameRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttPauseGameRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttPauseGameRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttPauseGameRSP(MttPauseGameRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      check_ = other.check_;
      uid_ = other.uid_;
      isDivide_ = other.isDivide_;
      leftDivideTimes_ = other.leftDivideTimes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttPauseGameRSP Clone() {
      return new MttPauseGameRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///code返回值 ：0 成功 -1 未到钱圈桌或非mtt桌 -2 正在add-on时间 -3 正在休息时间 -4 正在暂停时间 -5 房间未准备好 -6 非房主id -7 正在协商分池 -8 游戏类型不符合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "check" field.</summary>
    public const int CheckFieldNumber = 2;
    private readonly static int CheckDefaultValue = 0;

    private int check_;
    /// <summary>
    ///0：表示check, 1：表示设置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Check {
      get { if ((_hasBits0 & 2) != 0) { return check_; } else { return CheckDefaultValue; } }
      set {
        _hasBits0 |= 2;
        check_ = value;
      }
    }
    /// <summary>Gets whether the "check" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCheck {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "check" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCheck() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 3;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    /// <summary>
    ///操作uid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 4) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "is_divide" field.</summary>
    public const int IsDivideFieldNumber = 4;
    private readonly static bool IsDivideDefaultValue = false;

    private bool isDivide_;
    /// <summary>
    ///是否协商分配奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsDivide {
      get { if ((_hasBits0 & 8) != 0) { return isDivide_; } else { return IsDivideDefaultValue; } }
      set {
        _hasBits0 |= 8;
        isDivide_ = value;
      }
    }
    /// <summary>Gets whether the "is_divide" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsDivide {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "is_divide" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsDivide() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "left_divide_times" field.</summary>
    public const int LeftDivideTimesFieldNumber = 5;
    private readonly static int LeftDivideTimesDefaultValue = 0;

    private int leftDivideTimes_;
    /// <summary>
    ///剩餘發起協議次數
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LeftDivideTimes {
      get { if ((_hasBits0 & 16) != 0) { return leftDivideTimes_; } else { return LeftDivideTimesDefaultValue; } }
      set {
        _hasBits0 |= 16;
        leftDivideTimes_ = value;
      }
    }
    /// <summary>Gets whether the "left_divide_times" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeftDivideTimes {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "left_divide_times" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeftDivideTimes() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttPauseGameRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttPauseGameRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Check != other.Check) return false;
      if (Uid != other.Uid) return false;
      if (IsDivide != other.IsDivide) return false;
      if (LeftDivideTimes != other.LeftDivideTimes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasCheck) hash ^= Check.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasIsDivide) hash ^= IsDivide.GetHashCode();
      if (HasLeftDivideTimes) hash ^= LeftDivideTimes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasCheck) {
        output.WriteRawTag(16);
        output.WriteInt32(Check);
      }
      if (HasUid) {
        output.WriteRawTag(24);
        output.WriteInt64(Uid);
      }
      if (HasIsDivide) {
        output.WriteRawTag(32);
        output.WriteBool(IsDivide);
      }
      if (HasLeftDivideTimes) {
        output.WriteRawTag(40);
        output.WriteInt32(LeftDivideTimes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasCheck) {
        output.WriteRawTag(16);
        output.WriteInt32(Check);
      }
      if (HasUid) {
        output.WriteRawTag(24);
        output.WriteInt64(Uid);
      }
      if (HasIsDivide) {
        output.WriteRawTag(32);
        output.WriteBool(IsDivide);
      }
      if (HasLeftDivideTimes) {
        output.WriteRawTag(40);
        output.WriteInt32(LeftDivideTimes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasCheck) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Check);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasIsDivide) {
        size += 1 + 1;
      }
      if (HasLeftDivideTimes) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeftDivideTimes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttPauseGameRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasCheck) {
        Check = other.Check;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasIsDivide) {
        IsDivide = other.IsDivide;
      }
      if (other.HasLeftDivideTimes) {
        LeftDivideTimes = other.LeftDivideTimes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Check = input.ReadInt32();
            break;
          }
          case 24: {
            Uid = input.ReadInt64();
            break;
          }
          case 32: {
            IsDivide = input.ReadBool();
            break;
          }
          case 40: {
            LeftDivideTimes = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Check = input.ReadInt32();
            break;
          }
          case 24: {
            Uid = input.ReadInt64();
            break;
          }
          case 32: {
            IsDivide = input.ReadBool();
            break;
          }
          case 40: {
            LeftDivideTimes = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///回到比赛, 房主才有这个功能
  /// </summary>
  public sealed partial class MttBackGameREQ : pb::IMessage<MttBackGameREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttBackGameREQ> _parser = new pb::MessageParser<MttBackGameREQ>(() => new MttBackGameREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttBackGameREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttBackGameREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttBackGameREQ(MttBackGameREQ other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      uid_ = other.uid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttBackGameREQ Clone() {
      return new MttBackGameREQ(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 1) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 2) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttBackGameREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttBackGameREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (Uid != other.Uid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttBackGameREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttBackGameBRC : pb::IMessage<MttBackGameBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttBackGameBRC> _parser = new pb::MessageParser<MttBackGameBRC>(() => new MttBackGameBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttBackGameBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttBackGameBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttBackGameBRC(MttBackGameBRC other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      left_ = other.left_;
      uid_ = other.uid_;
      isDivide_ = other.isDivide_;
      isManager_ = other.isManager_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttBackGameBRC Clone() {
      return new MttBackGameBRC(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///code返回值 ：0 成功 -1 未到钱圈桌或非mtt桌 -2 正在add-on时间 -3 正在休息时间 -4 没有进行过暂停时间 -5 房间未准备好 -6 非房主id -7 协商分池时 非操作uid -8 玩家正在协商分池投票
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "left" field.</summary>
    public const int LeftFieldNumber = 2;
    private readonly static int LeftDefaultValue = 0;

    private int left_;
    /// <summary>
    ///剩余时间，秒
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Left {
      get { if ((_hasBits0 & 2) != 0) { return left_; } else { return LeftDefaultValue; } }
      set {
        _hasBits0 |= 2;
        left_ = value;
      }
    }
    /// <summary>Gets whether the "left" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeft {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "left" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeft() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 3;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    /// <summary>
    ///操作uid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 4) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "is_divide" field.</summary>
    public const int IsDivideFieldNumber = 4;
    private readonly static bool IsDivideDefaultValue = false;

    private bool isDivide_;
    /// <summary>
    ///是否从协商分池暂停返回比赛
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsDivide {
      get { if ((_hasBits0 & 8) != 0) { return isDivide_; } else { return IsDivideDefaultValue; } }
      set {
        _hasBits0 |= 8;
        isDivide_ = value;
      }
    }
    /// <summary>Gets whether the "is_divide" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsDivide {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "is_divide" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsDivide() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "is_manager" field.</summary>
    public const int IsManagerFieldNumber = 5;
    private readonly static bool IsManagerDefaultValue = false;

    private bool isManager_;
    /// <summary>
    ///是否為管理員發起，Client顯示文字判斷
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsManager {
      get { if ((_hasBits0 & 16) != 0) { return isManager_; } else { return IsManagerDefaultValue; } }
      set {
        _hasBits0 |= 16;
        isManager_ = value;
      }
    }
    /// <summary>Gets whether the "is_manager" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsManager {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "is_manager" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsManager() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttBackGameBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttBackGameBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Left != other.Left) return false;
      if (Uid != other.Uid) return false;
      if (IsDivide != other.IsDivide) return false;
      if (IsManager != other.IsManager) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasLeft) hash ^= Left.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasIsDivide) hash ^= IsDivide.GetHashCode();
      if (HasIsManager) hash ^= IsManager.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasLeft) {
        output.WriteRawTag(16);
        output.WriteInt32(Left);
      }
      if (HasUid) {
        output.WriteRawTag(24);
        output.WriteInt64(Uid);
      }
      if (HasIsDivide) {
        output.WriteRawTag(32);
        output.WriteBool(IsDivide);
      }
      if (HasIsManager) {
        output.WriteRawTag(40);
        output.WriteBool(IsManager);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasLeft) {
        output.WriteRawTag(16);
        output.WriteInt32(Left);
      }
      if (HasUid) {
        output.WriteRawTag(24);
        output.WriteInt64(Uid);
      }
      if (HasIsDivide) {
        output.WriteRawTag(32);
        output.WriteBool(IsDivide);
      }
      if (HasIsManager) {
        output.WriteRawTag(40);
        output.WriteBool(IsManager);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasLeft) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Left);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasIsDivide) {
        size += 1 + 1;
      }
      if (HasIsManager) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttBackGameBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasLeft) {
        Left = other.Left;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasIsDivide) {
        IsDivide = other.IsDivide;
      }
      if (other.HasIsManager) {
        IsManager = other.IsManager;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Left = input.ReadInt32();
            break;
          }
          case 24: {
            Uid = input.ReadInt64();
            break;
          }
          case 32: {
            IsDivide = input.ReadBool();
            break;
          }
          case 40: {
            IsManager = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Left = input.ReadInt32();
            break;
          }
          case 24: {
            Uid = input.ReadInt64();
            break;
          }
          case 32: {
            IsDivide = input.ReadBool();
            break;
          }
          case 40: {
            IsManager = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///暂停开始的广播，剩余时间
  /// </summary>
  public sealed partial class MttPauseTimeBRC : pb::IMessage<MttPauseTimeBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttPauseTimeBRC> _parser = new pb::MessageParser<MttPauseTimeBRC>(() => new MttPauseTimeBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttPauseTimeBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttPauseTimeBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttPauseTimeBRC(MttPauseTimeBRC other) : this() {
      _hasBits0 = other._hasBits0;
      left_ = other.left_;
      isDivide_ = other.isDivide_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttPauseTimeBRC Clone() {
      return new MttPauseTimeBRC(this);
    }

    /// <summary>Field number for the "left" field.</summary>
    public const int LeftFieldNumber = 1;
    private readonly static int LeftDefaultValue = 0;

    private int left_;
    /// <summary>
    ///剩余时间，秒, 剩余时间为0表示暂停倒计时结束，比赛重新开始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Left {
      get { if ((_hasBits0 & 1) != 0) { return left_; } else { return LeftDefaultValue; } }
      set {
        _hasBits0 |= 1;
        left_ = value;
      }
    }
    /// <summary>Gets whether the "left" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeft {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "left" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeft() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "is_divide" field.</summary>
    public const int IsDivideFieldNumber = 2;
    private readonly static bool IsDivideDefaultValue = false;

    private bool isDivide_;
    /// <summary>
    ///是否协商分池的
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsDivide {
      get { if ((_hasBits0 & 2) != 0) { return isDivide_; } else { return IsDivideDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isDivide_ = value;
      }
    }
    /// <summary>Gets whether the "is_divide" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsDivide {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_divide" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsDivide() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttPauseTimeBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttPauseTimeBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Left != other.Left) return false;
      if (IsDivide != other.IsDivide) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLeft) hash ^= Left.GetHashCode();
      if (HasIsDivide) hash ^= IsDivide.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLeft) {
        output.WriteRawTag(8);
        output.WriteInt32(Left);
      }
      if (HasIsDivide) {
        output.WriteRawTag(16);
        output.WriteBool(IsDivide);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLeft) {
        output.WriteRawTag(8);
        output.WriteInt32(Left);
      }
      if (HasIsDivide) {
        output.WriteRawTag(16);
        output.WriteBool(IsDivide);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLeft) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Left);
      }
      if (HasIsDivide) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttPauseTimeBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasLeft) {
        Left = other.Left;
      }
      if (other.HasIsDivide) {
        IsDivide = other.IsDivide;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Left = input.ReadInt32();
            break;
          }
          case 16: {
            IsDivide = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Left = input.ReadInt32();
            break;
          }
          case 16: {
            IsDivide = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RoomSuspendBRC : pb::IMessage<RoomSuspendBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoomSuspendBRC> _parser = new pb::MessageParser<RoomSuspendBRC>(() => new RoomSuspendBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RoomSuspendBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomSuspendBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomSuspendBRC(RoomSuspendBRC other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomSuspendBRC Clone() {
      return new RoomSuspendBRC(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    /// type: 1.supsend, 2.resume
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RoomSuspendBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RoomSuspendBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RoomSuspendBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///报名
  /// </summary>
  public sealed partial class MttJoinREQ : pb::IMessage<MttJoinREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttJoinREQ> _parser = new pb::MessageParser<MttJoinREQ>(() => new MttJoinREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttJoinREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttJoinREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttJoinREQ(MttJoinREQ other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      join_ = other.join_;
      clubid_ = other.clubid_;
      type_ = other.type_;
      leagueid_ = other.leagueid_;
      pc_ = other.pc_;
      channel_ = other.channel_;
      invalidMail_ = other.invalidMail_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttJoinREQ Clone() {
      return new MttJoinREQ(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 1) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "join" field.</summary>
    public const int JoinFieldNumber = 2;
    private readonly static bool JoinDefaultValue = false;

    private bool join_;
    /// <summary>
    /// true 报名 false 退赛
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Join {
      get { if ((_hasBits0 & 2) != 0) { return join_; } else { return JoinDefaultValue; } }
      set {
        _hasBits0 |= 2;
        join_ = value;
      }
    }
    /// <summary>Gets whether the "join" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasJoin {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "join" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearJoin() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 3;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 4) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    ///0 普通请求参加mtt 1 同意条款参加mtt
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 8) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 5;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 16) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "pc" field.</summary>
    public const int PcFieldNumber = 6;
    private readonly static bool PcDefaultValue = false;

    private bool pc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Pc {
      get { if ((_hasBits0 & 32) != 0) { return pc_; } else { return PcDefaultValue; } }
      set {
        _hasBits0 |= 32;
        pc_ = value;
      }
    }
    /// <summary>Gets whether the "pc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPc {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "pc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPc() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 7;
    private readonly static string ChannelDefaultValue = "";

    private string channel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Channel {
      get { return channel_ ?? ChannelDefaultValue; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "channel" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChannel {
      get { return channel_ != null; }
    }
    /// <summary>Clears the value of the "channel" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChannel() {
      channel_ = null;
    }

    /// <summary>Field number for the "invalid_mail" field.</summary>
    public const int InvalidMailFieldNumber = 8;
    private readonly static bool InvalidMailDefaultValue = false;

    private bool invalidMail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InvalidMail {
      get { if ((_hasBits0 & 64) != 0) { return invalidMail_; } else { return InvalidMailDefaultValue; } }
      set {
        _hasBits0 |= 64;
        invalidMail_ = value;
      }
    }
    /// <summary>Gets whether the "invalid_mail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInvalidMail {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "invalid_mail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInvalidMail() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttJoinREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttJoinREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (Join != other.Join) return false;
      if (Clubid != other.Clubid) return false;
      if (Type != other.Type) return false;
      if (Leagueid != other.Leagueid) return false;
      if (Pc != other.Pc) return false;
      if (Channel != other.Channel) return false;
      if (InvalidMail != other.InvalidMail) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasJoin) hash ^= Join.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasPc) hash ^= Pc.GetHashCode();
      if (HasChannel) hash ^= Channel.GetHashCode();
      if (HasInvalidMail) hash ^= InvalidMail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasJoin) {
        output.WriteRawTag(16);
        output.WriteBool(Join);
      }
      if (HasClubid) {
        output.WriteRawTag(24);
        output.WriteInt32(Clubid);
      }
      if (HasType) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (HasLeagueid) {
        output.WriteRawTag(40);
        output.WriteInt32(Leagueid);
      }
      if (HasPc) {
        output.WriteRawTag(48);
        output.WriteBool(Pc);
      }
      if (HasChannel) {
        output.WriteRawTag(58);
        output.WriteString(Channel);
      }
      if (HasInvalidMail) {
        output.WriteRawTag(64);
        output.WriteBool(InvalidMail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasJoin) {
        output.WriteRawTag(16);
        output.WriteBool(Join);
      }
      if (HasClubid) {
        output.WriteRawTag(24);
        output.WriteInt32(Clubid);
      }
      if (HasType) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (HasLeagueid) {
        output.WriteRawTag(40);
        output.WriteInt32(Leagueid);
      }
      if (HasPc) {
        output.WriteRawTag(48);
        output.WriteBool(Pc);
      }
      if (HasChannel) {
        output.WriteRawTag(58);
        output.WriteString(Channel);
      }
      if (HasInvalidMail) {
        output.WriteRawTag(64);
        output.WriteBool(InvalidMail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasJoin) {
        size += 1 + 1;
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasPc) {
        size += 1 + 1;
      }
      if (HasChannel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (HasInvalidMail) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttJoinREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasJoin) {
        Join = other.Join;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasPc) {
        Pc = other.Pc;
      }
      if (other.HasChannel) {
        Channel = other.Channel;
      }
      if (other.HasInvalidMail) {
        InvalidMail = other.InvalidMail;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Join = input.ReadBool();
            break;
          }
          case 24: {
            Clubid = input.ReadInt32();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
          case 40: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 48: {
            Pc = input.ReadBool();
            break;
          }
          case 58: {
            Channel = input.ReadString();
            break;
          }
          case 64: {
            InvalidMail = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Join = input.ReadBool();
            break;
          }
          case 24: {
            Clubid = input.ReadInt32();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
          case 40: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 48: {
            Pc = input.ReadBool();
            break;
          }
          case 58: {
            Channel = input.ReadString();
            break;
          }
          case 64: {
            InvalidMail = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///报名时： 0 成功 
  ///1 等待授权   
  ///2 已经报名过了 
  ///3 已达到报名上限  
  ///-1 钱不够
  ///-2 延迟报名结束
  ///-3 已经没有rebuy机会
  ///-4 正在比赛中不能报名
  ///-5 已在别的俱乐部报名过
  ///-6 房间不存在
  ///-7 没到报名时间
  ///-8 分组赛day2不允许操作
  ///-9 分组赛报名并发控制，不允许用户同时对多场小组赛做报名或者取消报名的操作
  ///-10 报名失败
  ///-11 无门票
  ///-12 需同意条款 
  ///-13 俱乐部被封禁 
  ///-14 玩家在其他俱乐部报名的，当前俱乐部取消报名失败
  ///-15 玩家已在其他小组报名，当前分组赛只允许在一个小组报名
  ///-17 伙牌用户
  ///-19 密码桌未验证
  ///-20 clubid错误
  ///-21 比赛处于恢复未开始阶段，不接受报名
  ///-22 玩家同俱乐部在不同的联盟报名过
  ///-23 牌桌禁止pc端玩家报名
  ///-24 牌桌禁止未绑定邮箱玩家报名
  ///-25 用戶 agent 已被暫停，顯示 "Host 已限制您進行遊戲"
  ///-26 超聯 ban 聯盟，聯盟被封禁
  ///-27 鑽石官賽，鑽石不足無法買入
  ///
  ///退赛时： 0 成功，
  ///-1 退赛失败 -5 已在别的俱乐部报名过
  /// </summary>
  public sealed partial class MttJoinRSP : pb::IMessage<MttJoinRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttJoinRSP> _parser = new pb::MessageParser<MttJoinRSP>(() => new MttJoinRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttJoinRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttJoinRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttJoinRSP(MttJoinRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      join_ = other.join_;
      roomid_ = other.roomid_;
      type_ = other.type_;
      tempid_ = other.tempid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttJoinRSP Clone() {
      return new MttJoinRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "join" field.</summary>
    public const int JoinFieldNumber = 2;
    private readonly static bool JoinDefaultValue = false;

    private bool join_;
    /// <summary>
    ///与REQ相同
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Join {
      get { if ((_hasBits0 & 2) != 0) { return join_; } else { return JoinDefaultValue; } }
      set {
        _hasBits0 |= 2;
        join_ = value;
      }
    }
    /// <summary>Gets whether the "join" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasJoin {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "join" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearJoin() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 3;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    /// <summary>
    ///与REQ相同
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 4) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    ///0 普通请求参加mtt 1 同意条款参加mtt
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 8) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "tempid" field.</summary>
    public const int TempidFieldNumber = 5;
    private readonly static string TempidDefaultValue = "";

    private string tempid_;
    /// <summary>
    ///房间模板id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tempid {
      get { return tempid_ ?? TempidDefaultValue; }
      set {
        tempid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tempid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTempid {
      get { return tempid_ != null; }
    }
    /// <summary>Clears the value of the "tempid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTempid() {
      tempid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttJoinRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttJoinRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Join != other.Join) return false;
      if (Roomid != other.Roomid) return false;
      if (Type != other.Type) return false;
      if (Tempid != other.Tempid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasJoin) hash ^= Join.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasTempid) hash ^= Tempid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasJoin) {
        output.WriteRawTag(16);
        output.WriteBool(Join);
      }
      if (HasRoomid) {
        output.WriteRawTag(24);
        output.WriteInt32(Roomid);
      }
      if (HasType) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (HasTempid) {
        output.WriteRawTag(42);
        output.WriteString(Tempid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasJoin) {
        output.WriteRawTag(16);
        output.WriteBool(Join);
      }
      if (HasRoomid) {
        output.WriteRawTag(24);
        output.WriteInt32(Roomid);
      }
      if (HasType) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (HasTempid) {
        output.WriteRawTag(42);
        output.WriteString(Tempid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasJoin) {
        size += 1 + 1;
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasTempid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tempid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttJoinRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasJoin) {
        Join = other.Join;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasTempid) {
        Tempid = other.Tempid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Join = input.ReadBool();
            break;
          }
          case 24: {
            Roomid = input.ReadInt32();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
          case 42: {
            Tempid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Join = input.ReadBool();
            break;
          }
          case 24: {
            Roomid = input.ReadInt32();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
          case 42: {
            Tempid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttstatusREQ : pb::IMessage<MttstatusREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttstatusREQ> _parser = new pb::MessageParser<MttstatusREQ>(() => new MttstatusREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttstatusREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttstatusREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttstatusREQ(MttstatusREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttstatusREQ Clone() {
      return new MttstatusREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttstatusREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttstatusREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttstatusREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  ///房间内详情页
  /// </summary>
  public sealed partial class MttStatusRSP : pb::IMessage<MttStatusRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttStatusRSP> _parser = new pb::MessageParser<MttStatusRSP>(() => new MttStatusRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttStatusRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttStatusRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttStatusRSP(MttStatusRSP other) : this() {
      _hasBits0 = other._hasBits0;
      rank_ = other.rank_;
      blindLevel_ = other.blindLevel_;
      joinStatus_ = other.joinStatus_;
      totalReward_ = other.totalReward_;
      totalPlayerNum_ = other.totalPlayerNum_;
      currentPlayerNum_ = other.currentPlayerNum_;
      avgChips_ = other.avgChips_;
      topChips_ = other.topChips_;
      lowChips_ = other.lowChips_;
      addonNum_ = other.addonNum_;
      rebuyNum_ = other.rebuyNum_;
      totalBuyinTimes_ = other.totalBuyinTimes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttStatusRSP Clone() {
      return new MttStatusRSP(this);
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 1;
    private readonly static int RankDefaultValue = 0;

    private int rank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rank {
      get { if ((_hasBits0 & 1) != 0) { return rank_; } else { return RankDefaultValue; } }
      set {
        _hasBits0 |= 1;
        rank_ = value;
      }
    }
    /// <summary>Gets whether the "rank" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRank {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "rank" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRank() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "blind_level" field.</summary>
    public const int BlindLevelFieldNumber = 2;
    private readonly static int BlindLevelDefaultValue = 0;

    private int blindLevel_;
    /// <summary>
    ///当前盲注级别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BlindLevel {
      get { if ((_hasBits0 & 2) != 0) { return blindLevel_; } else { return BlindLevelDefaultValue; } }
      set {
        _hasBits0 |= 2;
        blindLevel_ = value;
      }
    }
    /// <summary>Gets whether the "blind_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlindLevel {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "blind_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlindLevel() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "join_status" field.</summary>
    public const int JoinStatusFieldNumber = 3;
    private readonly static int JoinStatusDefaultValue = 0;

    private int joinStatus_;
    /// <summary>
    ///报名状态  0 未报名  1 等待授权  2 已报名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int JoinStatus {
      get { if ((_hasBits0 & 4) != 0) { return joinStatus_; } else { return JoinStatusDefaultValue; } }
      set {
        _hasBits0 |= 4;
        joinStatus_ = value;
      }
    }
    /// <summary>Gets whether the "join_status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasJoinStatus {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "join_status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearJoinStatus() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "total_reward" field.</summary>
    public const int TotalRewardFieldNumber = 4;
    private readonly static long TotalRewardDefaultValue = 0L;

    private long totalReward_;
    /// <summary>
    ///总奖池
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalReward {
      get { if ((_hasBits0 & 8) != 0) { return totalReward_; } else { return TotalRewardDefaultValue; } }
      set {
        _hasBits0 |= 8;
        totalReward_ = value;
      }
    }
    /// <summary>Gets whether the "total_reward" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalReward {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "total_reward" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalReward() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "total_player_num" field.</summary>
    public const int TotalPlayerNumFieldNumber = 5;
    private readonly static int TotalPlayerNumDefaultValue = 0;

    private int totalPlayerNum_;
    /// <summary>
    ///总参赛人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalPlayerNum {
      get { if ((_hasBits0 & 16) != 0) { return totalPlayerNum_; } else { return TotalPlayerNumDefaultValue; } }
      set {
        _hasBits0 |= 16;
        totalPlayerNum_ = value;
      }
    }
    /// <summary>Gets whether the "total_player_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalPlayerNum {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "total_player_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalPlayerNum() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "current_player_num" field.</summary>
    public const int CurrentPlayerNumFieldNumber = 6;
    private readonly static int CurrentPlayerNumDefaultValue = 0;

    private int currentPlayerNum_;
    /// <summary>
    ///当前参赛人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrentPlayerNum {
      get { if ((_hasBits0 & 32) != 0) { return currentPlayerNum_; } else { return CurrentPlayerNumDefaultValue; } }
      set {
        _hasBits0 |= 32;
        currentPlayerNum_ = value;
      }
    }
    /// <summary>Gets whether the "current_player_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCurrentPlayerNum {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "current_player_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCurrentPlayerNum() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "avg_chips" field.</summary>
    public const int AvgChipsFieldNumber = 7;
    private readonly static long AvgChipsDefaultValue = 0L;

    private long avgChips_;
    /// <summary>
    ///平均筹码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AvgChips {
      get { if ((_hasBits0 & 64) != 0) { return avgChips_; } else { return AvgChipsDefaultValue; } }
      set {
        _hasBits0 |= 64;
        avgChips_ = value;
      }
    }
    /// <summary>Gets whether the "avg_chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAvgChips {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "avg_chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAvgChips() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "top_chips" field.</summary>
    public const int TopChipsFieldNumber = 8;
    private readonly static long TopChipsDefaultValue = 0L;

    private long topChips_;
    /// <summary>
    ///最深筹码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TopChips {
      get { if ((_hasBits0 & 128) != 0) { return topChips_; } else { return TopChipsDefaultValue; } }
      set {
        _hasBits0 |= 128;
        topChips_ = value;
      }
    }
    /// <summary>Gets whether the "top_chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTopChips {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "top_chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTopChips() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "low_chips" field.</summary>
    public const int LowChipsFieldNumber = 9;
    private readonly static long LowChipsDefaultValue = 0L;

    private long lowChips_;
    /// <summary>
    ///最浅筹码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LowChips {
      get { if ((_hasBits0 & 256) != 0) { return lowChips_; } else { return LowChipsDefaultValue; } }
      set {
        _hasBits0 |= 256;
        lowChips_ = value;
      }
    }
    /// <summary>Gets whether the "low_chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLowChips {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "low_chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLowChips() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "addon_num" field.</summary>
    public const int AddonNumFieldNumber = 10;
    private readonly static int AddonNumDefaultValue = 0;

    private int addonNum_;
    /// <summary>
    ///总addon数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AddonNum {
      get { if ((_hasBits0 & 512) != 0) { return addonNum_; } else { return AddonNumDefaultValue; } }
      set {
        _hasBits0 |= 512;
        addonNum_ = value;
      }
    }
    /// <summary>Gets whether the "addon_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAddonNum {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "addon_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAddonNum() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "rebuy_num" field.</summary>
    public const int RebuyNumFieldNumber = 11;
    private readonly static int RebuyNumDefaultValue = 0;

    private int rebuyNum_;
    /// <summary>
    ///总rebuy数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RebuyNum {
      get { if ((_hasBits0 & 1024) != 0) { return rebuyNum_; } else { return RebuyNumDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        rebuyNum_ = value;
      }
    }
    /// <summary>Gets whether the "rebuy_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRebuyNum {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "rebuy_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRebuyNum() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "total_buyin_times" field.</summary>
    public const int TotalBuyinTimesFieldNumber = 12;
    private readonly static int TotalBuyinTimesDefaultValue = 0;

    private int totalBuyinTimes_;
    /// <summary>
    ///总买入次数,分组赛day2用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalBuyinTimes {
      get { if ((_hasBits0 & 2048) != 0) { return totalBuyinTimes_; } else { return TotalBuyinTimesDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        totalBuyinTimes_ = value;
      }
    }
    /// <summary>Gets whether the "total_buyin_times" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalBuyinTimes {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "total_buyin_times" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalBuyinTimes() {
      _hasBits0 &= ~2048;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttStatusRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttStatusRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rank != other.Rank) return false;
      if (BlindLevel != other.BlindLevel) return false;
      if (JoinStatus != other.JoinStatus) return false;
      if (TotalReward != other.TotalReward) return false;
      if (TotalPlayerNum != other.TotalPlayerNum) return false;
      if (CurrentPlayerNum != other.CurrentPlayerNum) return false;
      if (AvgChips != other.AvgChips) return false;
      if (TopChips != other.TopChips) return false;
      if (LowChips != other.LowChips) return false;
      if (AddonNum != other.AddonNum) return false;
      if (RebuyNum != other.RebuyNum) return false;
      if (TotalBuyinTimes != other.TotalBuyinTimes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRank) hash ^= Rank.GetHashCode();
      if (HasBlindLevel) hash ^= BlindLevel.GetHashCode();
      if (HasJoinStatus) hash ^= JoinStatus.GetHashCode();
      if (HasTotalReward) hash ^= TotalReward.GetHashCode();
      if (HasTotalPlayerNum) hash ^= TotalPlayerNum.GetHashCode();
      if (HasCurrentPlayerNum) hash ^= CurrentPlayerNum.GetHashCode();
      if (HasAvgChips) hash ^= AvgChips.GetHashCode();
      if (HasTopChips) hash ^= TopChips.GetHashCode();
      if (HasLowChips) hash ^= LowChips.GetHashCode();
      if (HasAddonNum) hash ^= AddonNum.GetHashCode();
      if (HasRebuyNum) hash ^= RebuyNum.GetHashCode();
      if (HasTotalBuyinTimes) hash ^= TotalBuyinTimes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRank) {
        output.WriteRawTag(8);
        output.WriteInt32(Rank);
      }
      if (HasBlindLevel) {
        output.WriteRawTag(16);
        output.WriteInt32(BlindLevel);
      }
      if (HasJoinStatus) {
        output.WriteRawTag(24);
        output.WriteInt32(JoinStatus);
      }
      if (HasTotalReward) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalReward);
      }
      if (HasTotalPlayerNum) {
        output.WriteRawTag(40);
        output.WriteInt32(TotalPlayerNum);
      }
      if (HasCurrentPlayerNum) {
        output.WriteRawTag(48);
        output.WriteInt32(CurrentPlayerNum);
      }
      if (HasAvgChips) {
        output.WriteRawTag(56);
        output.WriteInt64(AvgChips);
      }
      if (HasTopChips) {
        output.WriteRawTag(64);
        output.WriteInt64(TopChips);
      }
      if (HasLowChips) {
        output.WriteRawTag(72);
        output.WriteInt64(LowChips);
      }
      if (HasAddonNum) {
        output.WriteRawTag(80);
        output.WriteInt32(AddonNum);
      }
      if (HasRebuyNum) {
        output.WriteRawTag(88);
        output.WriteInt32(RebuyNum);
      }
      if (HasTotalBuyinTimes) {
        output.WriteRawTag(96);
        output.WriteInt32(TotalBuyinTimes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRank) {
        output.WriteRawTag(8);
        output.WriteInt32(Rank);
      }
      if (HasBlindLevel) {
        output.WriteRawTag(16);
        output.WriteInt32(BlindLevel);
      }
      if (HasJoinStatus) {
        output.WriteRawTag(24);
        output.WriteInt32(JoinStatus);
      }
      if (HasTotalReward) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalReward);
      }
      if (HasTotalPlayerNum) {
        output.WriteRawTag(40);
        output.WriteInt32(TotalPlayerNum);
      }
      if (HasCurrentPlayerNum) {
        output.WriteRawTag(48);
        output.WriteInt32(CurrentPlayerNum);
      }
      if (HasAvgChips) {
        output.WriteRawTag(56);
        output.WriteInt64(AvgChips);
      }
      if (HasTopChips) {
        output.WriteRawTag(64);
        output.WriteInt64(TopChips);
      }
      if (HasLowChips) {
        output.WriteRawTag(72);
        output.WriteInt64(LowChips);
      }
      if (HasAddonNum) {
        output.WriteRawTag(80);
        output.WriteInt32(AddonNum);
      }
      if (HasRebuyNum) {
        output.WriteRawTag(88);
        output.WriteInt32(RebuyNum);
      }
      if (HasTotalBuyinTimes) {
        output.WriteRawTag(96);
        output.WriteInt32(TotalBuyinTimes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRank) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
      }
      if (HasBlindLevel) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BlindLevel);
      }
      if (HasJoinStatus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(JoinStatus);
      }
      if (HasTotalReward) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalReward);
      }
      if (HasTotalPlayerNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPlayerNum);
      }
      if (HasCurrentPlayerNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentPlayerNum);
      }
      if (HasAvgChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AvgChips);
      }
      if (HasTopChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TopChips);
      }
      if (HasLowChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LowChips);
      }
      if (HasAddonNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AddonNum);
      }
      if (HasRebuyNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RebuyNum);
      }
      if (HasTotalBuyinTimes) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalBuyinTimes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttStatusRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasRank) {
        Rank = other.Rank;
      }
      if (other.HasBlindLevel) {
        BlindLevel = other.BlindLevel;
      }
      if (other.HasJoinStatus) {
        JoinStatus = other.JoinStatus;
      }
      if (other.HasTotalReward) {
        TotalReward = other.TotalReward;
      }
      if (other.HasTotalPlayerNum) {
        TotalPlayerNum = other.TotalPlayerNum;
      }
      if (other.HasCurrentPlayerNum) {
        CurrentPlayerNum = other.CurrentPlayerNum;
      }
      if (other.HasAvgChips) {
        AvgChips = other.AvgChips;
      }
      if (other.HasTopChips) {
        TopChips = other.TopChips;
      }
      if (other.HasLowChips) {
        LowChips = other.LowChips;
      }
      if (other.HasAddonNum) {
        AddonNum = other.AddonNum;
      }
      if (other.HasRebuyNum) {
        RebuyNum = other.RebuyNum;
      }
      if (other.HasTotalBuyinTimes) {
        TotalBuyinTimes = other.TotalBuyinTimes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Rank = input.ReadInt32();
            break;
          }
          case 16: {
            BlindLevel = input.ReadInt32();
            break;
          }
          case 24: {
            JoinStatus = input.ReadInt32();
            break;
          }
          case 32: {
            TotalReward = input.ReadInt64();
            break;
          }
          case 40: {
            TotalPlayerNum = input.ReadInt32();
            break;
          }
          case 48: {
            CurrentPlayerNum = input.ReadInt32();
            break;
          }
          case 56: {
            AvgChips = input.ReadInt64();
            break;
          }
          case 64: {
            TopChips = input.ReadInt64();
            break;
          }
          case 72: {
            LowChips = input.ReadInt64();
            break;
          }
          case 80: {
            AddonNum = input.ReadInt32();
            break;
          }
          case 88: {
            RebuyNum = input.ReadInt32();
            break;
          }
          case 96: {
            TotalBuyinTimes = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Rank = input.ReadInt32();
            break;
          }
          case 16: {
            BlindLevel = input.ReadInt32();
            break;
          }
          case 24: {
            JoinStatus = input.ReadInt32();
            break;
          }
          case 32: {
            TotalReward = input.ReadInt64();
            break;
          }
          case 40: {
            TotalPlayerNum = input.ReadInt32();
            break;
          }
          case 48: {
            CurrentPlayerNum = input.ReadInt32();
            break;
          }
          case 56: {
            AvgChips = input.ReadInt64();
            break;
          }
          case 64: {
            TopChips = input.ReadInt64();
            break;
          }
          case 72: {
            LowChips = input.ReadInt64();
            break;
          }
          case 80: {
            AddonNum = input.ReadInt32();
            break;
          }
          case 88: {
            RebuyNum = input.ReadInt32();
            break;
          }
          case 96: {
            TotalBuyinTimes = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///奖励列表
  /// </summary>
  public sealed partial class MttRewardListREQ : pb::IMessage<MttRewardListREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttRewardListREQ> _parser = new pb::MessageParser<MttRewardListREQ>(() => new MttRewardListREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttRewardListREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttRewardListREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttRewardListREQ(MttRewardListREQ other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      startIndex_ = other.startIndex_;
      amount_ = other.amount_;
      system_ = other.system_;
      needCombined_ = other.needCombined_;
      leagueid_ = other.leagueid_;
      superLeagueid_ = other.superLeagueid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttRewardListREQ Clone() {
      return new MttRewardListREQ(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 1) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "start_index" field.</summary>
    public const int StartIndexFieldNumber = 2;
    private readonly static int StartIndexDefaultValue = 0;

    private int startIndex_;
    /// <summary>
    /// 请求从start_index开始的amount条记录,[start_index, start_index+amount),从1开始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartIndex {
      get { if ((_hasBits0 & 2) != 0) { return startIndex_; } else { return StartIndexDefaultValue; } }
      set {
        _hasBits0 |= 2;
        startIndex_ = value;
      }
    }
    /// <summary>Gets whether the "start_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartIndex {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "start_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartIndex() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private readonly static int AmountDefaultValue = 0;

    private int amount_;
    /// <summary>
    /// -1:返回start_index后的所有记录
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Amount {
      get { if ((_hasBits0 & 4) != 0) { return amount_; } else { return AmountDefaultValue; } }
      set {
        _hasBits0 |= 4;
        amount_ = value;
      }
    }
    /// <summary>Gets whether the "amount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAmount {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "amount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAmount() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "system" field.</summary>
    public const int SystemFieldNumber = 4;
    private readonly static string SystemDefaultValue = "";

    private string system_;
    /// <summary>
    ///用户系统信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string System {
      get { return system_ ?? SystemDefaultValue; }
      set {
        system_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "system" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSystem {
      get { return system_ != null; }
    }
    /// <summary>Clears the value of the "system" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSystem() {
      system_ = null;
    }

    /// <summary>Field number for the "need_combined" field.</summary>
    public const int NeedCombinedFieldNumber = 5;
    private readonly static bool NeedCombinedDefaultValue = false;

    private bool needCombined_;
    /// <summary>
    ///合并奖励列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NeedCombined {
      get { if ((_hasBits0 & 8) != 0) { return needCombined_; } else { return NeedCombinedDefaultValue; } }
      set {
        _hasBits0 |= 8;
        needCombined_ = value;
      }
    }
    /// <summary>Gets whether the "need_combined" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNeedCombined {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "need_combined" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNeedCombined() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 6;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    /// <summary>
    ///用以取得ppst幣值轉換過獎勵資訊
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 16) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "super_leagueid" field.</summary>
    public const int SuperLeagueidFieldNumber = 7;
    private readonly static int SuperLeagueidDefaultValue = 0;

    private int superLeagueid_;
    /// <summary>
    ///用以取得ppst幣值轉換過獎勵資訊
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueid {
      get { if ((_hasBits0 & 32) != 0) { return superLeagueid_; } else { return SuperLeagueidDefaultValue; } }
      set {
        _hasBits0 |= 32;
        superLeagueid_ = value;
      }
    }
    /// <summary>Gets whether the "super_leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueid {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "super_leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueid() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttRewardListREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttRewardListREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (StartIndex != other.StartIndex) return false;
      if (Amount != other.Amount) return false;
      if (System != other.System) return false;
      if (NeedCombined != other.NeedCombined) return false;
      if (Leagueid != other.Leagueid) return false;
      if (SuperLeagueid != other.SuperLeagueid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasStartIndex) hash ^= StartIndex.GetHashCode();
      if (HasAmount) hash ^= Amount.GetHashCode();
      if (HasSystem) hash ^= System.GetHashCode();
      if (HasNeedCombined) hash ^= NeedCombined.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasSuperLeagueid) hash ^= SuperLeagueid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasStartIndex) {
        output.WriteRawTag(16);
        output.WriteInt32(StartIndex);
      }
      if (HasAmount) {
        output.WriteRawTag(24);
        output.WriteInt32(Amount);
      }
      if (HasSystem) {
        output.WriteRawTag(34);
        output.WriteString(System);
      }
      if (HasNeedCombined) {
        output.WriteRawTag(40);
        output.WriteBool(NeedCombined);
      }
      if (HasLeagueid) {
        output.WriteRawTag(48);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(56);
        output.WriteInt32(SuperLeagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasStartIndex) {
        output.WriteRawTag(16);
        output.WriteInt32(StartIndex);
      }
      if (HasAmount) {
        output.WriteRawTag(24);
        output.WriteInt32(Amount);
      }
      if (HasSystem) {
        output.WriteRawTag(34);
        output.WriteString(System);
      }
      if (HasNeedCombined) {
        output.WriteRawTag(40);
        output.WriteBool(NeedCombined);
      }
      if (HasLeagueid) {
        output.WriteRawTag(48);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(56);
        output.WriteInt32(SuperLeagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasStartIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (HasAmount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
      }
      if (HasSystem) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(System);
      }
      if (HasNeedCombined) {
        size += 1 + 1;
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasSuperLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttRewardListREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasStartIndex) {
        StartIndex = other.StartIndex;
      }
      if (other.HasAmount) {
        Amount = other.Amount;
      }
      if (other.HasSystem) {
        System = other.System;
      }
      if (other.HasNeedCombined) {
        NeedCombined = other.NeedCombined;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasSuperLeagueid) {
        SuperLeagueid = other.SuperLeagueid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 24: {
            Amount = input.ReadInt32();
            break;
          }
          case 34: {
            System = input.ReadString();
            break;
          }
          case 40: {
            NeedCombined = input.ReadBool();
            break;
          }
          case 48: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 56: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 24: {
            Amount = input.ReadInt32();
            break;
          }
          case 34: {
            System = input.ReadString();
            break;
          }
          case 40: {
            NeedCombined = input.ReadBool();
            break;
          }
          case 48: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 56: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttRewardListRSP : pb::IMessage<MttRewardListRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttRewardListRSP> _parser = new pb::MessageParser<MttRewardListRSP>(() => new MttRewardListRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttRewardListRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttRewardListRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttRewardListRSP(MttRewardListRSP other) : this() {
      _hasBits0 = other._hasBits0;
      fixedReward_ = other.fixedReward_;
      rewardInfo_ = other.rewardInfo_.Clone();
      rewardNum_ = other.rewardNum_;
      startIndex_ = other.startIndex_;
      isLessMinimumReward_ = other.isLessMinimumReward_;
      needCombined_ = other.needCombined_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttRewardListRSP Clone() {
      return new MttRewardListRSP(this);
    }

    /// <summary>Field number for the "fixed_reward" field.</summary>
    public const int FixedRewardFieldNumber = 2;
    private readonly static bool FixedRewardDefaultValue = false;

    private bool fixedReward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FixedReward {
      get { if ((_hasBits0 & 1) != 0) { return fixedReward_; } else { return FixedRewardDefaultValue; } }
      set {
        _hasBits0 |= 1;
        fixedReward_ = value;
      }
    }
    /// <summary>Gets whether the "fixed_reward" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFixedReward {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "fixed_reward" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFixedReward() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "reward_info" field.</summary>
    public const int RewardInfoFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Texas.Protocol.MttRewardInfo> _repeated_rewardInfo_codec
        = pb::FieldCodec.ForMessage(26, global::Texas.Protocol.MttRewardInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.MttRewardInfo> rewardInfo_ = new pbc::RepeatedField<global::Texas.Protocol.MttRewardInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.MttRewardInfo> RewardInfo {
      get { return rewardInfo_; }
    }

    /// <summary>Field number for the "reward_num" field.</summary>
    public const int RewardNumFieldNumber = 4;
    private readonly static int RewardNumDefaultValue = 0;

    private int rewardNum_;
    /// <summary>
    /// 分页后,返回奖励列表的总条数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RewardNum {
      get { if ((_hasBits0 & 2) != 0) { return rewardNum_; } else { return RewardNumDefaultValue; } }
      set {
        _hasBits0 |= 2;
        rewardNum_ = value;
      }
    }
    /// <summary>Gets whether the "reward_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRewardNum {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "reward_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRewardNum() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "start_index" field.</summary>
    public const int StartIndexFieldNumber = 5;
    private readonly static int StartIndexDefaultValue = 0;

    private int startIndex_;
    /// <summary>
    /// 分页开始索引,从1开始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartIndex {
      get { if ((_hasBits0 & 4) != 0) { return startIndex_; } else { return StartIndexDefaultValue; } }
      set {
        _hasBits0 |= 4;
        startIndex_ = value;
      }
    }
    /// <summary>Gets whether the "start_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartIndex {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "start_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartIndex() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "is_less_minimum_reward" field.</summary>
    public const int IsLessMinimumRewardFieldNumber = 6;
    private readonly static bool IsLessMinimumRewardDefaultValue = false;

    private bool isLessMinimumReward_;
    /// <summary>
    /// 奖励是否小于一个买入(或指定值)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsLessMinimumReward {
      get { if ((_hasBits0 & 8) != 0) { return isLessMinimumReward_; } else { return IsLessMinimumRewardDefaultValue; } }
      set {
        _hasBits0 |= 8;
        isLessMinimumReward_ = value;
      }
    }
    /// <summary>Gets whether the "is_less_minimum_reward" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsLessMinimumReward {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "is_less_minimum_reward" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsLessMinimumReward() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "need_combined" field.</summary>
    public const int NeedCombinedFieldNumber = 7;
    private readonly static bool NeedCombinedDefaultValue = false;

    private bool needCombined_;
    /// <summary>
    ///合并奖励列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NeedCombined {
      get { if ((_hasBits0 & 16) != 0) { return needCombined_; } else { return NeedCombinedDefaultValue; } }
      set {
        _hasBits0 |= 16;
        needCombined_ = value;
      }
    }
    /// <summary>Gets whether the "need_combined" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNeedCombined {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "need_combined" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNeedCombined() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttRewardListRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttRewardListRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FixedReward != other.FixedReward) return false;
      if(!rewardInfo_.Equals(other.rewardInfo_)) return false;
      if (RewardNum != other.RewardNum) return false;
      if (StartIndex != other.StartIndex) return false;
      if (IsLessMinimumReward != other.IsLessMinimumReward) return false;
      if (NeedCombined != other.NeedCombined) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFixedReward) hash ^= FixedReward.GetHashCode();
      hash ^= rewardInfo_.GetHashCode();
      if (HasRewardNum) hash ^= RewardNum.GetHashCode();
      if (HasStartIndex) hash ^= StartIndex.GetHashCode();
      if (HasIsLessMinimumReward) hash ^= IsLessMinimumReward.GetHashCode();
      if (HasNeedCombined) hash ^= NeedCombined.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFixedReward) {
        output.WriteRawTag(16);
        output.WriteBool(FixedReward);
      }
      rewardInfo_.WriteTo(output, _repeated_rewardInfo_codec);
      if (HasRewardNum) {
        output.WriteRawTag(32);
        output.WriteInt32(RewardNum);
      }
      if (HasStartIndex) {
        output.WriteRawTag(40);
        output.WriteInt32(StartIndex);
      }
      if (HasIsLessMinimumReward) {
        output.WriteRawTag(48);
        output.WriteBool(IsLessMinimumReward);
      }
      if (HasNeedCombined) {
        output.WriteRawTag(56);
        output.WriteBool(NeedCombined);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFixedReward) {
        output.WriteRawTag(16);
        output.WriteBool(FixedReward);
      }
      rewardInfo_.WriteTo(ref output, _repeated_rewardInfo_codec);
      if (HasRewardNum) {
        output.WriteRawTag(32);
        output.WriteInt32(RewardNum);
      }
      if (HasStartIndex) {
        output.WriteRawTag(40);
        output.WriteInt32(StartIndex);
      }
      if (HasIsLessMinimumReward) {
        output.WriteRawTag(48);
        output.WriteBool(IsLessMinimumReward);
      }
      if (HasNeedCombined) {
        output.WriteRawTag(56);
        output.WriteBool(NeedCombined);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFixedReward) {
        size += 1 + 1;
      }
      size += rewardInfo_.CalculateSize(_repeated_rewardInfo_codec);
      if (HasRewardNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewardNum);
      }
      if (HasStartIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (HasIsLessMinimumReward) {
        size += 1 + 1;
      }
      if (HasNeedCombined) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttRewardListRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasFixedReward) {
        FixedReward = other.FixedReward;
      }
      rewardInfo_.Add(other.rewardInfo_);
      if (other.HasRewardNum) {
        RewardNum = other.RewardNum;
      }
      if (other.HasStartIndex) {
        StartIndex = other.StartIndex;
      }
      if (other.HasIsLessMinimumReward) {
        IsLessMinimumReward = other.IsLessMinimumReward;
      }
      if (other.HasNeedCombined) {
        NeedCombined = other.NeedCombined;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            FixedReward = input.ReadBool();
            break;
          }
          case 26: {
            rewardInfo_.AddEntriesFrom(input, _repeated_rewardInfo_codec);
            break;
          }
          case 32: {
            RewardNum = input.ReadInt32();
            break;
          }
          case 40: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 48: {
            IsLessMinimumReward = input.ReadBool();
            break;
          }
          case 56: {
            NeedCombined = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            FixedReward = input.ReadBool();
            break;
          }
          case 26: {
            rewardInfo_.AddEntriesFrom(ref input, _repeated_rewardInfo_codec);
            break;
          }
          case 32: {
            RewardNum = input.ReadInt32();
            break;
          }
          case 40: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 48: {
            IsLessMinimumReward = input.ReadBool();
            break;
          }
          case 56: {
            NeedCombined = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttRankListREQ : pb::IMessage<MttRankListREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttRankListREQ> _parser = new pb::MessageParser<MttRankListREQ>(() => new MttRankListREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttRankListREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttRankListREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttRankListREQ(MttRankListREQ other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      uid_ = other.uid_;
      startIndex_ = other.startIndex_;
      amount_ = other.amount_;
      leagueid_ = other.leagueid_;
      superLeagueid_ = other.superLeagueid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttRankListREQ Clone() {
      return new MttRankListREQ(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 1) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 2) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "start_index" field.</summary>
    public const int StartIndexFieldNumber = 3;
    private readonly static int StartIndexDefaultValue = 0;

    private int startIndex_;
    /// <summary>
    /// 请求从start_index开始的amount条记录,[start_index, start_index+amount),从1开始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartIndex {
      get { if ((_hasBits0 & 4) != 0) { return startIndex_; } else { return StartIndexDefaultValue; } }
      set {
        _hasBits0 |= 4;
        startIndex_ = value;
      }
    }
    /// <summary>Gets whether the "start_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartIndex {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "start_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartIndex() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private readonly static int AmountDefaultValue = 0;

    private int amount_;
    /// <summary>
    /// -1:返回start_index后的所有记录
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Amount {
      get { if ((_hasBits0 & 8) != 0) { return amount_; } else { return AmountDefaultValue; } }
      set {
        _hasBits0 |= 8;
        amount_ = value;
      }
    }
    /// <summary>Gets whether the "amount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAmount {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "amount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAmount() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 5;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    /// <summary>
    /// 取得ppst幣值用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 16) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "super_leagueid" field.</summary>
    public const int SuperLeagueidFieldNumber = 6;
    private readonly static int SuperLeagueidDefaultValue = 0;

    private int superLeagueid_;
    /// <summary>
    /// 取得ppst幣值用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueid {
      get { if ((_hasBits0 & 32) != 0) { return superLeagueid_; } else { return SuperLeagueidDefaultValue; } }
      set {
        _hasBits0 |= 32;
        superLeagueid_ = value;
      }
    }
    /// <summary>Gets whether the "super_leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueid {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "super_leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueid() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttRankListREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttRankListREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (Uid != other.Uid) return false;
      if (StartIndex != other.StartIndex) return false;
      if (Amount != other.Amount) return false;
      if (Leagueid != other.Leagueid) return false;
      if (SuperLeagueid != other.SuperLeagueid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasStartIndex) hash ^= StartIndex.GetHashCode();
      if (HasAmount) hash ^= Amount.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasSuperLeagueid) hash ^= SuperLeagueid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (HasStartIndex) {
        output.WriteRawTag(24);
        output.WriteInt32(StartIndex);
      }
      if (HasAmount) {
        output.WriteRawTag(32);
        output.WriteInt32(Amount);
      }
      if (HasLeagueid) {
        output.WriteRawTag(40);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(48);
        output.WriteInt32(SuperLeagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (HasStartIndex) {
        output.WriteRawTag(24);
        output.WriteInt32(StartIndex);
      }
      if (HasAmount) {
        output.WriteRawTag(32);
        output.WriteInt32(Amount);
      }
      if (HasLeagueid) {
        output.WriteRawTag(40);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(48);
        output.WriteInt32(SuperLeagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasStartIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (HasAmount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasSuperLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttRankListREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasStartIndex) {
        StartIndex = other.StartIndex;
      }
      if (other.HasAmount) {
        Amount = other.Amount;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasSuperLeagueid) {
        SuperLeagueid = other.SuperLeagueid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
          case 24: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 32: {
            Amount = input.ReadInt32();
            break;
          }
          case 40: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 48: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
          case 24: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 32: {
            Amount = input.ReadInt32();
            break;
          }
          case 40: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 48: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttRankInfo : pb::IMessage<MttRankInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttRankInfo> _parser = new pb::MessageParser<MttRankInfo>(() => new MttRankInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttRankInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttRankInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttRankInfo(MttRankInfo other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      chips_ = other.chips_;
      name_ = other.name_;
      icon_ = other.icon_;
      rebuyNum_ = other.rebuyNum_;
      addonNum_ = other.addonNum_;
      hunterNum_ = other.hunterNum_;
      hunterBonus_ = other.hunterBonus_;
      rank_ = other.rank_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttRankInfo Clone() {
      return new MttRankInfo(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "chips" field.</summary>
    public const int ChipsFieldNumber = 2;
    private readonly static long ChipsDefaultValue = 0L;

    private long chips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Chips {
      get { if ((_hasBits0 & 2) != 0) { return chips_; } else { return ChipsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        chips_ = value;
      }
    }
    /// <summary>Gets whether the "chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChips {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChips() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 4;
    private readonly static string IconDefaultValue = "";

    private string icon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_ ?? IconDefaultValue; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIcon {
      get { return icon_ != null; }
    }
    /// <summary>Clears the value of the "icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIcon() {
      icon_ = null;
    }

    /// <summary>Field number for the "rebuy_num" field.</summary>
    public const int RebuyNumFieldNumber = 5;
    private readonly static int RebuyNumDefaultValue = 0;

    private int rebuyNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RebuyNum {
      get { if ((_hasBits0 & 4) != 0) { return rebuyNum_; } else { return RebuyNumDefaultValue; } }
      set {
        _hasBits0 |= 4;
        rebuyNum_ = value;
      }
    }
    /// <summary>Gets whether the "rebuy_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRebuyNum {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "rebuy_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRebuyNum() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "addon_num" field.</summary>
    public const int AddonNumFieldNumber = 6;
    private readonly static int AddonNumDefaultValue = 0;

    private int addonNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AddonNum {
      get { if ((_hasBits0 & 8) != 0) { return addonNum_; } else { return AddonNumDefaultValue; } }
      set {
        _hasBits0 |= 8;
        addonNum_ = value;
      }
    }
    /// <summary>Gets whether the "addon_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAddonNum {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "addon_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAddonNum() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "hunter_num" field.</summary>
    public const int HunterNumFieldNumber = 7;
    private readonly static int HunterNumDefaultValue = 0;

    private int hunterNum_;
    /// <summary>
    ///放大10倍
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HunterNum {
      get { if ((_hasBits0 & 16) != 0) { return hunterNum_; } else { return HunterNumDefaultValue; } }
      set {
        _hasBits0 |= 16;
        hunterNum_ = value;
      }
    }
    /// <summary>Gets whether the "hunter_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHunterNum {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "hunter_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHunterNum() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "hunter_bonus" field.</summary>
    public const int HunterBonusFieldNumber = 8;
    private readonly static long HunterBonusDefaultValue = 0L;

    private long hunterBonus_;
    /// <summary>
    ///当前身价
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long HunterBonus {
      get { if ((_hasBits0 & 32) != 0) { return hunterBonus_; } else { return HunterBonusDefaultValue; } }
      set {
        _hasBits0 |= 32;
        hunterBonus_ = value;
      }
    }
    /// <summary>Gets whether the "hunter_bonus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHunterBonus {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "hunter_bonus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHunterBonus() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 9;
    private readonly static int RankDefaultValue = 0;

    private int rank_;
    /// <summary>
    /// -1: 无效
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rank {
      get { if ((_hasBits0 & 64) != 0) { return rank_; } else { return RankDefaultValue; } }
      set {
        _hasBits0 |= 64;
        rank_ = value;
      }
    }
    /// <summary>Gets whether the "rank" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRank {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "rank" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRank() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttRankInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttRankInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Chips != other.Chips) return false;
      if (Name != other.Name) return false;
      if (Icon != other.Icon) return false;
      if (RebuyNum != other.RebuyNum) return false;
      if (AddonNum != other.AddonNum) return false;
      if (HunterNum != other.HunterNum) return false;
      if (HunterBonus != other.HunterBonus) return false;
      if (Rank != other.Rank) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasChips) hash ^= Chips.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasIcon) hash ^= Icon.GetHashCode();
      if (HasRebuyNum) hash ^= RebuyNum.GetHashCode();
      if (HasAddonNum) hash ^= AddonNum.GetHashCode();
      if (HasHunterNum) hash ^= HunterNum.GetHashCode();
      if (HasHunterBonus) hash ^= HunterBonus.GetHashCode();
      if (HasRank) hash ^= Rank.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (HasChips) {
        output.WriteRawTag(16);
        output.WriteInt64(Chips);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (HasIcon) {
        output.WriteRawTag(34);
        output.WriteString(Icon);
      }
      if (HasRebuyNum) {
        output.WriteRawTag(40);
        output.WriteInt32(RebuyNum);
      }
      if (HasAddonNum) {
        output.WriteRawTag(48);
        output.WriteInt32(AddonNum);
      }
      if (HasHunterNum) {
        output.WriteRawTag(56);
        output.WriteInt32(HunterNum);
      }
      if (HasHunterBonus) {
        output.WriteRawTag(64);
        output.WriteInt64(HunterBonus);
      }
      if (HasRank) {
        output.WriteRawTag(72);
        output.WriteInt32(Rank);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (HasChips) {
        output.WriteRawTag(16);
        output.WriteInt64(Chips);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (HasIcon) {
        output.WriteRawTag(34);
        output.WriteString(Icon);
      }
      if (HasRebuyNum) {
        output.WriteRawTag(40);
        output.WriteInt32(RebuyNum);
      }
      if (HasAddonNum) {
        output.WriteRawTag(48);
        output.WriteInt32(AddonNum);
      }
      if (HasHunterNum) {
        output.WriteRawTag(56);
        output.WriteInt32(HunterNum);
      }
      if (HasHunterBonus) {
        output.WriteRawTag(64);
        output.WriteInt64(HunterBonus);
      }
      if (HasRank) {
        output.WriteRawTag(72);
        output.WriteInt32(Rank);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Chips);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasIcon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (HasRebuyNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RebuyNum);
      }
      if (HasAddonNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AddonNum);
      }
      if (HasHunterNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HunterNum);
      }
      if (HasHunterBonus) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HunterBonus);
      }
      if (HasRank) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttRankInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasChips) {
        Chips = other.Chips;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasIcon) {
        Icon = other.Icon;
      }
      if (other.HasRebuyNum) {
        RebuyNum = other.RebuyNum;
      }
      if (other.HasAddonNum) {
        AddonNum = other.AddonNum;
      }
      if (other.HasHunterNum) {
        HunterNum = other.HunterNum;
      }
      if (other.HasHunterBonus) {
        HunterBonus = other.HunterBonus;
      }
      if (other.HasRank) {
        Rank = other.Rank;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 16: {
            Chips = input.ReadInt64();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Icon = input.ReadString();
            break;
          }
          case 40: {
            RebuyNum = input.ReadInt32();
            break;
          }
          case 48: {
            AddonNum = input.ReadInt32();
            break;
          }
          case 56: {
            HunterNum = input.ReadInt32();
            break;
          }
          case 64: {
            HunterBonus = input.ReadInt64();
            break;
          }
          case 72: {
            Rank = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 16: {
            Chips = input.ReadInt64();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Icon = input.ReadString();
            break;
          }
          case 40: {
            RebuyNum = input.ReadInt32();
            break;
          }
          case 48: {
            AddonNum = input.ReadInt32();
            break;
          }
          case 56: {
            HunterNum = input.ReadInt32();
            break;
          }
          case 64: {
            HunterBonus = input.ReadInt64();
            break;
          }
          case 72: {
            Rank = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttRankListRSP : pb::IMessage<MttRankListRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttRankListRSP> _parser = new pb::MessageParser<MttRankListRSP>(() => new MttRankListRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttRankListRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttRankListRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttRankListRSP(MttRankListRSP other) : this() {
      _hasBits0 = other._hasBits0;
      info_ = other.info_.Clone();
      totalNum_ = other.totalNum_;
      startIndex_ = other.startIndex_;
      myInfo_ = other.myInfo_ != null ? other.myInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttRankListRSP Clone() {
      return new MttRankListRSP(this);
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.MttRankInfo> _repeated_info_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.MttRankInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.MttRankInfo> info_ = new pbc::RepeatedField<global::Texas.Protocol.MttRankInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.MttRankInfo> Info {
      get { return info_; }
    }

    /// <summary>Field number for the "total_num" field.</summary>
    public const int TotalNumFieldNumber = 2;
    private readonly static int TotalNumDefaultValue = 0;

    private int totalNum_;
    /// <summary>
    /// RankList总长度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalNum {
      get { if ((_hasBits0 & 1) != 0) { return totalNum_; } else { return TotalNumDefaultValue; } }
      set {
        _hasBits0 |= 1;
        totalNum_ = value;
      }
    }
    /// <summary>Gets whether the "total_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalNum {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "total_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalNum() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "start_index" field.</summary>
    public const int StartIndexFieldNumber = 3;
    private readonly static int StartIndexDefaultValue = 0;

    private int startIndex_;
    /// <summary>
    /// 返回列表索引,从1开始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartIndex {
      get { if ((_hasBits0 & 2) != 0) { return startIndex_; } else { return StartIndexDefaultValue; } }
      set {
        _hasBits0 |= 2;
        startIndex_ = value;
      }
    }
    /// <summary>Gets whether the "start_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartIndex {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "start_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartIndex() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "my_info" field.</summary>
    public const int MyInfoFieldNumber = 4;
    private global::Texas.Protocol.MttRankInfo myInfo_;
    /// <summary>
    /// 自身排名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.MttRankInfo MyInfo {
      get { return myInfo_; }
      set {
        myInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttRankListRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttRankListRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!info_.Equals(other.info_)) return false;
      if (TotalNum != other.TotalNum) return false;
      if (StartIndex != other.StartIndex) return false;
      if (!object.Equals(MyInfo, other.MyInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= info_.GetHashCode();
      if (HasTotalNum) hash ^= TotalNum.GetHashCode();
      if (HasStartIndex) hash ^= StartIndex.GetHashCode();
      if (myInfo_ != null) hash ^= MyInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      info_.WriteTo(output, _repeated_info_codec);
      if (HasTotalNum) {
        output.WriteRawTag(16);
        output.WriteInt32(TotalNum);
      }
      if (HasStartIndex) {
        output.WriteRawTag(24);
        output.WriteInt32(StartIndex);
      }
      if (myInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MyInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      info_.WriteTo(ref output, _repeated_info_codec);
      if (HasTotalNum) {
        output.WriteRawTag(16);
        output.WriteInt32(TotalNum);
      }
      if (HasStartIndex) {
        output.WriteRawTag(24);
        output.WriteInt32(StartIndex);
      }
      if (myInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MyInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += info_.CalculateSize(_repeated_info_codec);
      if (HasTotalNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalNum);
      }
      if (HasStartIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (myInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MyInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttRankListRSP other) {
      if (other == null) {
        return;
      }
      info_.Add(other.info_);
      if (other.HasTotalNum) {
        TotalNum = other.TotalNum;
      }
      if (other.HasStartIndex) {
        StartIndex = other.StartIndex;
      }
      if (other.myInfo_ != null) {
        if (myInfo_ == null) {
          MyInfo = new global::Texas.Protocol.MttRankInfo();
        }
        MyInfo.MergeFrom(other.MyInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
          case 16: {
            TotalNum = input.ReadInt32();
            break;
          }
          case 24: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 34: {
            if (myInfo_ == null) {
              MyInfo = new global::Texas.Protocol.MttRankInfo();
            }
            input.ReadMessage(MyInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
          case 16: {
            TotalNum = input.ReadInt32();
            break;
          }
          case 24: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 34: {
            if (myInfo_ == null) {
              MyInfo = new global::Texas.Protocol.MttRankInfo();
            }
            input.ReadMessage(MyInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttMyRankInfoBRC : pb::IMessage<MttMyRankInfoBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttMyRankInfoBRC> _parser = new pb::MessageParser<MttMyRankInfoBRC>(() => new MttMyRankInfoBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttMyRankInfoBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttMyRankInfoBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttMyRankInfoBRC(MttMyRankInfoBRC other) : this() {
      _hasBits0 = other._hasBits0;
      rank_ = other.rank_;
      itmPlayerNum_ = other.itmPlayerNum_;
      totalPlayerNum_ = other.totalPlayerNum_;
      currentRewardPpcoins_ = other.currentRewardPpcoins_;
      currentRewardTicketPrice_ = other.currentRewardTicketPrice_;
      currentRewardItemPrice_ = other.currentRewardItemPrice_;
      alivePlayerNum_ = other.alivePlayerNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttMyRankInfoBRC Clone() {
      return new MttMyRankInfoBRC(this);
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 1;
    private readonly static int RankDefaultValue = 0;

    private int rank_;
    /// <summary>
    /// 自身排名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rank {
      get { if ((_hasBits0 & 1) != 0) { return rank_; } else { return RankDefaultValue; } }
      set {
        _hasBits0 |= 1;
        rank_ = value;
      }
    }
    /// <summary>Gets whether the "rank" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRank {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "rank" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRank() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "itm_player_num" field.</summary>
    public const int ItmPlayerNumFieldNumber = 2;
    private readonly static int ItmPlayerNumDefaultValue = 0;

    private int itmPlayerNum_;
    /// <summary>
    /// 錢圈人數
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ItmPlayerNum {
      get { if ((_hasBits0 & 2) != 0) { return itmPlayerNum_; } else { return ItmPlayerNumDefaultValue; } }
      set {
        _hasBits0 |= 2;
        itmPlayerNum_ = value;
      }
    }
    /// <summary>Gets whether the "itm_player_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasItmPlayerNum {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "itm_player_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearItmPlayerNum() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "total_player_num" field.</summary>
    public const int TotalPlayerNumFieldNumber = 3;
    private readonly static int TotalPlayerNumDefaultValue = 0;

    private int totalPlayerNum_;
    /// <summary>
    /// 總玩家數
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalPlayerNum {
      get { if ((_hasBits0 & 4) != 0) { return totalPlayerNum_; } else { return TotalPlayerNumDefaultValue; } }
      set {
        _hasBits0 |= 4;
        totalPlayerNum_ = value;
      }
    }
    /// <summary>Gets whether the "total_player_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalPlayerNum {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "total_player_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalPlayerNum() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "current_reward_ppcoins" field.</summary>
    public const int CurrentRewardPpcoinsFieldNumber = 4;
    private readonly static long CurrentRewardPpcoinsDefaultValue = 0L;

    private long currentRewardPpcoins_;
    /// <summary>
    /// 當前獎勵PP幣
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CurrentRewardPpcoins {
      get { if ((_hasBits0 & 8) != 0) { return currentRewardPpcoins_; } else { return CurrentRewardPpcoinsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        currentRewardPpcoins_ = value;
      }
    }
    /// <summary>Gets whether the "current_reward_ppcoins" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCurrentRewardPpcoins {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "current_reward_ppcoins" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCurrentRewardPpcoins() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "current_reward_ticket_price" field.</summary>
    public const int CurrentRewardTicketPriceFieldNumber = 5;
    private readonly static long CurrentRewardTicketPriceDefaultValue = 0L;

    private long currentRewardTicketPrice_;
    /// <summary>
    /// 當前獎勵門票價格
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CurrentRewardTicketPrice {
      get { if ((_hasBits0 & 16) != 0) { return currentRewardTicketPrice_; } else { return CurrentRewardTicketPriceDefaultValue; } }
      set {
        _hasBits0 |= 16;
        currentRewardTicketPrice_ = value;
      }
    }
    /// <summary>Gets whether the "current_reward_ticket_price" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCurrentRewardTicketPrice {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "current_reward_ticket_price" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCurrentRewardTicketPrice() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "current_reward_item_price" field.</summary>
    public const int CurrentRewardItemPriceFieldNumber = 6;
    private readonly static long CurrentRewardItemPriceDefaultValue = 0L;

    private long currentRewardItemPrice_;
    /// <summary>
    /// 當前獎勵實物價格
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CurrentRewardItemPrice {
      get { if ((_hasBits0 & 32) != 0) { return currentRewardItemPrice_; } else { return CurrentRewardItemPriceDefaultValue; } }
      set {
        _hasBits0 |= 32;
        currentRewardItemPrice_ = value;
      }
    }
    /// <summary>Gets whether the "current_reward_item_price" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCurrentRewardItemPrice {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "current_reward_item_price" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCurrentRewardItemPrice() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "alive_player_num" field.</summary>
    public const int AlivePlayerNumFieldNumber = 7;
    private readonly static int AlivePlayerNumDefaultValue = 0;

    private int alivePlayerNum_;
    /// <summary>
    /// 存活玩家數
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AlivePlayerNum {
      get { if ((_hasBits0 & 64) != 0) { return alivePlayerNum_; } else { return AlivePlayerNumDefaultValue; } }
      set {
        _hasBits0 |= 64;
        alivePlayerNum_ = value;
      }
    }
    /// <summary>Gets whether the "alive_player_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAlivePlayerNum {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "alive_player_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAlivePlayerNum() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttMyRankInfoBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttMyRankInfoBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rank != other.Rank) return false;
      if (ItmPlayerNum != other.ItmPlayerNum) return false;
      if (TotalPlayerNum != other.TotalPlayerNum) return false;
      if (CurrentRewardPpcoins != other.CurrentRewardPpcoins) return false;
      if (CurrentRewardTicketPrice != other.CurrentRewardTicketPrice) return false;
      if (CurrentRewardItemPrice != other.CurrentRewardItemPrice) return false;
      if (AlivePlayerNum != other.AlivePlayerNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRank) hash ^= Rank.GetHashCode();
      if (HasItmPlayerNum) hash ^= ItmPlayerNum.GetHashCode();
      if (HasTotalPlayerNum) hash ^= TotalPlayerNum.GetHashCode();
      if (HasCurrentRewardPpcoins) hash ^= CurrentRewardPpcoins.GetHashCode();
      if (HasCurrentRewardTicketPrice) hash ^= CurrentRewardTicketPrice.GetHashCode();
      if (HasCurrentRewardItemPrice) hash ^= CurrentRewardItemPrice.GetHashCode();
      if (HasAlivePlayerNum) hash ^= AlivePlayerNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRank) {
        output.WriteRawTag(8);
        output.WriteInt32(Rank);
      }
      if (HasItmPlayerNum) {
        output.WriteRawTag(16);
        output.WriteInt32(ItmPlayerNum);
      }
      if (HasTotalPlayerNum) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalPlayerNum);
      }
      if (HasCurrentRewardPpcoins) {
        output.WriteRawTag(32);
        output.WriteInt64(CurrentRewardPpcoins);
      }
      if (HasCurrentRewardTicketPrice) {
        output.WriteRawTag(40);
        output.WriteInt64(CurrentRewardTicketPrice);
      }
      if (HasCurrentRewardItemPrice) {
        output.WriteRawTag(48);
        output.WriteInt64(CurrentRewardItemPrice);
      }
      if (HasAlivePlayerNum) {
        output.WriteRawTag(56);
        output.WriteInt32(AlivePlayerNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRank) {
        output.WriteRawTag(8);
        output.WriteInt32(Rank);
      }
      if (HasItmPlayerNum) {
        output.WriteRawTag(16);
        output.WriteInt32(ItmPlayerNum);
      }
      if (HasTotalPlayerNum) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalPlayerNum);
      }
      if (HasCurrentRewardPpcoins) {
        output.WriteRawTag(32);
        output.WriteInt64(CurrentRewardPpcoins);
      }
      if (HasCurrentRewardTicketPrice) {
        output.WriteRawTag(40);
        output.WriteInt64(CurrentRewardTicketPrice);
      }
      if (HasCurrentRewardItemPrice) {
        output.WriteRawTag(48);
        output.WriteInt64(CurrentRewardItemPrice);
      }
      if (HasAlivePlayerNum) {
        output.WriteRawTag(56);
        output.WriteInt32(AlivePlayerNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRank) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
      }
      if (HasItmPlayerNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItmPlayerNum);
      }
      if (HasTotalPlayerNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPlayerNum);
      }
      if (HasCurrentRewardPpcoins) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrentRewardPpcoins);
      }
      if (HasCurrentRewardTicketPrice) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrentRewardTicketPrice);
      }
      if (HasCurrentRewardItemPrice) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrentRewardItemPrice);
      }
      if (HasAlivePlayerNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AlivePlayerNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttMyRankInfoBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasRank) {
        Rank = other.Rank;
      }
      if (other.HasItmPlayerNum) {
        ItmPlayerNum = other.ItmPlayerNum;
      }
      if (other.HasTotalPlayerNum) {
        TotalPlayerNum = other.TotalPlayerNum;
      }
      if (other.HasCurrentRewardPpcoins) {
        CurrentRewardPpcoins = other.CurrentRewardPpcoins;
      }
      if (other.HasCurrentRewardTicketPrice) {
        CurrentRewardTicketPrice = other.CurrentRewardTicketPrice;
      }
      if (other.HasCurrentRewardItemPrice) {
        CurrentRewardItemPrice = other.CurrentRewardItemPrice;
      }
      if (other.HasAlivePlayerNum) {
        AlivePlayerNum = other.AlivePlayerNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Rank = input.ReadInt32();
            break;
          }
          case 16: {
            ItmPlayerNum = input.ReadInt32();
            break;
          }
          case 24: {
            TotalPlayerNum = input.ReadInt32();
            break;
          }
          case 32: {
            CurrentRewardPpcoins = input.ReadInt64();
            break;
          }
          case 40: {
            CurrentRewardTicketPrice = input.ReadInt64();
            break;
          }
          case 48: {
            CurrentRewardItemPrice = input.ReadInt64();
            break;
          }
          case 56: {
            AlivePlayerNum = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Rank = input.ReadInt32();
            break;
          }
          case 16: {
            ItmPlayerNum = input.ReadInt32();
            break;
          }
          case 24: {
            TotalPlayerNum = input.ReadInt32();
            break;
          }
          case 32: {
            CurrentRewardPpcoins = input.ReadInt64();
            break;
          }
          case 40: {
            CurrentRewardTicketPrice = input.ReadInt64();
            break;
          }
          case 48: {
            CurrentRewardItemPrice = input.ReadInt64();
            break;
          }
          case 56: {
            AlivePlayerNum = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///停止涨盲
  /// </summary>
  public sealed partial class MttBlindStopBRC : pb::IMessage<MttBlindStopBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttBlindStopBRC> _parser = new pb::MessageParser<MttBlindStopBRC>(() => new MttBlindStopBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttBlindStopBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttBlindStopBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttBlindStopBRC(MttBlindStopBRC other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      left_ = other.left_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttBlindStopBRC Clone() {
      return new MttBlindStopBRC(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    /// 1 休息  2 addon 3 暂停 4 服务器挂起房间 5 协商分池
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "left" field.</summary>
    public const int LeftFieldNumber = 2;
    private readonly static int LeftDefaultValue = 0;

    private int left_;
    /// <summary>
    /// addon left time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Left {
      get { if ((_hasBits0 & 2) != 0) { return left_; } else { return LeftDefaultValue; } }
      set {
        _hasBits0 |= 2;
        left_ = value;
      }
    }
    /// <summary>Gets whether the "left" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeft {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "left" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeft() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttBlindStopBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttBlindStopBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Left != other.Left) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasLeft) hash ^= Left.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasLeft) {
        output.WriteRawTag(16);
        output.WriteInt32(Left);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasLeft) {
        output.WriteRawTag(16);
        output.WriteInt32(Left);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasLeft) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Left);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttBlindStopBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasLeft) {
        Left = other.Left;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            Left = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            Left = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///中场休息剩余时间
  /// </summary>
  public sealed partial class MttBreakTimeBRC : pb::IMessage<MttBreakTimeBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttBreakTimeBRC> _parser = new pb::MessageParser<MttBreakTimeBRC>(() => new MttBreakTimeBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttBreakTimeBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttBreakTimeBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttBreakTimeBRC(MttBreakTimeBRC other) : this() {
      _hasBits0 = other._hasBits0;
      left_ = other.left_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttBreakTimeBRC Clone() {
      return new MttBreakTimeBRC(this);
    }

    /// <summary>Field number for the "left" field.</summary>
    public const int LeftFieldNumber = 1;
    private readonly static int LeftDefaultValue = 0;

    private int left_;
    /// <summary>
    ///剩余时间，秒
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Left {
      get { if ((_hasBits0 & 1) != 0) { return left_; } else { return LeftDefaultValue; } }
      set {
        _hasBits0 |= 1;
        left_ = value;
      }
    }
    /// <summary>Gets whether the "left" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeft {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "left" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeft() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttBreakTimeBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttBreakTimeBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Left != other.Left) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLeft) hash ^= Left.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLeft) {
        output.WriteRawTag(8);
        output.WriteInt32(Left);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLeft) {
        output.WriteRawTag(8);
        output.WriteInt32(Left);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLeft) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Left);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttBreakTimeBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasLeft) {
        Left = other.Left;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Left = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Left = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///开始addon
  /// </summary>
  public sealed partial class AddonNotifyBRC : pb::IMessage<AddonNotifyBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AddonNotifyBRC> _parser = new pb::MessageParser<AddonNotifyBRC>(() => new AddonNotifyBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AddonNotifyBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddonNotifyBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddonNotifyBRC(AddonNotifyBRC other) : this() {
      _hasBits0 = other._hasBits0;
      left_ = other.left_;
      num_ = other.num_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddonNotifyBRC Clone() {
      return new AddonNotifyBRC(this);
    }

    /// <summary>Field number for the "left" field.</summary>
    public const int LeftFieldNumber = 1;
    private readonly static int LeftDefaultValue = 0;

    private int left_;
    /// <summary>
    ///剩余时间，秒
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Left {
      get { if ((_hasBits0 & 1) != 0) { return left_; } else { return LeftDefaultValue; } }
      set {
        _hasBits0 |= 1;
        left_ = value;
      }
    }
    /// <summary>Gets whether the "left" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeft {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "left" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeft() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 2;
    private readonly static int NumDefaultValue = 0;

    private int num_;
    /// <summary>
    ///可以几次addon
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Num {
      get { if ((_hasBits0 & 2) != 0) { return num_; } else { return NumDefaultValue; } }
      set {
        _hasBits0 |= 2;
        num_ = value;
      }
    }
    /// <summary>Gets whether the "num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNum {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNum() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AddonNotifyBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AddonNotifyBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Left != other.Left) return false;
      if (Num != other.Num) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLeft) hash ^= Left.GetHashCode();
      if (HasNum) hash ^= Num.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLeft) {
        output.WriteRawTag(8);
        output.WriteInt32(Left);
      }
      if (HasNum) {
        output.WriteRawTag(16);
        output.WriteInt32(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLeft) {
        output.WriteRawTag(8);
        output.WriteInt32(Left);
      }
      if (HasNum) {
        output.WriteRawTag(16);
        output.WriteInt32(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLeft) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Left);
      }
      if (HasNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AddonNotifyBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasLeft) {
        Left = other.Left;
      }
      if (other.HasNum) {
        Num = other.Num;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Left = input.ReadInt32();
            break;
          }
          case 16: {
            Num = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Left = input.ReadInt32();
            break;
          }
          case 16: {
            Num = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///主动请求换桌
  /// </summary>
  public sealed partial class ChangeTableREQ : pb::IMessage<ChangeTableREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChangeTableREQ> _parser = new pb::MessageParser<ChangeTableREQ>(() => new ChangeTableREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChangeTableREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChangeTableREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChangeTableREQ(ChangeTableREQ other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      tid_ = other.tid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChangeTableREQ Clone() {
      return new ChangeTableREQ(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 1) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "tid" field.</summary>
    public const int TidFieldNumber = 2;
    private readonly static int TidDefaultValue = 0;

    private int tid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Tid {
      get { if ((_hasBits0 & 2) != 0) { return tid_; } else { return TidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        tid_ = value;
      }
    }
    /// <summary>Gets whether the "tid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "tid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChangeTableREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChangeTableREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (Tid != other.Tid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasTid) hash ^= Tid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasTid) {
        output.WriteRawTag(16);
        output.WriteInt32(Tid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasTid) {
        output.WriteRawTag(16);
        output.WriteInt32(Tid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasTid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChangeTableREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasTid) {
        Tid = other.Tid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Tid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Tid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AddonREQ : pb::IMessage<AddonREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AddonREQ> _parser = new pb::MessageParser<AddonREQ>(() => new AddonREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AddonREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddonREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddonREQ(AddonREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddonREQ Clone() {
      return new AddonREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AddonREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AddonREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AddonREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class AddonBRC : pb::IMessage<AddonBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AddonBRC> _parser = new pb::MessageParser<AddonBRC>(() => new AddonBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AddonBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddonBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddonBRC(AddonBRC other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      seatid_ = other.seatid_;
      chips_ = other.chips_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AddonBRC Clone() {
      return new AddonBRC(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// 0 addon成功  -1 筹码不够  -2 不能addon  1 等待授权  -4 无门票
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 2;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 2) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "chips" field.</summary>
    public const int ChipsFieldNumber = 3;
    private readonly static long ChipsDefaultValue = 0L;

    private long chips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Chips {
      get { if ((_hasBits0 & 4) != 0) { return chips_; } else { return ChipsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        chips_ = value;
      }
    }
    /// <summary>Gets whether the "chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChips {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChips() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AddonBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AddonBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Seatid != other.Seatid) return false;
      if (Chips != other.Chips) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasChips) hash ^= Chips.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasChips) {
        output.WriteRawTag(24);
        output.WriteInt64(Chips);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasChips) {
        output.WriteRawTag(24);
        output.WriteInt64(Chips);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Chips);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AddonBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasChips) {
        Chips = other.Chips;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            Chips = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            Chips = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttStartLeftBRC : pb::IMessage<MttStartLeftBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttStartLeftBRC> _parser = new pb::MessageParser<MttStartLeftBRC>(() => new MttStartLeftBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttStartLeftBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttStartLeftBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttStartLeftBRC(MttStartLeftBRC other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      left_ = other.left_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttStartLeftBRC Clone() {
      return new MttStartLeftBRC(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 1) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "left" field.</summary>
    public const int LeftFieldNumber = 2;
    private readonly static int LeftDefaultValue = 0;

    private int left_;
    /// <summary>
    ///单位秒
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Left {
      get { if ((_hasBits0 & 2) != 0) { return left_; } else { return LeftDefaultValue; } }
      set {
        _hasBits0 |= 2;
        left_ = value;
      }
    }
    /// <summary>Gets whether the "left" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeft {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "left" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeft() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttStartLeftBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttStartLeftBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (Left != other.Left) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasLeft) hash ^= Left.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasLeft) {
        output.WriteRawTag(16);
        output.WriteInt32(Left);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasLeft) {
        output.WriteRawTag(16);
        output.WriteInt32(Left);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasLeft) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Left);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttStartLeftBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasLeft) {
        Left = other.Left;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Left = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Left = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///人数不够，等待mtt换桌
  /// </summary>
  public sealed partial class MttWaitGameStartBRC : pb::IMessage<MttWaitGameStartBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttWaitGameStartBRC> _parser = new pb::MessageParser<MttWaitGameStartBRC>(() => new MttWaitGameStartBRC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttWaitGameStartBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttWaitGameStartBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttWaitGameStartBRC(MttWaitGameStartBRC other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttWaitGameStartBRC Clone() {
      return new MttWaitGameStartBRC(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttWaitGameStartBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttWaitGameStartBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttWaitGameStartBRC other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class LookerREQ : pb::IMessage<LookerREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LookerREQ> _parser = new pb::MessageParser<LookerREQ>(() => new LookerREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LookerREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LookerREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LookerREQ(LookerREQ other) : this() {
      _hasBits0 = other._hasBits0;
      tid_ = other.tid_;
      startIndex_ = other.startIndex_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LookerREQ Clone() {
      return new LookerREQ(this);
    }

    /// <summary>Field number for the "tid" field.</summary>
    public const int TidFieldNumber = 1;
    private readonly static int TidDefaultValue = 0;

    private int tid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Tid {
      get { if ((_hasBits0 & 1) != 0) { return tid_; } else { return TidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        tid_ = value;
      }
    }
    /// <summary>Gets whether the "tid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "tid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "start_index" field.</summary>
    public const int StartIndexFieldNumber = 2;
    private readonly static int StartIndexDefaultValue = 0;

    private int startIndex_;
    /// <summary>
    /// 请求从start_index开始的amount条记录,[start_index, start_index+amount),从1开始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartIndex {
      get { if ((_hasBits0 & 2) != 0) { return startIndex_; } else { return StartIndexDefaultValue; } }
      set {
        _hasBits0 |= 2;
        startIndex_ = value;
      }
    }
    /// <summary>Gets whether the "start_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartIndex {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "start_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartIndex() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private readonly static int AmountDefaultValue = 0;

    private int amount_;
    /// <summary>
    /// -1:返回start_index后的所有记录
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Amount {
      get { if ((_hasBits0 & 4) != 0) { return amount_; } else { return AmountDefaultValue; } }
      set {
        _hasBits0 |= 4;
        amount_ = value;
      }
    }
    /// <summary>Gets whether the "amount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAmount {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "amount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAmount() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LookerREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LookerREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tid != other.Tid) return false;
      if (StartIndex != other.StartIndex) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTid) hash ^= Tid.GetHashCode();
      if (HasStartIndex) hash ^= StartIndex.GetHashCode();
      if (HasAmount) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTid) {
        output.WriteRawTag(8);
        output.WriteInt32(Tid);
      }
      if (HasStartIndex) {
        output.WriteRawTag(16);
        output.WriteInt32(StartIndex);
      }
      if (HasAmount) {
        output.WriteRawTag(24);
        output.WriteInt32(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTid) {
        output.WriteRawTag(8);
        output.WriteInt32(Tid);
      }
      if (HasStartIndex) {
        output.WriteRawTag(16);
        output.WriteInt32(StartIndex);
      }
      if (HasAmount) {
        output.WriteRawTag(24);
        output.WriteInt32(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tid);
      }
      if (HasStartIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (HasAmount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LookerREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasTid) {
        Tid = other.Tid;
      }
      if (other.HasStartIndex) {
        StartIndex = other.StartIndex;
      }
      if (other.HasAmount) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Tid = input.ReadInt32();
            break;
          }
          case 16: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 24: {
            Amount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Tid = input.ReadInt32();
            break;
          }
          case 16: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 24: {
            Amount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LookerRSP : pb::IMessage<LookerRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LookerRSP> _parser = new pb::MessageParser<LookerRSP>(() => new LookerRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LookerRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LookerRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LookerRSP(LookerRSP other) : this() {
      _hasBits0 = other._hasBits0;
      user_ = other.user_.Clone();
      lookerNum_ = other.lookerNum_;
      startIndex_ = other.startIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LookerRSP Clone() {
      return new LookerRSP(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.UserBrief> _repeated_user_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.UserBrief.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.UserBrief> user_ = new pbc::RepeatedField<global::Texas.Protocol.UserBrief>();
    /// <summary>
    /// 最多50个旁观
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.UserBrief> User {
      get { return user_; }
    }

    /// <summary>Field number for the "looker_num" field.</summary>
    public const int LookerNumFieldNumber = 2;
    private readonly static int LookerNumDefaultValue = 0;

    private int lookerNum_;
    /// <summary>
    /// 旁观人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LookerNum {
      get { if ((_hasBits0 & 1) != 0) { return lookerNum_; } else { return LookerNumDefaultValue; } }
      set {
        _hasBits0 |= 1;
        lookerNum_ = value;
      }
    }
    /// <summary>Gets whether the "looker_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLookerNum {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "looker_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLookerNum() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "start_index" field.</summary>
    public const int StartIndexFieldNumber = 3;
    private readonly static int StartIndexDefaultValue = 0;

    private int startIndex_;
    /// <summary>
    /// 返回列表开始索引,从1开始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartIndex {
      get { if ((_hasBits0 & 2) != 0) { return startIndex_; } else { return StartIndexDefaultValue; } }
      set {
        _hasBits0 |= 2;
        startIndex_ = value;
      }
    }
    /// <summary>Gets whether the "start_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartIndex {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "start_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartIndex() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LookerRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LookerRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!user_.Equals(other.user_)) return false;
      if (LookerNum != other.LookerNum) return false;
      if (StartIndex != other.StartIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= user_.GetHashCode();
      if (HasLookerNum) hash ^= LookerNum.GetHashCode();
      if (HasStartIndex) hash ^= StartIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      user_.WriteTo(output, _repeated_user_codec);
      if (HasLookerNum) {
        output.WriteRawTag(16);
        output.WriteInt32(LookerNum);
      }
      if (HasStartIndex) {
        output.WriteRawTag(24);
        output.WriteInt32(StartIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      user_.WriteTo(ref output, _repeated_user_codec);
      if (HasLookerNum) {
        output.WriteRawTag(16);
        output.WriteInt32(LookerNum);
      }
      if (HasStartIndex) {
        output.WriteRawTag(24);
        output.WriteInt32(StartIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += user_.CalculateSize(_repeated_user_codec);
      if (HasLookerNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LookerNum);
      }
      if (HasStartIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LookerRSP other) {
      if (other == null) {
        return;
      }
      user_.Add(other.user_);
      if (other.HasLookerNum) {
        LookerNum = other.LookerNum;
      }
      if (other.HasStartIndex) {
        StartIndex = other.StartIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            user_.AddEntriesFrom(input, _repeated_user_codec);
            break;
          }
          case 16: {
            LookerNum = input.ReadInt32();
            break;
          }
          case 24: {
            StartIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            user_.AddEntriesFrom(ref input, _repeated_user_codec);
            break;
          }
          case 16: {
            LookerNum = input.ReadInt32();
            break;
          }
          case 24: {
            StartIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttStartInfo : pb::IMessage<MttStartInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttStartInfo> _parser = new pb::MessageParser<MttStartInfo>(() => new MttStartInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttStartInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttStartInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttStartInfo(MttStartInfo other) : this() {
      _hasBits0 = other._hasBits0;
      flag_ = other.flag_;
      startTime_ = other.startTime_;
      roomid_ = other.roomid_;
      status_ = other.status_;
      handle_ = other.handle_;
      endTime_ = other.endTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttStartInfo Clone() {
      return new MttStartInfo(this);
    }

    /// <summary>Field number for the "flag" field.</summary>
    public const int FlagFieldNumber = 1;
    private readonly static string FlagDefaultValue = "";

    private string flag_;
    /// <summary>
    /// A,B,C,D,E,M
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Flag {
      get { return flag_ ?? FlagDefaultValue; }
      set {
        flag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "flag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFlag {
      get { return flag_ != null; }
    }
    /// <summary>Clears the value of the "flag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFlag() {
      flag_ = null;
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 2;
    private readonly static long StartTimeDefaultValue = 0L;

    private long startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartTime {
      get { if ((_hasBits0 & 1) != 0) { return startTime_; } else { return StartTimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        startTime_ = value;
      }
    }
    /// <summary>Gets whether the "start_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "start_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartTime() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 3;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 2) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private readonly static int StatusDefaultValue = 0;

    private int status_;
    /// <summary>
    /// 0未开始  1已开始 2正常结束 3 未开赛结束
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Status {
      get { if ((_hasBits0 & 4) != 0) { return status_; } else { return StatusDefaultValue; } }
      set {
        _hasBits0 |= 4;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatus {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatus() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "handle" field.</summary>
    public const int HandleFieldNumber = 5;
    private readonly static long HandleDefaultValue = 0L;

    private long handle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Handle {
      get { if ((_hasBits0 & 8) != 0) { return handle_; } else { return HandleDefaultValue; } }
      set {
        _hasBits0 |= 8;
        handle_ = value;
      }
    }
    /// <summary>Gets whether the "handle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHandle {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "handle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHandle() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 6;
    private readonly static long EndTimeDefaultValue = 0L;

    private long endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndTime {
      get { if ((_hasBits0 & 16) != 0) { return endTime_; } else { return EndTimeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        endTime_ = value;
      }
    }
    /// <summary>Gets whether the "end_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndTime {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "end_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndTime() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttStartInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttStartInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Flag != other.Flag) return false;
      if (StartTime != other.StartTime) return false;
      if (Roomid != other.Roomid) return false;
      if (Status != other.Status) return false;
      if (Handle != other.Handle) return false;
      if (EndTime != other.EndTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFlag) hash ^= Flag.GetHashCode();
      if (HasStartTime) hash ^= StartTime.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (HasHandle) hash ^= Handle.GetHashCode();
      if (HasEndTime) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFlag) {
        output.WriteRawTag(10);
        output.WriteString(Flag);
      }
      if (HasStartTime) {
        output.WriteRawTag(16);
        output.WriteInt64(StartTime);
      }
      if (HasRoomid) {
        output.WriteRawTag(24);
        output.WriteInt32(Roomid);
      }
      if (HasStatus) {
        output.WriteRawTag(32);
        output.WriteInt32(Status);
      }
      if (HasHandle) {
        output.WriteRawTag(40);
        output.WriteInt64(Handle);
      }
      if (HasEndTime) {
        output.WriteRawTag(48);
        output.WriteInt64(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFlag) {
        output.WriteRawTag(10);
        output.WriteString(Flag);
      }
      if (HasStartTime) {
        output.WriteRawTag(16);
        output.WriteInt64(StartTime);
      }
      if (HasRoomid) {
        output.WriteRawTag(24);
        output.WriteInt32(Roomid);
      }
      if (HasStatus) {
        output.WriteRawTag(32);
        output.WriteInt32(Status);
      }
      if (HasHandle) {
        output.WriteRawTag(40);
        output.WriteInt64(Handle);
      }
      if (HasEndTime) {
        output.WriteRawTag(48);
        output.WriteInt64(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFlag) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Flag);
      }
      if (HasStartTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTime);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (HasHandle) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Handle);
      }
      if (HasEndTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttStartInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasFlag) {
        Flag = other.Flag;
      }
      if (other.HasStartTime) {
        StartTime = other.StartTime;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.HasHandle) {
        Handle = other.Handle;
      }
      if (other.HasEndTime) {
        EndTime = other.EndTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Flag = input.ReadString();
            break;
          }
          case 16: {
            StartTime = input.ReadInt64();
            break;
          }
          case 24: {
            Roomid = input.ReadInt32();
            break;
          }
          case 32: {
            Status = input.ReadInt32();
            break;
          }
          case 40: {
            Handle = input.ReadInt64();
            break;
          }
          case 48: {
            EndTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Flag = input.ReadString();
            break;
          }
          case 16: {
            StartTime = input.ReadInt64();
            break;
          }
          case 24: {
            Roomid = input.ReadInt32();
            break;
          }
          case 32: {
            Status = input.ReadInt32();
            break;
          }
          case 40: {
            Handle = input.ReadInt64();
            break;
          }
          case 48: {
            EndTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GroupMttStartTimeREQ : pb::IMessage<GroupMttStartTimeREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GroupMttStartTimeREQ> _parser = new pb::MessageParser<GroupMttStartTimeREQ>(() => new GroupMttStartTimeREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GroupMttStartTimeREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupMttStartTimeREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupMttStartTimeREQ(GroupMttStartTimeREQ other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      uid_ = other.uid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupMttStartTimeREQ Clone() {
      return new GroupMttStartTimeREQ(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 1) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 2) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GroupMttStartTimeREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GroupMttStartTimeREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (Uid != other.Uid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GroupMttStartTimeREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GroupMttStartTimeRSP : pb::IMessage<GroupMttStartTimeRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GroupMttStartTimeRSP> _parser = new pb::MessageParser<GroupMttStartTimeRSP>(() => new GroupMttStartTimeRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GroupMttStartTimeRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupMttStartTimeRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupMttStartTimeRSP(GroupMttStartTimeRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      groupStartInfo_ = other.groupStartInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupMttStartTimeRSP Clone() {
      return new GroupMttStartTimeRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0 success -1 failed 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "group_start_info" field.</summary>
    public const int GroupStartInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Texas.Protocol.MttStartInfo> _repeated_groupStartInfo_codec
        = pb::FieldCodec.ForMessage(18, global::Texas.Protocol.MttStartInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.MttStartInfo> groupStartInfo_ = new pbc::RepeatedField<global::Texas.Protocol.MttStartInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.MttStartInfo> GroupStartInfo {
      get { return groupStartInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GroupMttStartTimeRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GroupMttStartTimeRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if(!groupStartInfo_.Equals(other.groupStartInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      hash ^= groupStartInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      groupStartInfo_.WriteTo(output, _repeated_groupStartInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      groupStartInfo_.WriteTo(ref output, _repeated_groupStartInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      size += groupStartInfo_.CalculateSize(_repeated_groupStartInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GroupMttStartTimeRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      groupStartInfo_.Add(other.groupStartInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            groupStartInfo_.AddEntriesFrom(input, _repeated_groupStartInfo_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            groupStartInfo_.AddEntriesFrom(ref input, _repeated_groupStartInfo_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GroupMttSetStartTimeREQ : pb::IMessage<GroupMttSetStartTimeREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GroupMttSetStartTimeREQ> _parser = new pb::MessageParser<GroupMttSetStartTimeREQ>(() => new GroupMttSetStartTimeREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GroupMttSetStartTimeREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupMttSetStartTimeREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupMttSetStartTimeREQ(GroupMttSetStartTimeREQ other) : this() {
      _hasBits0 = other._hasBits0;
      groupStartInfo_ = other.groupStartInfo_.Clone();
      roomid_ = other.roomid_;
      uid_ = other.uid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupMttSetStartTimeREQ Clone() {
      return new GroupMttSetStartTimeREQ(this);
    }

    /// <summary>Field number for the "group_start_info" field.</summary>
    public const int GroupStartInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.MttStartInfo> _repeated_groupStartInfo_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.MttStartInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.MttStartInfo> groupStartInfo_ = new pbc::RepeatedField<global::Texas.Protocol.MttStartInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.MttStartInfo> GroupStartInfo {
      get { return groupStartInfo_; }
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 2;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 1) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 3;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 2) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GroupMttSetStartTimeREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GroupMttSetStartTimeREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!groupStartInfo_.Equals(other.groupStartInfo_)) return false;
      if (Roomid != other.Roomid) return false;
      if (Uid != other.Uid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= groupStartInfo_.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      groupStartInfo_.WriteTo(output, _repeated_groupStartInfo_codec);
      if (HasRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(Roomid);
      }
      if (HasUid) {
        output.WriteRawTag(24);
        output.WriteInt64(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      groupStartInfo_.WriteTo(ref output, _repeated_groupStartInfo_codec);
      if (HasRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(Roomid);
      }
      if (HasUid) {
        output.WriteRawTag(24);
        output.WriteInt64(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += groupStartInfo_.CalculateSize(_repeated_groupStartInfo_codec);
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GroupMttSetStartTimeREQ other) {
      if (other == null) {
        return;
      }
      groupStartInfo_.Add(other.groupStartInfo_);
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            groupStartInfo_.AddEntriesFrom(input, _repeated_groupStartInfo_codec);
            break;
          }
          case 16: {
            Roomid = input.ReadInt32();
            break;
          }
          case 24: {
            Uid = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            groupStartInfo_.AddEntriesFrom(ref input, _repeated_groupStartInfo_codec);
            break;
          }
          case 16: {
            Roomid = input.ReadInt32();
            break;
          }
          case 24: {
            Uid = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GroupMttSetStartTimeRSP : pb::IMessage<GroupMttSetStartTimeRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GroupMttSetStartTimeRSP> _parser = new pb::MessageParser<GroupMttSetStartTimeRSP>(() => new GroupMttSetStartTimeRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GroupMttSetStartTimeRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Mtt1Reflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupMttSetStartTimeRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupMttSetStartTimeRSP(GroupMttSetStartTimeRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupMttSetStartTimeRSP Clone() {
      return new GroupMttSetStartTimeRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0 设置成功， -1 时间不合法， -2 有其他人在设置, -3 无权限操作
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GroupMttSetStartTimeRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GroupMttSetStartTimeRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GroupMttSetStartTimeRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
