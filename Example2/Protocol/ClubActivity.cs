// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: club_activity.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Texas.Protocol {

  /// <summary>Holder for reflection information generated from club_activity.proto</summary>
  public static partial class ClubActivityReflection {

    #region Descriptor
    /// <summary>File descriptor for club_activity.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClubActivityReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNjbHViX2FjdGl2aXR5LnByb3RvGgpwaW5lLnByb3RvGhFjbHViX2hlbHBl",
            "ci5wcm90bxoSaGFuZF9taXNzaW9uLnByb3RvIl4KDkFjdGl2aXR5UmV3YXJk",
            "EhUKCHBwX2NoaXBzGAEgASgDSACIAQESGAoLZGVzY3JpcHRpb24YAiABKAlI",
            "AYgBAUILCglfcHBfY2hpcHNCDgoMX2Rlc2NyaXB0aW9uIrYCChJBY3Rpdml0",
            "eVVzZXJSZXdhcmQSEwoGY2x1YmlkGAEgASgFSACIAQESFQoIbGVhZ3VlaWQY",
            "AiABKAVIAYgBARITCgZyZWJhdGUYAyABKANIAogBARIZCgxyZXdhcmRfY2hp",
            "cHMYBCABKANIA4gBARIQCgN1aWQYBSABKANIBIgBARIRCgRpY29uGAYgASgJ",
            "SAWIAQESFQoIbmlja25hbWUYByABKAlIBogBARIfChJyZXdhcmRfZGVzY3Jp",
            "cHRpb24YCCABKAlIB4gBAUIJCgdfY2x1YmlkQgsKCV9sZWFndWVpZEIJCgdf",
            "cmViYXRlQg8KDV9yZXdhcmRfY2hpcHNCBgoEX3VpZEIHCgVfaWNvbkILCglf",
            "bmlja25hbWVCFQoTX3Jld2FyZF9kZXNjcmlwdGlvbiKGCgoWUmluZ0dhbWVB",
            "Y3Rpdml0eUNvbmZpZxIPCgJpZBgBIAEoA0gAiAEBEhMKBmNsdWJpZBgCIAEo",
            "BUgBiAEBEhUKCGxlYWd1ZWlkGAMgASgFSAKIAQESGwoOc3VwZXJfbGVhZ3Vl",
            "aWQYBCABKAVIA4gBARIYCgtjcmVhdG9yX3VpZBgFIAEoA0gEiAEBEhcKCnN0",
            "YXJ0X3RpbWUYBiABKANIBYgBARIVCghlbmRfdGltZRgHIAEoA0gGiAEBEh4K",
            "Fmxvd19ibGluZF9yZXdhcmRfY2hpcHMYCCADKAMSHgoWbWlkX2JsaW5kX3Jl",
            "d2FyZF9jaGlwcxgJIAMoAxIfChdoaWdoX2JsaW5kX3Jld2FyZF9jaGlwcxgK",
            "IAMoAxITCgZzdGF0dXMYCyABKAVIB4gBARIzChZsb3dfYmxpbmRfcmV3YXJk",
            "X3VzZXJzGAwgAygLMhMuQWN0aXZpdHlVc2VyUmV3YXJkEjMKFm1pZF9ibGlu",
            "ZF9yZXdhcmRfdXNlcnMYDSADKAsyEy5BY3Rpdml0eVVzZXJSZXdhcmQSNAoX",
            "aGlnaF9ibGluZF9yZXdhcmRfdXNlcnMYDiADKAsyEy5BY3Rpdml0eVVzZXJS",
            "ZXdhcmQSGwoOcmV3YXJkZWRfY2hpcHMYDyABKANICIgBARIVCghtb2R1bGVp",
            "ZBgQIAEoA0gJiAEBEhsKDmJ1bGxldGluX2JvYXJkGBEgASgJSAqIAQESGgoN",
            "YWN0aXZpdHlfdHlwZRgSIAEoBUgLiAEBEh0KEGlzX2hhbmRfd2l0aF9mZWUY",
            "EyABKAVIDIgBARIgChNsb3dfYmxpbmRfbWluX2JsaW5kGBQgASgDSA2IAQES",
            "IAoTbG93X2JsaW5kX21heF9ibGluZBgVIAEoA0gOiAEBEioKEWxvd19ibGlu",
            "ZF9yZXdhcmRzGBYgAygLMg8uQWN0aXZpdHlSZXdhcmQSIAoTbWlkX2JsaW5k",
            "X21pbl9ibGluZBgXIAEoA0gPiAEBEiAKE21pZF9ibGluZF9tYXhfYmxpbmQY",
            "GCABKANIEIgBARIqChFtaWRfYmxpbmRfcmV3YXJkcxgZIAMoCzIPLkFjdGl2",
            "aXR5UmV3YXJkEiEKFGhpZ2hfYmxpbmRfbWluX2JsaW5kGBogASgDSBGIAQES",
            "IQoUaGlnaF9ibGluZF9tYXhfYmxpbmQYGyABKANIEogBARIrChJoaWdoX2Js",
            "aW5kX3Jld2FyZHMYHCADKAsyDy5BY3Rpdml0eVJld2FyZEIFCgNfaWRCCQoH",
            "X2NsdWJpZEILCglfbGVhZ3VlaWRCEQoPX3N1cGVyX2xlYWd1ZWlkQg4KDF9j",
            "cmVhdG9yX3VpZEINCgtfc3RhcnRfdGltZUILCglfZW5kX3RpbWVCCQoHX3N0",
            "YXR1c0IRCg9fcmV3YXJkZWRfY2hpcHNCCwoJX21vZHVsZWlkQhEKD19idWxs",
            "ZXRpbl9ib2FyZEIQCg5fYWN0aXZpdHlfdHlwZUITChFfaXNfaGFuZF93aXRo",
            "X2ZlZUIWChRfbG93X2JsaW5kX21pbl9ibGluZEIWChRfbG93X2JsaW5kX21h",
            "eF9ibGluZEIWChRfbWlkX2JsaW5kX21pbl9ibGluZEIWChRfbWlkX2JsaW5k",
            "X21heF9ibGluZEIXChVfaGlnaF9ibGluZF9taW5fYmxpbmRCFwoVX2hpZ2hf",
            "YmxpbmRfbWF4X2JsaW5kInAKFVJpbmdHYW1lQWN0aXZpdHlPcFJFURITCgZh",
            "Y3Rpb24YASABKAVIAIgBARIsCgZjb25maWcYAiABKAsyFy5SaW5nR2FtZUFj",
            "dGl2aXR5Q29uZmlnSAGIAQFCCQoHX2FjdGlvbkIJCgdfY29uZmlnIqoCChVS",
            "aW5nR2FtZUFjdGl2aXR5T3BSU1ASEwoGYWN0aW9uGAEgASgFSACIAQESLAoG",
            "Y29uZmlnGAIgASgLMhcuUmluZ0dhbWVBY3Rpdml0eUNvbmZpZ0gBiAEBEhEK",
            "BGNvZGUYAyABKAVIAogBARIYCgtwcF9yZW1haW5lZBgEIAEoA0gDiAEBEhMK",
            "BmNsdWJpZBgFIAEoBUgEiAEBEhUKCGxlYWd1ZWlkGAYgASgFSAWIAQESGwoO",
            "c3VwZXJfbGVhZ3VlaWQYByABKAVIBogBAUIJCgdfYWN0aW9uQgkKB19jb25m",
            "aWdCBwoFX2NvZGVCDgoMX3BwX3JlbWFpbmVkQgkKB19jbHViaWRCCwoJX2xl",
            "YWd1ZWlkQhEKD19zdXBlcl9sZWFndWVpZCKcBAoRTXR0QWN0aXZpdHlDb25m",
            "aWcSDwoCaWQYASABKANIAIgBARITCgZjbHViaWQYAiABKAVIAYgBARIVCghs",
            "ZWFndWVpZBgDIAEoBUgCiAEBEhsKDnN1cGVyX2xlYWd1ZWlkGAQgASgFSAOI",
            "AQESGAoLY3JlYXRvcl91aWQYBSABKANIBIgBARIXCgpzdGFydF90aW1lGAYg",
            "ASgDSAWIAQESFQoIZW5kX3RpbWUYByABKANIBogBARIUCgxyZXdhcmRfY2hp",
            "cHMYCCADKAMSEwoGc3RhdHVzGAkgASgFSAeIAQESKQoMcmV3YXJkX3VzZXJz",
            "GAogAygLMhMuQWN0aXZpdHlVc2VyUmV3YXJkEhsKDnJld2FyZGVkX2NoaXBz",
            "GAsgASgDSAiIAQESFQoIbW9kdWxlaWQYDCABKANICYgBARIbCg5idWxsZXRp",
            "bl9ib2FyZBgNIAEoCUgKiAEBEiAKB3Jld2FyZHMYDiADKAsyDy5BY3Rpdml0",
            "eVJld2FyZEIFCgNfaWRCCQoHX2NsdWJpZEILCglfbGVhZ3VlaWRCEQoPX3N1",
            "cGVyX2xlYWd1ZWlkQg4KDF9jcmVhdG9yX3VpZEINCgtfc3RhcnRfdGltZUIL",
            "CglfZW5kX3RpbWVCCQoHX3N0YXR1c0IRCg9fcmV3YXJkZWRfY2hpcHNCCwoJ",
            "X21vZHVsZWlkQhEKD19idWxsZXRpbl9ib2FyZCJmChBNdHRBY3Rpdml0eU9w",
            "UkVREhMKBmFjdGlvbhgBIAEoBUgAiAEBEicKBmNvbmZpZxgCIAEoCzISLk10",
            "dEFjdGl2aXR5Q29uZmlnSAGIAQFCCQoHX2FjdGlvbkIJCgdfY29uZmlnIqAC",
            "ChBNdHRBY3Rpdml0eU9wUlNQEhMKBmFjdGlvbhgBIAEoBUgAiAEBEicKBmNv",
            "bmZpZxgCIAEoCzISLk10dEFjdGl2aXR5Q29uZmlnSAGIAQESEQoEY29kZRgD",
            "IAEoBUgCiAEBEhgKC3BwX3JlbWFpbmVkGAQgASgDSAOIAQESEwoGY2x1Ymlk",
            "GAUgASgFSASIAQESFQoIbGVhZ3VlaWQYBiABKAVIBYgBARIbCg5zdXBlcl9s",
            "ZWFndWVpZBgHIAEoBUgGiAEBQgkKB19hY3Rpb25CCQoHX2NvbmZpZ0IHCgVf",
            "Y29kZUIOCgxfcHBfcmVtYWluZWRCCQoHX2NsdWJpZEILCglfbGVhZ3VlaWRC",
            "EQoPX3N1cGVyX2xlYWd1ZWlkItkJChtTcGVjaWZpZWRSR0FjdGl2aXR5R2Ft",
            "ZU1vZGUSHgoRR0FNRV9NT0RFX05MSF9OTEgYASABKAhIAIgBARIeChFHQU1F",
            "X01PREVfTkxIX0FPRhgCIAEoCEgBiAEBEiMKFkdBTUVfTU9ERV9OTEhfU0lY",
            "X1BMVVMYAyABKAhIAogBARIhChRHQU1FX01PREVfTkxIX05MSF8zMRgEIAEo",
            "CEgDiAEBEiIKFUdBTUVfTU9ERV9OTEhfTkxIXzMxRhgFIAEoCEgEiAEBEh8K",
            "EkdBTUVfTU9ERV9QTE9fUExPNBgGIAEoCEgFiAEBEh8KEkdBTUVfTU9ERV9Q",
            "TE9fUExPNRgHIAEoCEgGiAEBEh8KEkdBTUVfTU9ERV9QTE9fUExPNhgIIAEo",
            "CEgHiAEBEiEKFEdBTUVfTU9ERV9QTE9fUExPNEhMGAkgASgISAiIAQESIQoU",
            "R0FNRV9NT0RFX1BMT19QTE81SEwYCiABKAhICYgBARIhChRHQU1FX01PREVf",
            "UExPX1BMTzZITBgLIAEoCEgKiAEBEiAKE0dBTUVfTU9ERV9GTEFTSF9OTEgY",
            "DCABKAhIC4gBARIhChRHQU1FX01PREVfRkxBU0hfUExPNBgNIAEoCEgMiAEB",
            "EiUKGEdBTUVfTU9ERV9NSVhFRF9OTEhfUExPNBgOIAEoCEgNiAEBEiUKGEdB",
            "TUVfTU9ERV9NSVhFRF9OTEhfUExPNRgPIAEoCEgOiAEBEiIKFUdBTUVfTU9E",
            "RV9PVEhFUl9QVVNPWRgQIAEoCEgPiAEBEiAKE0dBTUVfTU9ERV9PVEhFUl9P",
            "RkMYESABKAhIEIgBARIhChRHQU1FX01PREVfRkxBU0hfUExPNRgSIAEoCEgR",
            "iAEBEiYKGUdBTUVfTU9ERV9PVEhFUl9URUVOUEFUVEkYEyABKAhIEogBARIk",
            "ChdHQU1FX01PREVfT1RIRVJfVE9OR0lUUxgUIAEoCEgTiAEBQhQKEl9HQU1F",
            "X01PREVfTkxIX05MSEIUChJfR0FNRV9NT0RFX05MSF9BT0ZCGQoXX0dBTUVf",
            "TU9ERV9OTEhfU0lYX1BMVVNCFwoVX0dBTUVfTU9ERV9OTEhfTkxIXzMxQhgK",
            "Fl9HQU1FX01PREVfTkxIX05MSF8zMUZCFQoTX0dBTUVfTU9ERV9QTE9fUExP",
            "NEIVChNfR0FNRV9NT0RFX1BMT19QTE81QhUKE19HQU1FX01PREVfUExPX1BM",
            "TzZCFwoVX0dBTUVfTU9ERV9QTE9fUExPNEhMQhcKFV9HQU1FX01PREVfUExP",
            "X1BMTzVITEIXChVfR0FNRV9NT0RFX1BMT19QTE82SExCFgoUX0dBTUVfTU9E",
            "RV9GTEFTSF9OTEhCFwoVX0dBTUVfTU9ERV9GTEFTSF9QTE80QhsKGV9HQU1F",
            "X01PREVfTUlYRURfTkxIX1BMTzRCGwoZX0dBTUVfTU9ERV9NSVhFRF9OTEhf",
            "UExPNUIYChZfR0FNRV9NT0RFX09USEVSX1BVU09ZQhYKFF9HQU1FX01PREVf",
            "T1RIRVJfT0ZDQhcKFV9HQU1FX01PREVfRkxBU0hfUExPNUIcChpfR0FNRV9N",
            "T0RFX09USEVSX1RFRU5QQVRUSUIaChhfR0FNRV9NT0RFX09USEVSX1RPTkdJ",
            "VFMizQoKGVNwZWNpZmllZFJHQWN0aXZpdHlDb25maWcSDwoCaWQYASABKANI",
            "AIgBARITCgZjbHViaWQYAiABKAVIAYgBARIVCghsZWFndWVpZBgDIAEoBUgC",
            "iAEBEhsKDnN1cGVyX2xlYWd1ZWlkGAQgASgFSAOIAQESGAoLY3JlYXRvcl91",
            "aWQYBSABKANIBIgBARIXCgpzdGFydF90aW1lGAYgASgDSAWIAQESFQoIZW5k",
            "X3RpbWUYByABKANIBogBARIeChZsb3dfYmxpbmRfcmV3YXJkX2NoaXBzGAgg",
            "AygDEh4KFm1pZF9ibGluZF9yZXdhcmRfY2hpcHMYCSADKAMSHwoXaGlnaF9i",
            "bGluZF9yZXdhcmRfY2hpcHMYCiADKAMSEwoGc3RhdHVzGAsgASgFSAeIAQES",
            "MwoWbG93X2JsaW5kX3Jld2FyZF91c2VycxgMIAMoCzITLkFjdGl2aXR5VXNl",
            "clJld2FyZBIzChZtaWRfYmxpbmRfcmV3YXJkX3VzZXJzGA0gAygLMhMuQWN0",
            "aXZpdHlVc2VyUmV3YXJkEjQKF2hpZ2hfYmxpbmRfcmV3YXJkX3VzZXJzGA4g",
            "AygLMhMuQWN0aXZpdHlVc2VyUmV3YXJkEhsKDnJld2FyZGVkX2NoaXBzGA8g",
            "ASgDSAiIAQESFQoIbW9kdWxlaWQYECABKANICYgBARI0CglnYW1lX21vZGUY",
            "ESABKAsyHC5TcGVjaWZpZWRSR0FjdGl2aXR5R2FtZU1vZGVICogBARIbCg5i",
            "dWxsZXRpbl9ib2FyZBgSIAEoCUgLiAEBEhoKDWFjdGl2aXR5X3R5cGUYEyAB",
            "KAVIDIgBARIdChBpc19oYW5kX3dpdGhfZmVlGBQgASgFSA2IAQESIAoTbG93",
            "X2JsaW5kX21pbl9ibGluZBgVIAEoA0gOiAEBEiAKE2xvd19ibGluZF9tYXhf",
            "YmxpbmQYFiABKANID4gBARIqChFsb3dfYmxpbmRfcmV3YXJkcxgXIAMoCzIP",
            "LkFjdGl2aXR5UmV3YXJkEiAKE21pZF9ibGluZF9taW5fYmxpbmQYGCABKANI",
            "EIgBARIgChNtaWRfYmxpbmRfbWF4X2JsaW5kGBkgASgDSBGIAQESKgoRbWlk",
            "X2JsaW5kX3Jld2FyZHMYGiADKAsyDy5BY3Rpdml0eVJld2FyZBIhChRoaWdo",
            "X2JsaW5kX21pbl9ibGluZBgbIAEoA0gSiAEBEiEKFGhpZ2hfYmxpbmRfbWF4",
            "X2JsaW5kGBwgASgDSBOIAQESKwoSaGlnaF9ibGluZF9yZXdhcmRzGB0gAygL",
            "Mg8uQWN0aXZpdHlSZXdhcmRCBQoDX2lkQgkKB19jbHViaWRCCwoJX2xlYWd1",
            "ZWlkQhEKD19zdXBlcl9sZWFndWVpZEIOCgxfY3JlYXRvcl91aWRCDQoLX3N0",
            "YXJ0X3RpbWVCCwoJX2VuZF90aW1lQgkKB19zdGF0dXNCEQoPX3Jld2FyZGVk",
            "X2NoaXBzQgsKCV9tb2R1bGVpZEIMCgpfZ2FtZV9tb2RlQhEKD19idWxsZXRp",
            "bl9ib2FyZEIQCg5fYWN0aXZpdHlfdHlwZUITChFfaXNfaGFuZF93aXRoX2Zl",
            "ZUIWChRfbG93X2JsaW5kX21pbl9ibGluZEIWChRfbG93X2JsaW5kX21heF9i",
            "bGluZEIWChRfbWlkX2JsaW5kX21pbl9ibGluZEIWChRfbWlkX2JsaW5kX21h",
            "eF9ibGluZEIXChVfaGlnaF9ibGluZF9taW5fYmxpbmRCFwoVX2hpZ2hfYmxp",
            "bmRfbWF4X2JsaW5kItECCg5BY3Rpdml0eVJlY29yZBIRCgR0eXBlGAEgASgF",
            "SACIAQESJAoFc3Rvcm0YAiABKAsyEC5DaGlwU3Rvcm1Db25maWdIAYgBARIv",
            "CglyaW5nX2dhbWUYAyABKAsyFy5SaW5nR2FtZUFjdGl2aXR5Q29uZmlnSAKI",
            "AQESJAoDbXR0GAQgASgLMhIuTXR0QWN0aXZpdHlDb25maWdIA4gBARI1Cgxz",
            "cGVjaWZpZWRfcmcYBSABKAsyGi5TcGVjaWZpZWRSR0FjdGl2aXR5Q29uZmln",
            "SASIAQESLQoMaGFuZF9taXNzaW9uGAYgASgLMhIuSGFuZE1pc3Npb25Db25m",
            "aWdIBYgBAUIHCgVfdHlwZUIICgZfc3Rvcm1CDAoKX3JpbmdfZ2FtZUIGCgRf",
            "bXR0Qg8KDV9zcGVjaWZpZWRfcmdCDwoNX2hhbmRfbWlzc2lvbiKnAQoVQWN0",
            "aXZpdHlSZWNvcmRMaXN0UkVREhMKBmNsdWJpZBgBIAEoBUgAiAEBEhUKCGxl",
            "YWd1ZWlkGAIgASgFSAGIAQESGwoOc3VwZXJfbGVhZ3VlaWQYAyABKAVIAogB",
            "ARIRCgR0eXBlGAQgASgFSAOIAQFCCQoHX2NsdWJpZEILCglfbGVhZ3VlaWRC",
            "EQoPX3N1cGVyX2xlYWd1ZWlkQgcKBV90eXBlInEKFUFjdGl2aXR5UmVjb3Jk",
            "TGlzdFJTUBIRCgR0eXBlGAEgASgFSACIAQESEQoEY29kZRgCIAEoBUgBiAEB",
            "EiAKB2NvbmZpZ3MYAyADKAsyDy5BY3Rpdml0eVJlY29yZEIHCgVfdHlwZUIH",
            "CgVfY29kZSI0ChJBY3Rpdml0eU1vZHVsZXNSRVESEwoGY2x1YmlkGAEgASgF",
            "SACIAQFCCQoHX2NsdWJpZCKeAgoSQWN0aXZpdHlNb2R1bGVzUlNQEhEKBGNv",
            "ZGUYASABKAVIAIgBARITCgZjbHViaWQYAiABKAVIAYgBARIgCgZzdG9ybXMY",
            "AyADKAsyEC5DaGlwU3Rvcm1Db25maWcSKwoKcmluZ19nYW1lcxgEIAMoCzIX",
            "LlJpbmdHYW1lQWN0aXZpdHlDb25maWcSIAoEbXR0cxgFIAMoCzISLk10dEFj",
            "dGl2aXR5Q29uZmlnEjEKDXNwZWNpZmllZF9yZ3MYBiADKAsyGi5TcGVjaWZp",
            "ZWRSR0FjdGl2aXR5Q29uZmlnEigKDGhhbmRfbWlzc2lvbhgHIAMoCzISLkhh",
            "bmRNaXNzaW9uQ29uZmlnQgcKBV9jb2RlQgkKB19jbHViaWQilgMKE0FjdGl2",
            "aXR5TW9kdWxlT3BSRVESEwoGYWN0aW9uGAEgASgFSACIAQESEQoEdHlwZRgC",
            "IAEoBUgBiAEBEhMKBmNsdWJpZBgDIAEoBUgCiAEBEiQKBXN0b3JtGAQgASgL",
            "MhAuQ2hpcFN0b3JtQ29uZmlnSAOIAQESLwoJcmluZ19nYW1lGAUgASgLMhcu",
            "UmluZ0dhbWVBY3Rpdml0eUNvbmZpZ0gEiAEBEiQKA210dBgGIAEoCzISLk10",
            "dEFjdGl2aXR5Q29uZmlnSAWIAQESNQoMc3BlY2lmaWVkX3JnGAcgASgLMhou",
            "U3BlY2lmaWVkUkdBY3Rpdml0eUNvbmZpZ0gGiAEBEi0KDGhhbmRfbWlzc2lv",
            "bhgIIAEoCzISLkhhbmRNaXNzaW9uQ29uZmlnSAeIAQFCCQoHX2FjdGlvbkIH",
            "CgVfdHlwZUIJCgdfY2x1YmlkQggKBl9zdG9ybUIMCgpfcmluZ19nYW1lQgYK",
            "BF9tdHRCDwoNX3NwZWNpZmllZF9yZ0IPCg1faGFuZF9taXNzaW9uIvICChNB",
            "Y3Rpdml0eU1vZHVsZU9wUlNQEhEKBGNvZGUYASABKAVIAIgBARITCgZhY3Rp",
            "b24YAiABKAVIAYgBARIRCgR0eXBlGAMgASgFSAKIAQESEwoGY2x1YmlkGAQg",
            "ASgFSAOIAQESJAoFc3Rvcm0YBSABKAsyEC5DaGlwU3Rvcm1Db25maWdIBIgB",
            "ARIvCglyaW5nX2dhbWUYBiABKAsyFy5SaW5nR2FtZUFjdGl2aXR5Q29uZmln",
            "SAWIAQESJAoDbXR0GAcgASgLMhIuTXR0QWN0aXZpdHlDb25maWdIBogBARI1",
            "CgxzcGVjaWZpZWRfcmcYCCABKAsyGi5TcGVjaWZpZWRSR0FjdGl2aXR5Q29u",
            "ZmlnSAeIAQFCBwoFX2NvZGVCCQoHX2FjdGlvbkIHCgVfdHlwZUIJCgdfY2x1",
            "YmlkQggKBl9zdG9ybUIMCgpfcmluZ19nYW1lQgYKBF9tdHRCDwoNX3NwZWNp",
            "ZmllZF9yZyJUChZVc2VyU2VsZkFjdGl2aXR5UmViYXRlEhMKBnJlYmF0ZRgB",
            "IAEoA0gAiAEBEhEKBHJhbmsYAiABKAVIAYgBAUIJCgdfcmViYXRlQgcKBV9y",
            "YW5rIoACChJBY3Rpdml0eVNpbXBsZUluZm8SGAoLYWN0aXZpdHlfbm8YASAB",
            "KANIAIgBARIXCgpiZWdpbl90aW1lGAIgASgDSAGIAQESFgoJbGVmdF90aW1l",
            "GAMgASgDSAKIAQESFQoIZW5kX3RpbWUYBCABKANIA4gBARIVCghub3dfdGlt",
            "ZRgFIAEoA0gEiAEBEhkKDHRvdGFsX3Jld2FyZBgGIAEoA0gFiAEBQg4KDF9h",
            "Y3Rpdml0eV9ub0INCgtfYmVnaW5fdGltZUIMCgpfbGVmdF90aW1lQgsKCV9l",
            "bmRfdGltZUILCglfbm93X3RpbWVCDwoNX3RvdGFsX3Jld2FyZCKJAQoTQ2x1",
            "YkFjdGl2aXR5SW5mb1JFURITCgZjbHViaWQYASABKAVIAIgBARIVCghsZWFn",
            "dWVpZBgCIAEoBUgBiAEBEhsKDnN1cGVyX2xlYWd1ZWlkGAMgASgFSAKIAQFC",
            "CQoHX2NsdWJpZEILCglfbGVhZ3VlaWRCEQoPX3N1cGVyX2xlYWd1ZWlkIv8C",
            "ChNDbHViQWN0aXZpdHlJbmZvUlNQEhEKBGNvZGUYASABKAVIAIgBARInCgVz",
            "dG9ybRgCIAEoCzITLkFjdGl2aXR5U2ltcGxlSW5mb0gBiAEBEisKCXJpbmdf",
            "Z2FtZRgDIAEoCzITLkFjdGl2aXR5U2ltcGxlSW5mb0gCiAEBEiUKA210dBgE",
            "IAEoCzITLkFjdGl2aXR5U2ltcGxlSW5mb0gDiAEBEi4KDHNwZWNpZmllZF9y",
            "ZxgFIAEoCzITLkFjdGl2aXR5U2ltcGxlSW5mb0gEiAEBEjEKDGhhbmRfbWlz",
            "c2lvbhgGIAEoCzIWLkhhbmRNaXNzaW9uU2ltcGxlSW5mb0gFiAEBEioKDWN1",
            "c3RvbWl6ZWRfcmcYByADKAsyEy5BY3Rpdml0eVNpbXBsZUluZm9CBwoFX2Nv",
            "ZGVCCAoGX3N0b3JtQgwKCl9yaW5nX2dhbWVCBgoEX210dEIPCg1fc3BlY2lm",
            "aWVkX3JnQg8KDV9oYW5kX21pc3Npb24iQwoXUmluZ0dhbWVBY3Rpdml0eUlu",
            "Zm9SRVESGAoLYWN0aXZpdHlfbm8YASABKANIAIgBAUIOCgxfYWN0aXZpdHlf",
            "bm8i1wIKF1JpbmdHYW1lQWN0aXZpdHlJbmZvUlNQEhEKBGNvZGUYASABKAVI",
            "AIgBARIsCgZjb25maWcYAiABKAsyFy5SaW5nR2FtZUFjdGl2aXR5Q29uZmln",
            "SAGIAQESNgoQbG93X2JsaW5kX3JlYmF0ZRgDIAEoCzIXLlVzZXJTZWxmQWN0",
            "aXZpdHlSZWJhdGVIAogBARI2ChBtaWRfYmxpbmRfcmViYXRlGAQgASgLMhcu",
            "VXNlclNlbGZBY3Rpdml0eVJlYmF0ZUgDiAEBEjcKEWhpZ2hfYmxpbmRfcmVi",
            "YXRlGAUgASgLMhcuVXNlclNlbGZBY3Rpdml0eVJlYmF0ZUgEiAEBQgcKBV9j",
            "b2RlQgkKB19jb25maWdCEwoRX2xvd19ibGluZF9yZWJhdGVCEwoRX21pZF9i",
            "bGluZF9yZWJhdGVCFAoSX2hpZ2hfYmxpbmRfcmViYXRlIj4KEk10dEFjdGl2",
            "aXR5SW5mb1JFURIYCgthY3Rpdml0eV9ubxgBIAEoA0gAiAEBQg4KDF9hY3Rp",
            "dml0eV9ubyKnAQoSTXR0QWN0aXZpdHlJbmZvUlNQEhEKBGNvZGUYASABKAVI",
            "AIgBARInCgZjb25maWcYAiABKAsyEi5NdHRBY3Rpdml0eUNvbmZpZ0gBiAEB",
            "EjEKC3VzZXJfcmViYXRlGAMgASgLMhcuVXNlclNlbGZBY3Rpdml0eVJlYmF0",
            "ZUgCiAEBQgcKBV9jb2RlQgkKB19jb25maWdCDgoMX3VzZXJfcmViYXRlInYK",
            "GFNwZWNpZmllZFJHQWN0aXZpdHlPcFJFURITCgZhY3Rpb24YASABKAVIAIgB",
            "ARIvCgZjb25maWcYAiABKAsyGi5TcGVjaWZpZWRSR0FjdGl2aXR5Q29uZmln",
            "SAGIAQFCCQoHX2FjdGlvbkIJCgdfY29uZmlnIrACChhTcGVjaWZpZWRSR0Fj",
            "dGl2aXR5T3BSU1ASEwoGYWN0aW9uGAEgASgFSACIAQESLwoGY29uZmlnGAIg",
            "ASgLMhouU3BlY2lmaWVkUkdBY3Rpdml0eUNvbmZpZ0gBiAEBEhEKBGNvZGUY",
            "AyABKAVIAogBARIYCgtwcF9yZW1haW5lZBgEIAEoA0gDiAEBEhMKBmNsdWJp",
            "ZBgFIAEoBUgEiAEBEhUKCGxlYWd1ZWlkGAYgASgFSAWIAQESGwoOc3VwZXJf",
            "bGVhZ3VlaWQYByABKAVIBogBAUIJCgdfYWN0aW9uQgkKB19jb25maWdCBwoF",
            "X2NvZGVCDgoMX3BwX3JlbWFpbmVkQgkKB19jbHViaWRCCwoJX2xlYWd1ZWlk",
            "QhEKD19zdXBlcl9sZWFndWVpZCJGChpTcGVjaWZpZWRSR0FjdGl2aXR5SW5m",
            "b1JFURIYCgthY3Rpdml0eV9ubxgBIAEoA0gAiAEBQg4KDF9hY3Rpdml0eV9u",
            "byLdAgoaU3BlY2lmaWVkUkdBY3Rpdml0eUluZm9SU1ASEQoEY29kZRgBIAEo",
            "BUgAiAEBEi8KBmNvbmZpZxgCIAEoCzIaLlNwZWNpZmllZFJHQWN0aXZpdHlD",
            "b25maWdIAYgBARI2ChBsb3dfYmxpbmRfcmViYXRlGAMgASgLMhcuVXNlclNl",
            "bGZBY3Rpdml0eVJlYmF0ZUgCiAEBEjYKEG1pZF9ibGluZF9yZWJhdGUYBCAB",
            "KAsyFy5Vc2VyU2VsZkFjdGl2aXR5UmViYXRlSAOIAQESNwoRaGlnaF9ibGlu",
            "ZF9yZWJhdGUYBSABKAsyFy5Vc2VyU2VsZkFjdGl2aXR5UmViYXRlSASIAQFC",
            "BwoFX2NvZGVCCQoHX2NvbmZpZ0ITChFfbG93X2JsaW5kX3JlYmF0ZUITChFf",
            "bWlkX2JsaW5kX3JlYmF0ZUIUChJfaGlnaF9ibGluZF9yZWJhdGVCGloHL3Bi",
            "cHBnb6oCDlRleGFzLlByb3RvY29sYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Texas.Protocol.PineReflection.Descriptor, global::Texas.Protocol.ClubHelperReflection.Descriptor, global::Texas.Protocol.HandMissionReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ActivityReward), global::Texas.Protocol.ActivityReward.Parser, new[]{ "PpChips", "Description" }, new[]{ "PpChips", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ActivityUserReward), global::Texas.Protocol.ActivityUserReward.Parser, new[]{ "Clubid", "Leagueid", "Rebate", "RewardChips", "Uid", "Icon", "Nickname", "RewardDescription" }, new[]{ "Clubid", "Leagueid", "Rebate", "RewardChips", "Uid", "Icon", "Nickname", "RewardDescription" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.RingGameActivityConfig), global::Texas.Protocol.RingGameActivityConfig.Parser, new[]{ "Id", "Clubid", "Leagueid", "SuperLeagueid", "CreatorUid", "StartTime", "EndTime", "LowBlindRewardChips", "MidBlindRewardChips", "HighBlindRewardChips", "Status", "LowBlindRewardUsers", "MidBlindRewardUsers", "HighBlindRewardUsers", "RewardedChips", "Moduleid", "BulletinBoard", "ActivityType", "IsHandWithFee", "LowBlindMinBlind", "LowBlindMaxBlind", "LowBlindRewards", "MidBlindMinBlind", "MidBlindMaxBlind", "MidBlindRewards", "HighBlindMinBlind", "HighBlindMaxBlind", "HighBlindRewards" }, new[]{ "Id", "Clubid", "Leagueid", "SuperLeagueid", "CreatorUid", "StartTime", "EndTime", "Status", "RewardedChips", "Moduleid", "BulletinBoard", "ActivityType", "IsHandWithFee", "LowBlindMinBlind", "LowBlindMaxBlind", "MidBlindMinBlind", "MidBlindMaxBlind", "HighBlindMinBlind", "HighBlindMaxBlind" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.RingGameActivityOpREQ), global::Texas.Protocol.RingGameActivityOpREQ.Parser, new[]{ "Action", "Config" }, new[]{ "Action", "Config" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.RingGameActivityOpRSP), global::Texas.Protocol.RingGameActivityOpRSP.Parser, new[]{ "Action", "Config", "Code", "PpRemained", "Clubid", "Leagueid", "SuperLeagueid" }, new[]{ "Action", "Config", "Code", "PpRemained", "Clubid", "Leagueid", "SuperLeagueid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttActivityConfig), global::Texas.Protocol.MttActivityConfig.Parser, new[]{ "Id", "Clubid", "Leagueid", "SuperLeagueid", "CreatorUid", "StartTime", "EndTime", "RewardChips", "Status", "RewardUsers", "RewardedChips", "Moduleid", "BulletinBoard", "Rewards" }, new[]{ "Id", "Clubid", "Leagueid", "SuperLeagueid", "CreatorUid", "StartTime", "EndTime", "Status", "RewardedChips", "Moduleid", "BulletinBoard" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttActivityOpREQ), global::Texas.Protocol.MttActivityOpREQ.Parser, new[]{ "Action", "Config" }, new[]{ "Action", "Config" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttActivityOpRSP), global::Texas.Protocol.MttActivityOpRSP.Parser, new[]{ "Action", "Config", "Code", "PpRemained", "Clubid", "Leagueid", "SuperLeagueid" }, new[]{ "Action", "Config", "Code", "PpRemained", "Clubid", "Leagueid", "SuperLeagueid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SpecifiedRGActivityGameMode), global::Texas.Protocol.SpecifiedRGActivityGameMode.Parser, new[]{ "GAMEMODENLHNLH", "GAMEMODENLHAOF", "GAMEMODENLHSIXPLUS", "GAMEMODENLHNLH31", "GAMEMODENLHNLH31F", "GAMEMODEPLOPLO4", "GAMEMODEPLOPLO5", "GAMEMODEPLOPLO6", "GAMEMODEPLOPLO4HL", "GAMEMODEPLOPLO5HL", "GAMEMODEPLOPLO6HL", "GAMEMODEFLASHNLH", "GAMEMODEFLASHPLO4", "GAMEMODEMIXEDNLHPLO4", "GAMEMODEMIXEDNLHPLO5", "GAMEMODEOTHERPUSOY", "GAMEMODEOTHEROFC", "GAMEMODEFLASHPLO5", "GAMEMODEOTHERTEENPATTI", "GAMEMODEOTHERTONGITS" }, new[]{ "GAMEMODENLHNLH", "GAMEMODENLHAOF", "GAMEMODENLHSIXPLUS", "GAMEMODENLHNLH31", "GAMEMODENLHNLH31F", "GAMEMODEPLOPLO4", "GAMEMODEPLOPLO5", "GAMEMODEPLOPLO6", "GAMEMODEPLOPLO4HL", "GAMEMODEPLOPLO5HL", "GAMEMODEPLOPLO6HL", "GAMEMODEFLASHNLH", "GAMEMODEFLASHPLO4", "GAMEMODEMIXEDNLHPLO4", "GAMEMODEMIXEDNLHPLO5", "GAMEMODEOTHERPUSOY", "GAMEMODEOTHEROFC", "GAMEMODEFLASHPLO5", "GAMEMODEOTHERTEENPATTI", "GAMEMODEOTHERTONGITS" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SpecifiedRGActivityConfig), global::Texas.Protocol.SpecifiedRGActivityConfig.Parser, new[]{ "Id", "Clubid", "Leagueid", "SuperLeagueid", "CreatorUid", "StartTime", "EndTime", "LowBlindRewardChips", "MidBlindRewardChips", "HighBlindRewardChips", "Status", "LowBlindRewardUsers", "MidBlindRewardUsers", "HighBlindRewardUsers", "RewardedChips", "Moduleid", "GameMode", "BulletinBoard", "ActivityType", "IsHandWithFee", "LowBlindMinBlind", "LowBlindMaxBlind", "LowBlindRewards", "MidBlindMinBlind", "MidBlindMaxBlind", "MidBlindRewards", "HighBlindMinBlind", "HighBlindMaxBlind", "HighBlindRewards" }, new[]{ "Id", "Clubid", "Leagueid", "SuperLeagueid", "CreatorUid", "StartTime", "EndTime", "Status", "RewardedChips", "Moduleid", "GameMode", "BulletinBoard", "ActivityType", "IsHandWithFee", "LowBlindMinBlind", "LowBlindMaxBlind", "MidBlindMinBlind", "MidBlindMaxBlind", "HighBlindMinBlind", "HighBlindMaxBlind" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ActivityRecord), global::Texas.Protocol.ActivityRecord.Parser, new[]{ "Type", "Storm", "RingGame", "Mtt", "SpecifiedRg", "HandMission" }, new[]{ "Type", "Storm", "RingGame", "Mtt", "SpecifiedRg", "HandMission" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ActivityRecordListREQ), global::Texas.Protocol.ActivityRecordListREQ.Parser, new[]{ "Clubid", "Leagueid", "SuperLeagueid", "Type" }, new[]{ "Clubid", "Leagueid", "SuperLeagueid", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ActivityRecordListRSP), global::Texas.Protocol.ActivityRecordListRSP.Parser, new[]{ "Type", "Code", "Configs" }, new[]{ "Type", "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ActivityModulesREQ), global::Texas.Protocol.ActivityModulesREQ.Parser, new[]{ "Clubid" }, new[]{ "Clubid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ActivityModulesRSP), global::Texas.Protocol.ActivityModulesRSP.Parser, new[]{ "Code", "Clubid", "Storms", "RingGames", "Mtts", "SpecifiedRgs", "HandMission" }, new[]{ "Code", "Clubid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ActivityModuleOpREQ), global::Texas.Protocol.ActivityModuleOpREQ.Parser, new[]{ "Action", "Type", "Clubid", "Storm", "RingGame", "Mtt", "SpecifiedRg", "HandMission" }, new[]{ "Action", "Type", "Clubid", "Storm", "RingGame", "Mtt", "SpecifiedRg", "HandMission" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ActivityModuleOpRSP), global::Texas.Protocol.ActivityModuleOpRSP.Parser, new[]{ "Code", "Action", "Type", "Clubid", "Storm", "RingGame", "Mtt", "SpecifiedRg" }, new[]{ "Code", "Action", "Type", "Clubid", "Storm", "RingGame", "Mtt", "SpecifiedRg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.UserSelfActivityRebate), global::Texas.Protocol.UserSelfActivityRebate.Parser, new[]{ "Rebate", "Rank" }, new[]{ "Rebate", "Rank" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ActivitySimpleInfo), global::Texas.Protocol.ActivitySimpleInfo.Parser, new[]{ "ActivityNo", "BeginTime", "LeftTime", "EndTime", "NowTime", "TotalReward" }, new[]{ "ActivityNo", "BeginTime", "LeftTime", "EndTime", "NowTime", "TotalReward" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubActivityInfoREQ), global::Texas.Protocol.ClubActivityInfoREQ.Parser, new[]{ "Clubid", "Leagueid", "SuperLeagueid" }, new[]{ "Clubid", "Leagueid", "SuperLeagueid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubActivityInfoRSP), global::Texas.Protocol.ClubActivityInfoRSP.Parser, new[]{ "Code", "Storm", "RingGame", "Mtt", "SpecifiedRg", "HandMission", "CustomizedRg" }, new[]{ "Code", "Storm", "RingGame", "Mtt", "SpecifiedRg", "HandMission" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.RingGameActivityInfoREQ), global::Texas.Protocol.RingGameActivityInfoREQ.Parser, new[]{ "ActivityNo" }, new[]{ "ActivityNo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.RingGameActivityInfoRSP), global::Texas.Protocol.RingGameActivityInfoRSP.Parser, new[]{ "Code", "Config", "LowBlindRebate", "MidBlindRebate", "HighBlindRebate" }, new[]{ "Code", "Config", "LowBlindRebate", "MidBlindRebate", "HighBlindRebate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttActivityInfoREQ), global::Texas.Protocol.MttActivityInfoREQ.Parser, new[]{ "ActivityNo" }, new[]{ "ActivityNo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttActivityInfoRSP), global::Texas.Protocol.MttActivityInfoRSP.Parser, new[]{ "Code", "Config", "UserRebate" }, new[]{ "Code", "Config", "UserRebate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SpecifiedRGActivityOpREQ), global::Texas.Protocol.SpecifiedRGActivityOpREQ.Parser, new[]{ "Action", "Config" }, new[]{ "Action", "Config" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SpecifiedRGActivityOpRSP), global::Texas.Protocol.SpecifiedRGActivityOpRSP.Parser, new[]{ "Action", "Config", "Code", "PpRemained", "Clubid", "Leagueid", "SuperLeagueid" }, new[]{ "Action", "Config", "Code", "PpRemained", "Clubid", "Leagueid", "SuperLeagueid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SpecifiedRGActivityInfoREQ), global::Texas.Protocol.SpecifiedRGActivityInfoREQ.Parser, new[]{ "ActivityNo" }, new[]{ "ActivityNo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SpecifiedRGActivityInfoRSP), global::Texas.Protocol.SpecifiedRGActivityInfoRSP.Parser, new[]{ "Code", "Config", "LowBlindRebate", "MidBlindRebate", "HighBlindRebate" }, new[]{ "Code", "Config", "LowBlindRebate", "MidBlindRebate", "HighBlindRebate" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ActivityReward : pb::IMessage<ActivityReward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActivityReward> _parser = new pb::MessageParser<ActivityReward>(() => new ActivityReward());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActivityReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityReward(ActivityReward other) : this() {
      _hasBits0 = other._hasBits0;
      ppChips_ = other.ppChips_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityReward Clone() {
      return new ActivityReward(this);
    }

    /// <summary>Field number for the "pp_chips" field.</summary>
    public const int PpChipsFieldNumber = 1;
    private readonly static long PpChipsDefaultValue = 0L;

    private long ppChips_;
    /// <summary>
    /// pp 幣獎勵
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PpChips {
      get { if ((_hasBits0 & 1) != 0) { return ppChips_; } else { return PpChipsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        ppChips_ = value;
      }
    }
    /// <summary>Gets whether the "pp_chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpChips {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "pp_chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpChips() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// 描述性獎勵
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDescription() {
      description_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActivityReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActivityReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PpChips != other.PpChips) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPpChips) hash ^= PpChips.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPpChips) {
        output.WriteRawTag(8);
        output.WriteInt64(PpChips);
      }
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPpChips) {
        output.WriteRawTag(8);
        output.WriteInt64(PpChips);
      }
      if (HasDescription) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPpChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PpChips);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActivityReward other) {
      if (other == null) {
        return;
      }
      if (other.HasPpChips) {
        PpChips = other.PpChips;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PpChips = input.ReadInt64();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PpChips = input.ReadInt64();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ActivityUserReward : pb::IMessage<ActivityUserReward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActivityUserReward> _parser = new pb::MessageParser<ActivityUserReward>(() => new ActivityUserReward());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActivityUserReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityUserReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityUserReward(ActivityUserReward other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      rebate_ = other.rebate_;
      rewardChips_ = other.rewardChips_;
      uid_ = other.uid_;
      icon_ = other.icon_;
      nickname_ = other.nickname_;
      rewardDescription_ = other.rewardDescription_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityUserReward Clone() {
      return new ActivityUserReward(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 1) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 2;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 2) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "rebate" field.</summary>
    public const int RebateFieldNumber = 3;
    private readonly static long RebateDefaultValue = 0L;

    private long rebate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Rebate {
      get { if ((_hasBits0 & 4) != 0) { return rebate_; } else { return RebateDefaultValue; } }
      set {
        _hasBits0 |= 4;
        rebate_ = value;
      }
    }
    /// <summary>Gets whether the "rebate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRebate {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "rebate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRebate() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "reward_chips" field.</summary>
    public const int RewardChipsFieldNumber = 4;
    private readonly static long RewardChipsDefaultValue = 0L;

    private long rewardChips_;
    /// <summary>
    /// pp 幣獎勵
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RewardChips {
      get { if ((_hasBits0 & 8) != 0) { return rewardChips_; } else { return RewardChipsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        rewardChips_ = value;
      }
    }
    /// <summary>Gets whether the "reward_chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRewardChips {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "reward_chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRewardChips() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 5;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 16) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 6;
    private readonly static string IconDefaultValue = "";

    private string icon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_ ?? IconDefaultValue; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIcon {
      get { return icon_ != null; }
    }
    /// <summary>Clears the value of the "icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIcon() {
      icon_ = null;
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 7;
    private readonly static string NicknameDefaultValue = "";

    private string nickname_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Nickname {
      get { return nickname_ ?? NicknameDefaultValue; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "nickname" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNickname {
      get { return nickname_ != null; }
    }
    /// <summary>Clears the value of the "nickname" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNickname() {
      nickname_ = null;
    }

    /// <summary>Field number for the "reward_description" field.</summary>
    public const int RewardDescriptionFieldNumber = 8;
    private readonly static string RewardDescriptionDefaultValue = "";

    private string rewardDescription_;
    /// <summary>
    /// 描述性獎勵
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RewardDescription {
      get { return rewardDescription_ ?? RewardDescriptionDefaultValue; }
      set {
        rewardDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reward_description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRewardDescription {
      get { return rewardDescription_ != null; }
    }
    /// <summary>Clears the value of the "reward_description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRewardDescription() {
      rewardDescription_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActivityUserReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActivityUserReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (Rebate != other.Rebate) return false;
      if (RewardChips != other.RewardChips) return false;
      if (Uid != other.Uid) return false;
      if (Icon != other.Icon) return false;
      if (Nickname != other.Nickname) return false;
      if (RewardDescription != other.RewardDescription) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasRebate) hash ^= Rebate.GetHashCode();
      if (HasRewardChips) hash ^= RewardChips.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasIcon) hash ^= Icon.GetHashCode();
      if (HasNickname) hash ^= Nickname.GetHashCode();
      if (HasRewardDescription) hash ^= RewardDescription.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(8);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasRebate) {
        output.WriteRawTag(24);
        output.WriteInt64(Rebate);
      }
      if (HasRewardChips) {
        output.WriteRawTag(32);
        output.WriteInt64(RewardChips);
      }
      if (HasUid) {
        output.WriteRawTag(40);
        output.WriteInt64(Uid);
      }
      if (HasIcon) {
        output.WriteRawTag(50);
        output.WriteString(Icon);
      }
      if (HasNickname) {
        output.WriteRawTag(58);
        output.WriteString(Nickname);
      }
      if (HasRewardDescription) {
        output.WriteRawTag(66);
        output.WriteString(RewardDescription);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(8);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasRebate) {
        output.WriteRawTag(24);
        output.WriteInt64(Rebate);
      }
      if (HasRewardChips) {
        output.WriteRawTag(32);
        output.WriteInt64(RewardChips);
      }
      if (HasUid) {
        output.WriteRawTag(40);
        output.WriteInt64(Uid);
      }
      if (HasIcon) {
        output.WriteRawTag(50);
        output.WriteString(Icon);
      }
      if (HasNickname) {
        output.WriteRawTag(58);
        output.WriteString(Nickname);
      }
      if (HasRewardDescription) {
        output.WriteRawTag(66);
        output.WriteString(RewardDescription);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasRebate) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Rebate);
      }
      if (HasRewardChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RewardChips);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasIcon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (HasNickname) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (HasRewardDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RewardDescription);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActivityUserReward other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasRebate) {
        Rebate = other.Rebate;
      }
      if (other.HasRewardChips) {
        RewardChips = other.RewardChips;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasIcon) {
        Icon = other.Icon;
      }
      if (other.HasNickname) {
        Nickname = other.Nickname;
      }
      if (other.HasRewardDescription) {
        RewardDescription = other.RewardDescription;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Clubid = input.ReadInt32();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            Rebate = input.ReadInt64();
            break;
          }
          case 32: {
            RewardChips = input.ReadInt64();
            break;
          }
          case 40: {
            Uid = input.ReadInt64();
            break;
          }
          case 50: {
            Icon = input.ReadString();
            break;
          }
          case 58: {
            Nickname = input.ReadString();
            break;
          }
          case 66: {
            RewardDescription = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Clubid = input.ReadInt32();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            Rebate = input.ReadInt64();
            break;
          }
          case 32: {
            RewardChips = input.ReadInt64();
            break;
          }
          case 40: {
            Uid = input.ReadInt64();
            break;
          }
          case 50: {
            Icon = input.ReadString();
            break;
          }
          case 58: {
            Nickname = input.ReadString();
            break;
          }
          case 66: {
            RewardDescription = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RingGameActivityConfig : pb::IMessage<RingGameActivityConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RingGameActivityConfig> _parser = new pb::MessageParser<RingGameActivityConfig>(() => new RingGameActivityConfig());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RingGameActivityConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RingGameActivityConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RingGameActivityConfig(RingGameActivityConfig other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      superLeagueid_ = other.superLeagueid_;
      creatorUid_ = other.creatorUid_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      lowBlindRewardChips_ = other.lowBlindRewardChips_.Clone();
      midBlindRewardChips_ = other.midBlindRewardChips_.Clone();
      highBlindRewardChips_ = other.highBlindRewardChips_.Clone();
      status_ = other.status_;
      lowBlindRewardUsers_ = other.lowBlindRewardUsers_.Clone();
      midBlindRewardUsers_ = other.midBlindRewardUsers_.Clone();
      highBlindRewardUsers_ = other.highBlindRewardUsers_.Clone();
      rewardedChips_ = other.rewardedChips_;
      moduleid_ = other.moduleid_;
      bulletinBoard_ = other.bulletinBoard_;
      activityType_ = other.activityType_;
      isHandWithFee_ = other.isHandWithFee_;
      lowBlindMinBlind_ = other.lowBlindMinBlind_;
      lowBlindMaxBlind_ = other.lowBlindMaxBlind_;
      lowBlindRewards_ = other.lowBlindRewards_.Clone();
      midBlindMinBlind_ = other.midBlindMinBlind_;
      midBlindMaxBlind_ = other.midBlindMaxBlind_;
      midBlindRewards_ = other.midBlindRewards_.Clone();
      highBlindMinBlind_ = other.highBlindMinBlind_;
      highBlindMaxBlind_ = other.highBlindMaxBlind_;
      highBlindRewards_ = other.highBlindRewards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RingGameActivityConfig Clone() {
      return new RingGameActivityConfig(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static long IdDefaultValue = 0L;

    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 2;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 2) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 3;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 4) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "super_leagueid" field.</summary>
    public const int SuperLeagueidFieldNumber = 4;
    private readonly static int SuperLeagueidDefaultValue = 0;

    private int superLeagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueid {
      get { if ((_hasBits0 & 8) != 0) { return superLeagueid_; } else { return SuperLeagueidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        superLeagueid_ = value;
      }
    }
    /// <summary>Gets whether the "super_leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "super_leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueid() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "creator_uid" field.</summary>
    public const int CreatorUidFieldNumber = 5;
    private readonly static long CreatorUidDefaultValue = 0L;

    private long creatorUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CreatorUid {
      get { if ((_hasBits0 & 16) != 0) { return creatorUid_; } else { return CreatorUidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        creatorUid_ = value;
      }
    }
    /// <summary>Gets whether the "creator_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCreatorUid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "creator_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCreatorUid() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 6;
    private readonly static long StartTimeDefaultValue = 0L;

    private long startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartTime {
      get { if ((_hasBits0 & 32) != 0) { return startTime_; } else { return StartTimeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        startTime_ = value;
      }
    }
    /// <summary>Gets whether the "start_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartTime {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "start_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartTime() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 7;
    private readonly static long EndTimeDefaultValue = 0L;

    private long endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndTime {
      get { if ((_hasBits0 & 64) != 0) { return endTime_; } else { return EndTimeDefaultValue; } }
      set {
        _hasBits0 |= 64;
        endTime_ = value;
      }
    }
    /// <summary>Gets whether the "end_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndTime {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "end_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndTime() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "low_blind_reward_chips" field.</summary>
    public const int LowBlindRewardChipsFieldNumber = 8;
    private static readonly pb::FieldCodec<long> _repeated_lowBlindRewardChips_codec
        = pb::FieldCodec.ForInt64(66);
    private readonly pbc::RepeatedField<long> lowBlindRewardChips_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// [舊版] blinds &lt;= 0.5/1 (微級別才能設定)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> LowBlindRewardChips {
      get { return lowBlindRewardChips_; }
    }

    /// <summary>Field number for the "mid_blind_reward_chips" field.</summary>
    public const int MidBlindRewardChipsFieldNumber = 9;
    private static readonly pb::FieldCodec<long> _repeated_midBlindRewardChips_codec
        = pb::FieldCodec.ForInt64(74);
    private readonly pbc::RepeatedField<long> midBlindRewardChips_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// [舊版] 1/2 &lt;= blinds &lt;= 5/10
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> MidBlindRewardChips {
      get { return midBlindRewardChips_; }
    }

    /// <summary>Field number for the "high_blind_reward_chips" field.</summary>
    public const int HighBlindRewardChipsFieldNumber = 10;
    private static readonly pb::FieldCodec<long> _repeated_highBlindRewardChips_codec
        = pb::FieldCodec.ForInt64(82);
    private readonly pbc::RepeatedField<long> highBlindRewardChips_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// [舊版] 10/20 &lt;= blinds
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> HighBlindRewardChips {
      get { return highBlindRewardChips_; }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 11;
    private readonly static int StatusDefaultValue = 0;

    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Status {
      get { if ((_hasBits0 & 128) != 0) { return status_; } else { return StatusDefaultValue; } }
      set {
        _hasBits0 |= 128;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatus {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatus() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "low_blind_reward_users" field.</summary>
    public const int LowBlindRewardUsersFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ActivityUserReward> _repeated_lowBlindRewardUsers_codec
        = pb::FieldCodec.ForMessage(98, global::Texas.Protocol.ActivityUserReward.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ActivityUserReward> lowBlindRewardUsers_ = new pbc::RepeatedField<global::Texas.Protocol.ActivityUserReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ActivityUserReward> LowBlindRewardUsers {
      get { return lowBlindRewardUsers_; }
    }

    /// <summary>Field number for the "mid_blind_reward_users" field.</summary>
    public const int MidBlindRewardUsersFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ActivityUserReward> _repeated_midBlindRewardUsers_codec
        = pb::FieldCodec.ForMessage(106, global::Texas.Protocol.ActivityUserReward.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ActivityUserReward> midBlindRewardUsers_ = new pbc::RepeatedField<global::Texas.Protocol.ActivityUserReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ActivityUserReward> MidBlindRewardUsers {
      get { return midBlindRewardUsers_; }
    }

    /// <summary>Field number for the "high_blind_reward_users" field.</summary>
    public const int HighBlindRewardUsersFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ActivityUserReward> _repeated_highBlindRewardUsers_codec
        = pb::FieldCodec.ForMessage(114, global::Texas.Protocol.ActivityUserReward.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ActivityUserReward> highBlindRewardUsers_ = new pbc::RepeatedField<global::Texas.Protocol.ActivityUserReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ActivityUserReward> HighBlindRewardUsers {
      get { return highBlindRewardUsers_; }
    }

    /// <summary>Field number for the "rewarded_chips" field.</summary>
    public const int RewardedChipsFieldNumber = 15;
    private readonly static long RewardedChipsDefaultValue = 0L;

    private long rewardedChips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RewardedChips {
      get { if ((_hasBits0 & 256) != 0) { return rewardedChips_; } else { return RewardedChipsDefaultValue; } }
      set {
        _hasBits0 |= 256;
        rewardedChips_ = value;
      }
    }
    /// <summary>Gets whether the "rewarded_chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRewardedChips {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "rewarded_chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRewardedChips() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "moduleid" field.</summary>
    public const int ModuleidFieldNumber = 16;
    private readonly static long ModuleidDefaultValue = 0L;

    private long moduleid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Moduleid {
      get { if ((_hasBits0 & 512) != 0) { return moduleid_; } else { return ModuleidDefaultValue; } }
      set {
        _hasBits0 |= 512;
        moduleid_ = value;
      }
    }
    /// <summary>Gets whether the "moduleid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModuleid {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "moduleid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModuleid() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "bulletin_board" field.</summary>
    public const int BulletinBoardFieldNumber = 17;
    private readonly static string BulletinBoardDefaultValue = "";

    private string bulletinBoard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BulletinBoard {
      get { return bulletinBoard_ ?? BulletinBoardDefaultValue; }
      set {
        bulletinBoard_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bulletin_board" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBulletinBoard {
      get { return bulletinBoard_ != null; }
    }
    /// <summary>Clears the value of the "bulletin_board" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBulletinBoard() {
      bulletinBoard_ = null;
    }

    /// <summary>Field number for the "activity_type" field.</summary>
    public const int ActivityTypeFieldNumber = 18;
    private readonly static int ActivityTypeDefaultValue = 0;

    private int activityType_;
    /// <summary>
    /// 排行榜優化
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActivityType {
      get { if ((_hasBits0 & 1024) != 0) { return activityType_; } else { return ActivityTypeDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        activityType_ = value;
      }
    }
    /// <summary>Gets whether the "activity_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActivityType {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "activity_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActivityType() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "is_hand_with_fee" field.</summary>
    public const int IsHandWithFeeFieldNumber = 19;
    private readonly static int IsHandWithFeeDefaultValue = 0;

    private int isHandWithFee_;
    /// <summary>
    /// 是否僅計算產生 fee 之手數
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int IsHandWithFee {
      get { if ((_hasBits0 & 2048) != 0) { return isHandWithFee_; } else { return IsHandWithFeeDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        isHandWithFee_ = value;
      }
    }
    /// <summary>Gets whether the "is_hand_with_fee" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsHandWithFee {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "is_hand_with_fee" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsHandWithFee() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "low_blind_min_blind" field.</summary>
    public const int LowBlindMinBlindFieldNumber = 20;
    private readonly static long LowBlindMinBlindDefaultValue = 0L;

    private long lowBlindMinBlind_;
    /// <summary>
    /// 第一級別盲注下限 (小盲)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LowBlindMinBlind {
      get { if ((_hasBits0 & 4096) != 0) { return lowBlindMinBlind_; } else { return LowBlindMinBlindDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        lowBlindMinBlind_ = value;
      }
    }
    /// <summary>Gets whether the "low_blind_min_blind" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLowBlindMinBlind {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "low_blind_min_blind" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLowBlindMinBlind() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "low_blind_max_blind" field.</summary>
    public const int LowBlindMaxBlindFieldNumber = 21;
    private readonly static long LowBlindMaxBlindDefaultValue = 0L;

    private long lowBlindMaxBlind_;
    /// <summary>
    /// 第一級別盲注上限（小盲）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LowBlindMaxBlind {
      get { if ((_hasBits0 & 8192) != 0) { return lowBlindMaxBlind_; } else { return LowBlindMaxBlindDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        lowBlindMaxBlind_ = value;
      }
    }
    /// <summary>Gets whether the "low_blind_max_blind" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLowBlindMaxBlind {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "low_blind_max_blind" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLowBlindMaxBlind() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "low_blind_rewards" field.</summary>
    public const int LowBlindRewardsFieldNumber = 22;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ActivityReward> _repeated_lowBlindRewards_codec
        = pb::FieldCodec.ForMessage(178, global::Texas.Protocol.ActivityReward.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ActivityReward> lowBlindRewards_ = new pbc::RepeatedField<global::Texas.Protocol.ActivityReward>();
    /// <summary>
    /// 第一級別獎勵
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ActivityReward> LowBlindRewards {
      get { return lowBlindRewards_; }
    }

    /// <summary>Field number for the "mid_blind_min_blind" field.</summary>
    public const int MidBlindMinBlindFieldNumber = 23;
    private readonly static long MidBlindMinBlindDefaultValue = 0L;

    private long midBlindMinBlind_;
    /// <summary>
    /// 第二級別盲注下限 (小盲)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MidBlindMinBlind {
      get { if ((_hasBits0 & 16384) != 0) { return midBlindMinBlind_; } else { return MidBlindMinBlindDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        midBlindMinBlind_ = value;
      }
    }
    /// <summary>Gets whether the "mid_blind_min_blind" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMidBlindMinBlind {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "mid_blind_min_blind" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMidBlindMinBlind() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "mid_blind_max_blind" field.</summary>
    public const int MidBlindMaxBlindFieldNumber = 24;
    private readonly static long MidBlindMaxBlindDefaultValue = 0L;

    private long midBlindMaxBlind_;
    /// <summary>
    /// 第二級別盲注上限（小盲）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MidBlindMaxBlind {
      get { if ((_hasBits0 & 32768) != 0) { return midBlindMaxBlind_; } else { return MidBlindMaxBlindDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        midBlindMaxBlind_ = value;
      }
    }
    /// <summary>Gets whether the "mid_blind_max_blind" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMidBlindMaxBlind {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "mid_blind_max_blind" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMidBlindMaxBlind() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "mid_blind_rewards" field.</summary>
    public const int MidBlindRewardsFieldNumber = 25;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ActivityReward> _repeated_midBlindRewards_codec
        = pb::FieldCodec.ForMessage(202, global::Texas.Protocol.ActivityReward.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ActivityReward> midBlindRewards_ = new pbc::RepeatedField<global::Texas.Protocol.ActivityReward>();
    /// <summary>
    /// 第二級別獎勵
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ActivityReward> MidBlindRewards {
      get { return midBlindRewards_; }
    }

    /// <summary>Field number for the "high_blind_min_blind" field.</summary>
    public const int HighBlindMinBlindFieldNumber = 26;
    private readonly static long HighBlindMinBlindDefaultValue = 0L;

    private long highBlindMinBlind_;
    /// <summary>
    /// 第三級別盲注下限 (小盲)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long HighBlindMinBlind {
      get { if ((_hasBits0 & 65536) != 0) { return highBlindMinBlind_; } else { return HighBlindMinBlindDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        highBlindMinBlind_ = value;
      }
    }
    /// <summary>Gets whether the "high_blind_min_blind" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHighBlindMinBlind {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "high_blind_min_blind" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHighBlindMinBlind() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "high_blind_max_blind" field.</summary>
    public const int HighBlindMaxBlindFieldNumber = 27;
    private readonly static long HighBlindMaxBlindDefaultValue = 0L;

    private long highBlindMaxBlind_;
    /// <summary>
    /// 第三級別盲注上限（小盲）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long HighBlindMaxBlind {
      get { if ((_hasBits0 & 131072) != 0) { return highBlindMaxBlind_; } else { return HighBlindMaxBlindDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        highBlindMaxBlind_ = value;
      }
    }
    /// <summary>Gets whether the "high_blind_max_blind" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHighBlindMaxBlind {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "high_blind_max_blind" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHighBlindMaxBlind() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "high_blind_rewards" field.</summary>
    public const int HighBlindRewardsFieldNumber = 28;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ActivityReward> _repeated_highBlindRewards_codec
        = pb::FieldCodec.ForMessage(226, global::Texas.Protocol.ActivityReward.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ActivityReward> highBlindRewards_ = new pbc::RepeatedField<global::Texas.Protocol.ActivityReward>();
    /// <summary>
    /// 第三級別獎勵
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ActivityReward> HighBlindRewards {
      get { return highBlindRewards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RingGameActivityConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RingGameActivityConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (SuperLeagueid != other.SuperLeagueid) return false;
      if (CreatorUid != other.CreatorUid) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if(!lowBlindRewardChips_.Equals(other.lowBlindRewardChips_)) return false;
      if(!midBlindRewardChips_.Equals(other.midBlindRewardChips_)) return false;
      if(!highBlindRewardChips_.Equals(other.highBlindRewardChips_)) return false;
      if (Status != other.Status) return false;
      if(!lowBlindRewardUsers_.Equals(other.lowBlindRewardUsers_)) return false;
      if(!midBlindRewardUsers_.Equals(other.midBlindRewardUsers_)) return false;
      if(!highBlindRewardUsers_.Equals(other.highBlindRewardUsers_)) return false;
      if (RewardedChips != other.RewardedChips) return false;
      if (Moduleid != other.Moduleid) return false;
      if (BulletinBoard != other.BulletinBoard) return false;
      if (ActivityType != other.ActivityType) return false;
      if (IsHandWithFee != other.IsHandWithFee) return false;
      if (LowBlindMinBlind != other.LowBlindMinBlind) return false;
      if (LowBlindMaxBlind != other.LowBlindMaxBlind) return false;
      if(!lowBlindRewards_.Equals(other.lowBlindRewards_)) return false;
      if (MidBlindMinBlind != other.MidBlindMinBlind) return false;
      if (MidBlindMaxBlind != other.MidBlindMaxBlind) return false;
      if(!midBlindRewards_.Equals(other.midBlindRewards_)) return false;
      if (HighBlindMinBlind != other.HighBlindMinBlind) return false;
      if (HighBlindMaxBlind != other.HighBlindMaxBlind) return false;
      if(!highBlindRewards_.Equals(other.highBlindRewards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasSuperLeagueid) hash ^= SuperLeagueid.GetHashCode();
      if (HasCreatorUid) hash ^= CreatorUid.GetHashCode();
      if (HasStartTime) hash ^= StartTime.GetHashCode();
      if (HasEndTime) hash ^= EndTime.GetHashCode();
      hash ^= lowBlindRewardChips_.GetHashCode();
      hash ^= midBlindRewardChips_.GetHashCode();
      hash ^= highBlindRewardChips_.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      hash ^= lowBlindRewardUsers_.GetHashCode();
      hash ^= midBlindRewardUsers_.GetHashCode();
      hash ^= highBlindRewardUsers_.GetHashCode();
      if (HasRewardedChips) hash ^= RewardedChips.GetHashCode();
      if (HasModuleid) hash ^= Moduleid.GetHashCode();
      if (HasBulletinBoard) hash ^= BulletinBoard.GetHashCode();
      if (HasActivityType) hash ^= ActivityType.GetHashCode();
      if (HasIsHandWithFee) hash ^= IsHandWithFee.GetHashCode();
      if (HasLowBlindMinBlind) hash ^= LowBlindMinBlind.GetHashCode();
      if (HasLowBlindMaxBlind) hash ^= LowBlindMaxBlind.GetHashCode();
      hash ^= lowBlindRewards_.GetHashCode();
      if (HasMidBlindMinBlind) hash ^= MidBlindMinBlind.GetHashCode();
      if (HasMidBlindMaxBlind) hash ^= MidBlindMaxBlind.GetHashCode();
      hash ^= midBlindRewards_.GetHashCode();
      if (HasHighBlindMinBlind) hash ^= HighBlindMinBlind.GetHashCode();
      if (HasHighBlindMaxBlind) hash ^= HighBlindMaxBlind.GetHashCode();
      hash ^= highBlindRewards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (HasClubid) {
        output.WriteRawTag(16);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(24);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(32);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasCreatorUid) {
        output.WriteRawTag(40);
        output.WriteInt64(CreatorUid);
      }
      if (HasStartTime) {
        output.WriteRawTag(48);
        output.WriteInt64(StartTime);
      }
      if (HasEndTime) {
        output.WriteRawTag(56);
        output.WriteInt64(EndTime);
      }
      lowBlindRewardChips_.WriteTo(output, _repeated_lowBlindRewardChips_codec);
      midBlindRewardChips_.WriteTo(output, _repeated_midBlindRewardChips_codec);
      highBlindRewardChips_.WriteTo(output, _repeated_highBlindRewardChips_codec);
      if (HasStatus) {
        output.WriteRawTag(88);
        output.WriteInt32(Status);
      }
      lowBlindRewardUsers_.WriteTo(output, _repeated_lowBlindRewardUsers_codec);
      midBlindRewardUsers_.WriteTo(output, _repeated_midBlindRewardUsers_codec);
      highBlindRewardUsers_.WriteTo(output, _repeated_highBlindRewardUsers_codec);
      if (HasRewardedChips) {
        output.WriteRawTag(120);
        output.WriteInt64(RewardedChips);
      }
      if (HasModuleid) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(Moduleid);
      }
      if (HasBulletinBoard) {
        output.WriteRawTag(138, 1);
        output.WriteString(BulletinBoard);
      }
      if (HasActivityType) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(ActivityType);
      }
      if (HasIsHandWithFee) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(IsHandWithFee);
      }
      if (HasLowBlindMinBlind) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(LowBlindMinBlind);
      }
      if (HasLowBlindMaxBlind) {
        output.WriteRawTag(168, 1);
        output.WriteInt64(LowBlindMaxBlind);
      }
      lowBlindRewards_.WriteTo(output, _repeated_lowBlindRewards_codec);
      if (HasMidBlindMinBlind) {
        output.WriteRawTag(184, 1);
        output.WriteInt64(MidBlindMinBlind);
      }
      if (HasMidBlindMaxBlind) {
        output.WriteRawTag(192, 1);
        output.WriteInt64(MidBlindMaxBlind);
      }
      midBlindRewards_.WriteTo(output, _repeated_midBlindRewards_codec);
      if (HasHighBlindMinBlind) {
        output.WriteRawTag(208, 1);
        output.WriteInt64(HighBlindMinBlind);
      }
      if (HasHighBlindMaxBlind) {
        output.WriteRawTag(216, 1);
        output.WriteInt64(HighBlindMaxBlind);
      }
      highBlindRewards_.WriteTo(output, _repeated_highBlindRewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (HasClubid) {
        output.WriteRawTag(16);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(24);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(32);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasCreatorUid) {
        output.WriteRawTag(40);
        output.WriteInt64(CreatorUid);
      }
      if (HasStartTime) {
        output.WriteRawTag(48);
        output.WriteInt64(StartTime);
      }
      if (HasEndTime) {
        output.WriteRawTag(56);
        output.WriteInt64(EndTime);
      }
      lowBlindRewardChips_.WriteTo(ref output, _repeated_lowBlindRewardChips_codec);
      midBlindRewardChips_.WriteTo(ref output, _repeated_midBlindRewardChips_codec);
      highBlindRewardChips_.WriteTo(ref output, _repeated_highBlindRewardChips_codec);
      if (HasStatus) {
        output.WriteRawTag(88);
        output.WriteInt32(Status);
      }
      lowBlindRewardUsers_.WriteTo(ref output, _repeated_lowBlindRewardUsers_codec);
      midBlindRewardUsers_.WriteTo(ref output, _repeated_midBlindRewardUsers_codec);
      highBlindRewardUsers_.WriteTo(ref output, _repeated_highBlindRewardUsers_codec);
      if (HasRewardedChips) {
        output.WriteRawTag(120);
        output.WriteInt64(RewardedChips);
      }
      if (HasModuleid) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(Moduleid);
      }
      if (HasBulletinBoard) {
        output.WriteRawTag(138, 1);
        output.WriteString(BulletinBoard);
      }
      if (HasActivityType) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(ActivityType);
      }
      if (HasIsHandWithFee) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(IsHandWithFee);
      }
      if (HasLowBlindMinBlind) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(LowBlindMinBlind);
      }
      if (HasLowBlindMaxBlind) {
        output.WriteRawTag(168, 1);
        output.WriteInt64(LowBlindMaxBlind);
      }
      lowBlindRewards_.WriteTo(ref output, _repeated_lowBlindRewards_codec);
      if (HasMidBlindMinBlind) {
        output.WriteRawTag(184, 1);
        output.WriteInt64(MidBlindMinBlind);
      }
      if (HasMidBlindMaxBlind) {
        output.WriteRawTag(192, 1);
        output.WriteInt64(MidBlindMaxBlind);
      }
      midBlindRewards_.WriteTo(ref output, _repeated_midBlindRewards_codec);
      if (HasHighBlindMinBlind) {
        output.WriteRawTag(208, 1);
        output.WriteInt64(HighBlindMinBlind);
      }
      if (HasHighBlindMaxBlind) {
        output.WriteRawTag(216, 1);
        output.WriteInt64(HighBlindMaxBlind);
      }
      highBlindRewards_.WriteTo(ref output, _repeated_highBlindRewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasSuperLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueid);
      }
      if (HasCreatorUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreatorUid);
      }
      if (HasStartTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTime);
      }
      if (HasEndTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime);
      }
      size += lowBlindRewardChips_.CalculateSize(_repeated_lowBlindRewardChips_codec);
      size += midBlindRewardChips_.CalculateSize(_repeated_midBlindRewardChips_codec);
      size += highBlindRewardChips_.CalculateSize(_repeated_highBlindRewardChips_codec);
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      size += lowBlindRewardUsers_.CalculateSize(_repeated_lowBlindRewardUsers_codec);
      size += midBlindRewardUsers_.CalculateSize(_repeated_midBlindRewardUsers_codec);
      size += highBlindRewardUsers_.CalculateSize(_repeated_highBlindRewardUsers_codec);
      if (HasRewardedChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RewardedChips);
      }
      if (HasModuleid) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Moduleid);
      }
      if (HasBulletinBoard) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BulletinBoard);
      }
      if (HasActivityType) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ActivityType);
      }
      if (HasIsHandWithFee) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(IsHandWithFee);
      }
      if (HasLowBlindMinBlind) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(LowBlindMinBlind);
      }
      if (HasLowBlindMaxBlind) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(LowBlindMaxBlind);
      }
      size += lowBlindRewards_.CalculateSize(_repeated_lowBlindRewards_codec);
      if (HasMidBlindMinBlind) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(MidBlindMinBlind);
      }
      if (HasMidBlindMaxBlind) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(MidBlindMaxBlind);
      }
      size += midBlindRewards_.CalculateSize(_repeated_midBlindRewards_codec);
      if (HasHighBlindMinBlind) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(HighBlindMinBlind);
      }
      if (HasHighBlindMaxBlind) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(HighBlindMaxBlind);
      }
      size += highBlindRewards_.CalculateSize(_repeated_highBlindRewards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RingGameActivityConfig other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasSuperLeagueid) {
        SuperLeagueid = other.SuperLeagueid;
      }
      if (other.HasCreatorUid) {
        CreatorUid = other.CreatorUid;
      }
      if (other.HasStartTime) {
        StartTime = other.StartTime;
      }
      if (other.HasEndTime) {
        EndTime = other.EndTime;
      }
      lowBlindRewardChips_.Add(other.lowBlindRewardChips_);
      midBlindRewardChips_.Add(other.midBlindRewardChips_);
      highBlindRewardChips_.Add(other.highBlindRewardChips_);
      if (other.HasStatus) {
        Status = other.Status;
      }
      lowBlindRewardUsers_.Add(other.lowBlindRewardUsers_);
      midBlindRewardUsers_.Add(other.midBlindRewardUsers_);
      highBlindRewardUsers_.Add(other.highBlindRewardUsers_);
      if (other.HasRewardedChips) {
        RewardedChips = other.RewardedChips;
      }
      if (other.HasModuleid) {
        Moduleid = other.Moduleid;
      }
      if (other.HasBulletinBoard) {
        BulletinBoard = other.BulletinBoard;
      }
      if (other.HasActivityType) {
        ActivityType = other.ActivityType;
      }
      if (other.HasIsHandWithFee) {
        IsHandWithFee = other.IsHandWithFee;
      }
      if (other.HasLowBlindMinBlind) {
        LowBlindMinBlind = other.LowBlindMinBlind;
      }
      if (other.HasLowBlindMaxBlind) {
        LowBlindMaxBlind = other.LowBlindMaxBlind;
      }
      lowBlindRewards_.Add(other.lowBlindRewards_);
      if (other.HasMidBlindMinBlind) {
        MidBlindMinBlind = other.MidBlindMinBlind;
      }
      if (other.HasMidBlindMaxBlind) {
        MidBlindMaxBlind = other.MidBlindMaxBlind;
      }
      midBlindRewards_.Add(other.midBlindRewards_);
      if (other.HasHighBlindMinBlind) {
        HighBlindMinBlind = other.HighBlindMinBlind;
      }
      if (other.HasHighBlindMaxBlind) {
        HighBlindMaxBlind = other.HighBlindMaxBlind;
      }
      highBlindRewards_.Add(other.highBlindRewards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            Clubid = input.ReadInt32();
            break;
          }
          case 24: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 32: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 40: {
            CreatorUid = input.ReadInt64();
            break;
          }
          case 48: {
            StartTime = input.ReadInt64();
            break;
          }
          case 56: {
            EndTime = input.ReadInt64();
            break;
          }
          case 66:
          case 64: {
            lowBlindRewardChips_.AddEntriesFrom(input, _repeated_lowBlindRewardChips_codec);
            break;
          }
          case 74:
          case 72: {
            midBlindRewardChips_.AddEntriesFrom(input, _repeated_midBlindRewardChips_codec);
            break;
          }
          case 82:
          case 80: {
            highBlindRewardChips_.AddEntriesFrom(input, _repeated_highBlindRewardChips_codec);
            break;
          }
          case 88: {
            Status = input.ReadInt32();
            break;
          }
          case 98: {
            lowBlindRewardUsers_.AddEntriesFrom(input, _repeated_lowBlindRewardUsers_codec);
            break;
          }
          case 106: {
            midBlindRewardUsers_.AddEntriesFrom(input, _repeated_midBlindRewardUsers_codec);
            break;
          }
          case 114: {
            highBlindRewardUsers_.AddEntriesFrom(input, _repeated_highBlindRewardUsers_codec);
            break;
          }
          case 120: {
            RewardedChips = input.ReadInt64();
            break;
          }
          case 128: {
            Moduleid = input.ReadInt64();
            break;
          }
          case 138: {
            BulletinBoard = input.ReadString();
            break;
          }
          case 144: {
            ActivityType = input.ReadInt32();
            break;
          }
          case 152: {
            IsHandWithFee = input.ReadInt32();
            break;
          }
          case 160: {
            LowBlindMinBlind = input.ReadInt64();
            break;
          }
          case 168: {
            LowBlindMaxBlind = input.ReadInt64();
            break;
          }
          case 178: {
            lowBlindRewards_.AddEntriesFrom(input, _repeated_lowBlindRewards_codec);
            break;
          }
          case 184: {
            MidBlindMinBlind = input.ReadInt64();
            break;
          }
          case 192: {
            MidBlindMaxBlind = input.ReadInt64();
            break;
          }
          case 202: {
            midBlindRewards_.AddEntriesFrom(input, _repeated_midBlindRewards_codec);
            break;
          }
          case 208: {
            HighBlindMinBlind = input.ReadInt64();
            break;
          }
          case 216: {
            HighBlindMaxBlind = input.ReadInt64();
            break;
          }
          case 226: {
            highBlindRewards_.AddEntriesFrom(input, _repeated_highBlindRewards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            Clubid = input.ReadInt32();
            break;
          }
          case 24: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 32: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 40: {
            CreatorUid = input.ReadInt64();
            break;
          }
          case 48: {
            StartTime = input.ReadInt64();
            break;
          }
          case 56: {
            EndTime = input.ReadInt64();
            break;
          }
          case 66:
          case 64: {
            lowBlindRewardChips_.AddEntriesFrom(ref input, _repeated_lowBlindRewardChips_codec);
            break;
          }
          case 74:
          case 72: {
            midBlindRewardChips_.AddEntriesFrom(ref input, _repeated_midBlindRewardChips_codec);
            break;
          }
          case 82:
          case 80: {
            highBlindRewardChips_.AddEntriesFrom(ref input, _repeated_highBlindRewardChips_codec);
            break;
          }
          case 88: {
            Status = input.ReadInt32();
            break;
          }
          case 98: {
            lowBlindRewardUsers_.AddEntriesFrom(ref input, _repeated_lowBlindRewardUsers_codec);
            break;
          }
          case 106: {
            midBlindRewardUsers_.AddEntriesFrom(ref input, _repeated_midBlindRewardUsers_codec);
            break;
          }
          case 114: {
            highBlindRewardUsers_.AddEntriesFrom(ref input, _repeated_highBlindRewardUsers_codec);
            break;
          }
          case 120: {
            RewardedChips = input.ReadInt64();
            break;
          }
          case 128: {
            Moduleid = input.ReadInt64();
            break;
          }
          case 138: {
            BulletinBoard = input.ReadString();
            break;
          }
          case 144: {
            ActivityType = input.ReadInt32();
            break;
          }
          case 152: {
            IsHandWithFee = input.ReadInt32();
            break;
          }
          case 160: {
            LowBlindMinBlind = input.ReadInt64();
            break;
          }
          case 168: {
            LowBlindMaxBlind = input.ReadInt64();
            break;
          }
          case 178: {
            lowBlindRewards_.AddEntriesFrom(ref input, _repeated_lowBlindRewards_codec);
            break;
          }
          case 184: {
            MidBlindMinBlind = input.ReadInt64();
            break;
          }
          case 192: {
            MidBlindMaxBlind = input.ReadInt64();
            break;
          }
          case 202: {
            midBlindRewards_.AddEntriesFrom(ref input, _repeated_midBlindRewards_codec);
            break;
          }
          case 208: {
            HighBlindMinBlind = input.ReadInt64();
            break;
          }
          case 216: {
            HighBlindMaxBlind = input.ReadInt64();
            break;
          }
          case 226: {
            highBlindRewards_.AddEntriesFrom(ref input, _repeated_highBlindRewards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///ring game 
  /// </summary>
  public sealed partial class RingGameActivityOpREQ : pb::IMessage<RingGameActivityOpREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RingGameActivityOpREQ> _parser = new pb::MessageParser<RingGameActivityOpREQ>(() => new RingGameActivityOpREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RingGameActivityOpREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RingGameActivityOpREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RingGameActivityOpREQ(RingGameActivityOpREQ other) : this() {
      _hasBits0 = other._hasBits0;
      action_ = other.action_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RingGameActivityOpREQ Clone() {
      return new RingGameActivityOpREQ(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private readonly static int ActionDefaultValue = 0;

    private int action_;
    /// <summary>
    /// 0 create 1 modify 2 cancel
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Action {
      get { if ((_hasBits0 & 1) != 0) { return action_; } else { return ActionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        action_ = value;
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAction {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Texas.Protocol.RingGameActivityConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RingGameActivityConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RingGameActivityOpREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RingGameActivityOpREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (!object.Equals(Config, other.Config)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAction) hash ^= Action.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAction) {
        output.WriteRawTag(8);
        output.WriteInt32(Action);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAction) {
        output.WriteRawTag(8);
        output.WriteInt32(Action);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Action);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RingGameActivityOpREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Texas.Protocol.RingGameActivityConfig();
        }
        Config.MergeFrom(other.Config);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Action = input.ReadInt32();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Texas.Protocol.RingGameActivityConfig();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Action = input.ReadInt32();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Texas.Protocol.RingGameActivityConfig();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RingGameActivityOpRSP : pb::IMessage<RingGameActivityOpRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RingGameActivityOpRSP> _parser = new pb::MessageParser<RingGameActivityOpRSP>(() => new RingGameActivityOpRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RingGameActivityOpRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RingGameActivityOpRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RingGameActivityOpRSP(RingGameActivityOpRSP other) : this() {
      _hasBits0 = other._hasBits0;
      action_ = other.action_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      code_ = other.code_;
      ppRemained_ = other.ppRemained_;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      superLeagueid_ = other.superLeagueid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RingGameActivityOpRSP Clone() {
      return new RingGameActivityOpRSP(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private readonly static int ActionDefaultValue = 0;

    private int action_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Action {
      get { if ((_hasBits0 & 1) != 0) { return action_; } else { return ActionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        action_ = value;
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAction {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Texas.Protocol.RingGameActivityConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RingGameActivityConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 3;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0 success //other faild
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 2) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "pp_remained" field.</summary>
    public const int PpRemainedFieldNumber = 4;
    private readonly static long PpRemainedDefaultValue = 0L;

    private long ppRemained_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PpRemained {
      get { if ((_hasBits0 & 4) != 0) { return ppRemained_; } else { return PpRemainedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        ppRemained_ = value;
      }
    }
    /// <summary>Gets whether the "pp_remained" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpRemained {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "pp_remained" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpRemained() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 5;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 8) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 6;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 16) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "super_leagueid" field.</summary>
    public const int SuperLeagueidFieldNumber = 7;
    private readonly static int SuperLeagueidDefaultValue = 0;

    private int superLeagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueid {
      get { if ((_hasBits0 & 32) != 0) { return superLeagueid_; } else { return SuperLeagueidDefaultValue; } }
      set {
        _hasBits0 |= 32;
        superLeagueid_ = value;
      }
    }
    /// <summary>Gets whether the "super_leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueid {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "super_leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueid() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RingGameActivityOpRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RingGameActivityOpRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (Code != other.Code) return false;
      if (PpRemained != other.PpRemained) return false;
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (SuperLeagueid != other.SuperLeagueid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAction) hash ^= Action.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasPpRemained) hash ^= PpRemained.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasSuperLeagueid) hash ^= SuperLeagueid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAction) {
        output.WriteRawTag(8);
        output.WriteInt32(Action);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (HasCode) {
        output.WriteRawTag(24);
        output.WriteInt32(Code);
      }
      if (HasPpRemained) {
        output.WriteRawTag(32);
        output.WriteInt64(PpRemained);
      }
      if (HasClubid) {
        output.WriteRawTag(40);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(48);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(56);
        output.WriteInt32(SuperLeagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAction) {
        output.WriteRawTag(8);
        output.WriteInt32(Action);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (HasCode) {
        output.WriteRawTag(24);
        output.WriteInt32(Code);
      }
      if (HasPpRemained) {
        output.WriteRawTag(32);
        output.WriteInt64(PpRemained);
      }
      if (HasClubid) {
        output.WriteRawTag(40);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(48);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(56);
        output.WriteInt32(SuperLeagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Action);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasPpRemained) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PpRemained);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasSuperLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RingGameActivityOpRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Texas.Protocol.RingGameActivityConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasPpRemained) {
        PpRemained = other.PpRemained;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasSuperLeagueid) {
        SuperLeagueid = other.SuperLeagueid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Action = input.ReadInt32();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Texas.Protocol.RingGameActivityConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 24: {
            Code = input.ReadInt32();
            break;
          }
          case 32: {
            PpRemained = input.ReadInt64();
            break;
          }
          case 40: {
            Clubid = input.ReadInt32();
            break;
          }
          case 48: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 56: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Action = input.ReadInt32();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Texas.Protocol.RingGameActivityConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 24: {
            Code = input.ReadInt32();
            break;
          }
          case 32: {
            PpRemained = input.ReadInt64();
            break;
          }
          case 40: {
            Clubid = input.ReadInt32();
            break;
          }
          case 48: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 56: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttActivityConfig : pb::IMessage<MttActivityConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttActivityConfig> _parser = new pb::MessageParser<MttActivityConfig>(() => new MttActivityConfig());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttActivityConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttActivityConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttActivityConfig(MttActivityConfig other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      superLeagueid_ = other.superLeagueid_;
      creatorUid_ = other.creatorUid_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      rewardChips_ = other.rewardChips_.Clone();
      status_ = other.status_;
      rewardUsers_ = other.rewardUsers_.Clone();
      rewardedChips_ = other.rewardedChips_;
      moduleid_ = other.moduleid_;
      bulletinBoard_ = other.bulletinBoard_;
      rewards_ = other.rewards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttActivityConfig Clone() {
      return new MttActivityConfig(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static long IdDefaultValue = 0L;

    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 2;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 2) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 3;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 4) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "super_leagueid" field.</summary>
    public const int SuperLeagueidFieldNumber = 4;
    private readonly static int SuperLeagueidDefaultValue = 0;

    private int superLeagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueid {
      get { if ((_hasBits0 & 8) != 0) { return superLeagueid_; } else { return SuperLeagueidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        superLeagueid_ = value;
      }
    }
    /// <summary>Gets whether the "super_leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "super_leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueid() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "creator_uid" field.</summary>
    public const int CreatorUidFieldNumber = 5;
    private readonly static long CreatorUidDefaultValue = 0L;

    private long creatorUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CreatorUid {
      get { if ((_hasBits0 & 16) != 0) { return creatorUid_; } else { return CreatorUidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        creatorUid_ = value;
      }
    }
    /// <summary>Gets whether the "creator_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCreatorUid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "creator_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCreatorUid() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 6;
    private readonly static long StartTimeDefaultValue = 0L;

    private long startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartTime {
      get { if ((_hasBits0 & 32) != 0) { return startTime_; } else { return StartTimeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        startTime_ = value;
      }
    }
    /// <summary>Gets whether the "start_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartTime {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "start_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartTime() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 7;
    private readonly static long EndTimeDefaultValue = 0L;

    private long endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndTime {
      get { if ((_hasBits0 & 64) != 0) { return endTime_; } else { return EndTimeDefaultValue; } }
      set {
        _hasBits0 |= 64;
        endTime_ = value;
      }
    }
    /// <summary>Gets whether the "end_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndTime {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "end_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndTime() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "reward_chips" field.</summary>
    public const int RewardChipsFieldNumber = 8;
    private static readonly pb::FieldCodec<long> _repeated_rewardChips_codec
        = pb::FieldCodec.ForInt64(66);
    private readonly pbc::RepeatedField<long> rewardChips_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// [舊版]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> RewardChips {
      get { return rewardChips_; }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 9;
    private readonly static int StatusDefaultValue = 0;

    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Status {
      get { if ((_hasBits0 & 128) != 0) { return status_; } else { return StatusDefaultValue; } }
      set {
        _hasBits0 |= 128;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatus {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatus() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "reward_users" field.</summary>
    public const int RewardUsersFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ActivityUserReward> _repeated_rewardUsers_codec
        = pb::FieldCodec.ForMessage(82, global::Texas.Protocol.ActivityUserReward.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ActivityUserReward> rewardUsers_ = new pbc::RepeatedField<global::Texas.Protocol.ActivityUserReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ActivityUserReward> RewardUsers {
      get { return rewardUsers_; }
    }

    /// <summary>Field number for the "rewarded_chips" field.</summary>
    public const int RewardedChipsFieldNumber = 11;
    private readonly static long RewardedChipsDefaultValue = 0L;

    private long rewardedChips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RewardedChips {
      get { if ((_hasBits0 & 256) != 0) { return rewardedChips_; } else { return RewardedChipsDefaultValue; } }
      set {
        _hasBits0 |= 256;
        rewardedChips_ = value;
      }
    }
    /// <summary>Gets whether the "rewarded_chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRewardedChips {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "rewarded_chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRewardedChips() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "moduleid" field.</summary>
    public const int ModuleidFieldNumber = 12;
    private readonly static long ModuleidDefaultValue = 0L;

    private long moduleid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Moduleid {
      get { if ((_hasBits0 & 512) != 0) { return moduleid_; } else { return ModuleidDefaultValue; } }
      set {
        _hasBits0 |= 512;
        moduleid_ = value;
      }
    }
    /// <summary>Gets whether the "moduleid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModuleid {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "moduleid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModuleid() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "bulletin_board" field.</summary>
    public const int BulletinBoardFieldNumber = 13;
    private readonly static string BulletinBoardDefaultValue = "";

    private string bulletinBoard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BulletinBoard {
      get { return bulletinBoard_ ?? BulletinBoardDefaultValue; }
      set {
        bulletinBoard_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bulletin_board" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBulletinBoard {
      get { return bulletinBoard_ != null; }
    }
    /// <summary>Clears the value of the "bulletin_board" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBulletinBoard() {
      bulletinBoard_ = null;
    }

    /// <summary>Field number for the "rewards" field.</summary>
    public const int RewardsFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ActivityReward> _repeated_rewards_codec
        = pb::FieldCodec.ForMessage(114, global::Texas.Protocol.ActivityReward.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ActivityReward> rewards_ = new pbc::RepeatedField<global::Texas.Protocol.ActivityReward>();
    /// <summary>
    /// 排行榜優化
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ActivityReward> Rewards {
      get { return rewards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttActivityConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttActivityConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (SuperLeagueid != other.SuperLeagueid) return false;
      if (CreatorUid != other.CreatorUid) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if(!rewardChips_.Equals(other.rewardChips_)) return false;
      if (Status != other.Status) return false;
      if(!rewardUsers_.Equals(other.rewardUsers_)) return false;
      if (RewardedChips != other.RewardedChips) return false;
      if (Moduleid != other.Moduleid) return false;
      if (BulletinBoard != other.BulletinBoard) return false;
      if(!rewards_.Equals(other.rewards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasSuperLeagueid) hash ^= SuperLeagueid.GetHashCode();
      if (HasCreatorUid) hash ^= CreatorUid.GetHashCode();
      if (HasStartTime) hash ^= StartTime.GetHashCode();
      if (HasEndTime) hash ^= EndTime.GetHashCode();
      hash ^= rewardChips_.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      hash ^= rewardUsers_.GetHashCode();
      if (HasRewardedChips) hash ^= RewardedChips.GetHashCode();
      if (HasModuleid) hash ^= Moduleid.GetHashCode();
      if (HasBulletinBoard) hash ^= BulletinBoard.GetHashCode();
      hash ^= rewards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (HasClubid) {
        output.WriteRawTag(16);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(24);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(32);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasCreatorUid) {
        output.WriteRawTag(40);
        output.WriteInt64(CreatorUid);
      }
      if (HasStartTime) {
        output.WriteRawTag(48);
        output.WriteInt64(StartTime);
      }
      if (HasEndTime) {
        output.WriteRawTag(56);
        output.WriteInt64(EndTime);
      }
      rewardChips_.WriteTo(output, _repeated_rewardChips_codec);
      if (HasStatus) {
        output.WriteRawTag(72);
        output.WriteInt32(Status);
      }
      rewardUsers_.WriteTo(output, _repeated_rewardUsers_codec);
      if (HasRewardedChips) {
        output.WriteRawTag(88);
        output.WriteInt64(RewardedChips);
      }
      if (HasModuleid) {
        output.WriteRawTag(96);
        output.WriteInt64(Moduleid);
      }
      if (HasBulletinBoard) {
        output.WriteRawTag(106);
        output.WriteString(BulletinBoard);
      }
      rewards_.WriteTo(output, _repeated_rewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (HasClubid) {
        output.WriteRawTag(16);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(24);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(32);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasCreatorUid) {
        output.WriteRawTag(40);
        output.WriteInt64(CreatorUid);
      }
      if (HasStartTime) {
        output.WriteRawTag(48);
        output.WriteInt64(StartTime);
      }
      if (HasEndTime) {
        output.WriteRawTag(56);
        output.WriteInt64(EndTime);
      }
      rewardChips_.WriteTo(ref output, _repeated_rewardChips_codec);
      if (HasStatus) {
        output.WriteRawTag(72);
        output.WriteInt32(Status);
      }
      rewardUsers_.WriteTo(ref output, _repeated_rewardUsers_codec);
      if (HasRewardedChips) {
        output.WriteRawTag(88);
        output.WriteInt64(RewardedChips);
      }
      if (HasModuleid) {
        output.WriteRawTag(96);
        output.WriteInt64(Moduleid);
      }
      if (HasBulletinBoard) {
        output.WriteRawTag(106);
        output.WriteString(BulletinBoard);
      }
      rewards_.WriteTo(ref output, _repeated_rewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasSuperLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueid);
      }
      if (HasCreatorUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreatorUid);
      }
      if (HasStartTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTime);
      }
      if (HasEndTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime);
      }
      size += rewardChips_.CalculateSize(_repeated_rewardChips_codec);
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      size += rewardUsers_.CalculateSize(_repeated_rewardUsers_codec);
      if (HasRewardedChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RewardedChips);
      }
      if (HasModuleid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Moduleid);
      }
      if (HasBulletinBoard) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BulletinBoard);
      }
      size += rewards_.CalculateSize(_repeated_rewards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttActivityConfig other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasSuperLeagueid) {
        SuperLeagueid = other.SuperLeagueid;
      }
      if (other.HasCreatorUid) {
        CreatorUid = other.CreatorUid;
      }
      if (other.HasStartTime) {
        StartTime = other.StartTime;
      }
      if (other.HasEndTime) {
        EndTime = other.EndTime;
      }
      rewardChips_.Add(other.rewardChips_);
      if (other.HasStatus) {
        Status = other.Status;
      }
      rewardUsers_.Add(other.rewardUsers_);
      if (other.HasRewardedChips) {
        RewardedChips = other.RewardedChips;
      }
      if (other.HasModuleid) {
        Moduleid = other.Moduleid;
      }
      if (other.HasBulletinBoard) {
        BulletinBoard = other.BulletinBoard;
      }
      rewards_.Add(other.rewards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            Clubid = input.ReadInt32();
            break;
          }
          case 24: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 32: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 40: {
            CreatorUid = input.ReadInt64();
            break;
          }
          case 48: {
            StartTime = input.ReadInt64();
            break;
          }
          case 56: {
            EndTime = input.ReadInt64();
            break;
          }
          case 66:
          case 64: {
            rewardChips_.AddEntriesFrom(input, _repeated_rewardChips_codec);
            break;
          }
          case 72: {
            Status = input.ReadInt32();
            break;
          }
          case 82: {
            rewardUsers_.AddEntriesFrom(input, _repeated_rewardUsers_codec);
            break;
          }
          case 88: {
            RewardedChips = input.ReadInt64();
            break;
          }
          case 96: {
            Moduleid = input.ReadInt64();
            break;
          }
          case 106: {
            BulletinBoard = input.ReadString();
            break;
          }
          case 114: {
            rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            Clubid = input.ReadInt32();
            break;
          }
          case 24: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 32: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 40: {
            CreatorUid = input.ReadInt64();
            break;
          }
          case 48: {
            StartTime = input.ReadInt64();
            break;
          }
          case 56: {
            EndTime = input.ReadInt64();
            break;
          }
          case 66:
          case 64: {
            rewardChips_.AddEntriesFrom(ref input, _repeated_rewardChips_codec);
            break;
          }
          case 72: {
            Status = input.ReadInt32();
            break;
          }
          case 82: {
            rewardUsers_.AddEntriesFrom(ref input, _repeated_rewardUsers_codec);
            break;
          }
          case 88: {
            RewardedChips = input.ReadInt64();
            break;
          }
          case 96: {
            Moduleid = input.ReadInt64();
            break;
          }
          case 106: {
            BulletinBoard = input.ReadString();
            break;
          }
          case 114: {
            rewards_.AddEntriesFrom(ref input, _repeated_rewards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///mtt 
  /// </summary>
  public sealed partial class MttActivityOpREQ : pb::IMessage<MttActivityOpREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttActivityOpREQ> _parser = new pb::MessageParser<MttActivityOpREQ>(() => new MttActivityOpREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttActivityOpREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttActivityOpREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttActivityOpREQ(MttActivityOpREQ other) : this() {
      _hasBits0 = other._hasBits0;
      action_ = other.action_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttActivityOpREQ Clone() {
      return new MttActivityOpREQ(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private readonly static int ActionDefaultValue = 0;

    private int action_;
    /// <summary>
    /// 1 create 2 modify 3 cancel
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Action {
      get { if ((_hasBits0 & 1) != 0) { return action_; } else { return ActionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        action_ = value;
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAction {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Texas.Protocol.MttActivityConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.MttActivityConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttActivityOpREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttActivityOpREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (!object.Equals(Config, other.Config)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAction) hash ^= Action.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAction) {
        output.WriteRawTag(8);
        output.WriteInt32(Action);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAction) {
        output.WriteRawTag(8);
        output.WriteInt32(Action);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Action);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttActivityOpREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Texas.Protocol.MttActivityConfig();
        }
        Config.MergeFrom(other.Config);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Action = input.ReadInt32();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Texas.Protocol.MttActivityConfig();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Action = input.ReadInt32();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Texas.Protocol.MttActivityConfig();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttActivityOpRSP : pb::IMessage<MttActivityOpRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttActivityOpRSP> _parser = new pb::MessageParser<MttActivityOpRSP>(() => new MttActivityOpRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttActivityOpRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttActivityOpRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttActivityOpRSP(MttActivityOpRSP other) : this() {
      _hasBits0 = other._hasBits0;
      action_ = other.action_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      code_ = other.code_;
      ppRemained_ = other.ppRemained_;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      superLeagueid_ = other.superLeagueid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttActivityOpRSP Clone() {
      return new MttActivityOpRSP(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private readonly static int ActionDefaultValue = 0;

    private int action_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Action {
      get { if ((_hasBits0 & 1) != 0) { return action_; } else { return ActionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        action_ = value;
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAction {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Texas.Protocol.MttActivityConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.MttActivityConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 3;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0 success //other faild
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 2) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "pp_remained" field.</summary>
    public const int PpRemainedFieldNumber = 4;
    private readonly static long PpRemainedDefaultValue = 0L;

    private long ppRemained_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PpRemained {
      get { if ((_hasBits0 & 4) != 0) { return ppRemained_; } else { return PpRemainedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        ppRemained_ = value;
      }
    }
    /// <summary>Gets whether the "pp_remained" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpRemained {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "pp_remained" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpRemained() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 5;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 8) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 6;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 16) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "super_leagueid" field.</summary>
    public const int SuperLeagueidFieldNumber = 7;
    private readonly static int SuperLeagueidDefaultValue = 0;

    private int superLeagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueid {
      get { if ((_hasBits0 & 32) != 0) { return superLeagueid_; } else { return SuperLeagueidDefaultValue; } }
      set {
        _hasBits0 |= 32;
        superLeagueid_ = value;
      }
    }
    /// <summary>Gets whether the "super_leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueid {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "super_leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueid() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttActivityOpRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttActivityOpRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (Code != other.Code) return false;
      if (PpRemained != other.PpRemained) return false;
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (SuperLeagueid != other.SuperLeagueid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAction) hash ^= Action.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasPpRemained) hash ^= PpRemained.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasSuperLeagueid) hash ^= SuperLeagueid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAction) {
        output.WriteRawTag(8);
        output.WriteInt32(Action);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (HasCode) {
        output.WriteRawTag(24);
        output.WriteInt32(Code);
      }
      if (HasPpRemained) {
        output.WriteRawTag(32);
        output.WriteInt64(PpRemained);
      }
      if (HasClubid) {
        output.WriteRawTag(40);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(48);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(56);
        output.WriteInt32(SuperLeagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAction) {
        output.WriteRawTag(8);
        output.WriteInt32(Action);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (HasCode) {
        output.WriteRawTag(24);
        output.WriteInt32(Code);
      }
      if (HasPpRemained) {
        output.WriteRawTag(32);
        output.WriteInt64(PpRemained);
      }
      if (HasClubid) {
        output.WriteRawTag(40);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(48);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(56);
        output.WriteInt32(SuperLeagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Action);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasPpRemained) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PpRemained);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasSuperLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttActivityOpRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Texas.Protocol.MttActivityConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasPpRemained) {
        PpRemained = other.PpRemained;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasSuperLeagueid) {
        SuperLeagueid = other.SuperLeagueid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Action = input.ReadInt32();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Texas.Protocol.MttActivityConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 24: {
            Code = input.ReadInt32();
            break;
          }
          case 32: {
            PpRemained = input.ReadInt64();
            break;
          }
          case 40: {
            Clubid = input.ReadInt32();
            break;
          }
          case 48: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 56: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Action = input.ReadInt32();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Texas.Protocol.MttActivityConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 24: {
            Code = input.ReadInt32();
            break;
          }
          case 32: {
            PpRemained = input.ReadInt64();
            break;
          }
          case 40: {
            Clubid = input.ReadInt32();
            break;
          }
          case 48: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 56: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SpecifiedRGActivityGameMode : pb::IMessage<SpecifiedRGActivityGameMode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpecifiedRGActivityGameMode> _parser = new pb::MessageParser<SpecifiedRGActivityGameMode>(() => new SpecifiedRGActivityGameMode());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpecifiedRGActivityGameMode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpecifiedRGActivityGameMode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpecifiedRGActivityGameMode(SpecifiedRGActivityGameMode other) : this() {
      _hasBits0 = other._hasBits0;
      gAMEMODENLHNLH_ = other.gAMEMODENLHNLH_;
      gAMEMODENLHAOF_ = other.gAMEMODENLHAOF_;
      gAMEMODENLHSIXPLUS_ = other.gAMEMODENLHSIXPLUS_;
      gAMEMODENLHNLH31_ = other.gAMEMODENLHNLH31_;
      gAMEMODENLHNLH31F_ = other.gAMEMODENLHNLH31F_;
      gAMEMODEPLOPLO4_ = other.gAMEMODEPLOPLO4_;
      gAMEMODEPLOPLO5_ = other.gAMEMODEPLOPLO5_;
      gAMEMODEPLOPLO6_ = other.gAMEMODEPLOPLO6_;
      gAMEMODEPLOPLO4HL_ = other.gAMEMODEPLOPLO4HL_;
      gAMEMODEPLOPLO5HL_ = other.gAMEMODEPLOPLO5HL_;
      gAMEMODEPLOPLO6HL_ = other.gAMEMODEPLOPLO6HL_;
      gAMEMODEFLASHNLH_ = other.gAMEMODEFLASHNLH_;
      gAMEMODEFLASHPLO4_ = other.gAMEMODEFLASHPLO4_;
      gAMEMODEMIXEDNLHPLO4_ = other.gAMEMODEMIXEDNLHPLO4_;
      gAMEMODEMIXEDNLHPLO5_ = other.gAMEMODEMIXEDNLHPLO5_;
      gAMEMODEOTHERPUSOY_ = other.gAMEMODEOTHERPUSOY_;
      gAMEMODEOTHEROFC_ = other.gAMEMODEOTHEROFC_;
      gAMEMODEFLASHPLO5_ = other.gAMEMODEFLASHPLO5_;
      gAMEMODEOTHERTEENPATTI_ = other.gAMEMODEOTHERTEENPATTI_;
      gAMEMODEOTHERTONGITS_ = other.gAMEMODEOTHERTONGITS_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpecifiedRGActivityGameMode Clone() {
      return new SpecifiedRGActivityGameMode(this);
    }

    /// <summary>Field number for the "GAME_MODE_NLH_NLH" field.</summary>
    public const int GAMEMODENLHNLHFieldNumber = 1;
    private readonly static bool GAMEMODENLHNLHDefaultValue = false;

    private bool gAMEMODENLHNLH_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GAMEMODENLHNLH {
      get { if ((_hasBits0 & 1) != 0) { return gAMEMODENLHNLH_; } else { return GAMEMODENLHNLHDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gAMEMODENLHNLH_ = value;
      }
    }
    /// <summary>Gets whether the "GAME_MODE_NLH_NLH" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGAMEMODENLHNLH {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "GAME_MODE_NLH_NLH" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGAMEMODENLHNLH() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "GAME_MODE_NLH_AOF" field.</summary>
    public const int GAMEMODENLHAOFFieldNumber = 2;
    private readonly static bool GAMEMODENLHAOFDefaultValue = false;

    private bool gAMEMODENLHAOF_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GAMEMODENLHAOF {
      get { if ((_hasBits0 & 2) != 0) { return gAMEMODENLHAOF_; } else { return GAMEMODENLHAOFDefaultValue; } }
      set {
        _hasBits0 |= 2;
        gAMEMODENLHAOF_ = value;
      }
    }
    /// <summary>Gets whether the "GAME_MODE_NLH_AOF" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGAMEMODENLHAOF {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "GAME_MODE_NLH_AOF" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGAMEMODENLHAOF() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "GAME_MODE_NLH_SIX_PLUS" field.</summary>
    public const int GAMEMODENLHSIXPLUSFieldNumber = 3;
    private readonly static bool GAMEMODENLHSIXPLUSDefaultValue = false;

    private bool gAMEMODENLHSIXPLUS_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GAMEMODENLHSIXPLUS {
      get { if ((_hasBits0 & 4) != 0) { return gAMEMODENLHSIXPLUS_; } else { return GAMEMODENLHSIXPLUSDefaultValue; } }
      set {
        _hasBits0 |= 4;
        gAMEMODENLHSIXPLUS_ = value;
      }
    }
    /// <summary>Gets whether the "GAME_MODE_NLH_SIX_PLUS" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGAMEMODENLHSIXPLUS {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "GAME_MODE_NLH_SIX_PLUS" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGAMEMODENLHSIXPLUS() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "GAME_MODE_NLH_NLH_31" field.</summary>
    public const int GAMEMODENLHNLH31FieldNumber = 4;
    private readonly static bool GAMEMODENLHNLH31DefaultValue = false;

    private bool gAMEMODENLHNLH31_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GAMEMODENLHNLH31 {
      get { if ((_hasBits0 & 8) != 0) { return gAMEMODENLHNLH31_; } else { return GAMEMODENLHNLH31DefaultValue; } }
      set {
        _hasBits0 |= 8;
        gAMEMODENLHNLH31_ = value;
      }
    }
    /// <summary>Gets whether the "GAME_MODE_NLH_NLH_31" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGAMEMODENLHNLH31 {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "GAME_MODE_NLH_NLH_31" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGAMEMODENLHNLH31() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "GAME_MODE_NLH_NLH_31F" field.</summary>
    public const int GAMEMODENLHNLH31FFieldNumber = 5;
    private readonly static bool GAMEMODENLHNLH31FDefaultValue = false;

    private bool gAMEMODENLHNLH31F_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GAMEMODENLHNLH31F {
      get { if ((_hasBits0 & 16) != 0) { return gAMEMODENLHNLH31F_; } else { return GAMEMODENLHNLH31FDefaultValue; } }
      set {
        _hasBits0 |= 16;
        gAMEMODENLHNLH31F_ = value;
      }
    }
    /// <summary>Gets whether the "GAME_MODE_NLH_NLH_31F" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGAMEMODENLHNLH31F {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "GAME_MODE_NLH_NLH_31F" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGAMEMODENLHNLH31F() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "GAME_MODE_PLO_PLO4" field.</summary>
    public const int GAMEMODEPLOPLO4FieldNumber = 6;
    private readonly static bool GAMEMODEPLOPLO4DefaultValue = false;

    private bool gAMEMODEPLOPLO4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GAMEMODEPLOPLO4 {
      get { if ((_hasBits0 & 32) != 0) { return gAMEMODEPLOPLO4_; } else { return GAMEMODEPLOPLO4DefaultValue; } }
      set {
        _hasBits0 |= 32;
        gAMEMODEPLOPLO4_ = value;
      }
    }
    /// <summary>Gets whether the "GAME_MODE_PLO_PLO4" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGAMEMODEPLOPLO4 {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "GAME_MODE_PLO_PLO4" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGAMEMODEPLOPLO4() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "GAME_MODE_PLO_PLO5" field.</summary>
    public const int GAMEMODEPLOPLO5FieldNumber = 7;
    private readonly static bool GAMEMODEPLOPLO5DefaultValue = false;

    private bool gAMEMODEPLOPLO5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GAMEMODEPLOPLO5 {
      get { if ((_hasBits0 & 64) != 0) { return gAMEMODEPLOPLO5_; } else { return GAMEMODEPLOPLO5DefaultValue; } }
      set {
        _hasBits0 |= 64;
        gAMEMODEPLOPLO5_ = value;
      }
    }
    /// <summary>Gets whether the "GAME_MODE_PLO_PLO5" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGAMEMODEPLOPLO5 {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "GAME_MODE_PLO_PLO5" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGAMEMODEPLOPLO5() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "GAME_MODE_PLO_PLO6" field.</summary>
    public const int GAMEMODEPLOPLO6FieldNumber = 8;
    private readonly static bool GAMEMODEPLOPLO6DefaultValue = false;

    private bool gAMEMODEPLOPLO6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GAMEMODEPLOPLO6 {
      get { if ((_hasBits0 & 128) != 0) { return gAMEMODEPLOPLO6_; } else { return GAMEMODEPLOPLO6DefaultValue; } }
      set {
        _hasBits0 |= 128;
        gAMEMODEPLOPLO6_ = value;
      }
    }
    /// <summary>Gets whether the "GAME_MODE_PLO_PLO6" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGAMEMODEPLOPLO6 {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "GAME_MODE_PLO_PLO6" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGAMEMODEPLOPLO6() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "GAME_MODE_PLO_PLO4HL" field.</summary>
    public const int GAMEMODEPLOPLO4HLFieldNumber = 9;
    private readonly static bool GAMEMODEPLOPLO4HLDefaultValue = false;

    private bool gAMEMODEPLOPLO4HL_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GAMEMODEPLOPLO4HL {
      get { if ((_hasBits0 & 256) != 0) { return gAMEMODEPLOPLO4HL_; } else { return GAMEMODEPLOPLO4HLDefaultValue; } }
      set {
        _hasBits0 |= 256;
        gAMEMODEPLOPLO4HL_ = value;
      }
    }
    /// <summary>Gets whether the "GAME_MODE_PLO_PLO4HL" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGAMEMODEPLOPLO4HL {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "GAME_MODE_PLO_PLO4HL" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGAMEMODEPLOPLO4HL() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "GAME_MODE_PLO_PLO5HL" field.</summary>
    public const int GAMEMODEPLOPLO5HLFieldNumber = 10;
    private readonly static bool GAMEMODEPLOPLO5HLDefaultValue = false;

    private bool gAMEMODEPLOPLO5HL_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GAMEMODEPLOPLO5HL {
      get { if ((_hasBits0 & 512) != 0) { return gAMEMODEPLOPLO5HL_; } else { return GAMEMODEPLOPLO5HLDefaultValue; } }
      set {
        _hasBits0 |= 512;
        gAMEMODEPLOPLO5HL_ = value;
      }
    }
    /// <summary>Gets whether the "GAME_MODE_PLO_PLO5HL" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGAMEMODEPLOPLO5HL {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "GAME_MODE_PLO_PLO5HL" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGAMEMODEPLOPLO5HL() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "GAME_MODE_PLO_PLO6HL" field.</summary>
    public const int GAMEMODEPLOPLO6HLFieldNumber = 11;
    private readonly static bool GAMEMODEPLOPLO6HLDefaultValue = false;

    private bool gAMEMODEPLOPLO6HL_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GAMEMODEPLOPLO6HL {
      get { if ((_hasBits0 & 1024) != 0) { return gAMEMODEPLOPLO6HL_; } else { return GAMEMODEPLOPLO6HLDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        gAMEMODEPLOPLO6HL_ = value;
      }
    }
    /// <summary>Gets whether the "GAME_MODE_PLO_PLO6HL" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGAMEMODEPLOPLO6HL {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "GAME_MODE_PLO_PLO6HL" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGAMEMODEPLOPLO6HL() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "GAME_MODE_FLASH_NLH" field.</summary>
    public const int GAMEMODEFLASHNLHFieldNumber = 12;
    private readonly static bool GAMEMODEFLASHNLHDefaultValue = false;

    private bool gAMEMODEFLASHNLH_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GAMEMODEFLASHNLH {
      get { if ((_hasBits0 & 2048) != 0) { return gAMEMODEFLASHNLH_; } else { return GAMEMODEFLASHNLHDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        gAMEMODEFLASHNLH_ = value;
      }
    }
    /// <summary>Gets whether the "GAME_MODE_FLASH_NLH" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGAMEMODEFLASHNLH {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "GAME_MODE_FLASH_NLH" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGAMEMODEFLASHNLH() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "GAME_MODE_FLASH_PLO4" field.</summary>
    public const int GAMEMODEFLASHPLO4FieldNumber = 13;
    private readonly static bool GAMEMODEFLASHPLO4DefaultValue = false;

    private bool gAMEMODEFLASHPLO4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GAMEMODEFLASHPLO4 {
      get { if ((_hasBits0 & 4096) != 0) { return gAMEMODEFLASHPLO4_; } else { return GAMEMODEFLASHPLO4DefaultValue; } }
      set {
        _hasBits0 |= 4096;
        gAMEMODEFLASHPLO4_ = value;
      }
    }
    /// <summary>Gets whether the "GAME_MODE_FLASH_PLO4" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGAMEMODEFLASHPLO4 {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "GAME_MODE_FLASH_PLO4" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGAMEMODEFLASHPLO4() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "GAME_MODE_MIXED_NLH_PLO4" field.</summary>
    public const int GAMEMODEMIXEDNLHPLO4FieldNumber = 14;
    private readonly static bool GAMEMODEMIXEDNLHPLO4DefaultValue = false;

    private bool gAMEMODEMIXEDNLHPLO4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GAMEMODEMIXEDNLHPLO4 {
      get { if ((_hasBits0 & 8192) != 0) { return gAMEMODEMIXEDNLHPLO4_; } else { return GAMEMODEMIXEDNLHPLO4DefaultValue; } }
      set {
        _hasBits0 |= 8192;
        gAMEMODEMIXEDNLHPLO4_ = value;
      }
    }
    /// <summary>Gets whether the "GAME_MODE_MIXED_NLH_PLO4" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGAMEMODEMIXEDNLHPLO4 {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "GAME_MODE_MIXED_NLH_PLO4" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGAMEMODEMIXEDNLHPLO4() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "GAME_MODE_MIXED_NLH_PLO5" field.</summary>
    public const int GAMEMODEMIXEDNLHPLO5FieldNumber = 15;
    private readonly static bool GAMEMODEMIXEDNLHPLO5DefaultValue = false;

    private bool gAMEMODEMIXEDNLHPLO5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GAMEMODEMIXEDNLHPLO5 {
      get { if ((_hasBits0 & 16384) != 0) { return gAMEMODEMIXEDNLHPLO5_; } else { return GAMEMODEMIXEDNLHPLO5DefaultValue; } }
      set {
        _hasBits0 |= 16384;
        gAMEMODEMIXEDNLHPLO5_ = value;
      }
    }
    /// <summary>Gets whether the "GAME_MODE_MIXED_NLH_PLO5" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGAMEMODEMIXEDNLHPLO5 {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "GAME_MODE_MIXED_NLH_PLO5" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGAMEMODEMIXEDNLHPLO5() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "GAME_MODE_OTHER_PUSOY" field.</summary>
    public const int GAMEMODEOTHERPUSOYFieldNumber = 16;
    private readonly static bool GAMEMODEOTHERPUSOYDefaultValue = false;

    private bool gAMEMODEOTHERPUSOY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GAMEMODEOTHERPUSOY {
      get { if ((_hasBits0 & 32768) != 0) { return gAMEMODEOTHERPUSOY_; } else { return GAMEMODEOTHERPUSOYDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        gAMEMODEOTHERPUSOY_ = value;
      }
    }
    /// <summary>Gets whether the "GAME_MODE_OTHER_PUSOY" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGAMEMODEOTHERPUSOY {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "GAME_MODE_OTHER_PUSOY" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGAMEMODEOTHERPUSOY() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "GAME_MODE_OTHER_OFC" field.</summary>
    public const int GAMEMODEOTHEROFCFieldNumber = 17;
    private readonly static bool GAMEMODEOTHEROFCDefaultValue = false;

    private bool gAMEMODEOTHEROFC_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GAMEMODEOTHEROFC {
      get { if ((_hasBits0 & 65536) != 0) { return gAMEMODEOTHEROFC_; } else { return GAMEMODEOTHEROFCDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        gAMEMODEOTHEROFC_ = value;
      }
    }
    /// <summary>Gets whether the "GAME_MODE_OTHER_OFC" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGAMEMODEOTHEROFC {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "GAME_MODE_OTHER_OFC" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGAMEMODEOTHEROFC() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "GAME_MODE_FLASH_PLO5" field.</summary>
    public const int GAMEMODEFLASHPLO5FieldNumber = 18;
    private readonly static bool GAMEMODEFLASHPLO5DefaultValue = false;

    private bool gAMEMODEFLASHPLO5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GAMEMODEFLASHPLO5 {
      get { if ((_hasBits0 & 131072) != 0) { return gAMEMODEFLASHPLO5_; } else { return GAMEMODEFLASHPLO5DefaultValue; } }
      set {
        _hasBits0 |= 131072;
        gAMEMODEFLASHPLO5_ = value;
      }
    }
    /// <summary>Gets whether the "GAME_MODE_FLASH_PLO5" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGAMEMODEFLASHPLO5 {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "GAME_MODE_FLASH_PLO5" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGAMEMODEFLASHPLO5() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "GAME_MODE_OTHER_TEENPATTI" field.</summary>
    public const int GAMEMODEOTHERTEENPATTIFieldNumber = 19;
    private readonly static bool GAMEMODEOTHERTEENPATTIDefaultValue = false;

    private bool gAMEMODEOTHERTEENPATTI_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GAMEMODEOTHERTEENPATTI {
      get { if ((_hasBits0 & 262144) != 0) { return gAMEMODEOTHERTEENPATTI_; } else { return GAMEMODEOTHERTEENPATTIDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        gAMEMODEOTHERTEENPATTI_ = value;
      }
    }
    /// <summary>Gets whether the "GAME_MODE_OTHER_TEENPATTI" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGAMEMODEOTHERTEENPATTI {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "GAME_MODE_OTHER_TEENPATTI" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGAMEMODEOTHERTEENPATTI() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "GAME_MODE_OTHER_TONGITS" field.</summary>
    public const int GAMEMODEOTHERTONGITSFieldNumber = 20;
    private readonly static bool GAMEMODEOTHERTONGITSDefaultValue = false;

    private bool gAMEMODEOTHERTONGITS_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GAMEMODEOTHERTONGITS {
      get { if ((_hasBits0 & 524288) != 0) { return gAMEMODEOTHERTONGITS_; } else { return GAMEMODEOTHERTONGITSDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        gAMEMODEOTHERTONGITS_ = value;
      }
    }
    /// <summary>Gets whether the "GAME_MODE_OTHER_TONGITS" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGAMEMODEOTHERTONGITS {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "GAME_MODE_OTHER_TONGITS" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGAMEMODEOTHERTONGITS() {
      _hasBits0 &= ~524288;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpecifiedRGActivityGameMode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpecifiedRGActivityGameMode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GAMEMODENLHNLH != other.GAMEMODENLHNLH) return false;
      if (GAMEMODENLHAOF != other.GAMEMODENLHAOF) return false;
      if (GAMEMODENLHSIXPLUS != other.GAMEMODENLHSIXPLUS) return false;
      if (GAMEMODENLHNLH31 != other.GAMEMODENLHNLH31) return false;
      if (GAMEMODENLHNLH31F != other.GAMEMODENLHNLH31F) return false;
      if (GAMEMODEPLOPLO4 != other.GAMEMODEPLOPLO4) return false;
      if (GAMEMODEPLOPLO5 != other.GAMEMODEPLOPLO5) return false;
      if (GAMEMODEPLOPLO6 != other.GAMEMODEPLOPLO6) return false;
      if (GAMEMODEPLOPLO4HL != other.GAMEMODEPLOPLO4HL) return false;
      if (GAMEMODEPLOPLO5HL != other.GAMEMODEPLOPLO5HL) return false;
      if (GAMEMODEPLOPLO6HL != other.GAMEMODEPLOPLO6HL) return false;
      if (GAMEMODEFLASHNLH != other.GAMEMODEFLASHNLH) return false;
      if (GAMEMODEFLASHPLO4 != other.GAMEMODEFLASHPLO4) return false;
      if (GAMEMODEMIXEDNLHPLO4 != other.GAMEMODEMIXEDNLHPLO4) return false;
      if (GAMEMODEMIXEDNLHPLO5 != other.GAMEMODEMIXEDNLHPLO5) return false;
      if (GAMEMODEOTHERPUSOY != other.GAMEMODEOTHERPUSOY) return false;
      if (GAMEMODEOTHEROFC != other.GAMEMODEOTHEROFC) return false;
      if (GAMEMODEFLASHPLO5 != other.GAMEMODEFLASHPLO5) return false;
      if (GAMEMODEOTHERTEENPATTI != other.GAMEMODEOTHERTEENPATTI) return false;
      if (GAMEMODEOTHERTONGITS != other.GAMEMODEOTHERTONGITS) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGAMEMODENLHNLH) hash ^= GAMEMODENLHNLH.GetHashCode();
      if (HasGAMEMODENLHAOF) hash ^= GAMEMODENLHAOF.GetHashCode();
      if (HasGAMEMODENLHSIXPLUS) hash ^= GAMEMODENLHSIXPLUS.GetHashCode();
      if (HasGAMEMODENLHNLH31) hash ^= GAMEMODENLHNLH31.GetHashCode();
      if (HasGAMEMODENLHNLH31F) hash ^= GAMEMODENLHNLH31F.GetHashCode();
      if (HasGAMEMODEPLOPLO4) hash ^= GAMEMODEPLOPLO4.GetHashCode();
      if (HasGAMEMODEPLOPLO5) hash ^= GAMEMODEPLOPLO5.GetHashCode();
      if (HasGAMEMODEPLOPLO6) hash ^= GAMEMODEPLOPLO6.GetHashCode();
      if (HasGAMEMODEPLOPLO4HL) hash ^= GAMEMODEPLOPLO4HL.GetHashCode();
      if (HasGAMEMODEPLOPLO5HL) hash ^= GAMEMODEPLOPLO5HL.GetHashCode();
      if (HasGAMEMODEPLOPLO6HL) hash ^= GAMEMODEPLOPLO6HL.GetHashCode();
      if (HasGAMEMODEFLASHNLH) hash ^= GAMEMODEFLASHNLH.GetHashCode();
      if (HasGAMEMODEFLASHPLO4) hash ^= GAMEMODEFLASHPLO4.GetHashCode();
      if (HasGAMEMODEMIXEDNLHPLO4) hash ^= GAMEMODEMIXEDNLHPLO4.GetHashCode();
      if (HasGAMEMODEMIXEDNLHPLO5) hash ^= GAMEMODEMIXEDNLHPLO5.GetHashCode();
      if (HasGAMEMODEOTHERPUSOY) hash ^= GAMEMODEOTHERPUSOY.GetHashCode();
      if (HasGAMEMODEOTHEROFC) hash ^= GAMEMODEOTHEROFC.GetHashCode();
      if (HasGAMEMODEFLASHPLO5) hash ^= GAMEMODEFLASHPLO5.GetHashCode();
      if (HasGAMEMODEOTHERTEENPATTI) hash ^= GAMEMODEOTHERTEENPATTI.GetHashCode();
      if (HasGAMEMODEOTHERTONGITS) hash ^= GAMEMODEOTHERTONGITS.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGAMEMODENLHNLH) {
        output.WriteRawTag(8);
        output.WriteBool(GAMEMODENLHNLH);
      }
      if (HasGAMEMODENLHAOF) {
        output.WriteRawTag(16);
        output.WriteBool(GAMEMODENLHAOF);
      }
      if (HasGAMEMODENLHSIXPLUS) {
        output.WriteRawTag(24);
        output.WriteBool(GAMEMODENLHSIXPLUS);
      }
      if (HasGAMEMODENLHNLH31) {
        output.WriteRawTag(32);
        output.WriteBool(GAMEMODENLHNLH31);
      }
      if (HasGAMEMODENLHNLH31F) {
        output.WriteRawTag(40);
        output.WriteBool(GAMEMODENLHNLH31F);
      }
      if (HasGAMEMODEPLOPLO4) {
        output.WriteRawTag(48);
        output.WriteBool(GAMEMODEPLOPLO4);
      }
      if (HasGAMEMODEPLOPLO5) {
        output.WriteRawTag(56);
        output.WriteBool(GAMEMODEPLOPLO5);
      }
      if (HasGAMEMODEPLOPLO6) {
        output.WriteRawTag(64);
        output.WriteBool(GAMEMODEPLOPLO6);
      }
      if (HasGAMEMODEPLOPLO4HL) {
        output.WriteRawTag(72);
        output.WriteBool(GAMEMODEPLOPLO4HL);
      }
      if (HasGAMEMODEPLOPLO5HL) {
        output.WriteRawTag(80);
        output.WriteBool(GAMEMODEPLOPLO5HL);
      }
      if (HasGAMEMODEPLOPLO6HL) {
        output.WriteRawTag(88);
        output.WriteBool(GAMEMODEPLOPLO6HL);
      }
      if (HasGAMEMODEFLASHNLH) {
        output.WriteRawTag(96);
        output.WriteBool(GAMEMODEFLASHNLH);
      }
      if (HasGAMEMODEFLASHPLO4) {
        output.WriteRawTag(104);
        output.WriteBool(GAMEMODEFLASHPLO4);
      }
      if (HasGAMEMODEMIXEDNLHPLO4) {
        output.WriteRawTag(112);
        output.WriteBool(GAMEMODEMIXEDNLHPLO4);
      }
      if (HasGAMEMODEMIXEDNLHPLO5) {
        output.WriteRawTag(120);
        output.WriteBool(GAMEMODEMIXEDNLHPLO5);
      }
      if (HasGAMEMODEOTHERPUSOY) {
        output.WriteRawTag(128, 1);
        output.WriteBool(GAMEMODEOTHERPUSOY);
      }
      if (HasGAMEMODEOTHEROFC) {
        output.WriteRawTag(136, 1);
        output.WriteBool(GAMEMODEOTHEROFC);
      }
      if (HasGAMEMODEFLASHPLO5) {
        output.WriteRawTag(144, 1);
        output.WriteBool(GAMEMODEFLASHPLO5);
      }
      if (HasGAMEMODEOTHERTEENPATTI) {
        output.WriteRawTag(152, 1);
        output.WriteBool(GAMEMODEOTHERTEENPATTI);
      }
      if (HasGAMEMODEOTHERTONGITS) {
        output.WriteRawTag(160, 1);
        output.WriteBool(GAMEMODEOTHERTONGITS);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGAMEMODENLHNLH) {
        output.WriteRawTag(8);
        output.WriteBool(GAMEMODENLHNLH);
      }
      if (HasGAMEMODENLHAOF) {
        output.WriteRawTag(16);
        output.WriteBool(GAMEMODENLHAOF);
      }
      if (HasGAMEMODENLHSIXPLUS) {
        output.WriteRawTag(24);
        output.WriteBool(GAMEMODENLHSIXPLUS);
      }
      if (HasGAMEMODENLHNLH31) {
        output.WriteRawTag(32);
        output.WriteBool(GAMEMODENLHNLH31);
      }
      if (HasGAMEMODENLHNLH31F) {
        output.WriteRawTag(40);
        output.WriteBool(GAMEMODENLHNLH31F);
      }
      if (HasGAMEMODEPLOPLO4) {
        output.WriteRawTag(48);
        output.WriteBool(GAMEMODEPLOPLO4);
      }
      if (HasGAMEMODEPLOPLO5) {
        output.WriteRawTag(56);
        output.WriteBool(GAMEMODEPLOPLO5);
      }
      if (HasGAMEMODEPLOPLO6) {
        output.WriteRawTag(64);
        output.WriteBool(GAMEMODEPLOPLO6);
      }
      if (HasGAMEMODEPLOPLO4HL) {
        output.WriteRawTag(72);
        output.WriteBool(GAMEMODEPLOPLO4HL);
      }
      if (HasGAMEMODEPLOPLO5HL) {
        output.WriteRawTag(80);
        output.WriteBool(GAMEMODEPLOPLO5HL);
      }
      if (HasGAMEMODEPLOPLO6HL) {
        output.WriteRawTag(88);
        output.WriteBool(GAMEMODEPLOPLO6HL);
      }
      if (HasGAMEMODEFLASHNLH) {
        output.WriteRawTag(96);
        output.WriteBool(GAMEMODEFLASHNLH);
      }
      if (HasGAMEMODEFLASHPLO4) {
        output.WriteRawTag(104);
        output.WriteBool(GAMEMODEFLASHPLO4);
      }
      if (HasGAMEMODEMIXEDNLHPLO4) {
        output.WriteRawTag(112);
        output.WriteBool(GAMEMODEMIXEDNLHPLO4);
      }
      if (HasGAMEMODEMIXEDNLHPLO5) {
        output.WriteRawTag(120);
        output.WriteBool(GAMEMODEMIXEDNLHPLO5);
      }
      if (HasGAMEMODEOTHERPUSOY) {
        output.WriteRawTag(128, 1);
        output.WriteBool(GAMEMODEOTHERPUSOY);
      }
      if (HasGAMEMODEOTHEROFC) {
        output.WriteRawTag(136, 1);
        output.WriteBool(GAMEMODEOTHEROFC);
      }
      if (HasGAMEMODEFLASHPLO5) {
        output.WriteRawTag(144, 1);
        output.WriteBool(GAMEMODEFLASHPLO5);
      }
      if (HasGAMEMODEOTHERTEENPATTI) {
        output.WriteRawTag(152, 1);
        output.WriteBool(GAMEMODEOTHERTEENPATTI);
      }
      if (HasGAMEMODEOTHERTONGITS) {
        output.WriteRawTag(160, 1);
        output.WriteBool(GAMEMODEOTHERTONGITS);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGAMEMODENLHNLH) {
        size += 1 + 1;
      }
      if (HasGAMEMODENLHAOF) {
        size += 1 + 1;
      }
      if (HasGAMEMODENLHSIXPLUS) {
        size += 1 + 1;
      }
      if (HasGAMEMODENLHNLH31) {
        size += 1 + 1;
      }
      if (HasGAMEMODENLHNLH31F) {
        size += 1 + 1;
      }
      if (HasGAMEMODEPLOPLO4) {
        size += 1 + 1;
      }
      if (HasGAMEMODEPLOPLO5) {
        size += 1 + 1;
      }
      if (HasGAMEMODEPLOPLO6) {
        size += 1 + 1;
      }
      if (HasGAMEMODEPLOPLO4HL) {
        size += 1 + 1;
      }
      if (HasGAMEMODEPLOPLO5HL) {
        size += 1 + 1;
      }
      if (HasGAMEMODEPLOPLO6HL) {
        size += 1 + 1;
      }
      if (HasGAMEMODEFLASHNLH) {
        size += 1 + 1;
      }
      if (HasGAMEMODEFLASHPLO4) {
        size += 1 + 1;
      }
      if (HasGAMEMODEMIXEDNLHPLO4) {
        size += 1 + 1;
      }
      if (HasGAMEMODEMIXEDNLHPLO5) {
        size += 1 + 1;
      }
      if (HasGAMEMODEOTHERPUSOY) {
        size += 2 + 1;
      }
      if (HasGAMEMODEOTHEROFC) {
        size += 2 + 1;
      }
      if (HasGAMEMODEFLASHPLO5) {
        size += 2 + 1;
      }
      if (HasGAMEMODEOTHERTEENPATTI) {
        size += 2 + 1;
      }
      if (HasGAMEMODEOTHERTONGITS) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpecifiedRGActivityGameMode other) {
      if (other == null) {
        return;
      }
      if (other.HasGAMEMODENLHNLH) {
        GAMEMODENLHNLH = other.GAMEMODENLHNLH;
      }
      if (other.HasGAMEMODENLHAOF) {
        GAMEMODENLHAOF = other.GAMEMODENLHAOF;
      }
      if (other.HasGAMEMODENLHSIXPLUS) {
        GAMEMODENLHSIXPLUS = other.GAMEMODENLHSIXPLUS;
      }
      if (other.HasGAMEMODENLHNLH31) {
        GAMEMODENLHNLH31 = other.GAMEMODENLHNLH31;
      }
      if (other.HasGAMEMODENLHNLH31F) {
        GAMEMODENLHNLH31F = other.GAMEMODENLHNLH31F;
      }
      if (other.HasGAMEMODEPLOPLO4) {
        GAMEMODEPLOPLO4 = other.GAMEMODEPLOPLO4;
      }
      if (other.HasGAMEMODEPLOPLO5) {
        GAMEMODEPLOPLO5 = other.GAMEMODEPLOPLO5;
      }
      if (other.HasGAMEMODEPLOPLO6) {
        GAMEMODEPLOPLO6 = other.GAMEMODEPLOPLO6;
      }
      if (other.HasGAMEMODEPLOPLO4HL) {
        GAMEMODEPLOPLO4HL = other.GAMEMODEPLOPLO4HL;
      }
      if (other.HasGAMEMODEPLOPLO5HL) {
        GAMEMODEPLOPLO5HL = other.GAMEMODEPLOPLO5HL;
      }
      if (other.HasGAMEMODEPLOPLO6HL) {
        GAMEMODEPLOPLO6HL = other.GAMEMODEPLOPLO6HL;
      }
      if (other.HasGAMEMODEFLASHNLH) {
        GAMEMODEFLASHNLH = other.GAMEMODEFLASHNLH;
      }
      if (other.HasGAMEMODEFLASHPLO4) {
        GAMEMODEFLASHPLO4 = other.GAMEMODEFLASHPLO4;
      }
      if (other.HasGAMEMODEMIXEDNLHPLO4) {
        GAMEMODEMIXEDNLHPLO4 = other.GAMEMODEMIXEDNLHPLO4;
      }
      if (other.HasGAMEMODEMIXEDNLHPLO5) {
        GAMEMODEMIXEDNLHPLO5 = other.GAMEMODEMIXEDNLHPLO5;
      }
      if (other.HasGAMEMODEOTHERPUSOY) {
        GAMEMODEOTHERPUSOY = other.GAMEMODEOTHERPUSOY;
      }
      if (other.HasGAMEMODEOTHEROFC) {
        GAMEMODEOTHEROFC = other.GAMEMODEOTHEROFC;
      }
      if (other.HasGAMEMODEFLASHPLO5) {
        GAMEMODEFLASHPLO5 = other.GAMEMODEFLASHPLO5;
      }
      if (other.HasGAMEMODEOTHERTEENPATTI) {
        GAMEMODEOTHERTEENPATTI = other.GAMEMODEOTHERTEENPATTI;
      }
      if (other.HasGAMEMODEOTHERTONGITS) {
        GAMEMODEOTHERTONGITS = other.GAMEMODEOTHERTONGITS;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GAMEMODENLHNLH = input.ReadBool();
            break;
          }
          case 16: {
            GAMEMODENLHAOF = input.ReadBool();
            break;
          }
          case 24: {
            GAMEMODENLHSIXPLUS = input.ReadBool();
            break;
          }
          case 32: {
            GAMEMODENLHNLH31 = input.ReadBool();
            break;
          }
          case 40: {
            GAMEMODENLHNLH31F = input.ReadBool();
            break;
          }
          case 48: {
            GAMEMODEPLOPLO4 = input.ReadBool();
            break;
          }
          case 56: {
            GAMEMODEPLOPLO5 = input.ReadBool();
            break;
          }
          case 64: {
            GAMEMODEPLOPLO6 = input.ReadBool();
            break;
          }
          case 72: {
            GAMEMODEPLOPLO4HL = input.ReadBool();
            break;
          }
          case 80: {
            GAMEMODEPLOPLO5HL = input.ReadBool();
            break;
          }
          case 88: {
            GAMEMODEPLOPLO6HL = input.ReadBool();
            break;
          }
          case 96: {
            GAMEMODEFLASHNLH = input.ReadBool();
            break;
          }
          case 104: {
            GAMEMODEFLASHPLO4 = input.ReadBool();
            break;
          }
          case 112: {
            GAMEMODEMIXEDNLHPLO4 = input.ReadBool();
            break;
          }
          case 120: {
            GAMEMODEMIXEDNLHPLO5 = input.ReadBool();
            break;
          }
          case 128: {
            GAMEMODEOTHERPUSOY = input.ReadBool();
            break;
          }
          case 136: {
            GAMEMODEOTHEROFC = input.ReadBool();
            break;
          }
          case 144: {
            GAMEMODEFLASHPLO5 = input.ReadBool();
            break;
          }
          case 152: {
            GAMEMODEOTHERTEENPATTI = input.ReadBool();
            break;
          }
          case 160: {
            GAMEMODEOTHERTONGITS = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GAMEMODENLHNLH = input.ReadBool();
            break;
          }
          case 16: {
            GAMEMODENLHAOF = input.ReadBool();
            break;
          }
          case 24: {
            GAMEMODENLHSIXPLUS = input.ReadBool();
            break;
          }
          case 32: {
            GAMEMODENLHNLH31 = input.ReadBool();
            break;
          }
          case 40: {
            GAMEMODENLHNLH31F = input.ReadBool();
            break;
          }
          case 48: {
            GAMEMODEPLOPLO4 = input.ReadBool();
            break;
          }
          case 56: {
            GAMEMODEPLOPLO5 = input.ReadBool();
            break;
          }
          case 64: {
            GAMEMODEPLOPLO6 = input.ReadBool();
            break;
          }
          case 72: {
            GAMEMODEPLOPLO4HL = input.ReadBool();
            break;
          }
          case 80: {
            GAMEMODEPLOPLO5HL = input.ReadBool();
            break;
          }
          case 88: {
            GAMEMODEPLOPLO6HL = input.ReadBool();
            break;
          }
          case 96: {
            GAMEMODEFLASHNLH = input.ReadBool();
            break;
          }
          case 104: {
            GAMEMODEFLASHPLO4 = input.ReadBool();
            break;
          }
          case 112: {
            GAMEMODEMIXEDNLHPLO4 = input.ReadBool();
            break;
          }
          case 120: {
            GAMEMODEMIXEDNLHPLO5 = input.ReadBool();
            break;
          }
          case 128: {
            GAMEMODEOTHERPUSOY = input.ReadBool();
            break;
          }
          case 136: {
            GAMEMODEOTHEROFC = input.ReadBool();
            break;
          }
          case 144: {
            GAMEMODEFLASHPLO5 = input.ReadBool();
            break;
          }
          case 152: {
            GAMEMODEOTHERTEENPATTI = input.ReadBool();
            break;
          }
          case 160: {
            GAMEMODEOTHERTONGITS = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// SpecifiedRG Activity
  /// </summary>
  public sealed partial class SpecifiedRGActivityConfig : pb::IMessage<SpecifiedRGActivityConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpecifiedRGActivityConfig> _parser = new pb::MessageParser<SpecifiedRGActivityConfig>(() => new SpecifiedRGActivityConfig());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpecifiedRGActivityConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpecifiedRGActivityConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpecifiedRGActivityConfig(SpecifiedRGActivityConfig other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      superLeagueid_ = other.superLeagueid_;
      creatorUid_ = other.creatorUid_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      lowBlindRewardChips_ = other.lowBlindRewardChips_.Clone();
      midBlindRewardChips_ = other.midBlindRewardChips_.Clone();
      highBlindRewardChips_ = other.highBlindRewardChips_.Clone();
      status_ = other.status_;
      lowBlindRewardUsers_ = other.lowBlindRewardUsers_.Clone();
      midBlindRewardUsers_ = other.midBlindRewardUsers_.Clone();
      highBlindRewardUsers_ = other.highBlindRewardUsers_.Clone();
      rewardedChips_ = other.rewardedChips_;
      moduleid_ = other.moduleid_;
      gameMode_ = other.gameMode_ != null ? other.gameMode_.Clone() : null;
      bulletinBoard_ = other.bulletinBoard_;
      activityType_ = other.activityType_;
      isHandWithFee_ = other.isHandWithFee_;
      lowBlindMinBlind_ = other.lowBlindMinBlind_;
      lowBlindMaxBlind_ = other.lowBlindMaxBlind_;
      lowBlindRewards_ = other.lowBlindRewards_.Clone();
      midBlindMinBlind_ = other.midBlindMinBlind_;
      midBlindMaxBlind_ = other.midBlindMaxBlind_;
      midBlindRewards_ = other.midBlindRewards_.Clone();
      highBlindMinBlind_ = other.highBlindMinBlind_;
      highBlindMaxBlind_ = other.highBlindMaxBlind_;
      highBlindRewards_ = other.highBlindRewards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpecifiedRGActivityConfig Clone() {
      return new SpecifiedRGActivityConfig(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static long IdDefaultValue = 0L;

    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 2;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 2) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 3;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 4) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "super_leagueid" field.</summary>
    public const int SuperLeagueidFieldNumber = 4;
    private readonly static int SuperLeagueidDefaultValue = 0;

    private int superLeagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueid {
      get { if ((_hasBits0 & 8) != 0) { return superLeagueid_; } else { return SuperLeagueidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        superLeagueid_ = value;
      }
    }
    /// <summary>Gets whether the "super_leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "super_leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueid() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "creator_uid" field.</summary>
    public const int CreatorUidFieldNumber = 5;
    private readonly static long CreatorUidDefaultValue = 0L;

    private long creatorUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CreatorUid {
      get { if ((_hasBits0 & 16) != 0) { return creatorUid_; } else { return CreatorUidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        creatorUid_ = value;
      }
    }
    /// <summary>Gets whether the "creator_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCreatorUid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "creator_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCreatorUid() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 6;
    private readonly static long StartTimeDefaultValue = 0L;

    private long startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartTime {
      get { if ((_hasBits0 & 32) != 0) { return startTime_; } else { return StartTimeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        startTime_ = value;
      }
    }
    /// <summary>Gets whether the "start_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartTime {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "start_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartTime() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 7;
    private readonly static long EndTimeDefaultValue = 0L;

    private long endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndTime {
      get { if ((_hasBits0 & 64) != 0) { return endTime_; } else { return EndTimeDefaultValue; } }
      set {
        _hasBits0 |= 64;
        endTime_ = value;
      }
    }
    /// <summary>Gets whether the "end_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndTime {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "end_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndTime() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "low_blind_reward_chips" field.</summary>
    public const int LowBlindRewardChipsFieldNumber = 8;
    private static readonly pb::FieldCodec<long> _repeated_lowBlindRewardChips_codec
        = pb::FieldCodec.ForInt64(66);
    private readonly pbc::RepeatedField<long> lowBlindRewardChips_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// [舊版] blinds &lt;= 0.5/1 (微級別才能設定)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> LowBlindRewardChips {
      get { return lowBlindRewardChips_; }
    }

    /// <summary>Field number for the "mid_blind_reward_chips" field.</summary>
    public const int MidBlindRewardChipsFieldNumber = 9;
    private static readonly pb::FieldCodec<long> _repeated_midBlindRewardChips_codec
        = pb::FieldCodec.ForInt64(74);
    private readonly pbc::RepeatedField<long> midBlindRewardChips_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// [舊版] 1/2 &lt;= blinds &lt;= 5/10
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> MidBlindRewardChips {
      get { return midBlindRewardChips_; }
    }

    /// <summary>Field number for the "high_blind_reward_chips" field.</summary>
    public const int HighBlindRewardChipsFieldNumber = 10;
    private static readonly pb::FieldCodec<long> _repeated_highBlindRewardChips_codec
        = pb::FieldCodec.ForInt64(82);
    private readonly pbc::RepeatedField<long> highBlindRewardChips_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// [舊版] 10/20 &lt;= blinds
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> HighBlindRewardChips {
      get { return highBlindRewardChips_; }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 11;
    private readonly static int StatusDefaultValue = 0;

    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Status {
      get { if ((_hasBits0 & 128) != 0) { return status_; } else { return StatusDefaultValue; } }
      set {
        _hasBits0 |= 128;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatus {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatus() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "low_blind_reward_users" field.</summary>
    public const int LowBlindRewardUsersFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ActivityUserReward> _repeated_lowBlindRewardUsers_codec
        = pb::FieldCodec.ForMessage(98, global::Texas.Protocol.ActivityUserReward.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ActivityUserReward> lowBlindRewardUsers_ = new pbc::RepeatedField<global::Texas.Protocol.ActivityUserReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ActivityUserReward> LowBlindRewardUsers {
      get { return lowBlindRewardUsers_; }
    }

    /// <summary>Field number for the "mid_blind_reward_users" field.</summary>
    public const int MidBlindRewardUsersFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ActivityUserReward> _repeated_midBlindRewardUsers_codec
        = pb::FieldCodec.ForMessage(106, global::Texas.Protocol.ActivityUserReward.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ActivityUserReward> midBlindRewardUsers_ = new pbc::RepeatedField<global::Texas.Protocol.ActivityUserReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ActivityUserReward> MidBlindRewardUsers {
      get { return midBlindRewardUsers_; }
    }

    /// <summary>Field number for the "high_blind_reward_users" field.</summary>
    public const int HighBlindRewardUsersFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ActivityUserReward> _repeated_highBlindRewardUsers_codec
        = pb::FieldCodec.ForMessage(114, global::Texas.Protocol.ActivityUserReward.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ActivityUserReward> highBlindRewardUsers_ = new pbc::RepeatedField<global::Texas.Protocol.ActivityUserReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ActivityUserReward> HighBlindRewardUsers {
      get { return highBlindRewardUsers_; }
    }

    /// <summary>Field number for the "rewarded_chips" field.</summary>
    public const int RewardedChipsFieldNumber = 15;
    private readonly static long RewardedChipsDefaultValue = 0L;

    private long rewardedChips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RewardedChips {
      get { if ((_hasBits0 & 256) != 0) { return rewardedChips_; } else { return RewardedChipsDefaultValue; } }
      set {
        _hasBits0 |= 256;
        rewardedChips_ = value;
      }
    }
    /// <summary>Gets whether the "rewarded_chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRewardedChips {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "rewarded_chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRewardedChips() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "moduleid" field.</summary>
    public const int ModuleidFieldNumber = 16;
    private readonly static long ModuleidDefaultValue = 0L;

    private long moduleid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Moduleid {
      get { if ((_hasBits0 & 512) != 0) { return moduleid_; } else { return ModuleidDefaultValue; } }
      set {
        _hasBits0 |= 512;
        moduleid_ = value;
      }
    }
    /// <summary>Gets whether the "moduleid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModuleid {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "moduleid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModuleid() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "game_mode" field.</summary>
    public const int GameModeFieldNumber = 17;
    private global::Texas.Protocol.SpecifiedRGActivityGameMode gameMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.SpecifiedRGActivityGameMode GameMode {
      get { return gameMode_; }
      set {
        gameMode_ = value;
      }
    }

    /// <summary>Field number for the "bulletin_board" field.</summary>
    public const int BulletinBoardFieldNumber = 18;
    private readonly static string BulletinBoardDefaultValue = "";

    private string bulletinBoard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BulletinBoard {
      get { return bulletinBoard_ ?? BulletinBoardDefaultValue; }
      set {
        bulletinBoard_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bulletin_board" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBulletinBoard {
      get { return bulletinBoard_ != null; }
    }
    /// <summary>Clears the value of the "bulletin_board" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBulletinBoard() {
      bulletinBoard_ = null;
    }

    /// <summary>Field number for the "activity_type" field.</summary>
    public const int ActivityTypeFieldNumber = 19;
    private readonly static int ActivityTypeDefaultValue = 0;

    private int activityType_;
    /// <summary>
    /// 排行榜優化
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActivityType {
      get { if ((_hasBits0 & 1024) != 0) { return activityType_; } else { return ActivityTypeDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        activityType_ = value;
      }
    }
    /// <summary>Gets whether the "activity_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActivityType {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "activity_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActivityType() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "is_hand_with_fee" field.</summary>
    public const int IsHandWithFeeFieldNumber = 20;
    private readonly static int IsHandWithFeeDefaultValue = 0;

    private int isHandWithFee_;
    /// <summary>
    /// 是否僅計算產生 fee 之手數
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int IsHandWithFee {
      get { if ((_hasBits0 & 2048) != 0) { return isHandWithFee_; } else { return IsHandWithFeeDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        isHandWithFee_ = value;
      }
    }
    /// <summary>Gets whether the "is_hand_with_fee" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsHandWithFee {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "is_hand_with_fee" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsHandWithFee() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "low_blind_min_blind" field.</summary>
    public const int LowBlindMinBlindFieldNumber = 21;
    private readonly static long LowBlindMinBlindDefaultValue = 0L;

    private long lowBlindMinBlind_;
    /// <summary>
    /// 第一級別盲注下限 (小盲)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LowBlindMinBlind {
      get { if ((_hasBits0 & 4096) != 0) { return lowBlindMinBlind_; } else { return LowBlindMinBlindDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        lowBlindMinBlind_ = value;
      }
    }
    /// <summary>Gets whether the "low_blind_min_blind" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLowBlindMinBlind {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "low_blind_min_blind" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLowBlindMinBlind() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "low_blind_max_blind" field.</summary>
    public const int LowBlindMaxBlindFieldNumber = 22;
    private readonly static long LowBlindMaxBlindDefaultValue = 0L;

    private long lowBlindMaxBlind_;
    /// <summary>
    /// 第一級別盲注上限（小盲）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LowBlindMaxBlind {
      get { if ((_hasBits0 & 8192) != 0) { return lowBlindMaxBlind_; } else { return LowBlindMaxBlindDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        lowBlindMaxBlind_ = value;
      }
    }
    /// <summary>Gets whether the "low_blind_max_blind" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLowBlindMaxBlind {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "low_blind_max_blind" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLowBlindMaxBlind() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "low_blind_rewards" field.</summary>
    public const int LowBlindRewardsFieldNumber = 23;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ActivityReward> _repeated_lowBlindRewards_codec
        = pb::FieldCodec.ForMessage(186, global::Texas.Protocol.ActivityReward.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ActivityReward> lowBlindRewards_ = new pbc::RepeatedField<global::Texas.Protocol.ActivityReward>();
    /// <summary>
    /// 第一級別獎勵
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ActivityReward> LowBlindRewards {
      get { return lowBlindRewards_; }
    }

    /// <summary>Field number for the "mid_blind_min_blind" field.</summary>
    public const int MidBlindMinBlindFieldNumber = 24;
    private readonly static long MidBlindMinBlindDefaultValue = 0L;

    private long midBlindMinBlind_;
    /// <summary>
    /// 第二級別盲注下限 (小盲)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MidBlindMinBlind {
      get { if ((_hasBits0 & 16384) != 0) { return midBlindMinBlind_; } else { return MidBlindMinBlindDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        midBlindMinBlind_ = value;
      }
    }
    /// <summary>Gets whether the "mid_blind_min_blind" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMidBlindMinBlind {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "mid_blind_min_blind" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMidBlindMinBlind() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "mid_blind_max_blind" field.</summary>
    public const int MidBlindMaxBlindFieldNumber = 25;
    private readonly static long MidBlindMaxBlindDefaultValue = 0L;

    private long midBlindMaxBlind_;
    /// <summary>
    /// 第二級別盲注上限（小盲）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MidBlindMaxBlind {
      get { if ((_hasBits0 & 32768) != 0) { return midBlindMaxBlind_; } else { return MidBlindMaxBlindDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        midBlindMaxBlind_ = value;
      }
    }
    /// <summary>Gets whether the "mid_blind_max_blind" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMidBlindMaxBlind {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "mid_blind_max_blind" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMidBlindMaxBlind() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "mid_blind_rewards" field.</summary>
    public const int MidBlindRewardsFieldNumber = 26;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ActivityReward> _repeated_midBlindRewards_codec
        = pb::FieldCodec.ForMessage(210, global::Texas.Protocol.ActivityReward.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ActivityReward> midBlindRewards_ = new pbc::RepeatedField<global::Texas.Protocol.ActivityReward>();
    /// <summary>
    /// 第二級別獎勵
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ActivityReward> MidBlindRewards {
      get { return midBlindRewards_; }
    }

    /// <summary>Field number for the "high_blind_min_blind" field.</summary>
    public const int HighBlindMinBlindFieldNumber = 27;
    private readonly static long HighBlindMinBlindDefaultValue = 0L;

    private long highBlindMinBlind_;
    /// <summary>
    /// 第三級別盲注下限 (小盲)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long HighBlindMinBlind {
      get { if ((_hasBits0 & 65536) != 0) { return highBlindMinBlind_; } else { return HighBlindMinBlindDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        highBlindMinBlind_ = value;
      }
    }
    /// <summary>Gets whether the "high_blind_min_blind" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHighBlindMinBlind {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "high_blind_min_blind" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHighBlindMinBlind() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "high_blind_max_blind" field.</summary>
    public const int HighBlindMaxBlindFieldNumber = 28;
    private readonly static long HighBlindMaxBlindDefaultValue = 0L;

    private long highBlindMaxBlind_;
    /// <summary>
    /// 第三級別盲注上限（小盲）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long HighBlindMaxBlind {
      get { if ((_hasBits0 & 131072) != 0) { return highBlindMaxBlind_; } else { return HighBlindMaxBlindDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        highBlindMaxBlind_ = value;
      }
    }
    /// <summary>Gets whether the "high_blind_max_blind" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHighBlindMaxBlind {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "high_blind_max_blind" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHighBlindMaxBlind() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "high_blind_rewards" field.</summary>
    public const int HighBlindRewardsFieldNumber = 29;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ActivityReward> _repeated_highBlindRewards_codec
        = pb::FieldCodec.ForMessage(234, global::Texas.Protocol.ActivityReward.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ActivityReward> highBlindRewards_ = new pbc::RepeatedField<global::Texas.Protocol.ActivityReward>();
    /// <summary>
    /// 第三級別獎勵
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ActivityReward> HighBlindRewards {
      get { return highBlindRewards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpecifiedRGActivityConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpecifiedRGActivityConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (SuperLeagueid != other.SuperLeagueid) return false;
      if (CreatorUid != other.CreatorUid) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if(!lowBlindRewardChips_.Equals(other.lowBlindRewardChips_)) return false;
      if(!midBlindRewardChips_.Equals(other.midBlindRewardChips_)) return false;
      if(!highBlindRewardChips_.Equals(other.highBlindRewardChips_)) return false;
      if (Status != other.Status) return false;
      if(!lowBlindRewardUsers_.Equals(other.lowBlindRewardUsers_)) return false;
      if(!midBlindRewardUsers_.Equals(other.midBlindRewardUsers_)) return false;
      if(!highBlindRewardUsers_.Equals(other.highBlindRewardUsers_)) return false;
      if (RewardedChips != other.RewardedChips) return false;
      if (Moduleid != other.Moduleid) return false;
      if (!object.Equals(GameMode, other.GameMode)) return false;
      if (BulletinBoard != other.BulletinBoard) return false;
      if (ActivityType != other.ActivityType) return false;
      if (IsHandWithFee != other.IsHandWithFee) return false;
      if (LowBlindMinBlind != other.LowBlindMinBlind) return false;
      if (LowBlindMaxBlind != other.LowBlindMaxBlind) return false;
      if(!lowBlindRewards_.Equals(other.lowBlindRewards_)) return false;
      if (MidBlindMinBlind != other.MidBlindMinBlind) return false;
      if (MidBlindMaxBlind != other.MidBlindMaxBlind) return false;
      if(!midBlindRewards_.Equals(other.midBlindRewards_)) return false;
      if (HighBlindMinBlind != other.HighBlindMinBlind) return false;
      if (HighBlindMaxBlind != other.HighBlindMaxBlind) return false;
      if(!highBlindRewards_.Equals(other.highBlindRewards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasSuperLeagueid) hash ^= SuperLeagueid.GetHashCode();
      if (HasCreatorUid) hash ^= CreatorUid.GetHashCode();
      if (HasStartTime) hash ^= StartTime.GetHashCode();
      if (HasEndTime) hash ^= EndTime.GetHashCode();
      hash ^= lowBlindRewardChips_.GetHashCode();
      hash ^= midBlindRewardChips_.GetHashCode();
      hash ^= highBlindRewardChips_.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      hash ^= lowBlindRewardUsers_.GetHashCode();
      hash ^= midBlindRewardUsers_.GetHashCode();
      hash ^= highBlindRewardUsers_.GetHashCode();
      if (HasRewardedChips) hash ^= RewardedChips.GetHashCode();
      if (HasModuleid) hash ^= Moduleid.GetHashCode();
      if (gameMode_ != null) hash ^= GameMode.GetHashCode();
      if (HasBulletinBoard) hash ^= BulletinBoard.GetHashCode();
      if (HasActivityType) hash ^= ActivityType.GetHashCode();
      if (HasIsHandWithFee) hash ^= IsHandWithFee.GetHashCode();
      if (HasLowBlindMinBlind) hash ^= LowBlindMinBlind.GetHashCode();
      if (HasLowBlindMaxBlind) hash ^= LowBlindMaxBlind.GetHashCode();
      hash ^= lowBlindRewards_.GetHashCode();
      if (HasMidBlindMinBlind) hash ^= MidBlindMinBlind.GetHashCode();
      if (HasMidBlindMaxBlind) hash ^= MidBlindMaxBlind.GetHashCode();
      hash ^= midBlindRewards_.GetHashCode();
      if (HasHighBlindMinBlind) hash ^= HighBlindMinBlind.GetHashCode();
      if (HasHighBlindMaxBlind) hash ^= HighBlindMaxBlind.GetHashCode();
      hash ^= highBlindRewards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (HasClubid) {
        output.WriteRawTag(16);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(24);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(32);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasCreatorUid) {
        output.WriteRawTag(40);
        output.WriteInt64(CreatorUid);
      }
      if (HasStartTime) {
        output.WriteRawTag(48);
        output.WriteInt64(StartTime);
      }
      if (HasEndTime) {
        output.WriteRawTag(56);
        output.WriteInt64(EndTime);
      }
      lowBlindRewardChips_.WriteTo(output, _repeated_lowBlindRewardChips_codec);
      midBlindRewardChips_.WriteTo(output, _repeated_midBlindRewardChips_codec);
      highBlindRewardChips_.WriteTo(output, _repeated_highBlindRewardChips_codec);
      if (HasStatus) {
        output.WriteRawTag(88);
        output.WriteInt32(Status);
      }
      lowBlindRewardUsers_.WriteTo(output, _repeated_lowBlindRewardUsers_codec);
      midBlindRewardUsers_.WriteTo(output, _repeated_midBlindRewardUsers_codec);
      highBlindRewardUsers_.WriteTo(output, _repeated_highBlindRewardUsers_codec);
      if (HasRewardedChips) {
        output.WriteRawTag(120);
        output.WriteInt64(RewardedChips);
      }
      if (HasModuleid) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(Moduleid);
      }
      if (gameMode_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(GameMode);
      }
      if (HasBulletinBoard) {
        output.WriteRawTag(146, 1);
        output.WriteString(BulletinBoard);
      }
      if (HasActivityType) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(ActivityType);
      }
      if (HasIsHandWithFee) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(IsHandWithFee);
      }
      if (HasLowBlindMinBlind) {
        output.WriteRawTag(168, 1);
        output.WriteInt64(LowBlindMinBlind);
      }
      if (HasLowBlindMaxBlind) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(LowBlindMaxBlind);
      }
      lowBlindRewards_.WriteTo(output, _repeated_lowBlindRewards_codec);
      if (HasMidBlindMinBlind) {
        output.WriteRawTag(192, 1);
        output.WriteInt64(MidBlindMinBlind);
      }
      if (HasMidBlindMaxBlind) {
        output.WriteRawTag(200, 1);
        output.WriteInt64(MidBlindMaxBlind);
      }
      midBlindRewards_.WriteTo(output, _repeated_midBlindRewards_codec);
      if (HasHighBlindMinBlind) {
        output.WriteRawTag(216, 1);
        output.WriteInt64(HighBlindMinBlind);
      }
      if (HasHighBlindMaxBlind) {
        output.WriteRawTag(224, 1);
        output.WriteInt64(HighBlindMaxBlind);
      }
      highBlindRewards_.WriteTo(output, _repeated_highBlindRewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (HasClubid) {
        output.WriteRawTag(16);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(24);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(32);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasCreatorUid) {
        output.WriteRawTag(40);
        output.WriteInt64(CreatorUid);
      }
      if (HasStartTime) {
        output.WriteRawTag(48);
        output.WriteInt64(StartTime);
      }
      if (HasEndTime) {
        output.WriteRawTag(56);
        output.WriteInt64(EndTime);
      }
      lowBlindRewardChips_.WriteTo(ref output, _repeated_lowBlindRewardChips_codec);
      midBlindRewardChips_.WriteTo(ref output, _repeated_midBlindRewardChips_codec);
      highBlindRewardChips_.WriteTo(ref output, _repeated_highBlindRewardChips_codec);
      if (HasStatus) {
        output.WriteRawTag(88);
        output.WriteInt32(Status);
      }
      lowBlindRewardUsers_.WriteTo(ref output, _repeated_lowBlindRewardUsers_codec);
      midBlindRewardUsers_.WriteTo(ref output, _repeated_midBlindRewardUsers_codec);
      highBlindRewardUsers_.WriteTo(ref output, _repeated_highBlindRewardUsers_codec);
      if (HasRewardedChips) {
        output.WriteRawTag(120);
        output.WriteInt64(RewardedChips);
      }
      if (HasModuleid) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(Moduleid);
      }
      if (gameMode_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(GameMode);
      }
      if (HasBulletinBoard) {
        output.WriteRawTag(146, 1);
        output.WriteString(BulletinBoard);
      }
      if (HasActivityType) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(ActivityType);
      }
      if (HasIsHandWithFee) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(IsHandWithFee);
      }
      if (HasLowBlindMinBlind) {
        output.WriteRawTag(168, 1);
        output.WriteInt64(LowBlindMinBlind);
      }
      if (HasLowBlindMaxBlind) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(LowBlindMaxBlind);
      }
      lowBlindRewards_.WriteTo(ref output, _repeated_lowBlindRewards_codec);
      if (HasMidBlindMinBlind) {
        output.WriteRawTag(192, 1);
        output.WriteInt64(MidBlindMinBlind);
      }
      if (HasMidBlindMaxBlind) {
        output.WriteRawTag(200, 1);
        output.WriteInt64(MidBlindMaxBlind);
      }
      midBlindRewards_.WriteTo(ref output, _repeated_midBlindRewards_codec);
      if (HasHighBlindMinBlind) {
        output.WriteRawTag(216, 1);
        output.WriteInt64(HighBlindMinBlind);
      }
      if (HasHighBlindMaxBlind) {
        output.WriteRawTag(224, 1);
        output.WriteInt64(HighBlindMaxBlind);
      }
      highBlindRewards_.WriteTo(ref output, _repeated_highBlindRewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasSuperLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueid);
      }
      if (HasCreatorUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreatorUid);
      }
      if (HasStartTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTime);
      }
      if (HasEndTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime);
      }
      size += lowBlindRewardChips_.CalculateSize(_repeated_lowBlindRewardChips_codec);
      size += midBlindRewardChips_.CalculateSize(_repeated_midBlindRewardChips_codec);
      size += highBlindRewardChips_.CalculateSize(_repeated_highBlindRewardChips_codec);
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      size += lowBlindRewardUsers_.CalculateSize(_repeated_lowBlindRewardUsers_codec);
      size += midBlindRewardUsers_.CalculateSize(_repeated_midBlindRewardUsers_codec);
      size += highBlindRewardUsers_.CalculateSize(_repeated_highBlindRewardUsers_codec);
      if (HasRewardedChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RewardedChips);
      }
      if (HasModuleid) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Moduleid);
      }
      if (gameMode_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GameMode);
      }
      if (HasBulletinBoard) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BulletinBoard);
      }
      if (HasActivityType) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ActivityType);
      }
      if (HasIsHandWithFee) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(IsHandWithFee);
      }
      if (HasLowBlindMinBlind) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(LowBlindMinBlind);
      }
      if (HasLowBlindMaxBlind) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(LowBlindMaxBlind);
      }
      size += lowBlindRewards_.CalculateSize(_repeated_lowBlindRewards_codec);
      if (HasMidBlindMinBlind) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(MidBlindMinBlind);
      }
      if (HasMidBlindMaxBlind) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(MidBlindMaxBlind);
      }
      size += midBlindRewards_.CalculateSize(_repeated_midBlindRewards_codec);
      if (HasHighBlindMinBlind) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(HighBlindMinBlind);
      }
      if (HasHighBlindMaxBlind) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(HighBlindMaxBlind);
      }
      size += highBlindRewards_.CalculateSize(_repeated_highBlindRewards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpecifiedRGActivityConfig other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasSuperLeagueid) {
        SuperLeagueid = other.SuperLeagueid;
      }
      if (other.HasCreatorUid) {
        CreatorUid = other.CreatorUid;
      }
      if (other.HasStartTime) {
        StartTime = other.StartTime;
      }
      if (other.HasEndTime) {
        EndTime = other.EndTime;
      }
      lowBlindRewardChips_.Add(other.lowBlindRewardChips_);
      midBlindRewardChips_.Add(other.midBlindRewardChips_);
      highBlindRewardChips_.Add(other.highBlindRewardChips_);
      if (other.HasStatus) {
        Status = other.Status;
      }
      lowBlindRewardUsers_.Add(other.lowBlindRewardUsers_);
      midBlindRewardUsers_.Add(other.midBlindRewardUsers_);
      highBlindRewardUsers_.Add(other.highBlindRewardUsers_);
      if (other.HasRewardedChips) {
        RewardedChips = other.RewardedChips;
      }
      if (other.HasModuleid) {
        Moduleid = other.Moduleid;
      }
      if (other.gameMode_ != null) {
        if (gameMode_ == null) {
          GameMode = new global::Texas.Protocol.SpecifiedRGActivityGameMode();
        }
        GameMode.MergeFrom(other.GameMode);
      }
      if (other.HasBulletinBoard) {
        BulletinBoard = other.BulletinBoard;
      }
      if (other.HasActivityType) {
        ActivityType = other.ActivityType;
      }
      if (other.HasIsHandWithFee) {
        IsHandWithFee = other.IsHandWithFee;
      }
      if (other.HasLowBlindMinBlind) {
        LowBlindMinBlind = other.LowBlindMinBlind;
      }
      if (other.HasLowBlindMaxBlind) {
        LowBlindMaxBlind = other.LowBlindMaxBlind;
      }
      lowBlindRewards_.Add(other.lowBlindRewards_);
      if (other.HasMidBlindMinBlind) {
        MidBlindMinBlind = other.MidBlindMinBlind;
      }
      if (other.HasMidBlindMaxBlind) {
        MidBlindMaxBlind = other.MidBlindMaxBlind;
      }
      midBlindRewards_.Add(other.midBlindRewards_);
      if (other.HasHighBlindMinBlind) {
        HighBlindMinBlind = other.HighBlindMinBlind;
      }
      if (other.HasHighBlindMaxBlind) {
        HighBlindMaxBlind = other.HighBlindMaxBlind;
      }
      highBlindRewards_.Add(other.highBlindRewards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            Clubid = input.ReadInt32();
            break;
          }
          case 24: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 32: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 40: {
            CreatorUid = input.ReadInt64();
            break;
          }
          case 48: {
            StartTime = input.ReadInt64();
            break;
          }
          case 56: {
            EndTime = input.ReadInt64();
            break;
          }
          case 66:
          case 64: {
            lowBlindRewardChips_.AddEntriesFrom(input, _repeated_lowBlindRewardChips_codec);
            break;
          }
          case 74:
          case 72: {
            midBlindRewardChips_.AddEntriesFrom(input, _repeated_midBlindRewardChips_codec);
            break;
          }
          case 82:
          case 80: {
            highBlindRewardChips_.AddEntriesFrom(input, _repeated_highBlindRewardChips_codec);
            break;
          }
          case 88: {
            Status = input.ReadInt32();
            break;
          }
          case 98: {
            lowBlindRewardUsers_.AddEntriesFrom(input, _repeated_lowBlindRewardUsers_codec);
            break;
          }
          case 106: {
            midBlindRewardUsers_.AddEntriesFrom(input, _repeated_midBlindRewardUsers_codec);
            break;
          }
          case 114: {
            highBlindRewardUsers_.AddEntriesFrom(input, _repeated_highBlindRewardUsers_codec);
            break;
          }
          case 120: {
            RewardedChips = input.ReadInt64();
            break;
          }
          case 128: {
            Moduleid = input.ReadInt64();
            break;
          }
          case 138: {
            if (gameMode_ == null) {
              GameMode = new global::Texas.Protocol.SpecifiedRGActivityGameMode();
            }
            input.ReadMessage(GameMode);
            break;
          }
          case 146: {
            BulletinBoard = input.ReadString();
            break;
          }
          case 152: {
            ActivityType = input.ReadInt32();
            break;
          }
          case 160: {
            IsHandWithFee = input.ReadInt32();
            break;
          }
          case 168: {
            LowBlindMinBlind = input.ReadInt64();
            break;
          }
          case 176: {
            LowBlindMaxBlind = input.ReadInt64();
            break;
          }
          case 186: {
            lowBlindRewards_.AddEntriesFrom(input, _repeated_lowBlindRewards_codec);
            break;
          }
          case 192: {
            MidBlindMinBlind = input.ReadInt64();
            break;
          }
          case 200: {
            MidBlindMaxBlind = input.ReadInt64();
            break;
          }
          case 210: {
            midBlindRewards_.AddEntriesFrom(input, _repeated_midBlindRewards_codec);
            break;
          }
          case 216: {
            HighBlindMinBlind = input.ReadInt64();
            break;
          }
          case 224: {
            HighBlindMaxBlind = input.ReadInt64();
            break;
          }
          case 234: {
            highBlindRewards_.AddEntriesFrom(input, _repeated_highBlindRewards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            Clubid = input.ReadInt32();
            break;
          }
          case 24: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 32: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 40: {
            CreatorUid = input.ReadInt64();
            break;
          }
          case 48: {
            StartTime = input.ReadInt64();
            break;
          }
          case 56: {
            EndTime = input.ReadInt64();
            break;
          }
          case 66:
          case 64: {
            lowBlindRewardChips_.AddEntriesFrom(ref input, _repeated_lowBlindRewardChips_codec);
            break;
          }
          case 74:
          case 72: {
            midBlindRewardChips_.AddEntriesFrom(ref input, _repeated_midBlindRewardChips_codec);
            break;
          }
          case 82:
          case 80: {
            highBlindRewardChips_.AddEntriesFrom(ref input, _repeated_highBlindRewardChips_codec);
            break;
          }
          case 88: {
            Status = input.ReadInt32();
            break;
          }
          case 98: {
            lowBlindRewardUsers_.AddEntriesFrom(ref input, _repeated_lowBlindRewardUsers_codec);
            break;
          }
          case 106: {
            midBlindRewardUsers_.AddEntriesFrom(ref input, _repeated_midBlindRewardUsers_codec);
            break;
          }
          case 114: {
            highBlindRewardUsers_.AddEntriesFrom(ref input, _repeated_highBlindRewardUsers_codec);
            break;
          }
          case 120: {
            RewardedChips = input.ReadInt64();
            break;
          }
          case 128: {
            Moduleid = input.ReadInt64();
            break;
          }
          case 138: {
            if (gameMode_ == null) {
              GameMode = new global::Texas.Protocol.SpecifiedRGActivityGameMode();
            }
            input.ReadMessage(GameMode);
            break;
          }
          case 146: {
            BulletinBoard = input.ReadString();
            break;
          }
          case 152: {
            ActivityType = input.ReadInt32();
            break;
          }
          case 160: {
            IsHandWithFee = input.ReadInt32();
            break;
          }
          case 168: {
            LowBlindMinBlind = input.ReadInt64();
            break;
          }
          case 176: {
            LowBlindMaxBlind = input.ReadInt64();
            break;
          }
          case 186: {
            lowBlindRewards_.AddEntriesFrom(ref input, _repeated_lowBlindRewards_codec);
            break;
          }
          case 192: {
            MidBlindMinBlind = input.ReadInt64();
            break;
          }
          case 200: {
            MidBlindMaxBlind = input.ReadInt64();
            break;
          }
          case 210: {
            midBlindRewards_.AddEntriesFrom(ref input, _repeated_midBlindRewards_codec);
            break;
          }
          case 216: {
            HighBlindMinBlind = input.ReadInt64();
            break;
          }
          case 224: {
            HighBlindMaxBlind = input.ReadInt64();
            break;
          }
          case 234: {
            highBlindRewards_.AddEntriesFrom(ref input, _repeated_highBlindRewards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ActivityRecord : pb::IMessage<ActivityRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActivityRecord> _parser = new pb::MessageParser<ActivityRecord>(() => new ActivityRecord());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActivityRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityRecord(ActivityRecord other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      storm_ = other.storm_ != null ? other.storm_.Clone() : null;
      ringGame_ = other.ringGame_ != null ? other.ringGame_.Clone() : null;
      mtt_ = other.mtt_ != null ? other.mtt_.Clone() : null;
      specifiedRg_ = other.specifiedRg_ != null ? other.specifiedRg_.Clone() : null;
      handMission_ = other.handMission_ != null ? other.handMission_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityRecord Clone() {
      return new ActivityRecord(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    /// 1: ChipStorm, 2: RingGame, 3: Mtt, 4: SpecifiedRG, 5: HandMission
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "storm" field.</summary>
    public const int StormFieldNumber = 2;
    private global::Texas.Protocol.ChipStormConfig storm_;
    /// <summary>
    /// when type = 1 use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.ChipStormConfig Storm {
      get { return storm_; }
      set {
        storm_ = value;
      }
    }

    /// <summary>Field number for the "ring_game" field.</summary>
    public const int RingGameFieldNumber = 3;
    private global::Texas.Protocol.RingGameActivityConfig ringGame_;
    /// <summary>
    /// when type = 2 use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RingGameActivityConfig RingGame {
      get { return ringGame_; }
      set {
        ringGame_ = value;
      }
    }

    /// <summary>Field number for the "mtt" field.</summary>
    public const int MttFieldNumber = 4;
    private global::Texas.Protocol.MttActivityConfig mtt_;
    /// <summary>
    /// when type = 3 use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.MttActivityConfig Mtt {
      get { return mtt_; }
      set {
        mtt_ = value;
      }
    }

    /// <summary>Field number for the "specified_rg" field.</summary>
    public const int SpecifiedRgFieldNumber = 5;
    private global::Texas.Protocol.SpecifiedRGActivityConfig specifiedRg_;
    /// <summary>
    /// when type = 4 use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.SpecifiedRGActivityConfig SpecifiedRg {
      get { return specifiedRg_; }
      set {
        specifiedRg_ = value;
      }
    }

    /// <summary>Field number for the "hand_mission" field.</summary>
    public const int HandMissionFieldNumber = 6;
    private global::Texas.Protocol.HandMissionConfig handMission_;
    /// <summary>
    /// when type = 5 use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.HandMissionConfig HandMission {
      get { return handMission_; }
      set {
        handMission_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActivityRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActivityRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Storm, other.Storm)) return false;
      if (!object.Equals(RingGame, other.RingGame)) return false;
      if (!object.Equals(Mtt, other.Mtt)) return false;
      if (!object.Equals(SpecifiedRg, other.SpecifiedRg)) return false;
      if (!object.Equals(HandMission, other.HandMission)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (storm_ != null) hash ^= Storm.GetHashCode();
      if (ringGame_ != null) hash ^= RingGame.GetHashCode();
      if (mtt_ != null) hash ^= Mtt.GetHashCode();
      if (specifiedRg_ != null) hash ^= SpecifiedRg.GetHashCode();
      if (handMission_ != null) hash ^= HandMission.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (storm_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Storm);
      }
      if (ringGame_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RingGame);
      }
      if (mtt_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Mtt);
      }
      if (specifiedRg_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SpecifiedRg);
      }
      if (handMission_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(HandMission);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (storm_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Storm);
      }
      if (ringGame_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RingGame);
      }
      if (mtt_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Mtt);
      }
      if (specifiedRg_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SpecifiedRg);
      }
      if (handMission_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(HandMission);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (storm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Storm);
      }
      if (ringGame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RingGame);
      }
      if (mtt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mtt);
      }
      if (specifiedRg_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpecifiedRg);
      }
      if (handMission_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HandMission);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActivityRecord other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.storm_ != null) {
        if (storm_ == null) {
          Storm = new global::Texas.Protocol.ChipStormConfig();
        }
        Storm.MergeFrom(other.Storm);
      }
      if (other.ringGame_ != null) {
        if (ringGame_ == null) {
          RingGame = new global::Texas.Protocol.RingGameActivityConfig();
        }
        RingGame.MergeFrom(other.RingGame);
      }
      if (other.mtt_ != null) {
        if (mtt_ == null) {
          Mtt = new global::Texas.Protocol.MttActivityConfig();
        }
        Mtt.MergeFrom(other.Mtt);
      }
      if (other.specifiedRg_ != null) {
        if (specifiedRg_ == null) {
          SpecifiedRg = new global::Texas.Protocol.SpecifiedRGActivityConfig();
        }
        SpecifiedRg.MergeFrom(other.SpecifiedRg);
      }
      if (other.handMission_ != null) {
        if (handMission_ == null) {
          HandMission = new global::Texas.Protocol.HandMissionConfig();
        }
        HandMission.MergeFrom(other.HandMission);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            if (storm_ == null) {
              Storm = new global::Texas.Protocol.ChipStormConfig();
            }
            input.ReadMessage(Storm);
            break;
          }
          case 26: {
            if (ringGame_ == null) {
              RingGame = new global::Texas.Protocol.RingGameActivityConfig();
            }
            input.ReadMessage(RingGame);
            break;
          }
          case 34: {
            if (mtt_ == null) {
              Mtt = new global::Texas.Protocol.MttActivityConfig();
            }
            input.ReadMessage(Mtt);
            break;
          }
          case 42: {
            if (specifiedRg_ == null) {
              SpecifiedRg = new global::Texas.Protocol.SpecifiedRGActivityConfig();
            }
            input.ReadMessage(SpecifiedRg);
            break;
          }
          case 50: {
            if (handMission_ == null) {
              HandMission = new global::Texas.Protocol.HandMissionConfig();
            }
            input.ReadMessage(HandMission);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            if (storm_ == null) {
              Storm = new global::Texas.Protocol.ChipStormConfig();
            }
            input.ReadMessage(Storm);
            break;
          }
          case 26: {
            if (ringGame_ == null) {
              RingGame = new global::Texas.Protocol.RingGameActivityConfig();
            }
            input.ReadMessage(RingGame);
            break;
          }
          case 34: {
            if (mtt_ == null) {
              Mtt = new global::Texas.Protocol.MttActivityConfig();
            }
            input.ReadMessage(Mtt);
            break;
          }
          case 42: {
            if (specifiedRg_ == null) {
              SpecifiedRg = new global::Texas.Protocol.SpecifiedRGActivityConfig();
            }
            input.ReadMessage(SpecifiedRg);
            break;
          }
          case 50: {
            if (handMission_ == null) {
              HandMission = new global::Texas.Protocol.HandMissionConfig();
            }
            input.ReadMessage(HandMission);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// </summary>
  public sealed partial class ActivityRecordListREQ : pb::IMessage<ActivityRecordListREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActivityRecordListREQ> _parser = new pb::MessageParser<ActivityRecordListREQ>(() => new ActivityRecordListREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActivityRecordListREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityRecordListREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityRecordListREQ(ActivityRecordListREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      superLeagueid_ = other.superLeagueid_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityRecordListREQ Clone() {
      return new ActivityRecordListREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 1) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 2;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 2) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "super_leagueid" field.</summary>
    public const int SuperLeagueidFieldNumber = 3;
    private readonly static int SuperLeagueidDefaultValue = 0;

    private int superLeagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueid {
      get { if ((_hasBits0 & 4) != 0) { return superLeagueid_; } else { return SuperLeagueidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        superLeagueid_ = value;
      }
    }
    /// <summary>Gets whether the "super_leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "super_leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    /// 1 not finish, 2 aready finish or cancel, 3 unfinished, 4 all within 30 days
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 8) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActivityRecordListREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActivityRecordListREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (SuperLeagueid != other.SuperLeagueid) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasSuperLeagueid) hash ^= SuperLeagueid.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(8);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(24);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasType) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(8);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(24);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasType) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasSuperLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueid);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActivityRecordListREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasSuperLeagueid) {
        SuperLeagueid = other.SuperLeagueid;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Clubid = input.ReadInt32();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Clubid = input.ReadInt32();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ActivityRecordListRSP : pb::IMessage<ActivityRecordListRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActivityRecordListRSP> _parser = new pb::MessageParser<ActivityRecordListRSP>(() => new ActivityRecordListRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActivityRecordListRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityRecordListRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityRecordListRSP(ActivityRecordListRSP other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      code_ = other.code_;
      configs_ = other.configs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityRecordListRSP Clone() {
      return new ActivityRecordListRSP(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 2) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "configs" field.</summary>
    public const int ConfigsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ActivityRecord> _repeated_configs_codec
        = pb::FieldCodec.ForMessage(26, global::Texas.Protocol.ActivityRecord.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ActivityRecord> configs_ = new pbc::RepeatedField<global::Texas.Protocol.ActivityRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ActivityRecord> Configs {
      get { return configs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActivityRecordListRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActivityRecordListRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Code != other.Code) return false;
      if(!configs_.Equals(other.configs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasCode) hash ^= Code.GetHashCode();
      hash ^= configs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasCode) {
        output.WriteRawTag(16);
        output.WriteInt32(Code);
      }
      configs_.WriteTo(output, _repeated_configs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasCode) {
        output.WriteRawTag(16);
        output.WriteInt32(Code);
      }
      configs_.WriteTo(ref output, _repeated_configs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      size += configs_.CalculateSize(_repeated_configs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActivityRecordListRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      configs_.Add(other.configs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            Code = input.ReadInt32();
            break;
          }
          case 26: {
            configs_.AddEntriesFrom(input, _repeated_configs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            Code = input.ReadInt32();
            break;
          }
          case 26: {
            configs_.AddEntriesFrom(ref input, _repeated_configs_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ActivityModulesREQ : pb::IMessage<ActivityModulesREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActivityModulesREQ> _parser = new pb::MessageParser<ActivityModulesREQ>(() => new ActivityModulesREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActivityModulesREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityModulesREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityModulesREQ(ActivityModulesREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityModulesREQ Clone() {
      return new ActivityModulesREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 1) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActivityModulesREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActivityModulesREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(8);
        output.WriteInt32(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(8);
        output.WriteInt32(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActivityModulesREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Clubid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Clubid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ActivityModulesRSP : pb::IMessage<ActivityModulesRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActivityModulesRSP> _parser = new pb::MessageParser<ActivityModulesRSP>(() => new ActivityModulesRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActivityModulesRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityModulesRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityModulesRSP(ActivityModulesRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      clubid_ = other.clubid_;
      storms_ = other.storms_.Clone();
      ringGames_ = other.ringGames_.Clone();
      mtts_ = other.mtts_.Clone();
      specifiedRgs_ = other.specifiedRgs_.Clone();
      handMission_ = other.handMission_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityModulesRSP Clone() {
      return new ActivityModulesRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 2;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 2) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "storms" field.</summary>
    public const int StormsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ChipStormConfig> _repeated_storms_codec
        = pb::FieldCodec.ForMessage(26, global::Texas.Protocol.ChipStormConfig.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ChipStormConfig> storms_ = new pbc::RepeatedField<global::Texas.Protocol.ChipStormConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ChipStormConfig> Storms {
      get { return storms_; }
    }

    /// <summary>Field number for the "ring_games" field.</summary>
    public const int RingGamesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Texas.Protocol.RingGameActivityConfig> _repeated_ringGames_codec
        = pb::FieldCodec.ForMessage(34, global::Texas.Protocol.RingGameActivityConfig.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.RingGameActivityConfig> ringGames_ = new pbc::RepeatedField<global::Texas.Protocol.RingGameActivityConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.RingGameActivityConfig> RingGames {
      get { return ringGames_; }
    }

    /// <summary>Field number for the "mtts" field.</summary>
    public const int MttsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Texas.Protocol.MttActivityConfig> _repeated_mtts_codec
        = pb::FieldCodec.ForMessage(42, global::Texas.Protocol.MttActivityConfig.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.MttActivityConfig> mtts_ = new pbc::RepeatedField<global::Texas.Protocol.MttActivityConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.MttActivityConfig> Mtts {
      get { return mtts_; }
    }

    /// <summary>Field number for the "specified_rgs" field.</summary>
    public const int SpecifiedRgsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Texas.Protocol.SpecifiedRGActivityConfig> _repeated_specifiedRgs_codec
        = pb::FieldCodec.ForMessage(50, global::Texas.Protocol.SpecifiedRGActivityConfig.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.SpecifiedRGActivityConfig> specifiedRgs_ = new pbc::RepeatedField<global::Texas.Protocol.SpecifiedRGActivityConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.SpecifiedRGActivityConfig> SpecifiedRgs {
      get { return specifiedRgs_; }
    }

    /// <summary>Field number for the "hand_mission" field.</summary>
    public const int HandMissionFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Texas.Protocol.HandMissionConfig> _repeated_handMission_codec
        = pb::FieldCodec.ForMessage(58, global::Texas.Protocol.HandMissionConfig.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.HandMissionConfig> handMission_ = new pbc::RepeatedField<global::Texas.Protocol.HandMissionConfig>();
    /// <summary>
    /// 手牌任務配置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.HandMissionConfig> HandMission {
      get { return handMission_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActivityModulesRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActivityModulesRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Clubid != other.Clubid) return false;
      if(!storms_.Equals(other.storms_)) return false;
      if(!ringGames_.Equals(other.ringGames_)) return false;
      if(!mtts_.Equals(other.mtts_)) return false;
      if(!specifiedRgs_.Equals(other.specifiedRgs_)) return false;
      if(!handMission_.Equals(other.handMission_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      hash ^= storms_.GetHashCode();
      hash ^= ringGames_.GetHashCode();
      hash ^= mtts_.GetHashCode();
      hash ^= specifiedRgs_.GetHashCode();
      hash ^= handMission_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasClubid) {
        output.WriteRawTag(16);
        output.WriteInt32(Clubid);
      }
      storms_.WriteTo(output, _repeated_storms_codec);
      ringGames_.WriteTo(output, _repeated_ringGames_codec);
      mtts_.WriteTo(output, _repeated_mtts_codec);
      specifiedRgs_.WriteTo(output, _repeated_specifiedRgs_codec);
      handMission_.WriteTo(output, _repeated_handMission_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasClubid) {
        output.WriteRawTag(16);
        output.WriteInt32(Clubid);
      }
      storms_.WriteTo(ref output, _repeated_storms_codec);
      ringGames_.WriteTo(ref output, _repeated_ringGames_codec);
      mtts_.WriteTo(ref output, _repeated_mtts_codec);
      specifiedRgs_.WriteTo(ref output, _repeated_specifiedRgs_codec);
      handMission_.WriteTo(ref output, _repeated_handMission_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      size += storms_.CalculateSize(_repeated_storms_codec);
      size += ringGames_.CalculateSize(_repeated_ringGames_codec);
      size += mtts_.CalculateSize(_repeated_mtts_codec);
      size += specifiedRgs_.CalculateSize(_repeated_specifiedRgs_codec);
      size += handMission_.CalculateSize(_repeated_handMission_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActivityModulesRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      storms_.Add(other.storms_);
      ringGames_.Add(other.ringGames_);
      mtts_.Add(other.mtts_);
      specifiedRgs_.Add(other.specifiedRgs_);
      handMission_.Add(other.handMission_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Clubid = input.ReadInt32();
            break;
          }
          case 26: {
            storms_.AddEntriesFrom(input, _repeated_storms_codec);
            break;
          }
          case 34: {
            ringGames_.AddEntriesFrom(input, _repeated_ringGames_codec);
            break;
          }
          case 42: {
            mtts_.AddEntriesFrom(input, _repeated_mtts_codec);
            break;
          }
          case 50: {
            specifiedRgs_.AddEntriesFrom(input, _repeated_specifiedRgs_codec);
            break;
          }
          case 58: {
            handMission_.AddEntriesFrom(input, _repeated_handMission_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Clubid = input.ReadInt32();
            break;
          }
          case 26: {
            storms_.AddEntriesFrom(ref input, _repeated_storms_codec);
            break;
          }
          case 34: {
            ringGames_.AddEntriesFrom(ref input, _repeated_ringGames_codec);
            break;
          }
          case 42: {
            mtts_.AddEntriesFrom(ref input, _repeated_mtts_codec);
            break;
          }
          case 50: {
            specifiedRgs_.AddEntriesFrom(ref input, _repeated_specifiedRgs_codec);
            break;
          }
          case 58: {
            handMission_.AddEntriesFrom(ref input, _repeated_handMission_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ActivityModuleOpREQ : pb::IMessage<ActivityModuleOpREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActivityModuleOpREQ> _parser = new pb::MessageParser<ActivityModuleOpREQ>(() => new ActivityModuleOpREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActivityModuleOpREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityModuleOpREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityModuleOpREQ(ActivityModuleOpREQ other) : this() {
      _hasBits0 = other._hasBits0;
      action_ = other.action_;
      type_ = other.type_;
      clubid_ = other.clubid_;
      storm_ = other.storm_ != null ? other.storm_.Clone() : null;
      ringGame_ = other.ringGame_ != null ? other.ringGame_.Clone() : null;
      mtt_ = other.mtt_ != null ? other.mtt_.Clone() : null;
      specifiedRg_ = other.specifiedRg_ != null ? other.specifiedRg_.Clone() : null;
      handMission_ = other.handMission_ != null ? other.handMission_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityModuleOpREQ Clone() {
      return new ActivityModuleOpREQ(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private readonly static int ActionDefaultValue = 0;

    private int action_;
    /// <summary>
    /// 0 create 1 modify 2 delete
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Action {
      get { if ((_hasBits0 & 1) != 0) { return action_; } else { return ActionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        action_ = value;
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAction {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    /// 1 ppchipstorm  2 ring game activity
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 2) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 3;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 4) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "storm" field.</summary>
    public const int StormFieldNumber = 4;
    private global::Texas.Protocol.ChipStormConfig storm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.ChipStormConfig Storm {
      get { return storm_; }
      set {
        storm_ = value;
      }
    }

    /// <summary>Field number for the "ring_game" field.</summary>
    public const int RingGameFieldNumber = 5;
    private global::Texas.Protocol.RingGameActivityConfig ringGame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RingGameActivityConfig RingGame {
      get { return ringGame_; }
      set {
        ringGame_ = value;
      }
    }

    /// <summary>Field number for the "mtt" field.</summary>
    public const int MttFieldNumber = 6;
    private global::Texas.Protocol.MttActivityConfig mtt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.MttActivityConfig Mtt {
      get { return mtt_; }
      set {
        mtt_ = value;
      }
    }

    /// <summary>Field number for the "specified_rg" field.</summary>
    public const int SpecifiedRgFieldNumber = 7;
    private global::Texas.Protocol.SpecifiedRGActivityConfig specifiedRg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.SpecifiedRGActivityConfig SpecifiedRg {
      get { return specifiedRg_; }
      set {
        specifiedRg_ = value;
      }
    }

    /// <summary>Field number for the "hand_mission" field.</summary>
    public const int HandMissionFieldNumber = 8;
    private global::Texas.Protocol.HandMissionConfig handMission_;
    /// <summary>
    /// 手牌任務配置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.HandMissionConfig HandMission {
      get { return handMission_; }
      set {
        handMission_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActivityModuleOpREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActivityModuleOpREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (Type != other.Type) return false;
      if (Clubid != other.Clubid) return false;
      if (!object.Equals(Storm, other.Storm)) return false;
      if (!object.Equals(RingGame, other.RingGame)) return false;
      if (!object.Equals(Mtt, other.Mtt)) return false;
      if (!object.Equals(SpecifiedRg, other.SpecifiedRg)) return false;
      if (!object.Equals(HandMission, other.HandMission)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAction) hash ^= Action.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (storm_ != null) hash ^= Storm.GetHashCode();
      if (ringGame_ != null) hash ^= RingGame.GetHashCode();
      if (mtt_ != null) hash ^= Mtt.GetHashCode();
      if (specifiedRg_ != null) hash ^= SpecifiedRg.GetHashCode();
      if (handMission_ != null) hash ^= HandMission.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAction) {
        output.WriteRawTag(8);
        output.WriteInt32(Action);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (HasClubid) {
        output.WriteRawTag(24);
        output.WriteInt32(Clubid);
      }
      if (storm_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Storm);
      }
      if (ringGame_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RingGame);
      }
      if (mtt_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Mtt);
      }
      if (specifiedRg_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(SpecifiedRg);
      }
      if (handMission_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(HandMission);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAction) {
        output.WriteRawTag(8);
        output.WriteInt32(Action);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (HasClubid) {
        output.WriteRawTag(24);
        output.WriteInt32(Clubid);
      }
      if (storm_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Storm);
      }
      if (ringGame_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RingGame);
      }
      if (mtt_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Mtt);
      }
      if (specifiedRg_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(SpecifiedRg);
      }
      if (handMission_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(HandMission);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Action);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (storm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Storm);
      }
      if (ringGame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RingGame);
      }
      if (mtt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mtt);
      }
      if (specifiedRg_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpecifiedRg);
      }
      if (handMission_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HandMission);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActivityModuleOpREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.storm_ != null) {
        if (storm_ == null) {
          Storm = new global::Texas.Protocol.ChipStormConfig();
        }
        Storm.MergeFrom(other.Storm);
      }
      if (other.ringGame_ != null) {
        if (ringGame_ == null) {
          RingGame = new global::Texas.Protocol.RingGameActivityConfig();
        }
        RingGame.MergeFrom(other.RingGame);
      }
      if (other.mtt_ != null) {
        if (mtt_ == null) {
          Mtt = new global::Texas.Protocol.MttActivityConfig();
        }
        Mtt.MergeFrom(other.Mtt);
      }
      if (other.specifiedRg_ != null) {
        if (specifiedRg_ == null) {
          SpecifiedRg = new global::Texas.Protocol.SpecifiedRGActivityConfig();
        }
        SpecifiedRg.MergeFrom(other.SpecifiedRg);
      }
      if (other.handMission_ != null) {
        if (handMission_ == null) {
          HandMission = new global::Texas.Protocol.HandMissionConfig();
        }
        HandMission.MergeFrom(other.HandMission);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Action = input.ReadInt32();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 24: {
            Clubid = input.ReadInt32();
            break;
          }
          case 34: {
            if (storm_ == null) {
              Storm = new global::Texas.Protocol.ChipStormConfig();
            }
            input.ReadMessage(Storm);
            break;
          }
          case 42: {
            if (ringGame_ == null) {
              RingGame = new global::Texas.Protocol.RingGameActivityConfig();
            }
            input.ReadMessage(RingGame);
            break;
          }
          case 50: {
            if (mtt_ == null) {
              Mtt = new global::Texas.Protocol.MttActivityConfig();
            }
            input.ReadMessage(Mtt);
            break;
          }
          case 58: {
            if (specifiedRg_ == null) {
              SpecifiedRg = new global::Texas.Protocol.SpecifiedRGActivityConfig();
            }
            input.ReadMessage(SpecifiedRg);
            break;
          }
          case 66: {
            if (handMission_ == null) {
              HandMission = new global::Texas.Protocol.HandMissionConfig();
            }
            input.ReadMessage(HandMission);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Action = input.ReadInt32();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 24: {
            Clubid = input.ReadInt32();
            break;
          }
          case 34: {
            if (storm_ == null) {
              Storm = new global::Texas.Protocol.ChipStormConfig();
            }
            input.ReadMessage(Storm);
            break;
          }
          case 42: {
            if (ringGame_ == null) {
              RingGame = new global::Texas.Protocol.RingGameActivityConfig();
            }
            input.ReadMessage(RingGame);
            break;
          }
          case 50: {
            if (mtt_ == null) {
              Mtt = new global::Texas.Protocol.MttActivityConfig();
            }
            input.ReadMessage(Mtt);
            break;
          }
          case 58: {
            if (specifiedRg_ == null) {
              SpecifiedRg = new global::Texas.Protocol.SpecifiedRGActivityConfig();
            }
            input.ReadMessage(SpecifiedRg);
            break;
          }
          case 66: {
            if (handMission_ == null) {
              HandMission = new global::Texas.Protocol.HandMissionConfig();
            }
            input.ReadMessage(HandMission);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ActivityModuleOpRSP : pb::IMessage<ActivityModuleOpRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActivityModuleOpRSP> _parser = new pb::MessageParser<ActivityModuleOpRSP>(() => new ActivityModuleOpRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActivityModuleOpRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityModuleOpRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityModuleOpRSP(ActivityModuleOpRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      action_ = other.action_;
      type_ = other.type_;
      clubid_ = other.clubid_;
      storm_ = other.storm_ != null ? other.storm_.Clone() : null;
      ringGame_ = other.ringGame_ != null ? other.ringGame_.Clone() : null;
      mtt_ = other.mtt_ != null ? other.mtt_.Clone() : null;
      specifiedRg_ = other.specifiedRg_ != null ? other.specifiedRg_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivityModuleOpRSP Clone() {
      return new ActivityModuleOpRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// 0 success
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 2;
    private readonly static int ActionDefaultValue = 0;

    private int action_;
    /// <summary>
    /// 0 create 1 modify 2 delete
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Action {
      get { if ((_hasBits0 & 2) != 0) { return action_; } else { return ActionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        action_ = value;
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAction {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    /// 1 ppchipstorm  2 ring game activity
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 4) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 4;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 8) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "storm" field.</summary>
    public const int StormFieldNumber = 5;
    private global::Texas.Protocol.ChipStormConfig storm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.ChipStormConfig Storm {
      get { return storm_; }
      set {
        storm_ = value;
      }
    }

    /// <summary>Field number for the "ring_game" field.</summary>
    public const int RingGameFieldNumber = 6;
    private global::Texas.Protocol.RingGameActivityConfig ringGame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RingGameActivityConfig RingGame {
      get { return ringGame_; }
      set {
        ringGame_ = value;
      }
    }

    /// <summary>Field number for the "mtt" field.</summary>
    public const int MttFieldNumber = 7;
    private global::Texas.Protocol.MttActivityConfig mtt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.MttActivityConfig Mtt {
      get { return mtt_; }
      set {
        mtt_ = value;
      }
    }

    /// <summary>Field number for the "specified_rg" field.</summary>
    public const int SpecifiedRgFieldNumber = 8;
    private global::Texas.Protocol.SpecifiedRGActivityConfig specifiedRg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.SpecifiedRGActivityConfig SpecifiedRg {
      get { return specifiedRg_; }
      set {
        specifiedRg_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActivityModuleOpRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActivityModuleOpRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Action != other.Action) return false;
      if (Type != other.Type) return false;
      if (Clubid != other.Clubid) return false;
      if (!object.Equals(Storm, other.Storm)) return false;
      if (!object.Equals(RingGame, other.RingGame)) return false;
      if (!object.Equals(Mtt, other.Mtt)) return false;
      if (!object.Equals(SpecifiedRg, other.SpecifiedRg)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasAction) hash ^= Action.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (storm_ != null) hash ^= Storm.GetHashCode();
      if (ringGame_ != null) hash ^= RingGame.GetHashCode();
      if (mtt_ != null) hash ^= Mtt.GetHashCode();
      if (specifiedRg_ != null) hash ^= SpecifiedRg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasAction) {
        output.WriteRawTag(16);
        output.WriteInt32(Action);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (HasClubid) {
        output.WriteRawTag(32);
        output.WriteInt32(Clubid);
      }
      if (storm_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Storm);
      }
      if (ringGame_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RingGame);
      }
      if (mtt_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Mtt);
      }
      if (specifiedRg_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(SpecifiedRg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasAction) {
        output.WriteRawTag(16);
        output.WriteInt32(Action);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (HasClubid) {
        output.WriteRawTag(32);
        output.WriteInt32(Clubid);
      }
      if (storm_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Storm);
      }
      if (ringGame_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RingGame);
      }
      if (mtt_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Mtt);
      }
      if (specifiedRg_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(SpecifiedRg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Action);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (storm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Storm);
      }
      if (ringGame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RingGame);
      }
      if (mtt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mtt);
      }
      if (specifiedRg_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpecifiedRg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActivityModuleOpRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.storm_ != null) {
        if (storm_ == null) {
          Storm = new global::Texas.Protocol.ChipStormConfig();
        }
        Storm.MergeFrom(other.Storm);
      }
      if (other.ringGame_ != null) {
        if (ringGame_ == null) {
          RingGame = new global::Texas.Protocol.RingGameActivityConfig();
        }
        RingGame.MergeFrom(other.RingGame);
      }
      if (other.mtt_ != null) {
        if (mtt_ == null) {
          Mtt = new global::Texas.Protocol.MttActivityConfig();
        }
        Mtt.MergeFrom(other.Mtt);
      }
      if (other.specifiedRg_ != null) {
        if (specifiedRg_ == null) {
          SpecifiedRg = new global::Texas.Protocol.SpecifiedRGActivityConfig();
        }
        SpecifiedRg.MergeFrom(other.SpecifiedRg);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Action = input.ReadInt32();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
          case 32: {
            Clubid = input.ReadInt32();
            break;
          }
          case 42: {
            if (storm_ == null) {
              Storm = new global::Texas.Protocol.ChipStormConfig();
            }
            input.ReadMessage(Storm);
            break;
          }
          case 50: {
            if (ringGame_ == null) {
              RingGame = new global::Texas.Protocol.RingGameActivityConfig();
            }
            input.ReadMessage(RingGame);
            break;
          }
          case 58: {
            if (mtt_ == null) {
              Mtt = new global::Texas.Protocol.MttActivityConfig();
            }
            input.ReadMessage(Mtt);
            break;
          }
          case 66: {
            if (specifiedRg_ == null) {
              SpecifiedRg = new global::Texas.Protocol.SpecifiedRGActivityConfig();
            }
            input.ReadMessage(SpecifiedRg);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Action = input.ReadInt32();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
          case 32: {
            Clubid = input.ReadInt32();
            break;
          }
          case 42: {
            if (storm_ == null) {
              Storm = new global::Texas.Protocol.ChipStormConfig();
            }
            input.ReadMessage(Storm);
            break;
          }
          case 50: {
            if (ringGame_ == null) {
              RingGame = new global::Texas.Protocol.RingGameActivityConfig();
            }
            input.ReadMessage(RingGame);
            break;
          }
          case 58: {
            if (mtt_ == null) {
              Mtt = new global::Texas.Protocol.MttActivityConfig();
            }
            input.ReadMessage(Mtt);
            break;
          }
          case 66: {
            if (specifiedRg_ == null) {
              SpecifiedRg = new global::Texas.Protocol.SpecifiedRGActivityConfig();
            }
            input.ReadMessage(SpecifiedRg);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserSelfActivityRebate : pb::IMessage<UserSelfActivityRebate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserSelfActivityRebate> _parser = new pb::MessageParser<UserSelfActivityRebate>(() => new UserSelfActivityRebate());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserSelfActivityRebate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserSelfActivityRebate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserSelfActivityRebate(UserSelfActivityRebate other) : this() {
      _hasBits0 = other._hasBits0;
      rebate_ = other.rebate_;
      rank_ = other.rank_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserSelfActivityRebate Clone() {
      return new UserSelfActivityRebate(this);
    }

    /// <summary>Field number for the "rebate" field.</summary>
    public const int RebateFieldNumber = 1;
    private readonly static long RebateDefaultValue = 0L;

    private long rebate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Rebate {
      get { if ((_hasBits0 & 1) != 0) { return rebate_; } else { return RebateDefaultValue; } }
      set {
        _hasBits0 |= 1;
        rebate_ = value;
      }
    }
    /// <summary>Gets whether the "rebate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRebate {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "rebate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRebate() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 2;
    private readonly static int RankDefaultValue = 0;

    private int rank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rank {
      get { if ((_hasBits0 & 2) != 0) { return rank_; } else { return RankDefaultValue; } }
      set {
        _hasBits0 |= 2;
        rank_ = value;
      }
    }
    /// <summary>Gets whether the "rank" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRank {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "rank" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRank() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserSelfActivityRebate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserSelfActivityRebate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rebate != other.Rebate) return false;
      if (Rank != other.Rank) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRebate) hash ^= Rebate.GetHashCode();
      if (HasRank) hash ^= Rank.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRebate) {
        output.WriteRawTag(8);
        output.WriteInt64(Rebate);
      }
      if (HasRank) {
        output.WriteRawTag(16);
        output.WriteInt32(Rank);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRebate) {
        output.WriteRawTag(8);
        output.WriteInt64(Rebate);
      }
      if (HasRank) {
        output.WriteRawTag(16);
        output.WriteInt32(Rank);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRebate) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Rebate);
      }
      if (HasRank) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserSelfActivityRebate other) {
      if (other == null) {
        return;
      }
      if (other.HasRebate) {
        Rebate = other.Rebate;
      }
      if (other.HasRank) {
        Rank = other.Rank;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Rebate = input.ReadInt64();
            break;
          }
          case 16: {
            Rank = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Rebate = input.ReadInt64();
            break;
          }
          case 16: {
            Rank = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ActivitySimpleInfo : pb::IMessage<ActivitySimpleInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActivitySimpleInfo> _parser = new pb::MessageParser<ActivitySimpleInfo>(() => new ActivitySimpleInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActivitySimpleInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivitySimpleInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivitySimpleInfo(ActivitySimpleInfo other) : this() {
      _hasBits0 = other._hasBits0;
      activityNo_ = other.activityNo_;
      beginTime_ = other.beginTime_;
      leftTime_ = other.leftTime_;
      endTime_ = other.endTime_;
      nowTime_ = other.nowTime_;
      totalReward_ = other.totalReward_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActivitySimpleInfo Clone() {
      return new ActivitySimpleInfo(this);
    }

    /// <summary>Field number for the "activity_no" field.</summary>
    public const int ActivityNoFieldNumber = 1;
    private readonly static long ActivityNoDefaultValue = 0L;

    private long activityNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ActivityNo {
      get { if ((_hasBits0 & 1) != 0) { return activityNo_; } else { return ActivityNoDefaultValue; } }
      set {
        _hasBits0 |= 1;
        activityNo_ = value;
      }
    }
    /// <summary>Gets whether the "activity_no" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActivityNo {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "activity_no" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActivityNo() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "begin_time" field.</summary>
    public const int BeginTimeFieldNumber = 2;
    private readonly static long BeginTimeDefaultValue = 0L;

    private long beginTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BeginTime {
      get { if ((_hasBits0 & 2) != 0) { return beginTime_; } else { return BeginTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        beginTime_ = value;
      }
    }
    /// <summary>Gets whether the "begin_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBeginTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "begin_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBeginTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "left_time" field.</summary>
    public const int LeftTimeFieldNumber = 3;
    private readonly static long LeftTimeDefaultValue = 0L;

    private long leftTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LeftTime {
      get { if ((_hasBits0 & 4) != 0) { return leftTime_; } else { return LeftTimeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        leftTime_ = value;
      }
    }
    /// <summary>Gets whether the "left_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeftTime {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "left_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeftTime() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 4;
    private readonly static long EndTimeDefaultValue = 0L;

    private long endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndTime {
      get { if ((_hasBits0 & 8) != 0) { return endTime_; } else { return EndTimeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        endTime_ = value;
      }
    }
    /// <summary>Gets whether the "end_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndTime {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "end_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndTime() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "now_time" field.</summary>
    public const int NowTimeFieldNumber = 5;
    private readonly static long NowTimeDefaultValue = 0L;

    private long nowTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NowTime {
      get { if ((_hasBits0 & 16) != 0) { return nowTime_; } else { return NowTimeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        nowTime_ = value;
      }
    }
    /// <summary>Gets whether the "now_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNowTime {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "now_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNowTime() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "total_reward" field.</summary>
    public const int TotalRewardFieldNumber = 6;
    private readonly static long TotalRewardDefaultValue = 0L;

    private long totalReward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalReward {
      get { if ((_hasBits0 & 32) != 0) { return totalReward_; } else { return TotalRewardDefaultValue; } }
      set {
        _hasBits0 |= 32;
        totalReward_ = value;
      }
    }
    /// <summary>Gets whether the "total_reward" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalReward {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "total_reward" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalReward() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActivitySimpleInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActivitySimpleInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityNo != other.ActivityNo) return false;
      if (BeginTime != other.BeginTime) return false;
      if (LeftTime != other.LeftTime) return false;
      if (EndTime != other.EndTime) return false;
      if (NowTime != other.NowTime) return false;
      if (TotalReward != other.TotalReward) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasActivityNo) hash ^= ActivityNo.GetHashCode();
      if (HasBeginTime) hash ^= BeginTime.GetHashCode();
      if (HasLeftTime) hash ^= LeftTime.GetHashCode();
      if (HasEndTime) hash ^= EndTime.GetHashCode();
      if (HasNowTime) hash ^= NowTime.GetHashCode();
      if (HasTotalReward) hash ^= TotalReward.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasActivityNo) {
        output.WriteRawTag(8);
        output.WriteInt64(ActivityNo);
      }
      if (HasBeginTime) {
        output.WriteRawTag(16);
        output.WriteInt64(BeginTime);
      }
      if (HasLeftTime) {
        output.WriteRawTag(24);
        output.WriteInt64(LeftTime);
      }
      if (HasEndTime) {
        output.WriteRawTag(32);
        output.WriteInt64(EndTime);
      }
      if (HasNowTime) {
        output.WriteRawTag(40);
        output.WriteInt64(NowTime);
      }
      if (HasTotalReward) {
        output.WriteRawTag(48);
        output.WriteInt64(TotalReward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasActivityNo) {
        output.WriteRawTag(8);
        output.WriteInt64(ActivityNo);
      }
      if (HasBeginTime) {
        output.WriteRawTag(16);
        output.WriteInt64(BeginTime);
      }
      if (HasLeftTime) {
        output.WriteRawTag(24);
        output.WriteInt64(LeftTime);
      }
      if (HasEndTime) {
        output.WriteRawTag(32);
        output.WriteInt64(EndTime);
      }
      if (HasNowTime) {
        output.WriteRawTag(40);
        output.WriteInt64(NowTime);
      }
      if (HasTotalReward) {
        output.WriteRawTag(48);
        output.WriteInt64(TotalReward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasActivityNo) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ActivityNo);
      }
      if (HasBeginTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BeginTime);
      }
      if (HasLeftTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LeftTime);
      }
      if (HasEndTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime);
      }
      if (HasNowTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NowTime);
      }
      if (HasTotalReward) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalReward);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActivitySimpleInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasActivityNo) {
        ActivityNo = other.ActivityNo;
      }
      if (other.HasBeginTime) {
        BeginTime = other.BeginTime;
      }
      if (other.HasLeftTime) {
        LeftTime = other.LeftTime;
      }
      if (other.HasEndTime) {
        EndTime = other.EndTime;
      }
      if (other.HasNowTime) {
        NowTime = other.NowTime;
      }
      if (other.HasTotalReward) {
        TotalReward = other.TotalReward;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ActivityNo = input.ReadInt64();
            break;
          }
          case 16: {
            BeginTime = input.ReadInt64();
            break;
          }
          case 24: {
            LeftTime = input.ReadInt64();
            break;
          }
          case 32: {
            EndTime = input.ReadInt64();
            break;
          }
          case 40: {
            NowTime = input.ReadInt64();
            break;
          }
          case 48: {
            TotalReward = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ActivityNo = input.ReadInt64();
            break;
          }
          case 16: {
            BeginTime = input.ReadInt64();
            break;
          }
          case 24: {
            LeftTime = input.ReadInt64();
            break;
          }
          case 32: {
            EndTime = input.ReadInt64();
            break;
          }
          case 40: {
            NowTime = input.ReadInt64();
            break;
          }
          case 48: {
            TotalReward = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// </summary>
  public sealed partial class ClubActivityInfoREQ : pb::IMessage<ClubActivityInfoREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubActivityInfoREQ> _parser = new pb::MessageParser<ClubActivityInfoREQ>(() => new ClubActivityInfoREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubActivityInfoREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubActivityInfoREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubActivityInfoREQ(ClubActivityInfoREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      superLeagueid_ = other.superLeagueid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubActivityInfoREQ Clone() {
      return new ClubActivityInfoREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 1) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 2;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 2) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "super_leagueid" field.</summary>
    public const int SuperLeagueidFieldNumber = 3;
    private readonly static int SuperLeagueidDefaultValue = 0;

    private int superLeagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueid {
      get { if ((_hasBits0 & 4) != 0) { return superLeagueid_; } else { return SuperLeagueidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        superLeagueid_ = value;
      }
    }
    /// <summary>Gets whether the "super_leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "super_leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueid() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubActivityInfoREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubActivityInfoREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (SuperLeagueid != other.SuperLeagueid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasSuperLeagueid) hash ^= SuperLeagueid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(8);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(24);
        output.WriteInt32(SuperLeagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(8);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(24);
        output.WriteInt32(SuperLeagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasSuperLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubActivityInfoREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasSuperLeagueid) {
        SuperLeagueid = other.SuperLeagueid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Clubid = input.ReadInt32();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Clubid = input.ReadInt32();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubActivityInfoRSP : pb::IMessage<ClubActivityInfoRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubActivityInfoRSP> _parser = new pb::MessageParser<ClubActivityInfoRSP>(() => new ClubActivityInfoRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubActivityInfoRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubActivityInfoRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubActivityInfoRSP(ClubActivityInfoRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      storm_ = other.storm_ != null ? other.storm_.Clone() : null;
      ringGame_ = other.ringGame_ != null ? other.ringGame_.Clone() : null;
      mtt_ = other.mtt_ != null ? other.mtt_.Clone() : null;
      specifiedRg_ = other.specifiedRg_ != null ? other.specifiedRg_.Clone() : null;
      handMission_ = other.handMission_ != null ? other.handMission_.Clone() : null;
      customizedRg_ = other.customizedRg_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubActivityInfoRSP Clone() {
      return new ClubActivityInfoRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "storm" field.</summary>
    public const int StormFieldNumber = 2;
    private global::Texas.Protocol.ActivitySimpleInfo storm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.ActivitySimpleInfo Storm {
      get { return storm_; }
      set {
        storm_ = value;
      }
    }

    /// <summary>Field number for the "ring_game" field.</summary>
    public const int RingGameFieldNumber = 3;
    private global::Texas.Protocol.ActivitySimpleInfo ringGame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.ActivitySimpleInfo RingGame {
      get { return ringGame_; }
      set {
        ringGame_ = value;
      }
    }

    /// <summary>Field number for the "mtt" field.</summary>
    public const int MttFieldNumber = 4;
    private global::Texas.Protocol.ActivitySimpleInfo mtt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.ActivitySimpleInfo Mtt {
      get { return mtt_; }
      set {
        mtt_ = value;
      }
    }

    /// <summary>Field number for the "specified_rg" field.</summary>
    public const int SpecifiedRgFieldNumber = 5;
    private global::Texas.Protocol.ActivitySimpleInfo specifiedRg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.ActivitySimpleInfo SpecifiedRg {
      get { return specifiedRg_; }
      set {
        specifiedRg_ = value;
      }
    }

    /// <summary>Field number for the "hand_mission" field.</summary>
    public const int HandMissionFieldNumber = 6;
    private global::Texas.Protocol.HandMissionSimpleInfo handMission_;
    /// <summary>
    /// 手牌任務
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.HandMissionSimpleInfo HandMission {
      get { return handMission_; }
      set {
        handMission_ = value;
      }
    }

    /// <summary>Field number for the "customized_rg" field.</summary>
    public const int CustomizedRgFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ActivitySimpleInfo> _repeated_customizedRg_codec
        = pb::FieldCodec.ForMessage(58, global::Texas.Protocol.ActivitySimpleInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ActivitySimpleInfo> customizedRg_ = new pbc::RepeatedField<global::Texas.Protocol.ActivitySimpleInfo>();
    /// <summary>
    /// 2023四月優化 RG可以開多個
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ActivitySimpleInfo> CustomizedRg {
      get { return customizedRg_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubActivityInfoRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubActivityInfoRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Storm, other.Storm)) return false;
      if (!object.Equals(RingGame, other.RingGame)) return false;
      if (!object.Equals(Mtt, other.Mtt)) return false;
      if (!object.Equals(SpecifiedRg, other.SpecifiedRg)) return false;
      if (!object.Equals(HandMission, other.HandMission)) return false;
      if(!customizedRg_.Equals(other.customizedRg_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (storm_ != null) hash ^= Storm.GetHashCode();
      if (ringGame_ != null) hash ^= RingGame.GetHashCode();
      if (mtt_ != null) hash ^= Mtt.GetHashCode();
      if (specifiedRg_ != null) hash ^= SpecifiedRg.GetHashCode();
      if (handMission_ != null) hash ^= HandMission.GetHashCode();
      hash ^= customizedRg_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (storm_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Storm);
      }
      if (ringGame_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RingGame);
      }
      if (mtt_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Mtt);
      }
      if (specifiedRg_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SpecifiedRg);
      }
      if (handMission_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(HandMission);
      }
      customizedRg_.WriteTo(output, _repeated_customizedRg_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (storm_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Storm);
      }
      if (ringGame_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RingGame);
      }
      if (mtt_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Mtt);
      }
      if (specifiedRg_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SpecifiedRg);
      }
      if (handMission_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(HandMission);
      }
      customizedRg_.WriteTo(ref output, _repeated_customizedRg_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (storm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Storm);
      }
      if (ringGame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RingGame);
      }
      if (mtt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mtt);
      }
      if (specifiedRg_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpecifiedRg);
      }
      if (handMission_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HandMission);
      }
      size += customizedRg_.CalculateSize(_repeated_customizedRg_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubActivityInfoRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.storm_ != null) {
        if (storm_ == null) {
          Storm = new global::Texas.Protocol.ActivitySimpleInfo();
        }
        Storm.MergeFrom(other.Storm);
      }
      if (other.ringGame_ != null) {
        if (ringGame_ == null) {
          RingGame = new global::Texas.Protocol.ActivitySimpleInfo();
        }
        RingGame.MergeFrom(other.RingGame);
      }
      if (other.mtt_ != null) {
        if (mtt_ == null) {
          Mtt = new global::Texas.Protocol.ActivitySimpleInfo();
        }
        Mtt.MergeFrom(other.Mtt);
      }
      if (other.specifiedRg_ != null) {
        if (specifiedRg_ == null) {
          SpecifiedRg = new global::Texas.Protocol.ActivitySimpleInfo();
        }
        SpecifiedRg.MergeFrom(other.SpecifiedRg);
      }
      if (other.handMission_ != null) {
        if (handMission_ == null) {
          HandMission = new global::Texas.Protocol.HandMissionSimpleInfo();
        }
        HandMission.MergeFrom(other.HandMission);
      }
      customizedRg_.Add(other.customizedRg_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (storm_ == null) {
              Storm = new global::Texas.Protocol.ActivitySimpleInfo();
            }
            input.ReadMessage(Storm);
            break;
          }
          case 26: {
            if (ringGame_ == null) {
              RingGame = new global::Texas.Protocol.ActivitySimpleInfo();
            }
            input.ReadMessage(RingGame);
            break;
          }
          case 34: {
            if (mtt_ == null) {
              Mtt = new global::Texas.Protocol.ActivitySimpleInfo();
            }
            input.ReadMessage(Mtt);
            break;
          }
          case 42: {
            if (specifiedRg_ == null) {
              SpecifiedRg = new global::Texas.Protocol.ActivitySimpleInfo();
            }
            input.ReadMessage(SpecifiedRg);
            break;
          }
          case 50: {
            if (handMission_ == null) {
              HandMission = new global::Texas.Protocol.HandMissionSimpleInfo();
            }
            input.ReadMessage(HandMission);
            break;
          }
          case 58: {
            customizedRg_.AddEntriesFrom(input, _repeated_customizedRg_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (storm_ == null) {
              Storm = new global::Texas.Protocol.ActivitySimpleInfo();
            }
            input.ReadMessage(Storm);
            break;
          }
          case 26: {
            if (ringGame_ == null) {
              RingGame = new global::Texas.Protocol.ActivitySimpleInfo();
            }
            input.ReadMessage(RingGame);
            break;
          }
          case 34: {
            if (mtt_ == null) {
              Mtt = new global::Texas.Protocol.ActivitySimpleInfo();
            }
            input.ReadMessage(Mtt);
            break;
          }
          case 42: {
            if (specifiedRg_ == null) {
              SpecifiedRg = new global::Texas.Protocol.ActivitySimpleInfo();
            }
            input.ReadMessage(SpecifiedRg);
            break;
          }
          case 50: {
            if (handMission_ == null) {
              HandMission = new global::Texas.Protocol.HandMissionSimpleInfo();
            }
            input.ReadMessage(HandMission);
            break;
          }
          case 58: {
            customizedRg_.AddEntriesFrom(ref input, _repeated_customizedRg_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///ring game activity
  /// </summary>
  public sealed partial class RingGameActivityInfoREQ : pb::IMessage<RingGameActivityInfoREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RingGameActivityInfoREQ> _parser = new pb::MessageParser<RingGameActivityInfoREQ>(() => new RingGameActivityInfoREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RingGameActivityInfoREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RingGameActivityInfoREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RingGameActivityInfoREQ(RingGameActivityInfoREQ other) : this() {
      _hasBits0 = other._hasBits0;
      activityNo_ = other.activityNo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RingGameActivityInfoREQ Clone() {
      return new RingGameActivityInfoREQ(this);
    }

    /// <summary>Field number for the "activity_no" field.</summary>
    public const int ActivityNoFieldNumber = 1;
    private readonly static long ActivityNoDefaultValue = 0L;

    private long activityNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ActivityNo {
      get { if ((_hasBits0 & 1) != 0) { return activityNo_; } else { return ActivityNoDefaultValue; } }
      set {
        _hasBits0 |= 1;
        activityNo_ = value;
      }
    }
    /// <summary>Gets whether the "activity_no" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActivityNo {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "activity_no" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActivityNo() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RingGameActivityInfoREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RingGameActivityInfoREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityNo != other.ActivityNo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasActivityNo) hash ^= ActivityNo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasActivityNo) {
        output.WriteRawTag(8);
        output.WriteInt64(ActivityNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasActivityNo) {
        output.WriteRawTag(8);
        output.WriteInt64(ActivityNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasActivityNo) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ActivityNo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RingGameActivityInfoREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasActivityNo) {
        ActivityNo = other.ActivityNo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ActivityNo = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ActivityNo = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RingGameActivityInfoRSP : pb::IMessage<RingGameActivityInfoRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RingGameActivityInfoRSP> _parser = new pb::MessageParser<RingGameActivityInfoRSP>(() => new RingGameActivityInfoRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RingGameActivityInfoRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RingGameActivityInfoRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RingGameActivityInfoRSP(RingGameActivityInfoRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      lowBlindRebate_ = other.lowBlindRebate_ != null ? other.lowBlindRebate_.Clone() : null;
      midBlindRebate_ = other.midBlindRebate_ != null ? other.midBlindRebate_.Clone() : null;
      highBlindRebate_ = other.highBlindRebate_ != null ? other.highBlindRebate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RingGameActivityInfoRSP Clone() {
      return new RingGameActivityInfoRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0 success //other faild
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Texas.Protocol.RingGameActivityConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RingGameActivityConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "low_blind_rebate" field.</summary>
    public const int LowBlindRebateFieldNumber = 3;
    private global::Texas.Protocol.UserSelfActivityRebate lowBlindRebate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.UserSelfActivityRebate LowBlindRebate {
      get { return lowBlindRebate_; }
      set {
        lowBlindRebate_ = value;
      }
    }

    /// <summary>Field number for the "mid_blind_rebate" field.</summary>
    public const int MidBlindRebateFieldNumber = 4;
    private global::Texas.Protocol.UserSelfActivityRebate midBlindRebate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.UserSelfActivityRebate MidBlindRebate {
      get { return midBlindRebate_; }
      set {
        midBlindRebate_ = value;
      }
    }

    /// <summary>Field number for the "high_blind_rebate" field.</summary>
    public const int HighBlindRebateFieldNumber = 5;
    private global::Texas.Protocol.UserSelfActivityRebate highBlindRebate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.UserSelfActivityRebate HighBlindRebate {
      get { return highBlindRebate_; }
      set {
        highBlindRebate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RingGameActivityInfoRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RingGameActivityInfoRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (!object.Equals(LowBlindRebate, other.LowBlindRebate)) return false;
      if (!object.Equals(MidBlindRebate, other.MidBlindRebate)) return false;
      if (!object.Equals(HighBlindRebate, other.HighBlindRebate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (lowBlindRebate_ != null) hash ^= LowBlindRebate.GetHashCode();
      if (midBlindRebate_ != null) hash ^= MidBlindRebate.GetHashCode();
      if (highBlindRebate_ != null) hash ^= HighBlindRebate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (lowBlindRebate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LowBlindRebate);
      }
      if (midBlindRebate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MidBlindRebate);
      }
      if (highBlindRebate_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(HighBlindRebate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (lowBlindRebate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LowBlindRebate);
      }
      if (midBlindRebate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MidBlindRebate);
      }
      if (highBlindRebate_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(HighBlindRebate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (lowBlindRebate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LowBlindRebate);
      }
      if (midBlindRebate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MidBlindRebate);
      }
      if (highBlindRebate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HighBlindRebate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RingGameActivityInfoRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Texas.Protocol.RingGameActivityConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.lowBlindRebate_ != null) {
        if (lowBlindRebate_ == null) {
          LowBlindRebate = new global::Texas.Protocol.UserSelfActivityRebate();
        }
        LowBlindRebate.MergeFrom(other.LowBlindRebate);
      }
      if (other.midBlindRebate_ != null) {
        if (midBlindRebate_ == null) {
          MidBlindRebate = new global::Texas.Protocol.UserSelfActivityRebate();
        }
        MidBlindRebate.MergeFrom(other.MidBlindRebate);
      }
      if (other.highBlindRebate_ != null) {
        if (highBlindRebate_ == null) {
          HighBlindRebate = new global::Texas.Protocol.UserSelfActivityRebate();
        }
        HighBlindRebate.MergeFrom(other.HighBlindRebate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Texas.Protocol.RingGameActivityConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 26: {
            if (lowBlindRebate_ == null) {
              LowBlindRebate = new global::Texas.Protocol.UserSelfActivityRebate();
            }
            input.ReadMessage(LowBlindRebate);
            break;
          }
          case 34: {
            if (midBlindRebate_ == null) {
              MidBlindRebate = new global::Texas.Protocol.UserSelfActivityRebate();
            }
            input.ReadMessage(MidBlindRebate);
            break;
          }
          case 42: {
            if (highBlindRebate_ == null) {
              HighBlindRebate = new global::Texas.Protocol.UserSelfActivityRebate();
            }
            input.ReadMessage(HighBlindRebate);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Texas.Protocol.RingGameActivityConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 26: {
            if (lowBlindRebate_ == null) {
              LowBlindRebate = new global::Texas.Protocol.UserSelfActivityRebate();
            }
            input.ReadMessage(LowBlindRebate);
            break;
          }
          case 34: {
            if (midBlindRebate_ == null) {
              MidBlindRebate = new global::Texas.Protocol.UserSelfActivityRebate();
            }
            input.ReadMessage(MidBlindRebate);
            break;
          }
          case 42: {
            if (highBlindRebate_ == null) {
              HighBlindRebate = new global::Texas.Protocol.UserSelfActivityRebate();
            }
            input.ReadMessage(HighBlindRebate);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// -- mtt activity
  /// </summary>
  public sealed partial class MttActivityInfoREQ : pb::IMessage<MttActivityInfoREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttActivityInfoREQ> _parser = new pb::MessageParser<MttActivityInfoREQ>(() => new MttActivityInfoREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttActivityInfoREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttActivityInfoREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttActivityInfoREQ(MttActivityInfoREQ other) : this() {
      _hasBits0 = other._hasBits0;
      activityNo_ = other.activityNo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttActivityInfoREQ Clone() {
      return new MttActivityInfoREQ(this);
    }

    /// <summary>Field number for the "activity_no" field.</summary>
    public const int ActivityNoFieldNumber = 1;
    private readonly static long ActivityNoDefaultValue = 0L;

    private long activityNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ActivityNo {
      get { if ((_hasBits0 & 1) != 0) { return activityNo_; } else { return ActivityNoDefaultValue; } }
      set {
        _hasBits0 |= 1;
        activityNo_ = value;
      }
    }
    /// <summary>Gets whether the "activity_no" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActivityNo {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "activity_no" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActivityNo() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttActivityInfoREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttActivityInfoREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityNo != other.ActivityNo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasActivityNo) hash ^= ActivityNo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasActivityNo) {
        output.WriteRawTag(8);
        output.WriteInt64(ActivityNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasActivityNo) {
        output.WriteRawTag(8);
        output.WriteInt64(ActivityNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasActivityNo) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ActivityNo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttActivityInfoREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasActivityNo) {
        ActivityNo = other.ActivityNo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ActivityNo = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ActivityNo = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttActivityInfoRSP : pb::IMessage<MttActivityInfoRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttActivityInfoRSP> _parser = new pb::MessageParser<MttActivityInfoRSP>(() => new MttActivityInfoRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttActivityInfoRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttActivityInfoRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttActivityInfoRSP(MttActivityInfoRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      userRebate_ = other.userRebate_ != null ? other.userRebate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttActivityInfoRSP Clone() {
      return new MttActivityInfoRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0 success //other faild
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Texas.Protocol.MttActivityConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.MttActivityConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "user_rebate" field.</summary>
    public const int UserRebateFieldNumber = 3;
    private global::Texas.Protocol.UserSelfActivityRebate userRebate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.UserSelfActivityRebate UserRebate {
      get { return userRebate_; }
      set {
        userRebate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttActivityInfoRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttActivityInfoRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (!object.Equals(UserRebate, other.UserRebate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (userRebate_ != null) hash ^= UserRebate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (userRebate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserRebate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (userRebate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserRebate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (userRebate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserRebate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttActivityInfoRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Texas.Protocol.MttActivityConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.userRebate_ != null) {
        if (userRebate_ == null) {
          UserRebate = new global::Texas.Protocol.UserSelfActivityRebate();
        }
        UserRebate.MergeFrom(other.UserRebate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Texas.Protocol.MttActivityConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 26: {
            if (userRebate_ == null) {
              UserRebate = new global::Texas.Protocol.UserSelfActivityRebate();
            }
            input.ReadMessage(UserRebate);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Texas.Protocol.MttActivityConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 26: {
            if (userRebate_ == null) {
              UserRebate = new global::Texas.Protocol.UserSelfActivityRebate();
            }
            input.ReadMessage(UserRebate);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Specified RG activity
  /// </summary>
  public sealed partial class SpecifiedRGActivityOpREQ : pb::IMessage<SpecifiedRGActivityOpREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpecifiedRGActivityOpREQ> _parser = new pb::MessageParser<SpecifiedRGActivityOpREQ>(() => new SpecifiedRGActivityOpREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpecifiedRGActivityOpREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpecifiedRGActivityOpREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpecifiedRGActivityOpREQ(SpecifiedRGActivityOpREQ other) : this() {
      _hasBits0 = other._hasBits0;
      action_ = other.action_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpecifiedRGActivityOpREQ Clone() {
      return new SpecifiedRGActivityOpREQ(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private readonly static int ActionDefaultValue = 0;

    private int action_;
    /// <summary>
    /// 0 create 1 modify 2 cancel
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Action {
      get { if ((_hasBits0 & 1) != 0) { return action_; } else { return ActionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        action_ = value;
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAction {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Texas.Protocol.SpecifiedRGActivityConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.SpecifiedRGActivityConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpecifiedRGActivityOpREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpecifiedRGActivityOpREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (!object.Equals(Config, other.Config)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAction) hash ^= Action.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAction) {
        output.WriteRawTag(8);
        output.WriteInt32(Action);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAction) {
        output.WriteRawTag(8);
        output.WriteInt32(Action);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Action);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpecifiedRGActivityOpREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Texas.Protocol.SpecifiedRGActivityConfig();
        }
        Config.MergeFrom(other.Config);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Action = input.ReadInt32();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Texas.Protocol.SpecifiedRGActivityConfig();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Action = input.ReadInt32();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Texas.Protocol.SpecifiedRGActivityConfig();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SpecifiedRGActivityOpRSP : pb::IMessage<SpecifiedRGActivityOpRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpecifiedRGActivityOpRSP> _parser = new pb::MessageParser<SpecifiedRGActivityOpRSP>(() => new SpecifiedRGActivityOpRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpecifiedRGActivityOpRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpecifiedRGActivityOpRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpecifiedRGActivityOpRSP(SpecifiedRGActivityOpRSP other) : this() {
      _hasBits0 = other._hasBits0;
      action_ = other.action_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      code_ = other.code_;
      ppRemained_ = other.ppRemained_;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      superLeagueid_ = other.superLeagueid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpecifiedRGActivityOpRSP Clone() {
      return new SpecifiedRGActivityOpRSP(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private readonly static int ActionDefaultValue = 0;

    private int action_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Action {
      get { if ((_hasBits0 & 1) != 0) { return action_; } else { return ActionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        action_ = value;
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAction {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Texas.Protocol.SpecifiedRGActivityConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.SpecifiedRGActivityConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 3;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0 success //other faild
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 2) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "pp_remained" field.</summary>
    public const int PpRemainedFieldNumber = 4;
    private readonly static long PpRemainedDefaultValue = 0L;

    private long ppRemained_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PpRemained {
      get { if ((_hasBits0 & 4) != 0) { return ppRemained_; } else { return PpRemainedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        ppRemained_ = value;
      }
    }
    /// <summary>Gets whether the "pp_remained" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpRemained {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "pp_remained" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpRemained() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 5;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 8) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 6;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 16) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "super_leagueid" field.</summary>
    public const int SuperLeagueidFieldNumber = 7;
    private readonly static int SuperLeagueidDefaultValue = 0;

    private int superLeagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueid {
      get { if ((_hasBits0 & 32) != 0) { return superLeagueid_; } else { return SuperLeagueidDefaultValue; } }
      set {
        _hasBits0 |= 32;
        superLeagueid_ = value;
      }
    }
    /// <summary>Gets whether the "super_leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueid {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "super_leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueid() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpecifiedRGActivityOpRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpecifiedRGActivityOpRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (Code != other.Code) return false;
      if (PpRemained != other.PpRemained) return false;
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (SuperLeagueid != other.SuperLeagueid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAction) hash ^= Action.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasPpRemained) hash ^= PpRemained.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasSuperLeagueid) hash ^= SuperLeagueid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAction) {
        output.WriteRawTag(8);
        output.WriteInt32(Action);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (HasCode) {
        output.WriteRawTag(24);
        output.WriteInt32(Code);
      }
      if (HasPpRemained) {
        output.WriteRawTag(32);
        output.WriteInt64(PpRemained);
      }
      if (HasClubid) {
        output.WriteRawTag(40);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(48);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(56);
        output.WriteInt32(SuperLeagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAction) {
        output.WriteRawTag(8);
        output.WriteInt32(Action);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (HasCode) {
        output.WriteRawTag(24);
        output.WriteInt32(Code);
      }
      if (HasPpRemained) {
        output.WriteRawTag(32);
        output.WriteInt64(PpRemained);
      }
      if (HasClubid) {
        output.WriteRawTag(40);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(48);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(56);
        output.WriteInt32(SuperLeagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Action);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasPpRemained) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PpRemained);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasSuperLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpecifiedRGActivityOpRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Texas.Protocol.SpecifiedRGActivityConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasPpRemained) {
        PpRemained = other.PpRemained;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasSuperLeagueid) {
        SuperLeagueid = other.SuperLeagueid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Action = input.ReadInt32();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Texas.Protocol.SpecifiedRGActivityConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 24: {
            Code = input.ReadInt32();
            break;
          }
          case 32: {
            PpRemained = input.ReadInt64();
            break;
          }
          case 40: {
            Clubid = input.ReadInt32();
            break;
          }
          case 48: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 56: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Action = input.ReadInt32();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Texas.Protocol.SpecifiedRGActivityConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 24: {
            Code = input.ReadInt32();
            break;
          }
          case 32: {
            PpRemained = input.ReadInt64();
            break;
          }
          case 40: {
            Clubid = input.ReadInt32();
            break;
          }
          case 48: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 56: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SpecifiedRGActivityInfoREQ : pb::IMessage<SpecifiedRGActivityInfoREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpecifiedRGActivityInfoREQ> _parser = new pb::MessageParser<SpecifiedRGActivityInfoREQ>(() => new SpecifiedRGActivityInfoREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpecifiedRGActivityInfoREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpecifiedRGActivityInfoREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpecifiedRGActivityInfoREQ(SpecifiedRGActivityInfoREQ other) : this() {
      _hasBits0 = other._hasBits0;
      activityNo_ = other.activityNo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpecifiedRGActivityInfoREQ Clone() {
      return new SpecifiedRGActivityInfoREQ(this);
    }

    /// <summary>Field number for the "activity_no" field.</summary>
    public const int ActivityNoFieldNumber = 1;
    private readonly static long ActivityNoDefaultValue = 0L;

    private long activityNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ActivityNo {
      get { if ((_hasBits0 & 1) != 0) { return activityNo_; } else { return ActivityNoDefaultValue; } }
      set {
        _hasBits0 |= 1;
        activityNo_ = value;
      }
    }
    /// <summary>Gets whether the "activity_no" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActivityNo {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "activity_no" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActivityNo() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpecifiedRGActivityInfoREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpecifiedRGActivityInfoREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityNo != other.ActivityNo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasActivityNo) hash ^= ActivityNo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasActivityNo) {
        output.WriteRawTag(8);
        output.WriteInt64(ActivityNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasActivityNo) {
        output.WriteRawTag(8);
        output.WriteInt64(ActivityNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasActivityNo) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ActivityNo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpecifiedRGActivityInfoREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasActivityNo) {
        ActivityNo = other.ActivityNo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ActivityNo = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ActivityNo = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SpecifiedRGActivityInfoRSP : pb::IMessage<SpecifiedRGActivityInfoRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpecifiedRGActivityInfoRSP> _parser = new pb::MessageParser<SpecifiedRGActivityInfoRSP>(() => new SpecifiedRGActivityInfoRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpecifiedRGActivityInfoRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.ClubActivityReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpecifiedRGActivityInfoRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpecifiedRGActivityInfoRSP(SpecifiedRGActivityInfoRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      lowBlindRebate_ = other.lowBlindRebate_ != null ? other.lowBlindRebate_.Clone() : null;
      midBlindRebate_ = other.midBlindRebate_ != null ? other.midBlindRebate_.Clone() : null;
      highBlindRebate_ = other.highBlindRebate_ != null ? other.highBlindRebate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpecifiedRGActivityInfoRSP Clone() {
      return new SpecifiedRGActivityInfoRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0 success //other faild
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Texas.Protocol.SpecifiedRGActivityConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.SpecifiedRGActivityConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "low_blind_rebate" field.</summary>
    public const int LowBlindRebateFieldNumber = 3;
    private global::Texas.Protocol.UserSelfActivityRebate lowBlindRebate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.UserSelfActivityRebate LowBlindRebate {
      get { return lowBlindRebate_; }
      set {
        lowBlindRebate_ = value;
      }
    }

    /// <summary>Field number for the "mid_blind_rebate" field.</summary>
    public const int MidBlindRebateFieldNumber = 4;
    private global::Texas.Protocol.UserSelfActivityRebate midBlindRebate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.UserSelfActivityRebate MidBlindRebate {
      get { return midBlindRebate_; }
      set {
        midBlindRebate_ = value;
      }
    }

    /// <summary>Field number for the "high_blind_rebate" field.</summary>
    public const int HighBlindRebateFieldNumber = 5;
    private global::Texas.Protocol.UserSelfActivityRebate highBlindRebate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.UserSelfActivityRebate HighBlindRebate {
      get { return highBlindRebate_; }
      set {
        highBlindRebate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpecifiedRGActivityInfoRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpecifiedRGActivityInfoRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (!object.Equals(LowBlindRebate, other.LowBlindRebate)) return false;
      if (!object.Equals(MidBlindRebate, other.MidBlindRebate)) return false;
      if (!object.Equals(HighBlindRebate, other.HighBlindRebate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (lowBlindRebate_ != null) hash ^= LowBlindRebate.GetHashCode();
      if (midBlindRebate_ != null) hash ^= MidBlindRebate.GetHashCode();
      if (highBlindRebate_ != null) hash ^= HighBlindRebate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (lowBlindRebate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LowBlindRebate);
      }
      if (midBlindRebate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MidBlindRebate);
      }
      if (highBlindRebate_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(HighBlindRebate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (lowBlindRebate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LowBlindRebate);
      }
      if (midBlindRebate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MidBlindRebate);
      }
      if (highBlindRebate_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(HighBlindRebate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (lowBlindRebate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LowBlindRebate);
      }
      if (midBlindRebate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MidBlindRebate);
      }
      if (highBlindRebate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HighBlindRebate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpecifiedRGActivityInfoRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Texas.Protocol.SpecifiedRGActivityConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.lowBlindRebate_ != null) {
        if (lowBlindRebate_ == null) {
          LowBlindRebate = new global::Texas.Protocol.UserSelfActivityRebate();
        }
        LowBlindRebate.MergeFrom(other.LowBlindRebate);
      }
      if (other.midBlindRebate_ != null) {
        if (midBlindRebate_ == null) {
          MidBlindRebate = new global::Texas.Protocol.UserSelfActivityRebate();
        }
        MidBlindRebate.MergeFrom(other.MidBlindRebate);
      }
      if (other.highBlindRebate_ != null) {
        if (highBlindRebate_ == null) {
          HighBlindRebate = new global::Texas.Protocol.UserSelfActivityRebate();
        }
        HighBlindRebate.MergeFrom(other.HighBlindRebate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Texas.Protocol.SpecifiedRGActivityConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 26: {
            if (lowBlindRebate_ == null) {
              LowBlindRebate = new global::Texas.Protocol.UserSelfActivityRebate();
            }
            input.ReadMessage(LowBlindRebate);
            break;
          }
          case 34: {
            if (midBlindRebate_ == null) {
              MidBlindRebate = new global::Texas.Protocol.UserSelfActivityRebate();
            }
            input.ReadMessage(MidBlindRebate);
            break;
          }
          case 42: {
            if (highBlindRebate_ == null) {
              HighBlindRebate = new global::Texas.Protocol.UserSelfActivityRebate();
            }
            input.ReadMessage(HighBlindRebate);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Texas.Protocol.SpecifiedRGActivityConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 26: {
            if (lowBlindRebate_ == null) {
              LowBlindRebate = new global::Texas.Protocol.UserSelfActivityRebate();
            }
            input.ReadMessage(LowBlindRebate);
            break;
          }
          case 34: {
            if (midBlindRebate_ == null) {
              MidBlindRebate = new global::Texas.Protocol.UserSelfActivityRebate();
            }
            input.ReadMessage(MidBlindRebate);
            break;
          }
          case 42: {
            if (highBlindRebate_ == null) {
              HighBlindRebate = new global::Texas.Protocol.UserSelfActivityRebate();
            }
            input.ReadMessage(HighBlindRebate);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
