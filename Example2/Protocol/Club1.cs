// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: club1.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Texas.Protocol {

  /// <summary>Holder for reflection information generated from club1.proto</summary>
  public static partial class Club1Reflection {

    #region Descriptor
    /// <summary>File descriptor for club1.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Club1Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtjbHViMS5wcm90bxoOcHJlX2Jhc2UucHJvdG8aCmJhc2UucHJvdG8aD2Ns",
            "dWJfYmFzZS5wcm90bxoMbGVhZ3VlLnByb3RvIssDCg9TdXBlckxlYWd1ZUlu",
            "Zm8SGwoOc3VwZXJfbGVhZ3VlaWQYASABKAVIAIgBARIbCg5yb29tX2F1dGhv",
            "cml0eRgCIAEoBUgBiAEBEh4KEWphY2twb3RfYXV0aG9yaXR5GAMgASgFSAKI",
            "AQESGAoLdGltZXpvbmVfaWQYBCABKAlIA4gBARIXCgp1dGNfb2Zmc2V0GAUg",
            "ASgJSASIAQESHAoPc3Rvcm1fYXV0aG9yaXR5GAYgASgFSAWIAQESHgoRc3Vz",
            "cGVuZF9hdXRob3JpdHkYByABKAVIBogBARIYCgtvd25lcmNsdWJpZBgIIAEo",
            "BUgHiAEBEiMKFmhhbmRfbWlzc2lvbl9hdXRob3JpdHkYCSABKAVICIgBAUIR",
            "Cg9fc3VwZXJfbGVhZ3VlaWRCEQoPX3Jvb21fYXV0aG9yaXR5QhQKEl9qYWNr",
            "cG90X2F1dGhvcml0eUIOCgxfdGltZXpvbmVfaWRCDQoLX3V0Y19vZmZzZXRC",
            "EgoQX3N0b3JtX2F1dGhvcml0eUIUChJfc3VzcGVuZF9hdXRob3JpdHlCDgoM",
            "X293bmVyY2x1YmlkQhkKF19oYW5kX21pc3Npb25fYXV0aG9yaXR5IoAECgpM",
            "ZWFndWVJbmZvEhUKCGxlYWd1ZWlkGAEgASgFSACIAQESEwoGcHBjb2luGAIg",
            "ASgDSAGIAQESFwoKcHBjb2luX3BlchgDIAEoA0gCiAEBEhIKBXJvb21zGAQg",
            "ASgFSAOIAQESFwoKbGVhZ3VlbmFtZRgFIAEoCUgEiAEBEhQKB293bmVyaWQY",
            "BiABKANIBYgBARIYCgtvd25lcmNsdWJpZBgHIAEoBUgGiAEBEhsKDnJvb21f",
            "YXV0aG9yaXR5GAggASgFSAeIAQESGQoMYWdlbnRfcHBjb2luGAkgASgDSAiI",
            "AQESFQoIcGxhdGZvcm0YCiABKAlICYgBARIYCgt0aW1lem9uZV9pZBgLIAEo",
            "CUgKiAEBEhcKCnV0Y19vZmZzZXQYDCABKAlIC4gBARIVCghpc19zdG9ybRgN",
            "IAEoCEgMiAEBQgsKCV9sZWFndWVpZEIJCgdfcHBjb2luQg0KC19wcGNvaW5f",
            "cGVyQggKBl9yb29tc0INCgtfbGVhZ3VlbmFtZUIKCghfb3duZXJpZEIOCgxf",
            "b3duZXJjbHViaWRCEQoPX3Jvb21fYXV0aG9yaXR5Qg8KDV9hZ2VudF9wcGNv",
            "aW5CCwoJX3BsYXRmb3JtQg4KDF90aW1lem9uZV9pZEINCgtfdXRjX29mZnNl",
            "dEILCglfaXNfc3Rvcm0iyQMKC0NsdWJQdXNoTXNnEhIKBXRpdGxlGAEgASgJ",
            "SACIAQESFAoHY29udGVudBgCIAEoCUgBiAEBEhAKA3BvcBgDIAEoCEgCiAEB",
            "EhUKCG1zZ190eXBlGAQgASgFSAOIAQESFAoHaW1nX3VybBgFIAEoCUgEiAEB",
            "EhEKBHRpbWUYBiABKAVIBYgBARIVCghsZWFndWVpZBgHIAEoBUgGiAEBEhYK",
            "CWltZ191cmxfMhgIIAEoCUgHiAEBEhMKBnRpbWVfMhgJIAEoBUgIiAEBEhcK",
            "CmxlYWd1ZWlkXzIYCiABKAVICYgBARIWCglpbWdfdXJsXzMYCyABKAlICogB",
            "ARITCgZ0aW1lXzMYDCABKAVIC4gBARIXCgpsZWFndWVpZF8zGA0gASgFSAyI",
            "AQFCCAoGX3RpdGxlQgoKCF9jb250ZW50QgYKBF9wb3BCCwoJX21zZ190eXBl",
            "QgoKCF9pbWdfdXJsQgcKBV90aW1lQgsKCV9sZWFndWVpZEIMCgpfaW1nX3Vy",
            "bF8yQgkKB190aW1lXzJCDQoLX2xlYWd1ZWlkXzJCDAoKX2ltZ191cmxfM0IJ",
            "CgdfdGltZV8zQg0KC19sZWFndWVpZF8zIvcTCghDbHViSW5mbxITCgZjbHVi",
            "aWQYASABKAlIAIgBARIRCgRuYW1lGAIgASgJSAGIAQESEQoEaWNvbhgDIAEo",
            "CUgCiAEBEhcKCmJsYWNrYm9hcmQYBCABKAlIA4gBARISCgVsZXZlbBgFIAEo",
            "BUgEiAEBEhAKA251bRgGIAEoBUgFiAEBEhQKB21heF9udW0YByABKAVIBogB",
            "ARIRCgRyb2xlGAggASgFSAeIAQESEgoFcm9vbXMYCSABKAVICIgBARIXCgps",
            "ZXZlbF9sZWZ0GAogASgFSAmIAQESFQoIam9pbnRpbWUYCyABKAVICogBARIU",
            "Cgdvd25lcmlkGAwgASgDSAuIAQESFgoJb3duZXJuYW1lGA0gASgJSAyIAQES",
            "FgoJb3duZXJpY29uGA4gASgJSA2IAQESEwoGcHJvZml0GA8gASgDSA6IAQES",
            "FAoHcGxheW51bRgQIAEoA0gPiAEBEhUKCGhhbmRzbnVtGBEgASgDSBCIAQES",
            "EwoGcHBjb2luGBIgASgDSBGIAQESFwoKcHBjb2luX3BlchgTIAEoA0gSiAEB",
            "EiUKC2NsdWJfY29uZmlnGBQgASgLMgsuQ2x1YkNvbmZpZ0gTiAEBEiAKC2xl",
            "YWd1ZV9saXN0GBUgAygLMgsuTGVhZ3VlSW5mbxIZCgxhZ2VudF9wcGNvaW4Y",
            "FiABKANIFIgBARIjCghwdXNoX21zZxgXIAEoCzIMLkNsdWJQdXNoTXNnSBWI",
            "AQESHgoRZnJlZV9yZW5hbWVfdGltZXMYGCABKAVIFogBARIVCghwbGF0Zm9y",
            "bRgZIAEoCUgXiAEBEhgKC3RpbWV6b25lX2lkGBogASgJSBiIAQESFwoKdXRj",
            "X29mZnNldBgbIAEoCUgZiAEBEh8KEnByaW9yaXR5X21heF9sZXZlbBgcIAEo",
            "BUgaiAEBEhAKA2JhbhgdIAEoBUgbiAEBEhcKCmxlYWd1ZV9iYW4YHiABKAVI",
            "HIgBARIbCg5tb250aF9oYW5kc251bRgfIAEoBUgdiAEBEhUKCGRpc2NvdW50",
            "GCAgASgFSB6IAQESGgoNaXNfbWl4ZWRfZnJlZRghIAEoCEgfiAEBEhsKDnN1",
            "cGVyX2xlYWd1ZWlkGCIgASgFSCCIAQESFQoIaXNfc3Rvcm0YIyABKAhIIYgB",
            "ARIaCg1ibGFja2JvYXJkX3RzGCQgASgDSCKIAQESKwoMc3VwZXJfbGVhZ3Vl",
            "GCUgASgLMhAuU3VwZXJMZWFndWVJbmZvSCOIAQESHgoRc3VwZXJfbGVhZ3Vl",
            "X3R5cGUYJiABKAVIJIgBARIdChBhdXRob3JpdHlfZGV0YWlsGCcgASgFSCWI",
            "AQESIwoWbGFzdF9kYXlfcGxheV9tYXhfdXNlchgoIAEoBUgmiAEBEhkKDHBs",
            "bzZfcmVsZWFzZRgpIAEoCEgniAEBEigKG2lzX2FsbG93X2xlYWd1ZV9kYXRh",
            "X2V4cG9ydBgqIAEoCEgoiAEBEhMKBnBwc3RpZBgrIAEoBUgpiAEBEiYKGXBw",
            "c3RfaXNfYWxsb3dfY3JlYXRlX3Jvb20YLCABKAhIKogBARIjChZhbGxvd19j",
            "cmVhdGVfdGVlbnBhdHRpGC0gASgISCuIAQESHwoSYWxsb3dfY3JlYXRlX3B1",
            "c295GC4gASgISCyIAQESHAoPcHBzdF9taW5fYnV5X2luGC8gASgFSC2IAQES",
            "JwoacHBzdF9leGNoYW5nZV9yYXRlX2RlY2ltYWwYMCABKAVILogBARITCgZw",
            "cHNyaWQYMSABKAVIL4gBARImChlwcHNyX2lzX2FsbG93X2NyZWF0ZV9yb29t",
            "GDIgASgISDCIAQESGwoOcHBzcl9taW5fYmxpbmQYMyABKAVIMYgBARIaCg1w",
            "cHNyX21pbl9hbnRlGDQgASgFSDKIAQESHQoQcHBzcl9vd25lcmNsdWJpZBg1",
            "IAEoBUgziAEBEh4KEXBwc3RfbWluX2J1eWluX3YyGDYgASgFSDSIAQESHwoS",
            "aXNfbHVja3lfZHJhd19vcGVuGDcgASgISDWIAQESHgoRY2x1Yl9kYWlseV9y",
            "ZXdhcmQYOCABKAVINogBARIiChVwcHNyX2lzX2FsbG93X2phY2twb3QYOSAB",
            "KAhIN4gBAUIJCgdfY2x1YmlkQgcKBV9uYW1lQgcKBV9pY29uQg0KC19ibGFj",
            "a2JvYXJkQggKBl9sZXZlbEIGCgRfbnVtQgoKCF9tYXhfbnVtQgcKBV9yb2xl",
            "QggKBl9yb29tc0INCgtfbGV2ZWxfbGVmdEILCglfam9pbnRpbWVCCgoIX293",
            "bmVyaWRCDAoKX293bmVybmFtZUIMCgpfb3duZXJpY29uQgkKB19wcm9maXRC",
            "CgoIX3BsYXludW1CCwoJX2hhbmRzbnVtQgkKB19wcGNvaW5CDQoLX3BwY29p",
            "bl9wZXJCDgoMX2NsdWJfY29uZmlnQg8KDV9hZ2VudF9wcGNvaW5CCwoJX3B1",
            "c2hfbXNnQhQKEl9mcmVlX3JlbmFtZV90aW1lc0ILCglfcGxhdGZvcm1CDgoM",
            "X3RpbWV6b25lX2lkQg0KC191dGNfb2Zmc2V0QhUKE19wcmlvcml0eV9tYXhf",
            "bGV2ZWxCBgoEX2JhbkINCgtfbGVhZ3VlX2JhbkIRCg9fbW9udGhfaGFuZHNu",
            "dW1CCwoJX2Rpc2NvdW50QhAKDl9pc19taXhlZF9mcmVlQhEKD19zdXBlcl9s",
            "ZWFndWVpZEILCglfaXNfc3Rvcm1CEAoOX2JsYWNrYm9hcmRfdHNCDwoNX3N1",
            "cGVyX2xlYWd1ZUIUChJfc3VwZXJfbGVhZ3VlX3R5cGVCEwoRX2F1dGhvcml0",
            "eV9kZXRhaWxCGQoXX2xhc3RfZGF5X3BsYXlfbWF4X3VzZXJCDwoNX3BsbzZf",
            "cmVsZWFzZUIeChxfaXNfYWxsb3dfbGVhZ3VlX2RhdGFfZXhwb3J0QgkKB19w",
            "cHN0aWRCHAoaX3Bwc3RfaXNfYWxsb3dfY3JlYXRlX3Jvb21CGQoXX2FsbG93",
            "X2NyZWF0ZV90ZWVucGF0dGlCFQoTX2FsbG93X2NyZWF0ZV9wdXNveUISChBf",
            "cHBzdF9taW5fYnV5X2luQh0KG19wcHN0X2V4Y2hhbmdlX3JhdGVfZGVjaW1h",
            "bEIJCgdfcHBzcmlkQhwKGl9wcHNyX2lzX2FsbG93X2NyZWF0ZV9yb29tQhEK",
            "D19wcHNyX21pbl9ibGluZEIQCg5fcHBzcl9taW5fYW50ZUITChFfcHBzcl9v",
            "d25lcmNsdWJpZEIUChJfcHBzdF9taW5fYnV5aW5fdjJCFQoTX2lzX2x1Y2t5",
            "X2RyYXdfb3BlbkIUChJfY2x1Yl9kYWlseV9yZXdhcmRCGAoWX3Bwc3JfaXNf",
            "YWxsb3dfamFja3BvdCINCgtDbHViTGlzdFJFUSInCgtDbHViTGlzdFJTUBIY",
            "CgRpbmZvGAEgAygLMgouQ2x1YkJyaWVmIi0KC0NsdWJJbmZvUkVREhMKBmNs",
            "dWJpZBgBIAEoCUgAiAEBQgkKB19jbHViaWQiyAEKC0NsdWJJbmZvUlNQEhEK",
            "BGNvZGUYASABKAVIAIgBARIcCgRpbmZvGAIgASgLMgkuQ2x1YkluZm9IAYgB",
            "ARIeChF1c2VyX3BwZ2xfY291bnRyeRgDIAEoCUgCiAEBEiQKF2lzX3BwZ2xf",
            "Y291bnRyeV9jb25maXJtGAQgASgISAOIAQFCBwoFX2NvZGVCBwoFX2luZm9C",
            "FAoSX3VzZXJfcHBnbF9jb3VudHJ5QhoKGF9pc19wcGdsX2NvdW50cnlfY29u",
            "ZmlybSKFAgoRTXR0UmV3YXJkUG9vbEluZm8SIgoVbXR0X3RvdGFsX3Jld2Fy",
            "ZF9wb29sGAEgASgDSACIAQESIgoVbXR0X3RvdGFsX2dhbWVfcmV3YXJkGAIg",
            "ASgDSAGIAQESJAoXbXR0X3RvdGFsX2h1bnRlcl9yZXdhcmQYAyABKANIAogB",
            "ARIdChBtdHRfZW5zdXJlX2NoaXBzGAQgASgDSAOIAQFCGAoWX210dF90b3Rh",
            "bF9yZXdhcmRfcG9vbEIYChZfbXR0X3RvdGFsX2dhbWVfcmV3YXJkQhoKGF9t",
            "dHRfdG90YWxfaHVudGVyX3Jld2FyZEITChFfbXR0X2Vuc3VyZV9jaGlwcyLR",
            "HQoMQ2x1YlJvb21JbmZvEhMKBnJvb21pZBgBIAEoCUgAiAEBEhYKCXJvb21f",
            "bmFtZRgCIAEoCUgBiAEBEhcKCm93bmVyX25hbWUYAyABKAlIAogBARIXCgpv",
            "d25lcl9pY29uGAQgASgJSAOIAQESEgoFYmxpbmQYBSABKANIBIgBARIRCgRh",
            "bnRlGAYgASgDSAWIAQESFgoJZ2FtZV90aW1lGAcgASgFSAaIAQESFgoJbGVm",
            "dF90aW1lGAggASgFSAeIAQESFQoIc2VhdF9udW0YCSABKAVICIgBARIUCgdw",
            "bGF5ZXJzGAogASgFSAmIAQESFwoKaXNfc3RhcnRlZBgLIAEoCEgKiAEBEhUK",
            "CGF1dGhfbnVtGAwgASgFSAuIAQESIQoJcm9vbV90eXBlGA0gASgOMgkuUm9v",
            "bVR5cGVIDIgBARIZCgx1cGJsaW5kX3RpbWUYDiABKAVIDYgBARISCgVidXlp",
            "bhgPIAEoA0gOiAEBEh0KEHRvdGFsX3BsYXllcl9udW0YECABKAVID4gBARIf",
            "ChJjdXJyZW50X3BsYXllcl9udW0YESABKAVIEIgBARIXCgptdHRfc3RhdHVz",
            "GBIgASgFSBGIAQESIAoTZW5kX3JlYnV5X3RpbWVzdGFtcBgTIAEoA0gSiAEB",
            "EhwKD3N0YXJ0X3RpbWVzdGFtcBgUIAEoA0gTiAEBEhAKA25vdxgVIAEoA0gU",
            "iAEBEhsKDm10dF9zdGFydF90aW1lGBYgASgDSBWIAQESIQoKd2FpdF91c2Vy",
            "cxgXIAMoCzINLldhaXRMaXN0VXNlchIWCglpc19odW50ZXIYGCABKAhIFogB",
            "ARIWCglncHNfbGltaXQYGSABKAhIF4gBARIVCghpcF9saW1pdBgaIAEoCEgY",
            "iAEBEhwKD293bmVyX3ZpcF9sZXZlbBgbIAEoDUgZiAEBEh0KEGNyZWF0ZV90",
            "aW1lc3RhbXAYHCABKANIGogBARIWCglnYW1lX21vZGUYHSABKAVIG4gBARIS",
            "CgVpc19pbhgeIAEoCEgciAEBEhkKDGlzX2luc3VyYW5jZRgfIAEoCEgdiAEB",
            "Ei8KDmdhbWVzZXRfc3RhdHVzGCAgASgOMhIuR2FtZVNldFBsYXlTdGF0dXNI",
            "HogBARIXCgp2cGlwX2xpbWl0GCEgASgFSB+IAQESGwoOZWFybHlfYmlyZF9u",
            "dW0YIiABKAVIIIgBARIbCg5zdXBlcl9sZWFndWVpZBgjIAEoBUghiAEBEhYK",
            "CWlzX2V2Y2hvcBgkIAEoCEgiiAEBEh8KEmlzX3Nub3diYWxsX2h1bnRlchgl",
            "IAEoCEgjiAEBEhkKDGlzX3N1c3BlbmRlZBgmIAEoCEgkiAEBEh4KEXN1c3Bl",
            "bmRfdGltZXN0YW1wGCcgASgDSCWIAQESGQoMc3VzcGVuZF90aW1lGCggASgD",
            "SCaIAQESHwoSdnBpcF9saW1pdF9wZXJfc2V0GCkgASgFSCeIAQESHgoRbWlu",
            "X2hhbmRzX3Blcl9zZXQYKiABKAVIKIgBARIZCgxwYXNzd2RfbGltaXQYKyAB",
            "KAhIKYgBARITCgZwYXNzd2QYLCABKAlIKogBARIdChBtYXhfcmV3YXJkX3Jh",
            "dGlvGC0gASgFSCuIAQESIAoTc3BpbnVwX3Jld2FyZF9yYXRpbxguIAEoBUgs",
            "iAEBEhkKDGlzX2dyb3VwX210dBgvIAEoCEgtiAEBEhYKCWdyb3VwX2tleRgw",
            "IAEoCUguiAEBEh0KEGdyb3VwX292ZXJfbGV2ZWwYMSABKAVIL4gBARIYCgtn",
            "cm91cF9zdGFnZRgyIAEoBUgwiAEBEhoKDWlzX2ZyZWV6ZV9vdXQYMyABKAhI",
            "MYgBARIXCgpncm91cF9mbGFnGDQgASgJSDKIAQESHgoRc3VwZXJfbGVhZ3Vl",
            "X3R5cGUYNSABKAVIM4gBARIZCgxyZWNvdmVyX3R5cGUYNiABKAVINIgBARIf",
            "ChJyZWNvdmVyX3N0YXJ0X3RpbWUYNyABKANINYgBARIgChNlYXJseV9iaXJk",
            "X2Rpc2NvdW50GDggASgFSDaIAQESEwoGaXNfdG9wGDkgASgISDeIAQESFwoK",
            "aXNfY2FwdGNoYRg6IAEoCEg4iAEBEhYKCWlzX2Jhbl9wYxg7IAEoCEg5iAEB",
            "EhoKDWlzX2NoZWNrX21haWwYPCABKAhIOogBARIjChZzYXRlbGxpdGVfcmV3",
            "YXJkX3ByaWNlGD0gASgDSDuIAQESEwoGcHBzdGlkGD4gASgFSDyIAQESKgod",
            "c2V2ZW5fZGV1Y2VfcmV3YXJkX211bHRpcGxpZXIYPyABKAVIPYgBARIZCgxp",
            "c192aXBfdGFibGUYQCABKAhIPogBARIqCh1lbnRlcl9yb29tX2NoaXBzX3By",
            "ZXJlcXVpc2l0ZRhBIAEoA0g/iAEBEhMKBnBwc3JpZBhCIAEoBUhAiAEBEhcK",
            "CmlzX2phY2twb3QYQyABKAhIQYgBARI1ChRtdHRfcmV3YXJkX3Bvb2xfaW5m",
            "bxhEIAEoCzISLk10dFJld2FyZFBvb2xJbmZvSEKIAQESHQoQaXNfY2VydGlm",
            "aWNhdGlvbhhFIAEoCEhDiAEBEhkKDGJvbWJwb3RfdHlwZRhGIAEoBUhEiAEB",
            "EhQKB21pbl9iZXQYRyABKAVIRYgBARIXCgptaWRkbGVfYmV0GEggASgFSEaI",
            "AQESFQoIaGlnaF9iZXQYSSABKAVIR4gBARIcCg9pc19wcGdsX3RyeW91dHMY",
            "SiABKAhISIgBARIlChhib21icG90X2FkZGl0aW9uYWxfYm9hcmQYSyABKAVI",
            "SYgBARIdChBhZGRpdGlvbmFsX2JvYXJkGEwgASgFSEqIAQESGAoLaGl0cG90",
            "X3JhdGUYTSABKAVIS4gBARIXCgpib251c19jYXJkGE4gASgFSEyIAQESGAoL",
            "ZmlnaHRfbGltaXQYTyABKAVITYgBARIQCghiYW5fY2x1YhhQIAMoBRITCgti",
            "YW5fY291bnRyeRhRIAMoCRIaCg1jcmVhdGVfY2x1YmlkGFIgASgFSE6IAQES",
            "JAoXaXNfc2VxdWVudGlhbF92aWV3X2NhcmQYUyABKAhIT4gBARImChlpc19i",
            "b21icG90X3dpdGhvdXRfZXZjaG9wGFQgASgISFCIAQFCCQoHX3Jvb21pZEIM",
            "Cgpfcm9vbV9uYW1lQg0KC19vd25lcl9uYW1lQg0KC19vd25lcl9pY29uQggK",
            "Bl9ibGluZEIHCgVfYW50ZUIMCgpfZ2FtZV90aW1lQgwKCl9sZWZ0X3RpbWVC",
            "CwoJX3NlYXRfbnVtQgoKCF9wbGF5ZXJzQg0KC19pc19zdGFydGVkQgsKCV9h",
            "dXRoX251bUIMCgpfcm9vbV90eXBlQg8KDV91cGJsaW5kX3RpbWVCCAoGX2J1",
            "eWluQhMKEV90b3RhbF9wbGF5ZXJfbnVtQhUKE19jdXJyZW50X3BsYXllcl9u",
            "dW1CDQoLX210dF9zdGF0dXNCFgoUX2VuZF9yZWJ1eV90aW1lc3RhbXBCEgoQ",
            "X3N0YXJ0X3RpbWVzdGFtcEIGCgRfbm93QhEKD19tdHRfc3RhcnRfdGltZUIM",
            "CgpfaXNfaHVudGVyQgwKCl9ncHNfbGltaXRCCwoJX2lwX2xpbWl0QhIKEF9v",
            "d25lcl92aXBfbGV2ZWxCEwoRX2NyZWF0ZV90aW1lc3RhbXBCDAoKX2dhbWVf",
            "bW9kZUIICgZfaXNfaW5CDwoNX2lzX2luc3VyYW5jZUIRCg9fZ2FtZXNldF9z",
            "dGF0dXNCDQoLX3ZwaXBfbGltaXRCEQoPX2Vhcmx5X2JpcmRfbnVtQhEKD19z",
            "dXBlcl9sZWFndWVpZEIMCgpfaXNfZXZjaG9wQhUKE19pc19zbm93YmFsbF9o",
            "dW50ZXJCDwoNX2lzX3N1c3BlbmRlZEIUChJfc3VzcGVuZF90aW1lc3RhbXBC",
            "DwoNX3N1c3BlbmRfdGltZUIVChNfdnBpcF9saW1pdF9wZXJfc2V0QhQKEl9t",
            "aW5faGFuZHNfcGVyX3NldEIPCg1fcGFzc3dkX2xpbWl0QgkKB19wYXNzd2RC",
            "EwoRX21heF9yZXdhcmRfcmF0aW9CFgoUX3NwaW51cF9yZXdhcmRfcmF0aW9C",
            "DwoNX2lzX2dyb3VwX210dEIMCgpfZ3JvdXBfa2V5QhMKEV9ncm91cF9vdmVy",
            "X2xldmVsQg4KDF9ncm91cF9zdGFnZUIQCg5faXNfZnJlZXplX291dEINCgtf",
            "Z3JvdXBfZmxhZ0IUChJfc3VwZXJfbGVhZ3VlX3R5cGVCDwoNX3JlY292ZXJf",
            "dHlwZUIVChNfcmVjb3Zlcl9zdGFydF90aW1lQhYKFF9lYXJseV9iaXJkX2Rp",
            "c2NvdW50QgkKB19pc190b3BCDQoLX2lzX2NhcHRjaGFCDAoKX2lzX2Jhbl9w",
            "Y0IQCg5faXNfY2hlY2tfbWFpbEIZChdfc2F0ZWxsaXRlX3Jld2FyZF9wcmlj",
            "ZUIJCgdfcHBzdGlkQiAKHl9zZXZlbl9kZXVjZV9yZXdhcmRfbXVsdGlwbGll",
            "ckIPCg1faXNfdmlwX3RhYmxlQiAKHl9lbnRlcl9yb29tX2NoaXBzX3ByZXJl",
            "cXVpc2l0ZUIJCgdfcHBzcmlkQg0KC19pc19qYWNrcG90QhcKFV9tdHRfcmV3",
            "YXJkX3Bvb2xfaW5mb0ITChFfaXNfY2VydGlmaWNhdGlvbkIPCg1fYm9tYnBv",
            "dF90eXBlQgoKCF9taW5fYmV0Qg0KC19taWRkbGVfYmV0QgsKCV9oaWdoX2Jl",
            "dEISChBfaXNfcHBnbF90cnlvdXRzQhsKGV9ib21icG90X2FkZGl0aW9uYWxf",
            "Ym9hcmRCEwoRX2FkZGl0aW9uYWxfYm9hcmRCDgoMX2hpdHBvdF9yYXRlQg0K",
            "C19ib251c19jYXJkQg4KDF9maWdodF9saW1pdEIQCg5fY3JlYXRlX2NsdWJp",
            "ZEIaChhfaXNfc2VxdWVudGlhbF92aWV3X2NhcmRCHAoaX2lzX2JvbWJwb3Rf",
            "d2l0aG91dF9ldmNob3AiQAoNQ2x1YkFnZW50SW5mbxILCgN1aWQYAiADKAkS",
            "FQoIcmFrZWJhY2sYAyABKAVIAIgBAUILCglfcmFrZWJhY2si/gYKDkNsdWJN",
            "ZW1iZXJJbmZvEhEKBHJvbGUYASABKAVIAIgBARIQCgN1aWQYAiABKAlIAYgB",
            "ARIVCghuaWNrbmFtZRgDIAEoCUgCiAEBEhEKBGljb24YBCABKAlIA4gBARIV",
            "Cghqb2ludGltZRgGIAEoBUgEiAEBEhAKA2ZlZRgHIAEoA0gFiAEBEhIKBWJ1",
            "eWluGAggASgDSAaIAQESEwoGYmFja3VwGAkgASgDSAeIAQESFQoIaGFuZHNu",
            "dW0YCiABKAVICIgBARIQCgN0YWcYCyABKAlICYgBARInCgpjbHViX2FnZW50",
            "GAwgASgLMg4uQ2x1YkFnZW50SW5mb0gKiAEBEhYKCW1lbW9fbmFtZRgNIAEo",
            "CUgLiAEBEhsKDmphY2twb3RfcmV3YXJkGA4gASgDSAyIAQESGgoNbGFzdGxv",
            "Z2ludGltZRgPIAEoA0gNiAEBEhgKC3N0b3JtX2NoaXBzGBAgASgDSA6IAQES",
            "HgoRbGFzdF9wbGF5aW5nX3RpbWUYESABKANID4gBARIZCgxzcGludXBfYnV5",
            "aW4YEiABKANIEIgBARIdChBhdXRob3JpdHlfZGV0YWlsGBMgASgFSBGIAQES",
            "HAoPYWdlbnRfbWVtb19uYW1lGBQgASgJSBKIAQESGQoMaXNfc3VzcGVuZGVk",
            "GBUgASgISBOIAQESGgoNY2VydGlmaWNhdGlvbhgWIAEoBUgUiAEBEh4KEWFn",
            "ZW50X3NoYXJrX2luZGV4GBcgASgFSBWIAQFCBwoFX3JvbGVCBgoEX3VpZEIL",
            "Cglfbmlja25hbWVCBwoFX2ljb25CCwoJX2pvaW50aW1lQgYKBF9mZWVCCAoG",
            "X2J1eWluQgkKB19iYWNrdXBCCwoJX2hhbmRzbnVtQgYKBF90YWdCDQoLX2Ns",
            "dWJfYWdlbnRCDAoKX21lbW9fbmFtZUIRCg9famFja3BvdF9yZXdhcmRCEAoO",
            "X2xhc3Rsb2dpbnRpbWVCDgoMX3N0b3JtX2NoaXBzQhQKEl9sYXN0X3BsYXlp",
            "bmdfdGltZUIPCg1fc3BpbnVwX2J1eWluQhMKEV9hdXRob3JpdHlfZGV0YWls",
            "QhIKEF9hZ2VudF9tZW1vX25hbWVCDwoNX2lzX3N1c3BlbmRlZEIQCg5fY2Vy",
            "dGlmaWNhdGlvbkIUChJfYWdlbnRfc2hhcmtfaW5kZXgiuwEKDUNsdWJNZW1i",
            "ZXJSRVESEwoGY2x1YmlkGAEgASgJSACIAQESFQoIbGVhZ3VlaWQYAiABKAVI",
            "AYgBARIQCgN1aWQYAyABKAlIAogBARIaCg1yZXRyYW5zX2luZGV4GAQgASgF",
            "SAOIAQESEwoGYW1vdW50GAUgASgFSASIAQFCCQoHX2NsdWJpZEILCglfbGVh",
            "Z3VlaWRCBgoEX3VpZEIQCg5fcmV0cmFuc19pbmRleEIJCgdfYW1vdW50IvAB",
            "Cg1DbHViTWVtYmVyUlNQEhMKBmNsdWJpZBgBIAEoCUgAiAEBEhUKCGxlYWd1",
            "ZWlkGAIgASgFSAGIAQESHwoGbWVtYmVyGAMgAygLMg8uQ2x1Yk1lbWJlcklu",
            "Zm8SHQoQdG90YWxfcGFja2V0X251bRgEIAEoBUgCiAEBEhkKDHBhY2tldF9p",
            "bmRleBgFIAEoBUgDiAEBEhEKBGNvZGUYBiABKAVIBIgBAUIJCgdfY2x1Ymlk",
            "QgsKCV9sZWFndWVpZEITChFfdG90YWxfcGFja2V0X251bUIPCg1fcGFja2V0",
            "X2luZGV4QgcKBV9jb2RlInsKDUNyZWF0ZUNsdWJSRVESEQoEbmFtZRgBIAEo",
            "CUgAiAEBEhcKCmJsYWNrYm9hcmQYAiABKAlIAYgBARIXCgp1dGNfb2Zmc2V0",
            "GAMgASgJSAKIAQFCBwoFX25hbWVCDQoLX2JsYWNrYm9hcmRCDQoLX3V0Y19v",
            "ZmZzZXQiUgoNQ3JlYXRlQ2x1YlJTUBIRCgRjb2RlGAEgASgFSACIAQESHAoE",
            "Y2x1YhgCIAEoCzIJLkNsdWJJbmZvSAGIAQFCBwoFX2NvZGVCBwoFX2NsdWIi",
            "dQoLSm9pbkNsdWJSRVESEwoGY2x1YmlkGAEgASgJSACIAQESFAoHY29udGVu",
            "dBgCIAEoCUgBiAEBEhYKCWFnZW50X3VpZBgDIAEoA0gCiAEBQgkKB19jbHVi",
            "aWRCCgoIX2NvbnRlbnRCDAoKX2FnZW50X3VpZCJvCgtKb2luQ2x1YlJTUBIR",
            "CgRjb2RlGAEgASgFSACIAQESEwoGY2x1YmlkGAIgASgJSAGIAQESFgoJYWdl",
            "bnRfdWlkGAMgASgDSAKIAQFCBwoFX2NvZGVCCQoHX2NsdWJpZEIMCgpfYWdl",
            "bnRfdWlkIo0CCg9DbHViSm9pbk1zZ0luZm8SEgoFbXNnaWQYASABKAVIAIgB",
            "ARIQCgN1aWQYAiABKAlIAYgBARIRCgRuYW1lGAMgASgJSAKIAQESEQoEaWNv",
            "bhgEIAEoCUgDiAEBEhEKBHRpbWUYBSABKAVIBIgBARIUCgdjb250ZW50GAYg",
            "ASgJSAWIAQESFgoJYWdlbnRfdWlkGAcgASgDSAaIAQESFwoKYWdlbnRfbmFt",
            "ZRgIIAEoCUgHiAEBQggKBl9tc2dpZEIGCgRfdWlkQgcKBV9uYW1lQgcKBV9p",
            "Y29uQgcKBV90aW1lQgoKCF9jb250ZW50QgwKCl9hZ2VudF91aWRCDQoLX2Fn",
            "ZW50X25hbWUiMQoPQ2x1YkpvaW5MaXN0UkVREhMKBmNsdWJpZBgBIAEoCUgA",
            "iAEBQgkKB19jbHViaWQiUQoPQ2x1YkpvaW5MaXN0UlNQEh4KBGluZm8YASAD",
            "KAsyEC5DbHViSm9pbk1zZ0luZm8SEwoGY2x1YmlkGAIgASgJSACIAQFCCQoH",
            "X2NsdWJpZCJeCg5DbHViSm9pbk1zZ1JTUBIjCgRpbmZvGAEgASgLMhAuQ2x1",
            "YkpvaW5Nc2dJbmZvSACIAQESEwoGY2x1YmlkGAIgASgJSAGIAQFCBwoFX2lu",
            "Zm9CCQoHX2NsdWJpZCJPChFKb2luQ2x1YlJlc3VsdFJTUBIRCgRjb2RlGAEg",
            "ASgFSACIAQESEwoGY2x1YmlkGAIgASgJSAGIAQFCBwoFX2NvZGVCCQoHX2Ns",
            "dWJpZCJwChBIYW5kbGVKb2luTXNnUkVREhMKBmNsdWJpZBgBIAEoCUgAiAEB",
            "EhIKBW1zZ2lkGAIgASgFSAGIAQESEwoGYWNjZXB0GAMgASgISAKIAQFCCQoH",
            "X2NsdWJpZEIICgZfbXNnaWRCCQoHX2FjY2VwdCJoChBIYW5kbGVKb2luTXNn",
            "UlNQEhEKBGNvZGUYASABKAVIAIgBARITCgZjbHViaWQYAiABKAlIAYgBARIQ",
            "CgN1aWQYAyABKAlIAogBAUIHCgVfY29kZUIJCgdfY2x1YmlkQgYKBF91aWQi",
            "jgEKDkNsdWJVcGdyYWRlUkVREhMKBmNsdWJpZBgBIAEoCUgAiAEBEhEKBHR5",
            "cGUYAiABKAVIAYgBARISCgVsZXZlbBgDIAEoBUgCiAEBEhUKCGxlYWd1ZWlk",
            "GAQgASgFSAOIAQFCCQoHX2NsdWJpZEIHCgVfdHlwZUIICgZfbGV2ZWxCCwoJ",
            "X2xlYWd1ZWlkIq4CCg5DbHViVXBncmFkZVJTUBIRCgRjb2RlGAEgASgFSACI",
            "AQESEwoGY2x1YmlkGAIgASgJSAGIAQESFAoHY29udmVydBgDIAEoBUgCiAEB",
            "EhUKCG51bWxpbWl0GAQgASgFSAOIAQESFwoKYWRtaW5saW1pdBgFIAEoBUgE",
            "iAEBEhIKBWxldmVsGAYgASgFSAWIAQESIAoTbmV4dF9sZXZlbF9kaXNjb3Vu",
            "dBgHIAEoBUgGiAEBEhEKBHR5cGUYCCABKAVIB4gBAUIHCgVfY29kZUIJCgdf",
            "Y2x1YmlkQgoKCF9jb252ZXJ0QgsKCV9udW1saW1pdEINCgtfYWRtaW5saW1p",
            "dEIICgZfbGV2ZWxCFgoUX25leHRfbGV2ZWxfZGlzY291bnRCBwoFX3R5cGUi",
            "mgEKDkNsdWJTZXRSb2xlUkVREhMKBmNsdWJpZBgBIAEoCUgAiAEBEhAKA3Vp",
            "ZBgCIAEoCUgBiAEBEhEKBHJvbGUYAyABKAVIAogBARIdChBhdXRob3JpdHlf",
            "ZGV0YWlsGAQgASgFSAOIAQFCCQoHX2NsdWJpZEIGCgRfdWlkQgcKBV9yb2xl",
            "QhMKEV9hdXRob3JpdHlfZGV0YWlsIrYBCg5DbHViU2V0Um9sZVJTUBIRCgRj",
            "b2RlGAEgASgFSACIAQESEwoGY2x1YmlkGAIgASgJSAGIAQESEQoEcm9sZRgD",
            "IAEoBUgCiAEBEhAKA3VpZBgEIAEoCUgDiAEBEh0KEGF1dGhvcml0eV9kZXRh",
            "aWwYBSABKAVIBIgBAUIHCgVfY29kZUIJCgdfY2x1YmlkQgcKBV9yb2xlQgYK",
            "BF91aWRCEwoRX2F1dGhvcml0eV9kZXRhaWwiWgoQU2V0QmxhY2tib2FyZFJF",
            "URITCgZjbHViaWQYASABKAlIAIgBARIXCgpibGFja2JvYXJkGAIgASgJSAGI",
            "AQFCCQoHX2NsdWJpZEINCgtfYmxhY2tib2FyZCJOChBTZXRCbGFja2JvYXJk",
            "UlNQEhEKBGNvZGUYASABKAVIAIgBARITCgZjbHViaWQYAiABKAlIAYgBAUIH",
            "CgVfY29kZUIJCgdfY2x1YmlkIuMBCg1QUENvaW5GbG93UkVREhMKBmNsdWJp",
            "ZBgBIAEoCUgAiAEBEhEKBHR5cGUYAiABKAVIAYgBARIVCghsZWFndWVpZBgD",
            "IAEoBUgCiAEBEhYKCWFnZW50X3VpZBgEIAEoA0gDiAEBEhoKDXJldHJhbnNf",
            "aW5kZXgYBSABKAVIBIgBARITCgZhbW91bnQYBiABKAVIBYgBAUIJCgdfY2x1",
            "YmlkQgcKBV90eXBlQgsKCV9sZWFndWVpZEIMCgpfYWdlbnRfdWlkQhAKDl9y",
            "ZXRyYW5zX2luZGV4QgkKB19hbW91bnQi5AIKDlBQQ29pbkZsb3dJbmZvEhAK",
            "A3VpZBgBIAEoCUgAiAEBEhEKBG5hbWUYAiABKAlIAYgBARIRCgRpY29uGAMg",
            "ASgJSAKIAQESEQoEdGltZRgEIAEoBUgDiAEBEhMKBnBwY29pbhgFIAEoA0gE",
            "iAEBEhUKCGZyb21fdWlkGAYgASgDSAWIAQESFgoJZnJvbV9uYW1lGAcgASgJ",
            "SAaIAQESEQoEcmVhZBgIIAEoCEgHiAEBEioKCWZsb3dfdHlwZRgJIAEoDjIS",
            "LkNsdWJDaGlwc0Zsb3dUeXBlSAiIAQESFgoJc2VuZF9yb2xlGAogASgFSAmI",
            "AQFCBgoEX3VpZEIHCgVfbmFtZUIHCgVfaWNvbkIHCgVfdGltZUIJCgdfcHBj",
            "b2luQgsKCV9mcm9tX3VpZEIMCgpfZnJvbV9uYW1lQgcKBV9yZWFkQgwKCl9m",
            "bG93X3R5cGVCDAoKX3NlbmRfcm9sZSKUAgoNUFBDb2luRmxvd1JTUBIRCgR0",
            "eXBlGAEgASgFSACIAQESHQoEaW5mbxgCIAMoCzIPLlBQQ29pbkZsb3dJbmZv",
            "EhMKBmNsdWJpZBgDIAEoCUgBiAEBEhUKCGxlYWd1ZWlkGAQgASgFSAKIAQES",
            "FgoJYWdlbnRfdWlkGAUgASgDSAOIAQESHQoQdG90YWxfcGFja2V0X251bRgG",
            "IAEoBUgEiAEBEhkKDHBhY2tldF9pbmRleBgHIAEoBUgFiAEBQgcKBV90eXBl",
            "QgkKB19jbHViaWRCCwoJX2xlYWd1ZWlkQgwKCl9hZ2VudF91aWRCEwoRX3Rv",
            "dGFsX3BhY2tldF9udW1CDwoNX3BhY2tldF9pbmRleCKDAQoXQ2x1YkFnZW50",
            "UmFrZUJhY2tTZXRSRVESEwoGY2x1YmlkGAEgASgJSACIAQESFgoJYWdlbnRf",
            "dWlkGAIgASgDSAGIAQESFQoIcmFrZWJhY2sYAyABKAVIAogBAUIJCgdfY2x1",
            "YmlkQgwKCl9hZ2VudF91aWRCCwoJX3Jha2ViYWNrIn8KF0NsdWJBZ2VudFJh",
            "a2VCYWNrU2V0UlNQEhEKBGNvZGUYASABKAVIAIgBARIWCglhZ2VudF91aWQY",
            "AiABKANIAYgBARIVCghyYWtlYmFjaxgDIAEoBUgCiAEBQgcKBV9jb2RlQgwK",
            "Cl9hZ2VudF91aWRCCwoJX3Jha2ViYWNrIlsKDWZlZVJldHVybkluZm8SFQoI",
            "c3RhcnRfdHMYASABKANIAIgBARIXCgpmZWVfcmV0dXJuGAIgASgDSAGIAQFC",
            "CwoJX3N0YXJ0X3RzQg0KC19mZWVfcmV0dXJuIsgBChhDbHViQWdlbnRSYWtl",
            "QmFja0Zsb3dSRVESEwoGY2x1YmlkGAEgASgJSACIAQESFQoIbGVhZ3VlaWQY",
            "AiABKAVIAYgBARIWCglhZ2VudF91aWQYAyABKANIAogBARIVCghzdGFydF90",
            "cxgEIAEoA0gDiAEBEhMKBmVuZF90cxgFIAEoA0gEiAEBQgkKB19jbHViaWRC",
            "CwoJX2xlYWd1ZWlkQgwKCl9hZ2VudF91aWRCCwoJX3N0YXJ0X3RzQgkKB19l",
            "bmRfdHMigwEKGENsdWJBZ2VudFJha2VCYWNrRmxvd1JTUBIRCgRjb2RlGAEg",
            "ASgFSACIAQESFQoIcmFrZWJhY2sYAiABKAVIAYgBARInCg9mZWVfcmV0dXJu",
            "X2luZm8YAyADKAsyDi5mZWVSZXR1cm5JbmZvQgcKBV9jb2RlQgsKCV9yYWtl",
            "YmFjayKYAQoUQ2hlY2tVc2VyQ2x1YlJvb21SRVESEQoEdHlwZRgBIAEoBUgA",
            "iAEBEhMKBmNsdWJpZBgCIAEoCUgBiAEBEhMKBnJvb21pZBgDIAEoCUgCiAEB",
            "EhYKCWdhbWVfbW9kZRgEIAEoBUgDiAEBQgcKBV90eXBlQgkKB19jbHViaWRC",
            "CQoHX3Jvb21pZEIMCgpfZ2FtZV9tb2RlIr4BChRDaGVja1VzZXJDbHViUm9v",
            "bVJTUBIWCglyb29tX3NpemUYASABKAVIAIgBARITCgZyb29taWQYAiABKAlI",
            "AYgBARIRCgR0eXBlGAMgASgFSAKIAQESEwoGY2x1YmlkGAQgASgJSAOIAQES",
            "FgoJZ2FtZV9tb2RlGAUgASgFSASIAQFCDAoKX3Jvb21fc2l6ZUIJCgdfcm9v",
            "bWlkQgcKBV90eXBlQgkKB19jbHViaWRCDAoKX2dhbWVfbW9kZUIaWgcvcGJw",
            "cGdvqgIOVGV4YXMuUHJvdG9jb2xiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Texas.Protocol.PreBaseReflection.Descriptor, global::Texas.Protocol.BaseReflection.Descriptor, global::Texas.Protocol.ClubBaseReflection.Descriptor, global::LeagueReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SuperLeagueInfo), global::Texas.Protocol.SuperLeagueInfo.Parser, new[]{ "SuperLeagueid", "RoomAuthority", "JackpotAuthority", "TimezoneId", "UtcOffset", "StormAuthority", "SuspendAuthority", "Ownerclubid", "HandMissionAuthority" }, new[]{ "SuperLeagueid", "RoomAuthority", "JackpotAuthority", "TimezoneId", "UtcOffset", "StormAuthority", "SuspendAuthority", "Ownerclubid", "HandMissionAuthority" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.LeagueInfo), global::Texas.Protocol.LeagueInfo.Parser, new[]{ "Leagueid", "Ppcoin", "PpcoinPer", "Rooms", "Leaguename", "Ownerid", "Ownerclubid", "RoomAuthority", "AgentPpcoin", "Platform", "TimezoneId", "UtcOffset", "IsStorm" }, new[]{ "Leagueid", "Ppcoin", "PpcoinPer", "Rooms", "Leaguename", "Ownerid", "Ownerclubid", "RoomAuthority", "AgentPpcoin", "Platform", "TimezoneId", "UtcOffset", "IsStorm" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubPushMsg), global::Texas.Protocol.ClubPushMsg.Parser, new[]{ "Title", "Content", "Pop", "MsgType", "ImgUrl", "Time", "Leagueid", "ImgUrl2", "Time2", "Leagueid2", "ImgUrl3", "Time3", "Leagueid3" }, new[]{ "Title", "Content", "Pop", "MsgType", "ImgUrl", "Time", "Leagueid", "ImgUrl2", "Time2", "Leagueid2", "ImgUrl3", "Time3", "Leagueid3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubInfo), global::Texas.Protocol.ClubInfo.Parser, new[]{ "Clubid", "Name", "Icon", "Blackboard", "Level", "Num", "MaxNum", "Role", "Rooms", "LevelLeft", "Jointime", "Ownerid", "Ownername", "Ownericon", "Profit", "Playnum", "Handsnum", "Ppcoin", "PpcoinPer", "ClubConfig", "LeagueList", "AgentPpcoin", "PushMsg", "FreeRenameTimes", "Platform", "TimezoneId", "UtcOffset", "PriorityMaxLevel", "Ban", "LeagueBan", "MonthHandsnum", "Discount", "IsMixedFree", "SuperLeagueid", "IsStorm", "BlackboardTs", "SuperLeague", "SuperLeagueType", "AuthorityDetail", "LastDayPlayMaxUser", "Plo6Release", "IsAllowLeagueDataExport", "Ppstid", "PpstIsAllowCreateRoom", "AllowCreateTeenpatti", "AllowCreatePusoy", "PpstMinBuyIn", "PpstExchangeRateDecimal", "Ppsrid", "PpsrIsAllowCreateRoom", "PpsrMinBlind", "PpsrMinAnte", "PpsrOwnerclubid", "PpstMinBuyinV2", "IsLuckyDrawOpen", "ClubDailyReward", "PpsrIsAllowJackpot" }, new[]{ "Clubid", "Name", "Icon", "Blackboard", "Level", "Num", "MaxNum", "Role", "Rooms", "LevelLeft", "Jointime", "Ownerid", "Ownername", "Ownericon", "Profit", "Playnum", "Handsnum", "Ppcoin", "PpcoinPer", "ClubConfig", "AgentPpcoin", "PushMsg", "FreeRenameTimes", "Platform", "TimezoneId", "UtcOffset", "PriorityMaxLevel", "Ban", "LeagueBan", "MonthHandsnum", "Discount", "IsMixedFree", "SuperLeagueid", "IsStorm", "BlackboardTs", "SuperLeague", "SuperLeagueType", "AuthorityDetail", "LastDayPlayMaxUser", "Plo6Release", "IsAllowLeagueDataExport", "Ppstid", "PpstIsAllowCreateRoom", "AllowCreateTeenpatti", "AllowCreatePusoy", "PpstMinBuyIn", "PpstExchangeRateDecimal", "Ppsrid", "PpsrIsAllowCreateRoom", "PpsrMinBlind", "PpsrMinAnte", "PpsrOwnerclubid", "PpstMinBuyinV2", "IsLuckyDrawOpen", "ClubDailyReward", "PpsrIsAllowJackpot" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubListREQ), global::Texas.Protocol.ClubListREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubListRSP), global::Texas.Protocol.ClubListRSP.Parser, new[]{ "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubInfoREQ), global::Texas.Protocol.ClubInfoREQ.Parser, new[]{ "Clubid" }, new[]{ "Clubid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubInfoRSP), global::Texas.Protocol.ClubInfoRSP.Parser, new[]{ "Code", "Info", "UserPpglCountry", "IsPpglCountryConfirm" }, new[]{ "Code", "Info", "UserPpglCountry", "IsPpglCountryConfirm" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttRewardPoolInfo), global::Texas.Protocol.MttRewardPoolInfo.Parser, new[]{ "MttTotalRewardPool", "MttTotalGameReward", "MttTotalHunterReward", "MttEnsureChips" }, new[]{ "MttTotalRewardPool", "MttTotalGameReward", "MttTotalHunterReward", "MttEnsureChips" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubRoomInfo), global::Texas.Protocol.ClubRoomInfo.Parser, new[]{ "Roomid", "RoomName", "OwnerName", "OwnerIcon", "Blind", "Ante", "GameTime", "LeftTime", "SeatNum", "Players", "IsStarted", "AuthNum", "RoomType", "UpblindTime", "Buyin", "TotalPlayerNum", "CurrentPlayerNum", "MttStatus", "EndRebuyTimestamp", "StartTimestamp", "Now", "MttStartTime", "WaitUsers", "IsHunter", "GpsLimit", "IpLimit", "OwnerVipLevel", "CreateTimestamp", "GameMode", "IsIn", "IsInsurance", "GamesetStatus", "VpipLimit", "EarlyBirdNum", "SuperLeagueid", "IsEvchop", "IsSnowballHunter", "IsSuspended", "SuspendTimestamp", "SuspendTime", "VpipLimitPerSet", "MinHandsPerSet", "PasswdLimit", "Passwd", "MaxRewardRatio", "SpinupRewardRatio", "IsGroupMtt", "GroupKey", "GroupOverLevel", "GroupStage", "IsFreezeOut", "GroupFlag", "SuperLeagueType", "RecoverType", "RecoverStartTime", "EarlyBirdDiscount", "IsTop", "IsCaptcha", "IsBanPc", "IsCheckMail", "SatelliteRewardPrice", "Ppstid", "SevenDeuceRewardMultiplier", "IsVipTable", "EnterRoomChipsPrerequisite", "Ppsrid", "IsJackpot", "MttRewardPoolInfo", "IsCertification", "BombpotType", "MinBet", "MiddleBet", "HighBet", "IsPpglTryouts", "BombpotAdditionalBoard", "AdditionalBoard", "HitpotRate", "BonusCard", "FightLimit", "BanClub", "BanCountry", "CreateClubid", "IsSequentialViewCard", "IsBombpotWithoutEvchop" }, new[]{ "Roomid", "RoomName", "OwnerName", "OwnerIcon", "Blind", "Ante", "GameTime", "LeftTime", "SeatNum", "Players", "IsStarted", "AuthNum", "RoomType", "UpblindTime", "Buyin", "TotalPlayerNum", "CurrentPlayerNum", "MttStatus", "EndRebuyTimestamp", "StartTimestamp", "Now", "MttStartTime", "IsHunter", "GpsLimit", "IpLimit", "OwnerVipLevel", "CreateTimestamp", "GameMode", "IsIn", "IsInsurance", "GamesetStatus", "VpipLimit", "EarlyBirdNum", "SuperLeagueid", "IsEvchop", "IsSnowballHunter", "IsSuspended", "SuspendTimestamp", "SuspendTime", "VpipLimitPerSet", "MinHandsPerSet", "PasswdLimit", "Passwd", "MaxRewardRatio", "SpinupRewardRatio", "IsGroupMtt", "GroupKey", "GroupOverLevel", "GroupStage", "IsFreezeOut", "GroupFlag", "SuperLeagueType", "RecoverType", "RecoverStartTime", "EarlyBirdDiscount", "IsTop", "IsCaptcha", "IsBanPc", "IsCheckMail", "SatelliteRewardPrice", "Ppstid", "SevenDeuceRewardMultiplier", "IsVipTable", "EnterRoomChipsPrerequisite", "Ppsrid", "IsJackpot", "MttRewardPoolInfo", "IsCertification", "BombpotType", "MinBet", "MiddleBet", "HighBet", "IsPpglTryouts", "BombpotAdditionalBoard", "AdditionalBoard", "HitpotRate", "BonusCard", "FightLimit", "CreateClubid", "IsSequentialViewCard", "IsBombpotWithoutEvchop" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubAgentInfo), global::Texas.Protocol.ClubAgentInfo.Parser, new[]{ "Uid", "Rakeback" }, new[]{ "Rakeback" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubMemberInfo), global::Texas.Protocol.ClubMemberInfo.Parser, new[]{ "Role", "Uid", "Nickname", "Icon", "Jointime", "Fee", "Buyin", "Backup", "Handsnum", "Tag", "ClubAgent", "MemoName", "JackpotReward", "Lastlogintime", "StormChips", "LastPlayingTime", "SpinupBuyin", "AuthorityDetail", "AgentMemoName", "IsSuspended", "Certification", "AgentSharkIndex" }, new[]{ "Role", "Uid", "Nickname", "Icon", "Jointime", "Fee", "Buyin", "Backup", "Handsnum", "Tag", "ClubAgent", "MemoName", "JackpotReward", "Lastlogintime", "StormChips", "LastPlayingTime", "SpinupBuyin", "AuthorityDetail", "AgentMemoName", "IsSuspended", "Certification", "AgentSharkIndex" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubMemberREQ), global::Texas.Protocol.ClubMemberREQ.Parser, new[]{ "Clubid", "Leagueid", "Uid", "RetransIndex", "Amount" }, new[]{ "Clubid", "Leagueid", "Uid", "RetransIndex", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubMemberRSP), global::Texas.Protocol.ClubMemberRSP.Parser, new[]{ "Clubid", "Leagueid", "Member", "TotalPacketNum", "PacketIndex", "Code" }, new[]{ "Clubid", "Leagueid", "TotalPacketNum", "PacketIndex", "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.CreateClubREQ), global::Texas.Protocol.CreateClubREQ.Parser, new[]{ "Name", "Blackboard", "UtcOffset" }, new[]{ "Name", "Blackboard", "UtcOffset" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.CreateClubRSP), global::Texas.Protocol.CreateClubRSP.Parser, new[]{ "Code", "Club" }, new[]{ "Code", "Club" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.JoinClubREQ), global::Texas.Protocol.JoinClubREQ.Parser, new[]{ "Clubid", "Content", "AgentUid" }, new[]{ "Clubid", "Content", "AgentUid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.JoinClubRSP), global::Texas.Protocol.JoinClubRSP.Parser, new[]{ "Code", "Clubid", "AgentUid" }, new[]{ "Code", "Clubid", "AgentUid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubJoinMsgInfo), global::Texas.Protocol.ClubJoinMsgInfo.Parser, new[]{ "Msgid", "Uid", "Name", "Icon", "Time", "Content", "AgentUid", "AgentName" }, new[]{ "Msgid", "Uid", "Name", "Icon", "Time", "Content", "AgentUid", "AgentName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubJoinListREQ), global::Texas.Protocol.ClubJoinListREQ.Parser, new[]{ "Clubid" }, new[]{ "Clubid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubJoinListRSP), global::Texas.Protocol.ClubJoinListRSP.Parser, new[]{ "Info", "Clubid" }, new[]{ "Clubid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubJoinMsgRSP), global::Texas.Protocol.ClubJoinMsgRSP.Parser, new[]{ "Info", "Clubid" }, new[]{ "Info", "Clubid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.JoinClubResultRSP), global::Texas.Protocol.JoinClubResultRSP.Parser, new[]{ "Code", "Clubid" }, new[]{ "Code", "Clubid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.HandleJoinMsgREQ), global::Texas.Protocol.HandleJoinMsgREQ.Parser, new[]{ "Clubid", "Msgid", "Accept" }, new[]{ "Clubid", "Msgid", "Accept" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.HandleJoinMsgRSP), global::Texas.Protocol.HandleJoinMsgRSP.Parser, new[]{ "Code", "Clubid", "Uid" }, new[]{ "Code", "Clubid", "Uid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubUpgradeREQ), global::Texas.Protocol.ClubUpgradeREQ.Parser, new[]{ "Clubid", "Type", "Level", "Leagueid" }, new[]{ "Clubid", "Type", "Level", "Leagueid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubUpgradeRSP), global::Texas.Protocol.ClubUpgradeRSP.Parser, new[]{ "Code", "Clubid", "Convert", "Numlimit", "Adminlimit", "Level", "NextLevelDiscount", "Type" }, new[]{ "Code", "Clubid", "Convert", "Numlimit", "Adminlimit", "Level", "NextLevelDiscount", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubSetRoleREQ), global::Texas.Protocol.ClubSetRoleREQ.Parser, new[]{ "Clubid", "Uid", "Role", "AuthorityDetail" }, new[]{ "Clubid", "Uid", "Role", "AuthorityDetail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubSetRoleRSP), global::Texas.Protocol.ClubSetRoleRSP.Parser, new[]{ "Code", "Clubid", "Role", "Uid", "AuthorityDetail" }, new[]{ "Code", "Clubid", "Role", "Uid", "AuthorityDetail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SetBlackboardREQ), global::Texas.Protocol.SetBlackboardREQ.Parser, new[]{ "Clubid", "Blackboard" }, new[]{ "Clubid", "Blackboard" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SetBlackboardRSP), global::Texas.Protocol.SetBlackboardRSP.Parser, new[]{ "Code", "Clubid" }, new[]{ "Code", "Clubid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PPCoinFlowREQ), global::Texas.Protocol.PPCoinFlowREQ.Parser, new[]{ "Clubid", "Type", "Leagueid", "AgentUid", "RetransIndex", "Amount" }, new[]{ "Clubid", "Type", "Leagueid", "AgentUid", "RetransIndex", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PPCoinFlowInfo), global::Texas.Protocol.PPCoinFlowInfo.Parser, new[]{ "Uid", "Name", "Icon", "Time", "Ppcoin", "FromUid", "FromName", "Read", "FlowType", "SendRole" }, new[]{ "Uid", "Name", "Icon", "Time", "Ppcoin", "FromUid", "FromName", "Read", "FlowType", "SendRole" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.PPCoinFlowRSP), global::Texas.Protocol.PPCoinFlowRSP.Parser, new[]{ "Type", "Info", "Clubid", "Leagueid", "AgentUid", "TotalPacketNum", "PacketIndex" }, new[]{ "Type", "Clubid", "Leagueid", "AgentUid", "TotalPacketNum", "PacketIndex" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubAgentRakeBackSetREQ), global::Texas.Protocol.ClubAgentRakeBackSetREQ.Parser, new[]{ "Clubid", "AgentUid", "Rakeback" }, new[]{ "Clubid", "AgentUid", "Rakeback" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubAgentRakeBackSetRSP), global::Texas.Protocol.ClubAgentRakeBackSetRSP.Parser, new[]{ "Code", "AgentUid", "Rakeback" }, new[]{ "Code", "AgentUid", "Rakeback" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.feeReturnInfo), global::Texas.Protocol.feeReturnInfo.Parser, new[]{ "StartTs", "FeeReturn" }, new[]{ "StartTs", "FeeReturn" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubAgentRakeBackFlowREQ), global::Texas.Protocol.ClubAgentRakeBackFlowREQ.Parser, new[]{ "Clubid", "Leagueid", "AgentUid", "StartTs", "EndTs" }, new[]{ "Clubid", "Leagueid", "AgentUid", "StartTs", "EndTs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ClubAgentRakeBackFlowRSP), global::Texas.Protocol.ClubAgentRakeBackFlowRSP.Parser, new[]{ "Code", "Rakeback", "FeeReturnInfo" }, new[]{ "Code", "Rakeback" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.CheckUserClubRoomREQ), global::Texas.Protocol.CheckUserClubRoomREQ.Parser, new[]{ "Type", "Clubid", "Roomid", "GameMode" }, new[]{ "Type", "Clubid", "Roomid", "GameMode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.CheckUserClubRoomRSP), global::Texas.Protocol.CheckUserClubRoomRSP.Parser, new[]{ "RoomSize", "Roomid", "Type", "Clubid", "GameMode" }, new[]{ "RoomSize", "Roomid", "Type", "Clubid", "GameMode" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SuperLeagueInfo : pb::IMessage<SuperLeagueInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SuperLeagueInfo> _parser = new pb::MessageParser<SuperLeagueInfo>(() => new SuperLeagueInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SuperLeagueInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SuperLeagueInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SuperLeagueInfo(SuperLeagueInfo other) : this() {
      _hasBits0 = other._hasBits0;
      superLeagueid_ = other.superLeagueid_;
      roomAuthority_ = other.roomAuthority_;
      jackpotAuthority_ = other.jackpotAuthority_;
      timezoneId_ = other.timezoneId_;
      utcOffset_ = other.utcOffset_;
      stormAuthority_ = other.stormAuthority_;
      suspendAuthority_ = other.suspendAuthority_;
      ownerclubid_ = other.ownerclubid_;
      handMissionAuthority_ = other.handMissionAuthority_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SuperLeagueInfo Clone() {
      return new SuperLeagueInfo(this);
    }

    /// <summary>Field number for the "super_leagueid" field.</summary>
    public const int SuperLeagueidFieldNumber = 1;
    private readonly static int SuperLeagueidDefaultValue = 0;

    private int superLeagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueid {
      get { if ((_hasBits0 & 1) != 0) { return superLeagueid_; } else { return SuperLeagueidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        superLeagueid_ = value;
      }
    }
    /// <summary>Gets whether the "super_leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "super_leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "room_authority" field.</summary>
    public const int RoomAuthorityFieldNumber = 2;
    private readonly static int RoomAuthorityDefaultValue = 0;

    private int roomAuthority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoomAuthority {
      get { if ((_hasBits0 & 2) != 0) { return roomAuthority_; } else { return RoomAuthorityDefaultValue; } }
      set {
        _hasBits0 |= 2;
        roomAuthority_ = value;
      }
    }
    /// <summary>Gets whether the "room_authority" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomAuthority {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "room_authority" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomAuthority() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "jackpot_authority" field.</summary>
    public const int JackpotAuthorityFieldNumber = 3;
    private readonly static int JackpotAuthorityDefaultValue = 0;

    private int jackpotAuthority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int JackpotAuthority {
      get { if ((_hasBits0 & 4) != 0) { return jackpotAuthority_; } else { return JackpotAuthorityDefaultValue; } }
      set {
        _hasBits0 |= 4;
        jackpotAuthority_ = value;
      }
    }
    /// <summary>Gets whether the "jackpot_authority" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasJackpotAuthority {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "jackpot_authority" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearJackpotAuthority() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "timezone_id" field.</summary>
    public const int TimezoneIdFieldNumber = 4;
    private readonly static string TimezoneIdDefaultValue = "";

    private string timezoneId_;
    /// <summary>
    ///时区id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TimezoneId {
      get { return timezoneId_ ?? TimezoneIdDefaultValue; }
      set {
        timezoneId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "timezone_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimezoneId {
      get { return timezoneId_ != null; }
    }
    /// <summary>Clears the value of the "timezone_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimezoneId() {
      timezoneId_ = null;
    }

    /// <summary>Field number for the "utc_offset" field.</summary>
    public const int UtcOffsetFieldNumber = 5;
    private readonly static string UtcOffsetDefaultValue = "";

    private string utcOffset_;
    /// <summary>
    /// utc偏移量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UtcOffset {
      get { return utcOffset_ ?? UtcOffsetDefaultValue; }
      set {
        utcOffset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "utc_offset" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUtcOffset {
      get { return utcOffset_ != null; }
    }
    /// <summary>Clears the value of the "utc_offset" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUtcOffset() {
      utcOffset_ = null;
    }

    /// <summary>Field number for the "storm_authority" field.</summary>
    public const int StormAuthorityFieldNumber = 6;
    private readonly static int StormAuthorityDefaultValue = 0;

    private int stormAuthority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StormAuthority {
      get { if ((_hasBits0 & 8) != 0) { return stormAuthority_; } else { return StormAuthorityDefaultValue; } }
      set {
        _hasBits0 |= 8;
        stormAuthority_ = value;
      }
    }
    /// <summary>Gets whether the "storm_authority" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStormAuthority {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "storm_authority" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStormAuthority() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "suspend_authority" field.</summary>
    public const int SuspendAuthorityFieldNumber = 7;
    private readonly static int SuspendAuthorityDefaultValue = 0;

    private int suspendAuthority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuspendAuthority {
      get { if ((_hasBits0 & 16) != 0) { return suspendAuthority_; } else { return SuspendAuthorityDefaultValue; } }
      set {
        _hasBits0 |= 16;
        suspendAuthority_ = value;
      }
    }
    /// <summary>Gets whether the "suspend_authority" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuspendAuthority {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "suspend_authority" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuspendAuthority() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "ownerclubid" field.</summary>
    public const int OwnerclubidFieldNumber = 8;
    private readonly static int OwnerclubidDefaultValue = 0;

    private int ownerclubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ownerclubid {
      get { if ((_hasBits0 & 32) != 0) { return ownerclubid_; } else { return OwnerclubidDefaultValue; } }
      set {
        _hasBits0 |= 32;
        ownerclubid_ = value;
      }
    }
    /// <summary>Gets whether the "ownerclubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnerclubid {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "ownerclubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnerclubid() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "hand_mission_authority" field.</summary>
    public const int HandMissionAuthorityFieldNumber = 9;
    private readonly static int HandMissionAuthorityDefaultValue = 0;

    private int handMissionAuthority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HandMissionAuthority {
      get { if ((_hasBits0 & 64) != 0) { return handMissionAuthority_; } else { return HandMissionAuthorityDefaultValue; } }
      set {
        _hasBits0 |= 64;
        handMissionAuthority_ = value;
      }
    }
    /// <summary>Gets whether the "hand_mission_authority" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHandMissionAuthority {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "hand_mission_authority" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHandMissionAuthority() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SuperLeagueInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SuperLeagueInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SuperLeagueid != other.SuperLeagueid) return false;
      if (RoomAuthority != other.RoomAuthority) return false;
      if (JackpotAuthority != other.JackpotAuthority) return false;
      if (TimezoneId != other.TimezoneId) return false;
      if (UtcOffset != other.UtcOffset) return false;
      if (StormAuthority != other.StormAuthority) return false;
      if (SuspendAuthority != other.SuspendAuthority) return false;
      if (Ownerclubid != other.Ownerclubid) return false;
      if (HandMissionAuthority != other.HandMissionAuthority) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSuperLeagueid) hash ^= SuperLeagueid.GetHashCode();
      if (HasRoomAuthority) hash ^= RoomAuthority.GetHashCode();
      if (HasJackpotAuthority) hash ^= JackpotAuthority.GetHashCode();
      if (HasTimezoneId) hash ^= TimezoneId.GetHashCode();
      if (HasUtcOffset) hash ^= UtcOffset.GetHashCode();
      if (HasStormAuthority) hash ^= StormAuthority.GetHashCode();
      if (HasSuspendAuthority) hash ^= SuspendAuthority.GetHashCode();
      if (HasOwnerclubid) hash ^= Ownerclubid.GetHashCode();
      if (HasHandMissionAuthority) hash ^= HandMissionAuthority.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSuperLeagueid) {
        output.WriteRawTag(8);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasRoomAuthority) {
        output.WriteRawTag(16);
        output.WriteInt32(RoomAuthority);
      }
      if (HasJackpotAuthority) {
        output.WriteRawTag(24);
        output.WriteInt32(JackpotAuthority);
      }
      if (HasTimezoneId) {
        output.WriteRawTag(34);
        output.WriteString(TimezoneId);
      }
      if (HasUtcOffset) {
        output.WriteRawTag(42);
        output.WriteString(UtcOffset);
      }
      if (HasStormAuthority) {
        output.WriteRawTag(48);
        output.WriteInt32(StormAuthority);
      }
      if (HasSuspendAuthority) {
        output.WriteRawTag(56);
        output.WriteInt32(SuspendAuthority);
      }
      if (HasOwnerclubid) {
        output.WriteRawTag(64);
        output.WriteInt32(Ownerclubid);
      }
      if (HasHandMissionAuthority) {
        output.WriteRawTag(72);
        output.WriteInt32(HandMissionAuthority);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSuperLeagueid) {
        output.WriteRawTag(8);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasRoomAuthority) {
        output.WriteRawTag(16);
        output.WriteInt32(RoomAuthority);
      }
      if (HasJackpotAuthority) {
        output.WriteRawTag(24);
        output.WriteInt32(JackpotAuthority);
      }
      if (HasTimezoneId) {
        output.WriteRawTag(34);
        output.WriteString(TimezoneId);
      }
      if (HasUtcOffset) {
        output.WriteRawTag(42);
        output.WriteString(UtcOffset);
      }
      if (HasStormAuthority) {
        output.WriteRawTag(48);
        output.WriteInt32(StormAuthority);
      }
      if (HasSuspendAuthority) {
        output.WriteRawTag(56);
        output.WriteInt32(SuspendAuthority);
      }
      if (HasOwnerclubid) {
        output.WriteRawTag(64);
        output.WriteInt32(Ownerclubid);
      }
      if (HasHandMissionAuthority) {
        output.WriteRawTag(72);
        output.WriteInt32(HandMissionAuthority);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSuperLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueid);
      }
      if (HasRoomAuthority) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomAuthority);
      }
      if (HasJackpotAuthority) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(JackpotAuthority);
      }
      if (HasTimezoneId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimezoneId);
      }
      if (HasUtcOffset) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UtcOffset);
      }
      if (HasStormAuthority) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StormAuthority);
      }
      if (HasSuspendAuthority) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuspendAuthority);
      }
      if (HasOwnerclubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ownerclubid);
      }
      if (HasHandMissionAuthority) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HandMissionAuthority);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SuperLeagueInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasSuperLeagueid) {
        SuperLeagueid = other.SuperLeagueid;
      }
      if (other.HasRoomAuthority) {
        RoomAuthority = other.RoomAuthority;
      }
      if (other.HasJackpotAuthority) {
        JackpotAuthority = other.JackpotAuthority;
      }
      if (other.HasTimezoneId) {
        TimezoneId = other.TimezoneId;
      }
      if (other.HasUtcOffset) {
        UtcOffset = other.UtcOffset;
      }
      if (other.HasStormAuthority) {
        StormAuthority = other.StormAuthority;
      }
      if (other.HasSuspendAuthority) {
        SuspendAuthority = other.SuspendAuthority;
      }
      if (other.HasOwnerclubid) {
        Ownerclubid = other.Ownerclubid;
      }
      if (other.HasHandMissionAuthority) {
        HandMissionAuthority = other.HandMissionAuthority;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 16: {
            RoomAuthority = input.ReadInt32();
            break;
          }
          case 24: {
            JackpotAuthority = input.ReadInt32();
            break;
          }
          case 34: {
            TimezoneId = input.ReadString();
            break;
          }
          case 42: {
            UtcOffset = input.ReadString();
            break;
          }
          case 48: {
            StormAuthority = input.ReadInt32();
            break;
          }
          case 56: {
            SuspendAuthority = input.ReadInt32();
            break;
          }
          case 64: {
            Ownerclubid = input.ReadInt32();
            break;
          }
          case 72: {
            HandMissionAuthority = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 16: {
            RoomAuthority = input.ReadInt32();
            break;
          }
          case 24: {
            JackpotAuthority = input.ReadInt32();
            break;
          }
          case 34: {
            TimezoneId = input.ReadString();
            break;
          }
          case 42: {
            UtcOffset = input.ReadString();
            break;
          }
          case 48: {
            StormAuthority = input.ReadInt32();
            break;
          }
          case 56: {
            SuspendAuthority = input.ReadInt32();
            break;
          }
          case 64: {
            Ownerclubid = input.ReadInt32();
            break;
          }
          case 72: {
            HandMissionAuthority = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LeagueInfo : pb::IMessage<LeagueInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LeagueInfo> _parser = new pb::MessageParser<LeagueInfo>(() => new LeagueInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LeagueInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LeagueInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LeagueInfo(LeagueInfo other) : this() {
      _hasBits0 = other._hasBits0;
      leagueid_ = other.leagueid_;
      ppcoin_ = other.ppcoin_;
      ppcoinPer_ = other.ppcoinPer_;
      rooms_ = other.rooms_;
      leaguename_ = other.leaguename_;
      ownerid_ = other.ownerid_;
      ownerclubid_ = other.ownerclubid_;
      roomAuthority_ = other.roomAuthority_;
      agentPpcoin_ = other.agentPpcoin_;
      platform_ = other.platform_;
      timezoneId_ = other.timezoneId_;
      utcOffset_ = other.utcOffset_;
      isStorm_ = other.isStorm_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LeagueInfo Clone() {
      return new LeagueInfo(this);
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 1;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 1) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "ppcoin" field.</summary>
    public const int PpcoinFieldNumber = 2;
    private readonly static long PpcoinDefaultValue = 0L;

    private long ppcoin_;
    /// <summary>
    /// 俱乐部的联盟币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Ppcoin {
      get { if ((_hasBits0 & 2) != 0) { return ppcoin_; } else { return PpcoinDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ppcoin_ = value;
      }
    }
    /// <summary>Gets whether the "ppcoin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpcoin {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ppcoin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpcoin() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "ppcoin_per" field.</summary>
    public const int PpcoinPerFieldNumber = 3;
    private readonly static long PpcoinPerDefaultValue = 0L;

    private long ppcoinPer_;
    /// <summary>
    /// 玩家个人pp币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PpcoinPer {
      get { if ((_hasBits0 & 4) != 0) { return ppcoinPer_; } else { return PpcoinPerDefaultValue; } }
      set {
        _hasBits0 |= 4;
        ppcoinPer_ = value;
      }
    }
    /// <summary>Gets whether the "ppcoin_per" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpcoinPer {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "ppcoin_per" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpcoinPer() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "rooms" field.</summary>
    public const int RoomsFieldNumber = 4;
    private readonly static int RoomsDefaultValue = 0;

    private int rooms_;
    /// <summary>
    /// 当前桌子数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rooms {
      get { if ((_hasBits0 & 8) != 0) { return rooms_; } else { return RoomsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        rooms_ = value;
      }
    }
    /// <summary>Gets whether the "rooms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRooms {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "rooms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRooms() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "leaguename" field.</summary>
    public const int LeaguenameFieldNumber = 5;
    private readonly static string LeaguenameDefaultValue = "";

    private string leaguename_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Leaguename {
      get { return leaguename_ ?? LeaguenameDefaultValue; }
      set {
        leaguename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "leaguename" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeaguename {
      get { return leaguename_ != null; }
    }
    /// <summary>Clears the value of the "leaguename" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeaguename() {
      leaguename_ = null;
    }

    /// <summary>Field number for the "ownerid" field.</summary>
    public const int OwneridFieldNumber = 6;
    private readonly static long OwneridDefaultValue = 0L;

    private long ownerid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Ownerid {
      get { if ((_hasBits0 & 16) != 0) { return ownerid_; } else { return OwneridDefaultValue; } }
      set {
        _hasBits0 |= 16;
        ownerid_ = value;
      }
    }
    /// <summary>Gets whether the "ownerid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnerid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "ownerid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnerid() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "ownerclubid" field.</summary>
    public const int OwnerclubidFieldNumber = 7;
    private readonly static int OwnerclubidDefaultValue = 0;

    private int ownerclubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ownerclubid {
      get { if ((_hasBits0 & 32) != 0) { return ownerclubid_; } else { return OwnerclubidDefaultValue; } }
      set {
        _hasBits0 |= 32;
        ownerclubid_ = value;
      }
    }
    /// <summary>Gets whether the "ownerclubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnerclubid {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "ownerclubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnerclubid() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "room_authority" field.</summary>
    public const int RoomAuthorityFieldNumber = 8;
    private readonly static int RoomAuthorityDefaultValue = 0;

    private int roomAuthority_;
    /// <summary>
    /// 1本俱乐部开局|2所有俱乐部开局
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoomAuthority {
      get { if ((_hasBits0 & 64) != 0) { return roomAuthority_; } else { return RoomAuthorityDefaultValue; } }
      set {
        _hasBits0 |= 64;
        roomAuthority_ = value;
      }
    }
    /// <summary>Gets whether the "room_authority" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomAuthority {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "room_authority" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomAuthority() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "agent_ppcoin" field.</summary>
    public const int AgentPpcoinFieldNumber = 9;
    private readonly static long AgentPpcoinDefaultValue = 0L;

    private long agentPpcoin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AgentPpcoin {
      get { if ((_hasBits0 & 128) != 0) { return agentPpcoin_; } else { return AgentPpcoinDefaultValue; } }
      set {
        _hasBits0 |= 128;
        agentPpcoin_ = value;
      }
    }
    /// <summary>Gets whether the "agent_ppcoin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgentPpcoin {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "agent_ppcoin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgentPpcoin() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "platform" field.</summary>
    public const int PlatformFieldNumber = 10;
    private readonly static string PlatformDefaultValue = "";

    private string platform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Platform {
      get { return platform_ ?? PlatformDefaultValue; }
      set {
        platform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "platform" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlatform {
      get { return platform_ != null; }
    }
    /// <summary>Clears the value of the "platform" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlatform() {
      platform_ = null;
    }

    /// <summary>Field number for the "timezone_id" field.</summary>
    public const int TimezoneIdFieldNumber = 11;
    private readonly static string TimezoneIdDefaultValue = "";

    private string timezoneId_;
    /// <summary>
    ///时区id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TimezoneId {
      get { return timezoneId_ ?? TimezoneIdDefaultValue; }
      set {
        timezoneId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "timezone_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimezoneId {
      get { return timezoneId_ != null; }
    }
    /// <summary>Clears the value of the "timezone_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimezoneId() {
      timezoneId_ = null;
    }

    /// <summary>Field number for the "utc_offset" field.</summary>
    public const int UtcOffsetFieldNumber = 12;
    private readonly static string UtcOffsetDefaultValue = "";

    private string utcOffset_;
    /// <summary>
    /// utc偏移量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UtcOffset {
      get { return utcOffset_ ?? UtcOffsetDefaultValue; }
      set {
        utcOffset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "utc_offset" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUtcOffset {
      get { return utcOffset_ != null; }
    }
    /// <summary>Clears the value of the "utc_offset" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUtcOffset() {
      utcOffset_ = null;
    }

    /// <summary>Field number for the "is_storm" field.</summary>
    public const int IsStormFieldNumber = 13;
    private readonly static bool IsStormDefaultValue = false;

    private bool isStorm_;
    /// <summary>
    ///联盟是否参与过红包
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsStorm {
      get { if ((_hasBits0 & 256) != 0) { return isStorm_; } else { return IsStormDefaultValue; } }
      set {
        _hasBits0 |= 256;
        isStorm_ = value;
      }
    }
    /// <summary>Gets whether the "is_storm" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsStorm {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "is_storm" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsStorm() {
      _hasBits0 &= ~256;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LeagueInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LeagueInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Leagueid != other.Leagueid) return false;
      if (Ppcoin != other.Ppcoin) return false;
      if (PpcoinPer != other.PpcoinPer) return false;
      if (Rooms != other.Rooms) return false;
      if (Leaguename != other.Leaguename) return false;
      if (Ownerid != other.Ownerid) return false;
      if (Ownerclubid != other.Ownerclubid) return false;
      if (RoomAuthority != other.RoomAuthority) return false;
      if (AgentPpcoin != other.AgentPpcoin) return false;
      if (Platform != other.Platform) return false;
      if (TimezoneId != other.TimezoneId) return false;
      if (UtcOffset != other.UtcOffset) return false;
      if (IsStorm != other.IsStorm) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasPpcoin) hash ^= Ppcoin.GetHashCode();
      if (HasPpcoinPer) hash ^= PpcoinPer.GetHashCode();
      if (HasRooms) hash ^= Rooms.GetHashCode();
      if (HasLeaguename) hash ^= Leaguename.GetHashCode();
      if (HasOwnerid) hash ^= Ownerid.GetHashCode();
      if (HasOwnerclubid) hash ^= Ownerclubid.GetHashCode();
      if (HasRoomAuthority) hash ^= RoomAuthority.GetHashCode();
      if (HasAgentPpcoin) hash ^= AgentPpcoin.GetHashCode();
      if (HasPlatform) hash ^= Platform.GetHashCode();
      if (HasTimezoneId) hash ^= TimezoneId.GetHashCode();
      if (HasUtcOffset) hash ^= UtcOffset.GetHashCode();
      if (HasIsStorm) hash ^= IsStorm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLeagueid) {
        output.WriteRawTag(8);
        output.WriteInt32(Leagueid);
      }
      if (HasPpcoin) {
        output.WriteRawTag(16);
        output.WriteInt64(Ppcoin);
      }
      if (HasPpcoinPer) {
        output.WriteRawTag(24);
        output.WriteInt64(PpcoinPer);
      }
      if (HasRooms) {
        output.WriteRawTag(32);
        output.WriteInt32(Rooms);
      }
      if (HasLeaguename) {
        output.WriteRawTag(42);
        output.WriteString(Leaguename);
      }
      if (HasOwnerid) {
        output.WriteRawTag(48);
        output.WriteInt64(Ownerid);
      }
      if (HasOwnerclubid) {
        output.WriteRawTag(56);
        output.WriteInt32(Ownerclubid);
      }
      if (HasRoomAuthority) {
        output.WriteRawTag(64);
        output.WriteInt32(RoomAuthority);
      }
      if (HasAgentPpcoin) {
        output.WriteRawTag(72);
        output.WriteInt64(AgentPpcoin);
      }
      if (HasPlatform) {
        output.WriteRawTag(82);
        output.WriteString(Platform);
      }
      if (HasTimezoneId) {
        output.WriteRawTag(90);
        output.WriteString(TimezoneId);
      }
      if (HasUtcOffset) {
        output.WriteRawTag(98);
        output.WriteString(UtcOffset);
      }
      if (HasIsStorm) {
        output.WriteRawTag(104);
        output.WriteBool(IsStorm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLeagueid) {
        output.WriteRawTag(8);
        output.WriteInt32(Leagueid);
      }
      if (HasPpcoin) {
        output.WriteRawTag(16);
        output.WriteInt64(Ppcoin);
      }
      if (HasPpcoinPer) {
        output.WriteRawTag(24);
        output.WriteInt64(PpcoinPer);
      }
      if (HasRooms) {
        output.WriteRawTag(32);
        output.WriteInt32(Rooms);
      }
      if (HasLeaguename) {
        output.WriteRawTag(42);
        output.WriteString(Leaguename);
      }
      if (HasOwnerid) {
        output.WriteRawTag(48);
        output.WriteInt64(Ownerid);
      }
      if (HasOwnerclubid) {
        output.WriteRawTag(56);
        output.WriteInt32(Ownerclubid);
      }
      if (HasRoomAuthority) {
        output.WriteRawTag(64);
        output.WriteInt32(RoomAuthority);
      }
      if (HasAgentPpcoin) {
        output.WriteRawTag(72);
        output.WriteInt64(AgentPpcoin);
      }
      if (HasPlatform) {
        output.WriteRawTag(82);
        output.WriteString(Platform);
      }
      if (HasTimezoneId) {
        output.WriteRawTag(90);
        output.WriteString(TimezoneId);
      }
      if (HasUtcOffset) {
        output.WriteRawTag(98);
        output.WriteString(UtcOffset);
      }
      if (HasIsStorm) {
        output.WriteRawTag(104);
        output.WriteBool(IsStorm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasPpcoin) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Ppcoin);
      }
      if (HasPpcoinPer) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PpcoinPer);
      }
      if (HasRooms) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rooms);
      }
      if (HasLeaguename) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Leaguename);
      }
      if (HasOwnerid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Ownerid);
      }
      if (HasOwnerclubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ownerclubid);
      }
      if (HasRoomAuthority) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomAuthority);
      }
      if (HasAgentPpcoin) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AgentPpcoin);
      }
      if (HasPlatform) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Platform);
      }
      if (HasTimezoneId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimezoneId);
      }
      if (HasUtcOffset) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UtcOffset);
      }
      if (HasIsStorm) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LeagueInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasPpcoin) {
        Ppcoin = other.Ppcoin;
      }
      if (other.HasPpcoinPer) {
        PpcoinPer = other.PpcoinPer;
      }
      if (other.HasRooms) {
        Rooms = other.Rooms;
      }
      if (other.HasLeaguename) {
        Leaguename = other.Leaguename;
      }
      if (other.HasOwnerid) {
        Ownerid = other.Ownerid;
      }
      if (other.HasOwnerclubid) {
        Ownerclubid = other.Ownerclubid;
      }
      if (other.HasRoomAuthority) {
        RoomAuthority = other.RoomAuthority;
      }
      if (other.HasAgentPpcoin) {
        AgentPpcoin = other.AgentPpcoin;
      }
      if (other.HasPlatform) {
        Platform = other.Platform;
      }
      if (other.HasTimezoneId) {
        TimezoneId = other.TimezoneId;
      }
      if (other.HasUtcOffset) {
        UtcOffset = other.UtcOffset;
      }
      if (other.HasIsStorm) {
        IsStorm = other.IsStorm;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 16: {
            Ppcoin = input.ReadInt64();
            break;
          }
          case 24: {
            PpcoinPer = input.ReadInt64();
            break;
          }
          case 32: {
            Rooms = input.ReadInt32();
            break;
          }
          case 42: {
            Leaguename = input.ReadString();
            break;
          }
          case 48: {
            Ownerid = input.ReadInt64();
            break;
          }
          case 56: {
            Ownerclubid = input.ReadInt32();
            break;
          }
          case 64: {
            RoomAuthority = input.ReadInt32();
            break;
          }
          case 72: {
            AgentPpcoin = input.ReadInt64();
            break;
          }
          case 82: {
            Platform = input.ReadString();
            break;
          }
          case 90: {
            TimezoneId = input.ReadString();
            break;
          }
          case 98: {
            UtcOffset = input.ReadString();
            break;
          }
          case 104: {
            IsStorm = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 16: {
            Ppcoin = input.ReadInt64();
            break;
          }
          case 24: {
            PpcoinPer = input.ReadInt64();
            break;
          }
          case 32: {
            Rooms = input.ReadInt32();
            break;
          }
          case 42: {
            Leaguename = input.ReadString();
            break;
          }
          case 48: {
            Ownerid = input.ReadInt64();
            break;
          }
          case 56: {
            Ownerclubid = input.ReadInt32();
            break;
          }
          case 64: {
            RoomAuthority = input.ReadInt32();
            break;
          }
          case 72: {
            AgentPpcoin = input.ReadInt64();
            break;
          }
          case 82: {
            Platform = input.ReadString();
            break;
          }
          case 90: {
            TimezoneId = input.ReadString();
            break;
          }
          case 98: {
            UtcOffset = input.ReadString();
            break;
          }
          case 104: {
            IsStorm = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubPushMsg : pb::IMessage<ClubPushMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubPushMsg> _parser = new pb::MessageParser<ClubPushMsg>(() => new ClubPushMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubPushMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubPushMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubPushMsg(ClubPushMsg other) : this() {
      _hasBits0 = other._hasBits0;
      title_ = other.title_;
      content_ = other.content_;
      pop_ = other.pop_;
      msgType_ = other.msgType_;
      imgUrl_ = other.imgUrl_;
      time_ = other.time_;
      leagueid_ = other.leagueid_;
      imgUrl2_ = other.imgUrl2_;
      time2_ = other.time2_;
      leagueid2_ = other.leagueid2_;
      imgUrl3_ = other.imgUrl3_;
      time3_ = other.time3_;
      leagueid3_ = other.leagueid3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubPushMsg Clone() {
      return new ClubPushMsg(this);
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 1;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 2;
    private readonly static string ContentDefaultValue = "";

    private string content_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Content {
      get { return content_ ?? ContentDefaultValue; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "content" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContent {
      get { return content_ != null; }
    }
    /// <summary>Clears the value of the "content" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContent() {
      content_ = null;
    }

    /// <summary>Field number for the "pop" field.</summary>
    public const int PopFieldNumber = 3;
    private readonly static bool PopDefaultValue = false;

    private bool pop_;
    /// <summary>
    /// 1表示弹窗, 0表示不弹
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Pop {
      get { if ((_hasBits0 & 1) != 0) { return pop_; } else { return PopDefaultValue; } }
      set {
        _hasBits0 |= 1;
        pop_ = value;
      }
    }
    /// <summary>Gets whether the "pop" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPop {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "pop" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPop() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "msg_type" field.</summary>
    public const int MsgTypeFieldNumber = 4;
    private readonly static int MsgTypeDefaultValue = 0;

    private int msgType_;
    /// <summary>
    /// 0:text 1:image
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MsgType {
      get { if ((_hasBits0 & 2) != 0) { return msgType_; } else { return MsgTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        msgType_ = value;
      }
    }
    /// <summary>Gets whether the "msg_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMsgType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "msg_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMsgType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "img_url" field.</summary>
    public const int ImgUrlFieldNumber = 5;
    private readonly static string ImgUrlDefaultValue = "";

    private string imgUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ImgUrl {
      get { return imgUrl_ ?? ImgUrlDefaultValue; }
      set {
        imgUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "img_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasImgUrl {
      get { return imgUrl_ != null; }
    }
    /// <summary>Clears the value of the "img_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearImgUrl() {
      imgUrl_ = null;
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 6;
    private readonly static int TimeDefaultValue = 0;

    private int time_;
    /// <summary>
    /// deadline
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Time {
      get { if ((_hasBits0 & 4) != 0) { return time_; } else { return TimeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        time_ = value;
      }
    }
    /// <summary>Gets whether the "time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTime {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTime() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 7;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    /// <summary>
    /// 1st img 的推送範圍 是否是全聯盟 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 8) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "img_url_2" field.</summary>
    public const int ImgUrl2FieldNumber = 8;
    private readonly static string ImgUrl2DefaultValue = "";

    private string imgUrl2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ImgUrl2 {
      get { return imgUrl2_ ?? ImgUrl2DefaultValue; }
      set {
        imgUrl2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "img_url_2" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasImgUrl2 {
      get { return imgUrl2_ != null; }
    }
    /// <summary>Clears the value of the "img_url_2" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearImgUrl2() {
      imgUrl2_ = null;
    }

    /// <summary>Field number for the "time_2" field.</summary>
    public const int Time2FieldNumber = 9;
    private readonly static int Time2DefaultValue = 0;

    private int time2_;
    /// <summary>
    /// deadline
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Time2 {
      get { if ((_hasBits0 & 16) != 0) { return time2_; } else { return Time2DefaultValue; } }
      set {
        _hasBits0 |= 16;
        time2_ = value;
      }
    }
    /// <summary>Gets whether the "time_2" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTime2 {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "time_2" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTime2() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "leagueid_2" field.</summary>
    public const int Leagueid2FieldNumber = 10;
    private readonly static int Leagueid2DefaultValue = 0;

    private int leagueid2_;
    /// <summary>
    /// 2nd img 的推送範圍 是否是全聯盟
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid2 {
      get { if ((_hasBits0 & 32) != 0) { return leagueid2_; } else { return Leagueid2DefaultValue; } }
      set {
        _hasBits0 |= 32;
        leagueid2_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid_2" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid2 {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "leagueid_2" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid2() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "img_url_3" field.</summary>
    public const int ImgUrl3FieldNumber = 11;
    private readonly static string ImgUrl3DefaultValue = "";

    private string imgUrl3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ImgUrl3 {
      get { return imgUrl3_ ?? ImgUrl3DefaultValue; }
      set {
        imgUrl3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "img_url_3" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasImgUrl3 {
      get { return imgUrl3_ != null; }
    }
    /// <summary>Clears the value of the "img_url_3" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearImgUrl3() {
      imgUrl3_ = null;
    }

    /// <summary>Field number for the "time_3" field.</summary>
    public const int Time3FieldNumber = 12;
    private readonly static int Time3DefaultValue = 0;

    private int time3_;
    /// <summary>
    /// deadline
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Time3 {
      get { if ((_hasBits0 & 64) != 0) { return time3_; } else { return Time3DefaultValue; } }
      set {
        _hasBits0 |= 64;
        time3_ = value;
      }
    }
    /// <summary>Gets whether the "time_3" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTime3 {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "time_3" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTime3() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "leagueid_3" field.</summary>
    public const int Leagueid3FieldNumber = 13;
    private readonly static int Leagueid3DefaultValue = 0;

    private int leagueid3_;
    /// <summary>
    /// 3rd img 的推送範圍 是否是全聯盟
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid3 {
      get { if ((_hasBits0 & 128) != 0) { return leagueid3_; } else { return Leagueid3DefaultValue; } }
      set {
        _hasBits0 |= 128;
        leagueid3_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid_3" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid3 {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "leagueid_3" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid3() {
      _hasBits0 &= ~128;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubPushMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubPushMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if (Content != other.Content) return false;
      if (Pop != other.Pop) return false;
      if (MsgType != other.MsgType) return false;
      if (ImgUrl != other.ImgUrl) return false;
      if (Time != other.Time) return false;
      if (Leagueid != other.Leagueid) return false;
      if (ImgUrl2 != other.ImgUrl2) return false;
      if (Time2 != other.Time2) return false;
      if (Leagueid2 != other.Leagueid2) return false;
      if (ImgUrl3 != other.ImgUrl3) return false;
      if (Time3 != other.Time3) return false;
      if (Leagueid3 != other.Leagueid3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTitle) hash ^= Title.GetHashCode();
      if (HasContent) hash ^= Content.GetHashCode();
      if (HasPop) hash ^= Pop.GetHashCode();
      if (HasMsgType) hash ^= MsgType.GetHashCode();
      if (HasImgUrl) hash ^= ImgUrl.GetHashCode();
      if (HasTime) hash ^= Time.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasImgUrl2) hash ^= ImgUrl2.GetHashCode();
      if (HasTime2) hash ^= Time2.GetHashCode();
      if (HasLeagueid2) hash ^= Leagueid2.GetHashCode();
      if (HasImgUrl3) hash ^= ImgUrl3.GetHashCode();
      if (HasTime3) hash ^= Time3.GetHashCode();
      if (HasLeagueid3) hash ^= Leagueid3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTitle) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (HasContent) {
        output.WriteRawTag(18);
        output.WriteString(Content);
      }
      if (HasPop) {
        output.WriteRawTag(24);
        output.WriteBool(Pop);
      }
      if (HasMsgType) {
        output.WriteRawTag(32);
        output.WriteInt32(MsgType);
      }
      if (HasImgUrl) {
        output.WriteRawTag(42);
        output.WriteString(ImgUrl);
      }
      if (HasTime) {
        output.WriteRawTag(48);
        output.WriteInt32(Time);
      }
      if (HasLeagueid) {
        output.WriteRawTag(56);
        output.WriteInt32(Leagueid);
      }
      if (HasImgUrl2) {
        output.WriteRawTag(66);
        output.WriteString(ImgUrl2);
      }
      if (HasTime2) {
        output.WriteRawTag(72);
        output.WriteInt32(Time2);
      }
      if (HasLeagueid2) {
        output.WriteRawTag(80);
        output.WriteInt32(Leagueid2);
      }
      if (HasImgUrl3) {
        output.WriteRawTag(90);
        output.WriteString(ImgUrl3);
      }
      if (HasTime3) {
        output.WriteRawTag(96);
        output.WriteInt32(Time3);
      }
      if (HasLeagueid3) {
        output.WriteRawTag(104);
        output.WriteInt32(Leagueid3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTitle) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (HasContent) {
        output.WriteRawTag(18);
        output.WriteString(Content);
      }
      if (HasPop) {
        output.WriteRawTag(24);
        output.WriteBool(Pop);
      }
      if (HasMsgType) {
        output.WriteRawTag(32);
        output.WriteInt32(MsgType);
      }
      if (HasImgUrl) {
        output.WriteRawTag(42);
        output.WriteString(ImgUrl);
      }
      if (HasTime) {
        output.WriteRawTag(48);
        output.WriteInt32(Time);
      }
      if (HasLeagueid) {
        output.WriteRawTag(56);
        output.WriteInt32(Leagueid);
      }
      if (HasImgUrl2) {
        output.WriteRawTag(66);
        output.WriteString(ImgUrl2);
      }
      if (HasTime2) {
        output.WriteRawTag(72);
        output.WriteInt32(Time2);
      }
      if (HasLeagueid2) {
        output.WriteRawTag(80);
        output.WriteInt32(Leagueid2);
      }
      if (HasImgUrl3) {
        output.WriteRawTag(90);
        output.WriteString(ImgUrl3);
      }
      if (HasTime3) {
        output.WriteRawTag(96);
        output.WriteInt32(Time3);
      }
      if (HasLeagueid3) {
        output.WriteRawTag(104);
        output.WriteInt32(Leagueid3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HasContent) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (HasPop) {
        size += 1 + 1;
      }
      if (HasMsgType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgType);
      }
      if (HasImgUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImgUrl);
      }
      if (HasTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasImgUrl2) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImgUrl2);
      }
      if (HasTime2) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time2);
      }
      if (HasLeagueid2) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid2);
      }
      if (HasImgUrl3) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImgUrl3);
      }
      if (HasTime3) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time3);
      }
      if (HasLeagueid3) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubPushMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.HasContent) {
        Content = other.Content;
      }
      if (other.HasPop) {
        Pop = other.Pop;
      }
      if (other.HasMsgType) {
        MsgType = other.MsgType;
      }
      if (other.HasImgUrl) {
        ImgUrl = other.ImgUrl;
      }
      if (other.HasTime) {
        Time = other.Time;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasImgUrl2) {
        ImgUrl2 = other.ImgUrl2;
      }
      if (other.HasTime2) {
        Time2 = other.Time2;
      }
      if (other.HasLeagueid2) {
        Leagueid2 = other.Leagueid2;
      }
      if (other.HasImgUrl3) {
        ImgUrl3 = other.ImgUrl3;
      }
      if (other.HasTime3) {
        Time3 = other.Time3;
      }
      if (other.HasLeagueid3) {
        Leagueid3 = other.Leagueid3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 18: {
            Content = input.ReadString();
            break;
          }
          case 24: {
            Pop = input.ReadBool();
            break;
          }
          case 32: {
            MsgType = input.ReadInt32();
            break;
          }
          case 42: {
            ImgUrl = input.ReadString();
            break;
          }
          case 48: {
            Time = input.ReadInt32();
            break;
          }
          case 56: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 66: {
            ImgUrl2 = input.ReadString();
            break;
          }
          case 72: {
            Time2 = input.ReadInt32();
            break;
          }
          case 80: {
            Leagueid2 = input.ReadInt32();
            break;
          }
          case 90: {
            ImgUrl3 = input.ReadString();
            break;
          }
          case 96: {
            Time3 = input.ReadInt32();
            break;
          }
          case 104: {
            Leagueid3 = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 18: {
            Content = input.ReadString();
            break;
          }
          case 24: {
            Pop = input.ReadBool();
            break;
          }
          case 32: {
            MsgType = input.ReadInt32();
            break;
          }
          case 42: {
            ImgUrl = input.ReadString();
            break;
          }
          case 48: {
            Time = input.ReadInt32();
            break;
          }
          case 56: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 66: {
            ImgUrl2 = input.ReadString();
            break;
          }
          case 72: {
            Time2 = input.ReadInt32();
            break;
          }
          case 80: {
            Leagueid2 = input.ReadInt32();
            break;
          }
          case 90: {
            ImgUrl3 = input.ReadString();
            break;
          }
          case 96: {
            Time3 = input.ReadInt32();
            break;
          }
          case 104: {
            Leagueid3 = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubInfo : pb::IMessage<ClubInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubInfo> _parser = new pb::MessageParser<ClubInfo>(() => new ClubInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    private int _hasBits1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubInfo(ClubInfo other) : this() {
      _hasBits0 = other._hasBits0;
      _hasBits1 = other._hasBits1;
      clubid_ = other.clubid_;
      name_ = other.name_;
      icon_ = other.icon_;
      blackboard_ = other.blackboard_;
      level_ = other.level_;
      num_ = other.num_;
      maxNum_ = other.maxNum_;
      role_ = other.role_;
      rooms_ = other.rooms_;
      levelLeft_ = other.levelLeft_;
      jointime_ = other.jointime_;
      ownerid_ = other.ownerid_;
      ownername_ = other.ownername_;
      ownericon_ = other.ownericon_;
      profit_ = other.profit_;
      playnum_ = other.playnum_;
      handsnum_ = other.handsnum_;
      ppcoin_ = other.ppcoin_;
      ppcoinPer_ = other.ppcoinPer_;
      clubConfig_ = other.clubConfig_ != null ? other.clubConfig_.Clone() : null;
      leagueList_ = other.leagueList_.Clone();
      agentPpcoin_ = other.agentPpcoin_;
      pushMsg_ = other.pushMsg_ != null ? other.pushMsg_.Clone() : null;
      freeRenameTimes_ = other.freeRenameTimes_;
      platform_ = other.platform_;
      timezoneId_ = other.timezoneId_;
      utcOffset_ = other.utcOffset_;
      priorityMaxLevel_ = other.priorityMaxLevel_;
      ban_ = other.ban_;
      leagueBan_ = other.leagueBan_;
      monthHandsnum_ = other.monthHandsnum_;
      discount_ = other.discount_;
      isMixedFree_ = other.isMixedFree_;
      superLeagueid_ = other.superLeagueid_;
      isStorm_ = other.isStorm_;
      blackboardTs_ = other.blackboardTs_;
      superLeague_ = other.superLeague_ != null ? other.superLeague_.Clone() : null;
      superLeagueType_ = other.superLeagueType_;
      authorityDetail_ = other.authorityDetail_;
      lastDayPlayMaxUser_ = other.lastDayPlayMaxUser_;
      plo6Release_ = other.plo6Release_;
      isAllowLeagueDataExport_ = other.isAllowLeagueDataExport_;
      ppstid_ = other.ppstid_;
      ppstIsAllowCreateRoom_ = other.ppstIsAllowCreateRoom_;
      allowCreateTeenpatti_ = other.allowCreateTeenpatti_;
      allowCreatePusoy_ = other.allowCreatePusoy_;
      ppstMinBuyIn_ = other.ppstMinBuyIn_;
      ppstExchangeRateDecimal_ = other.ppstExchangeRateDecimal_;
      ppsrid_ = other.ppsrid_;
      ppsrIsAllowCreateRoom_ = other.ppsrIsAllowCreateRoom_;
      ppsrMinBlind_ = other.ppsrMinBlind_;
      ppsrMinAnte_ = other.ppsrMinAnte_;
      ppsrOwnerclubid_ = other.ppsrOwnerclubid_;
      ppstMinBuyinV2_ = other.ppstMinBuyinV2_;
      isLuckyDrawOpen_ = other.isLuckyDrawOpen_;
      clubDailyReward_ = other.clubDailyReward_;
      ppsrIsAllowJackpot_ = other.ppsrIsAllowJackpot_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubInfo Clone() {
      return new ClubInfo(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 3;
    private readonly static string IconDefaultValue = "";

    private string icon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_ ?? IconDefaultValue; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIcon {
      get { return icon_ != null; }
    }
    /// <summary>Clears the value of the "icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIcon() {
      icon_ = null;
    }

    /// <summary>Field number for the "blackboard" field.</summary>
    public const int BlackboardFieldNumber = 4;
    private readonly static string BlackboardDefaultValue = "";

    private string blackboard_;
    /// <summary>
    ///简介
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Blackboard {
      get { return blackboard_ ?? BlackboardDefaultValue; }
      set {
        blackboard_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "blackboard" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlackboard {
      get { return blackboard_ != null; }
    }
    /// <summary>Clears the value of the "blackboard" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlackboard() {
      blackboard_ = null;
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 5;
    private readonly static int LevelDefaultValue = 0;

    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Level {
      get { if ((_hasBits0 & 1) != 0) { return level_; } else { return LevelDefaultValue; } }
      set {
        _hasBits0 |= 1;
        level_ = value;
      }
    }
    /// <summary>Gets whether the "level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLevel {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLevel() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 6;
    private readonly static int NumDefaultValue = 0;

    private int num_;
    /// <summary>
    ///人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Num {
      get { if ((_hasBits0 & 2) != 0) { return num_; } else { return NumDefaultValue; } }
      set {
        _hasBits0 |= 2;
        num_ = value;
      }
    }
    /// <summary>Gets whether the "num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNum {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNum() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "max_num" field.</summary>
    public const int MaxNumFieldNumber = 7;
    private readonly static int MaxNumDefaultValue = 0;

    private int maxNum_;
    /// <summary>
    ///人数限制
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxNum {
      get { if ((_hasBits0 & 4) != 0) { return maxNum_; } else { return MaxNumDefaultValue; } }
      set {
        _hasBits0 |= 4;
        maxNum_ = value;
      }
    }
    /// <summary>Gets whether the "max_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxNum {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "max_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxNum() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 8;
    private readonly static int RoleDefaultValue = 0;

    private int role_;
    /// <summary>
    /// 1 创始人  2 管理员  5 二级管理员 10 普通会员   20 非会员
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Role {
      get { if ((_hasBits0 & 8) != 0) { return role_; } else { return RoleDefaultValue; } }
      set {
        _hasBits0 |= 8;
        role_ = value;
      }
    }
    /// <summary>Gets whether the "role" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRole {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "role" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRole() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "rooms" field.</summary>
    public const int RoomsFieldNumber = 9;
    private readonly static int RoomsDefaultValue = 0;

    private int rooms_;
    /// <summary>
    ///当前桌子数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rooms {
      get { if ((_hasBits0 & 16) != 0) { return rooms_; } else { return RoomsDefaultValue; } }
      set {
        _hasBits0 |= 16;
        rooms_ = value;
      }
    }
    /// <summary>Gets whether the "rooms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRooms {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "rooms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRooms() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "level_left" field.</summary>
    public const int LevelLeftFieldNumber = 10;
    private readonly static int LevelLeftDefaultValue = 0;

    private int levelLeft_;
    /// <summary>
    ///俱乐部等级剩余天数  -1 表示永久  -2表示不可用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LevelLeft {
      get { if ((_hasBits0 & 32) != 0) { return levelLeft_; } else { return LevelLeftDefaultValue; } }
      set {
        _hasBits0 |= 32;
        levelLeft_ = value;
      }
    }
    /// <summary>Gets whether the "level_left" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLevelLeft {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "level_left" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLevelLeft() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "jointime" field.</summary>
    public const int JointimeFieldNumber = 11;
    private readonly static int JointimeDefaultValue = 0;

    private int jointime_;
    /// <summary>
    ///玩家加入俱乐部时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Jointime {
      get { if ((_hasBits0 & 64) != 0) { return jointime_; } else { return JointimeDefaultValue; } }
      set {
        _hasBits0 |= 64;
        jointime_ = value;
      }
    }
    /// <summary>Gets whether the "jointime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasJointime {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "jointime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearJointime() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "ownerid" field.</summary>
    public const int OwneridFieldNumber = 12;
    private readonly static long OwneridDefaultValue = 0L;

    private long ownerid_;
    /// <summary>
    ///创始人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Ownerid {
      get { if ((_hasBits0 & 128) != 0) { return ownerid_; } else { return OwneridDefaultValue; } }
      set {
        _hasBits0 |= 128;
        ownerid_ = value;
      }
    }
    /// <summary>Gets whether the "ownerid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnerid {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "ownerid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnerid() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "ownername" field.</summary>
    public const int OwnernameFieldNumber = 13;
    private readonly static string OwnernameDefaultValue = "";

    private string ownername_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ownername {
      get { return ownername_ ?? OwnernameDefaultValue; }
      set {
        ownername_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ownername" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnername {
      get { return ownername_ != null; }
    }
    /// <summary>Clears the value of the "ownername" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnername() {
      ownername_ = null;
    }

    /// <summary>Field number for the "ownericon" field.</summary>
    public const int OwnericonFieldNumber = 14;
    private readonly static string OwnericonDefaultValue = "";

    private string ownericon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ownericon {
      get { return ownericon_ ?? OwnericonDefaultValue; }
      set {
        ownericon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ownericon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnericon {
      get { return ownericon_ != null; }
    }
    /// <summary>Clears the value of the "ownericon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnericon() {
      ownericon_ = null;
    }

    /// <summary>Field number for the "profit" field.</summary>
    public const int ProfitFieldNumber = 15;
    private readonly static long ProfitDefaultValue = 0L;

    private long profit_;
    /// <summary>
    ///普通会员的统计数据为空
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Profit {
      get { if ((_hasBits0 & 256) != 0) { return profit_; } else { return ProfitDefaultValue; } }
      set {
        _hasBits0 |= 256;
        profit_ = value;
      }
    }
    /// <summary>Gets whether the "profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProfit {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProfit() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "playnum" field.</summary>
    public const int PlaynumFieldNumber = 16;
    private readonly static long PlaynumDefaultValue = 0L;

    private long playnum_;
    /// <summary>
    ///总开局数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Playnum {
      get { if ((_hasBits0 & 512) != 0) { return playnum_; } else { return PlaynumDefaultValue; } }
      set {
        _hasBits0 |= 512;
        playnum_ = value;
      }
    }
    /// <summary>Gets whether the "playnum" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlaynum {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "playnum" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlaynum() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "handsnum" field.</summary>
    public const int HandsnumFieldNumber = 17;
    private readonly static long HandsnumDefaultValue = 0L;

    private long handsnum_;
    /// <summary>
    ///手牌数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Handsnum {
      get { if ((_hasBits0 & 1024) != 0) { return handsnum_; } else { return HandsnumDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        handsnum_ = value;
      }
    }
    /// <summary>Gets whether the "handsnum" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHandsnum {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "handsnum" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHandsnum() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "ppcoin" field.</summary>
    public const int PpcoinFieldNumber = 18;
    private readonly static long PpcoinDefaultValue = 0L;

    private long ppcoin_;
    /// <summary>
    ///俱乐部pp币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Ppcoin {
      get { if ((_hasBits0 & 2048) != 0) { return ppcoin_; } else { return PpcoinDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        ppcoin_ = value;
      }
    }
    /// <summary>Gets whether the "ppcoin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpcoin {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "ppcoin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpcoin() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "ppcoin_per" field.</summary>
    public const int PpcoinPerFieldNumber = 19;
    private readonly static long PpcoinPerDefaultValue = 0L;

    private long ppcoinPer_;
    /// <summary>
    ///玩家个人pp币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PpcoinPer {
      get { if ((_hasBits0 & 4096) != 0) { return ppcoinPer_; } else { return PpcoinPerDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        ppcoinPer_ = value;
      }
    }
    /// <summary>Gets whether the "ppcoin_per" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpcoinPer {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "ppcoin_per" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpcoinPer() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "club_config" field.</summary>
    public const int ClubConfigFieldNumber = 20;
    private global::Texas.Protocol.ClubConfig clubConfig_;
    /// <summary>
    ///俱乐部配置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.ClubConfig ClubConfig {
      get { return clubConfig_; }
      set {
        clubConfig_ = value;
      }
    }

    /// <summary>Field number for the "league_list" field.</summary>
    public const int LeagueListFieldNumber = 21;
    private static readonly pb::FieldCodec<global::Texas.Protocol.LeagueInfo> _repeated_leagueList_codec
        = pb::FieldCodec.ForMessage(170, global::Texas.Protocol.LeagueInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.LeagueInfo> leagueList_ = new pbc::RepeatedField<global::Texas.Protocol.LeagueInfo>();
    /// <summary>
    ///加入的联盟列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.LeagueInfo> LeagueList {
      get { return leagueList_; }
    }

    /// <summary>Field number for the "agent_ppcoin" field.</summary>
    public const int AgentPpcoinFieldNumber = 22;
    private readonly static long AgentPpcoinDefaultValue = 0L;

    private long agentPpcoin_;
    /// <summary>
    ///代理pp币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AgentPpcoin {
      get { if ((_hasBits0 & 8192) != 0) { return agentPpcoin_; } else { return AgentPpcoinDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        agentPpcoin_ = value;
      }
    }
    /// <summary>Gets whether the "agent_ppcoin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgentPpcoin {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "agent_ppcoin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgentPpcoin() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "push_msg" field.</summary>
    public const int PushMsgFieldNumber = 23;
    private global::Texas.Protocol.ClubPushMsg pushMsg_;
    /// <summary>
    /// 俱乐部推送消息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.ClubPushMsg PushMsg {
      get { return pushMsg_; }
      set {
        pushMsg_ = value;
      }
    }

    /// <summary>Field number for the "free_rename_times" field.</summary>
    public const int FreeRenameTimesFieldNumber = 24;
    private readonly static int FreeRenameTimesDefaultValue = 0;

    private int freeRenameTimes_;
    /// <summary>
    ///免费改名次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FreeRenameTimes {
      get { if ((_hasBits0 & 16384) != 0) { return freeRenameTimes_; } else { return FreeRenameTimesDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        freeRenameTimes_ = value;
      }
    }
    /// <summary>Gets whether the "free_rename_times" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFreeRenameTimes {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "free_rename_times" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFreeRenameTimes() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "platform" field.</summary>
    public const int PlatformFieldNumber = 25;
    private readonly static string PlatformDefaultValue = "";

    private string platform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Platform {
      get { return platform_ ?? PlatformDefaultValue; }
      set {
        platform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "platform" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlatform {
      get { return platform_ != null; }
    }
    /// <summary>Clears the value of the "platform" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlatform() {
      platform_ = null;
    }

    /// <summary>Field number for the "timezone_id" field.</summary>
    public const int TimezoneIdFieldNumber = 26;
    private readonly static string TimezoneIdDefaultValue = "";

    private string timezoneId_;
    /// <summary>
    ///时区id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TimezoneId {
      get { return timezoneId_ ?? TimezoneIdDefaultValue; }
      set {
        timezoneId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "timezone_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimezoneId {
      get { return timezoneId_ != null; }
    }
    /// <summary>Clears the value of the "timezone_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimezoneId() {
      timezoneId_ = null;
    }

    /// <summary>Field number for the "utc_offset" field.</summary>
    public const int UtcOffsetFieldNumber = 27;
    private readonly static string UtcOffsetDefaultValue = "";

    private string utcOffset_;
    /// <summary>
    /// utc偏移量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UtcOffset {
      get { return utcOffset_ ?? UtcOffsetDefaultValue; }
      set {
        utcOffset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "utc_offset" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUtcOffset {
      get { return utcOffset_ != null; }
    }
    /// <summary>Clears the value of the "utc_offset" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUtcOffset() {
      utcOffset_ = null;
    }

    /// <summary>Field number for the "priority_max_level" field.</summary>
    public const int PriorityMaxLevelFieldNumber = 28;
    private readonly static int PriorityMaxLevelDefaultValue = 0;

    private int priorityMaxLevel_;
    /// <summary>
    ///是否具有9星级别的俱乐部
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PriorityMaxLevel {
      get { if ((_hasBits0 & 32768) != 0) { return priorityMaxLevel_; } else { return PriorityMaxLevelDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        priorityMaxLevel_ = value;
      }
    }
    /// <summary>Gets whether the "priority_max_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPriorityMaxLevel {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "priority_max_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPriorityMaxLevel() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "ban" field.</summary>
    public const int BanFieldNumber = 29;
    private readonly static int BanDefaultValue = 0;

    private int ban_;
    /// <summary>
    ///是否被封禁
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ban {
      get { if ((_hasBits0 & 65536) != 0) { return ban_; } else { return BanDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        ban_ = value;
      }
    }
    /// <summary>Gets whether the "ban" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBan {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "ban" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBan() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "league_ban" field.</summary>
    public const int LeagueBanFieldNumber = 30;
    private readonly static int LeagueBanDefaultValue = 0;

    private int leagueBan_;
    /// <summary>
    ///is ban by league	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LeagueBan {
      get { if ((_hasBits0 & 131072) != 0) { return leagueBan_; } else { return LeagueBanDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        leagueBan_ = value;
      }
    }
    /// <summary>Gets whether the "league_ban" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueBan {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "league_ban" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueBan() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "month_handsnum" field.</summary>
    public const int MonthHandsnumFieldNumber = 31;
    private readonly static int MonthHandsnumDefaultValue = 0;

    private int monthHandsnum_;
    /// <summary>
    ///月手牌数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MonthHandsnum {
      get { if ((_hasBits0 & 262144) != 0) { return monthHandsnum_; } else { return MonthHandsnumDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        monthHandsnum_ = value;
      }
    }
    /// <summary>Gets whether the "month_handsnum" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMonthHandsnum {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "month_handsnum" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMonthHandsnum() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "discount" field.</summary>
    public const int DiscountFieldNumber = 32;
    private readonly static int DiscountDefaultValue = 0;

    private int discount_;
    /// <summary>
    /// 折扣 0折(免费)=0 1折=10 8折=80 10折(不打折)=100
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Discount {
      get { if ((_hasBits0 & 524288) != 0) { return discount_; } else { return DiscountDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        discount_ = value;
      }
    }
    /// <summary>Gets whether the "discount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDiscount {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "discount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDiscount() {
      _hasBits0 &= ~524288;
    }

    /// <summary>Field number for the "is_mixed_free" field.</summary>
    public const int IsMixedFreeFieldNumber = 33;
    private readonly static bool IsMixedFreeDefaultValue = false;

    private bool isMixedFree_;
    /// <summary>
    ///混合游戏开桌是否免费
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsMixedFree {
      get { if ((_hasBits0 & 1048576) != 0) { return isMixedFree_; } else { return IsMixedFreeDefaultValue; } }
      set {
        _hasBits0 |= 1048576;
        isMixedFree_ = value;
      }
    }
    /// <summary>Gets whether the "is_mixed_free" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsMixedFree {
      get { return (_hasBits0 & 1048576) != 0; }
    }
    /// <summary>Clears the value of the "is_mixed_free" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsMixedFree() {
      _hasBits0 &= ~1048576;
    }

    /// <summary>Field number for the "super_leagueid" field.</summary>
    public const int SuperLeagueidFieldNumber = 34;
    private readonly static int SuperLeagueidDefaultValue = 0;

    private int superLeagueid_;
    /// <summary>
    /// 超级联盟id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueid {
      get { if ((_hasBits0 & 2097152) != 0) { return superLeagueid_; } else { return SuperLeagueidDefaultValue; } }
      set {
        _hasBits0 |= 2097152;
        superLeagueid_ = value;
      }
    }
    /// <summary>Gets whether the "super_leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueid {
      get { return (_hasBits0 & 2097152) != 0; }
    }
    /// <summary>Clears the value of the "super_leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueid() {
      _hasBits0 &= ~2097152;
    }

    /// <summary>Field number for the "is_storm" field.</summary>
    public const int IsStormFieldNumber = 35;
    private readonly static bool IsStormDefaultValue = false;

    private bool isStorm_;
    /// <summary>
    ///俱乐部是否参与过红包雨
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsStorm {
      get { if ((_hasBits0 & 4194304) != 0) { return isStorm_; } else { return IsStormDefaultValue; } }
      set {
        _hasBits0 |= 4194304;
        isStorm_ = value;
      }
    }
    /// <summary>Gets whether the "is_storm" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsStorm {
      get { return (_hasBits0 & 4194304) != 0; }
    }
    /// <summary>Clears the value of the "is_storm" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsStorm() {
      _hasBits0 &= ~4194304;
    }

    /// <summary>Field number for the "blackboard_ts" field.</summary>
    public const int BlackboardTsFieldNumber = 36;
    private readonly static long BlackboardTsDefaultValue = 0L;

    private long blackboardTs_;
    /// <summary>
    /// 简介最新更新时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BlackboardTs {
      get { if ((_hasBits0 & 8388608) != 0) { return blackboardTs_; } else { return BlackboardTsDefaultValue; } }
      set {
        _hasBits0 |= 8388608;
        blackboardTs_ = value;
      }
    }
    /// <summary>Gets whether the "blackboard_ts" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlackboardTs {
      get { return (_hasBits0 & 8388608) != 0; }
    }
    /// <summary>Clears the value of the "blackboard_ts" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlackboardTs() {
      _hasBits0 &= ~8388608;
    }

    /// <summary>Field number for the "super_league" field.</summary>
    public const int SuperLeagueFieldNumber = 37;
    private global::Texas.Protocol.SuperLeagueInfo superLeague_;
    /// <summary>
    ///超级联盟信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.SuperLeagueInfo SuperLeague {
      get { return superLeague_; }
      set {
        superLeague_ = value;
      }
    }

    /// <summary>Field number for the "super_league_type" field.</summary>
    public const int SuperLeagueTypeFieldNumber = 38;
    private readonly static int SuperLeagueTypeDefaultValue = 0;

    private int superLeagueType_;
    /// <summary>
    /// 1表示非ppst的超级联盟
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueType {
      get { if ((_hasBits0 & 16777216) != 0) { return superLeagueType_; } else { return SuperLeagueTypeDefaultValue; } }
      set {
        _hasBits0 |= 16777216;
        superLeagueType_ = value;
      }
    }
    /// <summary>Gets whether the "super_league_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueType {
      get { return (_hasBits0 & 16777216) != 0; }
    }
    /// <summary>Clears the value of the "super_league_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueType() {
      _hasBits0 &= ~16777216;
    }

    /// <summary>Field number for the "authority_detail" field.</summary>
    public const int AuthorityDetailFieldNumber = 39;
    private readonly static int AuthorityDetailDefaultValue = 0;

    private int authorityDetail_;
    /// <summary>
    ///每个bit位表示一个权限控制开关，目前使用1-7bit, 从低位向高位
    ///1bit member control 2bit agent set 3bit data export 4bit diamond use like pp charge/send vip/change club name 
    ///5bit  send/recv pp ticket 6bit create table 7bit change club notice etc
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AuthorityDetail {
      get { if ((_hasBits0 & 33554432) != 0) { return authorityDetail_; } else { return AuthorityDetailDefaultValue; } }
      set {
        _hasBits0 |= 33554432;
        authorityDetail_ = value;
      }
    }
    /// <summary>Gets whether the "authority_detail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAuthorityDetail {
      get { return (_hasBits0 & 33554432) != 0; }
    }
    /// <summary>Clears the value of the "authority_detail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAuthorityDetail() {
      _hasBits0 &= ~33554432;
    }

    /// <summary>Field number for the "last_day_play_max_user" field.</summary>
    public const int LastDayPlayMaxUserFieldNumber = 40;
    private readonly static int LastDayPlayMaxUserDefaultValue = 0;

    private int lastDayPlayMaxUser_;
    /// <summary>
    ///表示超级联盟/联盟/俱乐部 昨日在玩高峰人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LastDayPlayMaxUser {
      get { if ((_hasBits0 & 67108864) != 0) { return lastDayPlayMaxUser_; } else { return LastDayPlayMaxUserDefaultValue; } }
      set {
        _hasBits0 |= 67108864;
        lastDayPlayMaxUser_ = value;
      }
    }
    /// <summary>Gets whether the "last_day_play_max_user" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLastDayPlayMaxUser {
      get { return (_hasBits0 & 67108864) != 0; }
    }
    /// <summary>Clears the value of the "last_day_play_max_user" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLastDayPlayMaxUser() {
      _hasBits0 &= ~67108864;
    }

    /// <summary>Field number for the "plo6_release" field.</summary>
    public const int Plo6ReleaseFieldNumber = 41;
    private readonly static bool Plo6ReleaseDefaultValue = false;

    private bool plo6Release_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Plo6Release {
      get { if ((_hasBits0 & 134217728) != 0) { return plo6Release_; } else { return Plo6ReleaseDefaultValue; } }
      set {
        _hasBits0 |= 134217728;
        plo6Release_ = value;
      }
    }
    /// <summary>Gets whether the "plo6_release" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlo6Release {
      get { return (_hasBits0 & 134217728) != 0; }
    }
    /// <summary>Clears the value of the "plo6_release" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlo6Release() {
      _hasBits0 &= ~134217728;
    }

    /// <summary>Field number for the "is_allow_league_data_export" field.</summary>
    public const int IsAllowLeagueDataExportFieldNumber = 42;
    private readonly static bool IsAllowLeagueDataExportDefaultValue = false;

    private bool isAllowLeagueDataExport_;
    /// <summary>
    ///是否允许俱乐部导出联盟及超级联盟数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAllowLeagueDataExport {
      get { if ((_hasBits0 & 268435456) != 0) { return isAllowLeagueDataExport_; } else { return IsAllowLeagueDataExportDefaultValue; } }
      set {
        _hasBits0 |= 268435456;
        isAllowLeagueDataExport_ = value;
      }
    }
    /// <summary>Gets whether the "is_allow_league_data_export" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsAllowLeagueDataExport {
      get { return (_hasBits0 & 268435456) != 0; }
    }
    /// <summary>Clears the value of the "is_allow_league_data_export" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsAllowLeagueDataExport() {
      _hasBits0 &= ~268435456;
    }

    /// <summary>Field number for the "ppstid" field.</summary>
    public const int PpstidFieldNumber = 43;
    private readonly static int PpstidDefaultValue = 0;

    private int ppstid_;
    /// <summary>
    ///新版ppstid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ppstid {
      get { if ((_hasBits0 & 536870912) != 0) { return ppstid_; } else { return PpstidDefaultValue; } }
      set {
        _hasBits0 |= 536870912;
        ppstid_ = value;
      }
    }
    /// <summary>Gets whether the "ppstid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpstid {
      get { return (_hasBits0 & 536870912) != 0; }
    }
    /// <summary>Clears the value of the "ppstid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpstid() {
      _hasBits0 &= ~536870912;
    }

    /// <summary>Field number for the "ppst_is_allow_create_room" field.</summary>
    public const int PpstIsAllowCreateRoomFieldNumber = 44;
    private readonly static bool PpstIsAllowCreateRoomDefaultValue = false;

    private bool ppstIsAllowCreateRoom_;
    /// <summary>
    ///ppst開房權限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PpstIsAllowCreateRoom {
      get { if ((_hasBits0 & 1073741824) != 0) { return ppstIsAllowCreateRoom_; } else { return PpstIsAllowCreateRoomDefaultValue; } }
      set {
        _hasBits0 |= 1073741824;
        ppstIsAllowCreateRoom_ = value;
      }
    }
    /// <summary>Gets whether the "ppst_is_allow_create_room" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpstIsAllowCreateRoom {
      get { return (_hasBits0 & 1073741824) != 0; }
    }
    /// <summary>Clears the value of the "ppst_is_allow_create_room" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpstIsAllowCreateRoom() {
      _hasBits0 &= ~1073741824;
    }

    /// <summary>Field number for the "allow_create_teenpatti" field.</summary>
    public const int AllowCreateTeenpattiFieldNumber = 45;
    private readonly static bool AllowCreateTeenpattiDefaultValue = false;

    private bool allowCreateTeenpatti_;
    /// <summary>
    ///是否允许建立teenpatti牌桌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AllowCreateTeenpatti {
      get { if ((_hasBits0 & -2147483648) != 0) { return allowCreateTeenpatti_; } else { return AllowCreateTeenpattiDefaultValue; } }
      set {
        _hasBits0 |= -2147483648;
        allowCreateTeenpatti_ = value;
      }
    }
    /// <summary>Gets whether the "allow_create_teenpatti" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAllowCreateTeenpatti {
      get { return (_hasBits0 & -2147483648) != 0; }
    }
    /// <summary>Clears the value of the "allow_create_teenpatti" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAllowCreateTeenpatti() {
      _hasBits0 &= ~-2147483648;
    }

    /// <summary>Field number for the "allow_create_pusoy" field.</summary>
    public const int AllowCreatePusoyFieldNumber = 46;
    private readonly static bool AllowCreatePusoyDefaultValue = false;

    private bool allowCreatePusoy_;
    /// <summary>
    ///是否允许建立pusoy牌桌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AllowCreatePusoy {
      get { if ((_hasBits1 & 1) != 0) { return allowCreatePusoy_; } else { return AllowCreatePusoyDefaultValue; } }
      set {
        _hasBits1 |= 1;
        allowCreatePusoy_ = value;
      }
    }
    /// <summary>Gets whether the "allow_create_pusoy" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAllowCreatePusoy {
      get { return (_hasBits1 & 1) != 0; }
    }
    /// <summary>Clears the value of the "allow_create_pusoy" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAllowCreatePusoy() {
      _hasBits1 &= ~1;
    }

    /// <summary>Field number for the "ppst_min_buy_in" field.</summary>
    public const int PpstMinBuyInFieldNumber = 47;
    private readonly static int PpstMinBuyInDefaultValue = 0;

    private int ppstMinBuyIn_;
    /// <summary>
    ///ppst最低買入級別
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PpstMinBuyIn {
      get { if ((_hasBits1 & 2) != 0) { return ppstMinBuyIn_; } else { return PpstMinBuyInDefaultValue; } }
      set {
        _hasBits1 |= 2;
        ppstMinBuyIn_ = value;
      }
    }
    /// <summary>Gets whether the "ppst_min_buy_in" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpstMinBuyIn {
      get { return (_hasBits1 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ppst_min_buy_in" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpstMinBuyIn() {
      _hasBits1 &= ~2;
    }

    /// <summary>Field number for the "ppst_exchange_rate_decimal" field.</summary>
    public const int PpstExchangeRateDecimalFieldNumber = 48;
    private readonly static int PpstExchangeRateDecimalDefaultValue = 0;

    private int ppstExchangeRateDecimal_;
    /// <summary>
    ///ppst匯率精度級別 0:整數 1:小數一位 2:小數兩位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PpstExchangeRateDecimal {
      get { if ((_hasBits1 & 4) != 0) { return ppstExchangeRateDecimal_; } else { return PpstExchangeRateDecimalDefaultValue; } }
      set {
        _hasBits1 |= 4;
        ppstExchangeRateDecimal_ = value;
      }
    }
    /// <summary>Gets whether the "ppst_exchange_rate_decimal" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpstExchangeRateDecimal {
      get { return (_hasBits1 & 4) != 0; }
    }
    /// <summary>Clears the value of the "ppst_exchange_rate_decimal" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpstExchangeRateDecimal() {
      _hasBits1 &= ~4;
    }

    /// <summary>Field number for the "ppsrid" field.</summary>
    public const int PpsridFieldNumber = 49;
    private readonly static int PpsridDefaultValue = 0;

    private int ppsrid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ppsrid {
      get { if ((_hasBits1 & 8) != 0) { return ppsrid_; } else { return PpsridDefaultValue; } }
      set {
        _hasBits1 |= 8;
        ppsrid_ = value;
      }
    }
    /// <summary>Gets whether the "ppsrid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpsrid {
      get { return (_hasBits1 & 8) != 0; }
    }
    /// <summary>Clears the value of the "ppsrid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpsrid() {
      _hasBits1 &= ~8;
    }

    /// <summary>Field number for the "ppsr_is_allow_create_room" field.</summary>
    public const int PpsrIsAllowCreateRoomFieldNumber = 50;
    private readonly static bool PpsrIsAllowCreateRoomDefaultValue = false;

    private bool ppsrIsAllowCreateRoom_;
    /// <summary>
    ///ppsr開房權限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PpsrIsAllowCreateRoom {
      get { if ((_hasBits1 & 16) != 0) { return ppsrIsAllowCreateRoom_; } else { return PpsrIsAllowCreateRoomDefaultValue; } }
      set {
        _hasBits1 |= 16;
        ppsrIsAllowCreateRoom_ = value;
      }
    }
    /// <summary>Gets whether the "ppsr_is_allow_create_room" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpsrIsAllowCreateRoom {
      get { return (_hasBits1 & 16) != 0; }
    }
    /// <summary>Clears the value of the "ppsr_is_allow_create_room" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpsrIsAllowCreateRoom() {
      _hasBits1 &= ~16;
    }

    /// <summary>Field number for the "ppsr_min_blind" field.</summary>
    public const int PpsrMinBlindFieldNumber = 51;
    private readonly static int PpsrMinBlindDefaultValue = 0;

    private int ppsrMinBlind_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PpsrMinBlind {
      get { if ((_hasBits1 & 32) != 0) { return ppsrMinBlind_; } else { return PpsrMinBlindDefaultValue; } }
      set {
        _hasBits1 |= 32;
        ppsrMinBlind_ = value;
      }
    }
    /// <summary>Gets whether the "ppsr_min_blind" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpsrMinBlind {
      get { return (_hasBits1 & 32) != 0; }
    }
    /// <summary>Clears the value of the "ppsr_min_blind" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpsrMinBlind() {
      _hasBits1 &= ~32;
    }

    /// <summary>Field number for the "ppsr_min_ante" field.</summary>
    public const int PpsrMinAnteFieldNumber = 52;
    private readonly static int PpsrMinAnteDefaultValue = 0;

    private int ppsrMinAnte_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PpsrMinAnte {
      get { if ((_hasBits1 & 64) != 0) { return ppsrMinAnte_; } else { return PpsrMinAnteDefaultValue; } }
      set {
        _hasBits1 |= 64;
        ppsrMinAnte_ = value;
      }
    }
    /// <summary>Gets whether the "ppsr_min_ante" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpsrMinAnte {
      get { return (_hasBits1 & 64) != 0; }
    }
    /// <summary>Clears the value of the "ppsr_min_ante" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpsrMinAnte() {
      _hasBits1 &= ~64;
    }

    /// <summary>Field number for the "ppsr_ownerclubid" field.</summary>
    public const int PpsrOwnerclubidFieldNumber = 53;
    private readonly static int PpsrOwnerclubidDefaultValue = 0;

    private int ppsrOwnerclubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PpsrOwnerclubid {
      get { if ((_hasBits1 & 128) != 0) { return ppsrOwnerclubid_; } else { return PpsrOwnerclubidDefaultValue; } }
      set {
        _hasBits1 |= 128;
        ppsrOwnerclubid_ = value;
      }
    }
    /// <summary>Gets whether the "ppsr_ownerclubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpsrOwnerclubid {
      get { return (_hasBits1 & 128) != 0; }
    }
    /// <summary>Clears the value of the "ppsr_ownerclubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpsrOwnerclubid() {
      _hasBits1 &= ~128;
    }

    /// <summary>Field number for the "ppst_min_buyin_v2" field.</summary>
    public const int PpstMinBuyinV2FieldNumber = 54;
    private readonly static int PpstMinBuyinV2DefaultValue = 0;

    private int ppstMinBuyinV2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PpstMinBuyinV2 {
      get { if ((_hasBits1 & 256) != 0) { return ppstMinBuyinV2_; } else { return PpstMinBuyinV2DefaultValue; } }
      set {
        _hasBits1 |= 256;
        ppstMinBuyinV2_ = value;
      }
    }
    /// <summary>Gets whether the "ppst_min_buyin_v2" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpstMinBuyinV2 {
      get { return (_hasBits1 & 256) != 0; }
    }
    /// <summary>Clears the value of the "ppst_min_buyin_v2" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpstMinBuyinV2() {
      _hasBits1 &= ~256;
    }

    /// <summary>Field number for the "is_lucky_draw_open" field.</summary>
    public const int IsLuckyDrawOpenFieldNumber = 55;
    private readonly static bool IsLuckyDrawOpenDefaultValue = false;

    private bool isLuckyDrawOpen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsLuckyDrawOpen {
      get { if ((_hasBits1 & 512) != 0) { return isLuckyDrawOpen_; } else { return IsLuckyDrawOpenDefaultValue; } }
      set {
        _hasBits1 |= 512;
        isLuckyDrawOpen_ = value;
      }
    }
    /// <summary>Gets whether the "is_lucky_draw_open" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsLuckyDrawOpen {
      get { return (_hasBits1 & 512) != 0; }
    }
    /// <summary>Clears the value of the "is_lucky_draw_open" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsLuckyDrawOpen() {
      _hasBits1 &= ~512;
    }

    /// <summary>Field number for the "club_daily_reward" field.</summary>
    public const int ClubDailyRewardFieldNumber = 56;
    private readonly static int ClubDailyRewardDefaultValue = 0;

    private int clubDailyReward_;
    /// <summary>
    /// > 0: get daily reward successfully
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ClubDailyReward {
      get { if ((_hasBits1 & 1024) != 0) { return clubDailyReward_; } else { return ClubDailyRewardDefaultValue; } }
      set {
        _hasBits1 |= 1024;
        clubDailyReward_ = value;
      }
    }
    /// <summary>Gets whether the "club_daily_reward" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubDailyReward {
      get { return (_hasBits1 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "club_daily_reward" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubDailyReward() {
      _hasBits1 &= ~1024;
    }

    /// <summary>Field number for the "ppsr_is_allow_jackpot" field.</summary>
    public const int PpsrIsAllowJackpotFieldNumber = 57;
    private readonly static bool PpsrIsAllowJackpotDefaultValue = false;

    private bool ppsrIsAllowJackpot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PpsrIsAllowJackpot {
      get { if ((_hasBits1 & 2048) != 0) { return ppsrIsAllowJackpot_; } else { return PpsrIsAllowJackpotDefaultValue; } }
      set {
        _hasBits1 |= 2048;
        ppsrIsAllowJackpot_ = value;
      }
    }
    /// <summary>Gets whether the "ppsr_is_allow_jackpot" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpsrIsAllowJackpot {
      get { return (_hasBits1 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "ppsr_is_allow_jackpot" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpsrIsAllowJackpot() {
      _hasBits1 &= ~2048;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Name != other.Name) return false;
      if (Icon != other.Icon) return false;
      if (Blackboard != other.Blackboard) return false;
      if (Level != other.Level) return false;
      if (Num != other.Num) return false;
      if (MaxNum != other.MaxNum) return false;
      if (Role != other.Role) return false;
      if (Rooms != other.Rooms) return false;
      if (LevelLeft != other.LevelLeft) return false;
      if (Jointime != other.Jointime) return false;
      if (Ownerid != other.Ownerid) return false;
      if (Ownername != other.Ownername) return false;
      if (Ownericon != other.Ownericon) return false;
      if (Profit != other.Profit) return false;
      if (Playnum != other.Playnum) return false;
      if (Handsnum != other.Handsnum) return false;
      if (Ppcoin != other.Ppcoin) return false;
      if (PpcoinPer != other.PpcoinPer) return false;
      if (!object.Equals(ClubConfig, other.ClubConfig)) return false;
      if(!leagueList_.Equals(other.leagueList_)) return false;
      if (AgentPpcoin != other.AgentPpcoin) return false;
      if (!object.Equals(PushMsg, other.PushMsg)) return false;
      if (FreeRenameTimes != other.FreeRenameTimes) return false;
      if (Platform != other.Platform) return false;
      if (TimezoneId != other.TimezoneId) return false;
      if (UtcOffset != other.UtcOffset) return false;
      if (PriorityMaxLevel != other.PriorityMaxLevel) return false;
      if (Ban != other.Ban) return false;
      if (LeagueBan != other.LeagueBan) return false;
      if (MonthHandsnum != other.MonthHandsnum) return false;
      if (Discount != other.Discount) return false;
      if (IsMixedFree != other.IsMixedFree) return false;
      if (SuperLeagueid != other.SuperLeagueid) return false;
      if (IsStorm != other.IsStorm) return false;
      if (BlackboardTs != other.BlackboardTs) return false;
      if (!object.Equals(SuperLeague, other.SuperLeague)) return false;
      if (SuperLeagueType != other.SuperLeagueType) return false;
      if (AuthorityDetail != other.AuthorityDetail) return false;
      if (LastDayPlayMaxUser != other.LastDayPlayMaxUser) return false;
      if (Plo6Release != other.Plo6Release) return false;
      if (IsAllowLeagueDataExport != other.IsAllowLeagueDataExport) return false;
      if (Ppstid != other.Ppstid) return false;
      if (PpstIsAllowCreateRoom != other.PpstIsAllowCreateRoom) return false;
      if (AllowCreateTeenpatti != other.AllowCreateTeenpatti) return false;
      if (AllowCreatePusoy != other.AllowCreatePusoy) return false;
      if (PpstMinBuyIn != other.PpstMinBuyIn) return false;
      if (PpstExchangeRateDecimal != other.PpstExchangeRateDecimal) return false;
      if (Ppsrid != other.Ppsrid) return false;
      if (PpsrIsAllowCreateRoom != other.PpsrIsAllowCreateRoom) return false;
      if (PpsrMinBlind != other.PpsrMinBlind) return false;
      if (PpsrMinAnte != other.PpsrMinAnte) return false;
      if (PpsrOwnerclubid != other.PpsrOwnerclubid) return false;
      if (PpstMinBuyinV2 != other.PpstMinBuyinV2) return false;
      if (IsLuckyDrawOpen != other.IsLuckyDrawOpen) return false;
      if (ClubDailyReward != other.ClubDailyReward) return false;
      if (PpsrIsAllowJackpot != other.PpsrIsAllowJackpot) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasIcon) hash ^= Icon.GetHashCode();
      if (HasBlackboard) hash ^= Blackboard.GetHashCode();
      if (HasLevel) hash ^= Level.GetHashCode();
      if (HasNum) hash ^= Num.GetHashCode();
      if (HasMaxNum) hash ^= MaxNum.GetHashCode();
      if (HasRole) hash ^= Role.GetHashCode();
      if (HasRooms) hash ^= Rooms.GetHashCode();
      if (HasLevelLeft) hash ^= LevelLeft.GetHashCode();
      if (HasJointime) hash ^= Jointime.GetHashCode();
      if (HasOwnerid) hash ^= Ownerid.GetHashCode();
      if (HasOwnername) hash ^= Ownername.GetHashCode();
      if (HasOwnericon) hash ^= Ownericon.GetHashCode();
      if (HasProfit) hash ^= Profit.GetHashCode();
      if (HasPlaynum) hash ^= Playnum.GetHashCode();
      if (HasHandsnum) hash ^= Handsnum.GetHashCode();
      if (HasPpcoin) hash ^= Ppcoin.GetHashCode();
      if (HasPpcoinPer) hash ^= PpcoinPer.GetHashCode();
      if (clubConfig_ != null) hash ^= ClubConfig.GetHashCode();
      hash ^= leagueList_.GetHashCode();
      if (HasAgentPpcoin) hash ^= AgentPpcoin.GetHashCode();
      if (pushMsg_ != null) hash ^= PushMsg.GetHashCode();
      if (HasFreeRenameTimes) hash ^= FreeRenameTimes.GetHashCode();
      if (HasPlatform) hash ^= Platform.GetHashCode();
      if (HasTimezoneId) hash ^= TimezoneId.GetHashCode();
      if (HasUtcOffset) hash ^= UtcOffset.GetHashCode();
      if (HasPriorityMaxLevel) hash ^= PriorityMaxLevel.GetHashCode();
      if (HasBan) hash ^= Ban.GetHashCode();
      if (HasLeagueBan) hash ^= LeagueBan.GetHashCode();
      if (HasMonthHandsnum) hash ^= MonthHandsnum.GetHashCode();
      if (HasDiscount) hash ^= Discount.GetHashCode();
      if (HasIsMixedFree) hash ^= IsMixedFree.GetHashCode();
      if (HasSuperLeagueid) hash ^= SuperLeagueid.GetHashCode();
      if (HasIsStorm) hash ^= IsStorm.GetHashCode();
      if (HasBlackboardTs) hash ^= BlackboardTs.GetHashCode();
      if (superLeague_ != null) hash ^= SuperLeague.GetHashCode();
      if (HasSuperLeagueType) hash ^= SuperLeagueType.GetHashCode();
      if (HasAuthorityDetail) hash ^= AuthorityDetail.GetHashCode();
      if (HasLastDayPlayMaxUser) hash ^= LastDayPlayMaxUser.GetHashCode();
      if (HasPlo6Release) hash ^= Plo6Release.GetHashCode();
      if (HasIsAllowLeagueDataExport) hash ^= IsAllowLeagueDataExport.GetHashCode();
      if (HasPpstid) hash ^= Ppstid.GetHashCode();
      if (HasPpstIsAllowCreateRoom) hash ^= PpstIsAllowCreateRoom.GetHashCode();
      if (HasAllowCreateTeenpatti) hash ^= AllowCreateTeenpatti.GetHashCode();
      if (HasAllowCreatePusoy) hash ^= AllowCreatePusoy.GetHashCode();
      if (HasPpstMinBuyIn) hash ^= PpstMinBuyIn.GetHashCode();
      if (HasPpstExchangeRateDecimal) hash ^= PpstExchangeRateDecimal.GetHashCode();
      if (HasPpsrid) hash ^= Ppsrid.GetHashCode();
      if (HasPpsrIsAllowCreateRoom) hash ^= PpsrIsAllowCreateRoom.GetHashCode();
      if (HasPpsrMinBlind) hash ^= PpsrMinBlind.GetHashCode();
      if (HasPpsrMinAnte) hash ^= PpsrMinAnte.GetHashCode();
      if (HasPpsrOwnerclubid) hash ^= PpsrOwnerclubid.GetHashCode();
      if (HasPpstMinBuyinV2) hash ^= PpstMinBuyinV2.GetHashCode();
      if (HasIsLuckyDrawOpen) hash ^= IsLuckyDrawOpen.GetHashCode();
      if (HasClubDailyReward) hash ^= ClubDailyReward.GetHashCode();
      if (HasPpsrIsAllowJackpot) hash ^= PpsrIsAllowJackpot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasIcon) {
        output.WriteRawTag(26);
        output.WriteString(Icon);
      }
      if (HasBlackboard) {
        output.WriteRawTag(34);
        output.WriteString(Blackboard);
      }
      if (HasLevel) {
        output.WriteRawTag(40);
        output.WriteInt32(Level);
      }
      if (HasNum) {
        output.WriteRawTag(48);
        output.WriteInt32(Num);
      }
      if (HasMaxNum) {
        output.WriteRawTag(56);
        output.WriteInt32(MaxNum);
      }
      if (HasRole) {
        output.WriteRawTag(64);
        output.WriteInt32(Role);
      }
      if (HasRooms) {
        output.WriteRawTag(72);
        output.WriteInt32(Rooms);
      }
      if (HasLevelLeft) {
        output.WriteRawTag(80);
        output.WriteInt32(LevelLeft);
      }
      if (HasJointime) {
        output.WriteRawTag(88);
        output.WriteInt32(Jointime);
      }
      if (HasOwnerid) {
        output.WriteRawTag(96);
        output.WriteInt64(Ownerid);
      }
      if (HasOwnername) {
        output.WriteRawTag(106);
        output.WriteString(Ownername);
      }
      if (HasOwnericon) {
        output.WriteRawTag(114);
        output.WriteString(Ownericon);
      }
      if (HasProfit) {
        output.WriteRawTag(120);
        output.WriteInt64(Profit);
      }
      if (HasPlaynum) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(Playnum);
      }
      if (HasHandsnum) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(Handsnum);
      }
      if (HasPpcoin) {
        output.WriteRawTag(144, 1);
        output.WriteInt64(Ppcoin);
      }
      if (HasPpcoinPer) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(PpcoinPer);
      }
      if (clubConfig_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(ClubConfig);
      }
      leagueList_.WriteTo(output, _repeated_leagueList_codec);
      if (HasAgentPpcoin) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(AgentPpcoin);
      }
      if (pushMsg_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(PushMsg);
      }
      if (HasFreeRenameTimes) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(FreeRenameTimes);
      }
      if (HasPlatform) {
        output.WriteRawTag(202, 1);
        output.WriteString(Platform);
      }
      if (HasTimezoneId) {
        output.WriteRawTag(210, 1);
        output.WriteString(TimezoneId);
      }
      if (HasUtcOffset) {
        output.WriteRawTag(218, 1);
        output.WriteString(UtcOffset);
      }
      if (HasPriorityMaxLevel) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(PriorityMaxLevel);
      }
      if (HasBan) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(Ban);
      }
      if (HasLeagueBan) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(LeagueBan);
      }
      if (HasMonthHandsnum) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(MonthHandsnum);
      }
      if (HasDiscount) {
        output.WriteRawTag(128, 2);
        output.WriteInt32(Discount);
      }
      if (HasIsMixedFree) {
        output.WriteRawTag(136, 2);
        output.WriteBool(IsMixedFree);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(144, 2);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasIsStorm) {
        output.WriteRawTag(152, 2);
        output.WriteBool(IsStorm);
      }
      if (HasBlackboardTs) {
        output.WriteRawTag(160, 2);
        output.WriteInt64(BlackboardTs);
      }
      if (superLeague_ != null) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(SuperLeague);
      }
      if (HasSuperLeagueType) {
        output.WriteRawTag(176, 2);
        output.WriteInt32(SuperLeagueType);
      }
      if (HasAuthorityDetail) {
        output.WriteRawTag(184, 2);
        output.WriteInt32(AuthorityDetail);
      }
      if (HasLastDayPlayMaxUser) {
        output.WriteRawTag(192, 2);
        output.WriteInt32(LastDayPlayMaxUser);
      }
      if (HasPlo6Release) {
        output.WriteRawTag(200, 2);
        output.WriteBool(Plo6Release);
      }
      if (HasIsAllowLeagueDataExport) {
        output.WriteRawTag(208, 2);
        output.WriteBool(IsAllowLeagueDataExport);
      }
      if (HasPpstid) {
        output.WriteRawTag(216, 2);
        output.WriteInt32(Ppstid);
      }
      if (HasPpstIsAllowCreateRoom) {
        output.WriteRawTag(224, 2);
        output.WriteBool(PpstIsAllowCreateRoom);
      }
      if (HasAllowCreateTeenpatti) {
        output.WriteRawTag(232, 2);
        output.WriteBool(AllowCreateTeenpatti);
      }
      if (HasAllowCreatePusoy) {
        output.WriteRawTag(240, 2);
        output.WriteBool(AllowCreatePusoy);
      }
      if (HasPpstMinBuyIn) {
        output.WriteRawTag(248, 2);
        output.WriteInt32(PpstMinBuyIn);
      }
      if (HasPpstExchangeRateDecimal) {
        output.WriteRawTag(128, 3);
        output.WriteInt32(PpstExchangeRateDecimal);
      }
      if (HasPpsrid) {
        output.WriteRawTag(136, 3);
        output.WriteInt32(Ppsrid);
      }
      if (HasPpsrIsAllowCreateRoom) {
        output.WriteRawTag(144, 3);
        output.WriteBool(PpsrIsAllowCreateRoom);
      }
      if (HasPpsrMinBlind) {
        output.WriteRawTag(152, 3);
        output.WriteInt32(PpsrMinBlind);
      }
      if (HasPpsrMinAnte) {
        output.WriteRawTag(160, 3);
        output.WriteInt32(PpsrMinAnte);
      }
      if (HasPpsrOwnerclubid) {
        output.WriteRawTag(168, 3);
        output.WriteInt32(PpsrOwnerclubid);
      }
      if (HasPpstMinBuyinV2) {
        output.WriteRawTag(176, 3);
        output.WriteInt32(PpstMinBuyinV2);
      }
      if (HasIsLuckyDrawOpen) {
        output.WriteRawTag(184, 3);
        output.WriteBool(IsLuckyDrawOpen);
      }
      if (HasClubDailyReward) {
        output.WriteRawTag(192, 3);
        output.WriteInt32(ClubDailyReward);
      }
      if (HasPpsrIsAllowJackpot) {
        output.WriteRawTag(200, 3);
        output.WriteBool(PpsrIsAllowJackpot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasIcon) {
        output.WriteRawTag(26);
        output.WriteString(Icon);
      }
      if (HasBlackboard) {
        output.WriteRawTag(34);
        output.WriteString(Blackboard);
      }
      if (HasLevel) {
        output.WriteRawTag(40);
        output.WriteInt32(Level);
      }
      if (HasNum) {
        output.WriteRawTag(48);
        output.WriteInt32(Num);
      }
      if (HasMaxNum) {
        output.WriteRawTag(56);
        output.WriteInt32(MaxNum);
      }
      if (HasRole) {
        output.WriteRawTag(64);
        output.WriteInt32(Role);
      }
      if (HasRooms) {
        output.WriteRawTag(72);
        output.WriteInt32(Rooms);
      }
      if (HasLevelLeft) {
        output.WriteRawTag(80);
        output.WriteInt32(LevelLeft);
      }
      if (HasJointime) {
        output.WriteRawTag(88);
        output.WriteInt32(Jointime);
      }
      if (HasOwnerid) {
        output.WriteRawTag(96);
        output.WriteInt64(Ownerid);
      }
      if (HasOwnername) {
        output.WriteRawTag(106);
        output.WriteString(Ownername);
      }
      if (HasOwnericon) {
        output.WriteRawTag(114);
        output.WriteString(Ownericon);
      }
      if (HasProfit) {
        output.WriteRawTag(120);
        output.WriteInt64(Profit);
      }
      if (HasPlaynum) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(Playnum);
      }
      if (HasHandsnum) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(Handsnum);
      }
      if (HasPpcoin) {
        output.WriteRawTag(144, 1);
        output.WriteInt64(Ppcoin);
      }
      if (HasPpcoinPer) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(PpcoinPer);
      }
      if (clubConfig_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(ClubConfig);
      }
      leagueList_.WriteTo(ref output, _repeated_leagueList_codec);
      if (HasAgentPpcoin) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(AgentPpcoin);
      }
      if (pushMsg_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(PushMsg);
      }
      if (HasFreeRenameTimes) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(FreeRenameTimes);
      }
      if (HasPlatform) {
        output.WriteRawTag(202, 1);
        output.WriteString(Platform);
      }
      if (HasTimezoneId) {
        output.WriteRawTag(210, 1);
        output.WriteString(TimezoneId);
      }
      if (HasUtcOffset) {
        output.WriteRawTag(218, 1);
        output.WriteString(UtcOffset);
      }
      if (HasPriorityMaxLevel) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(PriorityMaxLevel);
      }
      if (HasBan) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(Ban);
      }
      if (HasLeagueBan) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(LeagueBan);
      }
      if (HasMonthHandsnum) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(MonthHandsnum);
      }
      if (HasDiscount) {
        output.WriteRawTag(128, 2);
        output.WriteInt32(Discount);
      }
      if (HasIsMixedFree) {
        output.WriteRawTag(136, 2);
        output.WriteBool(IsMixedFree);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(144, 2);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasIsStorm) {
        output.WriteRawTag(152, 2);
        output.WriteBool(IsStorm);
      }
      if (HasBlackboardTs) {
        output.WriteRawTag(160, 2);
        output.WriteInt64(BlackboardTs);
      }
      if (superLeague_ != null) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(SuperLeague);
      }
      if (HasSuperLeagueType) {
        output.WriteRawTag(176, 2);
        output.WriteInt32(SuperLeagueType);
      }
      if (HasAuthorityDetail) {
        output.WriteRawTag(184, 2);
        output.WriteInt32(AuthorityDetail);
      }
      if (HasLastDayPlayMaxUser) {
        output.WriteRawTag(192, 2);
        output.WriteInt32(LastDayPlayMaxUser);
      }
      if (HasPlo6Release) {
        output.WriteRawTag(200, 2);
        output.WriteBool(Plo6Release);
      }
      if (HasIsAllowLeagueDataExport) {
        output.WriteRawTag(208, 2);
        output.WriteBool(IsAllowLeagueDataExport);
      }
      if (HasPpstid) {
        output.WriteRawTag(216, 2);
        output.WriteInt32(Ppstid);
      }
      if (HasPpstIsAllowCreateRoom) {
        output.WriteRawTag(224, 2);
        output.WriteBool(PpstIsAllowCreateRoom);
      }
      if (HasAllowCreateTeenpatti) {
        output.WriteRawTag(232, 2);
        output.WriteBool(AllowCreateTeenpatti);
      }
      if (HasAllowCreatePusoy) {
        output.WriteRawTag(240, 2);
        output.WriteBool(AllowCreatePusoy);
      }
      if (HasPpstMinBuyIn) {
        output.WriteRawTag(248, 2);
        output.WriteInt32(PpstMinBuyIn);
      }
      if (HasPpstExchangeRateDecimal) {
        output.WriteRawTag(128, 3);
        output.WriteInt32(PpstExchangeRateDecimal);
      }
      if (HasPpsrid) {
        output.WriteRawTag(136, 3);
        output.WriteInt32(Ppsrid);
      }
      if (HasPpsrIsAllowCreateRoom) {
        output.WriteRawTag(144, 3);
        output.WriteBool(PpsrIsAllowCreateRoom);
      }
      if (HasPpsrMinBlind) {
        output.WriteRawTag(152, 3);
        output.WriteInt32(PpsrMinBlind);
      }
      if (HasPpsrMinAnte) {
        output.WriteRawTag(160, 3);
        output.WriteInt32(PpsrMinAnte);
      }
      if (HasPpsrOwnerclubid) {
        output.WriteRawTag(168, 3);
        output.WriteInt32(PpsrOwnerclubid);
      }
      if (HasPpstMinBuyinV2) {
        output.WriteRawTag(176, 3);
        output.WriteInt32(PpstMinBuyinV2);
      }
      if (HasIsLuckyDrawOpen) {
        output.WriteRawTag(184, 3);
        output.WriteBool(IsLuckyDrawOpen);
      }
      if (HasClubDailyReward) {
        output.WriteRawTag(192, 3);
        output.WriteInt32(ClubDailyReward);
      }
      if (HasPpsrIsAllowJackpot) {
        output.WriteRawTag(200, 3);
        output.WriteBool(PpsrIsAllowJackpot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasIcon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (HasBlackboard) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Blackboard);
      }
      if (HasLevel) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (HasNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (HasMaxNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxNum);
      }
      if (HasRole) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Role);
      }
      if (HasRooms) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rooms);
      }
      if (HasLevelLeft) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LevelLeft);
      }
      if (HasJointime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Jointime);
      }
      if (HasOwnerid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Ownerid);
      }
      if (HasOwnername) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ownername);
      }
      if (HasOwnericon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ownericon);
      }
      if (HasProfit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Profit);
      }
      if (HasPlaynum) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Playnum);
      }
      if (HasHandsnum) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Handsnum);
      }
      if (HasPpcoin) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Ppcoin);
      }
      if (HasPpcoinPer) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(PpcoinPer);
      }
      if (clubConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ClubConfig);
      }
      size += leagueList_.CalculateSize(_repeated_leagueList_codec);
      if (HasAgentPpcoin) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(AgentPpcoin);
      }
      if (pushMsg_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PushMsg);
      }
      if (HasFreeRenameTimes) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FreeRenameTimes);
      }
      if (HasPlatform) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Platform);
      }
      if (HasTimezoneId) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TimezoneId);
      }
      if (HasUtcOffset) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UtcOffset);
      }
      if (HasPriorityMaxLevel) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PriorityMaxLevel);
      }
      if (HasBan) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Ban);
      }
      if (HasLeagueBan) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LeagueBan);
      }
      if (HasMonthHandsnum) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MonthHandsnum);
      }
      if (HasDiscount) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Discount);
      }
      if (HasIsMixedFree) {
        size += 2 + 1;
      }
      if (HasSuperLeagueid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueid);
      }
      if (HasIsStorm) {
        size += 2 + 1;
      }
      if (HasBlackboardTs) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(BlackboardTs);
      }
      if (superLeague_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SuperLeague);
      }
      if (HasSuperLeagueType) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueType);
      }
      if (HasAuthorityDetail) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AuthorityDetail);
      }
      if (HasLastDayPlayMaxUser) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LastDayPlayMaxUser);
      }
      if (HasPlo6Release) {
        size += 2 + 1;
      }
      if (HasIsAllowLeagueDataExport) {
        size += 2 + 1;
      }
      if (HasPpstid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Ppstid);
      }
      if (HasPpstIsAllowCreateRoom) {
        size += 2 + 1;
      }
      if (HasAllowCreateTeenpatti) {
        size += 2 + 1;
      }
      if (HasAllowCreatePusoy) {
        size += 2 + 1;
      }
      if (HasPpstMinBuyIn) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PpstMinBuyIn);
      }
      if (HasPpstExchangeRateDecimal) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PpstExchangeRateDecimal);
      }
      if (HasPpsrid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Ppsrid);
      }
      if (HasPpsrIsAllowCreateRoom) {
        size += 2 + 1;
      }
      if (HasPpsrMinBlind) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PpsrMinBlind);
      }
      if (HasPpsrMinAnte) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PpsrMinAnte);
      }
      if (HasPpsrOwnerclubid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PpsrOwnerclubid);
      }
      if (HasPpstMinBuyinV2) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PpstMinBuyinV2);
      }
      if (HasIsLuckyDrawOpen) {
        size += 2 + 1;
      }
      if (HasClubDailyReward) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ClubDailyReward);
      }
      if (HasPpsrIsAllowJackpot) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasIcon) {
        Icon = other.Icon;
      }
      if (other.HasBlackboard) {
        Blackboard = other.Blackboard;
      }
      if (other.HasLevel) {
        Level = other.Level;
      }
      if (other.HasNum) {
        Num = other.Num;
      }
      if (other.HasMaxNum) {
        MaxNum = other.MaxNum;
      }
      if (other.HasRole) {
        Role = other.Role;
      }
      if (other.HasRooms) {
        Rooms = other.Rooms;
      }
      if (other.HasLevelLeft) {
        LevelLeft = other.LevelLeft;
      }
      if (other.HasJointime) {
        Jointime = other.Jointime;
      }
      if (other.HasOwnerid) {
        Ownerid = other.Ownerid;
      }
      if (other.HasOwnername) {
        Ownername = other.Ownername;
      }
      if (other.HasOwnericon) {
        Ownericon = other.Ownericon;
      }
      if (other.HasProfit) {
        Profit = other.Profit;
      }
      if (other.HasPlaynum) {
        Playnum = other.Playnum;
      }
      if (other.HasHandsnum) {
        Handsnum = other.Handsnum;
      }
      if (other.HasPpcoin) {
        Ppcoin = other.Ppcoin;
      }
      if (other.HasPpcoinPer) {
        PpcoinPer = other.PpcoinPer;
      }
      if (other.clubConfig_ != null) {
        if (clubConfig_ == null) {
          ClubConfig = new global::Texas.Protocol.ClubConfig();
        }
        ClubConfig.MergeFrom(other.ClubConfig);
      }
      leagueList_.Add(other.leagueList_);
      if (other.HasAgentPpcoin) {
        AgentPpcoin = other.AgentPpcoin;
      }
      if (other.pushMsg_ != null) {
        if (pushMsg_ == null) {
          PushMsg = new global::Texas.Protocol.ClubPushMsg();
        }
        PushMsg.MergeFrom(other.PushMsg);
      }
      if (other.HasFreeRenameTimes) {
        FreeRenameTimes = other.FreeRenameTimes;
      }
      if (other.HasPlatform) {
        Platform = other.Platform;
      }
      if (other.HasTimezoneId) {
        TimezoneId = other.TimezoneId;
      }
      if (other.HasUtcOffset) {
        UtcOffset = other.UtcOffset;
      }
      if (other.HasPriorityMaxLevel) {
        PriorityMaxLevel = other.PriorityMaxLevel;
      }
      if (other.HasBan) {
        Ban = other.Ban;
      }
      if (other.HasLeagueBan) {
        LeagueBan = other.LeagueBan;
      }
      if (other.HasMonthHandsnum) {
        MonthHandsnum = other.MonthHandsnum;
      }
      if (other.HasDiscount) {
        Discount = other.Discount;
      }
      if (other.HasIsMixedFree) {
        IsMixedFree = other.IsMixedFree;
      }
      if (other.HasSuperLeagueid) {
        SuperLeagueid = other.SuperLeagueid;
      }
      if (other.HasIsStorm) {
        IsStorm = other.IsStorm;
      }
      if (other.HasBlackboardTs) {
        BlackboardTs = other.BlackboardTs;
      }
      if (other.superLeague_ != null) {
        if (superLeague_ == null) {
          SuperLeague = new global::Texas.Protocol.SuperLeagueInfo();
        }
        SuperLeague.MergeFrom(other.SuperLeague);
      }
      if (other.HasSuperLeagueType) {
        SuperLeagueType = other.SuperLeagueType;
      }
      if (other.HasAuthorityDetail) {
        AuthorityDetail = other.AuthorityDetail;
      }
      if (other.HasLastDayPlayMaxUser) {
        LastDayPlayMaxUser = other.LastDayPlayMaxUser;
      }
      if (other.HasPlo6Release) {
        Plo6Release = other.Plo6Release;
      }
      if (other.HasIsAllowLeagueDataExport) {
        IsAllowLeagueDataExport = other.IsAllowLeagueDataExport;
      }
      if (other.HasPpstid) {
        Ppstid = other.Ppstid;
      }
      if (other.HasPpstIsAllowCreateRoom) {
        PpstIsAllowCreateRoom = other.PpstIsAllowCreateRoom;
      }
      if (other.HasAllowCreateTeenpatti) {
        AllowCreateTeenpatti = other.AllowCreateTeenpatti;
      }
      if (other.HasAllowCreatePusoy) {
        AllowCreatePusoy = other.AllowCreatePusoy;
      }
      if (other.HasPpstMinBuyIn) {
        PpstMinBuyIn = other.PpstMinBuyIn;
      }
      if (other.HasPpstExchangeRateDecimal) {
        PpstExchangeRateDecimal = other.PpstExchangeRateDecimal;
      }
      if (other.HasPpsrid) {
        Ppsrid = other.Ppsrid;
      }
      if (other.HasPpsrIsAllowCreateRoom) {
        PpsrIsAllowCreateRoom = other.PpsrIsAllowCreateRoom;
      }
      if (other.HasPpsrMinBlind) {
        PpsrMinBlind = other.PpsrMinBlind;
      }
      if (other.HasPpsrMinAnte) {
        PpsrMinAnte = other.PpsrMinAnte;
      }
      if (other.HasPpsrOwnerclubid) {
        PpsrOwnerclubid = other.PpsrOwnerclubid;
      }
      if (other.HasPpstMinBuyinV2) {
        PpstMinBuyinV2 = other.PpstMinBuyinV2;
      }
      if (other.HasIsLuckyDrawOpen) {
        IsLuckyDrawOpen = other.IsLuckyDrawOpen;
      }
      if (other.HasClubDailyReward) {
        ClubDailyReward = other.ClubDailyReward;
      }
      if (other.HasPpsrIsAllowJackpot) {
        PpsrIsAllowJackpot = other.PpsrIsAllowJackpot;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Icon = input.ReadString();
            break;
          }
          case 34: {
            Blackboard = input.ReadString();
            break;
          }
          case 40: {
            Level = input.ReadInt32();
            break;
          }
          case 48: {
            Num = input.ReadInt32();
            break;
          }
          case 56: {
            MaxNum = input.ReadInt32();
            break;
          }
          case 64: {
            Role = input.ReadInt32();
            break;
          }
          case 72: {
            Rooms = input.ReadInt32();
            break;
          }
          case 80: {
            LevelLeft = input.ReadInt32();
            break;
          }
          case 88: {
            Jointime = input.ReadInt32();
            break;
          }
          case 96: {
            Ownerid = input.ReadInt64();
            break;
          }
          case 106: {
            Ownername = input.ReadString();
            break;
          }
          case 114: {
            Ownericon = input.ReadString();
            break;
          }
          case 120: {
            Profit = input.ReadInt64();
            break;
          }
          case 128: {
            Playnum = input.ReadInt64();
            break;
          }
          case 136: {
            Handsnum = input.ReadInt64();
            break;
          }
          case 144: {
            Ppcoin = input.ReadInt64();
            break;
          }
          case 152: {
            PpcoinPer = input.ReadInt64();
            break;
          }
          case 162: {
            if (clubConfig_ == null) {
              ClubConfig = new global::Texas.Protocol.ClubConfig();
            }
            input.ReadMessage(ClubConfig);
            break;
          }
          case 170: {
            leagueList_.AddEntriesFrom(input, _repeated_leagueList_codec);
            break;
          }
          case 176: {
            AgentPpcoin = input.ReadInt64();
            break;
          }
          case 186: {
            if (pushMsg_ == null) {
              PushMsg = new global::Texas.Protocol.ClubPushMsg();
            }
            input.ReadMessage(PushMsg);
            break;
          }
          case 192: {
            FreeRenameTimes = input.ReadInt32();
            break;
          }
          case 202: {
            Platform = input.ReadString();
            break;
          }
          case 210: {
            TimezoneId = input.ReadString();
            break;
          }
          case 218: {
            UtcOffset = input.ReadString();
            break;
          }
          case 224: {
            PriorityMaxLevel = input.ReadInt32();
            break;
          }
          case 232: {
            Ban = input.ReadInt32();
            break;
          }
          case 240: {
            LeagueBan = input.ReadInt32();
            break;
          }
          case 248: {
            MonthHandsnum = input.ReadInt32();
            break;
          }
          case 256: {
            Discount = input.ReadInt32();
            break;
          }
          case 264: {
            IsMixedFree = input.ReadBool();
            break;
          }
          case 272: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 280: {
            IsStorm = input.ReadBool();
            break;
          }
          case 288: {
            BlackboardTs = input.ReadInt64();
            break;
          }
          case 298: {
            if (superLeague_ == null) {
              SuperLeague = new global::Texas.Protocol.SuperLeagueInfo();
            }
            input.ReadMessage(SuperLeague);
            break;
          }
          case 304: {
            SuperLeagueType = input.ReadInt32();
            break;
          }
          case 312: {
            AuthorityDetail = input.ReadInt32();
            break;
          }
          case 320: {
            LastDayPlayMaxUser = input.ReadInt32();
            break;
          }
          case 328: {
            Plo6Release = input.ReadBool();
            break;
          }
          case 336: {
            IsAllowLeagueDataExport = input.ReadBool();
            break;
          }
          case 344: {
            Ppstid = input.ReadInt32();
            break;
          }
          case 352: {
            PpstIsAllowCreateRoom = input.ReadBool();
            break;
          }
          case 360: {
            AllowCreateTeenpatti = input.ReadBool();
            break;
          }
          case 368: {
            AllowCreatePusoy = input.ReadBool();
            break;
          }
          case 376: {
            PpstMinBuyIn = input.ReadInt32();
            break;
          }
          case 384: {
            PpstExchangeRateDecimal = input.ReadInt32();
            break;
          }
          case 392: {
            Ppsrid = input.ReadInt32();
            break;
          }
          case 400: {
            PpsrIsAllowCreateRoom = input.ReadBool();
            break;
          }
          case 408: {
            PpsrMinBlind = input.ReadInt32();
            break;
          }
          case 416: {
            PpsrMinAnte = input.ReadInt32();
            break;
          }
          case 424: {
            PpsrOwnerclubid = input.ReadInt32();
            break;
          }
          case 432: {
            PpstMinBuyinV2 = input.ReadInt32();
            break;
          }
          case 440: {
            IsLuckyDrawOpen = input.ReadBool();
            break;
          }
          case 448: {
            ClubDailyReward = input.ReadInt32();
            break;
          }
          case 456: {
            PpsrIsAllowJackpot = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Icon = input.ReadString();
            break;
          }
          case 34: {
            Blackboard = input.ReadString();
            break;
          }
          case 40: {
            Level = input.ReadInt32();
            break;
          }
          case 48: {
            Num = input.ReadInt32();
            break;
          }
          case 56: {
            MaxNum = input.ReadInt32();
            break;
          }
          case 64: {
            Role = input.ReadInt32();
            break;
          }
          case 72: {
            Rooms = input.ReadInt32();
            break;
          }
          case 80: {
            LevelLeft = input.ReadInt32();
            break;
          }
          case 88: {
            Jointime = input.ReadInt32();
            break;
          }
          case 96: {
            Ownerid = input.ReadInt64();
            break;
          }
          case 106: {
            Ownername = input.ReadString();
            break;
          }
          case 114: {
            Ownericon = input.ReadString();
            break;
          }
          case 120: {
            Profit = input.ReadInt64();
            break;
          }
          case 128: {
            Playnum = input.ReadInt64();
            break;
          }
          case 136: {
            Handsnum = input.ReadInt64();
            break;
          }
          case 144: {
            Ppcoin = input.ReadInt64();
            break;
          }
          case 152: {
            PpcoinPer = input.ReadInt64();
            break;
          }
          case 162: {
            if (clubConfig_ == null) {
              ClubConfig = new global::Texas.Protocol.ClubConfig();
            }
            input.ReadMessage(ClubConfig);
            break;
          }
          case 170: {
            leagueList_.AddEntriesFrom(ref input, _repeated_leagueList_codec);
            break;
          }
          case 176: {
            AgentPpcoin = input.ReadInt64();
            break;
          }
          case 186: {
            if (pushMsg_ == null) {
              PushMsg = new global::Texas.Protocol.ClubPushMsg();
            }
            input.ReadMessage(PushMsg);
            break;
          }
          case 192: {
            FreeRenameTimes = input.ReadInt32();
            break;
          }
          case 202: {
            Platform = input.ReadString();
            break;
          }
          case 210: {
            TimezoneId = input.ReadString();
            break;
          }
          case 218: {
            UtcOffset = input.ReadString();
            break;
          }
          case 224: {
            PriorityMaxLevel = input.ReadInt32();
            break;
          }
          case 232: {
            Ban = input.ReadInt32();
            break;
          }
          case 240: {
            LeagueBan = input.ReadInt32();
            break;
          }
          case 248: {
            MonthHandsnum = input.ReadInt32();
            break;
          }
          case 256: {
            Discount = input.ReadInt32();
            break;
          }
          case 264: {
            IsMixedFree = input.ReadBool();
            break;
          }
          case 272: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 280: {
            IsStorm = input.ReadBool();
            break;
          }
          case 288: {
            BlackboardTs = input.ReadInt64();
            break;
          }
          case 298: {
            if (superLeague_ == null) {
              SuperLeague = new global::Texas.Protocol.SuperLeagueInfo();
            }
            input.ReadMessage(SuperLeague);
            break;
          }
          case 304: {
            SuperLeagueType = input.ReadInt32();
            break;
          }
          case 312: {
            AuthorityDetail = input.ReadInt32();
            break;
          }
          case 320: {
            LastDayPlayMaxUser = input.ReadInt32();
            break;
          }
          case 328: {
            Plo6Release = input.ReadBool();
            break;
          }
          case 336: {
            IsAllowLeagueDataExport = input.ReadBool();
            break;
          }
          case 344: {
            Ppstid = input.ReadInt32();
            break;
          }
          case 352: {
            PpstIsAllowCreateRoom = input.ReadBool();
            break;
          }
          case 360: {
            AllowCreateTeenpatti = input.ReadBool();
            break;
          }
          case 368: {
            AllowCreatePusoy = input.ReadBool();
            break;
          }
          case 376: {
            PpstMinBuyIn = input.ReadInt32();
            break;
          }
          case 384: {
            PpstExchangeRateDecimal = input.ReadInt32();
            break;
          }
          case 392: {
            Ppsrid = input.ReadInt32();
            break;
          }
          case 400: {
            PpsrIsAllowCreateRoom = input.ReadBool();
            break;
          }
          case 408: {
            PpsrMinBlind = input.ReadInt32();
            break;
          }
          case 416: {
            PpsrMinAnte = input.ReadInt32();
            break;
          }
          case 424: {
            PpsrOwnerclubid = input.ReadInt32();
            break;
          }
          case 432: {
            PpstMinBuyinV2 = input.ReadInt32();
            break;
          }
          case 440: {
            IsLuckyDrawOpen = input.ReadBool();
            break;
          }
          case 448: {
            ClubDailyReward = input.ReadInt32();
            break;
          }
          case 456: {
            PpsrIsAllowJackpot = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubListREQ : pb::IMessage<ClubListREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubListREQ> _parser = new pb::MessageParser<ClubListREQ>(() => new ClubListREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubListREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubListREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubListREQ(ClubListREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubListREQ Clone() {
      return new ClubListREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubListREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubListREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubListREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class ClubListRSP : pb::IMessage<ClubListRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubListRSP> _parser = new pb::MessageParser<ClubListRSP>(() => new ClubListRSP());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubListRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubListRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubListRSP(ClubListRSP other) : this() {
      info_ = other.info_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubListRSP Clone() {
      return new ClubListRSP(this);
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ClubBrief> _repeated_info_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.ClubBrief.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ClubBrief> info_ = new pbc::RepeatedField<global::Texas.Protocol.ClubBrief>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ClubBrief> Info {
      get { return info_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubListRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubListRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!info_.Equals(other.info_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= info_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      info_.WriteTo(output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      info_.WriteTo(ref output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += info_.CalculateSize(_repeated_info_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubListRSP other) {
      if (other == null) {
        return;
      }
      info_.Add(other.info_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubInfoREQ : pb::IMessage<ClubInfoREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubInfoREQ> _parser = new pb::MessageParser<ClubInfoREQ>(() => new ClubInfoREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubInfoREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubInfoREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubInfoREQ(ClubInfoREQ other) : this() {
      clubid_ = other.clubid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubInfoREQ Clone() {
      return new ClubInfoREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubInfoREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubInfoREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubInfoREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubInfoRSP : pb::IMessage<ClubInfoRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubInfoRSP> _parser = new pb::MessageParser<ClubInfoRSP>(() => new ClubInfoRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubInfoRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubInfoRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubInfoRSP(ClubInfoRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      info_ = other.info_ != null ? other.info_.Clone() : null;
      userPpglCountry_ = other.userPpglCountry_;
      isPpglCountryConfirm_ = other.isPpglCountryConfirm_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubInfoRSP Clone() {
      return new ClubInfoRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// -1 clubid 不存在
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 2;
    private global::Texas.Protocol.ClubInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.ClubInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    /// <summary>Field number for the "user_ppgl_country" field.</summary>
    public const int UserPpglCountryFieldNumber = 3;
    private readonly static string UserPpglCountryDefaultValue = "";

    private string userPpglCountry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserPpglCountry {
      get { return userPpglCountry_ ?? UserPpglCountryDefaultValue; }
      set {
        userPpglCountry_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "user_ppgl_country" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserPpglCountry {
      get { return userPpglCountry_ != null; }
    }
    /// <summary>Clears the value of the "user_ppgl_country" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserPpglCountry() {
      userPpglCountry_ = null;
    }

    /// <summary>Field number for the "is_ppgl_country_confirm" field.</summary>
    public const int IsPpglCountryConfirmFieldNumber = 4;
    private readonly static bool IsPpglCountryConfirmDefaultValue = false;

    private bool isPpglCountryConfirm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPpglCountryConfirm {
      get { if ((_hasBits0 & 2) != 0) { return isPpglCountryConfirm_; } else { return IsPpglCountryConfirmDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isPpglCountryConfirm_ = value;
      }
    }
    /// <summary>Gets whether the "is_ppgl_country_confirm" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPpglCountryConfirm {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_ppgl_country_confirm" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPpglCountryConfirm() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubInfoRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubInfoRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Info, other.Info)) return false;
      if (UserPpglCountry != other.UserPpglCountry) return false;
      if (IsPpglCountryConfirm != other.IsPpglCountryConfirm) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (info_ != null) hash ^= Info.GetHashCode();
      if (HasUserPpglCountry) hash ^= UserPpglCountry.GetHashCode();
      if (HasIsPpglCountryConfirm) hash ^= IsPpglCountryConfirm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (info_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Info);
      }
      if (HasUserPpglCountry) {
        output.WriteRawTag(26);
        output.WriteString(UserPpglCountry);
      }
      if (HasIsPpglCountryConfirm) {
        output.WriteRawTag(32);
        output.WriteBool(IsPpglCountryConfirm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (info_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Info);
      }
      if (HasUserPpglCountry) {
        output.WriteRawTag(26);
        output.WriteString(UserPpglCountry);
      }
      if (HasIsPpglCountryConfirm) {
        output.WriteRawTag(32);
        output.WriteBool(IsPpglCountryConfirm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (HasUserPpglCountry) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserPpglCountry);
      }
      if (HasIsPpglCountryConfirm) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubInfoRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Texas.Protocol.ClubInfo();
        }
        Info.MergeFrom(other.Info);
      }
      if (other.HasUserPpglCountry) {
        UserPpglCountry = other.UserPpglCountry;
      }
      if (other.HasIsPpglCountryConfirm) {
        IsPpglCountryConfirm = other.IsPpglCountryConfirm;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (info_ == null) {
              Info = new global::Texas.Protocol.ClubInfo();
            }
            input.ReadMessage(Info);
            break;
          }
          case 26: {
            UserPpglCountry = input.ReadString();
            break;
          }
          case 32: {
            IsPpglCountryConfirm = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (info_ == null) {
              Info = new global::Texas.Protocol.ClubInfo();
            }
            input.ReadMessage(Info);
            break;
          }
          case 26: {
            UserPpglCountry = input.ReadString();
            break;
          }
          case 32: {
            IsPpglCountryConfirm = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttRewardPoolInfo : pb::IMessage<MttRewardPoolInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttRewardPoolInfo> _parser = new pb::MessageParser<MttRewardPoolInfo>(() => new MttRewardPoolInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttRewardPoolInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttRewardPoolInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttRewardPoolInfo(MttRewardPoolInfo other) : this() {
      _hasBits0 = other._hasBits0;
      mttTotalRewardPool_ = other.mttTotalRewardPool_;
      mttTotalGameReward_ = other.mttTotalGameReward_;
      mttTotalHunterReward_ = other.mttTotalHunterReward_;
      mttEnsureChips_ = other.mttEnsureChips_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttRewardPoolInfo Clone() {
      return new MttRewardPoolInfo(this);
    }

    /// <summary>Field number for the "mtt_total_reward_pool" field.</summary>
    public const int MttTotalRewardPoolFieldNumber = 1;
    private readonly static long MttTotalRewardPoolDefaultValue = 0L;

    private long mttTotalRewardPool_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MttTotalRewardPool {
      get { if ((_hasBits0 & 1) != 0) { return mttTotalRewardPool_; } else { return MttTotalRewardPoolDefaultValue; } }
      set {
        _hasBits0 |= 1;
        mttTotalRewardPool_ = value;
      }
    }
    /// <summary>Gets whether the "mtt_total_reward_pool" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMttTotalRewardPool {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "mtt_total_reward_pool" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMttTotalRewardPool() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "mtt_total_game_reward" field.</summary>
    public const int MttTotalGameRewardFieldNumber = 2;
    private readonly static long MttTotalGameRewardDefaultValue = 0L;

    private long mttTotalGameReward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MttTotalGameReward {
      get { if ((_hasBits0 & 2) != 0) { return mttTotalGameReward_; } else { return MttTotalGameRewardDefaultValue; } }
      set {
        _hasBits0 |= 2;
        mttTotalGameReward_ = value;
      }
    }
    /// <summary>Gets whether the "mtt_total_game_reward" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMttTotalGameReward {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "mtt_total_game_reward" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMttTotalGameReward() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "mtt_total_hunter_reward" field.</summary>
    public const int MttTotalHunterRewardFieldNumber = 3;
    private readonly static long MttTotalHunterRewardDefaultValue = 0L;

    private long mttTotalHunterReward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MttTotalHunterReward {
      get { if ((_hasBits0 & 4) != 0) { return mttTotalHunterReward_; } else { return MttTotalHunterRewardDefaultValue; } }
      set {
        _hasBits0 |= 4;
        mttTotalHunterReward_ = value;
      }
    }
    /// <summary>Gets whether the "mtt_total_hunter_reward" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMttTotalHunterReward {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "mtt_total_hunter_reward" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMttTotalHunterReward() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "mtt_ensure_chips" field.</summary>
    public const int MttEnsureChipsFieldNumber = 4;
    private readonly static long MttEnsureChipsDefaultValue = 0L;

    private long mttEnsureChips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MttEnsureChips {
      get { if ((_hasBits0 & 8) != 0) { return mttEnsureChips_; } else { return MttEnsureChipsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        mttEnsureChips_ = value;
      }
    }
    /// <summary>Gets whether the "mtt_ensure_chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMttEnsureChips {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "mtt_ensure_chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMttEnsureChips() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttRewardPoolInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttRewardPoolInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MttTotalRewardPool != other.MttTotalRewardPool) return false;
      if (MttTotalGameReward != other.MttTotalGameReward) return false;
      if (MttTotalHunterReward != other.MttTotalHunterReward) return false;
      if (MttEnsureChips != other.MttEnsureChips) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMttTotalRewardPool) hash ^= MttTotalRewardPool.GetHashCode();
      if (HasMttTotalGameReward) hash ^= MttTotalGameReward.GetHashCode();
      if (HasMttTotalHunterReward) hash ^= MttTotalHunterReward.GetHashCode();
      if (HasMttEnsureChips) hash ^= MttEnsureChips.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMttTotalRewardPool) {
        output.WriteRawTag(8);
        output.WriteInt64(MttTotalRewardPool);
      }
      if (HasMttTotalGameReward) {
        output.WriteRawTag(16);
        output.WriteInt64(MttTotalGameReward);
      }
      if (HasMttTotalHunterReward) {
        output.WriteRawTag(24);
        output.WriteInt64(MttTotalHunterReward);
      }
      if (HasMttEnsureChips) {
        output.WriteRawTag(32);
        output.WriteInt64(MttEnsureChips);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMttTotalRewardPool) {
        output.WriteRawTag(8);
        output.WriteInt64(MttTotalRewardPool);
      }
      if (HasMttTotalGameReward) {
        output.WriteRawTag(16);
        output.WriteInt64(MttTotalGameReward);
      }
      if (HasMttTotalHunterReward) {
        output.WriteRawTag(24);
        output.WriteInt64(MttTotalHunterReward);
      }
      if (HasMttEnsureChips) {
        output.WriteRawTag(32);
        output.WriteInt64(MttEnsureChips);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMttTotalRewardPool) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MttTotalRewardPool);
      }
      if (HasMttTotalGameReward) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MttTotalGameReward);
      }
      if (HasMttTotalHunterReward) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MttTotalHunterReward);
      }
      if (HasMttEnsureChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MttEnsureChips);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttRewardPoolInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasMttTotalRewardPool) {
        MttTotalRewardPool = other.MttTotalRewardPool;
      }
      if (other.HasMttTotalGameReward) {
        MttTotalGameReward = other.MttTotalGameReward;
      }
      if (other.HasMttTotalHunterReward) {
        MttTotalHunterReward = other.MttTotalHunterReward;
      }
      if (other.HasMttEnsureChips) {
        MttEnsureChips = other.MttEnsureChips;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MttTotalRewardPool = input.ReadInt64();
            break;
          }
          case 16: {
            MttTotalGameReward = input.ReadInt64();
            break;
          }
          case 24: {
            MttTotalHunterReward = input.ReadInt64();
            break;
          }
          case 32: {
            MttEnsureChips = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MttTotalRewardPool = input.ReadInt64();
            break;
          }
          case 16: {
            MttTotalGameReward = input.ReadInt64();
            break;
          }
          case 24: {
            MttTotalHunterReward = input.ReadInt64();
            break;
          }
          case 32: {
            MttEnsureChips = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubRoomInfo : pb::IMessage<ClubRoomInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubRoomInfo> _parser = new pb::MessageParser<ClubRoomInfo>(() => new ClubRoomInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    private int _hasBits1;
    private int _hasBits2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubRoomInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubRoomInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubRoomInfo(ClubRoomInfo other) : this() {
      _hasBits0 = other._hasBits0;
      _hasBits1 = other._hasBits1;
      _hasBits2 = other._hasBits2;
      roomid_ = other.roomid_;
      roomName_ = other.roomName_;
      ownerName_ = other.ownerName_;
      ownerIcon_ = other.ownerIcon_;
      blind_ = other.blind_;
      ante_ = other.ante_;
      gameTime_ = other.gameTime_;
      leftTime_ = other.leftTime_;
      seatNum_ = other.seatNum_;
      players_ = other.players_;
      isStarted_ = other.isStarted_;
      authNum_ = other.authNum_;
      roomType_ = other.roomType_;
      upblindTime_ = other.upblindTime_;
      buyin_ = other.buyin_;
      totalPlayerNum_ = other.totalPlayerNum_;
      currentPlayerNum_ = other.currentPlayerNum_;
      mttStatus_ = other.mttStatus_;
      endRebuyTimestamp_ = other.endRebuyTimestamp_;
      startTimestamp_ = other.startTimestamp_;
      now_ = other.now_;
      mttStartTime_ = other.mttStartTime_;
      waitUsers_ = other.waitUsers_.Clone();
      isHunter_ = other.isHunter_;
      gpsLimit_ = other.gpsLimit_;
      ipLimit_ = other.ipLimit_;
      ownerVipLevel_ = other.ownerVipLevel_;
      createTimestamp_ = other.createTimestamp_;
      gameMode_ = other.gameMode_;
      isIn_ = other.isIn_;
      isInsurance_ = other.isInsurance_;
      gamesetStatus_ = other.gamesetStatus_;
      vpipLimit_ = other.vpipLimit_;
      earlyBirdNum_ = other.earlyBirdNum_;
      superLeagueid_ = other.superLeagueid_;
      isEvchop_ = other.isEvchop_;
      isSnowballHunter_ = other.isSnowballHunter_;
      isSuspended_ = other.isSuspended_;
      suspendTimestamp_ = other.suspendTimestamp_;
      suspendTime_ = other.suspendTime_;
      vpipLimitPerSet_ = other.vpipLimitPerSet_;
      minHandsPerSet_ = other.minHandsPerSet_;
      passwdLimit_ = other.passwdLimit_;
      passwd_ = other.passwd_;
      maxRewardRatio_ = other.maxRewardRatio_;
      spinupRewardRatio_ = other.spinupRewardRatio_;
      isGroupMtt_ = other.isGroupMtt_;
      groupKey_ = other.groupKey_;
      groupOverLevel_ = other.groupOverLevel_;
      groupStage_ = other.groupStage_;
      isFreezeOut_ = other.isFreezeOut_;
      groupFlag_ = other.groupFlag_;
      superLeagueType_ = other.superLeagueType_;
      recoverType_ = other.recoverType_;
      recoverStartTime_ = other.recoverStartTime_;
      earlyBirdDiscount_ = other.earlyBirdDiscount_;
      isTop_ = other.isTop_;
      isCaptcha_ = other.isCaptcha_;
      isBanPc_ = other.isBanPc_;
      isCheckMail_ = other.isCheckMail_;
      satelliteRewardPrice_ = other.satelliteRewardPrice_;
      ppstid_ = other.ppstid_;
      sevenDeuceRewardMultiplier_ = other.sevenDeuceRewardMultiplier_;
      isVipTable_ = other.isVipTable_;
      enterRoomChipsPrerequisite_ = other.enterRoomChipsPrerequisite_;
      ppsrid_ = other.ppsrid_;
      isJackpot_ = other.isJackpot_;
      mttRewardPoolInfo_ = other.mttRewardPoolInfo_ != null ? other.mttRewardPoolInfo_.Clone() : null;
      isCertification_ = other.isCertification_;
      bombpotType_ = other.bombpotType_;
      minBet_ = other.minBet_;
      middleBet_ = other.middleBet_;
      highBet_ = other.highBet_;
      isPpglTryouts_ = other.isPpglTryouts_;
      bombpotAdditionalBoard_ = other.bombpotAdditionalBoard_;
      additionalBoard_ = other.additionalBoard_;
      hitpotRate_ = other.hitpotRate_;
      bonusCard_ = other.bonusCard_;
      fightLimit_ = other.fightLimit_;
      banClub_ = other.banClub_.Clone();
      banCountry_ = other.banCountry_.Clone();
      createClubid_ = other.createClubid_;
      isSequentialViewCard_ = other.isSequentialViewCard_;
      isBombpotWithoutEvchop_ = other.isBombpotWithoutEvchop_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubRoomInfo Clone() {
      return new ClubRoomInfo(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static string RoomidDefaultValue = "";

    private string roomid_;
    /// <summary>
    ///邀请码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Roomid {
      get { return roomid_ ?? RoomidDefaultValue; }
      set {
        roomid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return roomid_ != null; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      roomid_ = null;
    }

    /// <summary>Field number for the "room_name" field.</summary>
    public const int RoomNameFieldNumber = 2;
    private readonly static string RoomNameDefaultValue = "";

    private string roomName_;
    /// <summary>
    ///房间名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomName {
      get { return roomName_ ?? RoomNameDefaultValue; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "room_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomName {
      get { return roomName_ != null; }
    }
    /// <summary>Clears the value of the "room_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomName() {
      roomName_ = null;
    }

    /// <summary>Field number for the "owner_name" field.</summary>
    public const int OwnerNameFieldNumber = 3;
    private readonly static string OwnerNameDefaultValue = "";

    private string ownerName_;
    /// <summary>
    ///房主名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerName {
      get { return ownerName_ ?? OwnerNameDefaultValue; }
      set {
        ownerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnerName {
      get { return ownerName_ != null; }
    }
    /// <summary>Clears the value of the "owner_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnerName() {
      ownerName_ = null;
    }

    /// <summary>Field number for the "owner_icon" field.</summary>
    public const int OwnerIconFieldNumber = 4;
    private readonly static string OwnerIconDefaultValue = "";

    private string ownerIcon_;
    /// <summary>
    ///房主头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerIcon {
      get { return ownerIcon_ ?? OwnerIconDefaultValue; }
      set {
        ownerIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner_icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnerIcon {
      get { return ownerIcon_ != null; }
    }
    /// <summary>Clears the value of the "owner_icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnerIcon() {
      ownerIcon_ = null;
    }

    /// <summary>Field number for the "blind" field.</summary>
    public const int BlindFieldNumber = 5;
    private readonly static long BlindDefaultValue = 0L;

    private long blind_;
    /// <summary>
    ///小盲
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Blind {
      get { if ((_hasBits0 & 1) != 0) { return blind_; } else { return BlindDefaultValue; } }
      set {
        _hasBits0 |= 1;
        blind_ = value;
      }
    }
    /// <summary>Gets whether the "blind" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlind {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "blind" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlind() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "ante" field.</summary>
    public const int AnteFieldNumber = 6;
    private readonly static long AnteDefaultValue = 0L;

    private long ante_;
    /// <summary>
    ///前注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Ante {
      get { if ((_hasBits0 & 2) != 0) { return ante_; } else { return AnteDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ante_ = value;
      }
    }
    /// <summary>Gets whether the "ante" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAnte {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ante" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAnte() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "game_time" field.</summary>
    public const int GameTimeFieldNumber = 7;
    private readonly static int GameTimeDefaultValue = 0;

    private int gameTime_;
    /// <summary>
    ///游戏时间,0表示无限制
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameTime {
      get { if ((_hasBits0 & 4) != 0) { return gameTime_; } else { return GameTimeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        gameTime_ = value;
      }
    }
    /// <summary>Gets whether the "game_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameTime {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "game_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameTime() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "left_time" field.</summary>
    public const int LeftTimeFieldNumber = 8;
    private readonly static int LeftTimeDefaultValue = 0;

    private int leftTime_;
    /// <summary>
    ///剩余时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LeftTime {
      get { if ((_hasBits0 & 8) != 0) { return leftTime_; } else { return LeftTimeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        leftTime_ = value;
      }
    }
    /// <summary>Gets whether the "left_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeftTime {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "left_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeftTime() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "seat_num" field.</summary>
    public const int SeatNumFieldNumber = 9;
    private readonly static int SeatNumDefaultValue = 0;

    private int seatNum_;
    /// <summary>
    ///房间座位数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SeatNum {
      get { if ((_hasBits0 & 16) != 0) { return seatNum_; } else { return SeatNumDefaultValue; } }
      set {
        _hasBits0 |= 16;
        seatNum_ = value;
      }
    }
    /// <summary>Gets whether the "seat_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatNum {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "seat_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatNum() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 10;
    private readonly static int PlayersDefaultValue = 0;

    private int players_;
    /// <summary>
    ///坐下人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Players {
      get { if ((_hasBits0 & 32) != 0) { return players_; } else { return PlayersDefaultValue; } }
      set {
        _hasBits0 |= 32;
        players_ = value;
      }
    }
    /// <summary>Gets whether the "players" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayers {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "players" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayers() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "is_started" field.</summary>
    public const int IsStartedFieldNumber = 11;
    private readonly static bool IsStartedDefaultValue = false;

    private bool isStarted_;
    /// <summary>
    ///是否已经开始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsStarted {
      get { if ((_hasBits0 & 64) != 0) { return isStarted_; } else { return IsStartedDefaultValue; } }
      set {
        _hasBits0 |= 64;
        isStarted_ = value;
      }
    }
    /// <summary>Gets whether the "is_started" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsStarted {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "is_started" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsStarted() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "auth_num" field.</summary>
    public const int AuthNumFieldNumber = 12;
    private readonly static int AuthNumDefaultValue = 0;

    private int authNum_;
    /// <summary>
    ///请求授权人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AuthNum {
      get { if ((_hasBits0 & 128) != 0) { return authNum_; } else { return AuthNumDefaultValue; } }
      set {
        _hasBits0 |= 128;
        authNum_ = value;
      }
    }
    /// <summary>Gets whether the "auth_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAuthNum {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "auth_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAuthNum() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "room_type" field.</summary>
    public const int RoomTypeFieldNumber = 13;
    private readonly static global::Texas.Protocol.RoomType RoomTypeDefaultValue = global::Texas.Protocol.RoomType.TestRoom;

    private global::Texas.Protocol.RoomType roomType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomType RoomType {
      get { if ((_hasBits0 & 256) != 0) { return roomType_; } else { return RoomTypeDefaultValue; } }
      set {
        _hasBits0 |= 256;
        roomType_ = value;
      }
    }
    /// <summary>Gets whether the "room_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomType {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "room_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomType() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "upblind_time" field.</summary>
    public const int UpblindTimeFieldNumber = 14;
    private readonly static int UpblindTimeDefaultValue = 0;

    private int upblindTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UpblindTime {
      get { if ((_hasBits0 & 512) != 0) { return upblindTime_; } else { return UpblindTimeDefaultValue; } }
      set {
        _hasBits0 |= 512;
        upblindTime_ = value;
      }
    }
    /// <summary>Gets whether the "upblind_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUpblindTime {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "upblind_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUpblindTime() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "buyin" field.</summary>
    public const int BuyinFieldNumber = 15;
    private readonly static long BuyinDefaultValue = 0L;

    private long buyin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Buyin {
      get { if ((_hasBits0 & 1024) != 0) { return buyin_; } else { return BuyinDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        buyin_ = value;
      }
    }
    /// <summary>Gets whether the "buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBuyin {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBuyin() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "total_player_num" field.</summary>
    public const int TotalPlayerNumFieldNumber = 16;
    private readonly static int TotalPlayerNumDefaultValue = 0;

    private int totalPlayerNum_;
    /// <summary>
    ///mtt相关
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalPlayerNum {
      get { if ((_hasBits0 & 2048) != 0) { return totalPlayerNum_; } else { return TotalPlayerNumDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        totalPlayerNum_ = value;
      }
    }
    /// <summary>Gets whether the "total_player_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalPlayerNum {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "total_player_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalPlayerNum() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "current_player_num" field.</summary>
    public const int CurrentPlayerNumFieldNumber = 17;
    private readonly static int CurrentPlayerNumDefaultValue = 0;

    private int currentPlayerNum_;
    /// <summary>
    ///当前参赛人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrentPlayerNum {
      get { if ((_hasBits0 & 4096) != 0) { return currentPlayerNum_; } else { return CurrentPlayerNumDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        currentPlayerNum_ = value;
      }
    }
    /// <summary>Gets whether the "current_player_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCurrentPlayerNum {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "current_player_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCurrentPlayerNum() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "mtt_status" field.</summary>
    public const int MttStatusFieldNumber = 18;
    private readonly static int MttStatusDefaultValue = 0;

    private int mttStatus_;
    /// <summary>
    /// 1 未开赛  2 已经开赛，还能延迟登记  3 已经开赛，不能延迟登记  4 已经结束
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MttStatus {
      get { if ((_hasBits0 & 8192) != 0) { return mttStatus_; } else { return MttStatusDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        mttStatus_ = value;
      }
    }
    /// <summary>Gets whether the "mtt_status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMttStatus {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "mtt_status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMttStatus() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "end_rebuy_timestamp" field.</summary>
    public const int EndRebuyTimestampFieldNumber = 19;
    private readonly static long EndRebuyTimestampDefaultValue = 0L;

    private long endRebuyTimestamp_;
    /// <summary>
    ///截止报名时间点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndRebuyTimestamp {
      get { if ((_hasBits0 & 16384) != 0) { return endRebuyTimestamp_; } else { return EndRebuyTimestampDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        endRebuyTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "end_rebuy_timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndRebuyTimestamp {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "end_rebuy_timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndRebuyTimestamp() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "start_timestamp" field.</summary>
    public const int StartTimestampFieldNumber = 20;
    private readonly static long StartTimestampDefaultValue = 0L;

    private long startTimestamp_;
    /// <summary>
    ///已经开赛为开赛时间戳，没开赛为0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartTimestamp {
      get { if ((_hasBits0 & 32768) != 0) { return startTimestamp_; } else { return StartTimestampDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        startTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "start_timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartTimestamp {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "start_timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartTimestamp() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "now" field.</summary>
    public const int NowFieldNumber = 21;
    private readonly static long NowDefaultValue = 0L;

    private long now_;
    /// <summary>
    ///当前时间戳
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Now {
      get { if ((_hasBits0 & 65536) != 0) { return now_; } else { return NowDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        now_ = value;
      }
    }
    /// <summary>Gets whether the "now" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNow {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "now" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNow() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "mtt_start_time" field.</summary>
    public const int MttStartTimeFieldNumber = 22;
    private readonly static long MttStartTimeDefaultValue = 0L;

    private long mttStartTime_;
    /// <summary>
    ///设定的开赛时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MttStartTime {
      get { if ((_hasBits0 & 131072) != 0) { return mttStartTime_; } else { return MttStartTimeDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        mttStartTime_ = value;
      }
    }
    /// <summary>Gets whether the "mtt_start_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMttStartTime {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "mtt_start_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMttStartTime() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "wait_users" field.</summary>
    public const int WaitUsersFieldNumber = 23;
    private static readonly pb::FieldCodec<global::WaitListUser> _repeated_waitUsers_codec
        = pb::FieldCodec.ForMessage(186, global::WaitListUser.Parser);
    private readonly pbc::RepeatedField<global::WaitListUser> waitUsers_ = new pbc::RepeatedField<global::WaitListUser>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::WaitListUser> WaitUsers {
      get { return waitUsers_; }
    }

    /// <summary>Field number for the "is_hunter" field.</summary>
    public const int IsHunterFieldNumber = 24;
    private readonly static bool IsHunterDefaultValue = false;

    private bool isHunter_;
    /// <summary>
    ///是否猎人赛
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsHunter {
      get { if ((_hasBits0 & 262144) != 0) { return isHunter_; } else { return IsHunterDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        isHunter_ = value;
      }
    }
    /// <summary>Gets whether the "is_hunter" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsHunter {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "is_hunter" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsHunter() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "gps_limit" field.</summary>
    public const int GpsLimitFieldNumber = 25;
    private readonly static bool GpsLimitDefaultValue = false;

    private bool gpsLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GpsLimit {
      get { if ((_hasBits0 & 524288) != 0) { return gpsLimit_; } else { return GpsLimitDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        gpsLimit_ = value;
      }
    }
    /// <summary>Gets whether the "gps_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpsLimit {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "gps_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpsLimit() {
      _hasBits0 &= ~524288;
    }

    /// <summary>Field number for the "ip_limit" field.</summary>
    public const int IpLimitFieldNumber = 26;
    private readonly static bool IpLimitDefaultValue = false;

    private bool ipLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IpLimit {
      get { if ((_hasBits0 & 1048576) != 0) { return ipLimit_; } else { return IpLimitDefaultValue; } }
      set {
        _hasBits0 |= 1048576;
        ipLimit_ = value;
      }
    }
    /// <summary>Gets whether the "ip_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIpLimit {
      get { return (_hasBits0 & 1048576) != 0; }
    }
    /// <summary>Clears the value of the "ip_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIpLimit() {
      _hasBits0 &= ~1048576;
    }

    /// <summary>Field number for the "owner_vip_level" field.</summary>
    public const int OwnerVipLevelFieldNumber = 27;
    private readonly static uint OwnerVipLevelDefaultValue = 0;

    private uint ownerVipLevel_;
    /// <summary>
    /// 房主vip信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OwnerVipLevel {
      get { if ((_hasBits0 & 2097152) != 0) { return ownerVipLevel_; } else { return OwnerVipLevelDefaultValue; } }
      set {
        _hasBits0 |= 2097152;
        ownerVipLevel_ = value;
      }
    }
    /// <summary>Gets whether the "owner_vip_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnerVipLevel {
      get { return (_hasBits0 & 2097152) != 0; }
    }
    /// <summary>Clears the value of the "owner_vip_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnerVipLevel() {
      _hasBits0 &= ~2097152;
    }

    /// <summary>Field number for the "create_timestamp" field.</summary>
    public const int CreateTimestampFieldNumber = 28;
    private readonly static long CreateTimestampDefaultValue = 0L;

    private long createTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CreateTimestamp {
      get { if ((_hasBits0 & 4194304) != 0) { return createTimestamp_; } else { return CreateTimestampDefaultValue; } }
      set {
        _hasBits0 |= 4194304;
        createTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "create_timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCreateTimestamp {
      get { return (_hasBits0 & 4194304) != 0; }
    }
    /// <summary>Clears the value of the "create_timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCreateTimestamp() {
      _hasBits0 &= ~4194304;
    }

    /// <summary>Field number for the "game_mode" field.</summary>
    public const int GameModeFieldNumber = 29;
    private readonly static int GameModeDefaultValue = 0;

    private int gameMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameMode {
      get { if ((_hasBits0 & 8388608) != 0) { return gameMode_; } else { return GameModeDefaultValue; } }
      set {
        _hasBits0 |= 8388608;
        gameMode_ = value;
      }
    }
    /// <summary>Gets whether the "game_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameMode {
      get { return (_hasBits0 & 8388608) != 0; }
    }
    /// <summary>Clears the value of the "game_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameMode() {
      _hasBits0 &= ~8388608;
    }

    /// <summary>Field number for the "is_in" field.</summary>
    public const int IsInFieldNumber = 30;
    private readonly static bool IsInDefaultValue = false;

    private bool isIn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsIn {
      get { if ((_hasBits0 & 16777216) != 0) { return isIn_; } else { return IsInDefaultValue; } }
      set {
        _hasBits0 |= 16777216;
        isIn_ = value;
      }
    }
    /// <summary>Gets whether the "is_in" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsIn {
      get { return (_hasBits0 & 16777216) != 0; }
    }
    /// <summary>Clears the value of the "is_in" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsIn() {
      _hasBits0 &= ~16777216;
    }

    /// <summary>Field number for the "is_insurance" field.</summary>
    public const int IsInsuranceFieldNumber = 31;
    private readonly static bool IsInsuranceDefaultValue = false;

    private bool isInsurance_;
    /// <summary>
    ///是否保险桌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsInsurance {
      get { if ((_hasBits0 & 33554432) != 0) { return isInsurance_; } else { return IsInsuranceDefaultValue; } }
      set {
        _hasBits0 |= 33554432;
        isInsurance_ = value;
      }
    }
    /// <summary>Gets whether the "is_insurance" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsInsurance {
      get { return (_hasBits0 & 33554432) != 0; }
    }
    /// <summary>Clears the value of the "is_insurance" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsInsurance() {
      _hasBits0 &= ~33554432;
    }

    /// <summary>Field number for the "gameset_status" field.</summary>
    public const int GamesetStatusFieldNumber = 32;
    private readonly static global::Texas.Protocol.GameSetPlayStatus GamesetStatusDefaultValue = global::Texas.Protocol.GameSetPlayStatus.None;

    private global::Texas.Protocol.GameSetPlayStatus gamesetStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.GameSetPlayStatus GamesetStatus {
      get { if ((_hasBits0 & 67108864) != 0) { return gamesetStatus_; } else { return GamesetStatusDefaultValue; } }
      set {
        _hasBits0 |= 67108864;
        gamesetStatus_ = value;
      }
    }
    /// <summary>Gets whether the "gameset_status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGamesetStatus {
      get { return (_hasBits0 & 67108864) != 0; }
    }
    /// <summary>Clears the value of the "gameset_status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGamesetStatus() {
      _hasBits0 &= ~67108864;
    }

    /// <summary>Field number for the "vpip_limit" field.</summary>
    public const int VpipLimitFieldNumber = 33;
    private readonly static int VpipLimitDefaultValue = 0;

    private int vpipLimit_;
    /// <summary>
    /// vpip入池率限制
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int VpipLimit {
      get { if ((_hasBits0 & 134217728) != 0) { return vpipLimit_; } else { return VpipLimitDefaultValue; } }
      set {
        _hasBits0 |= 134217728;
        vpipLimit_ = value;
      }
    }
    /// <summary>Gets whether the "vpip_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVpipLimit {
      get { return (_hasBits0 & 134217728) != 0; }
    }
    /// <summary>Clears the value of the "vpip_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVpipLimit() {
      _hasBits0 &= ~134217728;
    }

    /// <summary>Field number for the "early_bird_num" field.</summary>
    public const int EarlyBirdNumFieldNumber = 34;
    private readonly static int EarlyBirdNumDefaultValue = 0;

    private int earlyBirdNum_;
    /// <summary>
    ///早鸟半价 0：没开启  N: 前N名都能享受早鸟半价
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EarlyBirdNum {
      get { if ((_hasBits0 & 268435456) != 0) { return earlyBirdNum_; } else { return EarlyBirdNumDefaultValue; } }
      set {
        _hasBits0 |= 268435456;
        earlyBirdNum_ = value;
      }
    }
    /// <summary>Gets whether the "early_bird_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEarlyBirdNum {
      get { return (_hasBits0 & 268435456) != 0; }
    }
    /// <summary>Clears the value of the "early_bird_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEarlyBirdNum() {
      _hasBits0 &= ~268435456;
    }

    /// <summary>Field number for the "super_leagueid" field.</summary>
    public const int SuperLeagueidFieldNumber = 35;
    private readonly static int SuperLeagueidDefaultValue = 0;

    private int superLeagueid_;
    /// <summary>
    ///超级联盟id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueid {
      get { if ((_hasBits0 & 536870912) != 0) { return superLeagueid_; } else { return SuperLeagueidDefaultValue; } }
      set {
        _hasBits0 |= 536870912;
        superLeagueid_ = value;
      }
    }
    /// <summary>Gets whether the "super_leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueid {
      get { return (_hasBits0 & 536870912) != 0; }
    }
    /// <summary>Clears the value of the "super_leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueid() {
      _hasBits0 &= ~536870912;
    }

    /// <summary>Field number for the "is_evchop" field.</summary>
    public const int IsEvchopFieldNumber = 36;
    private readonly static bool IsEvchopDefaultValue = false;

    private bool isEvchop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsEvchop {
      get { if ((_hasBits0 & 1073741824) != 0) { return isEvchop_; } else { return IsEvchopDefaultValue; } }
      set {
        _hasBits0 |= 1073741824;
        isEvchop_ = value;
      }
    }
    /// <summary>Gets whether the "is_evchop" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsEvchop {
      get { return (_hasBits0 & 1073741824) != 0; }
    }
    /// <summary>Clears the value of the "is_evchop" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsEvchop() {
      _hasBits0 &= ~1073741824;
    }

    /// <summary>Field number for the "is_snowball_hunter" field.</summary>
    public const int IsSnowballHunterFieldNumber = 37;
    private readonly static bool IsSnowballHunterDefaultValue = false;

    private bool isSnowballHunter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSnowballHunter {
      get { if ((_hasBits0 & -2147483648) != 0) { return isSnowballHunter_; } else { return IsSnowballHunterDefaultValue; } }
      set {
        _hasBits0 |= -2147483648;
        isSnowballHunter_ = value;
      }
    }
    /// <summary>Gets whether the "is_snowball_hunter" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsSnowballHunter {
      get { return (_hasBits0 & -2147483648) != 0; }
    }
    /// <summary>Clears the value of the "is_snowball_hunter" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsSnowballHunter() {
      _hasBits0 &= ~-2147483648;
    }

    /// <summary>Field number for the "is_suspended" field.</summary>
    public const int IsSuspendedFieldNumber = 38;
    private readonly static bool IsSuspendedDefaultValue = false;

    private bool isSuspended_;
    /// <summary>
    /// mtt挂起暂停相关
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSuspended {
      get { if ((_hasBits1 & 1) != 0) { return isSuspended_; } else { return IsSuspendedDefaultValue; } }
      set {
        _hasBits1 |= 1;
        isSuspended_ = value;
      }
    }
    /// <summary>Gets whether the "is_suspended" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsSuspended {
      get { return (_hasBits1 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_suspended" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsSuspended() {
      _hasBits1 &= ~1;
    }

    /// <summary>Field number for the "suspend_timestamp" field.</summary>
    public const int SuspendTimestampFieldNumber = 39;
    private readonly static long SuspendTimestampDefaultValue = 0L;

    private long suspendTimestamp_;
    /// <summary>
    /// 房间最后挂起时间戳
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SuspendTimestamp {
      get { if ((_hasBits1 & 2) != 0) { return suspendTimestamp_; } else { return SuspendTimestampDefaultValue; } }
      set {
        _hasBits1 |= 2;
        suspendTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "suspend_timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuspendTimestamp {
      get { return (_hasBits1 & 2) != 0; }
    }
    /// <summary>Clears the value of the "suspend_timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuspendTimestamp() {
      _hasBits1 &= ~2;
    }

    /// <summary>Field number for the "suspend_time" field.</summary>
    public const int SuspendTimeFieldNumber = 40;
    private readonly static long SuspendTimeDefaultValue = 0L;

    private long suspendTime_;
    /// <summary>
    /// 挂起恢复总流逝时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SuspendTime {
      get { if ((_hasBits1 & 4) != 0) { return suspendTime_; } else { return SuspendTimeDefaultValue; } }
      set {
        _hasBits1 |= 4;
        suspendTime_ = value;
      }
    }
    /// <summary>Gets whether the "suspend_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuspendTime {
      get { return (_hasBits1 & 4) != 0; }
    }
    /// <summary>Clears the value of the "suspend_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuspendTime() {
      _hasBits1 &= ~4;
    }

    /// <summary>Field number for the "vpip_limit_per_set" field.</summary>
    public const int VpipLimitPerSetFieldNumber = 41;
    private readonly static int VpipLimitPerSetDefaultValue = 0;

    private int vpipLimitPerSet_;
    /// <summary>
    ///本局vpip 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int VpipLimitPerSet {
      get { if ((_hasBits1 & 8) != 0) { return vpipLimitPerSet_; } else { return VpipLimitPerSetDefaultValue; } }
      set {
        _hasBits1 |= 8;
        vpipLimitPerSet_ = value;
      }
    }
    /// <summary>Gets whether the "vpip_limit_per_set" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVpipLimitPerSet {
      get { return (_hasBits1 & 8) != 0; }
    }
    /// <summary>Clears the value of the "vpip_limit_per_set" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVpipLimitPerSet() {
      _hasBits1 &= ~8;
    }

    /// <summary>Field number for the "min_hands_per_set" field.</summary>
    public const int MinHandsPerSetFieldNumber = 42;
    private readonly static int MinHandsPerSetDefaultValue = 0;

    private int minHandsPerSet_;
    /// <summary>
    ///本局vpip检测的最低手数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MinHandsPerSet {
      get { if ((_hasBits1 & 16) != 0) { return minHandsPerSet_; } else { return MinHandsPerSetDefaultValue; } }
      set {
        _hasBits1 |= 16;
        minHandsPerSet_ = value;
      }
    }
    /// <summary>Gets whether the "min_hands_per_set" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinHandsPerSet {
      get { return (_hasBits1 & 16) != 0; }
    }
    /// <summary>Clears the value of the "min_hands_per_set" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinHandsPerSet() {
      _hasBits1 &= ~16;
    }

    /// <summary>Field number for the "passwd_limit" field.</summary>
    public const int PasswdLimitFieldNumber = 43;
    private readonly static bool PasswdLimitDefaultValue = false;

    private bool passwdLimit_;
    /// <summary>
    /// private room limit passwd
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PasswdLimit {
      get { if ((_hasBits1 & 32) != 0) { return passwdLimit_; } else { return PasswdLimitDefaultValue; } }
      set {
        _hasBits1 |= 32;
        passwdLimit_ = value;
      }
    }
    /// <summary>Gets whether the "passwd_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPasswdLimit {
      get { return (_hasBits1 & 32) != 0; }
    }
    /// <summary>Clears the value of the "passwd_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPasswdLimit() {
      _hasBits1 &= ~32;
    }

    /// <summary>Field number for the "passwd" field.</summary>
    public const int PasswdFieldNumber = 44;
    private readonly static string PasswdDefaultValue = "";

    private string passwd_;
    /// <summary>
    /// private room password
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Passwd {
      get { return passwd_ ?? PasswdDefaultValue; }
      set {
        passwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "passwd" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPasswd {
      get { return passwd_ != null; }
    }
    /// <summary>Clears the value of the "passwd" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPasswd() {
      passwd_ = null;
    }

    /// <summary>Field number for the "max_reward_ratio" field.</summary>
    public const int MaxRewardRatioFieldNumber = 45;
    private readonly static int MaxRewardRatioDefaultValue = 0;

    private int maxRewardRatio_;
    /// <summary>
    ///spinup 最高奖励倍数  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxRewardRatio {
      get { if ((_hasBits1 & 64) != 0) { return maxRewardRatio_; } else { return MaxRewardRatioDefaultValue; } }
      set {
        _hasBits1 |= 64;
        maxRewardRatio_ = value;
      }
    }
    /// <summary>Gets whether the "max_reward_ratio" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxRewardRatio {
      get { return (_hasBits1 & 64) != 0; }
    }
    /// <summary>Clears the value of the "max_reward_ratio" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxRewardRatio() {
      _hasBits1 &= ~64;
    }

    /// <summary>Field number for the "spinup_reward_ratio" field.</summary>
    public const int SpinupRewardRatioFieldNumber = 46;
    private readonly static int SpinupRewardRatioDefaultValue = 0;

    private int spinupRewardRatio_;
    /// <summary>
    ///spinup 的奖励倍数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpinupRewardRatio {
      get { if ((_hasBits1 & 128) != 0) { return spinupRewardRatio_; } else { return SpinupRewardRatioDefaultValue; } }
      set {
        _hasBits1 |= 128;
        spinupRewardRatio_ = value;
      }
    }
    /// <summary>Gets whether the "spinup_reward_ratio" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpinupRewardRatio {
      get { return (_hasBits1 & 128) != 0; }
    }
    /// <summary>Clears the value of the "spinup_reward_ratio" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpinupRewardRatio() {
      _hasBits1 &= ~128;
    }

    /// <summary>Field number for the "is_group_mtt" field.</summary>
    public const int IsGroupMttFieldNumber = 47;
    private readonly static bool IsGroupMttDefaultValue = false;

    private bool isGroupMtt_;
    /// <summary>
    ///是否分组赛
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsGroupMtt {
      get { if ((_hasBits1 & 256) != 0) { return isGroupMtt_; } else { return IsGroupMttDefaultValue; } }
      set {
        _hasBits1 |= 256;
        isGroupMtt_ = value;
      }
    }
    /// <summary>Gets whether the "is_group_mtt" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsGroupMtt {
      get { return (_hasBits1 & 256) != 0; }
    }
    /// <summary>Clears the value of the "is_group_mtt" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsGroupMtt() {
      _hasBits1 &= ~256;
    }

    /// <summary>Field number for the "group_key" field.</summary>
    public const int GroupKeyFieldNumber = 48;
    private readonly static string GroupKeyDefaultValue = "";

    private string groupKey_;
    /// <summary>
    /// 分组赛关联的key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GroupKey {
      get { return groupKey_ ?? GroupKeyDefaultValue; }
      set {
        groupKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "group_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGroupKey {
      get { return groupKey_ != null; }
    }
    /// <summary>Clears the value of the "group_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGroupKey() {
      groupKey_ = null;
    }

    /// <summary>Field number for the "group_over_level" field.</summary>
    public const int GroupOverLevelFieldNumber = 49;
    private readonly static int GroupOverLevelDefaultValue = 0;

    private int groupOverLevel_;
    /// <summary>
    /// 对于stage为1是小组赛结束级别，对于stage为2的是day2的开始级别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GroupOverLevel {
      get { if ((_hasBits1 & 512) != 0) { return groupOverLevel_; } else { return GroupOverLevelDefaultValue; } }
      set {
        _hasBits1 |= 512;
        groupOverLevel_ = value;
      }
    }
    /// <summary>Gets whether the "group_over_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGroupOverLevel {
      get { return (_hasBits1 & 512) != 0; }
    }
    /// <summary>Clears the value of the "group_over_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGroupOverLevel() {
      _hasBits1 &= ~512;
    }

    /// <summary>Field number for the "group_stage" field.</summary>
    public const int GroupStageFieldNumber = 50;
    private readonly static int GroupStageDefaultValue = 0;

    private int groupStage_;
    /// <summary>
    /// 1 表示day 1  2表示 day2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GroupStage {
      get { if ((_hasBits1 & 1024) != 0) { return groupStage_; } else { return GroupStageDefaultValue; } }
      set {
        _hasBits1 |= 1024;
        groupStage_ = value;
      }
    }
    /// <summary>Gets whether the "group_stage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGroupStage {
      get { return (_hasBits1 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "group_stage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGroupStage() {
      _hasBits1 &= ~1024;
    }

    /// <summary>Field number for the "is_freeze_out" field.</summary>
    public const int IsFreezeOutFieldNumber = 51;
    private readonly static bool IsFreezeOutDefaultValue = false;

    private bool isFreezeOut_;
    /// <summary>
    ///是否只允许玩家只在一个小组赛中报名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsFreezeOut {
      get { if ((_hasBits1 & 2048) != 0) { return isFreezeOut_; } else { return IsFreezeOutDefaultValue; } }
      set {
        _hasBits1 |= 2048;
        isFreezeOut_ = value;
      }
    }
    /// <summary>Gets whether the "is_freeze_out" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsFreezeOut {
      get { return (_hasBits1 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "is_freeze_out" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsFreezeOut() {
      _hasBits1 &= ~2048;
    }

    /// <summary>Field number for the "group_flag" field.</summary>
    public const int GroupFlagFieldNumber = 52;
    private readonly static string GroupFlagDefaultValue = "";

    private string groupFlag_;
    /// <summary>
    ///分组赛的标记A,B,C,D,E,M
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GroupFlag {
      get { return groupFlag_ ?? GroupFlagDefaultValue; }
      set {
        groupFlag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "group_flag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGroupFlag {
      get { return groupFlag_ != null; }
    }
    /// <summary>Clears the value of the "group_flag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGroupFlag() {
      groupFlag_ = null;
    }

    /// <summary>Field number for the "super_league_type" field.</summary>
    public const int SuperLeagueTypeFieldNumber = 53;
    private readonly static int SuperLeagueTypeDefaultValue = 0;

    private int superLeagueType_;
    /// <summary>
    ///1未非ppst的超级联盟
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueType {
      get { if ((_hasBits1 & 4096) != 0) { return superLeagueType_; } else { return SuperLeagueTypeDefaultValue; } }
      set {
        _hasBits1 |= 4096;
        superLeagueType_ = value;
      }
    }
    /// <summary>Gets whether the "super_league_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueType {
      get { return (_hasBits1 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "super_league_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueType() {
      _hasBits1 &= ~4096;
    }

    /// <summary>Field number for the "recover_type" field.</summary>
    public const int RecoverTypeFieldNumber = 54;
    private readonly static int RecoverTypeDefaultValue = 0;

    private int recoverType_;
    /// <summary>
    ///值为1时表示牌桌处于故障暂停状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RecoverType {
      get { if ((_hasBits1 & 8192) != 0) { return recoverType_; } else { return RecoverTypeDefaultValue; } }
      set {
        _hasBits1 |= 8192;
        recoverType_ = value;
      }
    }
    /// <summary>Gets whether the "recover_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRecoverType {
      get { return (_hasBits1 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "recover_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRecoverType() {
      _hasBits1 &= ~8192;
    }

    /// <summary>Field number for the "recover_start_time" field.</summary>
    public const int RecoverStartTimeFieldNumber = 55;
    private readonly static long RecoverStartTimeDefaultValue = 0L;

    private long recoverStartTime_;
    /// <summary>
    ///牌桌继续的时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RecoverStartTime {
      get { if ((_hasBits1 & 16384) != 0) { return recoverStartTime_; } else { return RecoverStartTimeDefaultValue; } }
      set {
        _hasBits1 |= 16384;
        recoverStartTime_ = value;
      }
    }
    /// <summary>Gets whether the "recover_start_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRecoverStartTime {
      get { return (_hasBits1 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "recover_start_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRecoverStartTime() {
      _hasBits1 &= ~16384;
    }

    /// <summary>Field number for the "early_bird_discount" field.</summary>
    public const int EarlyBirdDiscountFieldNumber = 56;
    private readonly static int EarlyBirdDiscountDefaultValue = 0;

    private int earlyBirdDiscount_;
    /// <summary>
    ///50代表是50%的折扣
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EarlyBirdDiscount {
      get { if ((_hasBits1 & 32768) != 0) { return earlyBirdDiscount_; } else { return EarlyBirdDiscountDefaultValue; } }
      set {
        _hasBits1 |= 32768;
        earlyBirdDiscount_ = value;
      }
    }
    /// <summary>Gets whether the "early_bird_discount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEarlyBirdDiscount {
      get { return (_hasBits1 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "early_bird_discount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEarlyBirdDiscount() {
      _hasBits1 &= ~32768;
    }

    /// <summary>Field number for the "is_top" field.</summary>
    public const int IsTopFieldNumber = 57;
    private readonly static bool IsTopDefaultValue = false;

    private bool isTop_;
    /// <summary>
    ///是否置顶
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsTop {
      get { if ((_hasBits1 & 65536) != 0) { return isTop_; } else { return IsTopDefaultValue; } }
      set {
        _hasBits1 |= 65536;
        isTop_ = value;
      }
    }
    /// <summary>Gets whether the "is_top" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsTop {
      get { return (_hasBits1 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "is_top" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsTop() {
      _hasBits1 &= ~65536;
    }

    /// <summary>Field number for the "is_captcha" field.</summary>
    public const int IsCaptchaFieldNumber = 58;
    private readonly static bool IsCaptchaDefaultValue = false;

    private bool isCaptcha_;
    /// <summary>
    ///是否人机校验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCaptcha {
      get { if ((_hasBits1 & 131072) != 0) { return isCaptcha_; } else { return IsCaptchaDefaultValue; } }
      set {
        _hasBits1 |= 131072;
        isCaptcha_ = value;
      }
    }
    /// <summary>Gets whether the "is_captcha" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsCaptcha {
      get { return (_hasBits1 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "is_captcha" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsCaptcha() {
      _hasBits1 &= ~131072;
    }

    /// <summary>Field number for the "is_ban_pc" field.</summary>
    public const int IsBanPcFieldNumber = 59;
    private readonly static bool IsBanPcDefaultValue = false;

    private bool isBanPc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBanPc {
      get { if ((_hasBits1 & 262144) != 0) { return isBanPc_; } else { return IsBanPcDefaultValue; } }
      set {
        _hasBits1 |= 262144;
        isBanPc_ = value;
      }
    }
    /// <summary>Gets whether the "is_ban_pc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsBanPc {
      get { return (_hasBits1 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "is_ban_pc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsBanPc() {
      _hasBits1 &= ~262144;
    }

    /// <summary>Field number for the "is_check_mail" field.</summary>
    public const int IsCheckMailFieldNumber = 60;
    private readonly static bool IsCheckMailDefaultValue = false;

    private bool isCheckMail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCheckMail {
      get { if ((_hasBits1 & 524288) != 0) { return isCheckMail_; } else { return IsCheckMailDefaultValue; } }
      set {
        _hasBits1 |= 524288;
        isCheckMail_ = value;
      }
    }
    /// <summary>Gets whether the "is_check_mail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsCheckMail {
      get { return (_hasBits1 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "is_check_mail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsCheckMail() {
      _hasBits1 &= ~524288;
    }

    /// <summary>Field number for the "satellite_reward_price" field.</summary>
    public const int SatelliteRewardPriceFieldNumber = 61;
    private readonly static long SatelliteRewardPriceDefaultValue = 0L;

    private long satelliteRewardPrice_;
    /// <summary>
    ///衛星賽獎勵 --> 撈取MTT衛星賽列表時與買入比對
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SatelliteRewardPrice {
      get { if ((_hasBits1 & 1048576) != 0) { return satelliteRewardPrice_; } else { return SatelliteRewardPriceDefaultValue; } }
      set {
        _hasBits1 |= 1048576;
        satelliteRewardPrice_ = value;
      }
    }
    /// <summary>Gets whether the "satellite_reward_price" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSatelliteRewardPrice {
      get { return (_hasBits1 & 1048576) != 0; }
    }
    /// <summary>Clears the value of the "satellite_reward_price" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSatelliteRewardPrice() {
      _hasBits1 &= ~1048576;
    }

    /// <summary>Field number for the "ppstid" field.</summary>
    public const int PpstidFieldNumber = 62;
    private readonly static int PpstidDefaultValue = 0;

    private int ppstid_;
    /// <summary>
    ///新版ppstid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ppstid {
      get { if ((_hasBits1 & 2097152) != 0) { return ppstid_; } else { return PpstidDefaultValue; } }
      set {
        _hasBits1 |= 2097152;
        ppstid_ = value;
      }
    }
    /// <summary>Gets whether the "ppstid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpstid {
      get { return (_hasBits1 & 2097152) != 0; }
    }
    /// <summary>Clears the value of the "ppstid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpstid() {
      _hasBits1 &= ~2097152;
    }

    /// <summary>Field number for the "seven_deuce_reward_multiplier" field.</summary>
    public const int SevenDeuceRewardMultiplierFieldNumber = 63;
    private readonly static int SevenDeuceRewardMultiplierDefaultValue = 0;

    private int sevenDeuceRewardMultiplier_;
    /// <summary>
    ///72o獎勵抽取大盲倍率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SevenDeuceRewardMultiplier {
      get { if ((_hasBits1 & 4194304) != 0) { return sevenDeuceRewardMultiplier_; } else { return SevenDeuceRewardMultiplierDefaultValue; } }
      set {
        _hasBits1 |= 4194304;
        sevenDeuceRewardMultiplier_ = value;
      }
    }
    /// <summary>Gets whether the "seven_deuce_reward_multiplier" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSevenDeuceRewardMultiplier {
      get { return (_hasBits1 & 4194304) != 0; }
    }
    /// <summary>Clears the value of the "seven_deuce_reward_multiplier" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSevenDeuceRewardMultiplier() {
      _hasBits1 &= ~4194304;
    }

    /// <summary>Field number for the "is_vip_table" field.</summary>
    public const int IsVipTableFieldNumber = 64;
    private readonly static bool IsVipTableDefaultValue = false;

    private bool isVipTable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsVipTable {
      get { if ((_hasBits1 & 8388608) != 0) { return isVipTable_; } else { return IsVipTableDefaultValue; } }
      set {
        _hasBits1 |= 8388608;
        isVipTable_ = value;
      }
    }
    /// <summary>Gets whether the "is_vip_table" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsVipTable {
      get { return (_hasBits1 & 8388608) != 0; }
    }
    /// <summary>Clears the value of the "is_vip_table" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsVipTable() {
      _hasBits1 &= ~8388608;
    }

    /// <summary>Field number for the "enter_room_chips_prerequisite" field.</summary>
    public const int EnterRoomChipsPrerequisiteFieldNumber = 65;
    private readonly static long EnterRoomChipsPrerequisiteDefaultValue = 0L;

    private long enterRoomChipsPrerequisite_;
    /// <summary>
    ///進房的最低PP幣量要求
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EnterRoomChipsPrerequisite {
      get { if ((_hasBits1 & 16777216) != 0) { return enterRoomChipsPrerequisite_; } else { return EnterRoomChipsPrerequisiteDefaultValue; } }
      set {
        _hasBits1 |= 16777216;
        enterRoomChipsPrerequisite_ = value;
      }
    }
    /// <summary>Gets whether the "enter_room_chips_prerequisite" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnterRoomChipsPrerequisite {
      get { return (_hasBits1 & 16777216) != 0; }
    }
    /// <summary>Clears the value of the "enter_room_chips_prerequisite" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnterRoomChipsPrerequisite() {
      _hasBits1 &= ~16777216;
    }

    /// <summary>Field number for the "ppsrid" field.</summary>
    public const int PpsridFieldNumber = 66;
    private readonly static int PpsridDefaultValue = 0;

    private int ppsrid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ppsrid {
      get { if ((_hasBits1 & 33554432) != 0) { return ppsrid_; } else { return PpsridDefaultValue; } }
      set {
        _hasBits1 |= 33554432;
        ppsrid_ = value;
      }
    }
    /// <summary>Gets whether the "ppsrid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpsrid {
      get { return (_hasBits1 & 33554432) != 0; }
    }
    /// <summary>Clears the value of the "ppsrid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpsrid() {
      _hasBits1 &= ~33554432;
    }

    /// <summary>Field number for the "is_jackpot" field.</summary>
    public const int IsJackpotFieldNumber = 67;
    private readonly static bool IsJackpotDefaultValue = false;

    private bool isJackpot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsJackpot {
      get { if ((_hasBits1 & 67108864) != 0) { return isJackpot_; } else { return IsJackpotDefaultValue; } }
      set {
        _hasBits1 |= 67108864;
        isJackpot_ = value;
      }
    }
    /// <summary>Gets whether the "is_jackpot" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsJackpot {
      get { return (_hasBits1 & 67108864) != 0; }
    }
    /// <summary>Clears the value of the "is_jackpot" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsJackpot() {
      _hasBits1 &= ~67108864;
    }

    /// <summary>Field number for the "mtt_reward_pool_info" field.</summary>
    public const int MttRewardPoolInfoFieldNumber = 68;
    private global::Texas.Protocol.MttRewardPoolInfo mttRewardPoolInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.MttRewardPoolInfo MttRewardPoolInfo {
      get { return mttRewardPoolInfo_; }
      set {
        mttRewardPoolInfo_ = value;
      }
    }

    /// <summary>Field number for the "is_certification" field.</summary>
    public const int IsCertificationFieldNumber = 69;
    private readonly static bool IsCertificationDefaultValue = false;

    private bool isCertification_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCertification {
      get { if ((_hasBits1 & 134217728) != 0) { return isCertification_; } else { return IsCertificationDefaultValue; } }
      set {
        _hasBits1 |= 134217728;
        isCertification_ = value;
      }
    }
    /// <summary>Gets whether the "is_certification" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsCertification {
      get { return (_hasBits1 & 134217728) != 0; }
    }
    /// <summary>Clears the value of the "is_certification" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsCertification() {
      _hasBits1 &= ~134217728;
    }

    /// <summary>Field number for the "bombpot_type" field.</summary>
    public const int BombpotTypeFieldNumber = 70;
    private readonly static int BombpotTypeDefaultValue = 0;

    private int bombpotType_;
    /// <summary>
    /// 0 no bombpot, 1 hands cycle bombpot, 2 minutes cycle bombpot
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BombpotType {
      get { if ((_hasBits1 & 268435456) != 0) { return bombpotType_; } else { return BombpotTypeDefaultValue; } }
      set {
        _hasBits1 |= 268435456;
        bombpotType_ = value;
      }
    }
    /// <summary>Gets whether the "bombpot_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBombpotType {
      get { return (_hasBits1 & 268435456) != 0; }
    }
    /// <summary>Clears the value of the "bombpot_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBombpotType() {
      _hasBits1 &= ~268435456;
    }

    /// <summary>Field number for the "min_bet" field.</summary>
    public const int MinBetFieldNumber = 71;
    private readonly static int MinBetDefaultValue = 0;

    private int minBet_;
    /// <summary>
    ///color game 下注選項
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MinBet {
      get { if ((_hasBits1 & 536870912) != 0) { return minBet_; } else { return MinBetDefaultValue; } }
      set {
        _hasBits1 |= 536870912;
        minBet_ = value;
      }
    }
    /// <summary>Gets whether the "min_bet" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinBet {
      get { return (_hasBits1 & 536870912) != 0; }
    }
    /// <summary>Clears the value of the "min_bet" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinBet() {
      _hasBits1 &= ~536870912;
    }

    /// <summary>Field number for the "middle_bet" field.</summary>
    public const int MiddleBetFieldNumber = 72;
    private readonly static int MiddleBetDefaultValue = 0;

    private int middleBet_;
    /// <summary>
    ///color game 下注選項
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MiddleBet {
      get { if ((_hasBits1 & 1073741824) != 0) { return middleBet_; } else { return MiddleBetDefaultValue; } }
      set {
        _hasBits1 |= 1073741824;
        middleBet_ = value;
      }
    }
    /// <summary>Gets whether the "middle_bet" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMiddleBet {
      get { return (_hasBits1 & 1073741824) != 0; }
    }
    /// <summary>Clears the value of the "middle_bet" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMiddleBet() {
      _hasBits1 &= ~1073741824;
    }

    /// <summary>Field number for the "high_bet" field.</summary>
    public const int HighBetFieldNumber = 73;
    private readonly static int HighBetDefaultValue = 0;

    private int highBet_;
    /// <summary>
    ///color game 下注選項
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HighBet {
      get { if ((_hasBits1 & -2147483648) != 0) { return highBet_; } else { return HighBetDefaultValue; } }
      set {
        _hasBits1 |= -2147483648;
        highBet_ = value;
      }
    }
    /// <summary>Gets whether the "high_bet" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHighBet {
      get { return (_hasBits1 & -2147483648) != 0; }
    }
    /// <summary>Clears the value of the "high_bet" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHighBet() {
      _hasBits1 &= ~-2147483648;
    }

    /// <summary>Field number for the "is_ppgl_tryouts" field.</summary>
    public const int IsPpglTryoutsFieldNumber = 74;
    private readonly static bool IsPpglTryoutsDefaultValue = false;

    private bool isPpglTryouts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPpglTryouts {
      get { if ((_hasBits2 & 1) != 0) { return isPpglTryouts_; } else { return IsPpglTryoutsDefaultValue; } }
      set {
        _hasBits2 |= 1;
        isPpglTryouts_ = value;
      }
    }
    /// <summary>Gets whether the "is_ppgl_tryouts" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPpglTryouts {
      get { return (_hasBits2 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_ppgl_tryouts" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPpglTryouts() {
      _hasBits2 &= ~1;
    }

    /// <summary>Field number for the "bombpot_additional_board" field.</summary>
    public const int BombpotAdditionalBoardFieldNumber = 75;
    private readonly static int BombpotAdditionalBoardDefaultValue = 0;

    private int bombpotAdditionalBoard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BombpotAdditionalBoard {
      get { if ((_hasBits2 & 2) != 0) { return bombpotAdditionalBoard_; } else { return BombpotAdditionalBoardDefaultValue; } }
      set {
        _hasBits2 |= 2;
        bombpotAdditionalBoard_ = value;
      }
    }
    /// <summary>Gets whether the "bombpot_additional_board" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBombpotAdditionalBoard {
      get { return (_hasBits2 & 2) != 0; }
    }
    /// <summary>Clears the value of the "bombpot_additional_board" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBombpotAdditionalBoard() {
      _hasBits2 &= ~2;
    }

    /// <summary>Field number for the "additional_board" field.</summary>
    public const int AdditionalBoardFieldNumber = 76;
    private readonly static int AdditionalBoardDefaultValue = 0;

    private int additionalBoard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AdditionalBoard {
      get { if ((_hasBits2 & 4) != 0) { return additionalBoard_; } else { return AdditionalBoardDefaultValue; } }
      set {
        _hasBits2 |= 4;
        additionalBoard_ = value;
      }
    }
    /// <summary>Gets whether the "additional_board" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAdditionalBoard {
      get { return (_hasBits2 & 4) != 0; }
    }
    /// <summary>Clears the value of the "additional_board" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAdditionalBoard() {
      _hasBits2 &= ~4;
    }

    /// <summary>Field number for the "hitpot_rate" field.</summary>
    public const int HitpotRateFieldNumber = 77;
    private readonly static int HitpotRateDefaultValue = 0;

    private int hitpotRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HitpotRate {
      get { if ((_hasBits2 & 8) != 0) { return hitpotRate_; } else { return HitpotRateDefaultValue; } }
      set {
        _hasBits2 |= 8;
        hitpotRate_ = value;
      }
    }
    /// <summary>Gets whether the "hitpot_rate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHitpotRate {
      get { return (_hasBits2 & 8) != 0; }
    }
    /// <summary>Clears the value of the "hitpot_rate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHitpotRate() {
      _hasBits2 &= ~8;
    }

    /// <summary>Field number for the "bonus_card" field.</summary>
    public const int BonusCardFieldNumber = 78;
    private readonly static int BonusCardDefaultValue = 0;

    private int bonusCard_;
    /// <summary>
    /// none:0b00, A:0b01, K:0b10, AK:0b11
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BonusCard {
      get { if ((_hasBits2 & 16) != 0) { return bonusCard_; } else { return BonusCardDefaultValue; } }
      set {
        _hasBits2 |= 16;
        bonusCard_ = value;
      }
    }
    /// <summary>Gets whether the "bonus_card" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBonusCard {
      get { return (_hasBits2 & 16) != 0; }
    }
    /// <summary>Clears the value of the "bonus_card" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBonusCard() {
      _hasBits2 &= ~16;
    }

    /// <summary>Field number for the "fight_limit" field.</summary>
    public const int FightLimitFieldNumber = 79;
    private readonly static int FightLimitDefaultValue = 0;

    private int fightLimit_;
    /// <summary>
    /// 需要幾個已出示牌型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FightLimit {
      get { if ((_hasBits2 & 32) != 0) { return fightLimit_; } else { return FightLimitDefaultValue; } }
      set {
        _hasBits2 |= 32;
        fightLimit_ = value;
      }
    }
    /// <summary>Gets whether the "fight_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFightLimit {
      get { return (_hasBits2 & 32) != 0; }
    }
    /// <summary>Clears the value of the "fight_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFightLimit() {
      _hasBits2 &= ~32;
    }

    /// <summary>Field number for the "ban_club" field.</summary>
    public const int BanClubFieldNumber = 80;
    private static readonly pb::FieldCodec<int> _repeated_banClub_codec
        = pb::FieldCodec.ForInt32(642);
    private readonly pbc::RepeatedField<int> banClub_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 限制俱乐部不能看到和加入牌桌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> BanClub {
      get { return banClub_; }
    }

    /// <summary>Field number for the "ban_country" field.</summary>
    public const int BanCountryFieldNumber = 81;
    private static readonly pb::FieldCodec<string> _repeated_banCountry_codec
        = pb::FieldCodec.ForString(650);
    private readonly pbc::RepeatedField<string> banCountry_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 限制注册地为某些国家的用户不能看到和加入牌桌，缩写
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> BanCountry {
      get { return banCountry_; }
    }

    /// <summary>Field number for the "create_clubid" field.</summary>
    public const int CreateClubidFieldNumber = 82;
    private readonly static int CreateClubidDefaultValue = 0;

    private int createClubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CreateClubid {
      get { if ((_hasBits2 & 64) != 0) { return createClubid_; } else { return CreateClubidDefaultValue; } }
      set {
        _hasBits2 |= 64;
        createClubid_ = value;
      }
    }
    /// <summary>Gets whether the "create_clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCreateClubid {
      get { return (_hasBits2 & 64) != 0; }
    }
    /// <summary>Clears the value of the "create_clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCreateClubid() {
      _hasBits2 &= ~64;
    }

    /// <summary>Field number for the "is_sequential_view_card" field.</summary>
    public const int IsSequentialViewCardFieldNumber = 83;
    private readonly static bool IsSequentialViewCardDefaultValue = false;

    private bool isSequentialViewCard_;
    /// <summary>
    /// 是否開啟順序看牌功能
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSequentialViewCard {
      get { if ((_hasBits2 & 128) != 0) { return isSequentialViewCard_; } else { return IsSequentialViewCardDefaultValue; } }
      set {
        _hasBits2 |= 128;
        isSequentialViewCard_ = value;
      }
    }
    /// <summary>Gets whether the "is_sequential_view_card" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsSequentialViewCard {
      get { return (_hasBits2 & 128) != 0; }
    }
    /// <summary>Clears the value of the "is_sequential_view_card" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsSequentialViewCard() {
      _hasBits2 &= ~128;
    }

    /// <summary>Field number for the "is_bombpot_without_evchop" field.</summary>
    public const int IsBombpotWithoutEvchopFieldNumber = 84;
    private readonly static bool IsBombpotWithoutEvchopDefaultValue = false;

    private bool isBombpotWithoutEvchop_;
    /// <summary>
    /// bombpot時不能使用evchop
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBombpotWithoutEvchop {
      get { if ((_hasBits2 & 256) != 0) { return isBombpotWithoutEvchop_; } else { return IsBombpotWithoutEvchopDefaultValue; } }
      set {
        _hasBits2 |= 256;
        isBombpotWithoutEvchop_ = value;
      }
    }
    /// <summary>Gets whether the "is_bombpot_without_evchop" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsBombpotWithoutEvchop {
      get { return (_hasBits2 & 256) != 0; }
    }
    /// <summary>Clears the value of the "is_bombpot_without_evchop" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsBombpotWithoutEvchop() {
      _hasBits2 &= ~256;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubRoomInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubRoomInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (RoomName != other.RoomName) return false;
      if (OwnerName != other.OwnerName) return false;
      if (OwnerIcon != other.OwnerIcon) return false;
      if (Blind != other.Blind) return false;
      if (Ante != other.Ante) return false;
      if (GameTime != other.GameTime) return false;
      if (LeftTime != other.LeftTime) return false;
      if (SeatNum != other.SeatNum) return false;
      if (Players != other.Players) return false;
      if (IsStarted != other.IsStarted) return false;
      if (AuthNum != other.AuthNum) return false;
      if (RoomType != other.RoomType) return false;
      if (UpblindTime != other.UpblindTime) return false;
      if (Buyin != other.Buyin) return false;
      if (TotalPlayerNum != other.TotalPlayerNum) return false;
      if (CurrentPlayerNum != other.CurrentPlayerNum) return false;
      if (MttStatus != other.MttStatus) return false;
      if (EndRebuyTimestamp != other.EndRebuyTimestamp) return false;
      if (StartTimestamp != other.StartTimestamp) return false;
      if (Now != other.Now) return false;
      if (MttStartTime != other.MttStartTime) return false;
      if(!waitUsers_.Equals(other.waitUsers_)) return false;
      if (IsHunter != other.IsHunter) return false;
      if (GpsLimit != other.GpsLimit) return false;
      if (IpLimit != other.IpLimit) return false;
      if (OwnerVipLevel != other.OwnerVipLevel) return false;
      if (CreateTimestamp != other.CreateTimestamp) return false;
      if (GameMode != other.GameMode) return false;
      if (IsIn != other.IsIn) return false;
      if (IsInsurance != other.IsInsurance) return false;
      if (GamesetStatus != other.GamesetStatus) return false;
      if (VpipLimit != other.VpipLimit) return false;
      if (EarlyBirdNum != other.EarlyBirdNum) return false;
      if (SuperLeagueid != other.SuperLeagueid) return false;
      if (IsEvchop != other.IsEvchop) return false;
      if (IsSnowballHunter != other.IsSnowballHunter) return false;
      if (IsSuspended != other.IsSuspended) return false;
      if (SuspendTimestamp != other.SuspendTimestamp) return false;
      if (SuspendTime != other.SuspendTime) return false;
      if (VpipLimitPerSet != other.VpipLimitPerSet) return false;
      if (MinHandsPerSet != other.MinHandsPerSet) return false;
      if (PasswdLimit != other.PasswdLimit) return false;
      if (Passwd != other.Passwd) return false;
      if (MaxRewardRatio != other.MaxRewardRatio) return false;
      if (SpinupRewardRatio != other.SpinupRewardRatio) return false;
      if (IsGroupMtt != other.IsGroupMtt) return false;
      if (GroupKey != other.GroupKey) return false;
      if (GroupOverLevel != other.GroupOverLevel) return false;
      if (GroupStage != other.GroupStage) return false;
      if (IsFreezeOut != other.IsFreezeOut) return false;
      if (GroupFlag != other.GroupFlag) return false;
      if (SuperLeagueType != other.SuperLeagueType) return false;
      if (RecoverType != other.RecoverType) return false;
      if (RecoverStartTime != other.RecoverStartTime) return false;
      if (EarlyBirdDiscount != other.EarlyBirdDiscount) return false;
      if (IsTop != other.IsTop) return false;
      if (IsCaptcha != other.IsCaptcha) return false;
      if (IsBanPc != other.IsBanPc) return false;
      if (IsCheckMail != other.IsCheckMail) return false;
      if (SatelliteRewardPrice != other.SatelliteRewardPrice) return false;
      if (Ppstid != other.Ppstid) return false;
      if (SevenDeuceRewardMultiplier != other.SevenDeuceRewardMultiplier) return false;
      if (IsVipTable != other.IsVipTable) return false;
      if (EnterRoomChipsPrerequisite != other.EnterRoomChipsPrerequisite) return false;
      if (Ppsrid != other.Ppsrid) return false;
      if (IsJackpot != other.IsJackpot) return false;
      if (!object.Equals(MttRewardPoolInfo, other.MttRewardPoolInfo)) return false;
      if (IsCertification != other.IsCertification) return false;
      if (BombpotType != other.BombpotType) return false;
      if (MinBet != other.MinBet) return false;
      if (MiddleBet != other.MiddleBet) return false;
      if (HighBet != other.HighBet) return false;
      if (IsPpglTryouts != other.IsPpglTryouts) return false;
      if (BombpotAdditionalBoard != other.BombpotAdditionalBoard) return false;
      if (AdditionalBoard != other.AdditionalBoard) return false;
      if (HitpotRate != other.HitpotRate) return false;
      if (BonusCard != other.BonusCard) return false;
      if (FightLimit != other.FightLimit) return false;
      if(!banClub_.Equals(other.banClub_)) return false;
      if(!banCountry_.Equals(other.banCountry_)) return false;
      if (CreateClubid != other.CreateClubid) return false;
      if (IsSequentialViewCard != other.IsSequentialViewCard) return false;
      if (IsBombpotWithoutEvchop != other.IsBombpotWithoutEvchop) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasRoomName) hash ^= RoomName.GetHashCode();
      if (HasOwnerName) hash ^= OwnerName.GetHashCode();
      if (HasOwnerIcon) hash ^= OwnerIcon.GetHashCode();
      if (HasBlind) hash ^= Blind.GetHashCode();
      if (HasAnte) hash ^= Ante.GetHashCode();
      if (HasGameTime) hash ^= GameTime.GetHashCode();
      if (HasLeftTime) hash ^= LeftTime.GetHashCode();
      if (HasSeatNum) hash ^= SeatNum.GetHashCode();
      if (HasPlayers) hash ^= Players.GetHashCode();
      if (HasIsStarted) hash ^= IsStarted.GetHashCode();
      if (HasAuthNum) hash ^= AuthNum.GetHashCode();
      if (HasRoomType) hash ^= RoomType.GetHashCode();
      if (HasUpblindTime) hash ^= UpblindTime.GetHashCode();
      if (HasBuyin) hash ^= Buyin.GetHashCode();
      if (HasTotalPlayerNum) hash ^= TotalPlayerNum.GetHashCode();
      if (HasCurrentPlayerNum) hash ^= CurrentPlayerNum.GetHashCode();
      if (HasMttStatus) hash ^= MttStatus.GetHashCode();
      if (HasEndRebuyTimestamp) hash ^= EndRebuyTimestamp.GetHashCode();
      if (HasStartTimestamp) hash ^= StartTimestamp.GetHashCode();
      if (HasNow) hash ^= Now.GetHashCode();
      if (HasMttStartTime) hash ^= MttStartTime.GetHashCode();
      hash ^= waitUsers_.GetHashCode();
      if (HasIsHunter) hash ^= IsHunter.GetHashCode();
      if (HasGpsLimit) hash ^= GpsLimit.GetHashCode();
      if (HasIpLimit) hash ^= IpLimit.GetHashCode();
      if (HasOwnerVipLevel) hash ^= OwnerVipLevel.GetHashCode();
      if (HasCreateTimestamp) hash ^= CreateTimestamp.GetHashCode();
      if (HasGameMode) hash ^= GameMode.GetHashCode();
      if (HasIsIn) hash ^= IsIn.GetHashCode();
      if (HasIsInsurance) hash ^= IsInsurance.GetHashCode();
      if (HasGamesetStatus) hash ^= GamesetStatus.GetHashCode();
      if (HasVpipLimit) hash ^= VpipLimit.GetHashCode();
      if (HasEarlyBirdNum) hash ^= EarlyBirdNum.GetHashCode();
      if (HasSuperLeagueid) hash ^= SuperLeagueid.GetHashCode();
      if (HasIsEvchop) hash ^= IsEvchop.GetHashCode();
      if (HasIsSnowballHunter) hash ^= IsSnowballHunter.GetHashCode();
      if (HasIsSuspended) hash ^= IsSuspended.GetHashCode();
      if (HasSuspendTimestamp) hash ^= SuspendTimestamp.GetHashCode();
      if (HasSuspendTime) hash ^= SuspendTime.GetHashCode();
      if (HasVpipLimitPerSet) hash ^= VpipLimitPerSet.GetHashCode();
      if (HasMinHandsPerSet) hash ^= MinHandsPerSet.GetHashCode();
      if (HasPasswdLimit) hash ^= PasswdLimit.GetHashCode();
      if (HasPasswd) hash ^= Passwd.GetHashCode();
      if (HasMaxRewardRatio) hash ^= MaxRewardRatio.GetHashCode();
      if (HasSpinupRewardRatio) hash ^= SpinupRewardRatio.GetHashCode();
      if (HasIsGroupMtt) hash ^= IsGroupMtt.GetHashCode();
      if (HasGroupKey) hash ^= GroupKey.GetHashCode();
      if (HasGroupOverLevel) hash ^= GroupOverLevel.GetHashCode();
      if (HasGroupStage) hash ^= GroupStage.GetHashCode();
      if (HasIsFreezeOut) hash ^= IsFreezeOut.GetHashCode();
      if (HasGroupFlag) hash ^= GroupFlag.GetHashCode();
      if (HasSuperLeagueType) hash ^= SuperLeagueType.GetHashCode();
      if (HasRecoverType) hash ^= RecoverType.GetHashCode();
      if (HasRecoverStartTime) hash ^= RecoverStartTime.GetHashCode();
      if (HasEarlyBirdDiscount) hash ^= EarlyBirdDiscount.GetHashCode();
      if (HasIsTop) hash ^= IsTop.GetHashCode();
      if (HasIsCaptcha) hash ^= IsCaptcha.GetHashCode();
      if (HasIsBanPc) hash ^= IsBanPc.GetHashCode();
      if (HasIsCheckMail) hash ^= IsCheckMail.GetHashCode();
      if (HasSatelliteRewardPrice) hash ^= SatelliteRewardPrice.GetHashCode();
      if (HasPpstid) hash ^= Ppstid.GetHashCode();
      if (HasSevenDeuceRewardMultiplier) hash ^= SevenDeuceRewardMultiplier.GetHashCode();
      if (HasIsVipTable) hash ^= IsVipTable.GetHashCode();
      if (HasEnterRoomChipsPrerequisite) hash ^= EnterRoomChipsPrerequisite.GetHashCode();
      if (HasPpsrid) hash ^= Ppsrid.GetHashCode();
      if (HasIsJackpot) hash ^= IsJackpot.GetHashCode();
      if (mttRewardPoolInfo_ != null) hash ^= MttRewardPoolInfo.GetHashCode();
      if (HasIsCertification) hash ^= IsCertification.GetHashCode();
      if (HasBombpotType) hash ^= BombpotType.GetHashCode();
      if (HasMinBet) hash ^= MinBet.GetHashCode();
      if (HasMiddleBet) hash ^= MiddleBet.GetHashCode();
      if (HasHighBet) hash ^= HighBet.GetHashCode();
      if (HasIsPpglTryouts) hash ^= IsPpglTryouts.GetHashCode();
      if (HasBombpotAdditionalBoard) hash ^= BombpotAdditionalBoard.GetHashCode();
      if (HasAdditionalBoard) hash ^= AdditionalBoard.GetHashCode();
      if (HasHitpotRate) hash ^= HitpotRate.GetHashCode();
      if (HasBonusCard) hash ^= BonusCard.GetHashCode();
      if (HasFightLimit) hash ^= FightLimit.GetHashCode();
      hash ^= banClub_.GetHashCode();
      hash ^= banCountry_.GetHashCode();
      if (HasCreateClubid) hash ^= CreateClubid.GetHashCode();
      if (HasIsSequentialViewCard) hash ^= IsSequentialViewCard.GetHashCode();
      if (HasIsBombpotWithoutEvchop) hash ^= IsBombpotWithoutEvchop.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(10);
        output.WriteString(Roomid);
      }
      if (HasRoomName) {
        output.WriteRawTag(18);
        output.WriteString(RoomName);
      }
      if (HasOwnerName) {
        output.WriteRawTag(26);
        output.WriteString(OwnerName);
      }
      if (HasOwnerIcon) {
        output.WriteRawTag(34);
        output.WriteString(OwnerIcon);
      }
      if (HasBlind) {
        output.WriteRawTag(40);
        output.WriteInt64(Blind);
      }
      if (HasAnte) {
        output.WriteRawTag(48);
        output.WriteInt64(Ante);
      }
      if (HasGameTime) {
        output.WriteRawTag(56);
        output.WriteInt32(GameTime);
      }
      if (HasLeftTime) {
        output.WriteRawTag(64);
        output.WriteInt32(LeftTime);
      }
      if (HasSeatNum) {
        output.WriteRawTag(72);
        output.WriteInt32(SeatNum);
      }
      if (HasPlayers) {
        output.WriteRawTag(80);
        output.WriteInt32(Players);
      }
      if (HasIsStarted) {
        output.WriteRawTag(88);
        output.WriteBool(IsStarted);
      }
      if (HasAuthNum) {
        output.WriteRawTag(96);
        output.WriteInt32(AuthNum);
      }
      if (HasRoomType) {
        output.WriteRawTag(104);
        output.WriteEnum((int) RoomType);
      }
      if (HasUpblindTime) {
        output.WriteRawTag(112);
        output.WriteInt32(UpblindTime);
      }
      if (HasBuyin) {
        output.WriteRawTag(120);
        output.WriteInt64(Buyin);
      }
      if (HasTotalPlayerNum) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(TotalPlayerNum);
      }
      if (HasCurrentPlayerNum) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(CurrentPlayerNum);
      }
      if (HasMttStatus) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(MttStatus);
      }
      if (HasEndRebuyTimestamp) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(EndRebuyTimestamp);
      }
      if (HasStartTimestamp) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(StartTimestamp);
      }
      if (HasNow) {
        output.WriteRawTag(168, 1);
        output.WriteInt64(Now);
      }
      if (HasMttStartTime) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(MttStartTime);
      }
      waitUsers_.WriteTo(output, _repeated_waitUsers_codec);
      if (HasIsHunter) {
        output.WriteRawTag(192, 1);
        output.WriteBool(IsHunter);
      }
      if (HasGpsLimit) {
        output.WriteRawTag(200, 1);
        output.WriteBool(GpsLimit);
      }
      if (HasIpLimit) {
        output.WriteRawTag(208, 1);
        output.WriteBool(IpLimit);
      }
      if (HasOwnerVipLevel) {
        output.WriteRawTag(216, 1);
        output.WriteUInt32(OwnerVipLevel);
      }
      if (HasCreateTimestamp) {
        output.WriteRawTag(224, 1);
        output.WriteInt64(CreateTimestamp);
      }
      if (HasGameMode) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(GameMode);
      }
      if (HasIsIn) {
        output.WriteRawTag(240, 1);
        output.WriteBool(IsIn);
      }
      if (HasIsInsurance) {
        output.WriteRawTag(248, 1);
        output.WriteBool(IsInsurance);
      }
      if (HasGamesetStatus) {
        output.WriteRawTag(128, 2);
        output.WriteEnum((int) GamesetStatus);
      }
      if (HasVpipLimit) {
        output.WriteRawTag(136, 2);
        output.WriteInt32(VpipLimit);
      }
      if (HasEarlyBirdNum) {
        output.WriteRawTag(144, 2);
        output.WriteInt32(EarlyBirdNum);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(152, 2);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasIsEvchop) {
        output.WriteRawTag(160, 2);
        output.WriteBool(IsEvchop);
      }
      if (HasIsSnowballHunter) {
        output.WriteRawTag(168, 2);
        output.WriteBool(IsSnowballHunter);
      }
      if (HasIsSuspended) {
        output.WriteRawTag(176, 2);
        output.WriteBool(IsSuspended);
      }
      if (HasSuspendTimestamp) {
        output.WriteRawTag(184, 2);
        output.WriteInt64(SuspendTimestamp);
      }
      if (HasSuspendTime) {
        output.WriteRawTag(192, 2);
        output.WriteInt64(SuspendTime);
      }
      if (HasVpipLimitPerSet) {
        output.WriteRawTag(200, 2);
        output.WriteInt32(VpipLimitPerSet);
      }
      if (HasMinHandsPerSet) {
        output.WriteRawTag(208, 2);
        output.WriteInt32(MinHandsPerSet);
      }
      if (HasPasswdLimit) {
        output.WriteRawTag(216, 2);
        output.WriteBool(PasswdLimit);
      }
      if (HasPasswd) {
        output.WriteRawTag(226, 2);
        output.WriteString(Passwd);
      }
      if (HasMaxRewardRatio) {
        output.WriteRawTag(232, 2);
        output.WriteInt32(MaxRewardRatio);
      }
      if (HasSpinupRewardRatio) {
        output.WriteRawTag(240, 2);
        output.WriteInt32(SpinupRewardRatio);
      }
      if (HasIsGroupMtt) {
        output.WriteRawTag(248, 2);
        output.WriteBool(IsGroupMtt);
      }
      if (HasGroupKey) {
        output.WriteRawTag(130, 3);
        output.WriteString(GroupKey);
      }
      if (HasGroupOverLevel) {
        output.WriteRawTag(136, 3);
        output.WriteInt32(GroupOverLevel);
      }
      if (HasGroupStage) {
        output.WriteRawTag(144, 3);
        output.WriteInt32(GroupStage);
      }
      if (HasIsFreezeOut) {
        output.WriteRawTag(152, 3);
        output.WriteBool(IsFreezeOut);
      }
      if (HasGroupFlag) {
        output.WriteRawTag(162, 3);
        output.WriteString(GroupFlag);
      }
      if (HasSuperLeagueType) {
        output.WriteRawTag(168, 3);
        output.WriteInt32(SuperLeagueType);
      }
      if (HasRecoverType) {
        output.WriteRawTag(176, 3);
        output.WriteInt32(RecoverType);
      }
      if (HasRecoverStartTime) {
        output.WriteRawTag(184, 3);
        output.WriteInt64(RecoverStartTime);
      }
      if (HasEarlyBirdDiscount) {
        output.WriteRawTag(192, 3);
        output.WriteInt32(EarlyBirdDiscount);
      }
      if (HasIsTop) {
        output.WriteRawTag(200, 3);
        output.WriteBool(IsTop);
      }
      if (HasIsCaptcha) {
        output.WriteRawTag(208, 3);
        output.WriteBool(IsCaptcha);
      }
      if (HasIsBanPc) {
        output.WriteRawTag(216, 3);
        output.WriteBool(IsBanPc);
      }
      if (HasIsCheckMail) {
        output.WriteRawTag(224, 3);
        output.WriteBool(IsCheckMail);
      }
      if (HasSatelliteRewardPrice) {
        output.WriteRawTag(232, 3);
        output.WriteInt64(SatelliteRewardPrice);
      }
      if (HasPpstid) {
        output.WriteRawTag(240, 3);
        output.WriteInt32(Ppstid);
      }
      if (HasSevenDeuceRewardMultiplier) {
        output.WriteRawTag(248, 3);
        output.WriteInt32(SevenDeuceRewardMultiplier);
      }
      if (HasIsVipTable) {
        output.WriteRawTag(128, 4);
        output.WriteBool(IsVipTable);
      }
      if (HasEnterRoomChipsPrerequisite) {
        output.WriteRawTag(136, 4);
        output.WriteInt64(EnterRoomChipsPrerequisite);
      }
      if (HasPpsrid) {
        output.WriteRawTag(144, 4);
        output.WriteInt32(Ppsrid);
      }
      if (HasIsJackpot) {
        output.WriteRawTag(152, 4);
        output.WriteBool(IsJackpot);
      }
      if (mttRewardPoolInfo_ != null) {
        output.WriteRawTag(162, 4);
        output.WriteMessage(MttRewardPoolInfo);
      }
      if (HasIsCertification) {
        output.WriteRawTag(168, 4);
        output.WriteBool(IsCertification);
      }
      if (HasBombpotType) {
        output.WriteRawTag(176, 4);
        output.WriteInt32(BombpotType);
      }
      if (HasMinBet) {
        output.WriteRawTag(184, 4);
        output.WriteInt32(MinBet);
      }
      if (HasMiddleBet) {
        output.WriteRawTag(192, 4);
        output.WriteInt32(MiddleBet);
      }
      if (HasHighBet) {
        output.WriteRawTag(200, 4);
        output.WriteInt32(HighBet);
      }
      if (HasIsPpglTryouts) {
        output.WriteRawTag(208, 4);
        output.WriteBool(IsPpglTryouts);
      }
      if (HasBombpotAdditionalBoard) {
        output.WriteRawTag(216, 4);
        output.WriteInt32(BombpotAdditionalBoard);
      }
      if (HasAdditionalBoard) {
        output.WriteRawTag(224, 4);
        output.WriteInt32(AdditionalBoard);
      }
      if (HasHitpotRate) {
        output.WriteRawTag(232, 4);
        output.WriteInt32(HitpotRate);
      }
      if (HasBonusCard) {
        output.WriteRawTag(240, 4);
        output.WriteInt32(BonusCard);
      }
      if (HasFightLimit) {
        output.WriteRawTag(248, 4);
        output.WriteInt32(FightLimit);
      }
      banClub_.WriteTo(output, _repeated_banClub_codec);
      banCountry_.WriteTo(output, _repeated_banCountry_codec);
      if (HasCreateClubid) {
        output.WriteRawTag(144, 5);
        output.WriteInt32(CreateClubid);
      }
      if (HasIsSequentialViewCard) {
        output.WriteRawTag(152, 5);
        output.WriteBool(IsSequentialViewCard);
      }
      if (HasIsBombpotWithoutEvchop) {
        output.WriteRawTag(160, 5);
        output.WriteBool(IsBombpotWithoutEvchop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(10);
        output.WriteString(Roomid);
      }
      if (HasRoomName) {
        output.WriteRawTag(18);
        output.WriteString(RoomName);
      }
      if (HasOwnerName) {
        output.WriteRawTag(26);
        output.WriteString(OwnerName);
      }
      if (HasOwnerIcon) {
        output.WriteRawTag(34);
        output.WriteString(OwnerIcon);
      }
      if (HasBlind) {
        output.WriteRawTag(40);
        output.WriteInt64(Blind);
      }
      if (HasAnte) {
        output.WriteRawTag(48);
        output.WriteInt64(Ante);
      }
      if (HasGameTime) {
        output.WriteRawTag(56);
        output.WriteInt32(GameTime);
      }
      if (HasLeftTime) {
        output.WriteRawTag(64);
        output.WriteInt32(LeftTime);
      }
      if (HasSeatNum) {
        output.WriteRawTag(72);
        output.WriteInt32(SeatNum);
      }
      if (HasPlayers) {
        output.WriteRawTag(80);
        output.WriteInt32(Players);
      }
      if (HasIsStarted) {
        output.WriteRawTag(88);
        output.WriteBool(IsStarted);
      }
      if (HasAuthNum) {
        output.WriteRawTag(96);
        output.WriteInt32(AuthNum);
      }
      if (HasRoomType) {
        output.WriteRawTag(104);
        output.WriteEnum((int) RoomType);
      }
      if (HasUpblindTime) {
        output.WriteRawTag(112);
        output.WriteInt32(UpblindTime);
      }
      if (HasBuyin) {
        output.WriteRawTag(120);
        output.WriteInt64(Buyin);
      }
      if (HasTotalPlayerNum) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(TotalPlayerNum);
      }
      if (HasCurrentPlayerNum) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(CurrentPlayerNum);
      }
      if (HasMttStatus) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(MttStatus);
      }
      if (HasEndRebuyTimestamp) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(EndRebuyTimestamp);
      }
      if (HasStartTimestamp) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(StartTimestamp);
      }
      if (HasNow) {
        output.WriteRawTag(168, 1);
        output.WriteInt64(Now);
      }
      if (HasMttStartTime) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(MttStartTime);
      }
      waitUsers_.WriteTo(ref output, _repeated_waitUsers_codec);
      if (HasIsHunter) {
        output.WriteRawTag(192, 1);
        output.WriteBool(IsHunter);
      }
      if (HasGpsLimit) {
        output.WriteRawTag(200, 1);
        output.WriteBool(GpsLimit);
      }
      if (HasIpLimit) {
        output.WriteRawTag(208, 1);
        output.WriteBool(IpLimit);
      }
      if (HasOwnerVipLevel) {
        output.WriteRawTag(216, 1);
        output.WriteUInt32(OwnerVipLevel);
      }
      if (HasCreateTimestamp) {
        output.WriteRawTag(224, 1);
        output.WriteInt64(CreateTimestamp);
      }
      if (HasGameMode) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(GameMode);
      }
      if (HasIsIn) {
        output.WriteRawTag(240, 1);
        output.WriteBool(IsIn);
      }
      if (HasIsInsurance) {
        output.WriteRawTag(248, 1);
        output.WriteBool(IsInsurance);
      }
      if (HasGamesetStatus) {
        output.WriteRawTag(128, 2);
        output.WriteEnum((int) GamesetStatus);
      }
      if (HasVpipLimit) {
        output.WriteRawTag(136, 2);
        output.WriteInt32(VpipLimit);
      }
      if (HasEarlyBirdNum) {
        output.WriteRawTag(144, 2);
        output.WriteInt32(EarlyBirdNum);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(152, 2);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasIsEvchop) {
        output.WriteRawTag(160, 2);
        output.WriteBool(IsEvchop);
      }
      if (HasIsSnowballHunter) {
        output.WriteRawTag(168, 2);
        output.WriteBool(IsSnowballHunter);
      }
      if (HasIsSuspended) {
        output.WriteRawTag(176, 2);
        output.WriteBool(IsSuspended);
      }
      if (HasSuspendTimestamp) {
        output.WriteRawTag(184, 2);
        output.WriteInt64(SuspendTimestamp);
      }
      if (HasSuspendTime) {
        output.WriteRawTag(192, 2);
        output.WriteInt64(SuspendTime);
      }
      if (HasVpipLimitPerSet) {
        output.WriteRawTag(200, 2);
        output.WriteInt32(VpipLimitPerSet);
      }
      if (HasMinHandsPerSet) {
        output.WriteRawTag(208, 2);
        output.WriteInt32(MinHandsPerSet);
      }
      if (HasPasswdLimit) {
        output.WriteRawTag(216, 2);
        output.WriteBool(PasswdLimit);
      }
      if (HasPasswd) {
        output.WriteRawTag(226, 2);
        output.WriteString(Passwd);
      }
      if (HasMaxRewardRatio) {
        output.WriteRawTag(232, 2);
        output.WriteInt32(MaxRewardRatio);
      }
      if (HasSpinupRewardRatio) {
        output.WriteRawTag(240, 2);
        output.WriteInt32(SpinupRewardRatio);
      }
      if (HasIsGroupMtt) {
        output.WriteRawTag(248, 2);
        output.WriteBool(IsGroupMtt);
      }
      if (HasGroupKey) {
        output.WriteRawTag(130, 3);
        output.WriteString(GroupKey);
      }
      if (HasGroupOverLevel) {
        output.WriteRawTag(136, 3);
        output.WriteInt32(GroupOverLevel);
      }
      if (HasGroupStage) {
        output.WriteRawTag(144, 3);
        output.WriteInt32(GroupStage);
      }
      if (HasIsFreezeOut) {
        output.WriteRawTag(152, 3);
        output.WriteBool(IsFreezeOut);
      }
      if (HasGroupFlag) {
        output.WriteRawTag(162, 3);
        output.WriteString(GroupFlag);
      }
      if (HasSuperLeagueType) {
        output.WriteRawTag(168, 3);
        output.WriteInt32(SuperLeagueType);
      }
      if (HasRecoverType) {
        output.WriteRawTag(176, 3);
        output.WriteInt32(RecoverType);
      }
      if (HasRecoverStartTime) {
        output.WriteRawTag(184, 3);
        output.WriteInt64(RecoverStartTime);
      }
      if (HasEarlyBirdDiscount) {
        output.WriteRawTag(192, 3);
        output.WriteInt32(EarlyBirdDiscount);
      }
      if (HasIsTop) {
        output.WriteRawTag(200, 3);
        output.WriteBool(IsTop);
      }
      if (HasIsCaptcha) {
        output.WriteRawTag(208, 3);
        output.WriteBool(IsCaptcha);
      }
      if (HasIsBanPc) {
        output.WriteRawTag(216, 3);
        output.WriteBool(IsBanPc);
      }
      if (HasIsCheckMail) {
        output.WriteRawTag(224, 3);
        output.WriteBool(IsCheckMail);
      }
      if (HasSatelliteRewardPrice) {
        output.WriteRawTag(232, 3);
        output.WriteInt64(SatelliteRewardPrice);
      }
      if (HasPpstid) {
        output.WriteRawTag(240, 3);
        output.WriteInt32(Ppstid);
      }
      if (HasSevenDeuceRewardMultiplier) {
        output.WriteRawTag(248, 3);
        output.WriteInt32(SevenDeuceRewardMultiplier);
      }
      if (HasIsVipTable) {
        output.WriteRawTag(128, 4);
        output.WriteBool(IsVipTable);
      }
      if (HasEnterRoomChipsPrerequisite) {
        output.WriteRawTag(136, 4);
        output.WriteInt64(EnterRoomChipsPrerequisite);
      }
      if (HasPpsrid) {
        output.WriteRawTag(144, 4);
        output.WriteInt32(Ppsrid);
      }
      if (HasIsJackpot) {
        output.WriteRawTag(152, 4);
        output.WriteBool(IsJackpot);
      }
      if (mttRewardPoolInfo_ != null) {
        output.WriteRawTag(162, 4);
        output.WriteMessage(MttRewardPoolInfo);
      }
      if (HasIsCertification) {
        output.WriteRawTag(168, 4);
        output.WriteBool(IsCertification);
      }
      if (HasBombpotType) {
        output.WriteRawTag(176, 4);
        output.WriteInt32(BombpotType);
      }
      if (HasMinBet) {
        output.WriteRawTag(184, 4);
        output.WriteInt32(MinBet);
      }
      if (HasMiddleBet) {
        output.WriteRawTag(192, 4);
        output.WriteInt32(MiddleBet);
      }
      if (HasHighBet) {
        output.WriteRawTag(200, 4);
        output.WriteInt32(HighBet);
      }
      if (HasIsPpglTryouts) {
        output.WriteRawTag(208, 4);
        output.WriteBool(IsPpglTryouts);
      }
      if (HasBombpotAdditionalBoard) {
        output.WriteRawTag(216, 4);
        output.WriteInt32(BombpotAdditionalBoard);
      }
      if (HasAdditionalBoard) {
        output.WriteRawTag(224, 4);
        output.WriteInt32(AdditionalBoard);
      }
      if (HasHitpotRate) {
        output.WriteRawTag(232, 4);
        output.WriteInt32(HitpotRate);
      }
      if (HasBonusCard) {
        output.WriteRawTag(240, 4);
        output.WriteInt32(BonusCard);
      }
      if (HasFightLimit) {
        output.WriteRawTag(248, 4);
        output.WriteInt32(FightLimit);
      }
      banClub_.WriteTo(ref output, _repeated_banClub_codec);
      banCountry_.WriteTo(ref output, _repeated_banCountry_codec);
      if (HasCreateClubid) {
        output.WriteRawTag(144, 5);
        output.WriteInt32(CreateClubid);
      }
      if (HasIsSequentialViewCard) {
        output.WriteRawTag(152, 5);
        output.WriteBool(IsSequentialViewCard);
      }
      if (HasIsBombpotWithoutEvchop) {
        output.WriteRawTag(160, 5);
        output.WriteBool(IsBombpotWithoutEvchop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Roomid);
      }
      if (HasRoomName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (HasOwnerName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerName);
      }
      if (HasOwnerIcon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerIcon);
      }
      if (HasBlind) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Blind);
      }
      if (HasAnte) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Ante);
      }
      if (HasGameTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameTime);
      }
      if (HasLeftTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeftTime);
      }
      if (HasSeatNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SeatNum);
      }
      if (HasPlayers) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Players);
      }
      if (HasIsStarted) {
        size += 1 + 1;
      }
      if (HasAuthNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AuthNum);
      }
      if (HasRoomType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomType);
      }
      if (HasUpblindTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UpblindTime);
      }
      if (HasBuyin) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Buyin);
      }
      if (HasTotalPlayerNum) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TotalPlayerNum);
      }
      if (HasCurrentPlayerNum) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CurrentPlayerNum);
      }
      if (HasMttStatus) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MttStatus);
      }
      if (HasEndRebuyTimestamp) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(EndRebuyTimestamp);
      }
      if (HasStartTimestamp) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(StartTimestamp);
      }
      if (HasNow) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Now);
      }
      if (HasMttStartTime) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(MttStartTime);
      }
      size += waitUsers_.CalculateSize(_repeated_waitUsers_codec);
      if (HasIsHunter) {
        size += 2 + 1;
      }
      if (HasGpsLimit) {
        size += 2 + 1;
      }
      if (HasIpLimit) {
        size += 2 + 1;
      }
      if (HasOwnerVipLevel) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(OwnerVipLevel);
      }
      if (HasCreateTimestamp) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(CreateTimestamp);
      }
      if (HasGameMode) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(GameMode);
      }
      if (HasIsIn) {
        size += 2 + 1;
      }
      if (HasIsInsurance) {
        size += 2 + 1;
      }
      if (HasGamesetStatus) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) GamesetStatus);
      }
      if (HasVpipLimit) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(VpipLimit);
      }
      if (HasEarlyBirdNum) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EarlyBirdNum);
      }
      if (HasSuperLeagueid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueid);
      }
      if (HasIsEvchop) {
        size += 2 + 1;
      }
      if (HasIsSnowballHunter) {
        size += 2 + 1;
      }
      if (HasIsSuspended) {
        size += 2 + 1;
      }
      if (HasSuspendTimestamp) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(SuspendTimestamp);
      }
      if (HasSuspendTime) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(SuspendTime);
      }
      if (HasVpipLimitPerSet) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(VpipLimitPerSet);
      }
      if (HasMinHandsPerSet) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MinHandsPerSet);
      }
      if (HasPasswdLimit) {
        size += 2 + 1;
      }
      if (HasPasswd) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Passwd);
      }
      if (HasMaxRewardRatio) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaxRewardRatio);
      }
      if (HasSpinupRewardRatio) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SpinupRewardRatio);
      }
      if (HasIsGroupMtt) {
        size += 2 + 1;
      }
      if (HasGroupKey) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(GroupKey);
      }
      if (HasGroupOverLevel) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(GroupOverLevel);
      }
      if (HasGroupStage) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(GroupStage);
      }
      if (HasIsFreezeOut) {
        size += 2 + 1;
      }
      if (HasGroupFlag) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(GroupFlag);
      }
      if (HasSuperLeagueType) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueType);
      }
      if (HasRecoverType) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RecoverType);
      }
      if (HasRecoverStartTime) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(RecoverStartTime);
      }
      if (HasEarlyBirdDiscount) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EarlyBirdDiscount);
      }
      if (HasIsTop) {
        size += 2 + 1;
      }
      if (HasIsCaptcha) {
        size += 2 + 1;
      }
      if (HasIsBanPc) {
        size += 2 + 1;
      }
      if (HasIsCheckMail) {
        size += 2 + 1;
      }
      if (HasSatelliteRewardPrice) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(SatelliteRewardPrice);
      }
      if (HasPpstid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Ppstid);
      }
      if (HasSevenDeuceRewardMultiplier) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SevenDeuceRewardMultiplier);
      }
      if (HasIsVipTable) {
        size += 2 + 1;
      }
      if (HasEnterRoomChipsPrerequisite) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(EnterRoomChipsPrerequisite);
      }
      if (HasPpsrid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Ppsrid);
      }
      if (HasIsJackpot) {
        size += 2 + 1;
      }
      if (mttRewardPoolInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MttRewardPoolInfo);
      }
      if (HasIsCertification) {
        size += 2 + 1;
      }
      if (HasBombpotType) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BombpotType);
      }
      if (HasMinBet) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MinBet);
      }
      if (HasMiddleBet) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MiddleBet);
      }
      if (HasHighBet) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HighBet);
      }
      if (HasIsPpglTryouts) {
        size += 2 + 1;
      }
      if (HasBombpotAdditionalBoard) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BombpotAdditionalBoard);
      }
      if (HasAdditionalBoard) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AdditionalBoard);
      }
      if (HasHitpotRate) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HitpotRate);
      }
      if (HasBonusCard) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BonusCard);
      }
      if (HasFightLimit) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FightLimit);
      }
      size += banClub_.CalculateSize(_repeated_banClub_codec);
      size += banCountry_.CalculateSize(_repeated_banCountry_codec);
      if (HasCreateClubid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CreateClubid);
      }
      if (HasIsSequentialViewCard) {
        size += 2 + 1;
      }
      if (HasIsBombpotWithoutEvchop) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubRoomInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasRoomName) {
        RoomName = other.RoomName;
      }
      if (other.HasOwnerName) {
        OwnerName = other.OwnerName;
      }
      if (other.HasOwnerIcon) {
        OwnerIcon = other.OwnerIcon;
      }
      if (other.HasBlind) {
        Blind = other.Blind;
      }
      if (other.HasAnte) {
        Ante = other.Ante;
      }
      if (other.HasGameTime) {
        GameTime = other.GameTime;
      }
      if (other.HasLeftTime) {
        LeftTime = other.LeftTime;
      }
      if (other.HasSeatNum) {
        SeatNum = other.SeatNum;
      }
      if (other.HasPlayers) {
        Players = other.Players;
      }
      if (other.HasIsStarted) {
        IsStarted = other.IsStarted;
      }
      if (other.HasAuthNum) {
        AuthNum = other.AuthNum;
      }
      if (other.HasRoomType) {
        RoomType = other.RoomType;
      }
      if (other.HasUpblindTime) {
        UpblindTime = other.UpblindTime;
      }
      if (other.HasBuyin) {
        Buyin = other.Buyin;
      }
      if (other.HasTotalPlayerNum) {
        TotalPlayerNum = other.TotalPlayerNum;
      }
      if (other.HasCurrentPlayerNum) {
        CurrentPlayerNum = other.CurrentPlayerNum;
      }
      if (other.HasMttStatus) {
        MttStatus = other.MttStatus;
      }
      if (other.HasEndRebuyTimestamp) {
        EndRebuyTimestamp = other.EndRebuyTimestamp;
      }
      if (other.HasStartTimestamp) {
        StartTimestamp = other.StartTimestamp;
      }
      if (other.HasNow) {
        Now = other.Now;
      }
      if (other.HasMttStartTime) {
        MttStartTime = other.MttStartTime;
      }
      waitUsers_.Add(other.waitUsers_);
      if (other.HasIsHunter) {
        IsHunter = other.IsHunter;
      }
      if (other.HasGpsLimit) {
        GpsLimit = other.GpsLimit;
      }
      if (other.HasIpLimit) {
        IpLimit = other.IpLimit;
      }
      if (other.HasOwnerVipLevel) {
        OwnerVipLevel = other.OwnerVipLevel;
      }
      if (other.HasCreateTimestamp) {
        CreateTimestamp = other.CreateTimestamp;
      }
      if (other.HasGameMode) {
        GameMode = other.GameMode;
      }
      if (other.HasIsIn) {
        IsIn = other.IsIn;
      }
      if (other.HasIsInsurance) {
        IsInsurance = other.IsInsurance;
      }
      if (other.HasGamesetStatus) {
        GamesetStatus = other.GamesetStatus;
      }
      if (other.HasVpipLimit) {
        VpipLimit = other.VpipLimit;
      }
      if (other.HasEarlyBirdNum) {
        EarlyBirdNum = other.EarlyBirdNum;
      }
      if (other.HasSuperLeagueid) {
        SuperLeagueid = other.SuperLeagueid;
      }
      if (other.HasIsEvchop) {
        IsEvchop = other.IsEvchop;
      }
      if (other.HasIsSnowballHunter) {
        IsSnowballHunter = other.IsSnowballHunter;
      }
      if (other.HasIsSuspended) {
        IsSuspended = other.IsSuspended;
      }
      if (other.HasSuspendTimestamp) {
        SuspendTimestamp = other.SuspendTimestamp;
      }
      if (other.HasSuspendTime) {
        SuspendTime = other.SuspendTime;
      }
      if (other.HasVpipLimitPerSet) {
        VpipLimitPerSet = other.VpipLimitPerSet;
      }
      if (other.HasMinHandsPerSet) {
        MinHandsPerSet = other.MinHandsPerSet;
      }
      if (other.HasPasswdLimit) {
        PasswdLimit = other.PasswdLimit;
      }
      if (other.HasPasswd) {
        Passwd = other.Passwd;
      }
      if (other.HasMaxRewardRatio) {
        MaxRewardRatio = other.MaxRewardRatio;
      }
      if (other.HasSpinupRewardRatio) {
        SpinupRewardRatio = other.SpinupRewardRatio;
      }
      if (other.HasIsGroupMtt) {
        IsGroupMtt = other.IsGroupMtt;
      }
      if (other.HasGroupKey) {
        GroupKey = other.GroupKey;
      }
      if (other.HasGroupOverLevel) {
        GroupOverLevel = other.GroupOverLevel;
      }
      if (other.HasGroupStage) {
        GroupStage = other.GroupStage;
      }
      if (other.HasIsFreezeOut) {
        IsFreezeOut = other.IsFreezeOut;
      }
      if (other.HasGroupFlag) {
        GroupFlag = other.GroupFlag;
      }
      if (other.HasSuperLeagueType) {
        SuperLeagueType = other.SuperLeagueType;
      }
      if (other.HasRecoverType) {
        RecoverType = other.RecoverType;
      }
      if (other.HasRecoverStartTime) {
        RecoverStartTime = other.RecoverStartTime;
      }
      if (other.HasEarlyBirdDiscount) {
        EarlyBirdDiscount = other.EarlyBirdDiscount;
      }
      if (other.HasIsTop) {
        IsTop = other.IsTop;
      }
      if (other.HasIsCaptcha) {
        IsCaptcha = other.IsCaptcha;
      }
      if (other.HasIsBanPc) {
        IsBanPc = other.IsBanPc;
      }
      if (other.HasIsCheckMail) {
        IsCheckMail = other.IsCheckMail;
      }
      if (other.HasSatelliteRewardPrice) {
        SatelliteRewardPrice = other.SatelliteRewardPrice;
      }
      if (other.HasPpstid) {
        Ppstid = other.Ppstid;
      }
      if (other.HasSevenDeuceRewardMultiplier) {
        SevenDeuceRewardMultiplier = other.SevenDeuceRewardMultiplier;
      }
      if (other.HasIsVipTable) {
        IsVipTable = other.IsVipTable;
      }
      if (other.HasEnterRoomChipsPrerequisite) {
        EnterRoomChipsPrerequisite = other.EnterRoomChipsPrerequisite;
      }
      if (other.HasPpsrid) {
        Ppsrid = other.Ppsrid;
      }
      if (other.HasIsJackpot) {
        IsJackpot = other.IsJackpot;
      }
      if (other.mttRewardPoolInfo_ != null) {
        if (mttRewardPoolInfo_ == null) {
          MttRewardPoolInfo = new global::Texas.Protocol.MttRewardPoolInfo();
        }
        MttRewardPoolInfo.MergeFrom(other.MttRewardPoolInfo);
      }
      if (other.HasIsCertification) {
        IsCertification = other.IsCertification;
      }
      if (other.HasBombpotType) {
        BombpotType = other.BombpotType;
      }
      if (other.HasMinBet) {
        MinBet = other.MinBet;
      }
      if (other.HasMiddleBet) {
        MiddleBet = other.MiddleBet;
      }
      if (other.HasHighBet) {
        HighBet = other.HighBet;
      }
      if (other.HasIsPpglTryouts) {
        IsPpglTryouts = other.IsPpglTryouts;
      }
      if (other.HasBombpotAdditionalBoard) {
        BombpotAdditionalBoard = other.BombpotAdditionalBoard;
      }
      if (other.HasAdditionalBoard) {
        AdditionalBoard = other.AdditionalBoard;
      }
      if (other.HasHitpotRate) {
        HitpotRate = other.HitpotRate;
      }
      if (other.HasBonusCard) {
        BonusCard = other.BonusCard;
      }
      if (other.HasFightLimit) {
        FightLimit = other.FightLimit;
      }
      banClub_.Add(other.banClub_);
      banCountry_.Add(other.banCountry_);
      if (other.HasCreateClubid) {
        CreateClubid = other.CreateClubid;
      }
      if (other.HasIsSequentialViewCard) {
        IsSequentialViewCard = other.IsSequentialViewCard;
      }
      if (other.HasIsBombpotWithoutEvchop) {
        IsBombpotWithoutEvchop = other.IsBombpotWithoutEvchop;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Roomid = input.ReadString();
            break;
          }
          case 18: {
            RoomName = input.ReadString();
            break;
          }
          case 26: {
            OwnerName = input.ReadString();
            break;
          }
          case 34: {
            OwnerIcon = input.ReadString();
            break;
          }
          case 40: {
            Blind = input.ReadInt64();
            break;
          }
          case 48: {
            Ante = input.ReadInt64();
            break;
          }
          case 56: {
            GameTime = input.ReadInt32();
            break;
          }
          case 64: {
            LeftTime = input.ReadInt32();
            break;
          }
          case 72: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 80: {
            Players = input.ReadInt32();
            break;
          }
          case 88: {
            IsStarted = input.ReadBool();
            break;
          }
          case 96: {
            AuthNum = input.ReadInt32();
            break;
          }
          case 104: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 112: {
            UpblindTime = input.ReadInt32();
            break;
          }
          case 120: {
            Buyin = input.ReadInt64();
            break;
          }
          case 128: {
            TotalPlayerNum = input.ReadInt32();
            break;
          }
          case 136: {
            CurrentPlayerNum = input.ReadInt32();
            break;
          }
          case 144: {
            MttStatus = input.ReadInt32();
            break;
          }
          case 152: {
            EndRebuyTimestamp = input.ReadInt64();
            break;
          }
          case 160: {
            StartTimestamp = input.ReadInt64();
            break;
          }
          case 168: {
            Now = input.ReadInt64();
            break;
          }
          case 176: {
            MttStartTime = input.ReadInt64();
            break;
          }
          case 186: {
            waitUsers_.AddEntriesFrom(input, _repeated_waitUsers_codec);
            break;
          }
          case 192: {
            IsHunter = input.ReadBool();
            break;
          }
          case 200: {
            GpsLimit = input.ReadBool();
            break;
          }
          case 208: {
            IpLimit = input.ReadBool();
            break;
          }
          case 216: {
            OwnerVipLevel = input.ReadUInt32();
            break;
          }
          case 224: {
            CreateTimestamp = input.ReadInt64();
            break;
          }
          case 232: {
            GameMode = input.ReadInt32();
            break;
          }
          case 240: {
            IsIn = input.ReadBool();
            break;
          }
          case 248: {
            IsInsurance = input.ReadBool();
            break;
          }
          case 256: {
            GamesetStatus = (global::Texas.Protocol.GameSetPlayStatus) input.ReadEnum();
            break;
          }
          case 264: {
            VpipLimit = input.ReadInt32();
            break;
          }
          case 272: {
            EarlyBirdNum = input.ReadInt32();
            break;
          }
          case 280: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 288: {
            IsEvchop = input.ReadBool();
            break;
          }
          case 296: {
            IsSnowballHunter = input.ReadBool();
            break;
          }
          case 304: {
            IsSuspended = input.ReadBool();
            break;
          }
          case 312: {
            SuspendTimestamp = input.ReadInt64();
            break;
          }
          case 320: {
            SuspendTime = input.ReadInt64();
            break;
          }
          case 328: {
            VpipLimitPerSet = input.ReadInt32();
            break;
          }
          case 336: {
            MinHandsPerSet = input.ReadInt32();
            break;
          }
          case 344: {
            PasswdLimit = input.ReadBool();
            break;
          }
          case 354: {
            Passwd = input.ReadString();
            break;
          }
          case 360: {
            MaxRewardRatio = input.ReadInt32();
            break;
          }
          case 368: {
            SpinupRewardRatio = input.ReadInt32();
            break;
          }
          case 376: {
            IsGroupMtt = input.ReadBool();
            break;
          }
          case 386: {
            GroupKey = input.ReadString();
            break;
          }
          case 392: {
            GroupOverLevel = input.ReadInt32();
            break;
          }
          case 400: {
            GroupStage = input.ReadInt32();
            break;
          }
          case 408: {
            IsFreezeOut = input.ReadBool();
            break;
          }
          case 418: {
            GroupFlag = input.ReadString();
            break;
          }
          case 424: {
            SuperLeagueType = input.ReadInt32();
            break;
          }
          case 432: {
            RecoverType = input.ReadInt32();
            break;
          }
          case 440: {
            RecoverStartTime = input.ReadInt64();
            break;
          }
          case 448: {
            EarlyBirdDiscount = input.ReadInt32();
            break;
          }
          case 456: {
            IsTop = input.ReadBool();
            break;
          }
          case 464: {
            IsCaptcha = input.ReadBool();
            break;
          }
          case 472: {
            IsBanPc = input.ReadBool();
            break;
          }
          case 480: {
            IsCheckMail = input.ReadBool();
            break;
          }
          case 488: {
            SatelliteRewardPrice = input.ReadInt64();
            break;
          }
          case 496: {
            Ppstid = input.ReadInt32();
            break;
          }
          case 504: {
            SevenDeuceRewardMultiplier = input.ReadInt32();
            break;
          }
          case 512: {
            IsVipTable = input.ReadBool();
            break;
          }
          case 520: {
            EnterRoomChipsPrerequisite = input.ReadInt64();
            break;
          }
          case 528: {
            Ppsrid = input.ReadInt32();
            break;
          }
          case 536: {
            IsJackpot = input.ReadBool();
            break;
          }
          case 546: {
            if (mttRewardPoolInfo_ == null) {
              MttRewardPoolInfo = new global::Texas.Protocol.MttRewardPoolInfo();
            }
            input.ReadMessage(MttRewardPoolInfo);
            break;
          }
          case 552: {
            IsCertification = input.ReadBool();
            break;
          }
          case 560: {
            BombpotType = input.ReadInt32();
            break;
          }
          case 568: {
            MinBet = input.ReadInt32();
            break;
          }
          case 576: {
            MiddleBet = input.ReadInt32();
            break;
          }
          case 584: {
            HighBet = input.ReadInt32();
            break;
          }
          case 592: {
            IsPpglTryouts = input.ReadBool();
            break;
          }
          case 600: {
            BombpotAdditionalBoard = input.ReadInt32();
            break;
          }
          case 608: {
            AdditionalBoard = input.ReadInt32();
            break;
          }
          case 616: {
            HitpotRate = input.ReadInt32();
            break;
          }
          case 624: {
            BonusCard = input.ReadInt32();
            break;
          }
          case 632: {
            FightLimit = input.ReadInt32();
            break;
          }
          case 642:
          case 640: {
            banClub_.AddEntriesFrom(input, _repeated_banClub_codec);
            break;
          }
          case 650: {
            banCountry_.AddEntriesFrom(input, _repeated_banCountry_codec);
            break;
          }
          case 656: {
            CreateClubid = input.ReadInt32();
            break;
          }
          case 664: {
            IsSequentialViewCard = input.ReadBool();
            break;
          }
          case 672: {
            IsBombpotWithoutEvchop = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Roomid = input.ReadString();
            break;
          }
          case 18: {
            RoomName = input.ReadString();
            break;
          }
          case 26: {
            OwnerName = input.ReadString();
            break;
          }
          case 34: {
            OwnerIcon = input.ReadString();
            break;
          }
          case 40: {
            Blind = input.ReadInt64();
            break;
          }
          case 48: {
            Ante = input.ReadInt64();
            break;
          }
          case 56: {
            GameTime = input.ReadInt32();
            break;
          }
          case 64: {
            LeftTime = input.ReadInt32();
            break;
          }
          case 72: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 80: {
            Players = input.ReadInt32();
            break;
          }
          case 88: {
            IsStarted = input.ReadBool();
            break;
          }
          case 96: {
            AuthNum = input.ReadInt32();
            break;
          }
          case 104: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 112: {
            UpblindTime = input.ReadInt32();
            break;
          }
          case 120: {
            Buyin = input.ReadInt64();
            break;
          }
          case 128: {
            TotalPlayerNum = input.ReadInt32();
            break;
          }
          case 136: {
            CurrentPlayerNum = input.ReadInt32();
            break;
          }
          case 144: {
            MttStatus = input.ReadInt32();
            break;
          }
          case 152: {
            EndRebuyTimestamp = input.ReadInt64();
            break;
          }
          case 160: {
            StartTimestamp = input.ReadInt64();
            break;
          }
          case 168: {
            Now = input.ReadInt64();
            break;
          }
          case 176: {
            MttStartTime = input.ReadInt64();
            break;
          }
          case 186: {
            waitUsers_.AddEntriesFrom(ref input, _repeated_waitUsers_codec);
            break;
          }
          case 192: {
            IsHunter = input.ReadBool();
            break;
          }
          case 200: {
            GpsLimit = input.ReadBool();
            break;
          }
          case 208: {
            IpLimit = input.ReadBool();
            break;
          }
          case 216: {
            OwnerVipLevel = input.ReadUInt32();
            break;
          }
          case 224: {
            CreateTimestamp = input.ReadInt64();
            break;
          }
          case 232: {
            GameMode = input.ReadInt32();
            break;
          }
          case 240: {
            IsIn = input.ReadBool();
            break;
          }
          case 248: {
            IsInsurance = input.ReadBool();
            break;
          }
          case 256: {
            GamesetStatus = (global::Texas.Protocol.GameSetPlayStatus) input.ReadEnum();
            break;
          }
          case 264: {
            VpipLimit = input.ReadInt32();
            break;
          }
          case 272: {
            EarlyBirdNum = input.ReadInt32();
            break;
          }
          case 280: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 288: {
            IsEvchop = input.ReadBool();
            break;
          }
          case 296: {
            IsSnowballHunter = input.ReadBool();
            break;
          }
          case 304: {
            IsSuspended = input.ReadBool();
            break;
          }
          case 312: {
            SuspendTimestamp = input.ReadInt64();
            break;
          }
          case 320: {
            SuspendTime = input.ReadInt64();
            break;
          }
          case 328: {
            VpipLimitPerSet = input.ReadInt32();
            break;
          }
          case 336: {
            MinHandsPerSet = input.ReadInt32();
            break;
          }
          case 344: {
            PasswdLimit = input.ReadBool();
            break;
          }
          case 354: {
            Passwd = input.ReadString();
            break;
          }
          case 360: {
            MaxRewardRatio = input.ReadInt32();
            break;
          }
          case 368: {
            SpinupRewardRatio = input.ReadInt32();
            break;
          }
          case 376: {
            IsGroupMtt = input.ReadBool();
            break;
          }
          case 386: {
            GroupKey = input.ReadString();
            break;
          }
          case 392: {
            GroupOverLevel = input.ReadInt32();
            break;
          }
          case 400: {
            GroupStage = input.ReadInt32();
            break;
          }
          case 408: {
            IsFreezeOut = input.ReadBool();
            break;
          }
          case 418: {
            GroupFlag = input.ReadString();
            break;
          }
          case 424: {
            SuperLeagueType = input.ReadInt32();
            break;
          }
          case 432: {
            RecoverType = input.ReadInt32();
            break;
          }
          case 440: {
            RecoverStartTime = input.ReadInt64();
            break;
          }
          case 448: {
            EarlyBirdDiscount = input.ReadInt32();
            break;
          }
          case 456: {
            IsTop = input.ReadBool();
            break;
          }
          case 464: {
            IsCaptcha = input.ReadBool();
            break;
          }
          case 472: {
            IsBanPc = input.ReadBool();
            break;
          }
          case 480: {
            IsCheckMail = input.ReadBool();
            break;
          }
          case 488: {
            SatelliteRewardPrice = input.ReadInt64();
            break;
          }
          case 496: {
            Ppstid = input.ReadInt32();
            break;
          }
          case 504: {
            SevenDeuceRewardMultiplier = input.ReadInt32();
            break;
          }
          case 512: {
            IsVipTable = input.ReadBool();
            break;
          }
          case 520: {
            EnterRoomChipsPrerequisite = input.ReadInt64();
            break;
          }
          case 528: {
            Ppsrid = input.ReadInt32();
            break;
          }
          case 536: {
            IsJackpot = input.ReadBool();
            break;
          }
          case 546: {
            if (mttRewardPoolInfo_ == null) {
              MttRewardPoolInfo = new global::Texas.Protocol.MttRewardPoolInfo();
            }
            input.ReadMessage(MttRewardPoolInfo);
            break;
          }
          case 552: {
            IsCertification = input.ReadBool();
            break;
          }
          case 560: {
            BombpotType = input.ReadInt32();
            break;
          }
          case 568: {
            MinBet = input.ReadInt32();
            break;
          }
          case 576: {
            MiddleBet = input.ReadInt32();
            break;
          }
          case 584: {
            HighBet = input.ReadInt32();
            break;
          }
          case 592: {
            IsPpglTryouts = input.ReadBool();
            break;
          }
          case 600: {
            BombpotAdditionalBoard = input.ReadInt32();
            break;
          }
          case 608: {
            AdditionalBoard = input.ReadInt32();
            break;
          }
          case 616: {
            HitpotRate = input.ReadInt32();
            break;
          }
          case 624: {
            BonusCard = input.ReadInt32();
            break;
          }
          case 632: {
            FightLimit = input.ReadInt32();
            break;
          }
          case 642:
          case 640: {
            banClub_.AddEntriesFrom(ref input, _repeated_banClub_codec);
            break;
          }
          case 650: {
            banCountry_.AddEntriesFrom(ref input, _repeated_banCountry_codec);
            break;
          }
          case 656: {
            CreateClubid = input.ReadInt32();
            break;
          }
          case 664: {
            IsSequentialViewCard = input.ReadBool();
            break;
          }
          case 672: {
            IsBombpotWithoutEvchop = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubAgentInfo : pb::IMessage<ClubAgentInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubAgentInfo> _parser = new pb::MessageParser<ClubAgentInfo>(() => new ClubAgentInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubAgentInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAgentInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAgentInfo(ClubAgentInfo other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_.Clone();
      rakeback_ = other.rakeback_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAgentInfo Clone() {
      return new ClubAgentInfo(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_uid_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> uid_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///optional int64 ppcoin 	= 1;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Uid {
      get { return uid_; }
    }

    /// <summary>Field number for the "rakeback" field.</summary>
    public const int RakebackFieldNumber = 3;
    private readonly static int RakebackDefaultValue = 0;

    private int rakeback_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rakeback {
      get { if ((_hasBits0 & 1) != 0) { return rakeback_; } else { return RakebackDefaultValue; } }
      set {
        _hasBits0 |= 1;
        rakeback_ = value;
      }
    }
    /// <summary>Gets whether the "rakeback" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRakeback {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "rakeback" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRakeback() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubAgentInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubAgentInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!uid_.Equals(other.uid_)) return false;
      if (Rakeback != other.Rakeback) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= uid_.GetHashCode();
      if (HasRakeback) hash ^= Rakeback.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      uid_.WriteTo(output, _repeated_uid_codec);
      if (HasRakeback) {
        output.WriteRawTag(24);
        output.WriteInt32(Rakeback);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      uid_.WriteTo(ref output, _repeated_uid_codec);
      if (HasRakeback) {
        output.WriteRawTag(24);
        output.WriteInt32(Rakeback);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += uid_.CalculateSize(_repeated_uid_codec);
      if (HasRakeback) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rakeback);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubAgentInfo other) {
      if (other == null) {
        return;
      }
      uid_.Add(other.uid_);
      if (other.HasRakeback) {
        Rakeback = other.Rakeback;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            uid_.AddEntriesFrom(input, _repeated_uid_codec);
            break;
          }
          case 24: {
            Rakeback = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            uid_.AddEntriesFrom(ref input, _repeated_uid_codec);
            break;
          }
          case 24: {
            Rakeback = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubMemberInfo : pb::IMessage<ClubMemberInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubMemberInfo> _parser = new pb::MessageParser<ClubMemberInfo>(() => new ClubMemberInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubMemberInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubMemberInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubMemberInfo(ClubMemberInfo other) : this() {
      _hasBits0 = other._hasBits0;
      role_ = other.role_;
      uid_ = other.uid_;
      nickname_ = other.nickname_;
      icon_ = other.icon_;
      jointime_ = other.jointime_;
      fee_ = other.fee_;
      buyin_ = other.buyin_;
      backup_ = other.backup_;
      handsnum_ = other.handsnum_;
      tag_ = other.tag_;
      clubAgent_ = other.clubAgent_ != null ? other.clubAgent_.Clone() : null;
      memoName_ = other.memoName_;
      jackpotReward_ = other.jackpotReward_;
      lastlogintime_ = other.lastlogintime_;
      stormChips_ = other.stormChips_;
      lastPlayingTime_ = other.lastPlayingTime_;
      spinupBuyin_ = other.spinupBuyin_;
      authorityDetail_ = other.authorityDetail_;
      agentMemoName_ = other.agentMemoName_;
      isSuspended_ = other.isSuspended_;
      certification_ = other.certification_;
      agentSharkIndex_ = other.agentSharkIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubMemberInfo Clone() {
      return new ClubMemberInfo(this);
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 1;
    private readonly static int RoleDefaultValue = 0;

    private int role_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Role {
      get { if ((_hasBits0 & 1) != 0) { return role_; } else { return RoleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        role_ = value;
      }
    }
    /// <summary>Gets whether the "role" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRole {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "role" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRole() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static string UidDefaultValue = "";

    private string uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_ ?? UidDefaultValue; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return uid_ != null; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      uid_ = null;
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 3;
    private readonly static string NicknameDefaultValue = "";

    private string nickname_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Nickname {
      get { return nickname_ ?? NicknameDefaultValue; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "nickname" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNickname {
      get { return nickname_ != null; }
    }
    /// <summary>Clears the value of the "nickname" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNickname() {
      nickname_ = null;
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 4;
    private readonly static string IconDefaultValue = "";

    private string icon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_ ?? IconDefaultValue; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIcon {
      get { return icon_ != null; }
    }
    /// <summary>Clears the value of the "icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIcon() {
      icon_ = null;
    }

    /// <summary>Field number for the "jointime" field.</summary>
    public const int JointimeFieldNumber = 6;
    private readonly static int JointimeDefaultValue = 0;

    private int jointime_;
    /// <summary>
    ///optional int64 ppcoin = 5;      // 对应的联盟币或者俱乐部的ppcoin
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Jointime {
      get { if ((_hasBits0 & 2) != 0) { return jointime_; } else { return JointimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        jointime_ = value;
      }
    }
    /// <summary>Gets whether the "jointime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasJointime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "jointime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearJointime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "fee" field.</summary>
    public const int FeeFieldNumber = 7;
    private readonly static long FeeDefaultValue = 0L;

    private long fee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Fee {
      get { if ((_hasBits0 & 4) != 0) { return fee_; } else { return FeeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        fee_ = value;
      }
    }
    /// <summary>Gets whether the "fee" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFee {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "fee" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFee() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "buyin" field.</summary>
    public const int BuyinFieldNumber = 8;
    private readonly static long BuyinDefaultValue = 0L;

    private long buyin_;
    /// <summary>
    ///总买入
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Buyin {
      get { if ((_hasBits0 & 8) != 0) { return buyin_; } else { return BuyinDefaultValue; } }
      set {
        _hasBits0 |= 8;
        buyin_ = value;
      }
    }
    /// <summary>Gets whether the "buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBuyin {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBuyin() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "backup" field.</summary>
    public const int BackupFieldNumber = 9;
    private readonly static long BackupDefaultValue = 0L;

    private long backup_;
    /// <summary>
    ///总退分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Backup {
      get { if ((_hasBits0 & 16) != 0) { return backup_; } else { return BackupDefaultValue; } }
      set {
        _hasBits0 |= 16;
        backup_ = value;
      }
    }
    /// <summary>Gets whether the "backup" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBackup {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "backup" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBackup() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "handsnum" field.</summary>
    public const int HandsnumFieldNumber = 10;
    private readonly static int HandsnumDefaultValue = 0;

    private int handsnum_;
    /// <summary>
    ///总手牌数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Handsnum {
      get { if ((_hasBits0 & 32) != 0) { return handsnum_; } else { return HandsnumDefaultValue; } }
      set {
        _hasBits0 |= 32;
        handsnum_ = value;
      }
    }
    /// <summary>Gets whether the "handsnum" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHandsnum {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "handsnum" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHandsnum() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 11;
    private readonly static string TagDefaultValue = "";

    private string tag_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tag {
      get { return tag_ ?? TagDefaultValue; }
      set {
        tag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTag {
      get { return tag_ != null; }
    }
    /// <summary>Clears the value of the "tag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTag() {
      tag_ = null;
    }

    /// <summary>Field number for the "club_agent" field.</summary>
    public const int ClubAgentFieldNumber = 12;
    private global::Texas.Protocol.ClubAgentInfo clubAgent_;
    /// <summary>
    ///二级管理员数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.ClubAgentInfo ClubAgent {
      get { return clubAgent_; }
      set {
        clubAgent_ = value;
      }
    }

    /// <summary>Field number for the "memo_name" field.</summary>
    public const int MemoNameFieldNumber = 13;
    private readonly static string MemoNameDefaultValue = "";

    private string memoName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MemoName {
      get { return memoName_ ?? MemoNameDefaultValue; }
      set {
        memoName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "memo_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMemoName {
      get { return memoName_ != null; }
    }
    /// <summary>Clears the value of the "memo_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMemoName() {
      memoName_ = null;
    }

    /// <summary>Field number for the "jackpot_reward" field.</summary>
    public const int JackpotRewardFieldNumber = 14;
    private readonly static long JackpotRewardDefaultValue = 0L;

    private long jackpotReward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long JackpotReward {
      get { if ((_hasBits0 & 64) != 0) { return jackpotReward_; } else { return JackpotRewardDefaultValue; } }
      set {
        _hasBits0 |= 64;
        jackpotReward_ = value;
      }
    }
    /// <summary>Gets whether the "jackpot_reward" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasJackpotReward {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "jackpot_reward" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearJackpotReward() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "lastlogintime" field.</summary>
    public const int LastlogintimeFieldNumber = 15;
    private readonly static long LastlogintimeDefaultValue = 0L;

    private long lastlogintime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Lastlogintime {
      get { if ((_hasBits0 & 128) != 0) { return lastlogintime_; } else { return LastlogintimeDefaultValue; } }
      set {
        _hasBits0 |= 128;
        lastlogintime_ = value;
      }
    }
    /// <summary>Gets whether the "lastlogintime" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLastlogintime {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "lastlogintime" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLastlogintime() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "storm_chips" field.</summary>
    public const int StormChipsFieldNumber = 16;
    private readonly static long StormChipsDefaultValue = 0L;

    private long stormChips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StormChips {
      get { if ((_hasBits0 & 256) != 0) { return stormChips_; } else { return StormChipsDefaultValue; } }
      set {
        _hasBits0 |= 256;
        stormChips_ = value;
      }
    }
    /// <summary>Gets whether the "storm_chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStormChips {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "storm_chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStormChips() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "last_playing_time" field.</summary>
    public const int LastPlayingTimeFieldNumber = 17;
    private readonly static long LastPlayingTimeDefaultValue = 0L;

    private long lastPlayingTime_;
    /// <summary>
    ///最后打牌时间  该值为时间戳
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LastPlayingTime {
      get { if ((_hasBits0 & 512) != 0) { return lastPlayingTime_; } else { return LastPlayingTimeDefaultValue; } }
      set {
        _hasBits0 |= 512;
        lastPlayingTime_ = value;
      }
    }
    /// <summary>Gets whether the "last_playing_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLastPlayingTime {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "last_playing_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLastPlayingTime() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "spinup_buyin" field.</summary>
    public const int SpinupBuyinFieldNumber = 18;
    private readonly static long SpinupBuyinDefaultValue = 0L;

    private long spinupBuyin_;
    /// <summary>
    ///spinup 总买入
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SpinupBuyin {
      get { if ((_hasBits0 & 1024) != 0) { return spinupBuyin_; } else { return SpinupBuyinDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        spinupBuyin_ = value;
      }
    }
    /// <summary>Gets whether the "spinup_buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpinupBuyin {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "spinup_buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpinupBuyin() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "authority_detail" field.</summary>
    public const int AuthorityDetailFieldNumber = 19;
    private readonly static int AuthorityDetailDefaultValue = 0;

    private int authorityDetail_;
    /// <summary>
    ///每个bit位表示一个权限控制开关，目前使用1-7bit, 从低位向高位
    ///1bit member control 2bit agent set 3bit data export 4bit diamond use like pp charge/send vip/change club name 
    ///5bit  send/recv pp ticket 6bit create table 7bit change club notice etc
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AuthorityDetail {
      get { if ((_hasBits0 & 2048) != 0) { return authorityDetail_; } else { return AuthorityDetailDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        authorityDetail_ = value;
      }
    }
    /// <summary>Gets whether the "authority_detail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAuthorityDetail {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "authority_detail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAuthorityDetail() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "agent_memo_name" field.</summary>
    public const int AgentMemoNameFieldNumber = 20;
    private readonly static string AgentMemoNameDefaultValue = "";

    private string agentMemoName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AgentMemoName {
      get { return agentMemoName_ ?? AgentMemoNameDefaultValue; }
      set {
        agentMemoName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "agent_memo_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgentMemoName {
      get { return agentMemoName_ != null; }
    }
    /// <summary>Clears the value of the "agent_memo_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgentMemoName() {
      agentMemoName_ = null;
    }

    /// <summary>Field number for the "is_suspended" field.</summary>
    public const int IsSuspendedFieldNumber = 21;
    private readonly static bool IsSuspendedDefaultValue = false;

    private bool isSuspended_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSuspended {
      get { if ((_hasBits0 & 4096) != 0) { return isSuspended_; } else { return IsSuspendedDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        isSuspended_ = value;
      }
    }
    /// <summary>Gets whether the "is_suspended" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsSuspended {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "is_suspended" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsSuspended() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "certification" field.</summary>
    public const int CertificationFieldNumber = 22;
    private readonly static int CertificationDefaultValue = 0;

    private int certification_;
    /// <summary>
    ///俱樂部會員認證
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Certification {
      get { if ((_hasBits0 & 8192) != 0) { return certification_; } else { return CertificationDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        certification_ = value;
      }
    }
    /// <summary>Gets whether the "certification" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCertification {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "certification" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCertification() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "agent_shark_index" field.</summary>
    public const int AgentSharkIndexFieldNumber = 23;
    private readonly static int AgentSharkIndexDefaultValue = 0;

    private int agentSharkIndex_;
    /// <summary>
    /// 代理人鲨鱼指数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AgentSharkIndex {
      get { if ((_hasBits0 & 16384) != 0) { return agentSharkIndex_; } else { return AgentSharkIndexDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        agentSharkIndex_ = value;
      }
    }
    /// <summary>Gets whether the "agent_shark_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgentSharkIndex {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "agent_shark_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgentSharkIndex() {
      _hasBits0 &= ~16384;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubMemberInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubMemberInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Role != other.Role) return false;
      if (Uid != other.Uid) return false;
      if (Nickname != other.Nickname) return false;
      if (Icon != other.Icon) return false;
      if (Jointime != other.Jointime) return false;
      if (Fee != other.Fee) return false;
      if (Buyin != other.Buyin) return false;
      if (Backup != other.Backup) return false;
      if (Handsnum != other.Handsnum) return false;
      if (Tag != other.Tag) return false;
      if (!object.Equals(ClubAgent, other.ClubAgent)) return false;
      if (MemoName != other.MemoName) return false;
      if (JackpotReward != other.JackpotReward) return false;
      if (Lastlogintime != other.Lastlogintime) return false;
      if (StormChips != other.StormChips) return false;
      if (LastPlayingTime != other.LastPlayingTime) return false;
      if (SpinupBuyin != other.SpinupBuyin) return false;
      if (AuthorityDetail != other.AuthorityDetail) return false;
      if (AgentMemoName != other.AgentMemoName) return false;
      if (IsSuspended != other.IsSuspended) return false;
      if (Certification != other.Certification) return false;
      if (AgentSharkIndex != other.AgentSharkIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRole) hash ^= Role.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasNickname) hash ^= Nickname.GetHashCode();
      if (HasIcon) hash ^= Icon.GetHashCode();
      if (HasJointime) hash ^= Jointime.GetHashCode();
      if (HasFee) hash ^= Fee.GetHashCode();
      if (HasBuyin) hash ^= Buyin.GetHashCode();
      if (HasBackup) hash ^= Backup.GetHashCode();
      if (HasHandsnum) hash ^= Handsnum.GetHashCode();
      if (HasTag) hash ^= Tag.GetHashCode();
      if (clubAgent_ != null) hash ^= ClubAgent.GetHashCode();
      if (HasMemoName) hash ^= MemoName.GetHashCode();
      if (HasJackpotReward) hash ^= JackpotReward.GetHashCode();
      if (HasLastlogintime) hash ^= Lastlogintime.GetHashCode();
      if (HasStormChips) hash ^= StormChips.GetHashCode();
      if (HasLastPlayingTime) hash ^= LastPlayingTime.GetHashCode();
      if (HasSpinupBuyin) hash ^= SpinupBuyin.GetHashCode();
      if (HasAuthorityDetail) hash ^= AuthorityDetail.GetHashCode();
      if (HasAgentMemoName) hash ^= AgentMemoName.GetHashCode();
      if (HasIsSuspended) hash ^= IsSuspended.GetHashCode();
      if (HasCertification) hash ^= Certification.GetHashCode();
      if (HasAgentSharkIndex) hash ^= AgentSharkIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRole) {
        output.WriteRawTag(8);
        output.WriteInt32(Role);
      }
      if (HasUid) {
        output.WriteRawTag(18);
        output.WriteString(Uid);
      }
      if (HasNickname) {
        output.WriteRawTag(26);
        output.WriteString(Nickname);
      }
      if (HasIcon) {
        output.WriteRawTag(34);
        output.WriteString(Icon);
      }
      if (HasJointime) {
        output.WriteRawTag(48);
        output.WriteInt32(Jointime);
      }
      if (HasFee) {
        output.WriteRawTag(56);
        output.WriteInt64(Fee);
      }
      if (HasBuyin) {
        output.WriteRawTag(64);
        output.WriteInt64(Buyin);
      }
      if (HasBackup) {
        output.WriteRawTag(72);
        output.WriteInt64(Backup);
      }
      if (HasHandsnum) {
        output.WriteRawTag(80);
        output.WriteInt32(Handsnum);
      }
      if (HasTag) {
        output.WriteRawTag(90);
        output.WriteString(Tag);
      }
      if (clubAgent_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ClubAgent);
      }
      if (HasMemoName) {
        output.WriteRawTag(106);
        output.WriteString(MemoName);
      }
      if (HasJackpotReward) {
        output.WriteRawTag(112);
        output.WriteInt64(JackpotReward);
      }
      if (HasLastlogintime) {
        output.WriteRawTag(120);
        output.WriteInt64(Lastlogintime);
      }
      if (HasStormChips) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(StormChips);
      }
      if (HasLastPlayingTime) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(LastPlayingTime);
      }
      if (HasSpinupBuyin) {
        output.WriteRawTag(144, 1);
        output.WriteInt64(SpinupBuyin);
      }
      if (HasAuthorityDetail) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(AuthorityDetail);
      }
      if (HasAgentMemoName) {
        output.WriteRawTag(162, 1);
        output.WriteString(AgentMemoName);
      }
      if (HasIsSuspended) {
        output.WriteRawTag(168, 1);
        output.WriteBool(IsSuspended);
      }
      if (HasCertification) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(Certification);
      }
      if (HasAgentSharkIndex) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(AgentSharkIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRole) {
        output.WriteRawTag(8);
        output.WriteInt32(Role);
      }
      if (HasUid) {
        output.WriteRawTag(18);
        output.WriteString(Uid);
      }
      if (HasNickname) {
        output.WriteRawTag(26);
        output.WriteString(Nickname);
      }
      if (HasIcon) {
        output.WriteRawTag(34);
        output.WriteString(Icon);
      }
      if (HasJointime) {
        output.WriteRawTag(48);
        output.WriteInt32(Jointime);
      }
      if (HasFee) {
        output.WriteRawTag(56);
        output.WriteInt64(Fee);
      }
      if (HasBuyin) {
        output.WriteRawTag(64);
        output.WriteInt64(Buyin);
      }
      if (HasBackup) {
        output.WriteRawTag(72);
        output.WriteInt64(Backup);
      }
      if (HasHandsnum) {
        output.WriteRawTag(80);
        output.WriteInt32(Handsnum);
      }
      if (HasTag) {
        output.WriteRawTag(90);
        output.WriteString(Tag);
      }
      if (clubAgent_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ClubAgent);
      }
      if (HasMemoName) {
        output.WriteRawTag(106);
        output.WriteString(MemoName);
      }
      if (HasJackpotReward) {
        output.WriteRawTag(112);
        output.WriteInt64(JackpotReward);
      }
      if (HasLastlogintime) {
        output.WriteRawTag(120);
        output.WriteInt64(Lastlogintime);
      }
      if (HasStormChips) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(StormChips);
      }
      if (HasLastPlayingTime) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(LastPlayingTime);
      }
      if (HasSpinupBuyin) {
        output.WriteRawTag(144, 1);
        output.WriteInt64(SpinupBuyin);
      }
      if (HasAuthorityDetail) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(AuthorityDetail);
      }
      if (HasAgentMemoName) {
        output.WriteRawTag(162, 1);
        output.WriteString(AgentMemoName);
      }
      if (HasIsSuspended) {
        output.WriteRawTag(168, 1);
        output.WriteBool(IsSuspended);
      }
      if (HasCertification) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(Certification);
      }
      if (HasAgentSharkIndex) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(AgentSharkIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRole) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Role);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (HasNickname) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (HasIcon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (HasJointime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Jointime);
      }
      if (HasFee) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Fee);
      }
      if (HasBuyin) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Buyin);
      }
      if (HasBackup) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Backup);
      }
      if (HasHandsnum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Handsnum);
      }
      if (HasTag) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tag);
      }
      if (clubAgent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClubAgent);
      }
      if (HasMemoName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemoName);
      }
      if (HasJackpotReward) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(JackpotReward);
      }
      if (HasLastlogintime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Lastlogintime);
      }
      if (HasStormChips) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(StormChips);
      }
      if (HasLastPlayingTime) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(LastPlayingTime);
      }
      if (HasSpinupBuyin) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(SpinupBuyin);
      }
      if (HasAuthorityDetail) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AuthorityDetail);
      }
      if (HasAgentMemoName) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AgentMemoName);
      }
      if (HasIsSuspended) {
        size += 2 + 1;
      }
      if (HasCertification) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Certification);
      }
      if (HasAgentSharkIndex) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AgentSharkIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubMemberInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasRole) {
        Role = other.Role;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasNickname) {
        Nickname = other.Nickname;
      }
      if (other.HasIcon) {
        Icon = other.Icon;
      }
      if (other.HasJointime) {
        Jointime = other.Jointime;
      }
      if (other.HasFee) {
        Fee = other.Fee;
      }
      if (other.HasBuyin) {
        Buyin = other.Buyin;
      }
      if (other.HasBackup) {
        Backup = other.Backup;
      }
      if (other.HasHandsnum) {
        Handsnum = other.Handsnum;
      }
      if (other.HasTag) {
        Tag = other.Tag;
      }
      if (other.clubAgent_ != null) {
        if (clubAgent_ == null) {
          ClubAgent = new global::Texas.Protocol.ClubAgentInfo();
        }
        ClubAgent.MergeFrom(other.ClubAgent);
      }
      if (other.HasMemoName) {
        MemoName = other.MemoName;
      }
      if (other.HasJackpotReward) {
        JackpotReward = other.JackpotReward;
      }
      if (other.HasLastlogintime) {
        Lastlogintime = other.Lastlogintime;
      }
      if (other.HasStormChips) {
        StormChips = other.StormChips;
      }
      if (other.HasLastPlayingTime) {
        LastPlayingTime = other.LastPlayingTime;
      }
      if (other.HasSpinupBuyin) {
        SpinupBuyin = other.SpinupBuyin;
      }
      if (other.HasAuthorityDetail) {
        AuthorityDetail = other.AuthorityDetail;
      }
      if (other.HasAgentMemoName) {
        AgentMemoName = other.AgentMemoName;
      }
      if (other.HasIsSuspended) {
        IsSuspended = other.IsSuspended;
      }
      if (other.HasCertification) {
        Certification = other.Certification;
      }
      if (other.HasAgentSharkIndex) {
        AgentSharkIndex = other.AgentSharkIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Role = input.ReadInt32();
            break;
          }
          case 18: {
            Uid = input.ReadString();
            break;
          }
          case 26: {
            Nickname = input.ReadString();
            break;
          }
          case 34: {
            Icon = input.ReadString();
            break;
          }
          case 48: {
            Jointime = input.ReadInt32();
            break;
          }
          case 56: {
            Fee = input.ReadInt64();
            break;
          }
          case 64: {
            Buyin = input.ReadInt64();
            break;
          }
          case 72: {
            Backup = input.ReadInt64();
            break;
          }
          case 80: {
            Handsnum = input.ReadInt32();
            break;
          }
          case 90: {
            Tag = input.ReadString();
            break;
          }
          case 98: {
            if (clubAgent_ == null) {
              ClubAgent = new global::Texas.Protocol.ClubAgentInfo();
            }
            input.ReadMessage(ClubAgent);
            break;
          }
          case 106: {
            MemoName = input.ReadString();
            break;
          }
          case 112: {
            JackpotReward = input.ReadInt64();
            break;
          }
          case 120: {
            Lastlogintime = input.ReadInt64();
            break;
          }
          case 128: {
            StormChips = input.ReadInt64();
            break;
          }
          case 136: {
            LastPlayingTime = input.ReadInt64();
            break;
          }
          case 144: {
            SpinupBuyin = input.ReadInt64();
            break;
          }
          case 152: {
            AuthorityDetail = input.ReadInt32();
            break;
          }
          case 162: {
            AgentMemoName = input.ReadString();
            break;
          }
          case 168: {
            IsSuspended = input.ReadBool();
            break;
          }
          case 176: {
            Certification = input.ReadInt32();
            break;
          }
          case 184: {
            AgentSharkIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Role = input.ReadInt32();
            break;
          }
          case 18: {
            Uid = input.ReadString();
            break;
          }
          case 26: {
            Nickname = input.ReadString();
            break;
          }
          case 34: {
            Icon = input.ReadString();
            break;
          }
          case 48: {
            Jointime = input.ReadInt32();
            break;
          }
          case 56: {
            Fee = input.ReadInt64();
            break;
          }
          case 64: {
            Buyin = input.ReadInt64();
            break;
          }
          case 72: {
            Backup = input.ReadInt64();
            break;
          }
          case 80: {
            Handsnum = input.ReadInt32();
            break;
          }
          case 90: {
            Tag = input.ReadString();
            break;
          }
          case 98: {
            if (clubAgent_ == null) {
              ClubAgent = new global::Texas.Protocol.ClubAgentInfo();
            }
            input.ReadMessage(ClubAgent);
            break;
          }
          case 106: {
            MemoName = input.ReadString();
            break;
          }
          case 112: {
            JackpotReward = input.ReadInt64();
            break;
          }
          case 120: {
            Lastlogintime = input.ReadInt64();
            break;
          }
          case 128: {
            StormChips = input.ReadInt64();
            break;
          }
          case 136: {
            LastPlayingTime = input.ReadInt64();
            break;
          }
          case 144: {
            SpinupBuyin = input.ReadInt64();
            break;
          }
          case 152: {
            AuthorityDetail = input.ReadInt32();
            break;
          }
          case 162: {
            AgentMemoName = input.ReadString();
            break;
          }
          case 168: {
            IsSuspended = input.ReadBool();
            break;
          }
          case 176: {
            Certification = input.ReadInt32();
            break;
          }
          case 184: {
            AgentSharkIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubMemberREQ : pb::IMessage<ClubMemberREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubMemberREQ> _parser = new pb::MessageParser<ClubMemberREQ>(() => new ClubMemberREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubMemberREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubMemberREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubMemberREQ(ClubMemberREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      uid_ = other.uid_;
      retransIndex_ = other.retransIndex_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubMemberREQ Clone() {
      return new ClubMemberREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 2;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 1) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 3;
    private readonly static string UidDefaultValue = "";

    private string uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_ ?? UidDefaultValue; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return uid_ != null; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      uid_ = null;
    }

    /// <summary>Field number for the "retrans_index" field.</summary>
    public const int RetransIndexFieldNumber = 4;
    private readonly static int RetransIndexDefaultValue = 0;

    private int retransIndex_;
    /// <summary>
    ///重传的下标，0表示非重传请求
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RetransIndex {
      get { if ((_hasBits0 & 2) != 0) { return retransIndex_; } else { return RetransIndexDefaultValue; } }
      set {
        _hasBits0 |= 2;
        retransIndex_ = value;
      }
    }
    /// <summary>Gets whether the "retrans_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRetransIndex {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "retrans_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRetransIndex() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 5;
    private readonly static int AmountDefaultValue = 0;

    private int amount_;
    /// <summary>
    ///单个包数据量的大小，0表示不拆包
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Amount {
      get { if ((_hasBits0 & 4) != 0) { return amount_; } else { return AmountDefaultValue; } }
      set {
        _hasBits0 |= 4;
        amount_ = value;
      }
    }
    /// <summary>Gets whether the "amount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAmount {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "amount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAmount() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubMemberREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubMemberREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (Uid != other.Uid) return false;
      if (RetransIndex != other.RetransIndex) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasRetransIndex) hash ^= RetransIndex.GetHashCode();
      if (HasAmount) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasUid) {
        output.WriteRawTag(26);
        output.WriteString(Uid);
      }
      if (HasRetransIndex) {
        output.WriteRawTag(32);
        output.WriteInt32(RetransIndex);
      }
      if (HasAmount) {
        output.WriteRawTag(40);
        output.WriteInt32(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasUid) {
        output.WriteRawTag(26);
        output.WriteString(Uid);
      }
      if (HasRetransIndex) {
        output.WriteRawTag(32);
        output.WriteInt32(RetransIndex);
      }
      if (HasAmount) {
        output.WriteRawTag(40);
        output.WriteInt32(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (HasRetransIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RetransIndex);
      }
      if (HasAmount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubMemberREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasRetransIndex) {
        RetransIndex = other.RetransIndex;
      }
      if (other.HasAmount) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 26: {
            Uid = input.ReadString();
            break;
          }
          case 32: {
            RetransIndex = input.ReadInt32();
            break;
          }
          case 40: {
            Amount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 26: {
            Uid = input.ReadString();
            break;
          }
          case 32: {
            RetransIndex = input.ReadInt32();
            break;
          }
          case 40: {
            Amount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubMemberRSP : pb::IMessage<ClubMemberRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubMemberRSP> _parser = new pb::MessageParser<ClubMemberRSP>(() => new ClubMemberRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubMemberRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubMemberRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubMemberRSP(ClubMemberRSP other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      member_ = other.member_.Clone();
      totalPacketNum_ = other.totalPacketNum_;
      packetIndex_ = other.packetIndex_;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubMemberRSP Clone() {
      return new ClubMemberRSP(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 2;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 1) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "member" field.</summary>
    public const int MemberFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ClubMemberInfo> _repeated_member_codec
        = pb::FieldCodec.ForMessage(26, global::Texas.Protocol.ClubMemberInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ClubMemberInfo> member_ = new pbc::RepeatedField<global::Texas.Protocol.ClubMemberInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ClubMemberInfo> Member {
      get { return member_; }
    }

    /// <summary>Field number for the "total_packet_num" field.</summary>
    public const int TotalPacketNumFieldNumber = 4;
    private readonly static int TotalPacketNumDefaultValue = 0;

    private int totalPacketNum_;
    /// <summary>
    ///总数据包拆成了多少个包下发
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalPacketNum {
      get { if ((_hasBits0 & 2) != 0) { return totalPacketNum_; } else { return TotalPacketNumDefaultValue; } }
      set {
        _hasBits0 |= 2;
        totalPacketNum_ = value;
      }
    }
    /// <summary>Gets whether the "total_packet_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalPacketNum {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "total_packet_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalPacketNum() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "packet_index" field.</summary>
    public const int PacketIndexFieldNumber = 5;
    private readonly static int PacketIndexDefaultValue = 0;

    private int packetIndex_;
    /// <summary>
    ///当前包的下标，从1开始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PacketIndex {
      get { if ((_hasBits0 & 4) != 0) { return packetIndex_; } else { return PacketIndexDefaultValue; } }
      set {
        _hasBits0 |= 4;
        packetIndex_ = value;
      }
    }
    /// <summary>Gets whether the "packet_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPacketIndex {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "packet_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPacketIndex() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 6;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// -1 沒有權限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 8) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubMemberRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubMemberRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if(!member_.Equals(other.member_)) return false;
      if (TotalPacketNum != other.TotalPacketNum) return false;
      if (PacketIndex != other.PacketIndex) return false;
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      hash ^= member_.GetHashCode();
      if (HasTotalPacketNum) hash ^= TotalPacketNum.GetHashCode();
      if (HasPacketIndex) hash ^= PacketIndex.GetHashCode();
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      member_.WriteTo(output, _repeated_member_codec);
      if (HasTotalPacketNum) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalPacketNum);
      }
      if (HasPacketIndex) {
        output.WriteRawTag(40);
        output.WriteInt32(PacketIndex);
      }
      if (HasCode) {
        output.WriteRawTag(48);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      member_.WriteTo(ref output, _repeated_member_codec);
      if (HasTotalPacketNum) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalPacketNum);
      }
      if (HasPacketIndex) {
        output.WriteRawTag(40);
        output.WriteInt32(PacketIndex);
      }
      if (HasCode) {
        output.WriteRawTag(48);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      size += member_.CalculateSize(_repeated_member_codec);
      if (HasTotalPacketNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPacketNum);
      }
      if (HasPacketIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PacketIndex);
      }
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubMemberRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      member_.Add(other.member_);
      if (other.HasTotalPacketNum) {
        TotalPacketNum = other.TotalPacketNum;
      }
      if (other.HasPacketIndex) {
        PacketIndex = other.PacketIndex;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 26: {
            member_.AddEntriesFrom(input, _repeated_member_codec);
            break;
          }
          case 32: {
            TotalPacketNum = input.ReadInt32();
            break;
          }
          case 40: {
            PacketIndex = input.ReadInt32();
            break;
          }
          case 48: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 26: {
            member_.AddEntriesFrom(ref input, _repeated_member_codec);
            break;
          }
          case 32: {
            TotalPacketNum = input.ReadInt32();
            break;
          }
          case 40: {
            PacketIndex = input.ReadInt32();
            break;
          }
          case 48: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreateClubREQ : pb::IMessage<CreateClubREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateClubREQ> _parser = new pb::MessageParser<CreateClubREQ>(() => new CreateClubREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateClubREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateClubREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateClubREQ(CreateClubREQ other) : this() {
      name_ = other.name_;
      blackboard_ = other.blackboard_;
      utcOffset_ = other.utcOffset_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateClubREQ Clone() {
      return new CreateClubREQ(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "blackboard" field.</summary>
    public const int BlackboardFieldNumber = 2;
    private readonly static string BlackboardDefaultValue = "";

    private string blackboard_;
    /// <summary>
    ///简介
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Blackboard {
      get { return blackboard_ ?? BlackboardDefaultValue; }
      set {
        blackboard_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "blackboard" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlackboard {
      get { return blackboard_ != null; }
    }
    /// <summary>Clears the value of the "blackboard" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlackboard() {
      blackboard_ = null;
    }

    /// <summary>Field number for the "utc_offset" field.</summary>
    public const int UtcOffsetFieldNumber = 3;
    private readonly static string UtcOffsetDefaultValue = "";

    private string utcOffset_;
    /// <summary>
    /// utc偏移量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UtcOffset {
      get { return utcOffset_ ?? UtcOffsetDefaultValue; }
      set {
        utcOffset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "utc_offset" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUtcOffset {
      get { return utcOffset_ != null; }
    }
    /// <summary>Clears the value of the "utc_offset" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUtcOffset() {
      utcOffset_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateClubREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateClubREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Blackboard != other.Blackboard) return false;
      if (UtcOffset != other.UtcOffset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasBlackboard) hash ^= Blackboard.GetHashCode();
      if (HasUtcOffset) hash ^= UtcOffset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasBlackboard) {
        output.WriteRawTag(18);
        output.WriteString(Blackboard);
      }
      if (HasUtcOffset) {
        output.WriteRawTag(26);
        output.WriteString(UtcOffset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasBlackboard) {
        output.WriteRawTag(18);
        output.WriteString(Blackboard);
      }
      if (HasUtcOffset) {
        output.WriteRawTag(26);
        output.WriteString(UtcOffset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasBlackboard) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Blackboard);
      }
      if (HasUtcOffset) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UtcOffset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateClubREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasBlackboard) {
        Blackboard = other.Blackboard;
      }
      if (other.HasUtcOffset) {
        UtcOffset = other.UtcOffset;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Blackboard = input.ReadString();
            break;
          }
          case 26: {
            UtcOffset = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Blackboard = input.ReadString();
            break;
          }
          case 26: {
            UtcOffset = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreateClubRSP : pb::IMessage<CreateClubRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateClubRSP> _parser = new pb::MessageParser<CreateClubRSP>(() => new CreateClubRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateClubRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateClubRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateClubRSP(CreateClubRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      club_ = other.club_ != null ? other.club_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateClubRSP Clone() {
      return new CreateClubRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// -1 名字重复   -2 超过上限   -3 钻石不够   -4 俱乐部名字不合法
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "club" field.</summary>
    public const int ClubFieldNumber = 2;
    private global::Texas.Protocol.ClubInfo club_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.ClubInfo Club {
      get { return club_; }
      set {
        club_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateClubRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateClubRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Club, other.Club)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (club_ != null) hash ^= Club.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (club_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Club);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (club_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Club);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (club_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Club);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateClubRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.club_ != null) {
        if (club_ == null) {
          Club = new global::Texas.Protocol.ClubInfo();
        }
        Club.MergeFrom(other.Club);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (club_ == null) {
              Club = new global::Texas.Protocol.ClubInfo();
            }
            input.ReadMessage(Club);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (club_ == null) {
              Club = new global::Texas.Protocol.ClubInfo();
            }
            input.ReadMessage(Club);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class JoinClubREQ : pb::IMessage<JoinClubREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<JoinClubREQ> _parser = new pb::MessageParser<JoinClubREQ>(() => new JoinClubREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<JoinClubREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JoinClubREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JoinClubREQ(JoinClubREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      content_ = other.content_;
      agentUid_ = other.agentUid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JoinClubREQ Clone() {
      return new JoinClubREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    /// <summary>
    /// -1 俱乐部不存在    -2 已经是俱乐部会员
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 2;
    private readonly static string ContentDefaultValue = "";

    private string content_;
    /// <summary>
    ///备注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Content {
      get { return content_ ?? ContentDefaultValue; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "content" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContent {
      get { return content_ != null; }
    }
    /// <summary>Clears the value of the "content" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContent() {
      content_ = null;
    }

    /// <summary>Field number for the "agent_uid" field.</summary>
    public const int AgentUidFieldNumber = 3;
    private readonly static long AgentUidDefaultValue = 0L;

    private long agentUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AgentUid {
      get { if ((_hasBits0 & 1) != 0) { return agentUid_; } else { return AgentUidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        agentUid_ = value;
      }
    }
    /// <summary>Gets whether the "agent_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgentUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "agent_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgentUid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as JoinClubREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(JoinClubREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Content != other.Content) return false;
      if (AgentUid != other.AgentUid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasContent) hash ^= Content.GetHashCode();
      if (HasAgentUid) hash ^= AgentUid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasContent) {
        output.WriteRawTag(18);
        output.WriteString(Content);
      }
      if (HasAgentUid) {
        output.WriteRawTag(24);
        output.WriteInt64(AgentUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasContent) {
        output.WriteRawTag(18);
        output.WriteString(Content);
      }
      if (HasAgentUid) {
        output.WriteRawTag(24);
        output.WriteInt64(AgentUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasContent) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (HasAgentUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AgentUid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(JoinClubREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasContent) {
        Content = other.Content;
      }
      if (other.HasAgentUid) {
        AgentUid = other.AgentUid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 18: {
            Content = input.ReadString();
            break;
          }
          case 24: {
            AgentUid = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 18: {
            Content = input.ReadString();
            break;
          }
          case 24: {
            AgentUid = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class JoinClubRSP : pb::IMessage<JoinClubRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<JoinClubRSP> _parser = new pb::MessageParser<JoinClubRSP>(() => new JoinClubRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<JoinClubRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JoinClubRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JoinClubRSP(JoinClubRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      clubid_ = other.clubid_;
      agentUid_ = other.agentUid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JoinClubRSP Clone() {
      return new JoinClubRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// 0 申请成功  -1 俱乐部不存在   -2 已经是会员  -3 俱乐部满    -4 备注过长 -5 代理不存在
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 2;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "agent_uid" field.</summary>
    public const int AgentUidFieldNumber = 3;
    private readonly static long AgentUidDefaultValue = 0L;

    private long agentUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AgentUid {
      get { if ((_hasBits0 & 2) != 0) { return agentUid_; } else { return AgentUidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        agentUid_ = value;
      }
    }
    /// <summary>Gets whether the "agent_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgentUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "agent_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgentUid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as JoinClubRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(JoinClubRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Clubid != other.Clubid) return false;
      if (AgentUid != other.AgentUid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasAgentUid) hash ^= AgentUid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (HasAgentUid) {
        output.WriteRawTag(24);
        output.WriteInt64(AgentUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (HasAgentUid) {
        output.WriteRawTag(24);
        output.WriteInt64(AgentUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasAgentUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AgentUid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(JoinClubRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasAgentUid) {
        AgentUid = other.AgentUid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
          case 24: {
            AgentUid = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
          case 24: {
            AgentUid = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubJoinMsgInfo : pb::IMessage<ClubJoinMsgInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubJoinMsgInfo> _parser = new pb::MessageParser<ClubJoinMsgInfo>(() => new ClubJoinMsgInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubJoinMsgInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubJoinMsgInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubJoinMsgInfo(ClubJoinMsgInfo other) : this() {
      _hasBits0 = other._hasBits0;
      msgid_ = other.msgid_;
      uid_ = other.uid_;
      name_ = other.name_;
      icon_ = other.icon_;
      time_ = other.time_;
      content_ = other.content_;
      agentUid_ = other.agentUid_;
      agentName_ = other.agentName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubJoinMsgInfo Clone() {
      return new ClubJoinMsgInfo(this);
    }

    /// <summary>Field number for the "msgid" field.</summary>
    public const int MsgidFieldNumber = 1;
    private readonly static int MsgidDefaultValue = 0;

    private int msgid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Msgid {
      get { if ((_hasBits0 & 1) != 0) { return msgid_; } else { return MsgidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        msgid_ = value;
      }
    }
    /// <summary>Gets whether the "msgid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMsgid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "msgid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMsgid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static string UidDefaultValue = "";

    private string uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_ ?? UidDefaultValue; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return uid_ != null; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      uid_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 4;
    private readonly static string IconDefaultValue = "";

    private string icon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_ ?? IconDefaultValue; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIcon {
      get { return icon_ != null; }
    }
    /// <summary>Clears the value of the "icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIcon() {
      icon_ = null;
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 5;
    private readonly static int TimeDefaultValue = 0;

    private int time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Time {
      get { if ((_hasBits0 & 2) != 0) { return time_; } else { return TimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        time_ = value;
      }
    }
    /// <summary>Gets whether the "time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 6;
    private readonly static string ContentDefaultValue = "";

    private string content_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Content {
      get { return content_ ?? ContentDefaultValue; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "content" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContent {
      get { return content_ != null; }
    }
    /// <summary>Clears the value of the "content" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContent() {
      content_ = null;
    }

    /// <summary>Field number for the "agent_uid" field.</summary>
    public const int AgentUidFieldNumber = 7;
    private readonly static long AgentUidDefaultValue = 0L;

    private long agentUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AgentUid {
      get { if ((_hasBits0 & 4) != 0) { return agentUid_; } else { return AgentUidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        agentUid_ = value;
      }
    }
    /// <summary>Gets whether the "agent_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgentUid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "agent_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgentUid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "agent_name" field.</summary>
    public const int AgentNameFieldNumber = 8;
    private readonly static string AgentNameDefaultValue = "";

    private string agentName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AgentName {
      get { return agentName_ ?? AgentNameDefaultValue; }
      set {
        agentName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "agent_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgentName {
      get { return agentName_ != null; }
    }
    /// <summary>Clears the value of the "agent_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgentName() {
      agentName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubJoinMsgInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubJoinMsgInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgid != other.Msgid) return false;
      if (Uid != other.Uid) return false;
      if (Name != other.Name) return false;
      if (Icon != other.Icon) return false;
      if (Time != other.Time) return false;
      if (Content != other.Content) return false;
      if (AgentUid != other.AgentUid) return false;
      if (AgentName != other.AgentName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMsgid) hash ^= Msgid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasIcon) hash ^= Icon.GetHashCode();
      if (HasTime) hash ^= Time.GetHashCode();
      if (HasContent) hash ^= Content.GetHashCode();
      if (HasAgentUid) hash ^= AgentUid.GetHashCode();
      if (HasAgentName) hash ^= AgentName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMsgid) {
        output.WriteRawTag(8);
        output.WriteInt32(Msgid);
      }
      if (HasUid) {
        output.WriteRawTag(18);
        output.WriteString(Uid);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (HasIcon) {
        output.WriteRawTag(34);
        output.WriteString(Icon);
      }
      if (HasTime) {
        output.WriteRawTag(40);
        output.WriteInt32(Time);
      }
      if (HasContent) {
        output.WriteRawTag(50);
        output.WriteString(Content);
      }
      if (HasAgentUid) {
        output.WriteRawTag(56);
        output.WriteInt64(AgentUid);
      }
      if (HasAgentName) {
        output.WriteRawTag(66);
        output.WriteString(AgentName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMsgid) {
        output.WriteRawTag(8);
        output.WriteInt32(Msgid);
      }
      if (HasUid) {
        output.WriteRawTag(18);
        output.WriteString(Uid);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (HasIcon) {
        output.WriteRawTag(34);
        output.WriteString(Icon);
      }
      if (HasTime) {
        output.WriteRawTag(40);
        output.WriteInt32(Time);
      }
      if (HasContent) {
        output.WriteRawTag(50);
        output.WriteString(Content);
      }
      if (HasAgentUid) {
        output.WriteRawTag(56);
        output.WriteInt64(AgentUid);
      }
      if (HasAgentName) {
        output.WriteRawTag(66);
        output.WriteString(AgentName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMsgid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Msgid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasIcon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (HasTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (HasContent) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (HasAgentUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AgentUid);
      }
      if (HasAgentName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AgentName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubJoinMsgInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasMsgid) {
        Msgid = other.Msgid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasIcon) {
        Icon = other.Icon;
      }
      if (other.HasTime) {
        Time = other.Time;
      }
      if (other.HasContent) {
        Content = other.Content;
      }
      if (other.HasAgentUid) {
        AgentUid = other.AgentUid;
      }
      if (other.HasAgentName) {
        AgentName = other.AgentName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Msgid = input.ReadInt32();
            break;
          }
          case 18: {
            Uid = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Icon = input.ReadString();
            break;
          }
          case 40: {
            Time = input.ReadInt32();
            break;
          }
          case 50: {
            Content = input.ReadString();
            break;
          }
          case 56: {
            AgentUid = input.ReadInt64();
            break;
          }
          case 66: {
            AgentName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Msgid = input.ReadInt32();
            break;
          }
          case 18: {
            Uid = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Icon = input.ReadString();
            break;
          }
          case 40: {
            Time = input.ReadInt32();
            break;
          }
          case 50: {
            Content = input.ReadString();
            break;
          }
          case 56: {
            AgentUid = input.ReadInt64();
            break;
          }
          case 66: {
            AgentName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubJoinListREQ : pb::IMessage<ClubJoinListREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubJoinListREQ> _parser = new pb::MessageParser<ClubJoinListREQ>(() => new ClubJoinListREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubJoinListREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubJoinListREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubJoinListREQ(ClubJoinListREQ other) : this() {
      clubid_ = other.clubid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubJoinListREQ Clone() {
      return new ClubJoinListREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubJoinListREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubJoinListREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubJoinListREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubJoinListRSP : pb::IMessage<ClubJoinListRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubJoinListRSP> _parser = new pb::MessageParser<ClubJoinListRSP>(() => new ClubJoinListRSP());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubJoinListRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubJoinListRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubJoinListRSP(ClubJoinListRSP other) : this() {
      info_ = other.info_.Clone();
      clubid_ = other.clubid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubJoinListRSP Clone() {
      return new ClubJoinListRSP(this);
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ClubJoinMsgInfo> _repeated_info_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.ClubJoinMsgInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ClubJoinMsgInfo> info_ = new pbc::RepeatedField<global::Texas.Protocol.ClubJoinMsgInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ClubJoinMsgInfo> Info {
      get { return info_; }
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 2;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubJoinListRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubJoinListRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!info_.Equals(other.info_)) return false;
      if (Clubid != other.Clubid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= info_.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      info_.WriteTo(output, _repeated_info_codec);
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      info_.WriteTo(ref output, _repeated_info_codec);
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += info_.CalculateSize(_repeated_info_codec);
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubJoinListRSP other) {
      if (other == null) {
        return;
      }
      info_.Add(other.info_);
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubJoinMsgRSP : pb::IMessage<ClubJoinMsgRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubJoinMsgRSP> _parser = new pb::MessageParser<ClubJoinMsgRSP>(() => new ClubJoinMsgRSP());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubJoinMsgRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubJoinMsgRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubJoinMsgRSP(ClubJoinMsgRSP other) : this() {
      info_ = other.info_ != null ? other.info_.Clone() : null;
      clubid_ = other.clubid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubJoinMsgRSP Clone() {
      return new ClubJoinMsgRSP(this);
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 1;
    private global::Texas.Protocol.ClubJoinMsgInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.ClubJoinMsgInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 2;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubJoinMsgRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubJoinMsgRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Info, other.Info)) return false;
      if (Clubid != other.Clubid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (info_ != null) hash ^= Info.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubJoinMsgRSP other) {
      if (other == null) {
        return;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Texas.Protocol.ClubJoinMsgInfo();
        }
        Info.MergeFrom(other.Info);
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::Texas.Protocol.ClubJoinMsgInfo();
            }
            input.ReadMessage(Info);
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::Texas.Protocol.ClubJoinMsgInfo();
            }
            input.ReadMessage(Info);
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class JoinClubResultRSP : pb::IMessage<JoinClubResultRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<JoinClubResultRSP> _parser = new pb::MessageParser<JoinClubResultRSP>(() => new JoinClubResultRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<JoinClubResultRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JoinClubResultRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JoinClubResultRSP(JoinClubResultRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      clubid_ = other.clubid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JoinClubResultRSP Clone() {
      return new JoinClubResultRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// 0 成功加入   1 被拒绝
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 2;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as JoinClubResultRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(JoinClubResultRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Clubid != other.Clubid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(JoinClubResultRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HandleJoinMsgREQ : pb::IMessage<HandleJoinMsgREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HandleJoinMsgREQ> _parser = new pb::MessageParser<HandleJoinMsgREQ>(() => new HandleJoinMsgREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HandleJoinMsgREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HandleJoinMsgREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HandleJoinMsgREQ(HandleJoinMsgREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      msgid_ = other.msgid_;
      accept_ = other.accept_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HandleJoinMsgREQ Clone() {
      return new HandleJoinMsgREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "msgid" field.</summary>
    public const int MsgidFieldNumber = 2;
    private readonly static int MsgidDefaultValue = 0;

    private int msgid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Msgid {
      get { if ((_hasBits0 & 1) != 0) { return msgid_; } else { return MsgidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        msgid_ = value;
      }
    }
    /// <summary>Gets whether the "msgid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMsgid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "msgid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMsgid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "accept" field.</summary>
    public const int AcceptFieldNumber = 3;
    private readonly static bool AcceptDefaultValue = false;

    private bool accept_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Accept {
      get { if ((_hasBits0 & 2) != 0) { return accept_; } else { return AcceptDefaultValue; } }
      set {
        _hasBits0 |= 2;
        accept_ = value;
      }
    }
    /// <summary>Gets whether the "accept" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccept {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "accept" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccept() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HandleJoinMsgREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HandleJoinMsgREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Msgid != other.Msgid) return false;
      if (Accept != other.Accept) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasMsgid) hash ^= Msgid.GetHashCode();
      if (HasAccept) hash ^= Accept.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasMsgid) {
        output.WriteRawTag(16);
        output.WriteInt32(Msgid);
      }
      if (HasAccept) {
        output.WriteRawTag(24);
        output.WriteBool(Accept);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasMsgid) {
        output.WriteRawTag(16);
        output.WriteInt32(Msgid);
      }
      if (HasAccept) {
        output.WriteRawTag(24);
        output.WriteBool(Accept);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasMsgid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Msgid);
      }
      if (HasAccept) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HandleJoinMsgREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasMsgid) {
        Msgid = other.Msgid;
      }
      if (other.HasAccept) {
        Accept = other.Accept;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Msgid = input.ReadInt32();
            break;
          }
          case 24: {
            Accept = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Msgid = input.ReadInt32();
            break;
          }
          case 24: {
            Accept = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HandleJoinMsgRSP : pb::IMessage<HandleJoinMsgRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HandleJoinMsgRSP> _parser = new pb::MessageParser<HandleJoinMsgRSP>(() => new HandleJoinMsgRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HandleJoinMsgRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HandleJoinMsgRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HandleJoinMsgRSP(HandleJoinMsgRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      clubid_ = other.clubid_;
      uid_ = other.uid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HandleJoinMsgRSP Clone() {
      return new HandleJoinMsgRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// -1 消息不存在 拒绝加入  -2 俱乐部已满 -3 没有权限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 2;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 3;
    private readonly static string UidDefaultValue = "";

    private string uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_ ?? UidDefaultValue; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return uid_ != null; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      uid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HandleJoinMsgRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HandleJoinMsgRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Clubid != other.Clubid) return false;
      if (Uid != other.Uid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (HasUid) {
        output.WriteRawTag(26);
        output.WriteString(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (HasUid) {
        output.WriteRawTag(26);
        output.WriteString(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HandleJoinMsgRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
          case 26: {
            Uid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
          case 26: {
            Uid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubUpgradeREQ : pb::IMessage<ClubUpgradeREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubUpgradeREQ> _parser = new pb::MessageParser<ClubUpgradeREQ>(() => new ClubUpgradeREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubUpgradeREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubUpgradeREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubUpgradeREQ(ClubUpgradeREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      type_ = other.type_;
      level_ = other.level_;
      leagueid_ = other.leagueid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubUpgradeREQ Clone() {
      return new ClubUpgradeREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    ///请求类型  0 询问  1 确认升级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 3;
    private readonly static int LevelDefaultValue = 0;

    private int level_;
    /// <summary>
    ///升级到的级别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Level {
      get { if ((_hasBits0 & 2) != 0) { return level_; } else { return LevelDefaultValue; } }
      set {
        _hasBits0 |= 2;
        level_ = value;
      }
    }
    /// <summary>Gets whether the "level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLevel {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLevel() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 4;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 4) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubUpgradeREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubUpgradeREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Type != other.Type) return false;
      if (Level != other.Level) return false;
      if (Leagueid != other.Leagueid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasLevel) hash ^= Level.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (HasLevel) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (HasLeagueid) {
        output.WriteRawTag(32);
        output.WriteInt32(Leagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (HasLevel) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (HasLeagueid) {
        output.WriteRawTag(32);
        output.WriteInt32(Leagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasLevel) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubUpgradeREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasLevel) {
        Level = other.Level;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 32: {
            Leagueid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 32: {
            Leagueid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubUpgradeRSP : pb::IMessage<ClubUpgradeRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubUpgradeRSP> _parser = new pb::MessageParser<ClubUpgradeRSP>(() => new ClubUpgradeRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubUpgradeRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubUpgradeRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubUpgradeRSP(ClubUpgradeRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      clubid_ = other.clubid_;
      convert_ = other.convert_;
      numlimit_ = other.numlimit_;
      adminlimit_ = other.adminlimit_;
      level_ = other.level_;
      nextLevelDiscount_ = other.nextLevelDiscount_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubUpgradeRSP Clone() {
      return new ClubUpgradeRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// 0 升级成功  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 2;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    /// <summary>
    /// -1 钻石不够  -2 升级失败  
    /// -3 会员人数超过限制 不能降级  -4 管理员人数超过限制 不能降级 -5 超过最大等级
    /// -6 权限不足
    /// 1 返回折算天数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "convert" field.</summary>
    public const int ConvertFieldNumber = 3;
    private readonly static int ConvertDefaultValue = 0;

    private int convert_;
    /// <summary>
    ///折算的天数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Convert {
      get { if ((_hasBits0 & 2) != 0) { return convert_; } else { return ConvertDefaultValue; } }
      set {
        _hasBits0 |= 2;
        convert_ = value;
      }
    }
    /// <summary>Gets whether the "convert" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConvert {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "convert" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConvert() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "numlimit" field.</summary>
    public const int NumlimitFieldNumber = 4;
    private readonly static int NumlimitDefaultValue = 0;

    private int numlimit_;
    /// <summary>
    ///人数限制
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Numlimit {
      get { if ((_hasBits0 & 4) != 0) { return numlimit_; } else { return NumlimitDefaultValue; } }
      set {
        _hasBits0 |= 4;
        numlimit_ = value;
      }
    }
    /// <summary>Gets whether the "numlimit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumlimit {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "numlimit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumlimit() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "adminlimit" field.</summary>
    public const int AdminlimitFieldNumber = 5;
    private readonly static int AdminlimitDefaultValue = 0;

    private int adminlimit_;
    /// <summary>
    ///管理员限制
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Adminlimit {
      get { if ((_hasBits0 & 8) != 0) { return adminlimit_; } else { return AdminlimitDefaultValue; } }
      set {
        _hasBits0 |= 8;
        adminlimit_ = value;
      }
    }
    /// <summary>Gets whether the "adminlimit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAdminlimit {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "adminlimit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAdminlimit() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 6;
    private readonly static int LevelDefaultValue = 0;

    private int level_;
    /// <summary>
    ///升级后等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Level {
      get { if ((_hasBits0 & 16) != 0) { return level_; } else { return LevelDefaultValue; } }
      set {
        _hasBits0 |= 16;
        level_ = value;
      }
    }
    /// <summary>Gets whether the "level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLevel {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLevel() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "next_level_discount" field.</summary>
    public const int NextLevelDiscountFieldNumber = 7;
    private readonly static int NextLevelDiscountDefaultValue = 0;

    private int nextLevelDiscount_;
    /// <summary>
    /// 下一次升降级应该使用的折扣
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NextLevelDiscount {
      get { if ((_hasBits0 & 32) != 0) { return nextLevelDiscount_; } else { return NextLevelDiscountDefaultValue; } }
      set {
        _hasBits0 |= 32;
        nextLevelDiscount_ = value;
      }
    }
    /// <summary>Gets whether the "next_level_discount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNextLevelDiscount {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "next_level_discount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNextLevelDiscount() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 8;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    /// 100表示 不打折。   80表示   原价*80%
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 64) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 64;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubUpgradeRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubUpgradeRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Clubid != other.Clubid) return false;
      if (Convert != other.Convert) return false;
      if (Numlimit != other.Numlimit) return false;
      if (Adminlimit != other.Adminlimit) return false;
      if (Level != other.Level) return false;
      if (NextLevelDiscount != other.NextLevelDiscount) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasConvert) hash ^= Convert.GetHashCode();
      if (HasNumlimit) hash ^= Numlimit.GetHashCode();
      if (HasAdminlimit) hash ^= Adminlimit.GetHashCode();
      if (HasLevel) hash ^= Level.GetHashCode();
      if (HasNextLevelDiscount) hash ^= NextLevelDiscount.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (HasConvert) {
        output.WriteRawTag(24);
        output.WriteInt32(Convert);
      }
      if (HasNumlimit) {
        output.WriteRawTag(32);
        output.WriteInt32(Numlimit);
      }
      if (HasAdminlimit) {
        output.WriteRawTag(40);
        output.WriteInt32(Adminlimit);
      }
      if (HasLevel) {
        output.WriteRawTag(48);
        output.WriteInt32(Level);
      }
      if (HasNextLevelDiscount) {
        output.WriteRawTag(56);
        output.WriteInt32(NextLevelDiscount);
      }
      if (HasType) {
        output.WriteRawTag(64);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (HasConvert) {
        output.WriteRawTag(24);
        output.WriteInt32(Convert);
      }
      if (HasNumlimit) {
        output.WriteRawTag(32);
        output.WriteInt32(Numlimit);
      }
      if (HasAdminlimit) {
        output.WriteRawTag(40);
        output.WriteInt32(Adminlimit);
      }
      if (HasLevel) {
        output.WriteRawTag(48);
        output.WriteInt32(Level);
      }
      if (HasNextLevelDiscount) {
        output.WriteRawTag(56);
        output.WriteInt32(NextLevelDiscount);
      }
      if (HasType) {
        output.WriteRawTag(64);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasConvert) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Convert);
      }
      if (HasNumlimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Numlimit);
      }
      if (HasAdminlimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Adminlimit);
      }
      if (HasLevel) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (HasNextLevelDiscount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NextLevelDiscount);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubUpgradeRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasConvert) {
        Convert = other.Convert;
      }
      if (other.HasNumlimit) {
        Numlimit = other.Numlimit;
      }
      if (other.HasAdminlimit) {
        Adminlimit = other.Adminlimit;
      }
      if (other.HasLevel) {
        Level = other.Level;
      }
      if (other.HasNextLevelDiscount) {
        NextLevelDiscount = other.NextLevelDiscount;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
          case 24: {
            Convert = input.ReadInt32();
            break;
          }
          case 32: {
            Numlimit = input.ReadInt32();
            break;
          }
          case 40: {
            Adminlimit = input.ReadInt32();
            break;
          }
          case 48: {
            Level = input.ReadInt32();
            break;
          }
          case 56: {
            NextLevelDiscount = input.ReadInt32();
            break;
          }
          case 64: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
          case 24: {
            Convert = input.ReadInt32();
            break;
          }
          case 32: {
            Numlimit = input.ReadInt32();
            break;
          }
          case 40: {
            Adminlimit = input.ReadInt32();
            break;
          }
          case 48: {
            Level = input.ReadInt32();
            break;
          }
          case 56: {
            NextLevelDiscount = input.ReadInt32();
            break;
          }
          case 64: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubSetRoleREQ : pb::IMessage<ClubSetRoleREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubSetRoleREQ> _parser = new pb::MessageParser<ClubSetRoleREQ>(() => new ClubSetRoleREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubSetRoleREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubSetRoleREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubSetRoleREQ(ClubSetRoleREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      uid_ = other.uid_;
      role_ = other.role_;
      authorityDetail_ = other.authorityDetail_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubSetRoleREQ Clone() {
      return new ClubSetRoleREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static string UidDefaultValue = "";

    private string uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_ ?? UidDefaultValue; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return uid_ != null; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      uid_ = null;
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 3;
    private readonly static int RoleDefaultValue = 0;

    private int role_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Role {
      get { if ((_hasBits0 & 1) != 0) { return role_; } else { return RoleDefaultValue; } }
      set {
        _hasBits0 |= 1;
        role_ = value;
      }
    }
    /// <summary>Gets whether the "role" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRole {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "role" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRole() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "authority_detail" field.</summary>
    public const int AuthorityDetailFieldNumber = 4;
    private readonly static int AuthorityDetailDefaultValue = 0;

    private int authorityDetail_;
    /// <summary>
    ///对于被设置的用户为管理员时，需要设置默认权限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AuthorityDetail {
      get { if ((_hasBits0 & 2) != 0) { return authorityDetail_; } else { return AuthorityDetailDefaultValue; } }
      set {
        _hasBits0 |= 2;
        authorityDetail_ = value;
      }
    }
    /// <summary>Gets whether the "authority_detail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAuthorityDetail {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "authority_detail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAuthorityDetail() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubSetRoleREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubSetRoleREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Uid != other.Uid) return false;
      if (Role != other.Role) return false;
      if (AuthorityDetail != other.AuthorityDetail) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasRole) hash ^= Role.GetHashCode();
      if (HasAuthorityDetail) hash ^= AuthorityDetail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasUid) {
        output.WriteRawTag(18);
        output.WriteString(Uid);
      }
      if (HasRole) {
        output.WriteRawTag(24);
        output.WriteInt32(Role);
      }
      if (HasAuthorityDetail) {
        output.WriteRawTag(32);
        output.WriteInt32(AuthorityDetail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasUid) {
        output.WriteRawTag(18);
        output.WriteString(Uid);
      }
      if (HasRole) {
        output.WriteRawTag(24);
        output.WriteInt32(Role);
      }
      if (HasAuthorityDetail) {
        output.WriteRawTag(32);
        output.WriteInt32(AuthorityDetail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (HasRole) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Role);
      }
      if (HasAuthorityDetail) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AuthorityDetail);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubSetRoleREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasRole) {
        Role = other.Role;
      }
      if (other.HasAuthorityDetail) {
        AuthorityDetail = other.AuthorityDetail;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 18: {
            Uid = input.ReadString();
            break;
          }
          case 24: {
            Role = input.ReadInt32();
            break;
          }
          case 32: {
            AuthorityDetail = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 18: {
            Uid = input.ReadString();
            break;
          }
          case 24: {
            Role = input.ReadInt32();
            break;
          }
          case 32: {
            AuthorityDetail = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubSetRoleRSP : pb::IMessage<ClubSetRoleRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubSetRoleRSP> _parser = new pb::MessageParser<ClubSetRoleRSP>(() => new ClubSetRoleRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubSetRoleRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubSetRoleRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubSetRoleRSP(ClubSetRoleRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      clubid_ = other.clubid_;
      role_ = other.role_;
      uid_ = other.uid_;
      authorityDetail_ = other.authorityDetail_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubSetRoleRSP Clone() {
      return new ClubSetRoleRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// -1 设置管理员超过上限    -2 设置的uid不合法
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 2;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    /// <summary>
    /// -3 无法设置为管理员    -4 设置者不合法    -5 数据库错误 -6 没有权限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 3;
    private readonly static int RoleDefaultValue = 0;

    private int role_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Role {
      get { if ((_hasBits0 & 2) != 0) { return role_; } else { return RoleDefaultValue; } }
      set {
        _hasBits0 |= 2;
        role_ = value;
      }
    }
    /// <summary>Gets whether the "role" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRole {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "role" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRole() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 4;
    private readonly static string UidDefaultValue = "";

    private string uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_ ?? UidDefaultValue; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return uid_ != null; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      uid_ = null;
    }

    /// <summary>Field number for the "authority_detail" field.</summary>
    public const int AuthorityDetailFieldNumber = 5;
    private readonly static int AuthorityDetailDefaultValue = 0;

    private int authorityDetail_;
    /// <summary>
    ///role为管理员时使用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AuthorityDetail {
      get { if ((_hasBits0 & 4) != 0) { return authorityDetail_; } else { return AuthorityDetailDefaultValue; } }
      set {
        _hasBits0 |= 4;
        authorityDetail_ = value;
      }
    }
    /// <summary>Gets whether the "authority_detail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAuthorityDetail {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "authority_detail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAuthorityDetail() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubSetRoleRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubSetRoleRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Clubid != other.Clubid) return false;
      if (Role != other.Role) return false;
      if (Uid != other.Uid) return false;
      if (AuthorityDetail != other.AuthorityDetail) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasRole) hash ^= Role.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasAuthorityDetail) hash ^= AuthorityDetail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (HasRole) {
        output.WriteRawTag(24);
        output.WriteInt32(Role);
      }
      if (HasUid) {
        output.WriteRawTag(34);
        output.WriteString(Uid);
      }
      if (HasAuthorityDetail) {
        output.WriteRawTag(40);
        output.WriteInt32(AuthorityDetail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (HasRole) {
        output.WriteRawTag(24);
        output.WriteInt32(Role);
      }
      if (HasUid) {
        output.WriteRawTag(34);
        output.WriteString(Uid);
      }
      if (HasAuthorityDetail) {
        output.WriteRawTag(40);
        output.WriteInt32(AuthorityDetail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasRole) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Role);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (HasAuthorityDetail) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AuthorityDetail);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubSetRoleRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasRole) {
        Role = other.Role;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasAuthorityDetail) {
        AuthorityDetail = other.AuthorityDetail;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
          case 24: {
            Role = input.ReadInt32();
            break;
          }
          case 34: {
            Uid = input.ReadString();
            break;
          }
          case 40: {
            AuthorityDetail = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
          case 24: {
            Role = input.ReadInt32();
            break;
          }
          case 34: {
            Uid = input.ReadString();
            break;
          }
          case 40: {
            AuthorityDetail = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetBlackboardREQ : pb::IMessage<SetBlackboardREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetBlackboardREQ> _parser = new pb::MessageParser<SetBlackboardREQ>(() => new SetBlackboardREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetBlackboardREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetBlackboardREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetBlackboardREQ(SetBlackboardREQ other) : this() {
      clubid_ = other.clubid_;
      blackboard_ = other.blackboard_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetBlackboardREQ Clone() {
      return new SetBlackboardREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "blackboard" field.</summary>
    public const int BlackboardFieldNumber = 2;
    private readonly static string BlackboardDefaultValue = "";

    private string blackboard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Blackboard {
      get { return blackboard_ ?? BlackboardDefaultValue; }
      set {
        blackboard_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "blackboard" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlackboard {
      get { return blackboard_ != null; }
    }
    /// <summary>Clears the value of the "blackboard" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlackboard() {
      blackboard_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetBlackboardREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetBlackboardREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Blackboard != other.Blackboard) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasBlackboard) hash ^= Blackboard.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasBlackboard) {
        output.WriteRawTag(18);
        output.WriteString(Blackboard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasBlackboard) {
        output.WriteRawTag(18);
        output.WriteString(Blackboard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasBlackboard) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Blackboard);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetBlackboardREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasBlackboard) {
        Blackboard = other.Blackboard;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 18: {
            Blackboard = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 18: {
            Blackboard = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetBlackboardRSP : pb::IMessage<SetBlackboardRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetBlackboardRSP> _parser = new pb::MessageParser<SetBlackboardRSP>(() => new SetBlackboardRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetBlackboardRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetBlackboardRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetBlackboardRSP(SetBlackboardRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      clubid_ = other.clubid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetBlackboardRSP Clone() {
      return new SetBlackboardRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///-1 设置失败, -2 没有权限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 2;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetBlackboardRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetBlackboardRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Clubid != other.Clubid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetBlackboardRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PPCoinFlowREQ : pb::IMessage<PPCoinFlowREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PPCoinFlowREQ> _parser = new pb::MessageParser<PPCoinFlowREQ>(() => new PPCoinFlowREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PPCoinFlowREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PPCoinFlowREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PPCoinFlowREQ(PPCoinFlowREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      type_ = other.type_;
      leagueid_ = other.leagueid_;
      agentUid_ = other.agentUid_;
      retransIndex_ = other.retransIndex_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PPCoinFlowREQ Clone() {
      return new PPCoinFlowREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    /// 1 俱乐部流水   0 玩家流水  2代理被授信流水 3代理的玩家流水
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 3;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 2) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "agent_uid" field.</summary>
    public const int AgentUidFieldNumber = 4;
    private readonly static long AgentUidDefaultValue = 0L;

    private long agentUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AgentUid {
      get { if ((_hasBits0 & 4) != 0) { return agentUid_; } else { return AgentUidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        agentUid_ = value;
      }
    }
    /// <summary>Gets whether the "agent_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgentUid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "agent_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgentUid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "retrans_index" field.</summary>
    public const int RetransIndexFieldNumber = 5;
    private readonly static int RetransIndexDefaultValue = 0;

    private int retransIndex_;
    /// <summary>
    ///重传的下标，0表示非重传请求
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RetransIndex {
      get { if ((_hasBits0 & 8) != 0) { return retransIndex_; } else { return RetransIndexDefaultValue; } }
      set {
        _hasBits0 |= 8;
        retransIndex_ = value;
      }
    }
    /// <summary>Gets whether the "retrans_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRetransIndex {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "retrans_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRetransIndex() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 6;
    private readonly static int AmountDefaultValue = 0;

    private int amount_;
    /// <summary>
    ///单个包数据量的大小，0表示不拆包
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Amount {
      get { if ((_hasBits0 & 16) != 0) { return amount_; } else { return AmountDefaultValue; } }
      set {
        _hasBits0 |= 16;
        amount_ = value;
      }
    }
    /// <summary>Gets whether the "amount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAmount {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "amount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAmount() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PPCoinFlowREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PPCoinFlowREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Type != other.Type) return false;
      if (Leagueid != other.Leagueid) return false;
      if (AgentUid != other.AgentUid) return false;
      if (RetransIndex != other.RetransIndex) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasAgentUid) hash ^= AgentUid.GetHashCode();
      if (HasRetransIndex) hash ^= RetransIndex.GetHashCode();
      if (HasAmount) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (HasLeagueid) {
        output.WriteRawTag(24);
        output.WriteInt32(Leagueid);
      }
      if (HasAgentUid) {
        output.WriteRawTag(32);
        output.WriteInt64(AgentUid);
      }
      if (HasRetransIndex) {
        output.WriteRawTag(40);
        output.WriteInt32(RetransIndex);
      }
      if (HasAmount) {
        output.WriteRawTag(48);
        output.WriteInt32(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (HasLeagueid) {
        output.WriteRawTag(24);
        output.WriteInt32(Leagueid);
      }
      if (HasAgentUid) {
        output.WriteRawTag(32);
        output.WriteInt64(AgentUid);
      }
      if (HasRetransIndex) {
        output.WriteRawTag(40);
        output.WriteInt32(RetransIndex);
      }
      if (HasAmount) {
        output.WriteRawTag(48);
        output.WriteInt32(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasAgentUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AgentUid);
      }
      if (HasRetransIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RetransIndex);
      }
      if (HasAmount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PPCoinFlowREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasAgentUid) {
        AgentUid = other.AgentUid;
      }
      if (other.HasRetransIndex) {
        RetransIndex = other.RetransIndex;
      }
      if (other.HasAmount) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 24: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 32: {
            AgentUid = input.ReadInt64();
            break;
          }
          case 40: {
            RetransIndex = input.ReadInt32();
            break;
          }
          case 48: {
            Amount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 24: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 32: {
            AgentUid = input.ReadInt64();
            break;
          }
          case 40: {
            RetransIndex = input.ReadInt32();
            break;
          }
          case 48: {
            Amount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PPCoinFlowInfo : pb::IMessage<PPCoinFlowInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PPCoinFlowInfo> _parser = new pb::MessageParser<PPCoinFlowInfo>(() => new PPCoinFlowInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PPCoinFlowInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PPCoinFlowInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PPCoinFlowInfo(PPCoinFlowInfo other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      name_ = other.name_;
      icon_ = other.icon_;
      time_ = other.time_;
      ppcoin_ = other.ppcoin_;
      fromUid_ = other.fromUid_;
      fromName_ = other.fromName_;
      read_ = other.read_;
      flowType_ = other.flowType_;
      sendRole_ = other.sendRole_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PPCoinFlowInfo Clone() {
      return new PPCoinFlowInfo(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static string UidDefaultValue = "";

    private string uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_ ?? UidDefaultValue; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return uid_ != null; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      uid_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 3;
    private readonly static string IconDefaultValue = "";

    private string icon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_ ?? IconDefaultValue; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIcon {
      get { return icon_ != null; }
    }
    /// <summary>Clears the value of the "icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIcon() {
      icon_ = null;
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 4;
    private readonly static int TimeDefaultValue = 0;

    private int time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Time {
      get { if ((_hasBits0 & 1) != 0) { return time_; } else { return TimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        time_ = value;
      }
    }
    /// <summary>Gets whether the "time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTime() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "ppcoin" field.</summary>
    public const int PpcoinFieldNumber = 5;
    private readonly static long PpcoinDefaultValue = 0L;

    private long ppcoin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Ppcoin {
      get { if ((_hasBits0 & 2) != 0) { return ppcoin_; } else { return PpcoinDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ppcoin_ = value;
      }
    }
    /// <summary>Gets whether the "ppcoin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpcoin {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ppcoin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpcoin() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "from_uid" field.</summary>
    public const int FromUidFieldNumber = 6;
    private readonly static long FromUidDefaultValue = 0L;

    private long fromUid_;
    /// <summary>
    /// 为0 的话 表示系统发放 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FromUid {
      get { if ((_hasBits0 & 4) != 0) { return fromUid_; } else { return FromUidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        fromUid_ = value;
      }
    }
    /// <summary>Gets whether the "from_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFromUid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "from_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFromUid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "from_name" field.</summary>
    public const int FromNameFieldNumber = 7;
    private readonly static string FromNameDefaultValue = "";

    private string fromName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FromName {
      get { return fromName_ ?? FromNameDefaultValue; }
      set {
        fromName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "from_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFromName {
      get { return fromName_ != null; }
    }
    /// <summary>Clears the value of the "from_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFromName() {
      fromName_ = null;
    }

    /// <summary>Field number for the "read" field.</summary>
    public const int ReadFieldNumber = 8;
    private readonly static bool ReadDefaultValue = false;

    private bool read_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Read {
      get { if ((_hasBits0 & 8) != 0) { return read_; } else { return ReadDefaultValue; } }
      set {
        _hasBits0 |= 8;
        read_ = value;
      }
    }
    /// <summary>Gets whether the "read" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRead {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "read" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRead() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "flow_type" field.</summary>
    public const int FlowTypeFieldNumber = 9;
    private readonly static global::Texas.Protocol.ClubChipsFlowType FlowTypeDefaultValue = global::Texas.Protocol.ClubChipsFlowType.FlowTypeChips;

    private global::Texas.Protocol.ClubChipsFlowType flowType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.ClubChipsFlowType FlowType {
      get { if ((_hasBits0 & 16) != 0) { return flowType_; } else { return FlowTypeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        flowType_ = value;
      }
    }
    /// <summary>Gets whether the "flow_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFlowType {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "flow_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFlowType() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "send_role" field.</summary>
    public const int SendRoleFieldNumber = 10;
    private readonly static int SendRoleDefaultValue = 0;

    private int sendRole_;
    /// <summary>
    ///系统发放时  send_role为0 // 1 创始人  2 管理员  5 二级管理员 10 普通会员   20 非会员
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SendRole {
      get { if ((_hasBits0 & 32) != 0) { return sendRole_; } else { return SendRoleDefaultValue; } }
      set {
        _hasBits0 |= 32;
        sendRole_ = value;
      }
    }
    /// <summary>Gets whether the "send_role" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSendRole {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "send_role" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSendRole() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PPCoinFlowInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PPCoinFlowInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Name != other.Name) return false;
      if (Icon != other.Icon) return false;
      if (Time != other.Time) return false;
      if (Ppcoin != other.Ppcoin) return false;
      if (FromUid != other.FromUid) return false;
      if (FromName != other.FromName) return false;
      if (Read != other.Read) return false;
      if (FlowType != other.FlowType) return false;
      if (SendRole != other.SendRole) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasIcon) hash ^= Icon.GetHashCode();
      if (HasTime) hash ^= Time.GetHashCode();
      if (HasPpcoin) hash ^= Ppcoin.GetHashCode();
      if (HasFromUid) hash ^= FromUid.GetHashCode();
      if (HasFromName) hash ^= FromName.GetHashCode();
      if (HasRead) hash ^= Read.GetHashCode();
      if (HasFlowType) hash ^= FlowType.GetHashCode();
      if (HasSendRole) hash ^= SendRole.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasIcon) {
        output.WriteRawTag(26);
        output.WriteString(Icon);
      }
      if (HasTime) {
        output.WriteRawTag(32);
        output.WriteInt32(Time);
      }
      if (HasPpcoin) {
        output.WriteRawTag(40);
        output.WriteInt64(Ppcoin);
      }
      if (HasFromUid) {
        output.WriteRawTag(48);
        output.WriteInt64(FromUid);
      }
      if (HasFromName) {
        output.WriteRawTag(58);
        output.WriteString(FromName);
      }
      if (HasRead) {
        output.WriteRawTag(64);
        output.WriteBool(Read);
      }
      if (HasFlowType) {
        output.WriteRawTag(72);
        output.WriteEnum((int) FlowType);
      }
      if (HasSendRole) {
        output.WriteRawTag(80);
        output.WriteInt32(SendRole);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasIcon) {
        output.WriteRawTag(26);
        output.WriteString(Icon);
      }
      if (HasTime) {
        output.WriteRawTag(32);
        output.WriteInt32(Time);
      }
      if (HasPpcoin) {
        output.WriteRawTag(40);
        output.WriteInt64(Ppcoin);
      }
      if (HasFromUid) {
        output.WriteRawTag(48);
        output.WriteInt64(FromUid);
      }
      if (HasFromName) {
        output.WriteRawTag(58);
        output.WriteString(FromName);
      }
      if (HasRead) {
        output.WriteRawTag(64);
        output.WriteBool(Read);
      }
      if (HasFlowType) {
        output.WriteRawTag(72);
        output.WriteEnum((int) FlowType);
      }
      if (HasSendRole) {
        output.WriteRawTag(80);
        output.WriteInt32(SendRole);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasIcon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (HasTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (HasPpcoin) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Ppcoin);
      }
      if (HasFromUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FromUid);
      }
      if (HasFromName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FromName);
      }
      if (HasRead) {
        size += 1 + 1;
      }
      if (HasFlowType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FlowType);
      }
      if (HasSendRole) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendRole);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PPCoinFlowInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasIcon) {
        Icon = other.Icon;
      }
      if (other.HasTime) {
        Time = other.Time;
      }
      if (other.HasPpcoin) {
        Ppcoin = other.Ppcoin;
      }
      if (other.HasFromUid) {
        FromUid = other.FromUid;
      }
      if (other.HasFromName) {
        FromName = other.FromName;
      }
      if (other.HasRead) {
        Read = other.Read;
      }
      if (other.HasFlowType) {
        FlowType = other.FlowType;
      }
      if (other.HasSendRole) {
        SendRole = other.SendRole;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Icon = input.ReadString();
            break;
          }
          case 32: {
            Time = input.ReadInt32();
            break;
          }
          case 40: {
            Ppcoin = input.ReadInt64();
            break;
          }
          case 48: {
            FromUid = input.ReadInt64();
            break;
          }
          case 58: {
            FromName = input.ReadString();
            break;
          }
          case 64: {
            Read = input.ReadBool();
            break;
          }
          case 72: {
            FlowType = (global::Texas.Protocol.ClubChipsFlowType) input.ReadEnum();
            break;
          }
          case 80: {
            SendRole = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Icon = input.ReadString();
            break;
          }
          case 32: {
            Time = input.ReadInt32();
            break;
          }
          case 40: {
            Ppcoin = input.ReadInt64();
            break;
          }
          case 48: {
            FromUid = input.ReadInt64();
            break;
          }
          case 58: {
            FromName = input.ReadString();
            break;
          }
          case 64: {
            Read = input.ReadBool();
            break;
          }
          case 72: {
            FlowType = (global::Texas.Protocol.ClubChipsFlowType) input.ReadEnum();
            break;
          }
          case 80: {
            SendRole = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PPCoinFlowRSP : pb::IMessage<PPCoinFlowRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PPCoinFlowRSP> _parser = new pb::MessageParser<PPCoinFlowRSP>(() => new PPCoinFlowRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PPCoinFlowRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PPCoinFlowRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PPCoinFlowRSP(PPCoinFlowRSP other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      info_ = other.info_.Clone();
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      agentUid_ = other.agentUid_;
      totalPacketNum_ = other.totalPacketNum_;
      packetIndex_ = other.packetIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PPCoinFlowRSP Clone() {
      return new PPCoinFlowRSP(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Texas.Protocol.PPCoinFlowInfo> _repeated_info_codec
        = pb::FieldCodec.ForMessage(18, global::Texas.Protocol.PPCoinFlowInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.PPCoinFlowInfo> info_ = new pbc::RepeatedField<global::Texas.Protocol.PPCoinFlowInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.PPCoinFlowInfo> Info {
      get { return info_; }
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 3;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 4;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 2) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "agent_uid" field.</summary>
    public const int AgentUidFieldNumber = 5;
    private readonly static long AgentUidDefaultValue = 0L;

    private long agentUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AgentUid {
      get { if ((_hasBits0 & 4) != 0) { return agentUid_; } else { return AgentUidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        agentUid_ = value;
      }
    }
    /// <summary>Gets whether the "agent_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgentUid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "agent_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgentUid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "total_packet_num" field.</summary>
    public const int TotalPacketNumFieldNumber = 6;
    private readonly static int TotalPacketNumDefaultValue = 0;

    private int totalPacketNum_;
    /// <summary>
    ///总数据包拆成了多少个包下发，0表示非拆包传输
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalPacketNum {
      get { if ((_hasBits0 & 8) != 0) { return totalPacketNum_; } else { return TotalPacketNumDefaultValue; } }
      set {
        _hasBits0 |= 8;
        totalPacketNum_ = value;
      }
    }
    /// <summary>Gets whether the "total_packet_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalPacketNum {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "total_packet_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalPacketNum() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "packet_index" field.</summary>
    public const int PacketIndexFieldNumber = 7;
    private readonly static int PacketIndexDefaultValue = 0;

    private int packetIndex_;
    /// <summary>
    ///当前包的下标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PacketIndex {
      get { if ((_hasBits0 & 16) != 0) { return packetIndex_; } else { return PacketIndexDefaultValue; } }
      set {
        _hasBits0 |= 16;
        packetIndex_ = value;
      }
    }
    /// <summary>Gets whether the "packet_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPacketIndex {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "packet_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPacketIndex() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PPCoinFlowRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PPCoinFlowRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if(!info_.Equals(other.info_)) return false;
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (AgentUid != other.AgentUid) return false;
      if (TotalPacketNum != other.TotalPacketNum) return false;
      if (PacketIndex != other.PacketIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      hash ^= info_.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasAgentUid) hash ^= AgentUid.GetHashCode();
      if (HasTotalPacketNum) hash ^= TotalPacketNum.GetHashCode();
      if (HasPacketIndex) hash ^= PacketIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      info_.WriteTo(output, _repeated_info_codec);
      if (HasClubid) {
        output.WriteRawTag(26);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(32);
        output.WriteInt32(Leagueid);
      }
      if (HasAgentUid) {
        output.WriteRawTag(40);
        output.WriteInt64(AgentUid);
      }
      if (HasTotalPacketNum) {
        output.WriteRawTag(48);
        output.WriteInt32(TotalPacketNum);
      }
      if (HasPacketIndex) {
        output.WriteRawTag(56);
        output.WriteInt32(PacketIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      info_.WriteTo(ref output, _repeated_info_codec);
      if (HasClubid) {
        output.WriteRawTag(26);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(32);
        output.WriteInt32(Leagueid);
      }
      if (HasAgentUid) {
        output.WriteRawTag(40);
        output.WriteInt64(AgentUid);
      }
      if (HasTotalPacketNum) {
        output.WriteRawTag(48);
        output.WriteInt32(TotalPacketNum);
      }
      if (HasPacketIndex) {
        output.WriteRawTag(56);
        output.WriteInt32(PacketIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      size += info_.CalculateSize(_repeated_info_codec);
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasAgentUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AgentUid);
      }
      if (HasTotalPacketNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPacketNum);
      }
      if (HasPacketIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PacketIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PPCoinFlowRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      info_.Add(other.info_);
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasAgentUid) {
        AgentUid = other.AgentUid;
      }
      if (other.HasTotalPacketNum) {
        TotalPacketNum = other.TotalPacketNum;
      }
      if (other.HasPacketIndex) {
        PacketIndex = other.PacketIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
          case 26: {
            Clubid = input.ReadString();
            break;
          }
          case 32: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 40: {
            AgentUid = input.ReadInt64();
            break;
          }
          case 48: {
            TotalPacketNum = input.ReadInt32();
            break;
          }
          case 56: {
            PacketIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
          case 26: {
            Clubid = input.ReadString();
            break;
          }
          case 32: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 40: {
            AgentUid = input.ReadInt64();
            break;
          }
          case 48: {
            TotalPacketNum = input.ReadInt32();
            break;
          }
          case 56: {
            PacketIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubAgentRakeBackSetREQ : pb::IMessage<ClubAgentRakeBackSetREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubAgentRakeBackSetREQ> _parser = new pb::MessageParser<ClubAgentRakeBackSetREQ>(() => new ClubAgentRakeBackSetREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubAgentRakeBackSetREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAgentRakeBackSetREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAgentRakeBackSetREQ(ClubAgentRakeBackSetREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      agentUid_ = other.agentUid_;
      rakeback_ = other.rakeback_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAgentRakeBackSetREQ Clone() {
      return new ClubAgentRakeBackSetREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "agent_uid" field.</summary>
    public const int AgentUidFieldNumber = 2;
    private readonly static long AgentUidDefaultValue = 0L;

    private long agentUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AgentUid {
      get { if ((_hasBits0 & 1) != 0) { return agentUid_; } else { return AgentUidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        agentUid_ = value;
      }
    }
    /// <summary>Gets whether the "agent_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgentUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "agent_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgentUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "rakeback" field.</summary>
    public const int RakebackFieldNumber = 3;
    private readonly static int RakebackDefaultValue = 0;

    private int rakeback_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rakeback {
      get { if ((_hasBits0 & 2) != 0) { return rakeback_; } else { return RakebackDefaultValue; } }
      set {
        _hasBits0 |= 2;
        rakeback_ = value;
      }
    }
    /// <summary>Gets whether the "rakeback" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRakeback {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "rakeback" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRakeback() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubAgentRakeBackSetREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubAgentRakeBackSetREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (AgentUid != other.AgentUid) return false;
      if (Rakeback != other.Rakeback) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasAgentUid) hash ^= AgentUid.GetHashCode();
      if (HasRakeback) hash ^= Rakeback.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasAgentUid) {
        output.WriteRawTag(16);
        output.WriteInt64(AgentUid);
      }
      if (HasRakeback) {
        output.WriteRawTag(24);
        output.WriteInt32(Rakeback);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasAgentUid) {
        output.WriteRawTag(16);
        output.WriteInt64(AgentUid);
      }
      if (HasRakeback) {
        output.WriteRawTag(24);
        output.WriteInt32(Rakeback);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasAgentUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AgentUid);
      }
      if (HasRakeback) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rakeback);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubAgentRakeBackSetREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasAgentUid) {
        AgentUid = other.AgentUid;
      }
      if (other.HasRakeback) {
        Rakeback = other.Rakeback;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            AgentUid = input.ReadInt64();
            break;
          }
          case 24: {
            Rakeback = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            AgentUid = input.ReadInt64();
            break;
          }
          case 24: {
            Rakeback = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubAgentRakeBackSetRSP : pb::IMessage<ClubAgentRakeBackSetRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubAgentRakeBackSetRSP> _parser = new pb::MessageParser<ClubAgentRakeBackSetRSP>(() => new ClubAgentRakeBackSetRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubAgentRakeBackSetRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAgentRakeBackSetRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAgentRakeBackSetRSP(ClubAgentRakeBackSetRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      agentUid_ = other.agentUid_;
      rakeback_ = other.rakeback_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAgentRakeBackSetRSP Clone() {
      return new ClubAgentRakeBackSetRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "agent_uid" field.</summary>
    public const int AgentUidFieldNumber = 2;
    private readonly static long AgentUidDefaultValue = 0L;

    private long agentUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AgentUid {
      get { if ((_hasBits0 & 2) != 0) { return agentUid_; } else { return AgentUidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        agentUid_ = value;
      }
    }
    /// <summary>Gets whether the "agent_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgentUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "agent_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgentUid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "rakeback" field.</summary>
    public const int RakebackFieldNumber = 3;
    private readonly static int RakebackDefaultValue = 0;

    private int rakeback_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rakeback {
      get { if ((_hasBits0 & 4) != 0) { return rakeback_; } else { return RakebackDefaultValue; } }
      set {
        _hasBits0 |= 4;
        rakeback_ = value;
      }
    }
    /// <summary>Gets whether the "rakeback" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRakeback {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "rakeback" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRakeback() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubAgentRakeBackSetRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubAgentRakeBackSetRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (AgentUid != other.AgentUid) return false;
      if (Rakeback != other.Rakeback) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasAgentUid) hash ^= AgentUid.GetHashCode();
      if (HasRakeback) hash ^= Rakeback.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasAgentUid) {
        output.WriteRawTag(16);
        output.WriteInt64(AgentUid);
      }
      if (HasRakeback) {
        output.WriteRawTag(24);
        output.WriteInt32(Rakeback);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasAgentUid) {
        output.WriteRawTag(16);
        output.WriteInt64(AgentUid);
      }
      if (HasRakeback) {
        output.WriteRawTag(24);
        output.WriteInt32(Rakeback);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasAgentUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AgentUid);
      }
      if (HasRakeback) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rakeback);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubAgentRakeBackSetRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasAgentUid) {
        AgentUid = other.AgentUid;
      }
      if (other.HasRakeback) {
        Rakeback = other.Rakeback;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            AgentUid = input.ReadInt64();
            break;
          }
          case 24: {
            Rakeback = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            AgentUid = input.ReadInt64();
            break;
          }
          case 24: {
            Rakeback = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class feeReturnInfo : pb::IMessage<feeReturnInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<feeReturnInfo> _parser = new pb::MessageParser<feeReturnInfo>(() => new feeReturnInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<feeReturnInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public feeReturnInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public feeReturnInfo(feeReturnInfo other) : this() {
      _hasBits0 = other._hasBits0;
      startTs_ = other.startTs_;
      feeReturn_ = other.feeReturn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public feeReturnInfo Clone() {
      return new feeReturnInfo(this);
    }

    /// <summary>Field number for the "start_ts" field.</summary>
    public const int StartTsFieldNumber = 1;
    private readonly static long StartTsDefaultValue = 0L;

    private long startTs_;
    /// <summary>
    ///起始時間
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartTs {
      get { if ((_hasBits0 & 1) != 0) { return startTs_; } else { return StartTsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        startTs_ = value;
      }
    }
    /// <summary>Gets whether the "start_ts" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartTs {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "start_ts" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartTs() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "fee_return" field.</summary>
    public const int FeeReturnFieldNumber = 2;
    private readonly static long FeeReturnDefaultValue = 0L;

    private long feeReturn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FeeReturn {
      get { if ((_hasBits0 & 2) != 0) { return feeReturn_; } else { return FeeReturnDefaultValue; } }
      set {
        _hasBits0 |= 2;
        feeReturn_ = value;
      }
    }
    /// <summary>Gets whether the "fee_return" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFeeReturn {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "fee_return" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFeeReturn() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as feeReturnInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(feeReturnInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartTs != other.StartTs) return false;
      if (FeeReturn != other.FeeReturn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStartTs) hash ^= StartTs.GetHashCode();
      if (HasFeeReturn) hash ^= FeeReturn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasStartTs) {
        output.WriteRawTag(8);
        output.WriteInt64(StartTs);
      }
      if (HasFeeReturn) {
        output.WriteRawTag(16);
        output.WriteInt64(FeeReturn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasStartTs) {
        output.WriteRawTag(8);
        output.WriteInt64(StartTs);
      }
      if (HasFeeReturn) {
        output.WriteRawTag(16);
        output.WriteInt64(FeeReturn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasStartTs) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTs);
      }
      if (HasFeeReturn) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FeeReturn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(feeReturnInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasStartTs) {
        StartTs = other.StartTs;
      }
      if (other.HasFeeReturn) {
        FeeReturn = other.FeeReturn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartTs = input.ReadInt64();
            break;
          }
          case 16: {
            FeeReturn = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StartTs = input.ReadInt64();
            break;
          }
          case 16: {
            FeeReturn = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubAgentRakeBackFlowREQ : pb::IMessage<ClubAgentRakeBackFlowREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubAgentRakeBackFlowREQ> _parser = new pb::MessageParser<ClubAgentRakeBackFlowREQ>(() => new ClubAgentRakeBackFlowREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubAgentRakeBackFlowREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAgentRakeBackFlowREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAgentRakeBackFlowREQ(ClubAgentRakeBackFlowREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      agentUid_ = other.agentUid_;
      startTs_ = other.startTs_;
      endTs_ = other.endTs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAgentRakeBackFlowREQ Clone() {
      return new ClubAgentRakeBackFlowREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 2;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 1) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "agent_uid" field.</summary>
    public const int AgentUidFieldNumber = 3;
    private readonly static long AgentUidDefaultValue = 0L;

    private long agentUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AgentUid {
      get { if ((_hasBits0 & 2) != 0) { return agentUid_; } else { return AgentUidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        agentUid_ = value;
      }
    }
    /// <summary>Gets whether the "agent_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAgentUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "agent_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAgentUid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "start_ts" field.</summary>
    public const int StartTsFieldNumber = 4;
    private readonly static long StartTsDefaultValue = 0L;

    private long startTs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartTs {
      get { if ((_hasBits0 & 4) != 0) { return startTs_; } else { return StartTsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        startTs_ = value;
      }
    }
    /// <summary>Gets whether the "start_ts" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartTs {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "start_ts" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartTs() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "end_ts" field.</summary>
    public const int EndTsFieldNumber = 5;
    private readonly static long EndTsDefaultValue = 0L;

    private long endTs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndTs {
      get { if ((_hasBits0 & 8) != 0) { return endTs_; } else { return EndTsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        endTs_ = value;
      }
    }
    /// <summary>Gets whether the "end_ts" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndTs {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "end_ts" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndTs() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubAgentRakeBackFlowREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubAgentRakeBackFlowREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (AgentUid != other.AgentUid) return false;
      if (StartTs != other.StartTs) return false;
      if (EndTs != other.EndTs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasAgentUid) hash ^= AgentUid.GetHashCode();
      if (HasStartTs) hash ^= StartTs.GetHashCode();
      if (HasEndTs) hash ^= EndTs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasAgentUid) {
        output.WriteRawTag(24);
        output.WriteInt64(AgentUid);
      }
      if (HasStartTs) {
        output.WriteRawTag(32);
        output.WriteInt64(StartTs);
      }
      if (HasEndTs) {
        output.WriteRawTag(40);
        output.WriteInt64(EndTs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasAgentUid) {
        output.WriteRawTag(24);
        output.WriteInt64(AgentUid);
      }
      if (HasStartTs) {
        output.WriteRawTag(32);
        output.WriteInt64(StartTs);
      }
      if (HasEndTs) {
        output.WriteRawTag(40);
        output.WriteInt64(EndTs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasAgentUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AgentUid);
      }
      if (HasStartTs) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTs);
      }
      if (HasEndTs) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubAgentRakeBackFlowREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasAgentUid) {
        AgentUid = other.AgentUid;
      }
      if (other.HasStartTs) {
        StartTs = other.StartTs;
      }
      if (other.HasEndTs) {
        EndTs = other.EndTs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            AgentUid = input.ReadInt64();
            break;
          }
          case 32: {
            StartTs = input.ReadInt64();
            break;
          }
          case 40: {
            EndTs = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            AgentUid = input.ReadInt64();
            break;
          }
          case 32: {
            StartTs = input.ReadInt64();
            break;
          }
          case 40: {
            EndTs = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClubAgentRakeBackFlowRSP : pb::IMessage<ClubAgentRakeBackFlowRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClubAgentRakeBackFlowRSP> _parser = new pb::MessageParser<ClubAgentRakeBackFlowRSP>(() => new ClubAgentRakeBackFlowRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClubAgentRakeBackFlowRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAgentRakeBackFlowRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAgentRakeBackFlowRSP(ClubAgentRakeBackFlowRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      rakeback_ = other.rakeback_;
      feeReturnInfo_ = other.feeReturnInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClubAgentRakeBackFlowRSP Clone() {
      return new ClubAgentRakeBackFlowRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "rakeback" field.</summary>
    public const int RakebackFieldNumber = 2;
    private readonly static int RakebackDefaultValue = 0;

    private int rakeback_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rakeback {
      get { if ((_hasBits0 & 2) != 0) { return rakeback_; } else { return RakebackDefaultValue; } }
      set {
        _hasBits0 |= 2;
        rakeback_ = value;
      }
    }
    /// <summary>Gets whether the "rakeback" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRakeback {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "rakeback" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRakeback() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "fee_return_info" field.</summary>
    public const int FeeReturnInfoFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Texas.Protocol.feeReturnInfo> _repeated_feeReturnInfo_codec
        = pb::FieldCodec.ForMessage(26, global::Texas.Protocol.feeReturnInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.feeReturnInfo> feeReturnInfo_ = new pbc::RepeatedField<global::Texas.Protocol.feeReturnInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.feeReturnInfo> FeeReturnInfo {
      get { return feeReturnInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClubAgentRakeBackFlowRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClubAgentRakeBackFlowRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Rakeback != other.Rakeback) return false;
      if(!feeReturnInfo_.Equals(other.feeReturnInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasRakeback) hash ^= Rakeback.GetHashCode();
      hash ^= feeReturnInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasRakeback) {
        output.WriteRawTag(16);
        output.WriteInt32(Rakeback);
      }
      feeReturnInfo_.WriteTo(output, _repeated_feeReturnInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasRakeback) {
        output.WriteRawTag(16);
        output.WriteInt32(Rakeback);
      }
      feeReturnInfo_.WriteTo(ref output, _repeated_feeReturnInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasRakeback) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rakeback);
      }
      size += feeReturnInfo_.CalculateSize(_repeated_feeReturnInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClubAgentRakeBackFlowRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasRakeback) {
        Rakeback = other.Rakeback;
      }
      feeReturnInfo_.Add(other.feeReturnInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Rakeback = input.ReadInt32();
            break;
          }
          case 26: {
            feeReturnInfo_.AddEntriesFrom(input, _repeated_feeReturnInfo_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Rakeback = input.ReadInt32();
            break;
          }
          case 26: {
            feeReturnInfo_.AddEntriesFrom(ref input, _repeated_feeReturnInfo_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CheckUserClubRoomREQ : pb::IMessage<CheckUserClubRoomREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CheckUserClubRoomREQ> _parser = new pb::MessageParser<CheckUserClubRoomREQ>(() => new CheckUserClubRoomREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CheckUserClubRoomREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CheckUserClubRoomREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CheckUserClubRoomREQ(CheckUserClubRoomREQ other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      clubid_ = other.clubid_;
      roomid_ = other.roomid_;
      gameMode_ = other.gameMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CheckUserClubRoomREQ Clone() {
      return new CheckUserClubRoomREQ(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    /// 0:進俱樂部時詢問, 1:開桌時詢問
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 2;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 3;
    private readonly static string RoomidDefaultValue = "";

    private string roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Roomid {
      get { return roomid_ ?? RoomidDefaultValue; }
      set {
        roomid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return roomid_ != null; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      roomid_ = null;
    }

    /// <summary>Field number for the "game_mode" field.</summary>
    public const int GameModeFieldNumber = 4;
    private readonly static int GameModeDefaultValue = 0;

    private int gameMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameMode {
      get { if ((_hasBits0 & 2) != 0) { return gameMode_; } else { return GameModeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        gameMode_ = value;
      }
    }
    /// <summary>Gets whether the "game_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameMode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "game_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameMode() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CheckUserClubRoomREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CheckUserClubRoomREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Clubid != other.Clubid) return false;
      if (Roomid != other.Roomid) return false;
      if (GameMode != other.GameMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasGameMode) hash ^= GameMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (HasRoomid) {
        output.WriteRawTag(26);
        output.WriteString(Roomid);
      }
      if (HasGameMode) {
        output.WriteRawTag(32);
        output.WriteInt32(GameMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (HasClubid) {
        output.WriteRawTag(18);
        output.WriteString(Clubid);
      }
      if (HasRoomid) {
        output.WriteRawTag(26);
        output.WriteString(Roomid);
      }
      if (HasGameMode) {
        output.WriteRawTag(32);
        output.WriteInt32(GameMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Roomid);
      }
      if (HasGameMode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CheckUserClubRoomREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasGameMode) {
        GameMode = other.GameMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
          case 26: {
            Roomid = input.ReadString();
            break;
          }
          case 32: {
            GameMode = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            Clubid = input.ReadString();
            break;
          }
          case 26: {
            Roomid = input.ReadString();
            break;
          }
          case 32: {
            GameMode = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CheckUserClubRoomRSP : pb::IMessage<CheckUserClubRoomRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CheckUserClubRoomRSP> _parser = new pb::MessageParser<CheckUserClubRoomRSP>(() => new CheckUserClubRoomRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CheckUserClubRoomRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.Club1Reflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CheckUserClubRoomRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CheckUserClubRoomRSP(CheckUserClubRoomRSP other) : this() {
      _hasBits0 = other._hasBits0;
      roomSize_ = other.roomSize_;
      roomid_ = other.roomid_;
      type_ = other.type_;
      clubid_ = other.clubid_;
      gameMode_ = other.gameMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CheckUserClubRoomRSP Clone() {
      return new CheckUserClubRoomRSP(this);
    }

    /// <summary>Field number for the "room_size" field.</summary>
    public const int RoomSizeFieldNumber = 1;
    private readonly static int RoomSizeDefaultValue = 0;

    private int roomSize_;
    /// <summary>
    /// 玩家現在開啟了幾張桌子 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoomSize {
      get { if ((_hasBits0 & 1) != 0) { return roomSize_; } else { return RoomSizeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomSize_ = value;
      }
    }
    /// <summary>Gets whether the "room_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomSize {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "room_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomSize() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 2;
    private readonly static string RoomidDefaultValue = "";

    private string roomid_;
    /// <summary>
    /// 玩家可返回的隨機一個 roomid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Roomid {
      get { return roomid_ ?? RoomidDefaultValue; }
      set {
        roomid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return roomid_ != null; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      roomid_ = null;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    /// 0:進俱樂部時詢問, 1:開桌時詢問
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 2) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 4;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "game_mode" field.</summary>
    public const int GameModeFieldNumber = 5;
    private readonly static int GameModeDefaultValue = 0;

    private int gameMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameMode {
      get { if ((_hasBits0 & 4) != 0) { return gameMode_; } else { return GameModeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        gameMode_ = value;
      }
    }
    /// <summary>Gets whether the "game_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameMode {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "game_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameMode() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CheckUserClubRoomRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CheckUserClubRoomRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomSize != other.RoomSize) return false;
      if (Roomid != other.Roomid) return false;
      if (Type != other.Type) return false;
      if (Clubid != other.Clubid) return false;
      if (GameMode != other.GameMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomSize) hash ^= RoomSize.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasGameMode) hash ^= GameMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomSize) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomSize);
      }
      if (HasRoomid) {
        output.WriteRawTag(18);
        output.WriteString(Roomid);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (HasClubid) {
        output.WriteRawTag(34);
        output.WriteString(Clubid);
      }
      if (HasGameMode) {
        output.WriteRawTag(40);
        output.WriteInt32(GameMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomSize) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomSize);
      }
      if (HasRoomid) {
        output.WriteRawTag(18);
        output.WriteString(Roomid);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (HasClubid) {
        output.WriteRawTag(34);
        output.WriteString(Clubid);
      }
      if (HasGameMode) {
        output.WriteRawTag(40);
        output.WriteInt32(GameMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomSize);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Roomid);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasGameMode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CheckUserClubRoomRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomSize) {
        RoomSize = other.RoomSize;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasGameMode) {
        GameMode = other.GameMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomSize = input.ReadInt32();
            break;
          }
          case 18: {
            Roomid = input.ReadString();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
          case 34: {
            Clubid = input.ReadString();
            break;
          }
          case 40: {
            GameMode = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoomSize = input.ReadInt32();
            break;
          }
          case 18: {
            Roomid = input.ReadString();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
          case 34: {
            Clubid = input.ReadString();
            break;
          }
          case 40: {
            GameMode = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
