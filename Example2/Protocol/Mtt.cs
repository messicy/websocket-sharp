// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mtt.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Texas.Protocol {

  /// <summary>Holder for reflection information generated from mtt.proto</summary>
  public static partial class MttReflection {

    #region Descriptor
    /// <summary>File descriptor for mtt.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MttReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgltdHQucHJvdG8aDnByZV9iYXNlLnByb3RvGgpiYXNlLnByb3RvGgptdHQx",
            "LnByb3RvIg8KDU10dFN5bkRlYWxCUkMiKwoNTXR0Tm9TdGFydEJSQxIRCgR0",
            "eXBlGAEgASgFSACIAQFCBwoFX3R5cGUiKgoMTXR0Tm90aWNlQlJDEhEKBHR5",
            "cGUYASABKAVIAIgBAUIHCgVfdHlwZSLoEAoHTXR0SXRlbRITCgZyb29taWQY",
            "ASABKAlIAIgBARIVCghwcmlvcml0eRgCIAEoBUgBiAEBEiAKE2VuZF9yZWJ1",
            "eV90aW1lc3RhbXAYAyABKANIAogBARIQCgNub3cYBCABKANIA4gBARIbCg5t",
            "dHRfc3RhcnRfdGltZRgFIAEoA0gEiAEBEhYKCWlzX2h1bnRlchgGIAEoCEgF",
            "iAEBEhEKBGNvc3QYByABKANIBogBARIWCglpdGVtX25hbWUYCCABKAlIB4gB",
            "ARITCgZ0ZW1waWQYCSABKAlICIgBARIWCgljYW5fcmVidXkYCiABKAhICYgB",
            "ARIWCgljYW5fYWRkb24YCyABKAhICogBARIdChB0b3RhbF9wbGF5ZXJfbnVt",
            "GAwgASgFSAuIAQESHwoSY3VycmVudF9wbGF5ZXJfbnVtGA0gASgFSAyIAQES",
            "FwoKbXR0X3N0YXR1cxgOIAEoBUgNiAEBEhwKD3N0YXJ0X3RpbWVzdGFtcBgP",
            "IAEoA0gOiAEBEh0KEHNpZ251cF90aW1lc3RhbXAYECABKANID4gBARIYCgtq",
            "b2luX3N0YXR1cxgRIAEoBUgQiAEBEhcKCmlzX3BsYXlpbmcYEiABKAhIEYgB",
            "ARIbCg5tYXhfcGxheWVyX251bRgTIAEoBUgSiAEBEiUKC3NpZ251cF90eXBl",
            "GBQgASgOMgsuU2lnbnVwVHlwZUgTiAEBEikKCWRlc2NfdHlwZRgVIAEoDjIR",
            "Lk9mZmljaWFsRGVzY1R5cGVIFIgBARIZCgxmaXhlZF9yZXdhcmQYFiABKAhI",
            "FYgBARIWCglpc19wbGF5ZWQYFyABKAhIFogBARIaCg1odW50ZXJfcmV3YXJk",
            "GBggASgDSBeIAQESKAoIbG9jYXRpb24YGSABKA4yES5PZmZpY2lhbExvY2F0",
            "aW9uSBiIAQESFAoHcmVidXlpbhgaIAEoA0gZiAEBEhgKC2FkZG9uX2J1eWlu",
            "GBsgASgDSBqIAQESGwoObGVmdF9yZWJ1eV9udW0YHCABKAVIG4gBARIXCg9w",
            "bGF0Zm9ybV9saW1pdHMYHSADKAkSMAoMcGVyY2VudF90eXBlGB4gASgOMhUu",
            "TXR0UmV3YXJkUGVyY2VudFR5cGVIHIgBARIvCg5nYW1lc2V0X3N0YXR1cxgf",
            "IAEoDjISLkdhbWVTZXRQbGF5U3RhdHVzSB2IAQESIwoNb2ZmaWNpYWxfdGFn",
            "cxggIAMoDjIMLk9mZmljaWFsVGFnEhoKDXNwZWNpYWxfb3JkZXIYISABKAVI",
            "HogBARIeChFzaXR0aW5nX291dF9sZXZlbBgiIAEoBUgfiAEBEiAKE2N1cnJl",
            "bnRfYmxpbmRfbGV2ZWwYIyABKAVIIIgBARIhCglyb29tX21vZGUYJCABKA4y",
            "CS5Sb29tTW9kZUghiAEBEiEKCWdhbWVfbW9kZRglIAEoDjIJLkdhbWVNb2Rl",
            "SCKIAQESFwoKcmVidXlfdHlwZRgmIAEoBUgjiAEBEhcKCmFkZG9uX3R5cGUY",
            "JyABKAVIJIgBARIcCg9yZWJ1eV9pdGVtX25hbWUYKCABKAlIJYgBARIcCg9h",
            "ZGRvbl9pdGVtX25hbWUYKSABKAlIJogBARIdChBvZmZpY2lhbF9yZF90eXBl",
            "GCogASgFSCeIAQESHwoSaXNfc25vd2JhbGxfaHVudGVyGCsgASgISCiIAQES",
            "GQoMaXNfc3VzcGVuZGVkGCwgASgISCmIAQESHgoRc3VzcGVuZF90aW1lc3Rh",
            "bXAYLSABKANIKogBARIZCgxzdXNwZW5kX3RpbWUYLiABKANIK4gBARIhCgly",
            "b29tX3R5cGUYLyABKA4yCS5Sb29tVHlwZUgsiAEBQgkKB19yb29taWRCCwoJ",
            "X3ByaW9yaXR5QhYKFF9lbmRfcmVidXlfdGltZXN0YW1wQgYKBF9ub3dCEQoP",
            "X210dF9zdGFydF90aW1lQgwKCl9pc19odW50ZXJCBwoFX2Nvc3RCDAoKX2l0",
            "ZW1fbmFtZUIJCgdfdGVtcGlkQgwKCl9jYW5fcmVidXlCDAoKX2Nhbl9hZGRv",
            "bkITChFfdG90YWxfcGxheWVyX251bUIVChNfY3VycmVudF9wbGF5ZXJfbnVt",
            "Qg0KC19tdHRfc3RhdHVzQhIKEF9zdGFydF90aW1lc3RhbXBCEwoRX3NpZ251",
            "cF90aW1lc3RhbXBCDgoMX2pvaW5fc3RhdHVzQg0KC19pc19wbGF5aW5nQhEK",
            "D19tYXhfcGxheWVyX251bUIOCgxfc2lnbnVwX3R5cGVCDAoKX2Rlc2NfdHlw",
            "ZUIPCg1fZml4ZWRfcmV3YXJkQgwKCl9pc19wbGF5ZWRCEAoOX2h1bnRlcl9y",
            "ZXdhcmRCCwoJX2xvY2F0aW9uQgoKCF9yZWJ1eWluQg4KDF9hZGRvbl9idXlp",
            "bkIRCg9fbGVmdF9yZWJ1eV9udW1CDwoNX3BlcmNlbnRfdHlwZUIRCg9fZ2Ft",
            "ZXNldF9zdGF0dXNCEAoOX3NwZWNpYWxfb3JkZXJCFAoSX3NpdHRpbmdfb3V0",
            "X2xldmVsQhYKFF9jdXJyZW50X2JsaW5kX2xldmVsQgwKCl9yb29tX21vZGVC",
            "DAoKX2dhbWVfbW9kZUINCgtfcmVidXlfdHlwZUINCgtfYWRkb25fdHlwZUIS",
            "ChBfcmVidXlfaXRlbV9uYW1lQhIKEF9hZGRvbl9pdGVtX25hbWVCEwoRX29m",
            "ZmljaWFsX3JkX3R5cGVCFQoTX2lzX3Nub3diYWxsX2h1bnRlckIPCg1faXNf",
            "c3VzcGVuZGVkQhQKEl9zdXNwZW5kX3RpbWVzdGFtcEIPCg1fc3VzcGVuZF90",
            "aW1lQgwKCl9yb29tX3R5cGUiuQUKB1NuZ0l0ZW0SEwoGdGVtcGlkGAEgASgJ",
            "SACIAQESFQoIcHJpb3JpdHkYAiABKAVIAYgBARIXCgppc19wbGF5aW5nGAMg",
            "ASgISAKIAQESEQoEY29zdBgEIAEoA0gDiAEBEhYKCWl0ZW1fbmFtZRgFIAEo",
            "CUgEiAEBEh0KEHRvdGFsX3BsYXllcl9udW0YBiABKAVIBYgBARIfChJjdXJy",
            "ZW50X3BsYXllcl9udW0YByABKAVIBogBARITCgZyb29taWQYCCABKAlIB4gB",
            "ARIlCgtzaWdudXBfdHlwZRgJIAEoDjILLlNpZ251cFR5cGVICIgBARIpCglk",
            "ZXNjX3R5cGUYCiABKA4yES5PZmZpY2lhbERlc2NUeXBlSAmIAQESGQoMZml4",
            "ZWRfcmV3YXJkGAsgASgISAqIAQESKAoIbG9jYXRpb24YDCABKA4yES5PZmZp",
            "Y2lhbExvY2F0aW9uSAuIAQESFwoPcGxhdGZvcm1fbGltaXRzGA0gAygJEiMK",
            "DW9mZmljaWFsX3RhZ3MYDiADKA4yDC5PZmZpY2lhbFRhZxIdChBvZmZpY2lh",
            "bF9yZF90eXBlGA8gASgFSAyIAQESIQoJcm9vbV90eXBlGBAgASgOMgkuUm9v",
            "bVR5cGVIDYgBAUIJCgdfdGVtcGlkQgsKCV9wcmlvcml0eUINCgtfaXNfcGxh",
            "eWluZ0IHCgVfY29zdEIMCgpfaXRlbV9uYW1lQhMKEV90b3RhbF9wbGF5ZXJf",
            "bnVtQhUKE19jdXJyZW50X3BsYXllcl9udW1CCQoHX3Jvb21pZEIOCgxfc2ln",
            "bnVwX3R5cGVCDAoKX2Rlc2NfdHlwZUIPCg1fZml4ZWRfcmV3YXJkQgsKCV9s",
            "b2NhdGlvbkITChFfb2ZmaWNpYWxfcmRfdHlwZUIMCgpfcm9vbV90eXBlImQK",
            "GE9mZmljaWFsUmVjb21tZW5kTGlzdFJFURIYCgtzdGFydF9pbmRleBgBIAEo",
            "BUgAiAEBEhMKBmFtb3VudBgCIAEoBUgBiAEBQg4KDF9zdGFydF9pbmRleEIJ",
            "CgdfYW1vdW50In0KGE9mZmljaWFsUmVjb21tZW5kTGlzdFJTUBIVCgNtdHQY",
            "ASADKAsyCC5NdHRJdGVtEhQKB210dF9udW0YAiABKAVIAIgBARIYCgtzdGFy",
            "dF9pbmRleBgDIAEoBUgBiAEBQgoKCF9tdHRfbnVtQg4KDF9zdGFydF9pbmRl",
            "eCJ6ChJPZmZpY2lhbFNuZ0xpc3RSRVESGAoLc3RhcnRfaW5kZXgYASABKAVI",
            "AIgBARITCgZhbW91bnQYAiABKAVIAYgBARIRCgR0eXBlGAMgASgFSAKIAQFC",
            "DgoMX3N0YXJ0X2luZGV4QgkKB19hbW91bnRCBwoFX3R5cGUirwEKEk9mZmlj",
            "aWFsU25nTGlzdFJTUBIRCgRjb2RlGAEgASgFSACIAQESFQoDc25nGAIgAygL",
            "MgguU25nSXRlbRIUCgdzbmdfbnVtGAMgASgFSAGIAQESGAoLc3RhcnRfaW5k",
            "ZXgYBCABKAVIAogBARIRCgR0eXBlGAUgASgFSAOIAQFCBwoFX2NvZGVCCgoI",
            "X3NuZ19udW1CDgoMX3N0YXJ0X2luZGV4QgcKBV90eXBlIl4KEk9mZmljaWFs",
            "TXR0TGlzdFJFURIYCgtzdGFydF9pbmRleBgBIAEoBUgAiAEBEhMKBmFtb3Vu",
            "dBgCIAEoBUgBiAEBQg4KDF9zdGFydF9pbmRleEIJCgdfYW1vdW50IncKEk9m",
            "ZmljaWFsTXR0TGlzdFJTUBIVCgNtdHQYASADKAsyCC5NdHRJdGVtEhQKB210",
            "dF9udW0YAiABKAVIAIgBARIYCgtzdGFydF9pbmRleBgDIAEoBUgBiAEBQgoK",
            "CF9tdHRfbnVtQg4KDF9zdGFydF9pbmRleCJhChVPZmZpY2lhbFNpZ251cExp",
            "c3RSRVESGAoLc3RhcnRfaW5kZXgYASABKAVIAIgBARITCgZhbW91bnQYAiAB",
            "KAVIAYgBAUIOCgxfc3RhcnRfaW5kZXhCCQoHX2Ftb3VudCJ6ChVPZmZpY2lh",
            "bFNpZ251cExpc3RSU1ASFQoDbXR0GAEgAygLMgguTXR0SXRlbRIUCgdtdHRf",
            "bnVtGAIgASgFSACIAQESGAoLc3RhcnRfaW5kZXgYAyABKAVIAYgBAUIKCghf",
            "bXR0X251bUIOCgxfc3RhcnRfaW5kZXgiyAEKEE10dFVzZXJTY29yZUluZm8S",
            "EAoDdWlkGAEgASgJSACIAQESEQoEbmFtZRgCIAEoCUgBiAEBEhEKBGljb24Y",
            "AyABKAlIAogBARISCgVzY29yZRgEIAEoBUgDiAEBEhMKBmNsdWJpZBgFIAEo",
            "CUgEiAEBEhYKCWNsdWJfbmFtZRgGIAEoCUgFiAEBQgYKBF91aWRCBwoFX25h",
            "bWVCBwoFX2ljb25CCAoGX3Njb3JlQgkKB19jbHViaWRCDAoKX2NsdWJfbmFt",
            "ZSLIAQoQTXR0Q2x1YlNjb3JlSW5mbxITCgZjbHViaWQYASABKAlIAIgBARIW",
            "CgljbHViX25hbWUYAiABKAlIAYgBARIWCgljbHViX2ljb24YAyABKAlIAogB",
            "ARIXCgpjbHViX3Njb3JlGAQgASgFSAOIAQESFAoHZm91bmRlchgFIAEoCUgE",
            "iAEBQgkKB19jbHViaWRCDAoKX2NsdWJfbmFtZUIMCgpfY2x1Yl9pY29uQg0K",
            "C19jbHViX3Njb3JlQgoKCF9mb3VuZGVyIg0KC010dFNjb3JlUkVRIisKC010",
            "dFNjb3JlUlNQEhIKBXNjb3JlGAEgASgFSACIAQFCCAoGX3Njb3JlIhEKD010",
            "dFNjb3JlTGlzdFJFUSKDAgoPTXR0U2NvcmVMaXN0UlNQEiQKCXVzZXJfbGlz",
            "dBgBIAMoCzIRLk10dFVzZXJTY29yZUluZm8SJAoJY2x1Yl9saXN0GAIgAygL",
            "MhEuTXR0Q2x1YlNjb3JlSW5mbxISCgVzY29yZRgDIAEoBUgAiAEBEhEKBHJh",
            "bmsYBCABKAVIAYgBARITCgZjbHViaWQYBSABKAlIAogBARIWCgljbHViX25h",
            "bWUYBiABKAlIA4gBARIWCgl0aW1lc3RhbXAYByABKANIBIgBAUIICgZfc2Nv",
            "cmVCBwoFX3JhbmtCCQoHX2NsdWJpZEIMCgpfY2x1Yl9uYW1lQgwKCl90aW1l",
            "c3RhbXAitgIKF09mZmljaWFsTXR0Tm90aWZpY2F0aW9uEhMKBnJvb21pZBgB",
            "IAEoCUgAiAEBEhMKBnRlbXBpZBgCIAEoCUgBiAEBEhYKCWxlZnRfdGltZRgD",
            "IAEoA0gCiAEBEhUKCHNlYXRfbnVtGAQgASgFSAOIAQESIQoJcm9vbV9tb2Rl",
            "GAUgASgOMgkuUm9vbU1vZGVIBIgBARIhCglyb29tX3R5cGUYBiABKA4yCS5S",
            "b29tVHlwZUgFiAEBEiEKCWdhbWVfbW9kZRgHIAEoDjIJLkdhbWVNb2RlSAaI",
            "AQFCCQoHX3Jvb21pZEIJCgdfdGVtcGlkQgwKCl9sZWZ0X3RpbWVCCwoJX3Nl",
            "YXRfbnVtQgwKCl9yb29tX21vZGVCDAoKX3Jvb21fdHlwZUIMCgpfZ2FtZV9t",
            "b2RlIhwKGk9mZmljaWFsTXR0Tm90aWZpY2F0aW9uUkVRIkkKGk9mZmljaWFs",
            "TXR0Tm90aWZpY2F0aW9uUlNQEisKCWluZm9fbGlzdBgBIAMoCzIYLk9mZmlj",
            "aWFsTXR0Tm90aWZpY2F0aW9uIlIKGk9mZmljaWFsTXR0Tm90aWZpY2F0aW9u",
            "QlJDEisKBGluZm8YASABKAsyGC5PZmZpY2lhbE10dE5vdGlmaWNhdGlvbkgA",
            "iAEBQgcKBV9pbmZvIkIKIEhhbmRsZU9mZmljaWFsTXR0Tm90aWZpY2F0aW9u",
            "UkVREhMKBnJvb21pZBgBIAEoCUgAiAEBQgkKB19yb29taWQinAEKEE9mZmlj",
            "aWFsTXR0UG9wdXASEwoGcm9vbWlkGAEgASgJSACIAQESEwoGdGVtcGlkGAIg",
            "ASgJSAGIAQESFgoJbGVmdF90aW1lGAMgASgDSAKIAQESFQoIcHJpb3JpdHkY",
            "BCABKAVIA4gBAUIJCgdfcm9vbWlkQgkKB190ZW1waWRCDAoKX2xlZnRfdGlt",
            "ZUILCglfcHJpb3JpdHkiFQoTT2ZmaWNpYWxNdHRQb3B1cFJFUSI7ChNPZmZp",
            "Y2lhbE10dFBvcHVwUlNQEiQKCWluZm9fbGlzdBgBIAMoCzIRLk9mZmljaWFs",
            "TXR0UG9wdXAiNgoUT2ZmaWNpYWxSb29tTWF0Y2hSRVESEwoGdGVtcGlkGAEg",
            "ASgJSACIAQFCCQoHX3RlbXBpZCJSChRPZmZpY2lhbFJvb21NYXRjaFJTUBIR",
            "CgRjb2RlGAEgASgFSACIAQESEwoGcm9vbWlkGAIgASgFSAGIAQFCBwoFX2Nv",
            "ZGVCCQoHX3Jvb21pZCK0BAoPTm90aWZpY2F0aW9uQlJDEhMKBnJvb21pZBgB",
            "IAEoCUgAiAEBEhYKCXJvb21fbmFtZRgCIAEoCUgBiAEBEhIKBWJsaW5kGAMg",
            "ASgDSAKIAQESEQoEYW50ZRgEIAEoA0gDiAEBEhMKBmNsdWJpZBgFIAEoCUgE",
            "iAEBEhYKCWNsdWJfbmFtZRgGIAEoCUgFiAEBEiEKCXJvb21fbW9kZRgHIAEo",
            "DjIJLlJvb21Nb2RlSAaIAQESIQoJcm9vbV90eXBlGAggASgOMgkuUm9vbVR5",
            "cGVIB4gBARIhCglnYW1lX21vZGUYCSABKA4yCS5HYW1lTW9kZUgIiAEBEhUK",
            "CHNlYXRfbnVtGAogASgFSAmIAQESFwoKc3RyYXRfdGltZRgLIAEoA0gKiAEB",
            "EhYKCWxlZnRfdGltZRgMIAEoA0gLiAEBEhwKD2lzX3N1cGVyX2xlYWd1ZRgN",
            "IAEoCEgMiAEBEhYKCXB1c2hfdHlwZRgOIAEoBUgNiAEBQgkKB19yb29taWRC",
            "DAoKX3Jvb21fbmFtZUIICgZfYmxpbmRCBwoFX2FudGVCCQoHX2NsdWJpZEIM",
            "CgpfY2x1Yl9uYW1lQgwKCl9yb29tX21vZGVCDAoKX3Jvb21fdHlwZUIMCgpf",
            "Z2FtZV9tb2RlQgsKCV9zZWF0X251bUINCgtfc3RyYXRfdGltZUIMCgpfbGVm",
            "dF90aW1lQhIKEF9pc19zdXBlcl9sZWFndWVCDAoKX3B1c2hfdHlwZUIaWgcv",
            "cGJwcGdvqgIOVGV4YXMuUHJvdG9jb2xQAmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Texas.Protocol.PreBaseReflection.Descriptor, global::Texas.Protocol.BaseReflection.Descriptor, global::Texas.Protocol.Mtt1Reflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttSynDealBRC), global::Texas.Protocol.MttSynDealBRC.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttNoStartBRC), global::Texas.Protocol.MttNoStartBRC.Parser, new[]{ "Type" }, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttNoticeBRC), global::Texas.Protocol.MttNoticeBRC.Parser, new[]{ "Type" }, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttItem), global::Texas.Protocol.MttItem.Parser, new[]{ "Roomid", "Priority", "EndRebuyTimestamp", "Now", "MttStartTime", "IsHunter", "Cost", "ItemName", "Tempid", "CanRebuy", "CanAddon", "TotalPlayerNum", "CurrentPlayerNum", "MttStatus", "StartTimestamp", "SignupTimestamp", "JoinStatus", "IsPlaying", "MaxPlayerNum", "SignupType", "DescType", "FixedReward", "IsPlayed", "HunterReward", "Location", "Rebuyin", "AddonBuyin", "LeftRebuyNum", "PlatformLimits", "PercentType", "GamesetStatus", "OfficialTags", "SpecialOrder", "SittingOutLevel", "CurrentBlindLevel", "RoomMode", "GameMode", "RebuyType", "AddonType", "RebuyItemName", "AddonItemName", "OfficialRdType", "IsSnowballHunter", "IsSuspended", "SuspendTimestamp", "SuspendTime", "RoomType" }, new[]{ "Roomid", "Priority", "EndRebuyTimestamp", "Now", "MttStartTime", "IsHunter", "Cost", "ItemName", "Tempid", "CanRebuy", "CanAddon", "TotalPlayerNum", "CurrentPlayerNum", "MttStatus", "StartTimestamp", "SignupTimestamp", "JoinStatus", "IsPlaying", "MaxPlayerNum", "SignupType", "DescType", "FixedReward", "IsPlayed", "HunterReward", "Location", "Rebuyin", "AddonBuyin", "LeftRebuyNum", "PercentType", "GamesetStatus", "SpecialOrder", "SittingOutLevel", "CurrentBlindLevel", "RoomMode", "GameMode", "RebuyType", "AddonType", "RebuyItemName", "AddonItemName", "OfficialRdType", "IsSnowballHunter", "IsSuspended", "SuspendTimestamp", "SuspendTime", "RoomType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SngItem), global::Texas.Protocol.SngItem.Parser, new[]{ "Tempid", "Priority", "IsPlaying", "Cost", "ItemName", "TotalPlayerNum", "CurrentPlayerNum", "Roomid", "SignupType", "DescType", "FixedReward", "Location", "PlatformLimits", "OfficialTags", "OfficialRdType", "RoomType" }, new[]{ "Tempid", "Priority", "IsPlaying", "Cost", "ItemName", "TotalPlayerNum", "CurrentPlayerNum", "Roomid", "SignupType", "DescType", "FixedReward", "Location", "OfficialRdType", "RoomType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.OfficialRecommendListREQ), global::Texas.Protocol.OfficialRecommendListREQ.Parser, new[]{ "StartIndex", "Amount" }, new[]{ "StartIndex", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.OfficialRecommendListRSP), global::Texas.Protocol.OfficialRecommendListRSP.Parser, new[]{ "Mtt", "MttNum", "StartIndex" }, new[]{ "MttNum", "StartIndex" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.OfficialSngListREQ), global::Texas.Protocol.OfficialSngListREQ.Parser, new[]{ "StartIndex", "Amount", "Type" }, new[]{ "StartIndex", "Amount", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.OfficialSngListRSP), global::Texas.Protocol.OfficialSngListRSP.Parser, new[]{ "Code", "Sng", "SngNum", "StartIndex", "Type" }, new[]{ "Code", "SngNum", "StartIndex", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.OfficialMttListREQ), global::Texas.Protocol.OfficialMttListREQ.Parser, new[]{ "StartIndex", "Amount" }, new[]{ "StartIndex", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.OfficialMttListRSP), global::Texas.Protocol.OfficialMttListRSP.Parser, new[]{ "Mtt", "MttNum", "StartIndex" }, new[]{ "MttNum", "StartIndex" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.OfficialSignupListREQ), global::Texas.Protocol.OfficialSignupListREQ.Parser, new[]{ "StartIndex", "Amount" }, new[]{ "StartIndex", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.OfficialSignupListRSP), global::Texas.Protocol.OfficialSignupListRSP.Parser, new[]{ "Mtt", "MttNum", "StartIndex" }, new[]{ "MttNum", "StartIndex" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttUserScoreInfo), global::Texas.Protocol.MttUserScoreInfo.Parser, new[]{ "Uid", "Name", "Icon", "Score", "Clubid", "ClubName" }, new[]{ "Uid", "Name", "Icon", "Score", "Clubid", "ClubName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttClubScoreInfo), global::Texas.Protocol.MttClubScoreInfo.Parser, new[]{ "Clubid", "ClubName", "ClubIcon", "ClubScore", "Founder" }, new[]{ "Clubid", "ClubName", "ClubIcon", "ClubScore", "Founder" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttScoreREQ), global::Texas.Protocol.MttScoreREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttScoreRSP), global::Texas.Protocol.MttScoreRSP.Parser, new[]{ "Score" }, new[]{ "Score" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttScoreListREQ), global::Texas.Protocol.MttScoreListREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.MttScoreListRSP), global::Texas.Protocol.MttScoreListRSP.Parser, new[]{ "UserList", "ClubList", "Score", "Rank", "Clubid", "ClubName", "Timestamp" }, new[]{ "Score", "Rank", "Clubid", "ClubName", "Timestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.OfficialMttNotification), global::Texas.Protocol.OfficialMttNotification.Parser, new[]{ "Roomid", "Tempid", "LeftTime", "SeatNum", "RoomMode", "RoomType", "GameMode" }, new[]{ "Roomid", "Tempid", "LeftTime", "SeatNum", "RoomMode", "RoomType", "GameMode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.OfficialMttNotificationREQ), global::Texas.Protocol.OfficialMttNotificationREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.OfficialMttNotificationRSP), global::Texas.Protocol.OfficialMttNotificationRSP.Parser, new[]{ "InfoList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.OfficialMttNotificationBRC), global::Texas.Protocol.OfficialMttNotificationBRC.Parser, new[]{ "Info" }, new[]{ "Info" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.HandleOfficialMttNotificationREQ), global::Texas.Protocol.HandleOfficialMttNotificationREQ.Parser, new[]{ "Roomid" }, new[]{ "Roomid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.OfficialMttPopup), global::Texas.Protocol.OfficialMttPopup.Parser, new[]{ "Roomid", "Tempid", "LeftTime", "Priority" }, new[]{ "Roomid", "Tempid", "LeftTime", "Priority" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.OfficialMttPopupREQ), global::Texas.Protocol.OfficialMttPopupREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.OfficialMttPopupRSP), global::Texas.Protocol.OfficialMttPopupRSP.Parser, new[]{ "InfoList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.OfficialRoomMatchREQ), global::Texas.Protocol.OfficialRoomMatchREQ.Parser, new[]{ "Tempid" }, new[]{ "Tempid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.OfficialRoomMatchRSP), global::Texas.Protocol.OfficialRoomMatchRSP.Parser, new[]{ "Code", "Roomid" }, new[]{ "Code", "Roomid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.NotificationBRC), global::Texas.Protocol.NotificationBRC.Parser, new[]{ "Roomid", "RoomName", "Blind", "Ante", "Clubid", "ClubName", "RoomMode", "RoomType", "GameMode", "SeatNum", "StratTime", "LeftTime", "IsSuperLeague", "PushType" }, new[]{ "Roomid", "RoomName", "Blind", "Ante", "Clubid", "ClubName", "RoomMode", "RoomType", "GameMode", "SeatNum", "StratTime", "LeftTime", "IsSuperLeague", "PushType" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///同步发牌
  /// </summary>
  public sealed partial class MttSynDealBRC : pb::IMessage<MttSynDealBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttSynDealBRC> _parser = new pb::MessageParser<MttSynDealBRC>(() => new MttSynDealBRC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttSynDealBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttSynDealBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttSynDealBRC(MttSynDealBRC other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttSynDealBRC Clone() {
      return new MttSynDealBRC(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttSynDealBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttSynDealBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttSynDealBRC other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  ///mtt不开赛
  /// </summary>
  public sealed partial class MttNoStartBRC : pb::IMessage<MttNoStartBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttNoStartBRC> _parser = new pb::MessageParser<MttNoStartBRC>(() => new MttNoStartBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttNoStartBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttNoStartBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttNoStartBRC(MttNoStartBRC other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttNoStartBRC Clone() {
      return new MttNoStartBRC(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    /// 1 人数不够，不开赛
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttNoStartBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttNoStartBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttNoStartBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///广播，旁观也发
  /// </summary>
  public sealed partial class MttNoticeBRC : pb::IMessage<MttNoticeBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttNoticeBRC> _parser = new pb::MessageParser<MttNoticeBRC>(() => new MttNoticeBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttNoticeBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttNoticeBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttNoticeBRC(MttNoticeBRC other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttNoticeBRC Clone() {
      return new MttNoticeBRC(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    /// 1 进泡沫， 2 进钱圈，  3 进入决赛桌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttNoticeBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttNoticeBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttNoticeBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttItem : pb::IMessage<MttItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttItem> _parser = new pb::MessageParser<MttItem>(() => new MttItem());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    private int _hasBits1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttItem(MttItem other) : this() {
      _hasBits0 = other._hasBits0;
      _hasBits1 = other._hasBits1;
      roomid_ = other.roomid_;
      priority_ = other.priority_;
      endRebuyTimestamp_ = other.endRebuyTimestamp_;
      now_ = other.now_;
      mttStartTime_ = other.mttStartTime_;
      isHunter_ = other.isHunter_;
      cost_ = other.cost_;
      itemName_ = other.itemName_;
      tempid_ = other.tempid_;
      canRebuy_ = other.canRebuy_;
      canAddon_ = other.canAddon_;
      totalPlayerNum_ = other.totalPlayerNum_;
      currentPlayerNum_ = other.currentPlayerNum_;
      mttStatus_ = other.mttStatus_;
      startTimestamp_ = other.startTimestamp_;
      signupTimestamp_ = other.signupTimestamp_;
      joinStatus_ = other.joinStatus_;
      isPlaying_ = other.isPlaying_;
      maxPlayerNum_ = other.maxPlayerNum_;
      signupType_ = other.signupType_;
      descType_ = other.descType_;
      fixedReward_ = other.fixedReward_;
      isPlayed_ = other.isPlayed_;
      hunterReward_ = other.hunterReward_;
      location_ = other.location_;
      rebuyin_ = other.rebuyin_;
      addonBuyin_ = other.addonBuyin_;
      leftRebuyNum_ = other.leftRebuyNum_;
      platformLimits_ = other.platformLimits_.Clone();
      percentType_ = other.percentType_;
      gamesetStatus_ = other.gamesetStatus_;
      officialTags_ = other.officialTags_.Clone();
      specialOrder_ = other.specialOrder_;
      sittingOutLevel_ = other.sittingOutLevel_;
      currentBlindLevel_ = other.currentBlindLevel_;
      roomMode_ = other.roomMode_;
      gameMode_ = other.gameMode_;
      rebuyType_ = other.rebuyType_;
      addonType_ = other.addonType_;
      rebuyItemName_ = other.rebuyItemName_;
      addonItemName_ = other.addonItemName_;
      officialRdType_ = other.officialRdType_;
      isSnowballHunter_ = other.isSnowballHunter_;
      isSuspended_ = other.isSuspended_;
      suspendTimestamp_ = other.suspendTimestamp_;
      suspendTime_ = other.suspendTime_;
      roomType_ = other.roomType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttItem Clone() {
      return new MttItem(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static string RoomidDefaultValue = "";

    private string roomid_;
    /// <summary>
    ///mtt信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Roomid {
      get { return roomid_ ?? RoomidDefaultValue; }
      set {
        roomid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return roomid_ != null; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      roomid_ = null;
    }

    /// <summary>Field number for the "priority" field.</summary>
    public const int PriorityFieldNumber = 2;
    private readonly static int PriorityDefaultValue = 0;

    private int priority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Priority {
      get { if ((_hasBits0 & 1) != 0) { return priority_; } else { return PriorityDefaultValue; } }
      set {
        _hasBits0 |= 1;
        priority_ = value;
      }
    }
    /// <summary>Gets whether the "priority" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPriority {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "priority" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPriority() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "end_rebuy_timestamp" field.</summary>
    public const int EndRebuyTimestampFieldNumber = 3;
    private readonly static long EndRebuyTimestampDefaultValue = 0L;

    private long endRebuyTimestamp_;
    /// <summary>
    ///截止报名时间点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndRebuyTimestamp {
      get { if ((_hasBits0 & 2) != 0) { return endRebuyTimestamp_; } else { return EndRebuyTimestampDefaultValue; } }
      set {
        _hasBits0 |= 2;
        endRebuyTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "end_rebuy_timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndRebuyTimestamp {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "end_rebuy_timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndRebuyTimestamp() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "now" field.</summary>
    public const int NowFieldNumber = 4;
    private readonly static long NowDefaultValue = 0L;

    private long now_;
    /// <summary>
    ///当前时间戳
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Now {
      get { if ((_hasBits0 & 4) != 0) { return now_; } else { return NowDefaultValue; } }
      set {
        _hasBits0 |= 4;
        now_ = value;
      }
    }
    /// <summary>Gets whether the "now" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNow {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "now" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNow() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "mtt_start_time" field.</summary>
    public const int MttStartTimeFieldNumber = 5;
    private readonly static long MttStartTimeDefaultValue = 0L;

    private long mttStartTime_;
    /// <summary>
    ///设定的开赛时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MttStartTime {
      get { if ((_hasBits0 & 8) != 0) { return mttStartTime_; } else { return MttStartTimeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        mttStartTime_ = value;
      }
    }
    /// <summary>Gets whether the "mtt_start_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMttStartTime {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "mtt_start_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMttStartTime() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "is_hunter" field.</summary>
    public const int IsHunterFieldNumber = 6;
    private readonly static bool IsHunterDefaultValue = false;

    private bool isHunter_;
    /// <summary>
    ///是否猎人赛
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsHunter {
      get { if ((_hasBits0 & 16) != 0) { return isHunter_; } else { return IsHunterDefaultValue; } }
      set {
        _hasBits0 |= 16;
        isHunter_ = value;
      }
    }
    /// <summary>Gets whether the "is_hunter" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsHunter {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "is_hunter" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsHunter() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "cost" field.</summary>
    public const int CostFieldNumber = 7;
    private readonly static long CostDefaultValue = 0L;

    private long cost_;
    /// <summary>
    ///买入
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Cost {
      get { if ((_hasBits0 & 32) != 0) { return cost_; } else { return CostDefaultValue; } }
      set {
        _hasBits0 |= 32;
        cost_ = value;
      }
    }
    /// <summary>Gets whether the "cost" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCost {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "cost" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCost() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "item_name" field.</summary>
    public const int ItemNameFieldNumber = 8;
    private readonly static string ItemNameDefaultValue = "";

    private string itemName_;
    /// <summary>
    ///门票
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ItemName {
      get { return itemName_ ?? ItemNameDefaultValue; }
      set {
        itemName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "item_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasItemName {
      get { return itemName_ != null; }
    }
    /// <summary>Clears the value of the "item_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearItemName() {
      itemName_ = null;
    }

    /// <summary>Field number for the "tempid" field.</summary>
    public const int TempidFieldNumber = 9;
    private readonly static string TempidDefaultValue = "";

    private string tempid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tempid {
      get { return tempid_ ?? TempidDefaultValue; }
      set {
        tempid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tempid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTempid {
      get { return tempid_ != null; }
    }
    /// <summary>Clears the value of the "tempid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTempid() {
      tempid_ = null;
    }

    /// <summary>Field number for the "can_rebuy" field.</summary>
    public const int CanRebuyFieldNumber = 10;
    private readonly static bool CanRebuyDefaultValue = false;

    private bool canRebuy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanRebuy {
      get { if ((_hasBits0 & 64) != 0) { return canRebuy_; } else { return CanRebuyDefaultValue; } }
      set {
        _hasBits0 |= 64;
        canRebuy_ = value;
      }
    }
    /// <summary>Gets whether the "can_rebuy" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCanRebuy {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "can_rebuy" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCanRebuy() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "can_addon" field.</summary>
    public const int CanAddonFieldNumber = 11;
    private readonly static bool CanAddonDefaultValue = false;

    private bool canAddon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanAddon {
      get { if ((_hasBits0 & 128) != 0) { return canAddon_; } else { return CanAddonDefaultValue; } }
      set {
        _hasBits0 |= 128;
        canAddon_ = value;
      }
    }
    /// <summary>Gets whether the "can_addon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCanAddon {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "can_addon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCanAddon() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "total_player_num" field.</summary>
    public const int TotalPlayerNumFieldNumber = 12;
    private readonly static int TotalPlayerNumDefaultValue = 0;

    private int totalPlayerNum_;
    /// <summary>
    ///mtt状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalPlayerNum {
      get { if ((_hasBits0 & 256) != 0) { return totalPlayerNum_; } else { return TotalPlayerNumDefaultValue; } }
      set {
        _hasBits0 |= 256;
        totalPlayerNum_ = value;
      }
    }
    /// <summary>Gets whether the "total_player_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalPlayerNum {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "total_player_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalPlayerNum() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "current_player_num" field.</summary>
    public const int CurrentPlayerNumFieldNumber = 13;
    private readonly static int CurrentPlayerNumDefaultValue = 0;

    private int currentPlayerNum_;
    /// <summary>
    ///当前参赛人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrentPlayerNum {
      get { if ((_hasBits0 & 512) != 0) { return currentPlayerNum_; } else { return CurrentPlayerNumDefaultValue; } }
      set {
        _hasBits0 |= 512;
        currentPlayerNum_ = value;
      }
    }
    /// <summary>Gets whether the "current_player_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCurrentPlayerNum {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "current_player_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCurrentPlayerNum() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "mtt_status" field.</summary>
    public const int MttStatusFieldNumber = 14;
    private readonly static int MttStatusDefaultValue = 0;

    private int mttStatus_;
    /// <summary>
    /// 1 未开赛  2 已经开赛，还能延迟登记  3 已经开赛，不能延迟登记  4 已经结束
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MttStatus {
      get { if ((_hasBits0 & 1024) != 0) { return mttStatus_; } else { return MttStatusDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        mttStatus_ = value;
      }
    }
    /// <summary>Gets whether the "mtt_status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMttStatus {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "mtt_status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMttStatus() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "start_timestamp" field.</summary>
    public const int StartTimestampFieldNumber = 15;
    private readonly static long StartTimestampDefaultValue = 0L;

    private long startTimestamp_;
    /// <summary>
    ///已经开赛为开赛时间戳，没开赛为0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartTimestamp {
      get { if ((_hasBits0 & 2048) != 0) { return startTimestamp_; } else { return StartTimestampDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        startTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "start_timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartTimestamp {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "start_timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartTimestamp() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "signup_timestamp" field.</summary>
    public const int SignupTimestampFieldNumber = 16;
    private readonly static long SignupTimestampDefaultValue = 0L;

    private long signupTimestamp_;
    /// <summary>
    ///开始报名时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SignupTimestamp {
      get { if ((_hasBits0 & 4096) != 0) { return signupTimestamp_; } else { return SignupTimestampDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        signupTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "signup_timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSignupTimestamp {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "signup_timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSignupTimestamp() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "join_status" field.</summary>
    public const int JoinStatusFieldNumber = 17;
    private readonly static int JoinStatusDefaultValue = 0;

    private int joinStatus_;
    /// <summary>
    ///个人信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int JoinStatus {
      get { if ((_hasBits0 & 8192) != 0) { return joinStatus_; } else { return JoinStatusDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        joinStatus_ = value;
      }
    }
    /// <summary>Gets whether the "join_status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasJoinStatus {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "join_status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearJoinStatus() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "is_playing" field.</summary>
    public const int IsPlayingFieldNumber = 18;
    private readonly static bool IsPlayingDefaultValue = false;

    private bool isPlaying_;
    /// <summary>
    ///是否在房间内打牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPlaying {
      get { if ((_hasBits0 & 16384) != 0) { return isPlaying_; } else { return IsPlayingDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        isPlaying_ = value;
      }
    }
    /// <summary>Gets whether the "is_playing" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPlaying {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "is_playing" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPlaying() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "max_player_num" field.</summary>
    public const int MaxPlayerNumFieldNumber = 19;
    private readonly static int MaxPlayerNumDefaultValue = 0;

    private int maxPlayerNum_;
    /// <summary>
    ///最大报名人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxPlayerNum {
      get { if ((_hasBits0 & 32768) != 0) { return maxPlayerNum_; } else { return MaxPlayerNumDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        maxPlayerNum_ = value;
      }
    }
    /// <summary>Gets whether the "max_player_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxPlayerNum {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "max_player_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxPlayerNum() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "signup_type" field.</summary>
    public const int SignupTypeFieldNumber = 20;
    private readonly static global::Texas.Protocol.SignupType SignupTypeDefaultValue = global::Texas.Protocol.SignupType.All;

    private global::Texas.Protocol.SignupType signupType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.SignupType SignupType {
      get { if ((_hasBits0 & 65536) != 0) { return signupType_; } else { return SignupTypeDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        signupType_ = value;
      }
    }
    /// <summary>Gets whether the "signup_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSignupType {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "signup_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSignupType() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "desc_type" field.</summary>
    public const int DescTypeFieldNumber = 21;
    private readonly static global::Texas.Protocol.OfficialDescType DescTypeDefaultValue = global::Texas.Protocol.OfficialDescType.None;

    private global::Texas.Protocol.OfficialDescType descType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.OfficialDescType DescType {
      get { if ((_hasBits0 & 131072) != 0) { return descType_; } else { return DescTypeDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        descType_ = value;
      }
    }
    /// <summary>Gets whether the "desc_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDescType {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "desc_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDescType() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "fixed_reward" field.</summary>
    public const int FixedRewardFieldNumber = 22;
    private readonly static bool FixedRewardDefaultValue = false;

    private bool fixedReward_;
    /// <summary>
    /// 是否固定奖池
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FixedReward {
      get { if ((_hasBits0 & 262144) != 0) { return fixedReward_; } else { return FixedRewardDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        fixedReward_ = value;
      }
    }
    /// <summary>Gets whether the "fixed_reward" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFixedReward {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "fixed_reward" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFixedReward() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "is_played" field.</summary>
    public const int IsPlayedFieldNumber = 23;
    private readonly static bool IsPlayedDefaultValue = false;

    private bool isPlayed_;
    /// <summary>
    /// 是否打过牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPlayed {
      get { if ((_hasBits0 & 524288) != 0) { return isPlayed_; } else { return IsPlayedDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        isPlayed_ = value;
      }
    }
    /// <summary>Gets whether the "is_played" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPlayed {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "is_played" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPlayed() {
      _hasBits0 &= ~524288;
    }

    /// <summary>Field number for the "hunter_reward" field.</summary>
    public const int HunterRewardFieldNumber = 24;
    private readonly static long HunterRewardDefaultValue = 0L;

    private long hunterReward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long HunterReward {
      get { if ((_hasBits0 & 1048576) != 0) { return hunterReward_; } else { return HunterRewardDefaultValue; } }
      set {
        _hasBits0 |= 1048576;
        hunterReward_ = value;
      }
    }
    /// <summary>Gets whether the "hunter_reward" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHunterReward {
      get { return (_hasBits0 & 1048576) != 0; }
    }
    /// <summary>Clears the value of the "hunter_reward" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHunterReward() {
      _hasBits0 &= ~1048576;
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 25;
    private readonly static global::Texas.Protocol.OfficialLocation LocationDefaultValue = global::Texas.Protocol.OfficialLocation.Online;

    private global::Texas.Protocol.OfficialLocation location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.OfficialLocation Location {
      get { if ((_hasBits0 & 2097152) != 0) { return location_; } else { return LocationDefaultValue; } }
      set {
        _hasBits0 |= 2097152;
        location_ = value;
      }
    }
    /// <summary>Gets whether the "location" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLocation {
      get { return (_hasBits0 & 2097152) != 0; }
    }
    /// <summary>Clears the value of the "location" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLocation() {
      _hasBits0 &= ~2097152;
    }

    /// <summary>Field number for the "rebuyin" field.</summary>
    public const int RebuyinFieldNumber = 26;
    private readonly static long RebuyinDefaultValue = 0L;

    private long rebuyin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Rebuyin {
      get { if ((_hasBits0 & 4194304) != 0) { return rebuyin_; } else { return RebuyinDefaultValue; } }
      set {
        _hasBits0 |= 4194304;
        rebuyin_ = value;
      }
    }
    /// <summary>Gets whether the "rebuyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRebuyin {
      get { return (_hasBits0 & 4194304) != 0; }
    }
    /// <summary>Clears the value of the "rebuyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRebuyin() {
      _hasBits0 &= ~4194304;
    }

    /// <summary>Field number for the "addon_buyin" field.</summary>
    public const int AddonBuyinFieldNumber = 27;
    private readonly static long AddonBuyinDefaultValue = 0L;

    private long addonBuyin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AddonBuyin {
      get { if ((_hasBits0 & 8388608) != 0) { return addonBuyin_; } else { return AddonBuyinDefaultValue; } }
      set {
        _hasBits0 |= 8388608;
        addonBuyin_ = value;
      }
    }
    /// <summary>Gets whether the "addon_buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAddonBuyin {
      get { return (_hasBits0 & 8388608) != 0; }
    }
    /// <summary>Clears the value of the "addon_buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAddonBuyin() {
      _hasBits0 &= ~8388608;
    }

    /// <summary>Field number for the "left_rebuy_num" field.</summary>
    public const int LeftRebuyNumFieldNumber = 28;
    private readonly static int LeftRebuyNumDefaultValue = 0;

    private int leftRebuyNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LeftRebuyNum {
      get { if ((_hasBits0 & 16777216) != 0) { return leftRebuyNum_; } else { return LeftRebuyNumDefaultValue; } }
      set {
        _hasBits0 |= 16777216;
        leftRebuyNum_ = value;
      }
    }
    /// <summary>Gets whether the "left_rebuy_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeftRebuyNum {
      get { return (_hasBits0 & 16777216) != 0; }
    }
    /// <summary>Clears the value of the "left_rebuy_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeftRebuyNum() {
      _hasBits0 &= ~16777216;
    }

    /// <summary>Field number for the "platform_limits" field.</summary>
    public const int PlatformLimitsFieldNumber = 29;
    private static readonly pb::FieldCodec<string> _repeated_platformLimits_codec
        = pb::FieldCodec.ForString(234);
    private readonly pbc::RepeatedField<string> platformLimits_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> PlatformLimits {
      get { return platformLimits_; }
    }

    /// <summary>Field number for the "percent_type" field.</summary>
    public const int PercentTypeFieldNumber = 30;
    private readonly static global::Texas.Protocol.MttRewardPercentType PercentTypeDefaultValue = global::Texas.Protocol.MttRewardPercentType.MttTenPercent;

    private global::Texas.Protocol.MttRewardPercentType percentType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.MttRewardPercentType PercentType {
      get { if ((_hasBits0 & 33554432) != 0) { return percentType_; } else { return PercentTypeDefaultValue; } }
      set {
        _hasBits0 |= 33554432;
        percentType_ = value;
      }
    }
    /// <summary>Gets whether the "percent_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPercentType {
      get { return (_hasBits0 & 33554432) != 0; }
    }
    /// <summary>Clears the value of the "percent_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPercentType() {
      _hasBits0 &= ~33554432;
    }

    /// <summary>Field number for the "gameset_status" field.</summary>
    public const int GamesetStatusFieldNumber = 31;
    private readonly static global::Texas.Protocol.GameSetPlayStatus GamesetStatusDefaultValue = global::Texas.Protocol.GameSetPlayStatus.None;

    private global::Texas.Protocol.GameSetPlayStatus gamesetStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.GameSetPlayStatus GamesetStatus {
      get { if ((_hasBits0 & 67108864) != 0) { return gamesetStatus_; } else { return GamesetStatusDefaultValue; } }
      set {
        _hasBits0 |= 67108864;
        gamesetStatus_ = value;
      }
    }
    /// <summary>Gets whether the "gameset_status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGamesetStatus {
      get { return (_hasBits0 & 67108864) != 0; }
    }
    /// <summary>Clears the value of the "gameset_status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGamesetStatus() {
      _hasBits0 &= ~67108864;
    }

    /// <summary>Field number for the "official_tags" field.</summary>
    public const int OfficialTagsFieldNumber = 32;
    private static readonly pb::FieldCodec<global::Texas.Protocol.OfficialTag> _repeated_officialTags_codec
        = pb::FieldCodec.ForEnum(258, x => (int) x, x => (global::Texas.Protocol.OfficialTag) x);
    private readonly pbc::RepeatedField<global::Texas.Protocol.OfficialTag> officialTags_ = new pbc::RepeatedField<global::Texas.Protocol.OfficialTag>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.OfficialTag> OfficialTags {
      get { return officialTags_; }
    }

    /// <summary>Field number for the "special_order" field.</summary>
    public const int SpecialOrderFieldNumber = 33;
    private readonly static int SpecialOrderDefaultValue = 0;

    private int specialOrder_;
    /// <summary>
    ///新玩家特性挂牌顺序
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpecialOrder {
      get { if ((_hasBits0 & 134217728) != 0) { return specialOrder_; } else { return SpecialOrderDefaultValue; } }
      set {
        _hasBits0 |= 134217728;
        specialOrder_ = value;
      }
    }
    /// <summary>Gets whether the "special_order" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpecialOrder {
      get { return (_hasBits0 & 134217728) != 0; }
    }
    /// <summary>Clears the value of the "special_order" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpecialOrder() {
      _hasBits0 &= ~134217728;
    }

    /// <summary>Field number for the "sitting_out_level" field.</summary>
    public const int SittingOutLevelFieldNumber = 34;
    private readonly static int SittingOutLevelDefaultValue = 0;

    private int sittingOutLevel_;
    /// <summary>
    ///在该级别时将玩家从sitting out踢起并返回报名费,有效值:0 &lt; level &lt; delay_join_level
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SittingOutLevel {
      get { if ((_hasBits0 & 268435456) != 0) { return sittingOutLevel_; } else { return SittingOutLevelDefaultValue; } }
      set {
        _hasBits0 |= 268435456;
        sittingOutLevel_ = value;
      }
    }
    /// <summary>Gets whether the "sitting_out_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSittingOutLevel {
      get { return (_hasBits0 & 268435456) != 0; }
    }
    /// <summary>Clears the value of the "sitting_out_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSittingOutLevel() {
      _hasBits0 &= ~268435456;
    }

    /// <summary>Field number for the "current_blind_level" field.</summary>
    public const int CurrentBlindLevelFieldNumber = 35;
    private readonly static int CurrentBlindLevelDefaultValue = 0;

    private int currentBlindLevel_;
    /// <summary>
    ///当前盲注级别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrentBlindLevel {
      get { if ((_hasBits0 & 536870912) != 0) { return currentBlindLevel_; } else { return CurrentBlindLevelDefaultValue; } }
      set {
        _hasBits0 |= 536870912;
        currentBlindLevel_ = value;
      }
    }
    /// <summary>Gets whether the "current_blind_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCurrentBlindLevel {
      get { return (_hasBits0 & 536870912) != 0; }
    }
    /// <summary>Clears the value of the "current_blind_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCurrentBlindLevel() {
      _hasBits0 &= ~536870912;
    }

    /// <summary>Field number for the "room_mode" field.</summary>
    public const int RoomModeFieldNumber = 36;
    private readonly static global::Texas.Protocol.RoomMode RoomModeDefaultValue = global::Texas.Protocol.RoomMode.None;

    private global::Texas.Protocol.RoomMode roomMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomMode RoomMode {
      get { if ((_hasBits0 & 1073741824) != 0) { return roomMode_; } else { return RoomModeDefaultValue; } }
      set {
        _hasBits0 |= 1073741824;
        roomMode_ = value;
      }
    }
    /// <summary>Gets whether the "room_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomMode {
      get { return (_hasBits0 & 1073741824) != 0; }
    }
    /// <summary>Clears the value of the "room_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomMode() {
      _hasBits0 &= ~1073741824;
    }

    /// <summary>Field number for the "game_mode" field.</summary>
    public const int GameModeFieldNumber = 37;
    private readonly static global::Texas.Protocol.GameMode GameModeDefaultValue = global::Texas.Protocol.GameMode.Regular;

    private global::Texas.Protocol.GameMode gameMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.GameMode GameMode {
      get { if ((_hasBits0 & -2147483648) != 0) { return gameMode_; } else { return GameModeDefaultValue; } }
      set {
        _hasBits0 |= -2147483648;
        gameMode_ = value;
      }
    }
    /// <summary>Gets whether the "game_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameMode {
      get { return (_hasBits0 & -2147483648) != 0; }
    }
    /// <summary>Clears the value of the "game_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameMode() {
      _hasBits0 &= ~-2147483648;
    }

    /// <summary>Field number for the "rebuy_type" field.</summary>
    public const int RebuyTypeFieldNumber = 38;
    private readonly static int RebuyTypeDefaultValue = 0;

    private int rebuyType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RebuyType {
      get { if ((_hasBits1 & 1) != 0) { return rebuyType_; } else { return RebuyTypeDefaultValue; } }
      set {
        _hasBits1 |= 1;
        rebuyType_ = value;
      }
    }
    /// <summary>Gets whether the "rebuy_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRebuyType {
      get { return (_hasBits1 & 1) != 0; }
    }
    /// <summary>Clears the value of the "rebuy_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRebuyType() {
      _hasBits1 &= ~1;
    }

    /// <summary>Field number for the "addon_type" field.</summary>
    public const int AddonTypeFieldNumber = 39;
    private readonly static int AddonTypeDefaultValue = 0;

    private int addonType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AddonType {
      get { if ((_hasBits1 & 2) != 0) { return addonType_; } else { return AddonTypeDefaultValue; } }
      set {
        _hasBits1 |= 2;
        addonType_ = value;
      }
    }
    /// <summary>Gets whether the "addon_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAddonType {
      get { return (_hasBits1 & 2) != 0; }
    }
    /// <summary>Clears the value of the "addon_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAddonType() {
      _hasBits1 &= ~2;
    }

    /// <summary>Field number for the "rebuy_item_name" field.</summary>
    public const int RebuyItemNameFieldNumber = 40;
    private readonly static string RebuyItemNameDefaultValue = "";

    private string rebuyItemName_;
    /// <summary>
    ///rebuy门票
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RebuyItemName {
      get { return rebuyItemName_ ?? RebuyItemNameDefaultValue; }
      set {
        rebuyItemName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "rebuy_item_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRebuyItemName {
      get { return rebuyItemName_ != null; }
    }
    /// <summary>Clears the value of the "rebuy_item_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRebuyItemName() {
      rebuyItemName_ = null;
    }

    /// <summary>Field number for the "addon_item_name" field.</summary>
    public const int AddonItemNameFieldNumber = 41;
    private readonly static string AddonItemNameDefaultValue = "";

    private string addonItemName_;
    /// <summary>
    ///addon使用门票
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AddonItemName {
      get { return addonItemName_ ?? AddonItemNameDefaultValue; }
      set {
        addonItemName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "addon_item_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAddonItemName {
      get { return addonItemName_ != null; }
    }
    /// <summary>Clears the value of the "addon_item_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAddonItemName() {
      addonItemName_ = null;
    }

    /// <summary>Field number for the "official_rd_type" field.</summary>
    public const int OfficialRdTypeFieldNumber = 42;
    private readonly static int OfficialRdTypeDefaultValue = 0;

    private int officialRdType_;
    /// <summary>
    ///0:普通比赛,1:实物比赛
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OfficialRdType {
      get { if ((_hasBits1 & 4) != 0) { return officialRdType_; } else { return OfficialRdTypeDefaultValue; } }
      set {
        _hasBits1 |= 4;
        officialRdType_ = value;
      }
    }
    /// <summary>Gets whether the "official_rd_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOfficialRdType {
      get { return (_hasBits1 & 4) != 0; }
    }
    /// <summary>Clears the value of the "official_rd_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOfficialRdType() {
      _hasBits1 &= ~4;
    }

    /// <summary>Field number for the "is_snowball_hunter" field.</summary>
    public const int IsSnowballHunterFieldNumber = 43;
    private readonly static bool IsSnowballHunterDefaultValue = false;

    private bool isSnowballHunter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSnowballHunter {
      get { if ((_hasBits1 & 8) != 0) { return isSnowballHunter_; } else { return IsSnowballHunterDefaultValue; } }
      set {
        _hasBits1 |= 8;
        isSnowballHunter_ = value;
      }
    }
    /// <summary>Gets whether the "is_snowball_hunter" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsSnowballHunter {
      get { return (_hasBits1 & 8) != 0; }
    }
    /// <summary>Clears the value of the "is_snowball_hunter" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsSnowballHunter() {
      _hasBits1 &= ~8;
    }

    /// <summary>Field number for the "is_suspended" field.</summary>
    public const int IsSuspendedFieldNumber = 44;
    private readonly static bool IsSuspendedDefaultValue = false;

    private bool isSuspended_;
    /// <summary>
    /// mtt挂起暂停相关
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSuspended {
      get { if ((_hasBits1 & 16) != 0) { return isSuspended_; } else { return IsSuspendedDefaultValue; } }
      set {
        _hasBits1 |= 16;
        isSuspended_ = value;
      }
    }
    /// <summary>Gets whether the "is_suspended" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsSuspended {
      get { return (_hasBits1 & 16) != 0; }
    }
    /// <summary>Clears the value of the "is_suspended" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsSuspended() {
      _hasBits1 &= ~16;
    }

    /// <summary>Field number for the "suspend_timestamp" field.</summary>
    public const int SuspendTimestampFieldNumber = 45;
    private readonly static long SuspendTimestampDefaultValue = 0L;

    private long suspendTimestamp_;
    /// <summary>
    /// 房间最后挂起时间戳
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SuspendTimestamp {
      get { if ((_hasBits1 & 32) != 0) { return suspendTimestamp_; } else { return SuspendTimestampDefaultValue; } }
      set {
        _hasBits1 |= 32;
        suspendTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "suspend_timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuspendTimestamp {
      get { return (_hasBits1 & 32) != 0; }
    }
    /// <summary>Clears the value of the "suspend_timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuspendTimestamp() {
      _hasBits1 &= ~32;
    }

    /// <summary>Field number for the "suspend_time" field.</summary>
    public const int SuspendTimeFieldNumber = 46;
    private readonly static long SuspendTimeDefaultValue = 0L;

    private long suspendTime_;
    /// <summary>
    /// 挂起恢复总流逝时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SuspendTime {
      get { if ((_hasBits1 & 64) != 0) { return suspendTime_; } else { return SuspendTimeDefaultValue; } }
      set {
        _hasBits1 |= 64;
        suspendTime_ = value;
      }
    }
    /// <summary>Gets whether the "suspend_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuspendTime {
      get { return (_hasBits1 & 64) != 0; }
    }
    /// <summary>Clears the value of the "suspend_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuspendTime() {
      _hasBits1 &= ~64;
    }

    /// <summary>Field number for the "room_type" field.</summary>
    public const int RoomTypeFieldNumber = 47;
    private readonly static global::Texas.Protocol.RoomType RoomTypeDefaultValue = global::Texas.Protocol.RoomType.TestRoom;

    private global::Texas.Protocol.RoomType roomType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomType RoomType {
      get { if ((_hasBits1 & 128) != 0) { return roomType_; } else { return RoomTypeDefaultValue; } }
      set {
        _hasBits1 |= 128;
        roomType_ = value;
      }
    }
    /// <summary>Gets whether the "room_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomType {
      get { return (_hasBits1 & 128) != 0; }
    }
    /// <summary>Clears the value of the "room_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomType() {
      _hasBits1 &= ~128;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (Priority != other.Priority) return false;
      if (EndRebuyTimestamp != other.EndRebuyTimestamp) return false;
      if (Now != other.Now) return false;
      if (MttStartTime != other.MttStartTime) return false;
      if (IsHunter != other.IsHunter) return false;
      if (Cost != other.Cost) return false;
      if (ItemName != other.ItemName) return false;
      if (Tempid != other.Tempid) return false;
      if (CanRebuy != other.CanRebuy) return false;
      if (CanAddon != other.CanAddon) return false;
      if (TotalPlayerNum != other.TotalPlayerNum) return false;
      if (CurrentPlayerNum != other.CurrentPlayerNum) return false;
      if (MttStatus != other.MttStatus) return false;
      if (StartTimestamp != other.StartTimestamp) return false;
      if (SignupTimestamp != other.SignupTimestamp) return false;
      if (JoinStatus != other.JoinStatus) return false;
      if (IsPlaying != other.IsPlaying) return false;
      if (MaxPlayerNum != other.MaxPlayerNum) return false;
      if (SignupType != other.SignupType) return false;
      if (DescType != other.DescType) return false;
      if (FixedReward != other.FixedReward) return false;
      if (IsPlayed != other.IsPlayed) return false;
      if (HunterReward != other.HunterReward) return false;
      if (Location != other.Location) return false;
      if (Rebuyin != other.Rebuyin) return false;
      if (AddonBuyin != other.AddonBuyin) return false;
      if (LeftRebuyNum != other.LeftRebuyNum) return false;
      if(!platformLimits_.Equals(other.platformLimits_)) return false;
      if (PercentType != other.PercentType) return false;
      if (GamesetStatus != other.GamesetStatus) return false;
      if(!officialTags_.Equals(other.officialTags_)) return false;
      if (SpecialOrder != other.SpecialOrder) return false;
      if (SittingOutLevel != other.SittingOutLevel) return false;
      if (CurrentBlindLevel != other.CurrentBlindLevel) return false;
      if (RoomMode != other.RoomMode) return false;
      if (GameMode != other.GameMode) return false;
      if (RebuyType != other.RebuyType) return false;
      if (AddonType != other.AddonType) return false;
      if (RebuyItemName != other.RebuyItemName) return false;
      if (AddonItemName != other.AddonItemName) return false;
      if (OfficialRdType != other.OfficialRdType) return false;
      if (IsSnowballHunter != other.IsSnowballHunter) return false;
      if (IsSuspended != other.IsSuspended) return false;
      if (SuspendTimestamp != other.SuspendTimestamp) return false;
      if (SuspendTime != other.SuspendTime) return false;
      if (RoomType != other.RoomType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasPriority) hash ^= Priority.GetHashCode();
      if (HasEndRebuyTimestamp) hash ^= EndRebuyTimestamp.GetHashCode();
      if (HasNow) hash ^= Now.GetHashCode();
      if (HasMttStartTime) hash ^= MttStartTime.GetHashCode();
      if (HasIsHunter) hash ^= IsHunter.GetHashCode();
      if (HasCost) hash ^= Cost.GetHashCode();
      if (HasItemName) hash ^= ItemName.GetHashCode();
      if (HasTempid) hash ^= Tempid.GetHashCode();
      if (HasCanRebuy) hash ^= CanRebuy.GetHashCode();
      if (HasCanAddon) hash ^= CanAddon.GetHashCode();
      if (HasTotalPlayerNum) hash ^= TotalPlayerNum.GetHashCode();
      if (HasCurrentPlayerNum) hash ^= CurrentPlayerNum.GetHashCode();
      if (HasMttStatus) hash ^= MttStatus.GetHashCode();
      if (HasStartTimestamp) hash ^= StartTimestamp.GetHashCode();
      if (HasSignupTimestamp) hash ^= SignupTimestamp.GetHashCode();
      if (HasJoinStatus) hash ^= JoinStatus.GetHashCode();
      if (HasIsPlaying) hash ^= IsPlaying.GetHashCode();
      if (HasMaxPlayerNum) hash ^= MaxPlayerNum.GetHashCode();
      if (HasSignupType) hash ^= SignupType.GetHashCode();
      if (HasDescType) hash ^= DescType.GetHashCode();
      if (HasFixedReward) hash ^= FixedReward.GetHashCode();
      if (HasIsPlayed) hash ^= IsPlayed.GetHashCode();
      if (HasHunterReward) hash ^= HunterReward.GetHashCode();
      if (HasLocation) hash ^= Location.GetHashCode();
      if (HasRebuyin) hash ^= Rebuyin.GetHashCode();
      if (HasAddonBuyin) hash ^= AddonBuyin.GetHashCode();
      if (HasLeftRebuyNum) hash ^= LeftRebuyNum.GetHashCode();
      hash ^= platformLimits_.GetHashCode();
      if (HasPercentType) hash ^= PercentType.GetHashCode();
      if (HasGamesetStatus) hash ^= GamesetStatus.GetHashCode();
      hash ^= officialTags_.GetHashCode();
      if (HasSpecialOrder) hash ^= SpecialOrder.GetHashCode();
      if (HasSittingOutLevel) hash ^= SittingOutLevel.GetHashCode();
      if (HasCurrentBlindLevel) hash ^= CurrentBlindLevel.GetHashCode();
      if (HasRoomMode) hash ^= RoomMode.GetHashCode();
      if (HasGameMode) hash ^= GameMode.GetHashCode();
      if (HasRebuyType) hash ^= RebuyType.GetHashCode();
      if (HasAddonType) hash ^= AddonType.GetHashCode();
      if (HasRebuyItemName) hash ^= RebuyItemName.GetHashCode();
      if (HasAddonItemName) hash ^= AddonItemName.GetHashCode();
      if (HasOfficialRdType) hash ^= OfficialRdType.GetHashCode();
      if (HasIsSnowballHunter) hash ^= IsSnowballHunter.GetHashCode();
      if (HasIsSuspended) hash ^= IsSuspended.GetHashCode();
      if (HasSuspendTimestamp) hash ^= SuspendTimestamp.GetHashCode();
      if (HasSuspendTime) hash ^= SuspendTime.GetHashCode();
      if (HasRoomType) hash ^= RoomType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(10);
        output.WriteString(Roomid);
      }
      if (HasPriority) {
        output.WriteRawTag(16);
        output.WriteInt32(Priority);
      }
      if (HasEndRebuyTimestamp) {
        output.WriteRawTag(24);
        output.WriteInt64(EndRebuyTimestamp);
      }
      if (HasNow) {
        output.WriteRawTag(32);
        output.WriteInt64(Now);
      }
      if (HasMttStartTime) {
        output.WriteRawTag(40);
        output.WriteInt64(MttStartTime);
      }
      if (HasIsHunter) {
        output.WriteRawTag(48);
        output.WriteBool(IsHunter);
      }
      if (HasCost) {
        output.WriteRawTag(56);
        output.WriteInt64(Cost);
      }
      if (HasItemName) {
        output.WriteRawTag(66);
        output.WriteString(ItemName);
      }
      if (HasTempid) {
        output.WriteRawTag(74);
        output.WriteString(Tempid);
      }
      if (HasCanRebuy) {
        output.WriteRawTag(80);
        output.WriteBool(CanRebuy);
      }
      if (HasCanAddon) {
        output.WriteRawTag(88);
        output.WriteBool(CanAddon);
      }
      if (HasTotalPlayerNum) {
        output.WriteRawTag(96);
        output.WriteInt32(TotalPlayerNum);
      }
      if (HasCurrentPlayerNum) {
        output.WriteRawTag(104);
        output.WriteInt32(CurrentPlayerNum);
      }
      if (HasMttStatus) {
        output.WriteRawTag(112);
        output.WriteInt32(MttStatus);
      }
      if (HasStartTimestamp) {
        output.WriteRawTag(120);
        output.WriteInt64(StartTimestamp);
      }
      if (HasSignupTimestamp) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(SignupTimestamp);
      }
      if (HasJoinStatus) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(JoinStatus);
      }
      if (HasIsPlaying) {
        output.WriteRawTag(144, 1);
        output.WriteBool(IsPlaying);
      }
      if (HasMaxPlayerNum) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(MaxPlayerNum);
      }
      if (HasSignupType) {
        output.WriteRawTag(160, 1);
        output.WriteEnum((int) SignupType);
      }
      if (HasDescType) {
        output.WriteRawTag(168, 1);
        output.WriteEnum((int) DescType);
      }
      if (HasFixedReward) {
        output.WriteRawTag(176, 1);
        output.WriteBool(FixedReward);
      }
      if (HasIsPlayed) {
        output.WriteRawTag(184, 1);
        output.WriteBool(IsPlayed);
      }
      if (HasHunterReward) {
        output.WriteRawTag(192, 1);
        output.WriteInt64(HunterReward);
      }
      if (HasLocation) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) Location);
      }
      if (HasRebuyin) {
        output.WriteRawTag(208, 1);
        output.WriteInt64(Rebuyin);
      }
      if (HasAddonBuyin) {
        output.WriteRawTag(216, 1);
        output.WriteInt64(AddonBuyin);
      }
      if (HasLeftRebuyNum) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(LeftRebuyNum);
      }
      platformLimits_.WriteTo(output, _repeated_platformLimits_codec);
      if (HasPercentType) {
        output.WriteRawTag(240, 1);
        output.WriteEnum((int) PercentType);
      }
      if (HasGamesetStatus) {
        output.WriteRawTag(248, 1);
        output.WriteEnum((int) GamesetStatus);
      }
      officialTags_.WriteTo(output, _repeated_officialTags_codec);
      if (HasSpecialOrder) {
        output.WriteRawTag(136, 2);
        output.WriteInt32(SpecialOrder);
      }
      if (HasSittingOutLevel) {
        output.WriteRawTag(144, 2);
        output.WriteInt32(SittingOutLevel);
      }
      if (HasCurrentBlindLevel) {
        output.WriteRawTag(152, 2);
        output.WriteInt32(CurrentBlindLevel);
      }
      if (HasRoomMode) {
        output.WriteRawTag(160, 2);
        output.WriteEnum((int) RoomMode);
      }
      if (HasGameMode) {
        output.WriteRawTag(168, 2);
        output.WriteEnum((int) GameMode);
      }
      if (HasRebuyType) {
        output.WriteRawTag(176, 2);
        output.WriteInt32(RebuyType);
      }
      if (HasAddonType) {
        output.WriteRawTag(184, 2);
        output.WriteInt32(AddonType);
      }
      if (HasRebuyItemName) {
        output.WriteRawTag(194, 2);
        output.WriteString(RebuyItemName);
      }
      if (HasAddonItemName) {
        output.WriteRawTag(202, 2);
        output.WriteString(AddonItemName);
      }
      if (HasOfficialRdType) {
        output.WriteRawTag(208, 2);
        output.WriteInt32(OfficialRdType);
      }
      if (HasIsSnowballHunter) {
        output.WriteRawTag(216, 2);
        output.WriteBool(IsSnowballHunter);
      }
      if (HasIsSuspended) {
        output.WriteRawTag(224, 2);
        output.WriteBool(IsSuspended);
      }
      if (HasSuspendTimestamp) {
        output.WriteRawTag(232, 2);
        output.WriteInt64(SuspendTimestamp);
      }
      if (HasSuspendTime) {
        output.WriteRawTag(240, 2);
        output.WriteInt64(SuspendTime);
      }
      if (HasRoomType) {
        output.WriteRawTag(248, 2);
        output.WriteEnum((int) RoomType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(10);
        output.WriteString(Roomid);
      }
      if (HasPriority) {
        output.WriteRawTag(16);
        output.WriteInt32(Priority);
      }
      if (HasEndRebuyTimestamp) {
        output.WriteRawTag(24);
        output.WriteInt64(EndRebuyTimestamp);
      }
      if (HasNow) {
        output.WriteRawTag(32);
        output.WriteInt64(Now);
      }
      if (HasMttStartTime) {
        output.WriteRawTag(40);
        output.WriteInt64(MttStartTime);
      }
      if (HasIsHunter) {
        output.WriteRawTag(48);
        output.WriteBool(IsHunter);
      }
      if (HasCost) {
        output.WriteRawTag(56);
        output.WriteInt64(Cost);
      }
      if (HasItemName) {
        output.WriteRawTag(66);
        output.WriteString(ItemName);
      }
      if (HasTempid) {
        output.WriteRawTag(74);
        output.WriteString(Tempid);
      }
      if (HasCanRebuy) {
        output.WriteRawTag(80);
        output.WriteBool(CanRebuy);
      }
      if (HasCanAddon) {
        output.WriteRawTag(88);
        output.WriteBool(CanAddon);
      }
      if (HasTotalPlayerNum) {
        output.WriteRawTag(96);
        output.WriteInt32(TotalPlayerNum);
      }
      if (HasCurrentPlayerNum) {
        output.WriteRawTag(104);
        output.WriteInt32(CurrentPlayerNum);
      }
      if (HasMttStatus) {
        output.WriteRawTag(112);
        output.WriteInt32(MttStatus);
      }
      if (HasStartTimestamp) {
        output.WriteRawTag(120);
        output.WriteInt64(StartTimestamp);
      }
      if (HasSignupTimestamp) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(SignupTimestamp);
      }
      if (HasJoinStatus) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(JoinStatus);
      }
      if (HasIsPlaying) {
        output.WriteRawTag(144, 1);
        output.WriteBool(IsPlaying);
      }
      if (HasMaxPlayerNum) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(MaxPlayerNum);
      }
      if (HasSignupType) {
        output.WriteRawTag(160, 1);
        output.WriteEnum((int) SignupType);
      }
      if (HasDescType) {
        output.WriteRawTag(168, 1);
        output.WriteEnum((int) DescType);
      }
      if (HasFixedReward) {
        output.WriteRawTag(176, 1);
        output.WriteBool(FixedReward);
      }
      if (HasIsPlayed) {
        output.WriteRawTag(184, 1);
        output.WriteBool(IsPlayed);
      }
      if (HasHunterReward) {
        output.WriteRawTag(192, 1);
        output.WriteInt64(HunterReward);
      }
      if (HasLocation) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) Location);
      }
      if (HasRebuyin) {
        output.WriteRawTag(208, 1);
        output.WriteInt64(Rebuyin);
      }
      if (HasAddonBuyin) {
        output.WriteRawTag(216, 1);
        output.WriteInt64(AddonBuyin);
      }
      if (HasLeftRebuyNum) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(LeftRebuyNum);
      }
      platformLimits_.WriteTo(ref output, _repeated_platformLimits_codec);
      if (HasPercentType) {
        output.WriteRawTag(240, 1);
        output.WriteEnum((int) PercentType);
      }
      if (HasGamesetStatus) {
        output.WriteRawTag(248, 1);
        output.WriteEnum((int) GamesetStatus);
      }
      officialTags_.WriteTo(ref output, _repeated_officialTags_codec);
      if (HasSpecialOrder) {
        output.WriteRawTag(136, 2);
        output.WriteInt32(SpecialOrder);
      }
      if (HasSittingOutLevel) {
        output.WriteRawTag(144, 2);
        output.WriteInt32(SittingOutLevel);
      }
      if (HasCurrentBlindLevel) {
        output.WriteRawTag(152, 2);
        output.WriteInt32(CurrentBlindLevel);
      }
      if (HasRoomMode) {
        output.WriteRawTag(160, 2);
        output.WriteEnum((int) RoomMode);
      }
      if (HasGameMode) {
        output.WriteRawTag(168, 2);
        output.WriteEnum((int) GameMode);
      }
      if (HasRebuyType) {
        output.WriteRawTag(176, 2);
        output.WriteInt32(RebuyType);
      }
      if (HasAddonType) {
        output.WriteRawTag(184, 2);
        output.WriteInt32(AddonType);
      }
      if (HasRebuyItemName) {
        output.WriteRawTag(194, 2);
        output.WriteString(RebuyItemName);
      }
      if (HasAddonItemName) {
        output.WriteRawTag(202, 2);
        output.WriteString(AddonItemName);
      }
      if (HasOfficialRdType) {
        output.WriteRawTag(208, 2);
        output.WriteInt32(OfficialRdType);
      }
      if (HasIsSnowballHunter) {
        output.WriteRawTag(216, 2);
        output.WriteBool(IsSnowballHunter);
      }
      if (HasIsSuspended) {
        output.WriteRawTag(224, 2);
        output.WriteBool(IsSuspended);
      }
      if (HasSuspendTimestamp) {
        output.WriteRawTag(232, 2);
        output.WriteInt64(SuspendTimestamp);
      }
      if (HasSuspendTime) {
        output.WriteRawTag(240, 2);
        output.WriteInt64(SuspendTime);
      }
      if (HasRoomType) {
        output.WriteRawTag(248, 2);
        output.WriteEnum((int) RoomType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Roomid);
      }
      if (HasPriority) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Priority);
      }
      if (HasEndRebuyTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndRebuyTimestamp);
      }
      if (HasNow) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Now);
      }
      if (HasMttStartTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MttStartTime);
      }
      if (HasIsHunter) {
        size += 1 + 1;
      }
      if (HasCost) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Cost);
      }
      if (HasItemName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemName);
      }
      if (HasTempid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tempid);
      }
      if (HasCanRebuy) {
        size += 1 + 1;
      }
      if (HasCanAddon) {
        size += 1 + 1;
      }
      if (HasTotalPlayerNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPlayerNum);
      }
      if (HasCurrentPlayerNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentPlayerNum);
      }
      if (HasMttStatus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MttStatus);
      }
      if (HasStartTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTimestamp);
      }
      if (HasSignupTimestamp) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(SignupTimestamp);
      }
      if (HasJoinStatus) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(JoinStatus);
      }
      if (HasIsPlaying) {
        size += 2 + 1;
      }
      if (HasMaxPlayerNum) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaxPlayerNum);
      }
      if (HasSignupType) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SignupType);
      }
      if (HasDescType) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) DescType);
      }
      if (HasFixedReward) {
        size += 2 + 1;
      }
      if (HasIsPlayed) {
        size += 2 + 1;
      }
      if (HasHunterReward) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(HunterReward);
      }
      if (HasLocation) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Location);
      }
      if (HasRebuyin) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Rebuyin);
      }
      if (HasAddonBuyin) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(AddonBuyin);
      }
      if (HasLeftRebuyNum) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LeftRebuyNum);
      }
      size += platformLimits_.CalculateSize(_repeated_platformLimits_codec);
      if (HasPercentType) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PercentType);
      }
      if (HasGamesetStatus) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) GamesetStatus);
      }
      size += officialTags_.CalculateSize(_repeated_officialTags_codec);
      if (HasSpecialOrder) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SpecialOrder);
      }
      if (HasSittingOutLevel) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SittingOutLevel);
      }
      if (HasCurrentBlindLevel) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CurrentBlindLevel);
      }
      if (HasRoomMode) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) RoomMode);
      }
      if (HasGameMode) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
      }
      if (HasRebuyType) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RebuyType);
      }
      if (HasAddonType) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AddonType);
      }
      if (HasRebuyItemName) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RebuyItemName);
      }
      if (HasAddonItemName) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AddonItemName);
      }
      if (HasOfficialRdType) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(OfficialRdType);
      }
      if (HasIsSnowballHunter) {
        size += 2 + 1;
      }
      if (HasIsSuspended) {
        size += 2 + 1;
      }
      if (HasSuspendTimestamp) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(SuspendTimestamp);
      }
      if (HasSuspendTime) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(SuspendTime);
      }
      if (HasRoomType) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) RoomType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttItem other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasPriority) {
        Priority = other.Priority;
      }
      if (other.HasEndRebuyTimestamp) {
        EndRebuyTimestamp = other.EndRebuyTimestamp;
      }
      if (other.HasNow) {
        Now = other.Now;
      }
      if (other.HasMttStartTime) {
        MttStartTime = other.MttStartTime;
      }
      if (other.HasIsHunter) {
        IsHunter = other.IsHunter;
      }
      if (other.HasCost) {
        Cost = other.Cost;
      }
      if (other.HasItemName) {
        ItemName = other.ItemName;
      }
      if (other.HasTempid) {
        Tempid = other.Tempid;
      }
      if (other.HasCanRebuy) {
        CanRebuy = other.CanRebuy;
      }
      if (other.HasCanAddon) {
        CanAddon = other.CanAddon;
      }
      if (other.HasTotalPlayerNum) {
        TotalPlayerNum = other.TotalPlayerNum;
      }
      if (other.HasCurrentPlayerNum) {
        CurrentPlayerNum = other.CurrentPlayerNum;
      }
      if (other.HasMttStatus) {
        MttStatus = other.MttStatus;
      }
      if (other.HasStartTimestamp) {
        StartTimestamp = other.StartTimestamp;
      }
      if (other.HasSignupTimestamp) {
        SignupTimestamp = other.SignupTimestamp;
      }
      if (other.HasJoinStatus) {
        JoinStatus = other.JoinStatus;
      }
      if (other.HasIsPlaying) {
        IsPlaying = other.IsPlaying;
      }
      if (other.HasMaxPlayerNum) {
        MaxPlayerNum = other.MaxPlayerNum;
      }
      if (other.HasSignupType) {
        SignupType = other.SignupType;
      }
      if (other.HasDescType) {
        DescType = other.DescType;
      }
      if (other.HasFixedReward) {
        FixedReward = other.FixedReward;
      }
      if (other.HasIsPlayed) {
        IsPlayed = other.IsPlayed;
      }
      if (other.HasHunterReward) {
        HunterReward = other.HunterReward;
      }
      if (other.HasLocation) {
        Location = other.Location;
      }
      if (other.HasRebuyin) {
        Rebuyin = other.Rebuyin;
      }
      if (other.HasAddonBuyin) {
        AddonBuyin = other.AddonBuyin;
      }
      if (other.HasLeftRebuyNum) {
        LeftRebuyNum = other.LeftRebuyNum;
      }
      platformLimits_.Add(other.platformLimits_);
      if (other.HasPercentType) {
        PercentType = other.PercentType;
      }
      if (other.HasGamesetStatus) {
        GamesetStatus = other.GamesetStatus;
      }
      officialTags_.Add(other.officialTags_);
      if (other.HasSpecialOrder) {
        SpecialOrder = other.SpecialOrder;
      }
      if (other.HasSittingOutLevel) {
        SittingOutLevel = other.SittingOutLevel;
      }
      if (other.HasCurrentBlindLevel) {
        CurrentBlindLevel = other.CurrentBlindLevel;
      }
      if (other.HasRoomMode) {
        RoomMode = other.RoomMode;
      }
      if (other.HasGameMode) {
        GameMode = other.GameMode;
      }
      if (other.HasRebuyType) {
        RebuyType = other.RebuyType;
      }
      if (other.HasAddonType) {
        AddonType = other.AddonType;
      }
      if (other.HasRebuyItemName) {
        RebuyItemName = other.RebuyItemName;
      }
      if (other.HasAddonItemName) {
        AddonItemName = other.AddonItemName;
      }
      if (other.HasOfficialRdType) {
        OfficialRdType = other.OfficialRdType;
      }
      if (other.HasIsSnowballHunter) {
        IsSnowballHunter = other.IsSnowballHunter;
      }
      if (other.HasIsSuspended) {
        IsSuspended = other.IsSuspended;
      }
      if (other.HasSuspendTimestamp) {
        SuspendTimestamp = other.SuspendTimestamp;
      }
      if (other.HasSuspendTime) {
        SuspendTime = other.SuspendTime;
      }
      if (other.HasRoomType) {
        RoomType = other.RoomType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Roomid = input.ReadString();
            break;
          }
          case 16: {
            Priority = input.ReadInt32();
            break;
          }
          case 24: {
            EndRebuyTimestamp = input.ReadInt64();
            break;
          }
          case 32: {
            Now = input.ReadInt64();
            break;
          }
          case 40: {
            MttStartTime = input.ReadInt64();
            break;
          }
          case 48: {
            IsHunter = input.ReadBool();
            break;
          }
          case 56: {
            Cost = input.ReadInt64();
            break;
          }
          case 66: {
            ItemName = input.ReadString();
            break;
          }
          case 74: {
            Tempid = input.ReadString();
            break;
          }
          case 80: {
            CanRebuy = input.ReadBool();
            break;
          }
          case 88: {
            CanAddon = input.ReadBool();
            break;
          }
          case 96: {
            TotalPlayerNum = input.ReadInt32();
            break;
          }
          case 104: {
            CurrentPlayerNum = input.ReadInt32();
            break;
          }
          case 112: {
            MttStatus = input.ReadInt32();
            break;
          }
          case 120: {
            StartTimestamp = input.ReadInt64();
            break;
          }
          case 128: {
            SignupTimestamp = input.ReadInt64();
            break;
          }
          case 136: {
            JoinStatus = input.ReadInt32();
            break;
          }
          case 144: {
            IsPlaying = input.ReadBool();
            break;
          }
          case 152: {
            MaxPlayerNum = input.ReadInt32();
            break;
          }
          case 160: {
            SignupType = (global::Texas.Protocol.SignupType) input.ReadEnum();
            break;
          }
          case 168: {
            DescType = (global::Texas.Protocol.OfficialDescType) input.ReadEnum();
            break;
          }
          case 176: {
            FixedReward = input.ReadBool();
            break;
          }
          case 184: {
            IsPlayed = input.ReadBool();
            break;
          }
          case 192: {
            HunterReward = input.ReadInt64();
            break;
          }
          case 200: {
            Location = (global::Texas.Protocol.OfficialLocation) input.ReadEnum();
            break;
          }
          case 208: {
            Rebuyin = input.ReadInt64();
            break;
          }
          case 216: {
            AddonBuyin = input.ReadInt64();
            break;
          }
          case 224: {
            LeftRebuyNum = input.ReadInt32();
            break;
          }
          case 234: {
            platformLimits_.AddEntriesFrom(input, _repeated_platformLimits_codec);
            break;
          }
          case 240: {
            PercentType = (global::Texas.Protocol.MttRewardPercentType) input.ReadEnum();
            break;
          }
          case 248: {
            GamesetStatus = (global::Texas.Protocol.GameSetPlayStatus) input.ReadEnum();
            break;
          }
          case 258:
          case 256: {
            officialTags_.AddEntriesFrom(input, _repeated_officialTags_codec);
            break;
          }
          case 264: {
            SpecialOrder = input.ReadInt32();
            break;
          }
          case 272: {
            SittingOutLevel = input.ReadInt32();
            break;
          }
          case 280: {
            CurrentBlindLevel = input.ReadInt32();
            break;
          }
          case 288: {
            RoomMode = (global::Texas.Protocol.RoomMode) input.ReadEnum();
            break;
          }
          case 296: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 304: {
            RebuyType = input.ReadInt32();
            break;
          }
          case 312: {
            AddonType = input.ReadInt32();
            break;
          }
          case 322: {
            RebuyItemName = input.ReadString();
            break;
          }
          case 330: {
            AddonItemName = input.ReadString();
            break;
          }
          case 336: {
            OfficialRdType = input.ReadInt32();
            break;
          }
          case 344: {
            IsSnowballHunter = input.ReadBool();
            break;
          }
          case 352: {
            IsSuspended = input.ReadBool();
            break;
          }
          case 360: {
            SuspendTimestamp = input.ReadInt64();
            break;
          }
          case 368: {
            SuspendTime = input.ReadInt64();
            break;
          }
          case 376: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Roomid = input.ReadString();
            break;
          }
          case 16: {
            Priority = input.ReadInt32();
            break;
          }
          case 24: {
            EndRebuyTimestamp = input.ReadInt64();
            break;
          }
          case 32: {
            Now = input.ReadInt64();
            break;
          }
          case 40: {
            MttStartTime = input.ReadInt64();
            break;
          }
          case 48: {
            IsHunter = input.ReadBool();
            break;
          }
          case 56: {
            Cost = input.ReadInt64();
            break;
          }
          case 66: {
            ItemName = input.ReadString();
            break;
          }
          case 74: {
            Tempid = input.ReadString();
            break;
          }
          case 80: {
            CanRebuy = input.ReadBool();
            break;
          }
          case 88: {
            CanAddon = input.ReadBool();
            break;
          }
          case 96: {
            TotalPlayerNum = input.ReadInt32();
            break;
          }
          case 104: {
            CurrentPlayerNum = input.ReadInt32();
            break;
          }
          case 112: {
            MttStatus = input.ReadInt32();
            break;
          }
          case 120: {
            StartTimestamp = input.ReadInt64();
            break;
          }
          case 128: {
            SignupTimestamp = input.ReadInt64();
            break;
          }
          case 136: {
            JoinStatus = input.ReadInt32();
            break;
          }
          case 144: {
            IsPlaying = input.ReadBool();
            break;
          }
          case 152: {
            MaxPlayerNum = input.ReadInt32();
            break;
          }
          case 160: {
            SignupType = (global::Texas.Protocol.SignupType) input.ReadEnum();
            break;
          }
          case 168: {
            DescType = (global::Texas.Protocol.OfficialDescType) input.ReadEnum();
            break;
          }
          case 176: {
            FixedReward = input.ReadBool();
            break;
          }
          case 184: {
            IsPlayed = input.ReadBool();
            break;
          }
          case 192: {
            HunterReward = input.ReadInt64();
            break;
          }
          case 200: {
            Location = (global::Texas.Protocol.OfficialLocation) input.ReadEnum();
            break;
          }
          case 208: {
            Rebuyin = input.ReadInt64();
            break;
          }
          case 216: {
            AddonBuyin = input.ReadInt64();
            break;
          }
          case 224: {
            LeftRebuyNum = input.ReadInt32();
            break;
          }
          case 234: {
            platformLimits_.AddEntriesFrom(ref input, _repeated_platformLimits_codec);
            break;
          }
          case 240: {
            PercentType = (global::Texas.Protocol.MttRewardPercentType) input.ReadEnum();
            break;
          }
          case 248: {
            GamesetStatus = (global::Texas.Protocol.GameSetPlayStatus) input.ReadEnum();
            break;
          }
          case 258:
          case 256: {
            officialTags_.AddEntriesFrom(ref input, _repeated_officialTags_codec);
            break;
          }
          case 264: {
            SpecialOrder = input.ReadInt32();
            break;
          }
          case 272: {
            SittingOutLevel = input.ReadInt32();
            break;
          }
          case 280: {
            CurrentBlindLevel = input.ReadInt32();
            break;
          }
          case 288: {
            RoomMode = (global::Texas.Protocol.RoomMode) input.ReadEnum();
            break;
          }
          case 296: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 304: {
            RebuyType = input.ReadInt32();
            break;
          }
          case 312: {
            AddonType = input.ReadInt32();
            break;
          }
          case 322: {
            RebuyItemName = input.ReadString();
            break;
          }
          case 330: {
            AddonItemName = input.ReadString();
            break;
          }
          case 336: {
            OfficialRdType = input.ReadInt32();
            break;
          }
          case 344: {
            IsSnowballHunter = input.ReadBool();
            break;
          }
          case 352: {
            IsSuspended = input.ReadBool();
            break;
          }
          case 360: {
            SuspendTimestamp = input.ReadInt64();
            break;
          }
          case 368: {
            SuspendTime = input.ReadInt64();
            break;
          }
          case 376: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SngItem : pb::IMessage<SngItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SngItem> _parser = new pb::MessageParser<SngItem>(() => new SngItem());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SngItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SngItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SngItem(SngItem other) : this() {
      _hasBits0 = other._hasBits0;
      tempid_ = other.tempid_;
      priority_ = other.priority_;
      isPlaying_ = other.isPlaying_;
      cost_ = other.cost_;
      itemName_ = other.itemName_;
      totalPlayerNum_ = other.totalPlayerNum_;
      currentPlayerNum_ = other.currentPlayerNum_;
      roomid_ = other.roomid_;
      signupType_ = other.signupType_;
      descType_ = other.descType_;
      fixedReward_ = other.fixedReward_;
      location_ = other.location_;
      platformLimits_ = other.platformLimits_.Clone();
      officialTags_ = other.officialTags_.Clone();
      officialRdType_ = other.officialRdType_;
      roomType_ = other.roomType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SngItem Clone() {
      return new SngItem(this);
    }

    /// <summary>Field number for the "tempid" field.</summary>
    public const int TempidFieldNumber = 1;
    private readonly static string TempidDefaultValue = "";

    private string tempid_;
    /// <summary>
    ///房间类型id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tempid {
      get { return tempid_ ?? TempidDefaultValue; }
      set {
        tempid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tempid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTempid {
      get { return tempid_ != null; }
    }
    /// <summary>Clears the value of the "tempid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTempid() {
      tempid_ = null;
    }

    /// <summary>Field number for the "priority" field.</summary>
    public const int PriorityFieldNumber = 2;
    private readonly static int PriorityDefaultValue = 0;

    private int priority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Priority {
      get { if ((_hasBits0 & 1) != 0) { return priority_; } else { return PriorityDefaultValue; } }
      set {
        _hasBits0 |= 1;
        priority_ = value;
      }
    }
    /// <summary>Gets whether the "priority" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPriority {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "priority" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPriority() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "is_playing" field.</summary>
    public const int IsPlayingFieldNumber = 3;
    private readonly static bool IsPlayingDefaultValue = false;

    private bool isPlaying_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPlaying {
      get { if ((_hasBits0 & 2) != 0) { return isPlaying_; } else { return IsPlayingDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isPlaying_ = value;
      }
    }
    /// <summary>Gets whether the "is_playing" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPlaying {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_playing" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPlaying() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "cost" field.</summary>
    public const int CostFieldNumber = 4;
    private readonly static long CostDefaultValue = 0L;

    private long cost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Cost {
      get { if ((_hasBits0 & 4) != 0) { return cost_; } else { return CostDefaultValue; } }
      set {
        _hasBits0 |= 4;
        cost_ = value;
      }
    }
    /// <summary>Gets whether the "cost" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCost {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "cost" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCost() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "item_name" field.</summary>
    public const int ItemNameFieldNumber = 5;
    private readonly static string ItemNameDefaultValue = "";

    private string itemName_;
    /// <summary>
    ///门票
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ItemName {
      get { return itemName_ ?? ItemNameDefaultValue; }
      set {
        itemName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "item_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasItemName {
      get { return itemName_ != null; }
    }
    /// <summary>Clears the value of the "item_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearItemName() {
      itemName_ = null;
    }

    /// <summary>Field number for the "total_player_num" field.</summary>
    public const int TotalPlayerNumFieldNumber = 6;
    private readonly static int TotalPlayerNumDefaultValue = 0;

    private int totalPlayerNum_;
    /// <summary>
    ///总参赛人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalPlayerNum {
      get { if ((_hasBits0 & 8) != 0) { return totalPlayerNum_; } else { return TotalPlayerNumDefaultValue; } }
      set {
        _hasBits0 |= 8;
        totalPlayerNum_ = value;
      }
    }
    /// <summary>Gets whether the "total_player_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalPlayerNum {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "total_player_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalPlayerNum() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "current_player_num" field.</summary>
    public const int CurrentPlayerNumFieldNumber = 7;
    private readonly static int CurrentPlayerNumDefaultValue = 0;

    private int currentPlayerNum_;
    /// <summary>
    ///当前参赛人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrentPlayerNum {
      get { if ((_hasBits0 & 16) != 0) { return currentPlayerNum_; } else { return CurrentPlayerNumDefaultValue; } }
      set {
        _hasBits0 |= 16;
        currentPlayerNum_ = value;
      }
    }
    /// <summary>Gets whether the "current_player_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCurrentPlayerNum {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "current_player_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCurrentPlayerNum() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 8;
    private readonly static string RoomidDefaultValue = "";

    private string roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Roomid {
      get { return roomid_ ?? RoomidDefaultValue; }
      set {
        roomid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return roomid_ != null; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      roomid_ = null;
    }

    /// <summary>Field number for the "signup_type" field.</summary>
    public const int SignupTypeFieldNumber = 9;
    private readonly static global::Texas.Protocol.SignupType SignupTypeDefaultValue = global::Texas.Protocol.SignupType.All;

    private global::Texas.Protocol.SignupType signupType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.SignupType SignupType {
      get { if ((_hasBits0 & 32) != 0) { return signupType_; } else { return SignupTypeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        signupType_ = value;
      }
    }
    /// <summary>Gets whether the "signup_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSignupType {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "signup_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSignupType() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "desc_type" field.</summary>
    public const int DescTypeFieldNumber = 10;
    private readonly static global::Texas.Protocol.OfficialDescType DescTypeDefaultValue = global::Texas.Protocol.OfficialDescType.None;

    private global::Texas.Protocol.OfficialDescType descType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.OfficialDescType DescType {
      get { if ((_hasBits0 & 64) != 0) { return descType_; } else { return DescTypeDefaultValue; } }
      set {
        _hasBits0 |= 64;
        descType_ = value;
      }
    }
    /// <summary>Gets whether the "desc_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDescType {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "desc_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDescType() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "fixed_reward" field.</summary>
    public const int FixedRewardFieldNumber = 11;
    private readonly static bool FixedRewardDefaultValue = false;

    private bool fixedReward_;
    /// <summary>
    /// 是否固定奖池
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FixedReward {
      get { if ((_hasBits0 & 128) != 0) { return fixedReward_; } else { return FixedRewardDefaultValue; } }
      set {
        _hasBits0 |= 128;
        fixedReward_ = value;
      }
    }
    /// <summary>Gets whether the "fixed_reward" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFixedReward {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "fixed_reward" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFixedReward() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 12;
    private readonly static global::Texas.Protocol.OfficialLocation LocationDefaultValue = global::Texas.Protocol.OfficialLocation.Online;

    private global::Texas.Protocol.OfficialLocation location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.OfficialLocation Location {
      get { if ((_hasBits0 & 256) != 0) { return location_; } else { return LocationDefaultValue; } }
      set {
        _hasBits0 |= 256;
        location_ = value;
      }
    }
    /// <summary>Gets whether the "location" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLocation {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "location" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLocation() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "platform_limits" field.</summary>
    public const int PlatformLimitsFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _repeated_platformLimits_codec
        = pb::FieldCodec.ForString(106);
    private readonly pbc::RepeatedField<string> platformLimits_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> PlatformLimits {
      get { return platformLimits_; }
    }

    /// <summary>Field number for the "official_tags" field.</summary>
    public const int OfficialTagsFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Texas.Protocol.OfficialTag> _repeated_officialTags_codec
        = pb::FieldCodec.ForEnum(114, x => (int) x, x => (global::Texas.Protocol.OfficialTag) x);
    private readonly pbc::RepeatedField<global::Texas.Protocol.OfficialTag> officialTags_ = new pbc::RepeatedField<global::Texas.Protocol.OfficialTag>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.OfficialTag> OfficialTags {
      get { return officialTags_; }
    }

    /// <summary>Field number for the "official_rd_type" field.</summary>
    public const int OfficialRdTypeFieldNumber = 15;
    private readonly static int OfficialRdTypeDefaultValue = 0;

    private int officialRdType_;
    /// <summary>
    ///0:普通比赛,1:实物比赛
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OfficialRdType {
      get { if ((_hasBits0 & 512) != 0) { return officialRdType_; } else { return OfficialRdTypeDefaultValue; } }
      set {
        _hasBits0 |= 512;
        officialRdType_ = value;
      }
    }
    /// <summary>Gets whether the "official_rd_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOfficialRdType {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "official_rd_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOfficialRdType() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "room_type" field.</summary>
    public const int RoomTypeFieldNumber = 16;
    private readonly static global::Texas.Protocol.RoomType RoomTypeDefaultValue = global::Texas.Protocol.RoomType.TestRoom;

    private global::Texas.Protocol.RoomType roomType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomType RoomType {
      get { if ((_hasBits0 & 1024) != 0) { return roomType_; } else { return RoomTypeDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        roomType_ = value;
      }
    }
    /// <summary>Gets whether the "room_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomType {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "room_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomType() {
      _hasBits0 &= ~1024;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SngItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SngItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tempid != other.Tempid) return false;
      if (Priority != other.Priority) return false;
      if (IsPlaying != other.IsPlaying) return false;
      if (Cost != other.Cost) return false;
      if (ItemName != other.ItemName) return false;
      if (TotalPlayerNum != other.TotalPlayerNum) return false;
      if (CurrentPlayerNum != other.CurrentPlayerNum) return false;
      if (Roomid != other.Roomid) return false;
      if (SignupType != other.SignupType) return false;
      if (DescType != other.DescType) return false;
      if (FixedReward != other.FixedReward) return false;
      if (Location != other.Location) return false;
      if(!platformLimits_.Equals(other.platformLimits_)) return false;
      if(!officialTags_.Equals(other.officialTags_)) return false;
      if (OfficialRdType != other.OfficialRdType) return false;
      if (RoomType != other.RoomType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTempid) hash ^= Tempid.GetHashCode();
      if (HasPriority) hash ^= Priority.GetHashCode();
      if (HasIsPlaying) hash ^= IsPlaying.GetHashCode();
      if (HasCost) hash ^= Cost.GetHashCode();
      if (HasItemName) hash ^= ItemName.GetHashCode();
      if (HasTotalPlayerNum) hash ^= TotalPlayerNum.GetHashCode();
      if (HasCurrentPlayerNum) hash ^= CurrentPlayerNum.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasSignupType) hash ^= SignupType.GetHashCode();
      if (HasDescType) hash ^= DescType.GetHashCode();
      if (HasFixedReward) hash ^= FixedReward.GetHashCode();
      if (HasLocation) hash ^= Location.GetHashCode();
      hash ^= platformLimits_.GetHashCode();
      hash ^= officialTags_.GetHashCode();
      if (HasOfficialRdType) hash ^= OfficialRdType.GetHashCode();
      if (HasRoomType) hash ^= RoomType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTempid) {
        output.WriteRawTag(10);
        output.WriteString(Tempid);
      }
      if (HasPriority) {
        output.WriteRawTag(16);
        output.WriteInt32(Priority);
      }
      if (HasIsPlaying) {
        output.WriteRawTag(24);
        output.WriteBool(IsPlaying);
      }
      if (HasCost) {
        output.WriteRawTag(32);
        output.WriteInt64(Cost);
      }
      if (HasItemName) {
        output.WriteRawTag(42);
        output.WriteString(ItemName);
      }
      if (HasTotalPlayerNum) {
        output.WriteRawTag(48);
        output.WriteInt32(TotalPlayerNum);
      }
      if (HasCurrentPlayerNum) {
        output.WriteRawTag(56);
        output.WriteInt32(CurrentPlayerNum);
      }
      if (HasRoomid) {
        output.WriteRawTag(66);
        output.WriteString(Roomid);
      }
      if (HasSignupType) {
        output.WriteRawTag(72);
        output.WriteEnum((int) SignupType);
      }
      if (HasDescType) {
        output.WriteRawTag(80);
        output.WriteEnum((int) DescType);
      }
      if (HasFixedReward) {
        output.WriteRawTag(88);
        output.WriteBool(FixedReward);
      }
      if (HasLocation) {
        output.WriteRawTag(96);
        output.WriteEnum((int) Location);
      }
      platformLimits_.WriteTo(output, _repeated_platformLimits_codec);
      officialTags_.WriteTo(output, _repeated_officialTags_codec);
      if (HasOfficialRdType) {
        output.WriteRawTag(120);
        output.WriteInt32(OfficialRdType);
      }
      if (HasRoomType) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) RoomType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTempid) {
        output.WriteRawTag(10);
        output.WriteString(Tempid);
      }
      if (HasPriority) {
        output.WriteRawTag(16);
        output.WriteInt32(Priority);
      }
      if (HasIsPlaying) {
        output.WriteRawTag(24);
        output.WriteBool(IsPlaying);
      }
      if (HasCost) {
        output.WriteRawTag(32);
        output.WriteInt64(Cost);
      }
      if (HasItemName) {
        output.WriteRawTag(42);
        output.WriteString(ItemName);
      }
      if (HasTotalPlayerNum) {
        output.WriteRawTag(48);
        output.WriteInt32(TotalPlayerNum);
      }
      if (HasCurrentPlayerNum) {
        output.WriteRawTag(56);
        output.WriteInt32(CurrentPlayerNum);
      }
      if (HasRoomid) {
        output.WriteRawTag(66);
        output.WriteString(Roomid);
      }
      if (HasSignupType) {
        output.WriteRawTag(72);
        output.WriteEnum((int) SignupType);
      }
      if (HasDescType) {
        output.WriteRawTag(80);
        output.WriteEnum((int) DescType);
      }
      if (HasFixedReward) {
        output.WriteRawTag(88);
        output.WriteBool(FixedReward);
      }
      if (HasLocation) {
        output.WriteRawTag(96);
        output.WriteEnum((int) Location);
      }
      platformLimits_.WriteTo(ref output, _repeated_platformLimits_codec);
      officialTags_.WriteTo(ref output, _repeated_officialTags_codec);
      if (HasOfficialRdType) {
        output.WriteRawTag(120);
        output.WriteInt32(OfficialRdType);
      }
      if (HasRoomType) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) RoomType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTempid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tempid);
      }
      if (HasPriority) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Priority);
      }
      if (HasIsPlaying) {
        size += 1 + 1;
      }
      if (HasCost) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Cost);
      }
      if (HasItemName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemName);
      }
      if (HasTotalPlayerNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPlayerNum);
      }
      if (HasCurrentPlayerNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentPlayerNum);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Roomid);
      }
      if (HasSignupType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SignupType);
      }
      if (HasDescType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DescType);
      }
      if (HasFixedReward) {
        size += 1 + 1;
      }
      if (HasLocation) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Location);
      }
      size += platformLimits_.CalculateSize(_repeated_platformLimits_codec);
      size += officialTags_.CalculateSize(_repeated_officialTags_codec);
      if (HasOfficialRdType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OfficialRdType);
      }
      if (HasRoomType) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) RoomType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SngItem other) {
      if (other == null) {
        return;
      }
      if (other.HasTempid) {
        Tempid = other.Tempid;
      }
      if (other.HasPriority) {
        Priority = other.Priority;
      }
      if (other.HasIsPlaying) {
        IsPlaying = other.IsPlaying;
      }
      if (other.HasCost) {
        Cost = other.Cost;
      }
      if (other.HasItemName) {
        ItemName = other.ItemName;
      }
      if (other.HasTotalPlayerNum) {
        TotalPlayerNum = other.TotalPlayerNum;
      }
      if (other.HasCurrentPlayerNum) {
        CurrentPlayerNum = other.CurrentPlayerNum;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasSignupType) {
        SignupType = other.SignupType;
      }
      if (other.HasDescType) {
        DescType = other.DescType;
      }
      if (other.HasFixedReward) {
        FixedReward = other.FixedReward;
      }
      if (other.HasLocation) {
        Location = other.Location;
      }
      platformLimits_.Add(other.platformLimits_);
      officialTags_.Add(other.officialTags_);
      if (other.HasOfficialRdType) {
        OfficialRdType = other.OfficialRdType;
      }
      if (other.HasRoomType) {
        RoomType = other.RoomType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tempid = input.ReadString();
            break;
          }
          case 16: {
            Priority = input.ReadInt32();
            break;
          }
          case 24: {
            IsPlaying = input.ReadBool();
            break;
          }
          case 32: {
            Cost = input.ReadInt64();
            break;
          }
          case 42: {
            ItemName = input.ReadString();
            break;
          }
          case 48: {
            TotalPlayerNum = input.ReadInt32();
            break;
          }
          case 56: {
            CurrentPlayerNum = input.ReadInt32();
            break;
          }
          case 66: {
            Roomid = input.ReadString();
            break;
          }
          case 72: {
            SignupType = (global::Texas.Protocol.SignupType) input.ReadEnum();
            break;
          }
          case 80: {
            DescType = (global::Texas.Protocol.OfficialDescType) input.ReadEnum();
            break;
          }
          case 88: {
            FixedReward = input.ReadBool();
            break;
          }
          case 96: {
            Location = (global::Texas.Protocol.OfficialLocation) input.ReadEnum();
            break;
          }
          case 106: {
            platformLimits_.AddEntriesFrom(input, _repeated_platformLimits_codec);
            break;
          }
          case 114:
          case 112: {
            officialTags_.AddEntriesFrom(input, _repeated_officialTags_codec);
            break;
          }
          case 120: {
            OfficialRdType = input.ReadInt32();
            break;
          }
          case 128: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Tempid = input.ReadString();
            break;
          }
          case 16: {
            Priority = input.ReadInt32();
            break;
          }
          case 24: {
            IsPlaying = input.ReadBool();
            break;
          }
          case 32: {
            Cost = input.ReadInt64();
            break;
          }
          case 42: {
            ItemName = input.ReadString();
            break;
          }
          case 48: {
            TotalPlayerNum = input.ReadInt32();
            break;
          }
          case 56: {
            CurrentPlayerNum = input.ReadInt32();
            break;
          }
          case 66: {
            Roomid = input.ReadString();
            break;
          }
          case 72: {
            SignupType = (global::Texas.Protocol.SignupType) input.ReadEnum();
            break;
          }
          case 80: {
            DescType = (global::Texas.Protocol.OfficialDescType) input.ReadEnum();
            break;
          }
          case 88: {
            FixedReward = input.ReadBool();
            break;
          }
          case 96: {
            Location = (global::Texas.Protocol.OfficialLocation) input.ReadEnum();
            break;
          }
          case 106: {
            platformLimits_.AddEntriesFrom(ref input, _repeated_platformLimits_codec);
            break;
          }
          case 114:
          case 112: {
            officialTags_.AddEntriesFrom(ref input, _repeated_officialTags_codec);
            break;
          }
          case 120: {
            OfficialRdType = input.ReadInt32();
            break;
          }
          case 128: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OfficialRecommendListREQ : pb::IMessage<OfficialRecommendListREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OfficialRecommendListREQ> _parser = new pb::MessageParser<OfficialRecommendListREQ>(() => new OfficialRecommendListREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OfficialRecommendListREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialRecommendListREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialRecommendListREQ(OfficialRecommendListREQ other) : this() {
      _hasBits0 = other._hasBits0;
      startIndex_ = other.startIndex_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialRecommendListREQ Clone() {
      return new OfficialRecommendListREQ(this);
    }

    /// <summary>Field number for the "start_index" field.</summary>
    public const int StartIndexFieldNumber = 1;
    private readonly static int StartIndexDefaultValue = 0;

    private int startIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartIndex {
      get { if ((_hasBits0 & 1) != 0) { return startIndex_; } else { return StartIndexDefaultValue; } }
      set {
        _hasBits0 |= 1;
        startIndex_ = value;
      }
    }
    /// <summary>Gets whether the "start_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartIndex {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "start_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartIndex() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private readonly static int AmountDefaultValue = 0;

    private int amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Amount {
      get { if ((_hasBits0 & 2) != 0) { return amount_; } else { return AmountDefaultValue; } }
      set {
        _hasBits0 |= 2;
        amount_ = value;
      }
    }
    /// <summary>Gets whether the "amount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAmount {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "amount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAmount() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OfficialRecommendListREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OfficialRecommendListREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartIndex != other.StartIndex) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStartIndex) hash ^= StartIndex.GetHashCode();
      if (HasAmount) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasStartIndex) {
        output.WriteRawTag(8);
        output.WriteInt32(StartIndex);
      }
      if (HasAmount) {
        output.WriteRawTag(16);
        output.WriteInt32(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasStartIndex) {
        output.WriteRawTag(8);
        output.WriteInt32(StartIndex);
      }
      if (HasAmount) {
        output.WriteRawTag(16);
        output.WriteInt32(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasStartIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (HasAmount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OfficialRecommendListREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasStartIndex) {
        StartIndex = other.StartIndex;
      }
      if (other.HasAmount) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 16: {
            Amount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 16: {
            Amount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OfficialRecommendListRSP : pb::IMessage<OfficialRecommendListRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OfficialRecommendListRSP> _parser = new pb::MessageParser<OfficialRecommendListRSP>(() => new OfficialRecommendListRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OfficialRecommendListRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialRecommendListRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialRecommendListRSP(OfficialRecommendListRSP other) : this() {
      _hasBits0 = other._hasBits0;
      mtt_ = other.mtt_.Clone();
      mttNum_ = other.mttNum_;
      startIndex_ = other.startIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialRecommendListRSP Clone() {
      return new OfficialRecommendListRSP(this);
    }

    /// <summary>Field number for the "mtt" field.</summary>
    public const int MttFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.MttItem> _repeated_mtt_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.MttItem.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.MttItem> mtt_ = new pbc::RepeatedField<global::Texas.Protocol.MttItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.MttItem> Mtt {
      get { return mtt_; }
    }

    /// <summary>Field number for the "mtt_num" field.</summary>
    public const int MttNumFieldNumber = 2;
    private readonly static int MttNumDefaultValue = 0;

    private int mttNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MttNum {
      get { if ((_hasBits0 & 1) != 0) { return mttNum_; } else { return MttNumDefaultValue; } }
      set {
        _hasBits0 |= 1;
        mttNum_ = value;
      }
    }
    /// <summary>Gets whether the "mtt_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMttNum {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "mtt_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMttNum() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "start_index" field.</summary>
    public const int StartIndexFieldNumber = 3;
    private readonly static int StartIndexDefaultValue = 0;

    private int startIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartIndex {
      get { if ((_hasBits0 & 2) != 0) { return startIndex_; } else { return StartIndexDefaultValue; } }
      set {
        _hasBits0 |= 2;
        startIndex_ = value;
      }
    }
    /// <summary>Gets whether the "start_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartIndex {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "start_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartIndex() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OfficialRecommendListRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OfficialRecommendListRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mtt_.Equals(other.mtt_)) return false;
      if (MttNum != other.MttNum) return false;
      if (StartIndex != other.StartIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mtt_.GetHashCode();
      if (HasMttNum) hash ^= MttNum.GetHashCode();
      if (HasStartIndex) hash ^= StartIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mtt_.WriteTo(output, _repeated_mtt_codec);
      if (HasMttNum) {
        output.WriteRawTag(16);
        output.WriteInt32(MttNum);
      }
      if (HasStartIndex) {
        output.WriteRawTag(24);
        output.WriteInt32(StartIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mtt_.WriteTo(ref output, _repeated_mtt_codec);
      if (HasMttNum) {
        output.WriteRawTag(16);
        output.WriteInt32(MttNum);
      }
      if (HasStartIndex) {
        output.WriteRawTag(24);
        output.WriteInt32(StartIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += mtt_.CalculateSize(_repeated_mtt_codec);
      if (HasMttNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MttNum);
      }
      if (HasStartIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OfficialRecommendListRSP other) {
      if (other == null) {
        return;
      }
      mtt_.Add(other.mtt_);
      if (other.HasMttNum) {
        MttNum = other.MttNum;
      }
      if (other.HasStartIndex) {
        StartIndex = other.StartIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mtt_.AddEntriesFrom(input, _repeated_mtt_codec);
            break;
          }
          case 16: {
            MttNum = input.ReadInt32();
            break;
          }
          case 24: {
            StartIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mtt_.AddEntriesFrom(ref input, _repeated_mtt_codec);
            break;
          }
          case 16: {
            MttNum = input.ReadInt32();
            break;
          }
          case 24: {
            StartIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OfficialSngListREQ : pb::IMessage<OfficialSngListREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OfficialSngListREQ> _parser = new pb::MessageParser<OfficialSngListREQ>(() => new OfficialSngListREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OfficialSngListREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialSngListREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialSngListREQ(OfficialSngListREQ other) : this() {
      _hasBits0 = other._hasBits0;
      startIndex_ = other.startIndex_;
      amount_ = other.amount_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialSngListREQ Clone() {
      return new OfficialSngListREQ(this);
    }

    /// <summary>Field number for the "start_index" field.</summary>
    public const int StartIndexFieldNumber = 1;
    private readonly static int StartIndexDefaultValue = 0;

    private int startIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartIndex {
      get { if ((_hasBits0 & 1) != 0) { return startIndex_; } else { return StartIndexDefaultValue; } }
      set {
        _hasBits0 |= 1;
        startIndex_ = value;
      }
    }
    /// <summary>Gets whether the "start_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartIndex {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "start_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartIndex() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private readonly static int AmountDefaultValue = 0;

    private int amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Amount {
      get { if ((_hasBits0 & 2) != 0) { return amount_; } else { return AmountDefaultValue; } }
      set {
        _hasBits0 |= 2;
        amount_ = value;
      }
    }
    /// <summary>Gets whether the "amount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAmount {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "amount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAmount() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    ///0only sng list, 1sng and spinup list
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 4) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OfficialSngListREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OfficialSngListREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartIndex != other.StartIndex) return false;
      if (Amount != other.Amount) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStartIndex) hash ^= StartIndex.GetHashCode();
      if (HasAmount) hash ^= Amount.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasStartIndex) {
        output.WriteRawTag(8);
        output.WriteInt32(StartIndex);
      }
      if (HasAmount) {
        output.WriteRawTag(16);
        output.WriteInt32(Amount);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasStartIndex) {
        output.WriteRawTag(8);
        output.WriteInt32(StartIndex);
      }
      if (HasAmount) {
        output.WriteRawTag(16);
        output.WriteInt32(Amount);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasStartIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (HasAmount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OfficialSngListREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasStartIndex) {
        StartIndex = other.StartIndex;
      }
      if (other.HasAmount) {
        Amount = other.Amount;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 16: {
            Amount = input.ReadInt32();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 16: {
            Amount = input.ReadInt32();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OfficialSngListRSP : pb::IMessage<OfficialSngListRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OfficialSngListRSP> _parser = new pb::MessageParser<OfficialSngListRSP>(() => new OfficialSngListRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OfficialSngListRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialSngListRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialSngListRSP(OfficialSngListRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      sng_ = other.sng_.Clone();
      sngNum_ = other.sngNum_;
      startIndex_ = other.startIndex_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialSngListRSP Clone() {
      return new OfficialSngListRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// 0:正常;-1:SNG停服
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "sng" field.</summary>
    public const int SngFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Texas.Protocol.SngItem> _repeated_sng_codec
        = pb::FieldCodec.ForMessage(18, global::Texas.Protocol.SngItem.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.SngItem> sng_ = new pbc::RepeatedField<global::Texas.Protocol.SngItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.SngItem> Sng {
      get { return sng_; }
    }

    /// <summary>Field number for the "sng_num" field.</summary>
    public const int SngNumFieldNumber = 3;
    private readonly static int SngNumDefaultValue = 0;

    private int sngNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SngNum {
      get { if ((_hasBits0 & 2) != 0) { return sngNum_; } else { return SngNumDefaultValue; } }
      set {
        _hasBits0 |= 2;
        sngNum_ = value;
      }
    }
    /// <summary>Gets whether the "sng_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSngNum {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "sng_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSngNum() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "start_index" field.</summary>
    public const int StartIndexFieldNumber = 4;
    private readonly static int StartIndexDefaultValue = 0;

    private int startIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartIndex {
      get { if ((_hasBits0 & 4) != 0) { return startIndex_; } else { return StartIndexDefaultValue; } }
      set {
        _hasBits0 |= 4;
        startIndex_ = value;
      }
    }
    /// <summary>Gets whether the "start_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartIndex {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "start_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartIndex() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    ///0only sng list, 1sng and spinup list
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 8) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OfficialSngListRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OfficialSngListRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if(!sng_.Equals(other.sng_)) return false;
      if (SngNum != other.SngNum) return false;
      if (StartIndex != other.StartIndex) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      hash ^= sng_.GetHashCode();
      if (HasSngNum) hash ^= SngNum.GetHashCode();
      if (HasStartIndex) hash ^= StartIndex.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      sng_.WriteTo(output, _repeated_sng_codec);
      if (HasSngNum) {
        output.WriteRawTag(24);
        output.WriteInt32(SngNum);
      }
      if (HasStartIndex) {
        output.WriteRawTag(32);
        output.WriteInt32(StartIndex);
      }
      if (HasType) {
        output.WriteRawTag(40);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      sng_.WriteTo(ref output, _repeated_sng_codec);
      if (HasSngNum) {
        output.WriteRawTag(24);
        output.WriteInt32(SngNum);
      }
      if (HasStartIndex) {
        output.WriteRawTag(32);
        output.WriteInt32(StartIndex);
      }
      if (HasType) {
        output.WriteRawTag(40);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      size += sng_.CalculateSize(_repeated_sng_codec);
      if (HasSngNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SngNum);
      }
      if (HasStartIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OfficialSngListRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      sng_.Add(other.sng_);
      if (other.HasSngNum) {
        SngNum = other.SngNum;
      }
      if (other.HasStartIndex) {
        StartIndex = other.StartIndex;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            sng_.AddEntriesFrom(input, _repeated_sng_codec);
            break;
          }
          case 24: {
            SngNum = input.ReadInt32();
            break;
          }
          case 32: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 40: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            sng_.AddEntriesFrom(ref input, _repeated_sng_codec);
            break;
          }
          case 24: {
            SngNum = input.ReadInt32();
            break;
          }
          case 32: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 40: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OfficialMttListREQ : pb::IMessage<OfficialMttListREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OfficialMttListREQ> _parser = new pb::MessageParser<OfficialMttListREQ>(() => new OfficialMttListREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OfficialMttListREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttListREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttListREQ(OfficialMttListREQ other) : this() {
      _hasBits0 = other._hasBits0;
      startIndex_ = other.startIndex_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttListREQ Clone() {
      return new OfficialMttListREQ(this);
    }

    /// <summary>Field number for the "start_index" field.</summary>
    public const int StartIndexFieldNumber = 1;
    private readonly static int StartIndexDefaultValue = 0;

    private int startIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartIndex {
      get { if ((_hasBits0 & 1) != 0) { return startIndex_; } else { return StartIndexDefaultValue; } }
      set {
        _hasBits0 |= 1;
        startIndex_ = value;
      }
    }
    /// <summary>Gets whether the "start_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartIndex {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "start_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartIndex() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private readonly static int AmountDefaultValue = 0;

    private int amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Amount {
      get { if ((_hasBits0 & 2) != 0) { return amount_; } else { return AmountDefaultValue; } }
      set {
        _hasBits0 |= 2;
        amount_ = value;
      }
    }
    /// <summary>Gets whether the "amount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAmount {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "amount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAmount() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OfficialMttListREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OfficialMttListREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartIndex != other.StartIndex) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStartIndex) hash ^= StartIndex.GetHashCode();
      if (HasAmount) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasStartIndex) {
        output.WriteRawTag(8);
        output.WriteInt32(StartIndex);
      }
      if (HasAmount) {
        output.WriteRawTag(16);
        output.WriteInt32(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasStartIndex) {
        output.WriteRawTag(8);
        output.WriteInt32(StartIndex);
      }
      if (HasAmount) {
        output.WriteRawTag(16);
        output.WriteInt32(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasStartIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (HasAmount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OfficialMttListREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasStartIndex) {
        StartIndex = other.StartIndex;
      }
      if (other.HasAmount) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 16: {
            Amount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 16: {
            Amount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OfficialMttListRSP : pb::IMessage<OfficialMttListRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OfficialMttListRSP> _parser = new pb::MessageParser<OfficialMttListRSP>(() => new OfficialMttListRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OfficialMttListRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttListRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttListRSP(OfficialMttListRSP other) : this() {
      _hasBits0 = other._hasBits0;
      mtt_ = other.mtt_.Clone();
      mttNum_ = other.mttNum_;
      startIndex_ = other.startIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttListRSP Clone() {
      return new OfficialMttListRSP(this);
    }

    /// <summary>Field number for the "mtt" field.</summary>
    public const int MttFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.MttItem> _repeated_mtt_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.MttItem.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.MttItem> mtt_ = new pbc::RepeatedField<global::Texas.Protocol.MttItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.MttItem> Mtt {
      get { return mtt_; }
    }

    /// <summary>Field number for the "mtt_num" field.</summary>
    public const int MttNumFieldNumber = 2;
    private readonly static int MttNumDefaultValue = 0;

    private int mttNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MttNum {
      get { if ((_hasBits0 & 1) != 0) { return mttNum_; } else { return MttNumDefaultValue; } }
      set {
        _hasBits0 |= 1;
        mttNum_ = value;
      }
    }
    /// <summary>Gets whether the "mtt_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMttNum {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "mtt_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMttNum() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "start_index" field.</summary>
    public const int StartIndexFieldNumber = 3;
    private readonly static int StartIndexDefaultValue = 0;

    private int startIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartIndex {
      get { if ((_hasBits0 & 2) != 0) { return startIndex_; } else { return StartIndexDefaultValue; } }
      set {
        _hasBits0 |= 2;
        startIndex_ = value;
      }
    }
    /// <summary>Gets whether the "start_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartIndex {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "start_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartIndex() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OfficialMttListRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OfficialMttListRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mtt_.Equals(other.mtt_)) return false;
      if (MttNum != other.MttNum) return false;
      if (StartIndex != other.StartIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mtt_.GetHashCode();
      if (HasMttNum) hash ^= MttNum.GetHashCode();
      if (HasStartIndex) hash ^= StartIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mtt_.WriteTo(output, _repeated_mtt_codec);
      if (HasMttNum) {
        output.WriteRawTag(16);
        output.WriteInt32(MttNum);
      }
      if (HasStartIndex) {
        output.WriteRawTag(24);
        output.WriteInt32(StartIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mtt_.WriteTo(ref output, _repeated_mtt_codec);
      if (HasMttNum) {
        output.WriteRawTag(16);
        output.WriteInt32(MttNum);
      }
      if (HasStartIndex) {
        output.WriteRawTag(24);
        output.WriteInt32(StartIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += mtt_.CalculateSize(_repeated_mtt_codec);
      if (HasMttNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MttNum);
      }
      if (HasStartIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OfficialMttListRSP other) {
      if (other == null) {
        return;
      }
      mtt_.Add(other.mtt_);
      if (other.HasMttNum) {
        MttNum = other.MttNum;
      }
      if (other.HasStartIndex) {
        StartIndex = other.StartIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mtt_.AddEntriesFrom(input, _repeated_mtt_codec);
            break;
          }
          case 16: {
            MttNum = input.ReadInt32();
            break;
          }
          case 24: {
            StartIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mtt_.AddEntriesFrom(ref input, _repeated_mtt_codec);
            break;
          }
          case 16: {
            MttNum = input.ReadInt32();
            break;
          }
          case 24: {
            StartIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OfficialSignupListREQ : pb::IMessage<OfficialSignupListREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OfficialSignupListREQ> _parser = new pb::MessageParser<OfficialSignupListREQ>(() => new OfficialSignupListREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OfficialSignupListREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialSignupListREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialSignupListREQ(OfficialSignupListREQ other) : this() {
      _hasBits0 = other._hasBits0;
      startIndex_ = other.startIndex_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialSignupListREQ Clone() {
      return new OfficialSignupListREQ(this);
    }

    /// <summary>Field number for the "start_index" field.</summary>
    public const int StartIndexFieldNumber = 1;
    private readonly static int StartIndexDefaultValue = 0;

    private int startIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartIndex {
      get { if ((_hasBits0 & 1) != 0) { return startIndex_; } else { return StartIndexDefaultValue; } }
      set {
        _hasBits0 |= 1;
        startIndex_ = value;
      }
    }
    /// <summary>Gets whether the "start_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartIndex {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "start_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartIndex() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private readonly static int AmountDefaultValue = 0;

    private int amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Amount {
      get { if ((_hasBits0 & 2) != 0) { return amount_; } else { return AmountDefaultValue; } }
      set {
        _hasBits0 |= 2;
        amount_ = value;
      }
    }
    /// <summary>Gets whether the "amount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAmount {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "amount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAmount() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OfficialSignupListREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OfficialSignupListREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartIndex != other.StartIndex) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStartIndex) hash ^= StartIndex.GetHashCode();
      if (HasAmount) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasStartIndex) {
        output.WriteRawTag(8);
        output.WriteInt32(StartIndex);
      }
      if (HasAmount) {
        output.WriteRawTag(16);
        output.WriteInt32(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasStartIndex) {
        output.WriteRawTag(8);
        output.WriteInt32(StartIndex);
      }
      if (HasAmount) {
        output.WriteRawTag(16);
        output.WriteInt32(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasStartIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (HasAmount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OfficialSignupListREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasStartIndex) {
        StartIndex = other.StartIndex;
      }
      if (other.HasAmount) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 16: {
            Amount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StartIndex = input.ReadInt32();
            break;
          }
          case 16: {
            Amount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OfficialSignupListRSP : pb::IMessage<OfficialSignupListRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OfficialSignupListRSP> _parser = new pb::MessageParser<OfficialSignupListRSP>(() => new OfficialSignupListRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OfficialSignupListRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialSignupListRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialSignupListRSP(OfficialSignupListRSP other) : this() {
      _hasBits0 = other._hasBits0;
      mtt_ = other.mtt_.Clone();
      mttNum_ = other.mttNum_;
      startIndex_ = other.startIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialSignupListRSP Clone() {
      return new OfficialSignupListRSP(this);
    }

    /// <summary>Field number for the "mtt" field.</summary>
    public const int MttFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.MttItem> _repeated_mtt_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.MttItem.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.MttItem> mtt_ = new pbc::RepeatedField<global::Texas.Protocol.MttItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.MttItem> Mtt {
      get { return mtt_; }
    }

    /// <summary>Field number for the "mtt_num" field.</summary>
    public const int MttNumFieldNumber = 2;
    private readonly static int MttNumDefaultValue = 0;

    private int mttNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MttNum {
      get { if ((_hasBits0 & 1) != 0) { return mttNum_; } else { return MttNumDefaultValue; } }
      set {
        _hasBits0 |= 1;
        mttNum_ = value;
      }
    }
    /// <summary>Gets whether the "mtt_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMttNum {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "mtt_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMttNum() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "start_index" field.</summary>
    public const int StartIndexFieldNumber = 3;
    private readonly static int StartIndexDefaultValue = 0;

    private int startIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartIndex {
      get { if ((_hasBits0 & 2) != 0) { return startIndex_; } else { return StartIndexDefaultValue; } }
      set {
        _hasBits0 |= 2;
        startIndex_ = value;
      }
    }
    /// <summary>Gets whether the "start_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartIndex {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "start_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartIndex() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OfficialSignupListRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OfficialSignupListRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mtt_.Equals(other.mtt_)) return false;
      if (MttNum != other.MttNum) return false;
      if (StartIndex != other.StartIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mtt_.GetHashCode();
      if (HasMttNum) hash ^= MttNum.GetHashCode();
      if (HasStartIndex) hash ^= StartIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mtt_.WriteTo(output, _repeated_mtt_codec);
      if (HasMttNum) {
        output.WriteRawTag(16);
        output.WriteInt32(MttNum);
      }
      if (HasStartIndex) {
        output.WriteRawTag(24);
        output.WriteInt32(StartIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mtt_.WriteTo(ref output, _repeated_mtt_codec);
      if (HasMttNum) {
        output.WriteRawTag(16);
        output.WriteInt32(MttNum);
      }
      if (HasStartIndex) {
        output.WriteRawTag(24);
        output.WriteInt32(StartIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += mtt_.CalculateSize(_repeated_mtt_codec);
      if (HasMttNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MttNum);
      }
      if (HasStartIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OfficialSignupListRSP other) {
      if (other == null) {
        return;
      }
      mtt_.Add(other.mtt_);
      if (other.HasMttNum) {
        MttNum = other.MttNum;
      }
      if (other.HasStartIndex) {
        StartIndex = other.StartIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mtt_.AddEntriesFrom(input, _repeated_mtt_codec);
            break;
          }
          case 16: {
            MttNum = input.ReadInt32();
            break;
          }
          case 24: {
            StartIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mtt_.AddEntriesFrom(ref input, _repeated_mtt_codec);
            break;
          }
          case 16: {
            MttNum = input.ReadInt32();
            break;
          }
          case 24: {
            StartIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttUserScoreInfo : pb::IMessage<MttUserScoreInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttUserScoreInfo> _parser = new pb::MessageParser<MttUserScoreInfo>(() => new MttUserScoreInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttUserScoreInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttUserScoreInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttUserScoreInfo(MttUserScoreInfo other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      name_ = other.name_;
      icon_ = other.icon_;
      score_ = other.score_;
      clubid_ = other.clubid_;
      clubName_ = other.clubName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttUserScoreInfo Clone() {
      return new MttUserScoreInfo(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static string UidDefaultValue = "";

    private string uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_ ?? UidDefaultValue; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return uid_ != null; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      uid_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 3;
    private readonly static string IconDefaultValue = "";

    private string icon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Icon {
      get { return icon_ ?? IconDefaultValue; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIcon {
      get { return icon_ != null; }
    }
    /// <summary>Clears the value of the "icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIcon() {
      icon_ = null;
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 4;
    private readonly static int ScoreDefaultValue = 0;

    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Score {
      get { if ((_hasBits0 & 1) != 0) { return score_; } else { return ScoreDefaultValue; } }
      set {
        _hasBits0 |= 1;
        score_ = value;
      }
    }
    /// <summary>Gets whether the "score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScore {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScore() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 5;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "club_name" field.</summary>
    public const int ClubNameFieldNumber = 6;
    private readonly static string ClubNameDefaultValue = "";

    private string clubName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClubName {
      get { return clubName_ ?? ClubNameDefaultValue; }
      set {
        clubName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "club_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubName {
      get { return clubName_ != null; }
    }
    /// <summary>Clears the value of the "club_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubName() {
      clubName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttUserScoreInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttUserScoreInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Name != other.Name) return false;
      if (Icon != other.Icon) return false;
      if (Score != other.Score) return false;
      if (Clubid != other.Clubid) return false;
      if (ClubName != other.ClubName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasIcon) hash ^= Icon.GetHashCode();
      if (HasScore) hash ^= Score.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasClubName) hash ^= ClubName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasIcon) {
        output.WriteRawTag(26);
        output.WriteString(Icon);
      }
      if (HasScore) {
        output.WriteRawTag(32);
        output.WriteInt32(Score);
      }
      if (HasClubid) {
        output.WriteRawTag(42);
        output.WriteString(Clubid);
      }
      if (HasClubName) {
        output.WriteRawTag(50);
        output.WriteString(ClubName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasIcon) {
        output.WriteRawTag(26);
        output.WriteString(Icon);
      }
      if (HasScore) {
        output.WriteRawTag(32);
        output.WriteInt32(Score);
      }
      if (HasClubid) {
        output.WriteRawTag(42);
        output.WriteString(Clubid);
      }
      if (HasClubName) {
        output.WriteRawTag(50);
        output.WriteString(ClubName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasIcon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (HasScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasClubName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClubName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttUserScoreInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasIcon) {
        Icon = other.Icon;
      }
      if (other.HasScore) {
        Score = other.Score;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasClubName) {
        ClubName = other.ClubName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Icon = input.ReadString();
            break;
          }
          case 32: {
            Score = input.ReadInt32();
            break;
          }
          case 42: {
            Clubid = input.ReadString();
            break;
          }
          case 50: {
            ClubName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Icon = input.ReadString();
            break;
          }
          case 32: {
            Score = input.ReadInt32();
            break;
          }
          case 42: {
            Clubid = input.ReadString();
            break;
          }
          case 50: {
            ClubName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttClubScoreInfo : pb::IMessage<MttClubScoreInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttClubScoreInfo> _parser = new pb::MessageParser<MttClubScoreInfo>(() => new MttClubScoreInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttClubScoreInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttClubScoreInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttClubScoreInfo(MttClubScoreInfo other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      clubName_ = other.clubName_;
      clubIcon_ = other.clubIcon_;
      clubScore_ = other.clubScore_;
      founder_ = other.founder_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttClubScoreInfo Clone() {
      return new MttClubScoreInfo(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "club_name" field.</summary>
    public const int ClubNameFieldNumber = 2;
    private readonly static string ClubNameDefaultValue = "";

    private string clubName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClubName {
      get { return clubName_ ?? ClubNameDefaultValue; }
      set {
        clubName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "club_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubName {
      get { return clubName_ != null; }
    }
    /// <summary>Clears the value of the "club_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubName() {
      clubName_ = null;
    }

    /// <summary>Field number for the "club_icon" field.</summary>
    public const int ClubIconFieldNumber = 3;
    private readonly static string ClubIconDefaultValue = "";

    private string clubIcon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClubIcon {
      get { return clubIcon_ ?? ClubIconDefaultValue; }
      set {
        clubIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "club_icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubIcon {
      get { return clubIcon_ != null; }
    }
    /// <summary>Clears the value of the "club_icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubIcon() {
      clubIcon_ = null;
    }

    /// <summary>Field number for the "club_score" field.</summary>
    public const int ClubScoreFieldNumber = 4;
    private readonly static int ClubScoreDefaultValue = 0;

    private int clubScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ClubScore {
      get { if ((_hasBits0 & 1) != 0) { return clubScore_; } else { return ClubScoreDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubScore_ = value;
      }
    }
    /// <summary>Gets whether the "club_score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubScore {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubScore() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "founder" field.</summary>
    public const int FounderFieldNumber = 5;
    private readonly static string FounderDefaultValue = "";

    private string founder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Founder {
      get { return founder_ ?? FounderDefaultValue; }
      set {
        founder_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "founder" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFounder {
      get { return founder_ != null; }
    }
    /// <summary>Clears the value of the "founder" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFounder() {
      founder_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttClubScoreInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttClubScoreInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (ClubName != other.ClubName) return false;
      if (ClubIcon != other.ClubIcon) return false;
      if (ClubScore != other.ClubScore) return false;
      if (Founder != other.Founder) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasClubName) hash ^= ClubName.GetHashCode();
      if (HasClubIcon) hash ^= ClubIcon.GetHashCode();
      if (HasClubScore) hash ^= ClubScore.GetHashCode();
      if (HasFounder) hash ^= Founder.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasClubName) {
        output.WriteRawTag(18);
        output.WriteString(ClubName);
      }
      if (HasClubIcon) {
        output.WriteRawTag(26);
        output.WriteString(ClubIcon);
      }
      if (HasClubScore) {
        output.WriteRawTag(32);
        output.WriteInt32(ClubScore);
      }
      if (HasFounder) {
        output.WriteRawTag(42);
        output.WriteString(Founder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(10);
        output.WriteString(Clubid);
      }
      if (HasClubName) {
        output.WriteRawTag(18);
        output.WriteString(ClubName);
      }
      if (HasClubIcon) {
        output.WriteRawTag(26);
        output.WriteString(ClubIcon);
      }
      if (HasClubScore) {
        output.WriteRawTag(32);
        output.WriteInt32(ClubScore);
      }
      if (HasFounder) {
        output.WriteRawTag(42);
        output.WriteString(Founder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasClubName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClubName);
      }
      if (HasClubIcon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClubIcon);
      }
      if (HasClubScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClubScore);
      }
      if (HasFounder) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Founder);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttClubScoreInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasClubName) {
        ClubName = other.ClubName;
      }
      if (other.HasClubIcon) {
        ClubIcon = other.ClubIcon;
      }
      if (other.HasClubScore) {
        ClubScore = other.ClubScore;
      }
      if (other.HasFounder) {
        Founder = other.Founder;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 18: {
            ClubName = input.ReadString();
            break;
          }
          case 26: {
            ClubIcon = input.ReadString();
            break;
          }
          case 32: {
            ClubScore = input.ReadInt32();
            break;
          }
          case 42: {
            Founder = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Clubid = input.ReadString();
            break;
          }
          case 18: {
            ClubName = input.ReadString();
            break;
          }
          case 26: {
            ClubIcon = input.ReadString();
            break;
          }
          case 32: {
            ClubScore = input.ReadInt32();
            break;
          }
          case 42: {
            Founder = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttScoreREQ : pb::IMessage<MttScoreREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttScoreREQ> _parser = new pb::MessageParser<MttScoreREQ>(() => new MttScoreREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttScoreREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttScoreREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttScoreREQ(MttScoreREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttScoreREQ Clone() {
      return new MttScoreREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttScoreREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttScoreREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttScoreREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class MttScoreRSP : pb::IMessage<MttScoreRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttScoreRSP> _parser = new pb::MessageParser<MttScoreRSP>(() => new MttScoreRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttScoreRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttScoreRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttScoreRSP(MttScoreRSP other) : this() {
      _hasBits0 = other._hasBits0;
      score_ = other.score_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttScoreRSP Clone() {
      return new MttScoreRSP(this);
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 1;
    private readonly static int ScoreDefaultValue = 0;

    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Score {
      get { if ((_hasBits0 & 1) != 0) { return score_; } else { return ScoreDefaultValue; } }
      set {
        _hasBits0 |= 1;
        score_ = value;
      }
    }
    /// <summary>Gets whether the "score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScore {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScore() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttScoreRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttScoreRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Score != other.Score) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasScore) hash ^= Score.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasScore) {
        output.WriteRawTag(8);
        output.WriteInt32(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasScore) {
        output.WriteRawTag(8);
        output.WriteInt32(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttScoreRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasScore) {
        Score = other.Score;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Score = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Score = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MttScoreListREQ : pb::IMessage<MttScoreListREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttScoreListREQ> _parser = new pb::MessageParser<MttScoreListREQ>(() => new MttScoreListREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttScoreListREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttScoreListREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttScoreListREQ(MttScoreListREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttScoreListREQ Clone() {
      return new MttScoreListREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttScoreListREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttScoreListREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttScoreListREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class MttScoreListRSP : pb::IMessage<MttScoreListRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MttScoreListRSP> _parser = new pb::MessageParser<MttScoreListRSP>(() => new MttScoreListRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MttScoreListRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttScoreListRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttScoreListRSP(MttScoreListRSP other) : this() {
      _hasBits0 = other._hasBits0;
      userList_ = other.userList_.Clone();
      clubList_ = other.clubList_.Clone();
      score_ = other.score_;
      rank_ = other.rank_;
      clubid_ = other.clubid_;
      clubName_ = other.clubName_;
      timestamp_ = other.timestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MttScoreListRSP Clone() {
      return new MttScoreListRSP(this);
    }

    /// <summary>Field number for the "user_list" field.</summary>
    public const int UserListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.MttUserScoreInfo> _repeated_userList_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.MttUserScoreInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.MttUserScoreInfo> userList_ = new pbc::RepeatedField<global::Texas.Protocol.MttUserScoreInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.MttUserScoreInfo> UserList {
      get { return userList_; }
    }

    /// <summary>Field number for the "club_list" field.</summary>
    public const int ClubListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Texas.Protocol.MttClubScoreInfo> _repeated_clubList_codec
        = pb::FieldCodec.ForMessage(18, global::Texas.Protocol.MttClubScoreInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.MttClubScoreInfo> clubList_ = new pbc::RepeatedField<global::Texas.Protocol.MttClubScoreInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.MttClubScoreInfo> ClubList {
      get { return clubList_; }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 3;
    private readonly static int ScoreDefaultValue = 0;

    private int score_;
    /// <summary>
    ///玩家自己的数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Score {
      get { if ((_hasBits0 & 1) != 0) { return score_; } else { return ScoreDefaultValue; } }
      set {
        _hasBits0 |= 1;
        score_ = value;
      }
    }
    /// <summary>Gets whether the "score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScore {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScore() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 4;
    private readonly static int RankDefaultValue = 0;

    private int rank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rank {
      get { if ((_hasBits0 & 2) != 0) { return rank_; } else { return RankDefaultValue; } }
      set {
        _hasBits0 |= 2;
        rank_ = value;
      }
    }
    /// <summary>Gets whether the "rank" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRank {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "rank" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRank() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 5;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "club_name" field.</summary>
    public const int ClubNameFieldNumber = 6;
    private readonly static string ClubNameDefaultValue = "";

    private string clubName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClubName {
      get { return clubName_ ?? ClubNameDefaultValue; }
      set {
        clubName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "club_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubName {
      get { return clubName_ != null; }
    }
    /// <summary>Clears the value of the "club_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubName() {
      clubName_ = null;
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 7;
    private readonly static long TimestampDefaultValue = 0L;

    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Timestamp {
      get { if ((_hasBits0 & 4) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
      set {
        _hasBits0 |= 4;
        timestamp_ = value;
      }
    }
    /// <summary>Gets whether the "timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimestamp {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimestamp() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MttScoreListRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MttScoreListRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!userList_.Equals(other.userList_)) return false;
      if(!clubList_.Equals(other.clubList_)) return false;
      if (Score != other.Score) return false;
      if (Rank != other.Rank) return false;
      if (Clubid != other.Clubid) return false;
      if (ClubName != other.ClubName) return false;
      if (Timestamp != other.Timestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= userList_.GetHashCode();
      hash ^= clubList_.GetHashCode();
      if (HasScore) hash ^= Score.GetHashCode();
      if (HasRank) hash ^= Rank.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasClubName) hash ^= ClubName.GetHashCode();
      if (HasTimestamp) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      userList_.WriteTo(output, _repeated_userList_codec);
      clubList_.WriteTo(output, _repeated_clubList_codec);
      if (HasScore) {
        output.WriteRawTag(24);
        output.WriteInt32(Score);
      }
      if (HasRank) {
        output.WriteRawTag(32);
        output.WriteInt32(Rank);
      }
      if (HasClubid) {
        output.WriteRawTag(42);
        output.WriteString(Clubid);
      }
      if (HasClubName) {
        output.WriteRawTag(50);
        output.WriteString(ClubName);
      }
      if (HasTimestamp) {
        output.WriteRawTag(56);
        output.WriteInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      userList_.WriteTo(ref output, _repeated_userList_codec);
      clubList_.WriteTo(ref output, _repeated_clubList_codec);
      if (HasScore) {
        output.WriteRawTag(24);
        output.WriteInt32(Score);
      }
      if (HasRank) {
        output.WriteRawTag(32);
        output.WriteInt32(Rank);
      }
      if (HasClubid) {
        output.WriteRawTag(42);
        output.WriteString(Clubid);
      }
      if (HasClubName) {
        output.WriteRawTag(50);
        output.WriteString(ClubName);
      }
      if (HasTimestamp) {
        output.WriteRawTag(56);
        output.WriteInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += userList_.CalculateSize(_repeated_userList_codec);
      size += clubList_.CalculateSize(_repeated_clubList_codec);
      if (HasScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (HasRank) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasClubName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClubName);
      }
      if (HasTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MttScoreListRSP other) {
      if (other == null) {
        return;
      }
      userList_.Add(other.userList_);
      clubList_.Add(other.clubList_);
      if (other.HasScore) {
        Score = other.Score;
      }
      if (other.HasRank) {
        Rank = other.Rank;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasClubName) {
        ClubName = other.ClubName;
      }
      if (other.HasTimestamp) {
        Timestamp = other.Timestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            userList_.AddEntriesFrom(input, _repeated_userList_codec);
            break;
          }
          case 18: {
            clubList_.AddEntriesFrom(input, _repeated_clubList_codec);
            break;
          }
          case 24: {
            Score = input.ReadInt32();
            break;
          }
          case 32: {
            Rank = input.ReadInt32();
            break;
          }
          case 42: {
            Clubid = input.ReadString();
            break;
          }
          case 50: {
            ClubName = input.ReadString();
            break;
          }
          case 56: {
            Timestamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            userList_.AddEntriesFrom(ref input, _repeated_userList_codec);
            break;
          }
          case 18: {
            clubList_.AddEntriesFrom(ref input, _repeated_clubList_codec);
            break;
          }
          case 24: {
            Score = input.ReadInt32();
            break;
          }
          case 32: {
            Rank = input.ReadInt32();
            break;
          }
          case 42: {
            Clubid = input.ReadString();
            break;
          }
          case 50: {
            ClubName = input.ReadString();
            break;
          }
          case 56: {
            Timestamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OfficialMttNotification : pb::IMessage<OfficialMttNotification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OfficialMttNotification> _parser = new pb::MessageParser<OfficialMttNotification>(() => new OfficialMttNotification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OfficialMttNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttNotification(OfficialMttNotification other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      tempid_ = other.tempid_;
      leftTime_ = other.leftTime_;
      seatNum_ = other.seatNum_;
      roomMode_ = other.roomMode_;
      roomType_ = other.roomType_;
      gameMode_ = other.gameMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttNotification Clone() {
      return new OfficialMttNotification(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static string RoomidDefaultValue = "";

    private string roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Roomid {
      get { return roomid_ ?? RoomidDefaultValue; }
      set {
        roomid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return roomid_ != null; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      roomid_ = null;
    }

    /// <summary>Field number for the "tempid" field.</summary>
    public const int TempidFieldNumber = 2;
    private readonly static string TempidDefaultValue = "";

    private string tempid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tempid {
      get { return tempid_ ?? TempidDefaultValue; }
      set {
        tempid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tempid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTempid {
      get { return tempid_ != null; }
    }
    /// <summary>Clears the value of the "tempid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTempid() {
      tempid_ = null;
    }

    /// <summary>Field number for the "left_time" field.</summary>
    public const int LeftTimeFieldNumber = 3;
    private readonly static long LeftTimeDefaultValue = 0L;

    private long leftTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LeftTime {
      get { if ((_hasBits0 & 1) != 0) { return leftTime_; } else { return LeftTimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leftTime_ = value;
      }
    }
    /// <summary>Gets whether the "left_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeftTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "left_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeftTime() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seat_num" field.</summary>
    public const int SeatNumFieldNumber = 4;
    private readonly static int SeatNumDefaultValue = 0;

    private int seatNum_;
    /// <summary>
    ///房间table座位数	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SeatNum {
      get { if ((_hasBits0 & 2) != 0) { return seatNum_; } else { return SeatNumDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seatNum_ = value;
      }
    }
    /// <summary>Gets whether the "seat_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatNum {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seat_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatNum() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "room_mode" field.</summary>
    public const int RoomModeFieldNumber = 5;
    private readonly static global::Texas.Protocol.RoomMode RoomModeDefaultValue = global::Texas.Protocol.RoomMode.None;

    private global::Texas.Protocol.RoomMode roomMode_;
    /// <summary>
    ///房间属性，如俱乐部/大厅
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomMode RoomMode {
      get { if ((_hasBits0 & 4) != 0) { return roomMode_; } else { return RoomModeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        roomMode_ = value;
      }
    }
    /// <summary>Gets whether the "room_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomMode {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "room_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomMode() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "room_type" field.</summary>
    public const int RoomTypeFieldNumber = 6;
    private readonly static global::Texas.Protocol.RoomType RoomTypeDefaultValue = global::Texas.Protocol.RoomType.TestRoom;

    private global::Texas.Protocol.RoomType roomType_;
    /// <summary>
    ///房间类型，如nlh/plp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomType RoomType {
      get { if ((_hasBits0 & 8) != 0) { return roomType_; } else { return RoomTypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        roomType_ = value;
      }
    }
    /// <summary>Gets whether the "room_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "room_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomType() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "game_mode" field.</summary>
    public const int GameModeFieldNumber = 7;
    private readonly static global::Texas.Protocol.GameMode GameModeDefaultValue = global::Texas.Protocol.GameMode.Regular;

    private global::Texas.Protocol.GameMode gameMode_;
    /// <summary>
    ///房间游戏玩法，如cash/sng
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.GameMode GameMode {
      get { if ((_hasBits0 & 16) != 0) { return gameMode_; } else { return GameModeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        gameMode_ = value;
      }
    }
    /// <summary>Gets whether the "game_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameMode {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "game_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameMode() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OfficialMttNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OfficialMttNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (Tempid != other.Tempid) return false;
      if (LeftTime != other.LeftTime) return false;
      if (SeatNum != other.SeatNum) return false;
      if (RoomMode != other.RoomMode) return false;
      if (RoomType != other.RoomType) return false;
      if (GameMode != other.GameMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasTempid) hash ^= Tempid.GetHashCode();
      if (HasLeftTime) hash ^= LeftTime.GetHashCode();
      if (HasSeatNum) hash ^= SeatNum.GetHashCode();
      if (HasRoomMode) hash ^= RoomMode.GetHashCode();
      if (HasRoomType) hash ^= RoomType.GetHashCode();
      if (HasGameMode) hash ^= GameMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(10);
        output.WriteString(Roomid);
      }
      if (HasTempid) {
        output.WriteRawTag(18);
        output.WriteString(Tempid);
      }
      if (HasLeftTime) {
        output.WriteRawTag(24);
        output.WriteInt64(LeftTime);
      }
      if (HasSeatNum) {
        output.WriteRawTag(32);
        output.WriteInt32(SeatNum);
      }
      if (HasRoomMode) {
        output.WriteRawTag(40);
        output.WriteEnum((int) RoomMode);
      }
      if (HasRoomType) {
        output.WriteRawTag(48);
        output.WriteEnum((int) RoomType);
      }
      if (HasGameMode) {
        output.WriteRawTag(56);
        output.WriteEnum((int) GameMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(10);
        output.WriteString(Roomid);
      }
      if (HasTempid) {
        output.WriteRawTag(18);
        output.WriteString(Tempid);
      }
      if (HasLeftTime) {
        output.WriteRawTag(24);
        output.WriteInt64(LeftTime);
      }
      if (HasSeatNum) {
        output.WriteRawTag(32);
        output.WriteInt32(SeatNum);
      }
      if (HasRoomMode) {
        output.WriteRawTag(40);
        output.WriteEnum((int) RoomMode);
      }
      if (HasRoomType) {
        output.WriteRawTag(48);
        output.WriteEnum((int) RoomType);
      }
      if (HasGameMode) {
        output.WriteRawTag(56);
        output.WriteEnum((int) GameMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Roomid);
      }
      if (HasTempid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tempid);
      }
      if (HasLeftTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LeftTime);
      }
      if (HasSeatNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SeatNum);
      }
      if (HasRoomMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomMode);
      }
      if (HasRoomType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomType);
      }
      if (HasGameMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OfficialMttNotification other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasTempid) {
        Tempid = other.Tempid;
      }
      if (other.HasLeftTime) {
        LeftTime = other.LeftTime;
      }
      if (other.HasSeatNum) {
        SeatNum = other.SeatNum;
      }
      if (other.HasRoomMode) {
        RoomMode = other.RoomMode;
      }
      if (other.HasRoomType) {
        RoomType = other.RoomType;
      }
      if (other.HasGameMode) {
        GameMode = other.GameMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Roomid = input.ReadString();
            break;
          }
          case 18: {
            Tempid = input.ReadString();
            break;
          }
          case 24: {
            LeftTime = input.ReadInt64();
            break;
          }
          case 32: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 40: {
            RoomMode = (global::Texas.Protocol.RoomMode) input.ReadEnum();
            break;
          }
          case 48: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 56: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Roomid = input.ReadString();
            break;
          }
          case 18: {
            Tempid = input.ReadString();
            break;
          }
          case 24: {
            LeftTime = input.ReadInt64();
            break;
          }
          case 32: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 40: {
            RoomMode = (global::Texas.Protocol.RoomMode) input.ReadEnum();
            break;
          }
          case 48: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 56: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OfficialMttNotificationREQ : pb::IMessage<OfficialMttNotificationREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OfficialMttNotificationREQ> _parser = new pb::MessageParser<OfficialMttNotificationREQ>(() => new OfficialMttNotificationREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OfficialMttNotificationREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttNotificationREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttNotificationREQ(OfficialMttNotificationREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttNotificationREQ Clone() {
      return new OfficialMttNotificationREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OfficialMttNotificationREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OfficialMttNotificationREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OfficialMttNotificationREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class OfficialMttNotificationRSP : pb::IMessage<OfficialMttNotificationRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OfficialMttNotificationRSP> _parser = new pb::MessageParser<OfficialMttNotificationRSP>(() => new OfficialMttNotificationRSP());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OfficialMttNotificationRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttNotificationRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttNotificationRSP(OfficialMttNotificationRSP other) : this() {
      infoList_ = other.infoList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttNotificationRSP Clone() {
      return new OfficialMttNotificationRSP(this);
    }

    /// <summary>Field number for the "info_list" field.</summary>
    public const int InfoListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.OfficialMttNotification> _repeated_infoList_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.OfficialMttNotification.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.OfficialMttNotification> infoList_ = new pbc::RepeatedField<global::Texas.Protocol.OfficialMttNotification>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.OfficialMttNotification> InfoList {
      get { return infoList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OfficialMttNotificationRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OfficialMttNotificationRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!infoList_.Equals(other.infoList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= infoList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      infoList_.WriteTo(output, _repeated_infoList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      infoList_.WriteTo(ref output, _repeated_infoList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += infoList_.CalculateSize(_repeated_infoList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OfficialMttNotificationRSP other) {
      if (other == null) {
        return;
      }
      infoList_.Add(other.infoList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            infoList_.AddEntriesFrom(input, _repeated_infoList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            infoList_.AddEntriesFrom(ref input, _repeated_infoList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OfficialMttNotificationBRC : pb::IMessage<OfficialMttNotificationBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OfficialMttNotificationBRC> _parser = new pb::MessageParser<OfficialMttNotificationBRC>(() => new OfficialMttNotificationBRC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OfficialMttNotificationBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttNotificationBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttNotificationBRC(OfficialMttNotificationBRC other) : this() {
      info_ = other.info_ != null ? other.info_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttNotificationBRC Clone() {
      return new OfficialMttNotificationBRC(this);
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 1;
    private global::Texas.Protocol.OfficialMttNotification info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.OfficialMttNotification Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OfficialMttNotificationBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OfficialMttNotificationBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Info, other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (info_ != null) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OfficialMttNotificationBRC other) {
      if (other == null) {
        return;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Texas.Protocol.OfficialMttNotification();
        }
        Info.MergeFrom(other.Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::Texas.Protocol.OfficialMttNotification();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::Texas.Protocol.OfficialMttNotification();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HandleOfficialMttNotificationREQ : pb::IMessage<HandleOfficialMttNotificationREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HandleOfficialMttNotificationREQ> _parser = new pb::MessageParser<HandleOfficialMttNotificationREQ>(() => new HandleOfficialMttNotificationREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HandleOfficialMttNotificationREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HandleOfficialMttNotificationREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HandleOfficialMttNotificationREQ(HandleOfficialMttNotificationREQ other) : this() {
      roomid_ = other.roomid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HandleOfficialMttNotificationREQ Clone() {
      return new HandleOfficialMttNotificationREQ(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static string RoomidDefaultValue = "";

    private string roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Roomid {
      get { return roomid_ ?? RoomidDefaultValue; }
      set {
        roomid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return roomid_ != null; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      roomid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HandleOfficialMttNotificationREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HandleOfficialMttNotificationREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(10);
        output.WriteString(Roomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(10);
        output.WriteString(Roomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Roomid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HandleOfficialMttNotificationREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Roomid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Roomid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OfficialMttPopup : pb::IMessage<OfficialMttPopup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OfficialMttPopup> _parser = new pb::MessageParser<OfficialMttPopup>(() => new OfficialMttPopup());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OfficialMttPopup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttPopup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttPopup(OfficialMttPopup other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      tempid_ = other.tempid_;
      leftTime_ = other.leftTime_;
      priority_ = other.priority_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttPopup Clone() {
      return new OfficialMttPopup(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static string RoomidDefaultValue = "";

    private string roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Roomid {
      get { return roomid_ ?? RoomidDefaultValue; }
      set {
        roomid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return roomid_ != null; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      roomid_ = null;
    }

    /// <summary>Field number for the "tempid" field.</summary>
    public const int TempidFieldNumber = 2;
    private readonly static string TempidDefaultValue = "";

    private string tempid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tempid {
      get { return tempid_ ?? TempidDefaultValue; }
      set {
        tempid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tempid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTempid {
      get { return tempid_ != null; }
    }
    /// <summary>Clears the value of the "tempid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTempid() {
      tempid_ = null;
    }

    /// <summary>Field number for the "left_time" field.</summary>
    public const int LeftTimeFieldNumber = 3;
    private readonly static long LeftTimeDefaultValue = 0L;

    private long leftTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LeftTime {
      get { if ((_hasBits0 & 1) != 0) { return leftTime_; } else { return LeftTimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leftTime_ = value;
      }
    }
    /// <summary>Gets whether the "left_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeftTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "left_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeftTime() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "priority" field.</summary>
    public const int PriorityFieldNumber = 4;
    private readonly static int PriorityDefaultValue = 0;

    private int priority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Priority {
      get { if ((_hasBits0 & 2) != 0) { return priority_; } else { return PriorityDefaultValue; } }
      set {
        _hasBits0 |= 2;
        priority_ = value;
      }
    }
    /// <summary>Gets whether the "priority" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPriority {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "priority" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPriority() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OfficialMttPopup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OfficialMttPopup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (Tempid != other.Tempid) return false;
      if (LeftTime != other.LeftTime) return false;
      if (Priority != other.Priority) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasTempid) hash ^= Tempid.GetHashCode();
      if (HasLeftTime) hash ^= LeftTime.GetHashCode();
      if (HasPriority) hash ^= Priority.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(10);
        output.WriteString(Roomid);
      }
      if (HasTempid) {
        output.WriteRawTag(18);
        output.WriteString(Tempid);
      }
      if (HasLeftTime) {
        output.WriteRawTag(24);
        output.WriteInt64(LeftTime);
      }
      if (HasPriority) {
        output.WriteRawTag(32);
        output.WriteInt32(Priority);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(10);
        output.WriteString(Roomid);
      }
      if (HasTempid) {
        output.WriteRawTag(18);
        output.WriteString(Tempid);
      }
      if (HasLeftTime) {
        output.WriteRawTag(24);
        output.WriteInt64(LeftTime);
      }
      if (HasPriority) {
        output.WriteRawTag(32);
        output.WriteInt32(Priority);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Roomid);
      }
      if (HasTempid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tempid);
      }
      if (HasLeftTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LeftTime);
      }
      if (HasPriority) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Priority);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OfficialMttPopup other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasTempid) {
        Tempid = other.Tempid;
      }
      if (other.HasLeftTime) {
        LeftTime = other.LeftTime;
      }
      if (other.HasPriority) {
        Priority = other.Priority;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Roomid = input.ReadString();
            break;
          }
          case 18: {
            Tempid = input.ReadString();
            break;
          }
          case 24: {
            LeftTime = input.ReadInt64();
            break;
          }
          case 32: {
            Priority = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Roomid = input.ReadString();
            break;
          }
          case 18: {
            Tempid = input.ReadString();
            break;
          }
          case 24: {
            LeftTime = input.ReadInt64();
            break;
          }
          case 32: {
            Priority = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OfficialMttPopupREQ : pb::IMessage<OfficialMttPopupREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OfficialMttPopupREQ> _parser = new pb::MessageParser<OfficialMttPopupREQ>(() => new OfficialMttPopupREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OfficialMttPopupREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttPopupREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttPopupREQ(OfficialMttPopupREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttPopupREQ Clone() {
      return new OfficialMttPopupREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OfficialMttPopupREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OfficialMttPopupREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OfficialMttPopupREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class OfficialMttPopupRSP : pb::IMessage<OfficialMttPopupRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OfficialMttPopupRSP> _parser = new pb::MessageParser<OfficialMttPopupRSP>(() => new OfficialMttPopupRSP());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OfficialMttPopupRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttPopupRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttPopupRSP(OfficialMttPopupRSP other) : this() {
      infoList_ = other.infoList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialMttPopupRSP Clone() {
      return new OfficialMttPopupRSP(this);
    }

    /// <summary>Field number for the "info_list" field.</summary>
    public const int InfoListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.OfficialMttPopup> _repeated_infoList_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.OfficialMttPopup.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.OfficialMttPopup> infoList_ = new pbc::RepeatedField<global::Texas.Protocol.OfficialMttPopup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.OfficialMttPopup> InfoList {
      get { return infoList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OfficialMttPopupRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OfficialMttPopupRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!infoList_.Equals(other.infoList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= infoList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      infoList_.WriteTo(output, _repeated_infoList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      infoList_.WriteTo(ref output, _repeated_infoList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += infoList_.CalculateSize(_repeated_infoList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OfficialMttPopupRSP other) {
      if (other == null) {
        return;
      }
      infoList_.Add(other.infoList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            infoList_.AddEntriesFrom(input, _repeated_infoList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            infoList_.AddEntriesFrom(ref input, _repeated_infoList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OfficialRoomMatchREQ : pb::IMessage<OfficialRoomMatchREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OfficialRoomMatchREQ> _parser = new pb::MessageParser<OfficialRoomMatchREQ>(() => new OfficialRoomMatchREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OfficialRoomMatchREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialRoomMatchREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialRoomMatchREQ(OfficialRoomMatchREQ other) : this() {
      tempid_ = other.tempid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialRoomMatchREQ Clone() {
      return new OfficialRoomMatchREQ(this);
    }

    /// <summary>Field number for the "tempid" field.</summary>
    public const int TempidFieldNumber = 1;
    private readonly static string TempidDefaultValue = "";

    private string tempid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tempid {
      get { return tempid_ ?? TempidDefaultValue; }
      set {
        tempid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tempid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTempid {
      get { return tempid_ != null; }
    }
    /// <summary>Clears the value of the "tempid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTempid() {
      tempid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OfficialRoomMatchREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OfficialRoomMatchREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tempid != other.Tempid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTempid) hash ^= Tempid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTempid) {
        output.WriteRawTag(10);
        output.WriteString(Tempid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTempid) {
        output.WriteRawTag(10);
        output.WriteString(Tempid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTempid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tempid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OfficialRoomMatchREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasTempid) {
        Tempid = other.Tempid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tempid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Tempid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OfficialRoomMatchRSP : pb::IMessage<OfficialRoomMatchRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OfficialRoomMatchRSP> _parser = new pb::MessageParser<OfficialRoomMatchRSP>(() => new OfficialRoomMatchRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OfficialRoomMatchRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialRoomMatchRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialRoomMatchRSP(OfficialRoomMatchRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      roomid_ = other.roomid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OfficialRoomMatchRSP Clone() {
      return new OfficialRoomMatchRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0 success -1 no roomid match
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 2;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 2) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OfficialRoomMatchRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OfficialRoomMatchRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Roomid != other.Roomid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(Roomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(Roomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OfficialRoomMatchRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Roomid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Roomid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 俱樂部MTT開賽通知 及 SNG人滿開始發牌
  /// </summary>
  public sealed partial class NotificationBRC : pb::IMessage<NotificationBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NotificationBRC> _parser = new pb::MessageParser<NotificationBRC>(() => new NotificationBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NotificationBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.MttReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NotificationBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NotificationBRC(NotificationBRC other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      roomName_ = other.roomName_;
      blind_ = other.blind_;
      ante_ = other.ante_;
      clubid_ = other.clubid_;
      clubName_ = other.clubName_;
      roomMode_ = other.roomMode_;
      roomType_ = other.roomType_;
      gameMode_ = other.gameMode_;
      seatNum_ = other.seatNum_;
      stratTime_ = other.stratTime_;
      leftTime_ = other.leftTime_;
      isSuperLeague_ = other.isSuperLeague_;
      pushType_ = other.pushType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NotificationBRC Clone() {
      return new NotificationBRC(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static string RoomidDefaultValue = "";

    private string roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Roomid {
      get { return roomid_ ?? RoomidDefaultValue; }
      set {
        roomid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return roomid_ != null; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      roomid_ = null;
    }

    /// <summary>Field number for the "room_name" field.</summary>
    public const int RoomNameFieldNumber = 2;
    private readonly static string RoomNameDefaultValue = "";

    private string roomName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomName {
      get { return roomName_ ?? RoomNameDefaultValue; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "room_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomName {
      get { return roomName_ != null; }
    }
    /// <summary>Clears the value of the "room_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomName() {
      roomName_ = null;
    }

    /// <summary>Field number for the "blind" field.</summary>
    public const int BlindFieldNumber = 3;
    private readonly static long BlindDefaultValue = 0L;

    private long blind_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Blind {
      get { if ((_hasBits0 & 1) != 0) { return blind_; } else { return BlindDefaultValue; } }
      set {
        _hasBits0 |= 1;
        blind_ = value;
      }
    }
    /// <summary>Gets whether the "blind" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlind {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "blind" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlind() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "ante" field.</summary>
    public const int AnteFieldNumber = 4;
    private readonly static long AnteDefaultValue = 0L;

    private long ante_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Ante {
      get { if ((_hasBits0 & 2) != 0) { return ante_; } else { return AnteDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ante_ = value;
      }
    }
    /// <summary>Gets whether the "ante" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAnte {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ante" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAnte() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 5;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "club_name" field.</summary>
    public const int ClubNameFieldNumber = 6;
    private readonly static string ClubNameDefaultValue = "";

    private string clubName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClubName {
      get { return clubName_ ?? ClubNameDefaultValue; }
      set {
        clubName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "club_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubName {
      get { return clubName_ != null; }
    }
    /// <summary>Clears the value of the "club_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubName() {
      clubName_ = null;
    }

    /// <summary>Field number for the "room_mode" field.</summary>
    public const int RoomModeFieldNumber = 7;
    private readonly static global::Texas.Protocol.RoomMode RoomModeDefaultValue = global::Texas.Protocol.RoomMode.None;

    private global::Texas.Protocol.RoomMode roomMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomMode RoomMode {
      get { if ((_hasBits0 & 4) != 0) { return roomMode_; } else { return RoomModeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        roomMode_ = value;
      }
    }
    /// <summary>Gets whether the "room_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomMode {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "room_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomMode() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "room_type" field.</summary>
    public const int RoomTypeFieldNumber = 8;
    private readonly static global::Texas.Protocol.RoomType RoomTypeDefaultValue = global::Texas.Protocol.RoomType.TestRoom;

    private global::Texas.Protocol.RoomType roomType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomType RoomType {
      get { if ((_hasBits0 & 8) != 0) { return roomType_; } else { return RoomTypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        roomType_ = value;
      }
    }
    /// <summary>Gets whether the "room_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "room_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomType() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "game_mode" field.</summary>
    public const int GameModeFieldNumber = 9;
    private readonly static global::Texas.Protocol.GameMode GameModeDefaultValue = global::Texas.Protocol.GameMode.Regular;

    private global::Texas.Protocol.GameMode gameMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.GameMode GameMode {
      get { if ((_hasBits0 & 16) != 0) { return gameMode_; } else { return GameModeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        gameMode_ = value;
      }
    }
    /// <summary>Gets whether the "game_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameMode {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "game_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameMode() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "seat_num" field.</summary>
    public const int SeatNumFieldNumber = 10;
    private readonly static int SeatNumDefaultValue = 0;

    private int seatNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SeatNum {
      get { if ((_hasBits0 & 32) != 0) { return seatNum_; } else { return SeatNumDefaultValue; } }
      set {
        _hasBits0 |= 32;
        seatNum_ = value;
      }
    }
    /// <summary>Gets whether the "seat_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatNum {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "seat_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatNum() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "strat_time" field.</summary>
    public const int StratTimeFieldNumber = 11;
    private readonly static long StratTimeDefaultValue = 0L;

    private long stratTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StratTime {
      get { if ((_hasBits0 & 64) != 0) { return stratTime_; } else { return StratTimeDefaultValue; } }
      set {
        _hasBits0 |= 64;
        stratTime_ = value;
      }
    }
    /// <summary>Gets whether the "strat_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStratTime {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "strat_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStratTime() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "left_time" field.</summary>
    public const int LeftTimeFieldNumber = 12;
    private readonly static long LeftTimeDefaultValue = 0L;

    private long leftTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LeftTime {
      get { if ((_hasBits0 & 128) != 0) { return leftTime_; } else { return LeftTimeDefaultValue; } }
      set {
        _hasBits0 |= 128;
        leftTime_ = value;
      }
    }
    /// <summary>Gets whether the "left_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeftTime {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "left_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeftTime() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "is_super_league" field.</summary>
    public const int IsSuperLeagueFieldNumber = 13;
    private readonly static bool IsSuperLeagueDefaultValue = false;

    private bool isSuperLeague_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSuperLeague {
      get { if ((_hasBits0 & 256) != 0) { return isSuperLeague_; } else { return IsSuperLeagueDefaultValue; } }
      set {
        _hasBits0 |= 256;
        isSuperLeague_ = value;
      }
    }
    /// <summary>Gets whether the "is_super_league" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsSuperLeague {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "is_super_league" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsSuperLeague() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "push_type" field.</summary>
    public const int PushTypeFieldNumber = 14;
    private readonly static int PushTypeDefaultValue = 0;

    private int pushType_;
    /// <summary>
    /// MTT:2, SNG:3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PushType {
      get { if ((_hasBits0 & 512) != 0) { return pushType_; } else { return PushTypeDefaultValue; } }
      set {
        _hasBits0 |= 512;
        pushType_ = value;
      }
    }
    /// <summary>Gets whether the "push_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPushType {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "push_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPushType() {
      _hasBits0 &= ~512;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NotificationBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NotificationBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (RoomName != other.RoomName) return false;
      if (Blind != other.Blind) return false;
      if (Ante != other.Ante) return false;
      if (Clubid != other.Clubid) return false;
      if (ClubName != other.ClubName) return false;
      if (RoomMode != other.RoomMode) return false;
      if (RoomType != other.RoomType) return false;
      if (GameMode != other.GameMode) return false;
      if (SeatNum != other.SeatNum) return false;
      if (StratTime != other.StratTime) return false;
      if (LeftTime != other.LeftTime) return false;
      if (IsSuperLeague != other.IsSuperLeague) return false;
      if (PushType != other.PushType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasRoomName) hash ^= RoomName.GetHashCode();
      if (HasBlind) hash ^= Blind.GetHashCode();
      if (HasAnte) hash ^= Ante.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasClubName) hash ^= ClubName.GetHashCode();
      if (HasRoomMode) hash ^= RoomMode.GetHashCode();
      if (HasRoomType) hash ^= RoomType.GetHashCode();
      if (HasGameMode) hash ^= GameMode.GetHashCode();
      if (HasSeatNum) hash ^= SeatNum.GetHashCode();
      if (HasStratTime) hash ^= StratTime.GetHashCode();
      if (HasLeftTime) hash ^= LeftTime.GetHashCode();
      if (HasIsSuperLeague) hash ^= IsSuperLeague.GetHashCode();
      if (HasPushType) hash ^= PushType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(10);
        output.WriteString(Roomid);
      }
      if (HasRoomName) {
        output.WriteRawTag(18);
        output.WriteString(RoomName);
      }
      if (HasBlind) {
        output.WriteRawTag(24);
        output.WriteInt64(Blind);
      }
      if (HasAnte) {
        output.WriteRawTag(32);
        output.WriteInt64(Ante);
      }
      if (HasClubid) {
        output.WriteRawTag(42);
        output.WriteString(Clubid);
      }
      if (HasClubName) {
        output.WriteRawTag(50);
        output.WriteString(ClubName);
      }
      if (HasRoomMode) {
        output.WriteRawTag(56);
        output.WriteEnum((int) RoomMode);
      }
      if (HasRoomType) {
        output.WriteRawTag(64);
        output.WriteEnum((int) RoomType);
      }
      if (HasGameMode) {
        output.WriteRawTag(72);
        output.WriteEnum((int) GameMode);
      }
      if (HasSeatNum) {
        output.WriteRawTag(80);
        output.WriteInt32(SeatNum);
      }
      if (HasStratTime) {
        output.WriteRawTag(88);
        output.WriteInt64(StratTime);
      }
      if (HasLeftTime) {
        output.WriteRawTag(96);
        output.WriteInt64(LeftTime);
      }
      if (HasIsSuperLeague) {
        output.WriteRawTag(104);
        output.WriteBool(IsSuperLeague);
      }
      if (HasPushType) {
        output.WriteRawTag(112);
        output.WriteInt32(PushType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(10);
        output.WriteString(Roomid);
      }
      if (HasRoomName) {
        output.WriteRawTag(18);
        output.WriteString(RoomName);
      }
      if (HasBlind) {
        output.WriteRawTag(24);
        output.WriteInt64(Blind);
      }
      if (HasAnte) {
        output.WriteRawTag(32);
        output.WriteInt64(Ante);
      }
      if (HasClubid) {
        output.WriteRawTag(42);
        output.WriteString(Clubid);
      }
      if (HasClubName) {
        output.WriteRawTag(50);
        output.WriteString(ClubName);
      }
      if (HasRoomMode) {
        output.WriteRawTag(56);
        output.WriteEnum((int) RoomMode);
      }
      if (HasRoomType) {
        output.WriteRawTag(64);
        output.WriteEnum((int) RoomType);
      }
      if (HasGameMode) {
        output.WriteRawTag(72);
        output.WriteEnum((int) GameMode);
      }
      if (HasSeatNum) {
        output.WriteRawTag(80);
        output.WriteInt32(SeatNum);
      }
      if (HasStratTime) {
        output.WriteRawTag(88);
        output.WriteInt64(StratTime);
      }
      if (HasLeftTime) {
        output.WriteRawTag(96);
        output.WriteInt64(LeftTime);
      }
      if (HasIsSuperLeague) {
        output.WriteRawTag(104);
        output.WriteBool(IsSuperLeague);
      }
      if (HasPushType) {
        output.WriteRawTag(112);
        output.WriteInt32(PushType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Roomid);
      }
      if (HasRoomName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (HasBlind) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Blind);
      }
      if (HasAnte) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Ante);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasClubName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClubName);
      }
      if (HasRoomMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomMode);
      }
      if (HasRoomType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomType);
      }
      if (HasGameMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
      }
      if (HasSeatNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SeatNum);
      }
      if (HasStratTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StratTime);
      }
      if (HasLeftTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LeftTime);
      }
      if (HasIsSuperLeague) {
        size += 1 + 1;
      }
      if (HasPushType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PushType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NotificationBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasRoomName) {
        RoomName = other.RoomName;
      }
      if (other.HasBlind) {
        Blind = other.Blind;
      }
      if (other.HasAnte) {
        Ante = other.Ante;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasClubName) {
        ClubName = other.ClubName;
      }
      if (other.HasRoomMode) {
        RoomMode = other.RoomMode;
      }
      if (other.HasRoomType) {
        RoomType = other.RoomType;
      }
      if (other.HasGameMode) {
        GameMode = other.GameMode;
      }
      if (other.HasSeatNum) {
        SeatNum = other.SeatNum;
      }
      if (other.HasStratTime) {
        StratTime = other.StratTime;
      }
      if (other.HasLeftTime) {
        LeftTime = other.LeftTime;
      }
      if (other.HasIsSuperLeague) {
        IsSuperLeague = other.IsSuperLeague;
      }
      if (other.HasPushType) {
        PushType = other.PushType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Roomid = input.ReadString();
            break;
          }
          case 18: {
            RoomName = input.ReadString();
            break;
          }
          case 24: {
            Blind = input.ReadInt64();
            break;
          }
          case 32: {
            Ante = input.ReadInt64();
            break;
          }
          case 42: {
            Clubid = input.ReadString();
            break;
          }
          case 50: {
            ClubName = input.ReadString();
            break;
          }
          case 56: {
            RoomMode = (global::Texas.Protocol.RoomMode) input.ReadEnum();
            break;
          }
          case 64: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 72: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 80: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 88: {
            StratTime = input.ReadInt64();
            break;
          }
          case 96: {
            LeftTime = input.ReadInt64();
            break;
          }
          case 104: {
            IsSuperLeague = input.ReadBool();
            break;
          }
          case 112: {
            PushType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Roomid = input.ReadString();
            break;
          }
          case 18: {
            RoomName = input.ReadString();
            break;
          }
          case 24: {
            Blind = input.ReadInt64();
            break;
          }
          case 32: {
            Ante = input.ReadInt64();
            break;
          }
          case 42: {
            Clubid = input.ReadString();
            break;
          }
          case 50: {
            ClubName = input.ReadString();
            break;
          }
          case 56: {
            RoomMode = (global::Texas.Protocol.RoomMode) input.ReadEnum();
            break;
          }
          case 64: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 72: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 80: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 88: {
            StratTime = input.ReadInt64();
            break;
          }
          case 96: {
            LeftTime = input.ReadInt64();
            break;
          }
          case 104: {
            IsSuperLeague = input.ReadBool();
            break;
          }
          case 112: {
            PushType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
