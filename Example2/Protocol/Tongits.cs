// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: tongits.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Texas.Protocol {

  /// <summary>Holder for reflection information generated from tongits.proto</summary>
  public static partial class TongitsReflection {

    #region Descriptor
    /// <summary>File descriptor for tongits.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TongitsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg10b25naXRzLnByb3RvGg5wcmVfYmFzZS5wcm90bxoKYmFzZS5wcm90bxoK",
            "cGluZS5wcm90bxoOY2FsbHRpbWUucHJvdG8aD3ByZV9iYXNlMS5wcm90byL0",
            "EgoPVG9uZ2l0c1Jvb21JbmZvEhYKCXJvb21fbmFtZRgBIAEoCUgAiAEBEhIK",
            "BWJsaW5kGAIgASgDSAGIAQESFgoJbWluX2J1eWluGAMgASgDSAKIAQESFgoJ",
            "bWF4X2J1eWluGAQgASgDSAOIAQESFgoJbWluX3N0YWNrGAUgASgDSASIAQES",
            "FQoIZmVlcG9pbnQYBiABKAVIBYgBARITCgZmZWVjYXAYByABKAVIBogBARIc",
            "Cg9jcmVhdG9yX3VzZXJfaWQYCCABKANIB4gBARITCgZjbHViaWQYCSABKAlI",
            "CIgBARIVCghsZWFndWVpZBgKIAEoBUgJiAEBEhsKDnN1cGVyX2xlYWd1ZWlk",
            "GAsgASgFSAqIAQESHgoRc3VwZXJfbGVhZ3VlX3R5cGUYDCABKAVIC4gBARIX",
            "Cgpvd25lcl9pY29uGA0gASgJSAyIAQESFwoKb3duZXJfbmFtZRgOIAEoCUgN",
            "iAEBEhQKB293bmVyaWQYDyABKANIDogBARIcCg9vd25lcl92aXBfbGV2ZWwY",
            "ECABKA1ID4gBARITCgZyZWdpb24YESABKAVIEIgBARIVCghwbGF0Zm9ybRgS",
            "IAEoCUgRiAEBEhYKCWNsdWJfbmFtZRgTIAEoCUgSiAEBEhkKDGNsdWJfb3du",
            "ZXJpZBgUIAEoA0gTiAEBEhYKCWNsdWJfaWNvbhgVIAEoCUgUiAEBEhsKDm9w",
            "ZXJhdGlvbl90aW1lGBYgASgFSBWIAQESFgoJcm9vbV90aW1lGBcgASgFSBaI",
            "AQESFQoIc2VhdF9udW0YGCABKAVIF4gBARIXCgphdXRvX3N0YXJ0GBkgASgF",
            "SBiIAQESIQoJcm9vbV90eXBlGBogASgOMgkuUm9vbVR5cGVIGYgBARIhCgly",
            "b29tX21vZGUYGyABKA4yCS5Sb29tTW9kZUgaiAEBEiEKCWdhbWVfbW9kZRgc",
            "IAEoDjIJLkdhbWVNb2RlSBuIAQESFQoIdGltZXpvbmUYHSABKAVIHIgBARIT",
            "CgZyb29taWQYHiABKAVIHYgBARIVCghvZmZpY2lhbBgfIAEoCEgeiAEBEhMK",
            "BnBhc3N3ZBggIAEoCUgfiAEBEiQKF2lzX2F1dG9fZGVsYXlfcm9vbV9vdmVy",
            "GCEgASgISCCIAQESJwoaYXV0b19kZWxheV9yb29tX292ZXJfdGltZXMYIiAB",
            "KAVIIYgBARIgChNpc19hdXRvX2NyZWF0ZV9yb29tGCMgASgISCKIAQESFQoI",
            "bW9kdWxlaWQYJCABKANII4gBARIXCgptdWx0aV9vcGlkGCUgASgJSCSIAQES",
            "EwoGdGVtcGlkGCYgASgJSCWIAQESFgoJZ3BzX2xpbWl0GCcgASgISCaIAQES",
            "FQoIaXBfbGltaXQYKCABKAhIJ4gBARIbCg5mb3JiaWRkZW5fY2hhdBgpIAEo",
            "CEgoiAEBEhkKDHBhc3N3ZF9saW1pdBgqIAEoCEgpiAEBEhcKCmlzX2NhcHRj",
            "aGEYKyABKAhIKogBARIWCglpc19iYW5fcGMYLCABKAhIK4gBARIaCg1pc19j",
            "aGVja19tYWlsGC0gASgISCyIAQESHwoSZ3BzX2Rpc3RhbmNlX2xpbWl0GC4g",
            "ASgFSC2IAQESGgoNY3JlYXRlX2NsdWJpZBgvIAEoBUguiAEBEiAKE2ZvcmJp",
            "ZGRlbl9jaGF0X21vZGUYMCABKAVIL4gBARIZCgxyb29tX3ZlcnNpb24YMSAB",
            "KAVIMIgBARIdChBjYWxsdGltZV9taW51dGVzGDIgASgFSDGIAQESGAoLaGl0",
            "cG90X3JhdGUYMyABKAVIMogBARIXCgpib251c19jYXJkGDQgASgFSDOIAQES",
            "HwoSYm9udXNfY29udGFpbl9kcm9wGDUgASgISDSIAQESGAoLZmlnaHRfbGlt",
            "aXQYNiABKAVINYgBARIcCg9jaGFsbGVuZ2VfbGltaXQYNyABKAVINogBARIf",
            "ChJzYXBhd19pc19tYW5kYXRvcnkYOCABKAhIN4gBAUIMCgpfcm9vbV9uYW1l",
            "QggKBl9ibGluZEIMCgpfbWluX2J1eWluQgwKCl9tYXhfYnV5aW5CDAoKX21p",
            "bl9zdGFja0ILCglfZmVlcG9pbnRCCQoHX2ZlZWNhcEISChBfY3JlYXRvcl91",
            "c2VyX2lkQgkKB19jbHViaWRCCwoJX2xlYWd1ZWlkQhEKD19zdXBlcl9sZWFn",
            "dWVpZEIUChJfc3VwZXJfbGVhZ3VlX3R5cGVCDQoLX293bmVyX2ljb25CDQoL",
            "X293bmVyX25hbWVCCgoIX293bmVyaWRCEgoQX293bmVyX3ZpcF9sZXZlbEIJ",
            "CgdfcmVnaW9uQgsKCV9wbGF0Zm9ybUIMCgpfY2x1Yl9uYW1lQg8KDV9jbHVi",
            "X293bmVyaWRCDAoKX2NsdWJfaWNvbkIRCg9fb3BlcmF0aW9uX3RpbWVCDAoK",
            "X3Jvb21fdGltZUILCglfc2VhdF9udW1CDQoLX2F1dG9fc3RhcnRCDAoKX3Jv",
            "b21fdHlwZUIMCgpfcm9vbV9tb2RlQgwKCl9nYW1lX21vZGVCCwoJX3RpbWV6",
            "b25lQgkKB19yb29taWRCCwoJX29mZmljaWFsQgkKB19wYXNzd2RCGgoYX2lz",
            "X2F1dG9fZGVsYXlfcm9vbV9vdmVyQh0KG19hdXRvX2RlbGF5X3Jvb21fb3Zl",
            "cl90aW1lc0IWChRfaXNfYXV0b19jcmVhdGVfcm9vbUILCglfbW9kdWxlaWRC",
            "DQoLX211bHRpX29waWRCCQoHX3RlbXBpZEIMCgpfZ3BzX2xpbWl0QgsKCV9p",
            "cF9saW1pdEIRCg9fZm9yYmlkZGVuX2NoYXRCDwoNX3Bhc3N3ZF9saW1pdEIN",
            "CgtfaXNfY2FwdGNoYUIMCgpfaXNfYmFuX3BjQhAKDl9pc19jaGVja19tYWls",
            "QhUKE19ncHNfZGlzdGFuY2VfbGltaXRCEAoOX2NyZWF0ZV9jbHViaWRCFgoU",
            "X2ZvcmJpZGRlbl9jaGF0X21vZGVCDwoNX3Jvb21fdmVyc2lvbkITChFfY2Fs",
            "bHRpbWVfbWludXRlc0IOCgxfaGl0cG90X3JhdGVCDQoLX2JvbnVzX2NhcmRC",
            "FQoTX2JvbnVzX2NvbnRhaW5fZHJvcEIOCgxfZmlnaHRfbGltaXRCEgoQX2No",
            "YWxsZW5nZV9saW1pdEIVChNfc2FwYXdfaXNfbWFuZGF0b3J5IusOChRDcmVh",
            "dGVUb25naXRzUm9vbVJFURIWCglyb29tX25hbWUYASABKAlIAIgBARISCgVi",
            "bGluZBgCIAEoA0gBiAEBEhYKCW1pbl9idXlpbhgDIAEoA0gCiAEBEhYKCW1h",
            "eF9idXlpbhgEIAEoA0gDiAEBEhYKCW1pbl9zdGFjaxgFIAEoA0gEiAEBEhUK",
            "CGZlZXBvaW50GAYgASgFSAWIAQESEwoGZmVlY2FwGAcgASgFSAaIAQESHAoP",
            "Y3JlYXRvcl91c2VyX2lkGAggASgDSAeIAQESEwoGY2x1YmlkGAkgASgJSAiI",
            "AQESFQoIbGVhZ3VlaWQYCiABKAVICYgBARIbCg5zdXBlcl9sZWFndWVpZBgL",
            "IAEoBUgKiAEBEh4KEXN1cGVyX2xlYWd1ZV90eXBlGAwgASgFSAuIAQESGwoO",
            "b3BlcmF0aW9uX3RpbWUYDSABKAVIDIgBARIWCglyb29tX3RpbWUYDiABKAVI",
            "DYgBARIVCghzZWF0X251bRgPIAEoBUgOiAEBEhcKCmF1dG9fc3RhcnQYECAB",
            "KAVID4gBARIhCglyb29tX3R5cGUYESABKA4yCS5Sb29tVHlwZUgQiAEBEiEK",
            "CWdhbWVfbW9kZRgSIAEoDjIJLkdhbWVNb2RlSBGIAQESFQoIdGltZXpvbmUY",
            "EyABKAVIEogBARITCgZyb29taWQYFCABKAVIE4gBARIbCg5kZXJpdmVkX3Jv",
            "b21pZBgVIAEoBUgUiAEBEiQKF2lzX2F1dG9fZGVsYXlfcm9vbV9vdmVyGBYg",
            "ASgISBWIAQESJwoaYXV0b19kZWxheV9yb29tX292ZXJfdGltZXMYFyABKAVI",
            "FogBARIgChNpc19hdXRvX2NyZWF0ZV9yb29tGBggASgISBeIAQESFQoIbW9k",
            "dWxlaWQYGSABKANIGIgBARIXCgptdWx0aV9vcGlkGBogASgJSBmIAQESFAoH",
            "Y2FuX3VzZRgbIAEoCEgaiAEBEhYKCWdwc19saW1pdBgcIAEoCEgbiAEBEhUK",
            "CGlwX2xpbWl0GB0gASgISByIAQESGwoOZm9yYmlkZGVuX2NoYXQYHiABKAhI",
            "HYgBARIZCgxwYXNzd2RfbGltaXQYHyABKAhIHogBARIXCgppc19jYXB0Y2hh",
            "GCAgASgISB+IAQESFgoJaXNfYmFuX3BjGCEgASgISCCIAQESGgoNaXNfY2hl",
            "Y2tfbWFpbBgiIAEoCEghiAEBEiAKE2ZvcmJpZGRlbl9jaGF0X21vZGUYJCAB",
            "KAVIIogBARIdChBjYWxsdGltZV9taW51dGVzGCUgASgFSCOIAQESGAoLaGl0",
            "cG90X3JhdGUYJiABKAVIJIgBARIXCgpib251c19jYXJkGCcgASgFSCWIAQES",
            "HwoSYm9udXNfY29udGFpbl9kcm9wGCggASgISCaIAQESGAoLZmlnaHRfbGlt",
            "aXQYKSABKAVIJ4gBARIcCg9jaGFsbGVuZ2VfbGltaXQYKiABKAVIKIgBARIf",
            "ChJzYXBhd19pc19tYW5kYXRvcnkYKyABKAhIKYgBARIQCghiYW5fY2x1Yhgs",
            "IAMoBRITCgtiYW5fY291bnRyeRgtIAMoCUIMCgpfcm9vbV9uYW1lQggKBl9i",
            "bGluZEIMCgpfbWluX2J1eWluQgwKCl9tYXhfYnV5aW5CDAoKX21pbl9zdGFj",
            "a0ILCglfZmVlcG9pbnRCCQoHX2ZlZWNhcEISChBfY3JlYXRvcl91c2VyX2lk",
            "QgkKB19jbHViaWRCCwoJX2xlYWd1ZWlkQhEKD19zdXBlcl9sZWFndWVpZEIU",
            "ChJfc3VwZXJfbGVhZ3VlX3R5cGVCEQoPX29wZXJhdGlvbl90aW1lQgwKCl9y",
            "b29tX3RpbWVCCwoJX3NlYXRfbnVtQg0KC19hdXRvX3N0YXJ0QgwKCl9yb29t",
            "X3R5cGVCDAoKX2dhbWVfbW9kZUILCglfdGltZXpvbmVCCQoHX3Jvb21pZEIR",
            "Cg9fZGVyaXZlZF9yb29taWRCGgoYX2lzX2F1dG9fZGVsYXlfcm9vbV9vdmVy",
            "Qh0KG19hdXRvX2RlbGF5X3Jvb21fb3Zlcl90aW1lc0IWChRfaXNfYXV0b19j",
            "cmVhdGVfcm9vbUILCglfbW9kdWxlaWRCDQoLX211bHRpX29waWRCCgoIX2Nh",
            "bl91c2VCDAoKX2dwc19saW1pdEILCglfaXBfbGltaXRCEQoPX2ZvcmJpZGRl",
            "bl9jaGF0Qg8KDV9wYXNzd2RfbGltaXRCDQoLX2lzX2NhcHRjaGFCDAoKX2lz",
            "X2Jhbl9wY0IQCg5faXNfY2hlY2tfbWFpbEIWChRfZm9yYmlkZGVuX2NoYXRf",
            "bW9kZUITChFfY2FsbHRpbWVfbWludXRlc0IOCgxfaGl0cG90X3JhdGVCDQoL",
            "X2JvbnVzX2NhcmRCFQoTX2JvbnVzX2NvbnRhaW5fZHJvcEIOCgxfZmlnaHRf",
            "bGltaXRCEgoQX2NoYWxsZW5nZV9saW1pdEIVChNfc2FwYXdfaXNfbWFuZGF0",
            "b3J5IpABChRDcmVhdGVUb25naXRzUm9vbVJTUBIRCgRjb2RlGAEgASgFSACI",
            "AQESEwoGcmVhc29uGAIgASgJSAGIAQESKwoMdG9uZ2l0c19pbmZvGAMgASgL",
            "MhAuVG9uZ2l0c1Jvb21JbmZvSAKIAQFCBwoFX2NvZGVCCQoHX3JlYXNvbkIP",
            "Cg1fdG9uZ2l0c19pbmZvIkIKC1RvbmdpdHNNZWxkEg0KBWNhcmRzGAEgAygJ",
            "EhYKCWlzX3NhZ2FzYRgCIAEoCEgAiAEBQgwKCl9pc19zYWdhc2Ei8wEKD1Rv",
            "bmdpdHNIYW5kQ2FyZBIRCglhbGxfY2FyZHMYASADKAUSHwoJYWxsX21lbGRz",
            "GAIgAygLMgwuVG9uZ2l0c01lbGQSEgoKbGVmdF9jYXJkcxgDIAMoBRISCgVz",
            "Y29yZRgEIAEoBUgAiAEBEhYKCWNhcmRzX251bRgFIAEoBUgBiAEBEhgKC2Nh",
            "bl90b25naXRzGAYgASgFSAKIAQESGQoMdG9uZ2l0c19jYXJkGAcgASgFSAOI",
            "AQFCCAoGX3Njb3JlQgwKCl9jYXJkc19udW1CDgoMX2Nhbl90b25naXRzQg8K",
            "DV90b25naXRzX2NhcmQi9QEKEVRvbmdpdHNTaXREb3duUkVREhMKBnNlYXRp",
            "ZBgBIAEoBUgAiAEBEg8KAnBjGAIgASgISAGIAQESDwoCaXAYAyABKAlIAogB",
            "ARIUCgdncHNfbG9uGAQgASgFSAOIAQESFAoHZ3BzX2xhdBgFIAEoBUgEiAEB",
            "EhQKB2NoYW5uZWwYBiABKAlIBYgBARIZCgxpbnZhbGlkX21haWwYByABKAhI",
            "BogBAUIJCgdfc2VhdGlkQgUKA19wY0IFCgNfaXBCCgoIX2dwc19sb25CCgoI",
            "X2dwc19sYXRCCgoIX2NoYW5uZWxCDwoNX2ludmFsaWRfbWFpbCK7AwoRVG9u",
            "Z2l0c1BsYXllckluZm8SEQoEbmFtZRgBIAEoCUgAiAEBEhUKCGljb25fdXJs",
            "GAIgASgJSAGIAQESEAoDdWlkGAMgASgDSAKIAQESEwoGY2x1YmlkGAQgASgJ",
            "SAOIAQESFgoJY2x1Yl9uYW1lGAUgASgJSASIAQESFgoJdmlwX2xldmVsGAYg",
            "ASgFSAWIAQESEgoFbGV2ZWwYByABKAVIBogBARIUCgdjb3VudHJ5GAggASgJ",
            "SAeIAQESFAoHZ3BzX2xvbhgJIAEoBUgIiAEBEhQKB2dwc19sYXQYCiABKAVI",
            "CYgBARIbCg53YWl0aW5nX3N0YXR1cxgLIAEoBUgKiAEBEhoKDWNlcnRpZmlj",
            "YXRpb24YDCABKAVIC4gBAUIHCgVfbmFtZUILCglfaWNvbl91cmxCBgoEX3Vp",
            "ZEIJCgdfY2x1YmlkQgwKCl9jbHViX25hbWVCDAoKX3ZpcF9sZXZlbEIICgZf",
            "bGV2ZWxCCgoIX2NvdW50cnlCCgoIX2dwc19sb25CCgoIX2dwc19sYXRCEQoP",
            "X3dhaXRpbmdfc3RhdHVzQhAKDl9jZXJ0aWZpY2F0aW9uIusEChlUb25naXRz",
            "UGxheWVyR2FtaW5nU3RhdHVzEhIKBWNoaXBzGAEgASgDSACIAQESKQoKaGFu",
            "ZF9jYXJkcxgCIAEoCzIQLlRvbmdpdHNIYW5kQ2FyZEgBiAEBEi4KDHBsYXlp",
            "bmdfaW5mbxgDIAEoDjITLlRvbmdpdHNQbGF5aW5nSW5mb0gCiAEBEhcKCmlz",
            "X3BsYXlpbmcYBCABKAhIA4gBARIYCgtpc19yZWJ1eWluZxgFIAEoCEgEiAEB",
            "EhsKDmdhbWVfbGVmdF90aW1lGAYgASgFSAWIAQESHAoPcmVidXlfbGVmdF90",
            "aW1lGAcgASgFSAaIAQESEwoGcHJvZml0GAggASgDSAeIAQESJAoXaXNfbGVh",
            "dmluZ19vbl9uZXh0X2hhbmQYCSABKAhICIgBARIpCg1jYWxsdGltZV9pbmZv",
            "GAogASgLMg0uQ2FsbFRpbWVJbmZvSAmIAQESGgoNaXNfZGVsYXlfdGltZRgL",
            "IAEoCEgKiAEBEh4KEWlzX3VzaW5nX3RpbWViYW5rGAwgASgISAuIAQFCCAoG",
            "X2NoaXBzQg0KC19oYW5kX2NhcmRzQg8KDV9wbGF5aW5nX2luZm9CDQoLX2lz",
            "X3BsYXlpbmdCDgoMX2lzX3JlYnV5aW5nQhEKD19nYW1lX2xlZnRfdGltZUIS",
            "ChBfcmVidXlfbGVmdF90aW1lQgkKB19wcm9maXRCGgoYX2lzX2xlYXZpbmdf",
            "b25fbmV4dF9oYW5kQhAKDl9jYWxsdGltZV9pbmZvQhAKDl9pc19kZWxheV90",
            "aW1lQhQKEl9pc191c2luZ190aW1lYmFuayK9AwoRVG9uZ2l0c1NlYXRTdGF0",
            "dXMSEwoGc2VhdGlkGAEgASgFSACIAQESGgoNc2VhdF9yZXNlcnZlZBgCIAEo",
            "CEgBiAEBEhUKCGlzX2VtcHR5GAMgASgISAKIAQESGwoOaXNfc2l0dGluZ19v",
            "dXQYBCABKAhIA4gBARIsCgtwbGF5ZXJfaW5mbxgFIAEoCzISLlRvbmdpdHNQ",
            "bGF5ZXJJbmZvSASIAQESNgoNcGxheWVyX3N0YXR1cxgGIAEoCzIaLlRvbmdp",
            "dHNQbGF5ZXJHYW1pbmdTdGF0dXNIBYgBARIVCghmcmFtZV9pZBgHIAEoCUgG",
            "iAEBEhsKBW1lbGRzGAggAygLMgwuVG9uZ2l0c01lbGQSEwoLYm9udXNfY2Fy",
            "ZHMYCSADKAUSEgoKY2hvd19jYXJkcxgKIAMoBRIUCgxsb2NrZWRfY2FyZHMY",
            "CyADKAVCCQoHX3NlYXRpZEIQCg5fc2VhdF9yZXNlcnZlZEILCglfaXNfZW1w",
            "dHlCEQoPX2lzX3NpdHRpbmdfb3V0Qg4KDF9wbGF5ZXJfaW5mb0IQCg5fcGxh",
            "eWVyX3N0YXR1c0ILCglfZnJhbWVfaWQicQoRVG9uZ2l0c1NpdERvd25CUkMS",
            "EwoGc2VhdGlkGAEgASgFSACIAQESLAoLc2VhdF9zdGF0dXMYAiABKAsyEi5U",
            "b25naXRzU2VhdFN0YXR1c0gBiAEBQgkKB19zZWF0aWRCDgoMX3NlYXRfc3Rh",
            "dHVzIhMKEVRvbmdpdHNTdGFuZFVwUkVRIi8KEVRvbmdpdHNTdGFuZFVwUlNQ",
            "EhEKBGNvZGUYASABKAVIAIgBAUIHCgVfY29kZSIzChFUb25naXRzU3RhbmRV",
            "cEJSQxITCgZzZWF0aWQYASABKAVIAIgBAUIJCgdfc2VhdGlkIk8KE1Rvbmdp",
            "dHNMZWF2ZUdhbWVCUkMSEwoGc2VhdGlkGAEgASgFSACIAQESEAoDdWlkGAIg",
            "ASgDSAGIAQFCCQoHX3NlYXRpZEIGCgRfdWlkIjYKFlRvbmdpdHNTZXRHYW1l",
            "UmVhZHlSRVESEgoFcmVhZHkYASABKAVIAIgBAUIICgZfcmVhZHkiMwoTVG9u",
            "Z2l0c0NvdW50ZG93bkJSQxISCgVjb3VudBgBIAEoBUgAiAEBQggKBl9jb3Vu",
            "dCLcAQoTVG9uZ2l0c0dhbWVTdGFydEJSQxITCgZkZWFsZXIYASABKAVIAIgB",
            "ARIUCgdnYW1lX2lkGAIgASgJSAGIAQESFgoJc3RhY2tfbnVtGAMgASgFSAKI",
            "AQESIQoFc2VhdHMYBCADKAsyEi5Ub25naXRzU2VhdFN0YXR1cxIhChRhZGRf",
            "YWN0aW9uX3RpbWVfY29zdBgFIAEoBUgDiAEBQgkKB19kZWFsZXJCCgoIX2dh",
            "bWVfaWRCDAoKX3N0YWNrX251bUIXChVfYWRkX2FjdGlvbl90aW1lX2Nvc3Qi",
            "YwoSVG9uZ2l0c1Jvb21PdmVyQlJDEhsKBnByb2ZpdBgBIAMoCzILLlByb2Zp",
            "dEluZm8SHAoPaXNfcm9vbV9zdGFydGVkGAIgASgISACIAQFCEgoQX2lzX3Jv",
            "b21fc3RhcnRlZCI5ChRUb25naXRzR2FtZVJlc3VsdEJSQxIhCgVzZWF0cxgB",
            "IAMoCzISLlRvbmdpdHNTZWF0U3RhdHVzIvwGChtUb25naXRzU2ltcGxpZmll",
            "ZEdhbWVSZXN1bHQSEAoDdWlkGAEgASgDSACIAQESEwoGc2VhdGlkGAIgASgF",
            "SAGIAQESEgoFY2hpcHMYAyABKANIAogBARIpCgpoYW5kX2NhcmRzGAQgASgL",
            "MhAuVG9uZ2l0c0hhbmRDYXJkSAOIAQESIQoLdGFibGVfbWVsZHMYBSADKAsy",
            "DC5Ub25naXRzTWVsZBIYCgtiYXNlX3Byb2ZpdBgGIAEoA0gEiAEBEhsKDnRv",
            "bmdpdHNfcHJvZml0GAcgASgDSAWIAQESIAoTc2VjcmV0X21lbGRzX3Byb2Zp",
            "dBgIIAEoA0gGiAEBEh8KEmJvbnVzX2NhcmRzX3Byb2ZpdBgJIAEoA0gHiAEB",
            "EhoKDWJ1cm5lZF9wcm9maXQYCiABKANICIgBARIZCgxmaWdodF9wcm9maXQY",
            "CyABKANICYgBARIaCg1oaXRwb3RfcHJvZml0GAwgASgDSAqIAQESGgoNc2Fn",
            "YXNhX3Byb2ZpdBgNIAEoA0gLiAEBEhkKDHRvdGFsX3Byb2ZpdBgOIAEoA0gM",
            "iAEBEh4KEWdhbWVfdG90YWxfcHJvZml0GA8gASgDSA2IAQESLAoLcGxheWVy",
            "X2luZm8YECABKAsyEi5Ub25naXRzUGxheWVySW5mb0gOiAEBEhMKC2JvbnVz",
            "X2NhcmRzGBEgAygFEi4KDHBsYXlpbmdfaW5mbxgSIAEoDjITLlRvbmdpdHNQ",
            "bGF5aW5nSW5mb0gPiAEBEhwKD2dldF9oaXRwb3RfcG9vbBgTIAEoA0gQiAEB",
            "QgYKBF91aWRCCQoHX3NlYXRpZEIICgZfY2hpcHNCDQoLX2hhbmRfY2FyZHNC",
            "DgoMX2Jhc2VfcHJvZml0QhEKD190b25naXRzX3Byb2ZpdEIWChRfc2VjcmV0",
            "X21lbGRzX3Byb2ZpdEIVChNfYm9udXNfY2FyZHNfcHJvZml0QhAKDl9idXJu",
            "ZWRfcHJvZml0Qg8KDV9maWdodF9wcm9maXRCEAoOX2hpdHBvdF9wcm9maXRC",
            "EAoOX3NhZ2FzYV9wcm9maXRCDwoNX3RvdGFsX3Byb2ZpdEIUChJfZ2FtZV90",
            "b3RhbF9wcm9maXRCDgoMX3BsYXllcl9pbmZvQg8KDV9wbGF5aW5nX2luZm9C",
            "EgoQX2dldF9oaXRwb3RfcG9vbCK5AQoeVG9uZ2l0c1NpbXBsaWZpZWRHYW1l",
            "UmVzdWx0QlJDEjEKC2dhbWVfcmVzdWx0GAEgAygLMhwuVG9uZ2l0c1NpbXBs",
            "aWZpZWRHYW1lUmVzdWx0EhwKD3N0YWdlX2xlZnRfdGltZRgCIAEoBUgAiAEB",
            "Eh0KEGdhbWVzZXRfZW5kX3RpbWUYAyABKAVIAYgBAUISChBfc3RhZ2VfbGVm",
            "dF90aW1lQhMKEV9nYW1lc2V0X2VuZF90aW1lItgEChRUb25naXRzUGxheWlu",
            "Z1N0YXR1cxISCgVzdGFnZRgBIAEoBUgAiAEBEhoKDWFjdGlvbl9zZWF0aWQY",
            "AiABKAVIAYgBARIYCgthY3Rpb25fdGltZRgDIAEoBUgCiAEBEhIKCmR1bXBf",
            "Y2FyZHMYBCADKAUSFgoJc3RhY2tfbnVtGAUgASgFSAOIAQESFgoJY2FuX2Zp",
            "Z2h0GAYgASgISASIAQESFQoIY2FuX2Nob3cYByABKAhIBYgBARIYCgtoaXRw",
            "b3RfcG9vbBgIIAEoA0gGiAEBEhwKD2xhc3Rfd2lubmVyX3VpZBgJIAEoA0gH",
            "iAEBEhkKDGhpdHBvdF9zdGFjaxgKIAEoBUgIiAEBEiEKBXNlYXRzGAsgAygL",
            "MhIuVG9uZ2l0c1NlYXRTdGF0dXMSRAoWc2ltcGxpZmllZF9nYW1lX3Jlc3Vs",
            "dBgMIAEoCzIfLlRvbmdpdHNTaW1wbGlmaWVkR2FtZVJlc3VsdEJSQ0gJiAEB",
            "EiEKFGFkZF9hY3Rpb25fdGltZV9jb3N0GA0gASgFSAqIAQFCCAoGX3N0YWdl",
            "QhAKDl9hY3Rpb25fc2VhdGlkQg4KDF9hY3Rpb25fdGltZUIMCgpfc3RhY2tf",
            "bnVtQgwKCl9jYW5fZmlnaHRCCwoJX2Nhbl9jaG93Qg4KDF9oaXRwb3RfcG9v",
            "bEISChBfbGFzdF93aW5uZXJfdWlkQg8KDV9oaXRwb3Rfc3RhY2tCGQoXX3Np",
            "bXBsaWZpZWRfZ2FtZV9yZXN1bHRCFwoVX2FkZF9hY3Rpb25fdGltZV9jb3N0",
            "ItEBChFUb25naXRzUm9vbVN0YXR1cxIyCg5wbGF5aW5nX3N0YXR1cxgBIAEo",
            "CzIVLlRvbmdpdHNQbGF5aW5nU3RhdHVzSACIAQESFwoKaXNfc3RhcnRlZBgC",
            "IAEoCEgBiAEBEhsKDnJvb21fbGVmdF90aW1lGAMgASgFSAKIAQESHQoJb2Jz",
            "ZXJ2ZXJzGAQgAygLMgouVXNlckJyaWVmQhEKD19wbGF5aW5nX3N0YXR1c0IN",
            "CgtfaXNfc3RhcnRlZEIRCg9fcm9vbV9sZWZ0X3RpbWUiQAoUVG9uZ2l0c1Np",
            "dHRpbmdPdXRSRVESGAoLc2l0dGluZ19vdXQYASABKAhIAIgBAUIOCgxfc2l0",
            "dGluZ19vdXQiXAoUVG9uZ2l0c1NpdHRpbmdPdXRSU1ASGAoLc2l0dGluZ19v",
            "dXQYASABKAhIAIgBARIRCgRjb2RlGAIgASgFSAGIAQFCDgoMX3NpdHRpbmdf",
            "b3V0QgcKBV9jb2RlImAKFFRvbmdpdHNTaXR0aW5nT3V0QlJDEhMKBnNlYXRp",
            "ZBgBIAEoBUgAiAEBEhgKC3NpdHRpbmdfb3V0GAIgASgISAGIAQFCCQoHX3Nl",
            "YXRpZEIOCgxfc2l0dGluZ19vdXQiFQoTVG9uZ2l0c1N0YXJ0Um9vbVJFUSIx",
            "ChNUb25naXRzU3RhcnRSb29tUlNQEhEKBGNvZGUYASABKAVIAIgBAUIHCgVf",
            "Y29kZSIWChRUb25naXRzUHJvZml0TGlzdFJFUSIzChRUb25naXRzUHJvZml0",
            "TGlzdFJTUBIbCgZwcm9maXQYASADKAsyCy5Qcm9maXRJbmZvIhkKF1Rvbmdp",
            "dHNPYnNlcnZlcnNMaXN0UkVRIjgKF1RvbmdpdHNPYnNlcnZlcnNMaXN0UlNQ",
            "Eh0KCW9ic2VydmVycxgBIAMoCzIKLlVzZXJCcmllZiI5ChdUb25naXRzRXhj",
            "aGFuZ2VDaGlwc1JFURITCgZhbW91bnQYASABKANIAIgBAUIJCgdfYW1vdW50",
            "IjUKF1RvbmdpdHNFeGNoYW5nZUNoaXBzUlNQEhEKBGNvZGUYASABKAVIAIgB",
            "AUIHCgVfY29kZSK5AQoVVG9uZ2l0c1JlYnV5Tm90aWZ5UlNQEhYKCWxlZnRf",
            "dGltZRgBIAEoBUgAiAEBEhMKBnNlYXRpZBgCIAEoBUgBiAEBEhcKCnNlYXRf",
            "Y2hpcHMYAyABKANIAogBARIdChBleGNoYW5naW5nX2NoaXBzGAQgASgDSAOI",
            "AQFCDAoKX2xlZnRfdGltZUIJCgdfc2VhdGlkQg0KC19zZWF0X2NoaXBzQhMK",
            "EV9leGNoYW5naW5nX2NoaXBzIlcKF1RvbmdpdHNFeGNoYW5nZUNoaXBzQlJD",
            "EhMKBnNlYXRpZBgBIAEoBUgAiAEBEhIKBWNoaXBzGAIgASgDSAGIAQFCCQoH",
            "X3NlYXRpZEIICgZfY2hpcHMiFgoUVG9uZ2l0c0dhbWVJRExpc3RSRVEiRQoU",
            "VG9uZ2l0c0dhbWVJRExpc3RSU1ASDwoHZ2FtZV9pZBgBIAMoCRISCgV0b3Rh",
            "bBgCIAEoBUgAiAEBQggKBl90b3RhbCIrChhUb25naXRzR2FtZVJlY29yZExp",
            "c3RSRVESDwoHZ2FtZV9pZBgBIAMoCSKAAQoRVG9uZ2l0c0dhbWVSZWNvcmQS",
            "OQoLZ2FtZV9yZXN1bHQYASABKAsyHy5Ub25naXRzU2ltcGxpZmllZEdhbWVS",
            "ZXN1bHRCUkNIAIgBARIUCgdnYW1lX2lkGAIgASgJSAGIAQFCDgoMX2dhbWVf",
            "cmVzdWx0QgoKCF9nYW1lX2lkIkMKGFRvbmdpdHNHYW1lUmVjb3JkTGlzdFJT",
            "UBInCgtnYW1lX3JlY29yZBgBIAMoCzISLlRvbmdpdHNHYW1lUmVjb3JkImEK",
            "HVRvbmdpdHNSZXNlcnZlQ2FsbHRpbWVTZWF0UkVREhQKB3Jlc2VydmUYASAB",
            "KAhIAIgBARITCgZzZWF0aWQYAiABKAVIAYgBAUIKCghfcmVzZXJ2ZUIJCgdf",
            "c2VhdGlkIqEBCh1Ub25naXRzUmVzZXJ2ZUNhbGx0aW1lU2VhdFJTUBITCgZz",
            "ZWF0aWQYASABKAVIAIgBARIRCgRjb2RlGAIgASgFSAGIAQESJgoZcmVtYWlu",
            "ZWRfcmVzZXJ2YXRpb25fdGltZRgDIAEoBUgCiAEBQgkKB19zZWF0aWRCBwoF",
            "X2NvZGVCHAoaX3JlbWFpbmVkX3Jlc2VydmF0aW9uX3RpbWUiugIKEFRvbmdp",
            "dHNBY3Rpb25SRVESEwoGc2VhdGlkGAEgASgFSACIAQESJQoEdHlwZRgCIAEo",
            "DjISLlRvbmdpdHNBY3Rpb25UeXBlSAGIAQESFAoMc2VsZWN0X2NhcmRzGAMg",
            "AygFEhoKDXRhcmdldF9zZWF0aWQYBCABKAVIAogBARITCgt0YXJnZXRfbWVs",
            "ZBgFIAMoBRIRCglhbGxfY2FyZHMYBiADKAUSFAoMbWVsZF9jYXJkc18xGAcg",
            "AygFEhQKDG1lbGRfY2FyZHNfMhgIIAMoBRIUCgxtZWxkX2NhcmRzXzMYCSAD",
            "KAUSFAoMbWVsZF9jYXJkc180GAogAygFEhIKCmxlZnRfY2FyZHMYCyADKAVC",
            "CQoHX3NlYXRpZEIHCgVfdHlwZUIQCg5fdGFyZ2V0X3NlYXRpZCL7AgoQVG9u",
            "Z2l0c0FjdGlvbkJSQxIRCgRjb2RlGAEgASgFSACIAQESEwoGc2VhdGlkGAIg",
            "ASgFSAGIAQESJQoEdHlwZRgDIAEoDjISLlRvbmdpdHNBY3Rpb25UeXBlSAKI",
            "AQESFAoMc2VsZWN0X2NhcmRzGAQgAygFEhoKDXRhcmdldF9zZWF0aWQYBSAB",
            "KAVIA4gBARImCgt0YXJnZXRfbWVsZBgGIAEoCzIMLlRvbmdpdHNNZWxkSASI",
            "AQESHAoUY2FuX2NoYWxsZW5nZV9zZWF0aWQYByADKAUSJwoLc2VhdF9zdGF0",
            "dXMYCCADKAsyEi5Ub25naXRzU2VhdFN0YXR1cxISCgpkdW1wX2NhcmRzGAkg",
            "AygFEhYKCXN0YWNrX251bRgKIAEoBUgFiAEBQgcKBV9jb2RlQgkKB19zZWF0",
            "aWRCBwoFX3R5cGVCEAoOX3RhcmdldF9zZWF0aWRCDgoMX3RhcmdldF9tZWxk",
            "QgwKCl9zdGFja19udW0iowIKEFRvbmdpdHNBY3Rpb25SU1ASEwoGc2VhdGlk",
            "GAEgASgFSACIAQESJQoEdHlwZRgCIAEoDjISLlRvbmdpdHNBY3Rpb25UeXBl",
            "SAGIAQESFAoMc2VsZWN0X2NhcmRzGAMgAygFEhoKDXRhcmdldF9zZWF0aWQY",
            "BCABKAVIAogBARITCgt0YXJnZXRfbWVsZBgFIAMoBRIoCgloYW5kX2NhcmQY",
            "BiABKAsyEC5Ub25naXRzSGFuZENhcmRIA4gBARIbCg5sYXN0X2RyYXdfY2Fy",
            "ZBgHIAEoBUgEiAEBQgkKB19zZWF0aWRCBwoFX3R5cGVCEAoOX3RhcmdldF9z",
            "ZWF0aWRCDAoKX2hhbmRfY2FyZEIRCg9fbGFzdF9kcmF3X2NhcmQivgEKFlRv",
            "bmdpdHNBY3Rpb25Ob3RpZnlCUkMSEwoGc2VhdGlkGAEgASgFSACIAQESFgoJ",
            "Y2FuX2ZpZ2h0GAIgASgISAGIAQESFQoIY2FuX2Nob3cYAyABKAhIAogBARIh",
            "ChRhZGRfYWN0aW9uX3RpbWVfY29zdBgEIAEoBUgDiAEBQgkKB19zZWF0aWRC",
            "DAoKX2Nhbl9maWdodEILCglfY2FuX2Nob3dCFwoVX2FkZF9hY3Rpb25fdGlt",
            "ZV9jb3N0Ik0KD1RvbmdpdHNHcm91cFJFURITCgZzZWF0aWQYASABKAVIAIgB",
            "ARIRCgR0eXBlGAIgASgFSAGIAQFCCQoHX3NlYXRpZEIHCgVfdHlwZSKhAQoP",
            "VG9uZ2l0c0dyb3VwUlNQEhEKBGNvZGUYASABKAVIAIgBARITCgZzZWF0aWQY",
            "AiABKAVIAYgBARIRCgR0eXBlGAMgASgFSAKIAQESKAoJaGFuZF9jYXJkGAQg",
            "ASgLMhAuVG9uZ2l0c0hhbmRDYXJkSAOIAQFCBwoFX2NvZGVCCQoHX3NlYXRp",
            "ZEIHCgVfdHlwZUIMCgpfaGFuZF9jYXJkImoKEFRvbmdpdHNVc2VyQ2hpcHMS",
            "EAoDdWlkGAEgASgFSACIAQESEwoGc2VhdGlkGAIgASgFSAGIAQESEgoFY2hp",
            "cHMYAyABKANIAogBAUIGCgRfdWlkQgkKB19zZWF0aWRCCAoGX2NoaXBzIkIK",
            "GVRvbmdpdHNVcGRhdGVVc2VyQ2hpcHNCUkMSJQoKdXNlcl9jaGlwcxgBIAMo",
            "CzIRLlRvbmdpdHNVc2VyQ2hpcHMi4gEKE1RvbmdpdHNQYXlIaXRwb3RCUkMS",
            "DgoGc2VhdGlkGAEgAygFEgsKA3VpZBgCIAMoAxIXCgpoaXRwb3RfcGF5GAMg",
            "ASgDSACIAQESGAoLaGl0cG90X3Bvb2wYBCABKANIAYgBARIZCgxoaXRwb3Rf",
            "c3RhY2sYBSABKAVIAogBARIcCg9sYXN0X3dpbm5lcl91aWQYBiABKANIA4gB",
            "AUINCgtfaGl0cG90X3BheUIOCgxfaGl0cG90X3Bvb2xCDwoNX2hpdHBvdF9z",
            "dGFja0ISChBfbGFzdF93aW5uZXJfdWlkInkKE1RvbmdpdHNHZXRIaXRwb3RC",
            "UkMSEwoGc2VhdGlkGAEgASgFSACIAQESEAoDdWlkGAIgASgDSAGIAQESGAoL",
            "aGl0cG90X3Bvb2wYAyABKANIAogBAUIJCgdfc2VhdGlkQgYKBF91aWRCDgoM",
            "X2hpdHBvdF9wb29sInAKFFRvbmdpdHNQYXlTYWdhc2FJbmZvEhMKBnNlYXRp",
            "ZBgBIAEoBUgAiAEBEhAKA3VpZBgCIAEoA0gBiAEBEhMKBnByb2ZpdBgDIAEo",
            "A0gCiAEBQgkKB19zZWF0aWRCBgoEX3VpZEIJCgdfcHJvZml0ItUBChNUb25n",
            "aXRzR2V0U2FnYXNhQlJDEhMKBnNlYXRpZBgBIAEoBUgAiAEBEhAKA3VpZBgC",
            "IAEoA0gBiAEBEi4KD3BheV9zYWdhc2FfaW5mbxgDIAMoCzIVLlRvbmdpdHNQ",
            "YXlTYWdhc2FJbmZvEhkKDHRvdGFsX3NhZ2FzYRgEIAEoA0gCiAEBEhgKC3Nh",
            "Z2FzYV9jYXJkGAUgASgFSAOIAQFCCQoHX3NlYXRpZEIGCgRfdWlkQg8KDV90",
            "b3RhbF9zYWdhc2FCDgoMX3NhZ2FzYV9jYXJkItMBChhUb25naXRzVXBkYXRl",
            "SGFuZENhcmRSRVESEwoGc2VhdGlkGAEgASgFSACIAQESEAoDdWlkGAIgASgD",
            "SAGIAQESEQoJYWxsX2NhcmRzGAMgAygFEhQKDG1lbGRfY2FyZHNfMRgEIAMo",
            "BRIUCgxtZWxkX2NhcmRzXzIYBSADKAUSFAoMbWVsZF9jYXJkc18zGAYgAygF",
            "EhQKDG1lbGRfY2FyZHNfNBgHIAMoBRISCgpsZWZ0X2NhcmRzGAggAygFQgkK",
            "B19zZWF0aWRCBgoEX3VpZCKoAQoYVG9uZ2l0c1VwZGF0ZUhhbmRDYXJkUlNQ",
            "EhEKBGNvZGUYASABKAVIAIgBARITCgZzZWF0aWQYAiABKAVIAYgBARIQCgN1",
            "aWQYAyABKANIAogBARIoCgloYW5kX2NhcmQYBCABKAsyEC5Ub25naXRzSGFu",
            "ZENhcmRIA4gBAUIHCgVfY29kZUIJCgdfc2VhdGlkQgYKBF91aWRCDAoKX2hh",
            "bmRfY2FyZCJMChJUb25naXRzSGFuZENhcmRSU1ASKAoJaGFuZF9jYXJkGAEg",
            "ASgLMhAuVG9uZ2l0c0hhbmRDYXJkSACIAQFCDAoKX2hhbmRfY2FyZCJSChZU",
            "b25naXRzR2V0QmVzdFNjb3JlUkVREhMKBnNlYXRpZBgBIAEoBUgAiAEBEhAK",
            "A3VpZBgCIAEoA0gBiAEBQgkKB19zZWF0aWRCBgoEX3VpZCKWAQoWVG9uZ2l0",
            "c0dldEJlc3RTY29yZVJTUBIRCgRjb2RlGAEgASgFSACIAQESEwoGc2VhdGlk",
            "GAIgASgFSAGIAQESEAoDdWlkGAMgASgDSAKIAQESFwoKYmVzdF9zY29yZRgE",
            "IAEoBUgDiAEBQgcKBV9jb2RlQgkKB19zZWF0aWRCBgoEX3VpZEINCgtfYmVz",
            "dF9zY29yZSqdAgoSVG9uZ2l0c1BsYXlpbmdJbmZvEh0KGVRPTkdJVFNfUExB",
            "WUlOR19JTkZPX1dBSVQQABIjCh9UT05HSVRTX1BMQVlJTkdfSU5GT19QUkVf",
            "QUNUSU9OEAISHwobVE9OR0lUU19QTEFZSU5HX0lORk9fQUNUSU9OEAMSHgoa",
            "VE9OR0lUU19QTEFZSU5HX0lORk9fRklHSFQQBBIiCh5UT05HSVRTX1BMQVlJ",
            "TkdfSU5GT19DSEFMTEVOR0UQBRIdChlUT05HSVRTX1BMQVlJTkdfSU5GT19G",
            "T0xEEAYSHQoZVE9OR0lUU19QTEFZSU5HX0lORk9fQlVSThAHEiAKHFRPTkdJ",
            "VFNfUExBWUlOR19JTkZPX1RPTkdJVFMQCCrWAwoRVG9uZ2l0c0FjdGlvblR5",
            "cGUSFwoTVE9OR0lUU19BQ1RJT05fTk9ORRAAEhcKE1RPTkdJVFNfQUNUSU9O",
            "X0RSQVcQARIXChNUT05HSVRTX0FDVElPTl9DSE9XEAISFwoTVE9OR0lUU19B",
            "Q1RJT05fRFJPUBADEhgKFFRPTkdJVFNfQUNUSU9OX1NBUEFXEAQSFwoTVE9O",
            "R0lUU19BQ1RJT05fRFVNUBAFEhgKFFRPTkdJVFNfQUNUSU9OX0ZJR0hUEAYS",
            "HAoYVE9OR0lUU19BQ1RJT05fQ0hBTExFTkdFEAcSFwoTVE9OR0lUU19BQ1RJ",
            "T05fRk9MRBAIEhkKFVRPTkdJVFNfQUNUSU9OX0JVUk5FRBAJEhoKFlRPTkdJ",
            "VFNfQUNUSU9OX1RPTkdJVFMQChIeChpUT05HSVRTX0FDVElPTl9TWVNURU1f",
            "RFJBVxALEh4KGlRPTkdJVFNfQUNUSU9OX1NZU1RFTV9EVU1QEAwSHgoaVE9O",
            "R0lUU19BQ1RJT05fU1lTVEVNX0ZPTEQQDRIfChtUT05HSVRTX0FDVElPTl9T",
            "WVNURU1fU0FQQVcQDhIhCh1UT05HSVRTX0FDVElPTl9TWVNURU1fVE9OR0lU",
            "UxAPQhhaBS9nb3BiqgIOVGV4YXMuUHJvdG9jb2xiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Texas.Protocol.PreBaseReflection.Descriptor, global::Texas.Protocol.BaseReflection.Descriptor, global::Texas.Protocol.PineReflection.Descriptor, global::Texas.Protocol.CalltimeReflection.Descriptor, global::Texas.Protocol.PreBase1Reflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Texas.Protocol.TongitsPlayingInfo), typeof(global::Texas.Protocol.TongitsActionType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsRoomInfo), global::Texas.Protocol.TongitsRoomInfo.Parser, new[]{ "RoomName", "Blind", "MinBuyin", "MaxBuyin", "MinStack", "Feepoint", "Feecap", "CreatorUserId", "Clubid", "Leagueid", "SuperLeagueid", "SuperLeagueType", "OwnerIcon", "OwnerName", "Ownerid", "OwnerVipLevel", "Region", "Platform", "ClubName", "ClubOwnerid", "ClubIcon", "OperationTime", "RoomTime", "SeatNum", "AutoStart", "RoomType", "RoomMode", "GameMode", "Timezone", "Roomid", "Official", "Passwd", "IsAutoDelayRoomOver", "AutoDelayRoomOverTimes", "IsAutoCreateRoom", "Moduleid", "MultiOpid", "Tempid", "GpsLimit", "IpLimit", "ForbiddenChat", "PasswdLimit", "IsCaptcha", "IsBanPc", "IsCheckMail", "GpsDistanceLimit", "CreateClubid", "ForbiddenChatMode", "RoomVersion", "CalltimeMinutes", "HitpotRate", "BonusCard", "BonusContainDrop", "FightLimit", "ChallengeLimit", "SapawIsMandatory" }, new[]{ "RoomName", "Blind", "MinBuyin", "MaxBuyin", "MinStack", "Feepoint", "Feecap", "CreatorUserId", "Clubid", "Leagueid", "SuperLeagueid", "SuperLeagueType", "OwnerIcon", "OwnerName", "Ownerid", "OwnerVipLevel", "Region", "Platform", "ClubName", "ClubOwnerid", "ClubIcon", "OperationTime", "RoomTime", "SeatNum", "AutoStart", "RoomType", "RoomMode", "GameMode", "Timezone", "Roomid", "Official", "Passwd", "IsAutoDelayRoomOver", "AutoDelayRoomOverTimes", "IsAutoCreateRoom", "Moduleid", "MultiOpid", "Tempid", "GpsLimit", "IpLimit", "ForbiddenChat", "PasswdLimit", "IsCaptcha", "IsBanPc", "IsCheckMail", "GpsDistanceLimit", "CreateClubid", "ForbiddenChatMode", "RoomVersion", "CalltimeMinutes", "HitpotRate", "BonusCard", "BonusContainDrop", "FightLimit", "ChallengeLimit", "SapawIsMandatory" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.CreateTongitsRoomREQ), global::Texas.Protocol.CreateTongitsRoomREQ.Parser, new[]{ "RoomName", "Blind", "MinBuyin", "MaxBuyin", "MinStack", "Feepoint", "Feecap", "CreatorUserId", "Clubid", "Leagueid", "SuperLeagueid", "SuperLeagueType", "OperationTime", "RoomTime", "SeatNum", "AutoStart", "RoomType", "GameMode", "Timezone", "Roomid", "DerivedRoomid", "IsAutoDelayRoomOver", "AutoDelayRoomOverTimes", "IsAutoCreateRoom", "Moduleid", "MultiOpid", "CanUse", "GpsLimit", "IpLimit", "ForbiddenChat", "PasswdLimit", "IsCaptcha", "IsBanPc", "IsCheckMail", "ForbiddenChatMode", "CalltimeMinutes", "HitpotRate", "BonusCard", "BonusContainDrop", "FightLimit", "ChallengeLimit", "SapawIsMandatory", "BanClub", "BanCountry" }, new[]{ "RoomName", "Blind", "MinBuyin", "MaxBuyin", "MinStack", "Feepoint", "Feecap", "CreatorUserId", "Clubid", "Leagueid", "SuperLeagueid", "SuperLeagueType", "OperationTime", "RoomTime", "SeatNum", "AutoStart", "RoomType", "GameMode", "Timezone", "Roomid", "DerivedRoomid", "IsAutoDelayRoomOver", "AutoDelayRoomOverTimes", "IsAutoCreateRoom", "Moduleid", "MultiOpid", "CanUse", "GpsLimit", "IpLimit", "ForbiddenChat", "PasswdLimit", "IsCaptcha", "IsBanPc", "IsCheckMail", "ForbiddenChatMode", "CalltimeMinutes", "HitpotRate", "BonusCard", "BonusContainDrop", "FightLimit", "ChallengeLimit", "SapawIsMandatory" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.CreateTongitsRoomRSP), global::Texas.Protocol.CreateTongitsRoomRSP.Parser, new[]{ "Code", "Reason", "TongitsInfo" }, new[]{ "Code", "Reason", "TongitsInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsMeld), global::Texas.Protocol.TongitsMeld.Parser, new[]{ "Cards", "IsSagasa" }, new[]{ "IsSagasa" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsHandCard), global::Texas.Protocol.TongitsHandCard.Parser, new[]{ "AllCards", "AllMelds", "LeftCards", "Score", "CardsNum", "CanTongits", "TongitsCard" }, new[]{ "Score", "CardsNum", "CanTongits", "TongitsCard" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsSitDownREQ), global::Texas.Protocol.TongitsSitDownREQ.Parser, new[]{ "Seatid", "Pc", "Ip", "GpsLon", "GpsLat", "Channel", "InvalidMail" }, new[]{ "Seatid", "Pc", "Ip", "GpsLon", "GpsLat", "Channel", "InvalidMail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsPlayerInfo), global::Texas.Protocol.TongitsPlayerInfo.Parser, new[]{ "Name", "IconUrl", "Uid", "Clubid", "ClubName", "VipLevel", "Level", "Country", "GpsLon", "GpsLat", "WaitingStatus", "Certification" }, new[]{ "Name", "IconUrl", "Uid", "Clubid", "ClubName", "VipLevel", "Level", "Country", "GpsLon", "GpsLat", "WaitingStatus", "Certification" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsPlayerGamingStatus), global::Texas.Protocol.TongitsPlayerGamingStatus.Parser, new[]{ "Chips", "HandCards", "PlayingInfo", "IsPlaying", "IsRebuying", "GameLeftTime", "RebuyLeftTime", "Profit", "IsLeavingOnNextHand", "CalltimeInfo", "IsDelayTime", "IsUsingTimebank" }, new[]{ "Chips", "HandCards", "PlayingInfo", "IsPlaying", "IsRebuying", "GameLeftTime", "RebuyLeftTime", "Profit", "IsLeavingOnNextHand", "CalltimeInfo", "IsDelayTime", "IsUsingTimebank" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsSeatStatus), global::Texas.Protocol.TongitsSeatStatus.Parser, new[]{ "Seatid", "SeatReserved", "IsEmpty", "IsSittingOut", "PlayerInfo", "PlayerStatus", "FrameId", "Melds", "BonusCards", "ChowCards", "LockedCards" }, new[]{ "Seatid", "SeatReserved", "IsEmpty", "IsSittingOut", "PlayerInfo", "PlayerStatus", "FrameId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsSitDownBRC), global::Texas.Protocol.TongitsSitDownBRC.Parser, new[]{ "Seatid", "SeatStatus" }, new[]{ "Seatid", "SeatStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsStandUpREQ), global::Texas.Protocol.TongitsStandUpREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsStandUpRSP), global::Texas.Protocol.TongitsStandUpRSP.Parser, new[]{ "Code" }, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsStandUpBRC), global::Texas.Protocol.TongitsStandUpBRC.Parser, new[]{ "Seatid" }, new[]{ "Seatid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsLeaveGameBRC), global::Texas.Protocol.TongitsLeaveGameBRC.Parser, new[]{ "Seatid", "Uid" }, new[]{ "Seatid", "Uid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsSetGameReadyREQ), global::Texas.Protocol.TongitsSetGameReadyREQ.Parser, new[]{ "Ready" }, new[]{ "Ready" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsCountdownBRC), global::Texas.Protocol.TongitsCountdownBRC.Parser, new[]{ "Count" }, new[]{ "Count" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsGameStartBRC), global::Texas.Protocol.TongitsGameStartBRC.Parser, new[]{ "Dealer", "GameId", "StackNum", "Seats", "AddActionTimeCost" }, new[]{ "Dealer", "GameId", "StackNum", "AddActionTimeCost" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsRoomOverBRC), global::Texas.Protocol.TongitsRoomOverBRC.Parser, new[]{ "Profit", "IsRoomStarted" }, new[]{ "IsRoomStarted" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsGameResultBRC), global::Texas.Protocol.TongitsGameResultBRC.Parser, new[]{ "Seats" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsSimplifiedGameResult), global::Texas.Protocol.TongitsSimplifiedGameResult.Parser, new[]{ "Uid", "Seatid", "Chips", "HandCards", "TableMelds", "BaseProfit", "TongitsProfit", "SecretMeldsProfit", "BonusCardsProfit", "BurnedProfit", "FightProfit", "HitpotProfit", "SagasaProfit", "TotalProfit", "GameTotalProfit", "PlayerInfo", "BonusCards", "PlayingInfo", "GetHitpotPool" }, new[]{ "Uid", "Seatid", "Chips", "HandCards", "BaseProfit", "TongitsProfit", "SecretMeldsProfit", "BonusCardsProfit", "BurnedProfit", "FightProfit", "HitpotProfit", "SagasaProfit", "TotalProfit", "GameTotalProfit", "PlayerInfo", "PlayingInfo", "GetHitpotPool" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsSimplifiedGameResultBRC), global::Texas.Protocol.TongitsSimplifiedGameResultBRC.Parser, new[]{ "GameResult", "StageLeftTime", "GamesetEndTime" }, new[]{ "StageLeftTime", "GamesetEndTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsPlayingStatus), global::Texas.Protocol.TongitsPlayingStatus.Parser, new[]{ "Stage", "ActionSeatid", "ActionTime", "DumpCards", "StackNum", "CanFight", "CanChow", "HitpotPool", "LastWinnerUid", "HitpotStack", "Seats", "SimplifiedGameResult", "AddActionTimeCost" }, new[]{ "Stage", "ActionSeatid", "ActionTime", "StackNum", "CanFight", "CanChow", "HitpotPool", "LastWinnerUid", "HitpotStack", "SimplifiedGameResult", "AddActionTimeCost" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsRoomStatus), global::Texas.Protocol.TongitsRoomStatus.Parser, new[]{ "PlayingStatus", "IsStarted", "RoomLeftTime", "Observers" }, new[]{ "PlayingStatus", "IsStarted", "RoomLeftTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsSittingOutREQ), global::Texas.Protocol.TongitsSittingOutREQ.Parser, new[]{ "SittingOut" }, new[]{ "SittingOut" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsSittingOutRSP), global::Texas.Protocol.TongitsSittingOutRSP.Parser, new[]{ "SittingOut", "Code" }, new[]{ "SittingOut", "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsSittingOutBRC), global::Texas.Protocol.TongitsSittingOutBRC.Parser, new[]{ "Seatid", "SittingOut" }, new[]{ "Seatid", "SittingOut" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsStartRoomREQ), global::Texas.Protocol.TongitsStartRoomREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsStartRoomRSP), global::Texas.Protocol.TongitsStartRoomRSP.Parser, new[]{ "Code" }, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsProfitListREQ), global::Texas.Protocol.TongitsProfitListREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsProfitListRSP), global::Texas.Protocol.TongitsProfitListRSP.Parser, new[]{ "Profit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsObserversListREQ), global::Texas.Protocol.TongitsObserversListREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsObserversListRSP), global::Texas.Protocol.TongitsObserversListRSP.Parser, new[]{ "Observers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsExchangeChipsREQ), global::Texas.Protocol.TongitsExchangeChipsREQ.Parser, new[]{ "Amount" }, new[]{ "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsExchangeChipsRSP), global::Texas.Protocol.TongitsExchangeChipsRSP.Parser, new[]{ "Code" }, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsRebuyNotifyRSP), global::Texas.Protocol.TongitsRebuyNotifyRSP.Parser, new[]{ "LeftTime", "Seatid", "SeatChips", "ExchangingChips" }, new[]{ "LeftTime", "Seatid", "SeatChips", "ExchangingChips" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsExchangeChipsBRC), global::Texas.Protocol.TongitsExchangeChipsBRC.Parser, new[]{ "Seatid", "Chips" }, new[]{ "Seatid", "Chips" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsGameIDListREQ), global::Texas.Protocol.TongitsGameIDListREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsGameIDListRSP), global::Texas.Protocol.TongitsGameIDListRSP.Parser, new[]{ "GameId", "Total" }, new[]{ "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsGameRecordListREQ), global::Texas.Protocol.TongitsGameRecordListREQ.Parser, new[]{ "GameId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsGameRecord), global::Texas.Protocol.TongitsGameRecord.Parser, new[]{ "GameResult", "GameId" }, new[]{ "GameResult", "GameId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsGameRecordListRSP), global::Texas.Protocol.TongitsGameRecordListRSP.Parser, new[]{ "GameRecord" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsReserveCalltimeSeatREQ), global::Texas.Protocol.TongitsReserveCalltimeSeatREQ.Parser, new[]{ "Reserve", "Seatid" }, new[]{ "Reserve", "Seatid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsReserveCalltimeSeatRSP), global::Texas.Protocol.TongitsReserveCalltimeSeatRSP.Parser, new[]{ "Seatid", "Code", "RemainedReservationTime" }, new[]{ "Seatid", "Code", "RemainedReservationTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsActionREQ), global::Texas.Protocol.TongitsActionREQ.Parser, new[]{ "Seatid", "Type", "SelectCards", "TargetSeatid", "TargetMeld", "AllCards", "MeldCards1", "MeldCards2", "MeldCards3", "MeldCards4", "LeftCards" }, new[]{ "Seatid", "Type", "TargetSeatid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsActionBRC), global::Texas.Protocol.TongitsActionBRC.Parser, new[]{ "Code", "Seatid", "Type", "SelectCards", "TargetSeatid", "TargetMeld", "CanChallengeSeatid", "SeatStatus", "DumpCards", "StackNum" }, new[]{ "Code", "Seatid", "Type", "TargetSeatid", "TargetMeld", "StackNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsActionRSP), global::Texas.Protocol.TongitsActionRSP.Parser, new[]{ "Seatid", "Type", "SelectCards", "TargetSeatid", "TargetMeld", "HandCard", "LastDrawCard" }, new[]{ "Seatid", "Type", "TargetSeatid", "HandCard", "LastDrawCard" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsActionNotifyBRC), global::Texas.Protocol.TongitsActionNotifyBRC.Parser, new[]{ "Seatid", "CanFight", "CanChow", "AddActionTimeCost" }, new[]{ "Seatid", "CanFight", "CanChow", "AddActionTimeCost" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsGroupREQ), global::Texas.Protocol.TongitsGroupREQ.Parser, new[]{ "Seatid", "Type" }, new[]{ "Seatid", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsGroupRSP), global::Texas.Protocol.TongitsGroupRSP.Parser, new[]{ "Code", "Seatid", "Type", "HandCard" }, new[]{ "Code", "Seatid", "Type", "HandCard" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsUserChips), global::Texas.Protocol.TongitsUserChips.Parser, new[]{ "Uid", "Seatid", "Chips" }, new[]{ "Uid", "Seatid", "Chips" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsUpdateUserChipsBRC), global::Texas.Protocol.TongitsUpdateUserChipsBRC.Parser, new[]{ "UserChips" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsPayHitpotBRC), global::Texas.Protocol.TongitsPayHitpotBRC.Parser, new[]{ "Seatid", "Uid", "HitpotPay", "HitpotPool", "HitpotStack", "LastWinnerUid" }, new[]{ "HitpotPay", "HitpotPool", "HitpotStack", "LastWinnerUid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsGetHitpotBRC), global::Texas.Protocol.TongitsGetHitpotBRC.Parser, new[]{ "Seatid", "Uid", "HitpotPool" }, new[]{ "Seatid", "Uid", "HitpotPool" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsPaySagasaInfo), global::Texas.Protocol.TongitsPaySagasaInfo.Parser, new[]{ "Seatid", "Uid", "Profit" }, new[]{ "Seatid", "Uid", "Profit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsGetSagasaBRC), global::Texas.Protocol.TongitsGetSagasaBRC.Parser, new[]{ "Seatid", "Uid", "PaySagasaInfo", "TotalSagasa", "SagasaCard" }, new[]{ "Seatid", "Uid", "TotalSagasa", "SagasaCard" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsUpdateHandCardREQ), global::Texas.Protocol.TongitsUpdateHandCardREQ.Parser, new[]{ "Seatid", "Uid", "AllCards", "MeldCards1", "MeldCards2", "MeldCards3", "MeldCards4", "LeftCards" }, new[]{ "Seatid", "Uid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsUpdateHandCardRSP), global::Texas.Protocol.TongitsUpdateHandCardRSP.Parser, new[]{ "Code", "Seatid", "Uid", "HandCard" }, new[]{ "Code", "Seatid", "Uid", "HandCard" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsHandCardRSP), global::Texas.Protocol.TongitsHandCardRSP.Parser, new[]{ "HandCard" }, new[]{ "HandCard" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsGetBestScoreREQ), global::Texas.Protocol.TongitsGetBestScoreREQ.Parser, new[]{ "Seatid", "Uid" }, new[]{ "Seatid", "Uid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.TongitsGetBestScoreRSP), global::Texas.Protocol.TongitsGetBestScoreRSP.Parser, new[]{ "Code", "Seatid", "Uid", "BestScore" }, new[]{ "Code", "Seatid", "Uid", "BestScore" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum TongitsPlayingInfo {
    /// <summary>
    /// 非自己回合, 等待行動中
    /// </summary>
    [pbr::OriginalName("TONGITS_PLAYING_INFO_WAIT")] Wait = 0,
    /// <summary>
    /// fight/抽牌/抽棄牌 擇一執行
    /// </summary>
    [pbr::OriginalName("TONGITS_PLAYING_INFO_PRE_ACTION")] PreAction = 2,
    /// <summary>
    /// 回合行動中, 執行 棄牌,tongits 後回到 WAIT
    /// </summary>
    [pbr::OriginalName("TONGITS_PLAYING_INFO_ACTION")] Action = 3,
    /// <summary>
    /// 發起 fight 等待其他玩家回應
    /// </summary>
    [pbr::OriginalName("TONGITS_PLAYING_INFO_FIGHT")] Fight = 4,
    /// <summary>
    /// 回應 challenge
    /// </summary>
    [pbr::OriginalName("TONGITS_PLAYING_INFO_CHALLENGE")] Challenge = 5,
    /// <summary>
    /// 回應 fold
    /// </summary>
    [pbr::OriginalName("TONGITS_PLAYING_INFO_FOLD")] Fold = 6,
    /// <summary>
    /// 回應 burn
    /// </summary>
    [pbr::OriginalName("TONGITS_PLAYING_INFO_BURN")] Burn = 7,
    /// <summary>
    /// 發起 tongits
    /// </summary>
    [pbr::OriginalName("TONGITS_PLAYING_INFO_TONGITS")] Tongits = 8,
  }

  public enum TongitsActionType {
    [pbr::OriginalName("TONGITS_ACTION_NONE")] TongitsActionNone = 0,
    /// <summary>
    /// 抽牌
    /// </summary>
    [pbr::OriginalName("TONGITS_ACTION_DRAW")] TongitsActionDraw = 1,
    /// <summary>
    /// 抽棄牌堆的牌
    /// </summary>
    [pbr::OriginalName("TONGITS_ACTION_CHOW")] TongitsActionChow = 2,
    /// <summary>
    /// 將組合牌放下
    /// </summary>
    [pbr::OriginalName("TONGITS_ACTION_DROP")] TongitsActionDrop = 3,
    /// <summary>
    /// 將牌融合到其他 Meld 中
    /// </summary>
    [pbr::OriginalName("TONGITS_ACTION_SAPAW")] TongitsActionSapaw = 4,
    /// <summary>
    /// 棄牌
    /// </summary>
    [pbr::OriginalName("TONGITS_ACTION_DUMP")] TongitsActionDump = 5,
    [pbr::OriginalName("TONGITS_ACTION_FIGHT")] TongitsActionFight = 6,
    [pbr::OriginalName("TONGITS_ACTION_CHALLENGE")] TongitsActionChallenge = 7,
    [pbr::OriginalName("TONGITS_ACTION_FOLD")] TongitsActionFold = 8,
    [pbr::OriginalName("TONGITS_ACTION_BURNED")] TongitsActionBurned = 9,
    [pbr::OriginalName("TONGITS_ACTION_TONGITS")] TongitsActionTongits = 10,
    /// <summary>
    /// 系統操作產生的類型
    /// </summary>
    [pbr::OriginalName("TONGITS_ACTION_SYSTEM_DRAW")] TongitsActionSystemDraw = 11,
    [pbr::OriginalName("TONGITS_ACTION_SYSTEM_DUMP")] TongitsActionSystemDump = 12,
    /// <summary>
    /// fighting 時間到沒動作
    /// </summary>
    [pbr::OriginalName("TONGITS_ACTION_SYSTEM_FOLD")] TongitsActionSystemFold = 13,
    [pbr::OriginalName("TONGITS_ACTION_SYSTEM_SAPAW")] TongitsActionSystemSapaw = 14,
    [pbr::OriginalName("TONGITS_ACTION_SYSTEM_TONGITS")] TongitsActionSystemTongits = 15,
  }

  #endregion

  #region Messages
  /// <summary>
  ///房間詳細資訊，幾本上跟CreateTongitsRoomParam差不多，多了幾個欄位
  /// </summary>
  public sealed partial class TongitsRoomInfo : pb::IMessage<TongitsRoomInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsRoomInfo> _parser = new pb::MessageParser<TongitsRoomInfo>(() => new TongitsRoomInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    private int _hasBits1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsRoomInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsRoomInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsRoomInfo(TongitsRoomInfo other) : this() {
      _hasBits0 = other._hasBits0;
      _hasBits1 = other._hasBits1;
      roomName_ = other.roomName_;
      blind_ = other.blind_;
      minBuyin_ = other.minBuyin_;
      maxBuyin_ = other.maxBuyin_;
      minStack_ = other.minStack_;
      feepoint_ = other.feepoint_;
      feecap_ = other.feecap_;
      creatorUserId_ = other.creatorUserId_;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      superLeagueid_ = other.superLeagueid_;
      superLeagueType_ = other.superLeagueType_;
      ownerIcon_ = other.ownerIcon_;
      ownerName_ = other.ownerName_;
      ownerid_ = other.ownerid_;
      ownerVipLevel_ = other.ownerVipLevel_;
      region_ = other.region_;
      platform_ = other.platform_;
      clubName_ = other.clubName_;
      clubOwnerid_ = other.clubOwnerid_;
      clubIcon_ = other.clubIcon_;
      operationTime_ = other.operationTime_;
      roomTime_ = other.roomTime_;
      seatNum_ = other.seatNum_;
      autoStart_ = other.autoStart_;
      roomType_ = other.roomType_;
      roomMode_ = other.roomMode_;
      gameMode_ = other.gameMode_;
      timezone_ = other.timezone_;
      roomid_ = other.roomid_;
      official_ = other.official_;
      passwd_ = other.passwd_;
      isAutoDelayRoomOver_ = other.isAutoDelayRoomOver_;
      autoDelayRoomOverTimes_ = other.autoDelayRoomOverTimes_;
      isAutoCreateRoom_ = other.isAutoCreateRoom_;
      moduleid_ = other.moduleid_;
      multiOpid_ = other.multiOpid_;
      tempid_ = other.tempid_;
      gpsLimit_ = other.gpsLimit_;
      ipLimit_ = other.ipLimit_;
      forbiddenChat_ = other.forbiddenChat_;
      passwdLimit_ = other.passwdLimit_;
      isCaptcha_ = other.isCaptcha_;
      isBanPc_ = other.isBanPc_;
      isCheckMail_ = other.isCheckMail_;
      gpsDistanceLimit_ = other.gpsDistanceLimit_;
      createClubid_ = other.createClubid_;
      forbiddenChatMode_ = other.forbiddenChatMode_;
      roomVersion_ = other.roomVersion_;
      calltimeMinutes_ = other.calltimeMinutes_;
      hitpotRate_ = other.hitpotRate_;
      bonusCard_ = other.bonusCard_;
      bonusContainDrop_ = other.bonusContainDrop_;
      fightLimit_ = other.fightLimit_;
      challengeLimit_ = other.challengeLimit_;
      sapawIsMandatory_ = other.sapawIsMandatory_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsRoomInfo Clone() {
      return new TongitsRoomInfo(this);
    }

    /// <summary>Field number for the "room_name" field.</summary>
    public const int RoomNameFieldNumber = 1;
    private readonly static string RoomNameDefaultValue = "";

    private string roomName_;
    /// <summary>
    ///房間名稱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomName {
      get { return roomName_ ?? RoomNameDefaultValue; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "room_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomName {
      get { return roomName_ != null; }
    }
    /// <summary>Clears the value of the "room_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomName() {
      roomName_ = null;
    }

    /// <summary>Field number for the "blind" field.</summary>
    public const int BlindFieldNumber = 2;
    private readonly static long BlindDefaultValue = 0L;

    private long blind_;
    /// <summary>
    ///買入相關
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Blind {
      get { if ((_hasBits0 & 1) != 0) { return blind_; } else { return BlindDefaultValue; } }
      set {
        _hasBits0 |= 1;
        blind_ = value;
      }
    }
    /// <summary>Gets whether the "blind" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlind {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "blind" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlind() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "min_buyin" field.</summary>
    public const int MinBuyinFieldNumber = 3;
    private readonly static long MinBuyinDefaultValue = 0L;

    private long minBuyin_;
    /// <summary>
    /// 最小買入
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinBuyin {
      get { if ((_hasBits0 & 2) != 0) { return minBuyin_; } else { return MinBuyinDefaultValue; } }
      set {
        _hasBits0 |= 2;
        minBuyin_ = value;
      }
    }
    /// <summary>Gets whether the "min_buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinBuyin {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "min_buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinBuyin() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "max_buyin" field.</summary>
    public const int MaxBuyinFieldNumber = 4;
    private readonly static long MaxBuyinDefaultValue = 0L;

    private long maxBuyin_;
    /// <summary>
    /// 最大買入
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaxBuyin {
      get { if ((_hasBits0 & 4) != 0) { return maxBuyin_; } else { return MaxBuyinDefaultValue; } }
      set {
        _hasBits0 |= 4;
        maxBuyin_ = value;
      }
    }
    /// <summary>Gets whether the "max_buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxBuyin {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "max_buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxBuyin() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "min_stack" field.</summary>
    public const int MinStackFieldNumber = 5;
    private readonly static long MinStackDefaultValue = 0L;

    private long minStack_;
    /// <summary>
    /// 籌碼最底須保持在min_stack以上，否則跳出彈窗要求補碼
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinStack {
      get { if ((_hasBits0 & 8) != 0) { return minStack_; } else { return MinStackDefaultValue; } }
      set {
        _hasBits0 |= 8;
        minStack_ = value;
      }
    }
    /// <summary>Gets whether the "min_stack" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinStack {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "min_stack" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinStack() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "feepoint" field.</summary>
    public const int FeepointFieldNumber = 6;
    private readonly static int FeepointDefaultValue = 0;

    private int feepoint_;
    /// <summary>
    ///服務費相關
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Feepoint {
      get { if ((_hasBits0 & 16) != 0) { return feepoint_; } else { return FeepointDefaultValue; } }
      set {
        _hasBits0 |= 16;
        feepoint_ = value;
      }
    }
    /// <summary>Gets whether the "feepoint" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFeepoint {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "feepoint" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFeepoint() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "feecap" field.</summary>
    public const int FeecapFieldNumber = 7;
    private readonly static int FeecapDefaultValue = 0;

    private int feecap_;
    /// <summary>
    /// 服務費封頂
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Feecap {
      get { if ((_hasBits0 & 32) != 0) { return feecap_; } else { return FeecapDefaultValue; } }
      set {
        _hasBits0 |= 32;
        feecap_ = value;
      }
    }
    /// <summary>Gets whether the "feecap" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFeecap {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "feecap" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFeecap() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "creator_user_id" field.</summary>
    public const int CreatorUserIdFieldNumber = 8;
    private readonly static long CreatorUserIdDefaultValue = 0L;

    private long creatorUserId_;
    /// <summary>
    ///創辦人、俱樂部屬性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CreatorUserId {
      get { if ((_hasBits0 & 64) != 0) { return creatorUserId_; } else { return CreatorUserIdDefaultValue; } }
      set {
        _hasBits0 |= 64;
        creatorUserId_ = value;
      }
    }
    /// <summary>Gets whether the "creator_user_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCreatorUserId {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "creator_user_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCreatorUserId() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 9;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    /// <summary>
    /// 玩家所屬俱樂部
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 10;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    /// <summary>
    /// 玩家所屬聯盟
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 128) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 128;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "super_leagueid" field.</summary>
    public const int SuperLeagueidFieldNumber = 11;
    private readonly static int SuperLeagueidDefaultValue = 0;

    private int superLeagueid_;
    /// <summary>
    /// 牌桌所屬超級聯盟
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueid {
      get { if ((_hasBits0 & 256) != 0) { return superLeagueid_; } else { return SuperLeagueidDefaultValue; } }
      set {
        _hasBits0 |= 256;
        superLeagueid_ = value;
      }
    }
    /// <summary>Gets whether the "super_leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueid {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "super_leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueid() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "super_league_type" field.</summary>
    public const int SuperLeagueTypeFieldNumber = 12;
    private readonly static int SuperLeagueTypeDefaultValue = 0;

    private int superLeagueType_;
    /// <summary>
    /// 1表示非PPST
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueType {
      get { if ((_hasBits0 & 512) != 0) { return superLeagueType_; } else { return SuperLeagueTypeDefaultValue; } }
      set {
        _hasBits0 |= 512;
        superLeagueType_ = value;
      }
    }
    /// <summary>Gets whether the "super_league_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueType {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "super_league_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueType() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "owner_icon" field.</summary>
    public const int OwnerIconFieldNumber = 13;
    private readonly static string OwnerIconDefaultValue = "";

    private string ownerIcon_;
    /// <summary>
    ///由RoomRouter填寫
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerIcon {
      get { return ownerIcon_ ?? OwnerIconDefaultValue; }
      set {
        ownerIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner_icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnerIcon {
      get { return ownerIcon_ != null; }
    }
    /// <summary>Clears the value of the "owner_icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnerIcon() {
      ownerIcon_ = null;
    }

    /// <summary>Field number for the "owner_name" field.</summary>
    public const int OwnerNameFieldNumber = 14;
    private readonly static string OwnerNameDefaultValue = "";

    private string ownerName_;
    /// <summary>
    /// 房主名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerName {
      get { return ownerName_ ?? OwnerNameDefaultValue; }
      set {
        ownerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "owner_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnerName {
      get { return ownerName_ != null; }
    }
    /// <summary>Clears the value of the "owner_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnerName() {
      ownerName_ = null;
    }

    /// <summary>Field number for the "ownerid" field.</summary>
    public const int OwneridFieldNumber = 15;
    private readonly static long OwneridDefaultValue = 0L;

    private long ownerid_;
    /// <summary>
    /// 房主id，可不填
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Ownerid {
      get { if ((_hasBits0 & 1024) != 0) { return ownerid_; } else { return OwneridDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        ownerid_ = value;
      }
    }
    /// <summary>Gets whether the "ownerid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnerid {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "ownerid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnerid() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "owner_vip_level" field.</summary>
    public const int OwnerVipLevelFieldNumber = 16;
    private readonly static uint OwnerVipLevelDefaultValue = 0;

    private uint ownerVipLevel_;
    /// <summary>
    /// 房主VIP訊息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint OwnerVipLevel {
      get { if ((_hasBits0 & 2048) != 0) { return ownerVipLevel_; } else { return OwnerVipLevelDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        ownerVipLevel_ = value;
      }
    }
    /// <summary>Gets whether the "owner_vip_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwnerVipLevel {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "owner_vip_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwnerVipLevel() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 17;
    private readonly static int RegionDefaultValue = 0;

    private int region_;
    /// <summary>
    /// 房间所属的区域
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Region {
      get { if ((_hasBits0 & 4096) != 0) { return region_; } else { return RegionDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        region_ = value;
      }
    }
    /// <summary>Gets whether the "region" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRegion {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "region" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRegion() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "platform" field.</summary>
    public const int PlatformFieldNumber = 18;
    private readonly static string PlatformDefaultValue = "";

    private string platform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Platform {
      get { return platform_ ?? PlatformDefaultValue; }
      set {
        platform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "platform" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlatform {
      get { return platform_ != null; }
    }
    /// <summary>Clears the value of the "platform" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlatform() {
      platform_ = null;
    }

    /// <summary>Field number for the "club_name" field.</summary>
    public const int ClubNameFieldNumber = 19;
    private readonly static string ClubNameDefaultValue = "";

    private string clubName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClubName {
      get { return clubName_ ?? ClubNameDefaultValue; }
      set {
        clubName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "club_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubName {
      get { return clubName_ != null; }
    }
    /// <summary>Clears the value of the "club_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubName() {
      clubName_ = null;
    }

    /// <summary>Field number for the "club_ownerid" field.</summary>
    public const int ClubOwneridFieldNumber = 20;
    private readonly static long ClubOwneridDefaultValue = 0L;

    private long clubOwnerid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ClubOwnerid {
      get { if ((_hasBits0 & 8192) != 0) { return clubOwnerid_; } else { return ClubOwneridDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        clubOwnerid_ = value;
      }
    }
    /// <summary>Gets whether the "club_ownerid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubOwnerid {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "club_ownerid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubOwnerid() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "club_icon" field.</summary>
    public const int ClubIconFieldNumber = 21;
    private readonly static string ClubIconDefaultValue = "";

    private string clubIcon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClubIcon {
      get { return clubIcon_ ?? ClubIconDefaultValue; }
      set {
        clubIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "club_icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubIcon {
      get { return clubIcon_ != null; }
    }
    /// <summary>Clears the value of the "club_icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubIcon() {
      clubIcon_ = null;
    }

    /// <summary>Field number for the "operation_time" field.</summary>
    public const int OperationTimeFieldNumber = 22;
    private readonly static int OperationTimeDefaultValue = 0;

    private int operationTime_;
    /// <summary>
    ///房間屬性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OperationTime {
      get { if ((_hasBits0 & 16384) != 0) { return operationTime_; } else { return OperationTimeDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        operationTime_ = value;
      }
    }
    /// <summary>Gets whether the "operation_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOperationTime {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "operation_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOperationTime() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "room_time" field.</summary>
    public const int RoomTimeFieldNumber = 23;
    private readonly static int RoomTimeDefaultValue = 0;

    private int roomTime_;
    /// <summary>
    /// 房間存活時間
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoomTime {
      get { if ((_hasBits0 & 32768) != 0) { return roomTime_; } else { return RoomTimeDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        roomTime_ = value;
      }
    }
    /// <summary>Gets whether the "room_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomTime {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "room_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomTime() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "seat_num" field.</summary>
    public const int SeatNumFieldNumber = 24;
    private readonly static int SeatNumDefaultValue = 0;

    private int seatNum_;
    /// <summary>
    /// 座位數量，最大只支持3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SeatNum {
      get { if ((_hasBits0 & 65536) != 0) { return seatNum_; } else { return SeatNumDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        seatNum_ = value;
      }
    }
    /// <summary>Gets whether the "seat_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatNum {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "seat_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatNum() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "auto_start" field.</summary>
    public const int AutoStartFieldNumber = 25;
    private readonly static int AutoStartDefaultValue = 0;

    private int autoStart_;
    /// <summary>
    /// 幾個人坐下可自動開始，-1表示需要手動開始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AutoStart {
      get { if ((_hasBits0 & 131072) != 0) { return autoStart_; } else { return AutoStartDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        autoStart_ = value;
      }
    }
    /// <summary>Gets whether the "auto_start" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAutoStart {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "auto_start" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAutoStart() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "room_type" field.</summary>
    public const int RoomTypeFieldNumber = 26;
    private readonly static global::Texas.Protocol.RoomType RoomTypeDefaultValue = global::Texas.Protocol.RoomType.TestRoom;

    private global::Texas.Protocol.RoomType roomType_;
    /// <summary>
    /// 房間模式，Tongits = 17
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomType RoomType {
      get { if ((_hasBits0 & 262144) != 0) { return roomType_; } else { return RoomTypeDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        roomType_ = value;
      }
    }
    /// <summary>Gets whether the "room_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomType {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "room_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomType() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "room_mode" field.</summary>
    public const int RoomModeFieldNumber = 27;
    private readonly static global::Texas.Protocol.RoomMode RoomModeDefaultValue = global::Texas.Protocol.RoomMode.None;

    private global::Texas.Protocol.RoomMode roomMode_;
    /// <summary>
    /// 房間種類，CLUB_ROOM
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomMode RoomMode {
      get { if ((_hasBits0 & 524288) != 0) { return roomMode_; } else { return RoomModeDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        roomMode_ = value;
      }
    }
    /// <summary>Gets whether the "room_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomMode {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "room_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomMode() {
      _hasBits0 &= ~524288;
    }

    /// <summary>Field number for the "game_mode" field.</summary>
    public const int GameModeFieldNumber = 28;
    private readonly static global::Texas.Protocol.GameMode GameModeDefaultValue = global::Texas.Protocol.GameMode.Regular;

    private global::Texas.Protocol.GameMode gameMode_;
    /// <summary>
    /// Tongits = 0, Tongits Joker = 20
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.GameMode GameMode {
      get { if ((_hasBits0 & 1048576) != 0) { return gameMode_; } else { return GameModeDefaultValue; } }
      set {
        _hasBits0 |= 1048576;
        gameMode_ = value;
      }
    }
    /// <summary>Gets whether the "game_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameMode {
      get { return (_hasBits0 & 1048576) != 0; }
    }
    /// <summary>Clears the value of the "game_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameMode() {
      _hasBits0 &= ~1048576;
    }

    /// <summary>Field number for the "timezone" field.</summary>
    public const int TimezoneFieldNumber = 29;
    private readonly static int TimezoneDefaultValue = 0;

    private int timezone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Timezone {
      get { if ((_hasBits0 & 2097152) != 0) { return timezone_; } else { return TimezoneDefaultValue; } }
      set {
        _hasBits0 |= 2097152;
        timezone_ = value;
      }
    }
    /// <summary>Gets whether the "timezone" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimezone {
      get { return (_hasBits0 & 2097152) != 0; }
    }
    /// <summary>Clears the value of the "timezone" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimezone() {
      _hasBits0 &= ~2097152;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 30;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    /// <summary>
    /// 由伺服器填寫
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 4194304) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 4194304;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 4194304) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~4194304;
    }

    /// <summary>Field number for the "official" field.</summary>
    public const int OfficialFieldNumber = 31;
    private readonly static bool OfficialDefaultValue = false;

    private bool official_;
    /// <summary>
    ///RoomRouter填寫
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Official {
      get { if ((_hasBits0 & 8388608) != 0) { return official_; } else { return OfficialDefaultValue; } }
      set {
        _hasBits0 |= 8388608;
        official_ = value;
      }
    }
    /// <summary>Gets whether the "official" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOfficial {
      get { return (_hasBits0 & 8388608) != 0; }
    }
    /// <summary>Clears the value of the "official" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOfficial() {
      _hasBits0 &= ~8388608;
    }

    /// <summary>Field number for the "passwd" field.</summary>
    public const int PasswdFieldNumber = 32;
    private readonly static string PasswdDefaultValue = "";

    private string passwd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Passwd {
      get { return passwd_ ?? PasswdDefaultValue; }
      set {
        passwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "passwd" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPasswd {
      get { return passwd_ != null; }
    }
    /// <summary>Clears the value of the "passwd" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPasswd() {
      passwd_ = null;
    }

    /// <summary>Field number for the "is_auto_delay_room_over" field.</summary>
    public const int IsAutoDelayRoomOverFieldNumber = 33;
    private readonly static bool IsAutoDelayRoomOverDefaultValue = false;

    private bool isAutoDelayRoomOver_;
    /// <summary>
    ///自動延時、開桌相關
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAutoDelayRoomOver {
      get { if ((_hasBits0 & 16777216) != 0) { return isAutoDelayRoomOver_; } else { return IsAutoDelayRoomOverDefaultValue; } }
      set {
        _hasBits0 |= 16777216;
        isAutoDelayRoomOver_ = value;
      }
    }
    /// <summary>Gets whether the "is_auto_delay_room_over" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsAutoDelayRoomOver {
      get { return (_hasBits0 & 16777216) != 0; }
    }
    /// <summary>Clears the value of the "is_auto_delay_room_over" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsAutoDelayRoomOver() {
      _hasBits0 &= ~16777216;
    }

    /// <summary>Field number for the "auto_delay_room_over_times" field.</summary>
    public const int AutoDelayRoomOverTimesFieldNumber = 34;
    private readonly static int AutoDelayRoomOverTimesDefaultValue = 0;

    private int autoDelayRoomOverTimes_;
    /// <summary>
    /// 自动延时次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AutoDelayRoomOverTimes {
      get { if ((_hasBits0 & 33554432) != 0) { return autoDelayRoomOverTimes_; } else { return AutoDelayRoomOverTimesDefaultValue; } }
      set {
        _hasBits0 |= 33554432;
        autoDelayRoomOverTimes_ = value;
      }
    }
    /// <summary>Gets whether the "auto_delay_room_over_times" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAutoDelayRoomOverTimes {
      get { return (_hasBits0 & 33554432) != 0; }
    }
    /// <summary>Clears the value of the "auto_delay_room_over_times" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAutoDelayRoomOverTimes() {
      _hasBits0 &= ~33554432;
    }

    /// <summary>Field number for the "is_auto_create_room" field.</summary>
    public const int IsAutoCreateRoomFieldNumber = 35;
    private readonly static bool IsAutoCreateRoomDefaultValue = false;

    private bool isAutoCreateRoom_;
    /// <summary>
    /// 是否自动开桌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAutoCreateRoom {
      get { if ((_hasBits0 & 67108864) != 0) { return isAutoCreateRoom_; } else { return IsAutoCreateRoomDefaultValue; } }
      set {
        _hasBits0 |= 67108864;
        isAutoCreateRoom_ = value;
      }
    }
    /// <summary>Gets whether the "is_auto_create_room" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsAutoCreateRoom {
      get { return (_hasBits0 & 67108864) != 0; }
    }
    /// <summary>Clears the value of the "is_auto_create_room" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsAutoCreateRoom() {
      _hasBits0 &= ~67108864;
    }

    /// <summary>Field number for the "moduleid" field.</summary>
    public const int ModuleidFieldNumber = 36;
    private readonly static long ModuleidDefaultValue = 0L;

    private long moduleid_;
    /// <summary>
    ///模板??
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Moduleid {
      get { if ((_hasBits0 & 134217728) != 0) { return moduleid_; } else { return ModuleidDefaultValue; } }
      set {
        _hasBits0 |= 134217728;
        moduleid_ = value;
      }
    }
    /// <summary>Gets whether the "moduleid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModuleid {
      get { return (_hasBits0 & 134217728) != 0; }
    }
    /// <summary>Clears the value of the "moduleid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModuleid() {
      _hasBits0 &= ~134217728;
    }

    /// <summary>Field number for the "multi_opid" field.</summary>
    public const int MultiOpidFieldNumber = 37;
    private readonly static string MultiOpidDefaultValue = "";

    private string multiOpid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MultiOpid {
      get { return multiOpid_ ?? MultiOpidDefaultValue; }
      set {
        multiOpid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "multi_opid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMultiOpid {
      get { return multiOpid_ != null; }
    }
    /// <summary>Clears the value of the "multi_opid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMultiOpid() {
      multiOpid_ = null;
    }

    /// <summary>Field number for the "tempid" field.</summary>
    public const int TempidFieldNumber = 38;
    private readonly static string TempidDefaultValue = "";

    private string tempid_;
    /// <summary>
    ///RoomRouter填寫
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tempid {
      get { return tempid_ ?? TempidDefaultValue; }
      set {
        tempid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tempid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTempid {
      get { return tempid_ != null; }
    }
    /// <summary>Clears the value of the "tempid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTempid() {
      tempid_ = null;
    }

    /// <summary>Field number for the "gps_limit" field.</summary>
    public const int GpsLimitFieldNumber = 39;
    private readonly static bool GpsLimitDefaultValue = false;

    private bool gpsLimit_;
    /// <summary>
    ///限制功能
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GpsLimit {
      get { if ((_hasBits0 & 268435456) != 0) { return gpsLimit_; } else { return GpsLimitDefaultValue; } }
      set {
        _hasBits0 |= 268435456;
        gpsLimit_ = value;
      }
    }
    /// <summary>Gets whether the "gps_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpsLimit {
      get { return (_hasBits0 & 268435456) != 0; }
    }
    /// <summary>Clears the value of the "gps_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpsLimit() {
      _hasBits0 &= ~268435456;
    }

    /// <summary>Field number for the "ip_limit" field.</summary>
    public const int IpLimitFieldNumber = 40;
    private readonly static bool IpLimitDefaultValue = false;

    private bool ipLimit_;
    /// <summary>
    /// IP限制
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IpLimit {
      get { if ((_hasBits0 & 536870912) != 0) { return ipLimit_; } else { return IpLimitDefaultValue; } }
      set {
        _hasBits0 |= 536870912;
        ipLimit_ = value;
      }
    }
    /// <summary>Gets whether the "ip_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIpLimit {
      get { return (_hasBits0 & 536870912) != 0; }
    }
    /// <summary>Clears the value of the "ip_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIpLimit() {
      _hasBits0 &= ~536870912;
    }

    /// <summary>Field number for the "forbidden_chat" field.</summary>
    public const int ForbiddenChatFieldNumber = 41;
    private readonly static bool ForbiddenChatDefaultValue = false;

    private bool forbiddenChat_;
    /// <summary>
    /// 是否禁言
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ForbiddenChat {
      get { if ((_hasBits0 & 1073741824) != 0) { return forbiddenChat_; } else { return ForbiddenChatDefaultValue; } }
      set {
        _hasBits0 |= 1073741824;
        forbiddenChat_ = value;
      }
    }
    /// <summary>Gets whether the "forbidden_chat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForbiddenChat {
      get { return (_hasBits0 & 1073741824) != 0; }
    }
    /// <summary>Clears the value of the "forbidden_chat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForbiddenChat() {
      _hasBits0 &= ~1073741824;
    }

    /// <summary>Field number for the "passwd_limit" field.</summary>
    public const int PasswdLimitFieldNumber = 42;
    private readonly static bool PasswdLimitDefaultValue = false;

    private bool passwdLimit_;
    /// <summary>
    /// 是否密码桌,与授权买入互斥
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PasswdLimit {
      get { if ((_hasBits0 & -2147483648) != 0) { return passwdLimit_; } else { return PasswdLimitDefaultValue; } }
      set {
        _hasBits0 |= -2147483648;
        passwdLimit_ = value;
      }
    }
    /// <summary>Gets whether the "passwd_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPasswdLimit {
      get { return (_hasBits0 & -2147483648) != 0; }
    }
    /// <summary>Clears the value of the "passwd_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPasswdLimit() {
      _hasBits0 &= ~-2147483648;
    }

    /// <summary>Field number for the "is_captcha" field.</summary>
    public const int IsCaptchaFieldNumber = 43;
    private readonly static bool IsCaptchaDefaultValue = false;

    private bool isCaptcha_;
    /// <summary>
    /// 是否人机校验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCaptcha {
      get { if ((_hasBits1 & 1) != 0) { return isCaptcha_; } else { return IsCaptchaDefaultValue; } }
      set {
        _hasBits1 |= 1;
        isCaptcha_ = value;
      }
    }
    /// <summary>Gets whether the "is_captcha" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsCaptcha {
      get { return (_hasBits1 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_captcha" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsCaptcha() {
      _hasBits1 &= ~1;
    }

    /// <summary>Field number for the "is_ban_pc" field.</summary>
    public const int IsBanPcFieldNumber = 44;
    private readonly static bool IsBanPcDefaultValue = false;

    private bool isBanPc_;
    /// <summary>
    /// 禁止PC玩家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBanPc {
      get { if ((_hasBits1 & 2) != 0) { return isBanPc_; } else { return IsBanPcDefaultValue; } }
      set {
        _hasBits1 |= 2;
        isBanPc_ = value;
      }
    }
    /// <summary>Gets whether the "is_ban_pc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsBanPc {
      get { return (_hasBits1 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_ban_pc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsBanPc() {
      _hasBits1 &= ~2;
    }

    /// <summary>Field number for the "is_check_mail" field.</summary>
    public const int IsCheckMailFieldNumber = 45;
    private readonly static bool IsCheckMailDefaultValue = false;

    private bool isCheckMail_;
    /// <summary>
    /// 需要進行email檢查
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCheckMail {
      get { if ((_hasBits1 & 4) != 0) { return isCheckMail_; } else { return IsCheckMailDefaultValue; } }
      set {
        _hasBits1 |= 4;
        isCheckMail_ = value;
      }
    }
    /// <summary>Gets whether the "is_check_mail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsCheckMail {
      get { return (_hasBits1 & 4) != 0; }
    }
    /// <summary>Clears the value of the "is_check_mail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsCheckMail() {
      _hasBits1 &= ~4;
    }

    /// <summary>Field number for the "gps_distance_limit" field.</summary>
    public const int GpsDistanceLimitFieldNumber = 46;
    private readonly static int GpsDistanceLimitDefaultValue = 0;

    private int gpsDistanceLimit_;
    /// <summary>
    ///RoomRouter填寫
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GpsDistanceLimit {
      get { if ((_hasBits1 & 8) != 0) { return gpsDistanceLimit_; } else { return GpsDistanceLimitDefaultValue; } }
      set {
        _hasBits1 |= 8;
        gpsDistanceLimit_ = value;
      }
    }
    /// <summary>Gets whether the "gps_distance_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpsDistanceLimit {
      get { return (_hasBits1 & 8) != 0; }
    }
    /// <summary>Clears the value of the "gps_distance_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpsDistanceLimit() {
      _hasBits1 &= ~8;
    }

    /// <summary>Field number for the "create_clubid" field.</summary>
    public const int CreateClubidFieldNumber = 47;
    private readonly static int CreateClubidDefaultValue = 0;

    private int createClubid_;
    /// <summary>
    ///牌桌所屬俱樂部
    ///勿跟clubid搞混，clubid表示玩家進入房間帶的俱樂部ID，退出房間會退到此俱樂部列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CreateClubid {
      get { if ((_hasBits1 & 16) != 0) { return createClubid_; } else { return CreateClubidDefaultValue; } }
      set {
        _hasBits1 |= 16;
        createClubid_ = value;
      }
    }
    /// <summary>Gets whether the "create_clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCreateClubid {
      get { return (_hasBits1 & 16) != 0; }
    }
    /// <summary>Clears the value of the "create_clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCreateClubid() {
      _hasBits1 &= ~16;
    }

    /// <summary>Field number for the "forbidden_chat_mode" field.</summary>
    public const int ForbiddenChatModeFieldNumber = 48;
    private readonly static int ForbiddenChatModeDefaultValue = 0;

    private int forbiddenChatMode_;
    /// <summary>
    ///0: 全體禁言 1:看客禁言
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ForbiddenChatMode {
      get { if ((_hasBits1 & 32) != 0) { return forbiddenChatMode_; } else { return ForbiddenChatModeDefaultValue; } }
      set {
        _hasBits1 |= 32;
        forbiddenChatMode_ = value;
      }
    }
    /// <summary>Gets whether the "forbidden_chat_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForbiddenChatMode {
      get { return (_hasBits1 & 32) != 0; }
    }
    /// <summary>Clears the value of the "forbidden_chat_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForbiddenChatMode() {
      _hasBits1 &= ~32;
    }

    /// <summary>Field number for the "room_version" field.</summary>
    public const int RoomVersionFieldNumber = 49;
    private readonly static int RoomVersionDefaultValue = 0;

    private int roomVersion_;
    /// <summary>
    ///房間版本代號，用於與前端做版本兼容檢測
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoomVersion {
      get { if ((_hasBits1 & 64) != 0) { return roomVersion_; } else { return RoomVersionDefaultValue; } }
      set {
        _hasBits1 |= 64;
        roomVersion_ = value;
      }
    }
    /// <summary>Gets whether the "room_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomVersion {
      get { return (_hasBits1 & 64) != 0; }
    }
    /// <summary>Clears the value of the "room_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomVersion() {
      _hasBits1 &= ~64;
    }

    /// <summary>Field number for the "calltime_minutes" field.</summary>
    public const int CalltimeMinutesFieldNumber = 50;
    private readonly static int CalltimeMinutesDefaultValue = 0;

    private int calltimeMinutes_;
    /// <summary>
    ///Calltime時間
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalltimeMinutes {
      get { if ((_hasBits1 & 128) != 0) { return calltimeMinutes_; } else { return CalltimeMinutesDefaultValue; } }
      set {
        _hasBits1 |= 128;
        calltimeMinutes_ = value;
      }
    }
    /// <summary>Gets whether the "calltime_minutes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCalltimeMinutes {
      get { return (_hasBits1 & 128) != 0; }
    }
    /// <summary>Clears the value of the "calltime_minutes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCalltimeMinutes() {
      _hasBits1 &= ~128;
    }

    /// <summary>Field number for the "hitpot_rate" field.</summary>
    public const int HitpotRateFieldNumber = 51;
    private readonly static int HitpotRateDefaultValue = 0;

    private int hitpotRate_;
    /// <summary>
    /// Tongits 玩法相關設定
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HitpotRate {
      get { if ((_hasBits1 & 256) != 0) { return hitpotRate_; } else { return HitpotRateDefaultValue; } }
      set {
        _hasBits1 |= 256;
        hitpotRate_ = value;
      }
    }
    /// <summary>Gets whether the "hitpot_rate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHitpotRate {
      get { return (_hasBits1 & 256) != 0; }
    }
    /// <summary>Clears the value of the "hitpot_rate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHitpotRate() {
      _hasBits1 &= ~256;
    }

    /// <summary>Field number for the "bonus_card" field.</summary>
    public const int BonusCardFieldNumber = 52;
    private readonly static int BonusCardDefaultValue = 0;

    private int bonusCard_;
    /// <summary>
    /// none:0b00, A:0b01, K:0b10, AK:0b11
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BonusCard {
      get { if ((_hasBits1 & 512) != 0) { return bonusCard_; } else { return BonusCardDefaultValue; } }
      set {
        _hasBits1 |= 512;
        bonusCard_ = value;
      }
    }
    /// <summary>Gets whether the "bonus_card" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBonusCard {
      get { return (_hasBits1 & 512) != 0; }
    }
    /// <summary>Clears the value of the "bonus_card" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBonusCard() {
      _hasBits1 &= ~512;
    }

    /// <summary>Field number for the "bonus_contain_drop" field.</summary>
    public const int BonusContainDropFieldNumber = 53;
    private readonly static bool BonusContainDropDefaultValue = false;

    private bool bonusContainDrop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BonusContainDrop {
      get { if ((_hasBits1 & 1024) != 0) { return bonusContainDrop_; } else { return BonusContainDropDefaultValue; } }
      set {
        _hasBits1 |= 1024;
        bonusContainDrop_ = value;
      }
    }
    /// <summary>Gets whether the "bonus_contain_drop" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBonusContainDrop {
      get { return (_hasBits1 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "bonus_contain_drop" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBonusContainDrop() {
      _hasBits1 &= ~1024;
    }

    /// <summary>Field number for the "fight_limit" field.</summary>
    public const int FightLimitFieldNumber = 54;
    private readonly static int FightLimitDefaultValue = 0;

    private int fightLimit_;
    /// <summary>
    /// 需要幾個已出示牌型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FightLimit {
      get { if ((_hasBits1 & 2048) != 0) { return fightLimit_; } else { return FightLimitDefaultValue; } }
      set {
        _hasBits1 |= 2048;
        fightLimit_ = value;
      }
    }
    /// <summary>Gets whether the "fight_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFightLimit {
      get { return (_hasBits1 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "fight_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFightLimit() {
      _hasBits1 &= ~2048;
    }

    /// <summary>Field number for the "challenge_limit" field.</summary>
    public const int ChallengeLimitFieldNumber = 55;
    private readonly static int ChallengeLimitDefaultValue = 0;

    private int challengeLimit_;
    /// <summary>
    /// 1:secret hand, 2:必須要有已出示牌型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChallengeLimit {
      get { if ((_hasBits1 & 4096) != 0) { return challengeLimit_; } else { return ChallengeLimitDefaultValue; } }
      set {
        _hasBits1 |= 4096;
        challengeLimit_ = value;
      }
    }
    /// <summary>Gets whether the "challenge_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChallengeLimit {
      get { return (_hasBits1 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "challenge_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChallengeLimit() {
      _hasBits1 &= ~4096;
    }

    /// <summary>Field number for the "sapaw_is_mandatory" field.</summary>
    public const int SapawIsMandatoryFieldNumber = 56;
    private readonly static bool SapawIsMandatoryDefaultValue = false;

    private bool sapawIsMandatory_;
    /// <summary>
    /// 棄牌時若該牌可以融合其他組合牌是否要強制執行
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SapawIsMandatory {
      get { if ((_hasBits1 & 8192) != 0) { return sapawIsMandatory_; } else { return SapawIsMandatoryDefaultValue; } }
      set {
        _hasBits1 |= 8192;
        sapawIsMandatory_ = value;
      }
    }
    /// <summary>Gets whether the "sapaw_is_mandatory" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSapawIsMandatory {
      get { return (_hasBits1 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "sapaw_is_mandatory" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSapawIsMandatory() {
      _hasBits1 &= ~8192;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsRoomInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsRoomInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomName != other.RoomName) return false;
      if (Blind != other.Blind) return false;
      if (MinBuyin != other.MinBuyin) return false;
      if (MaxBuyin != other.MaxBuyin) return false;
      if (MinStack != other.MinStack) return false;
      if (Feepoint != other.Feepoint) return false;
      if (Feecap != other.Feecap) return false;
      if (CreatorUserId != other.CreatorUserId) return false;
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (SuperLeagueid != other.SuperLeagueid) return false;
      if (SuperLeagueType != other.SuperLeagueType) return false;
      if (OwnerIcon != other.OwnerIcon) return false;
      if (OwnerName != other.OwnerName) return false;
      if (Ownerid != other.Ownerid) return false;
      if (OwnerVipLevel != other.OwnerVipLevel) return false;
      if (Region != other.Region) return false;
      if (Platform != other.Platform) return false;
      if (ClubName != other.ClubName) return false;
      if (ClubOwnerid != other.ClubOwnerid) return false;
      if (ClubIcon != other.ClubIcon) return false;
      if (OperationTime != other.OperationTime) return false;
      if (RoomTime != other.RoomTime) return false;
      if (SeatNum != other.SeatNum) return false;
      if (AutoStart != other.AutoStart) return false;
      if (RoomType != other.RoomType) return false;
      if (RoomMode != other.RoomMode) return false;
      if (GameMode != other.GameMode) return false;
      if (Timezone != other.Timezone) return false;
      if (Roomid != other.Roomid) return false;
      if (Official != other.Official) return false;
      if (Passwd != other.Passwd) return false;
      if (IsAutoDelayRoomOver != other.IsAutoDelayRoomOver) return false;
      if (AutoDelayRoomOverTimes != other.AutoDelayRoomOverTimes) return false;
      if (IsAutoCreateRoom != other.IsAutoCreateRoom) return false;
      if (Moduleid != other.Moduleid) return false;
      if (MultiOpid != other.MultiOpid) return false;
      if (Tempid != other.Tempid) return false;
      if (GpsLimit != other.GpsLimit) return false;
      if (IpLimit != other.IpLimit) return false;
      if (ForbiddenChat != other.ForbiddenChat) return false;
      if (PasswdLimit != other.PasswdLimit) return false;
      if (IsCaptcha != other.IsCaptcha) return false;
      if (IsBanPc != other.IsBanPc) return false;
      if (IsCheckMail != other.IsCheckMail) return false;
      if (GpsDistanceLimit != other.GpsDistanceLimit) return false;
      if (CreateClubid != other.CreateClubid) return false;
      if (ForbiddenChatMode != other.ForbiddenChatMode) return false;
      if (RoomVersion != other.RoomVersion) return false;
      if (CalltimeMinutes != other.CalltimeMinutes) return false;
      if (HitpotRate != other.HitpotRate) return false;
      if (BonusCard != other.BonusCard) return false;
      if (BonusContainDrop != other.BonusContainDrop) return false;
      if (FightLimit != other.FightLimit) return false;
      if (ChallengeLimit != other.ChallengeLimit) return false;
      if (SapawIsMandatory != other.SapawIsMandatory) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomName) hash ^= RoomName.GetHashCode();
      if (HasBlind) hash ^= Blind.GetHashCode();
      if (HasMinBuyin) hash ^= MinBuyin.GetHashCode();
      if (HasMaxBuyin) hash ^= MaxBuyin.GetHashCode();
      if (HasMinStack) hash ^= MinStack.GetHashCode();
      if (HasFeepoint) hash ^= Feepoint.GetHashCode();
      if (HasFeecap) hash ^= Feecap.GetHashCode();
      if (HasCreatorUserId) hash ^= CreatorUserId.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasSuperLeagueid) hash ^= SuperLeagueid.GetHashCode();
      if (HasSuperLeagueType) hash ^= SuperLeagueType.GetHashCode();
      if (HasOwnerIcon) hash ^= OwnerIcon.GetHashCode();
      if (HasOwnerName) hash ^= OwnerName.GetHashCode();
      if (HasOwnerid) hash ^= Ownerid.GetHashCode();
      if (HasOwnerVipLevel) hash ^= OwnerVipLevel.GetHashCode();
      if (HasRegion) hash ^= Region.GetHashCode();
      if (HasPlatform) hash ^= Platform.GetHashCode();
      if (HasClubName) hash ^= ClubName.GetHashCode();
      if (HasClubOwnerid) hash ^= ClubOwnerid.GetHashCode();
      if (HasClubIcon) hash ^= ClubIcon.GetHashCode();
      if (HasOperationTime) hash ^= OperationTime.GetHashCode();
      if (HasRoomTime) hash ^= RoomTime.GetHashCode();
      if (HasSeatNum) hash ^= SeatNum.GetHashCode();
      if (HasAutoStart) hash ^= AutoStart.GetHashCode();
      if (HasRoomType) hash ^= RoomType.GetHashCode();
      if (HasRoomMode) hash ^= RoomMode.GetHashCode();
      if (HasGameMode) hash ^= GameMode.GetHashCode();
      if (HasTimezone) hash ^= Timezone.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasOfficial) hash ^= Official.GetHashCode();
      if (HasPasswd) hash ^= Passwd.GetHashCode();
      if (HasIsAutoDelayRoomOver) hash ^= IsAutoDelayRoomOver.GetHashCode();
      if (HasAutoDelayRoomOverTimes) hash ^= AutoDelayRoomOverTimes.GetHashCode();
      if (HasIsAutoCreateRoom) hash ^= IsAutoCreateRoom.GetHashCode();
      if (HasModuleid) hash ^= Moduleid.GetHashCode();
      if (HasMultiOpid) hash ^= MultiOpid.GetHashCode();
      if (HasTempid) hash ^= Tempid.GetHashCode();
      if (HasGpsLimit) hash ^= GpsLimit.GetHashCode();
      if (HasIpLimit) hash ^= IpLimit.GetHashCode();
      if (HasForbiddenChat) hash ^= ForbiddenChat.GetHashCode();
      if (HasPasswdLimit) hash ^= PasswdLimit.GetHashCode();
      if (HasIsCaptcha) hash ^= IsCaptcha.GetHashCode();
      if (HasIsBanPc) hash ^= IsBanPc.GetHashCode();
      if (HasIsCheckMail) hash ^= IsCheckMail.GetHashCode();
      if (HasGpsDistanceLimit) hash ^= GpsDistanceLimit.GetHashCode();
      if (HasCreateClubid) hash ^= CreateClubid.GetHashCode();
      if (HasForbiddenChatMode) hash ^= ForbiddenChatMode.GetHashCode();
      if (HasRoomVersion) hash ^= RoomVersion.GetHashCode();
      if (HasCalltimeMinutes) hash ^= CalltimeMinutes.GetHashCode();
      if (HasHitpotRate) hash ^= HitpotRate.GetHashCode();
      if (HasBonusCard) hash ^= BonusCard.GetHashCode();
      if (HasBonusContainDrop) hash ^= BonusContainDrop.GetHashCode();
      if (HasFightLimit) hash ^= FightLimit.GetHashCode();
      if (HasChallengeLimit) hash ^= ChallengeLimit.GetHashCode();
      if (HasSapawIsMandatory) hash ^= SapawIsMandatory.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomName) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (HasBlind) {
        output.WriteRawTag(16);
        output.WriteInt64(Blind);
      }
      if (HasMinBuyin) {
        output.WriteRawTag(24);
        output.WriteInt64(MinBuyin);
      }
      if (HasMaxBuyin) {
        output.WriteRawTag(32);
        output.WriteInt64(MaxBuyin);
      }
      if (HasMinStack) {
        output.WriteRawTag(40);
        output.WriteInt64(MinStack);
      }
      if (HasFeepoint) {
        output.WriteRawTag(48);
        output.WriteInt32(Feepoint);
      }
      if (HasFeecap) {
        output.WriteRawTag(56);
        output.WriteInt32(Feecap);
      }
      if (HasCreatorUserId) {
        output.WriteRawTag(64);
        output.WriteInt64(CreatorUserId);
      }
      if (HasClubid) {
        output.WriteRawTag(74);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(80);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(88);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasSuperLeagueType) {
        output.WriteRawTag(96);
        output.WriteInt32(SuperLeagueType);
      }
      if (HasOwnerIcon) {
        output.WriteRawTag(106);
        output.WriteString(OwnerIcon);
      }
      if (HasOwnerName) {
        output.WriteRawTag(114);
        output.WriteString(OwnerName);
      }
      if (HasOwnerid) {
        output.WriteRawTag(120);
        output.WriteInt64(Ownerid);
      }
      if (HasOwnerVipLevel) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(OwnerVipLevel);
      }
      if (HasRegion) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(Region);
      }
      if (HasPlatform) {
        output.WriteRawTag(146, 1);
        output.WriteString(Platform);
      }
      if (HasClubName) {
        output.WriteRawTag(154, 1);
        output.WriteString(ClubName);
      }
      if (HasClubOwnerid) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(ClubOwnerid);
      }
      if (HasClubIcon) {
        output.WriteRawTag(170, 1);
        output.WriteString(ClubIcon);
      }
      if (HasOperationTime) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(OperationTime);
      }
      if (HasRoomTime) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(RoomTime);
      }
      if (HasSeatNum) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(SeatNum);
      }
      if (HasAutoStart) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(AutoStart);
      }
      if (HasRoomType) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) RoomType);
      }
      if (HasRoomMode) {
        output.WriteRawTag(216, 1);
        output.WriteEnum((int) RoomMode);
      }
      if (HasGameMode) {
        output.WriteRawTag(224, 1);
        output.WriteEnum((int) GameMode);
      }
      if (HasTimezone) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(Timezone);
      }
      if (HasRoomid) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(Roomid);
      }
      if (HasOfficial) {
        output.WriteRawTag(248, 1);
        output.WriteBool(Official);
      }
      if (HasPasswd) {
        output.WriteRawTag(130, 2);
        output.WriteString(Passwd);
      }
      if (HasIsAutoDelayRoomOver) {
        output.WriteRawTag(136, 2);
        output.WriteBool(IsAutoDelayRoomOver);
      }
      if (HasAutoDelayRoomOverTimes) {
        output.WriteRawTag(144, 2);
        output.WriteInt32(AutoDelayRoomOverTimes);
      }
      if (HasIsAutoCreateRoom) {
        output.WriteRawTag(152, 2);
        output.WriteBool(IsAutoCreateRoom);
      }
      if (HasModuleid) {
        output.WriteRawTag(160, 2);
        output.WriteInt64(Moduleid);
      }
      if (HasMultiOpid) {
        output.WriteRawTag(170, 2);
        output.WriteString(MultiOpid);
      }
      if (HasTempid) {
        output.WriteRawTag(178, 2);
        output.WriteString(Tempid);
      }
      if (HasGpsLimit) {
        output.WriteRawTag(184, 2);
        output.WriteBool(GpsLimit);
      }
      if (HasIpLimit) {
        output.WriteRawTag(192, 2);
        output.WriteBool(IpLimit);
      }
      if (HasForbiddenChat) {
        output.WriteRawTag(200, 2);
        output.WriteBool(ForbiddenChat);
      }
      if (HasPasswdLimit) {
        output.WriteRawTag(208, 2);
        output.WriteBool(PasswdLimit);
      }
      if (HasIsCaptcha) {
        output.WriteRawTag(216, 2);
        output.WriteBool(IsCaptcha);
      }
      if (HasIsBanPc) {
        output.WriteRawTag(224, 2);
        output.WriteBool(IsBanPc);
      }
      if (HasIsCheckMail) {
        output.WriteRawTag(232, 2);
        output.WriteBool(IsCheckMail);
      }
      if (HasGpsDistanceLimit) {
        output.WriteRawTag(240, 2);
        output.WriteInt32(GpsDistanceLimit);
      }
      if (HasCreateClubid) {
        output.WriteRawTag(248, 2);
        output.WriteInt32(CreateClubid);
      }
      if (HasForbiddenChatMode) {
        output.WriteRawTag(128, 3);
        output.WriteInt32(ForbiddenChatMode);
      }
      if (HasRoomVersion) {
        output.WriteRawTag(136, 3);
        output.WriteInt32(RoomVersion);
      }
      if (HasCalltimeMinutes) {
        output.WriteRawTag(144, 3);
        output.WriteInt32(CalltimeMinutes);
      }
      if (HasHitpotRate) {
        output.WriteRawTag(152, 3);
        output.WriteInt32(HitpotRate);
      }
      if (HasBonusCard) {
        output.WriteRawTag(160, 3);
        output.WriteInt32(BonusCard);
      }
      if (HasBonusContainDrop) {
        output.WriteRawTag(168, 3);
        output.WriteBool(BonusContainDrop);
      }
      if (HasFightLimit) {
        output.WriteRawTag(176, 3);
        output.WriteInt32(FightLimit);
      }
      if (HasChallengeLimit) {
        output.WriteRawTag(184, 3);
        output.WriteInt32(ChallengeLimit);
      }
      if (HasSapawIsMandatory) {
        output.WriteRawTag(192, 3);
        output.WriteBool(SapawIsMandatory);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomName) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (HasBlind) {
        output.WriteRawTag(16);
        output.WriteInt64(Blind);
      }
      if (HasMinBuyin) {
        output.WriteRawTag(24);
        output.WriteInt64(MinBuyin);
      }
      if (HasMaxBuyin) {
        output.WriteRawTag(32);
        output.WriteInt64(MaxBuyin);
      }
      if (HasMinStack) {
        output.WriteRawTag(40);
        output.WriteInt64(MinStack);
      }
      if (HasFeepoint) {
        output.WriteRawTag(48);
        output.WriteInt32(Feepoint);
      }
      if (HasFeecap) {
        output.WriteRawTag(56);
        output.WriteInt32(Feecap);
      }
      if (HasCreatorUserId) {
        output.WriteRawTag(64);
        output.WriteInt64(CreatorUserId);
      }
      if (HasClubid) {
        output.WriteRawTag(74);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(80);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(88);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasSuperLeagueType) {
        output.WriteRawTag(96);
        output.WriteInt32(SuperLeagueType);
      }
      if (HasOwnerIcon) {
        output.WriteRawTag(106);
        output.WriteString(OwnerIcon);
      }
      if (HasOwnerName) {
        output.WriteRawTag(114);
        output.WriteString(OwnerName);
      }
      if (HasOwnerid) {
        output.WriteRawTag(120);
        output.WriteInt64(Ownerid);
      }
      if (HasOwnerVipLevel) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(OwnerVipLevel);
      }
      if (HasRegion) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(Region);
      }
      if (HasPlatform) {
        output.WriteRawTag(146, 1);
        output.WriteString(Platform);
      }
      if (HasClubName) {
        output.WriteRawTag(154, 1);
        output.WriteString(ClubName);
      }
      if (HasClubOwnerid) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(ClubOwnerid);
      }
      if (HasClubIcon) {
        output.WriteRawTag(170, 1);
        output.WriteString(ClubIcon);
      }
      if (HasOperationTime) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(OperationTime);
      }
      if (HasRoomTime) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(RoomTime);
      }
      if (HasSeatNum) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(SeatNum);
      }
      if (HasAutoStart) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(AutoStart);
      }
      if (HasRoomType) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) RoomType);
      }
      if (HasRoomMode) {
        output.WriteRawTag(216, 1);
        output.WriteEnum((int) RoomMode);
      }
      if (HasGameMode) {
        output.WriteRawTag(224, 1);
        output.WriteEnum((int) GameMode);
      }
      if (HasTimezone) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(Timezone);
      }
      if (HasRoomid) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(Roomid);
      }
      if (HasOfficial) {
        output.WriteRawTag(248, 1);
        output.WriteBool(Official);
      }
      if (HasPasswd) {
        output.WriteRawTag(130, 2);
        output.WriteString(Passwd);
      }
      if (HasIsAutoDelayRoomOver) {
        output.WriteRawTag(136, 2);
        output.WriteBool(IsAutoDelayRoomOver);
      }
      if (HasAutoDelayRoomOverTimes) {
        output.WriteRawTag(144, 2);
        output.WriteInt32(AutoDelayRoomOverTimes);
      }
      if (HasIsAutoCreateRoom) {
        output.WriteRawTag(152, 2);
        output.WriteBool(IsAutoCreateRoom);
      }
      if (HasModuleid) {
        output.WriteRawTag(160, 2);
        output.WriteInt64(Moduleid);
      }
      if (HasMultiOpid) {
        output.WriteRawTag(170, 2);
        output.WriteString(MultiOpid);
      }
      if (HasTempid) {
        output.WriteRawTag(178, 2);
        output.WriteString(Tempid);
      }
      if (HasGpsLimit) {
        output.WriteRawTag(184, 2);
        output.WriteBool(GpsLimit);
      }
      if (HasIpLimit) {
        output.WriteRawTag(192, 2);
        output.WriteBool(IpLimit);
      }
      if (HasForbiddenChat) {
        output.WriteRawTag(200, 2);
        output.WriteBool(ForbiddenChat);
      }
      if (HasPasswdLimit) {
        output.WriteRawTag(208, 2);
        output.WriteBool(PasswdLimit);
      }
      if (HasIsCaptcha) {
        output.WriteRawTag(216, 2);
        output.WriteBool(IsCaptcha);
      }
      if (HasIsBanPc) {
        output.WriteRawTag(224, 2);
        output.WriteBool(IsBanPc);
      }
      if (HasIsCheckMail) {
        output.WriteRawTag(232, 2);
        output.WriteBool(IsCheckMail);
      }
      if (HasGpsDistanceLimit) {
        output.WriteRawTag(240, 2);
        output.WriteInt32(GpsDistanceLimit);
      }
      if (HasCreateClubid) {
        output.WriteRawTag(248, 2);
        output.WriteInt32(CreateClubid);
      }
      if (HasForbiddenChatMode) {
        output.WriteRawTag(128, 3);
        output.WriteInt32(ForbiddenChatMode);
      }
      if (HasRoomVersion) {
        output.WriteRawTag(136, 3);
        output.WriteInt32(RoomVersion);
      }
      if (HasCalltimeMinutes) {
        output.WriteRawTag(144, 3);
        output.WriteInt32(CalltimeMinutes);
      }
      if (HasHitpotRate) {
        output.WriteRawTag(152, 3);
        output.WriteInt32(HitpotRate);
      }
      if (HasBonusCard) {
        output.WriteRawTag(160, 3);
        output.WriteInt32(BonusCard);
      }
      if (HasBonusContainDrop) {
        output.WriteRawTag(168, 3);
        output.WriteBool(BonusContainDrop);
      }
      if (HasFightLimit) {
        output.WriteRawTag(176, 3);
        output.WriteInt32(FightLimit);
      }
      if (HasChallengeLimit) {
        output.WriteRawTag(184, 3);
        output.WriteInt32(ChallengeLimit);
      }
      if (HasSapawIsMandatory) {
        output.WriteRawTag(192, 3);
        output.WriteBool(SapawIsMandatory);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (HasBlind) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Blind);
      }
      if (HasMinBuyin) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinBuyin);
      }
      if (HasMaxBuyin) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxBuyin);
      }
      if (HasMinStack) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinStack);
      }
      if (HasFeepoint) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Feepoint);
      }
      if (HasFeecap) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Feecap);
      }
      if (HasCreatorUserId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreatorUserId);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasSuperLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueid);
      }
      if (HasSuperLeagueType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueType);
      }
      if (HasOwnerIcon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerIcon);
      }
      if (HasOwnerName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerName);
      }
      if (HasOwnerid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Ownerid);
      }
      if (HasOwnerVipLevel) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(OwnerVipLevel);
      }
      if (HasRegion) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Region);
      }
      if (HasPlatform) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Platform);
      }
      if (HasClubName) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClubName);
      }
      if (HasClubOwnerid) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(ClubOwnerid);
      }
      if (HasClubIcon) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClubIcon);
      }
      if (HasOperationTime) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(OperationTime);
      }
      if (HasRoomTime) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RoomTime);
      }
      if (HasSeatNum) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SeatNum);
      }
      if (HasAutoStart) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AutoStart);
      }
      if (HasRoomType) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) RoomType);
      }
      if (HasRoomMode) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) RoomMode);
      }
      if (HasGameMode) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
      }
      if (HasTimezone) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Timezone);
      }
      if (HasRoomid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasOfficial) {
        size += 2 + 1;
      }
      if (HasPasswd) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Passwd);
      }
      if (HasIsAutoDelayRoomOver) {
        size += 2 + 1;
      }
      if (HasAutoDelayRoomOverTimes) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AutoDelayRoomOverTimes);
      }
      if (HasIsAutoCreateRoom) {
        size += 2 + 1;
      }
      if (HasModuleid) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Moduleid);
      }
      if (HasMultiOpid) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MultiOpid);
      }
      if (HasTempid) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Tempid);
      }
      if (HasGpsLimit) {
        size += 2 + 1;
      }
      if (HasIpLimit) {
        size += 2 + 1;
      }
      if (HasForbiddenChat) {
        size += 2 + 1;
      }
      if (HasPasswdLimit) {
        size += 2 + 1;
      }
      if (HasIsCaptcha) {
        size += 2 + 1;
      }
      if (HasIsBanPc) {
        size += 2 + 1;
      }
      if (HasIsCheckMail) {
        size += 2 + 1;
      }
      if (HasGpsDistanceLimit) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(GpsDistanceLimit);
      }
      if (HasCreateClubid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CreateClubid);
      }
      if (HasForbiddenChatMode) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ForbiddenChatMode);
      }
      if (HasRoomVersion) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RoomVersion);
      }
      if (HasCalltimeMinutes) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CalltimeMinutes);
      }
      if (HasHitpotRate) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HitpotRate);
      }
      if (HasBonusCard) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BonusCard);
      }
      if (HasBonusContainDrop) {
        size += 2 + 1;
      }
      if (HasFightLimit) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FightLimit);
      }
      if (HasChallengeLimit) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ChallengeLimit);
      }
      if (HasSapawIsMandatory) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsRoomInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomName) {
        RoomName = other.RoomName;
      }
      if (other.HasBlind) {
        Blind = other.Blind;
      }
      if (other.HasMinBuyin) {
        MinBuyin = other.MinBuyin;
      }
      if (other.HasMaxBuyin) {
        MaxBuyin = other.MaxBuyin;
      }
      if (other.HasMinStack) {
        MinStack = other.MinStack;
      }
      if (other.HasFeepoint) {
        Feepoint = other.Feepoint;
      }
      if (other.HasFeecap) {
        Feecap = other.Feecap;
      }
      if (other.HasCreatorUserId) {
        CreatorUserId = other.CreatorUserId;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasSuperLeagueid) {
        SuperLeagueid = other.SuperLeagueid;
      }
      if (other.HasSuperLeagueType) {
        SuperLeagueType = other.SuperLeagueType;
      }
      if (other.HasOwnerIcon) {
        OwnerIcon = other.OwnerIcon;
      }
      if (other.HasOwnerName) {
        OwnerName = other.OwnerName;
      }
      if (other.HasOwnerid) {
        Ownerid = other.Ownerid;
      }
      if (other.HasOwnerVipLevel) {
        OwnerVipLevel = other.OwnerVipLevel;
      }
      if (other.HasRegion) {
        Region = other.Region;
      }
      if (other.HasPlatform) {
        Platform = other.Platform;
      }
      if (other.HasClubName) {
        ClubName = other.ClubName;
      }
      if (other.HasClubOwnerid) {
        ClubOwnerid = other.ClubOwnerid;
      }
      if (other.HasClubIcon) {
        ClubIcon = other.ClubIcon;
      }
      if (other.HasOperationTime) {
        OperationTime = other.OperationTime;
      }
      if (other.HasRoomTime) {
        RoomTime = other.RoomTime;
      }
      if (other.HasSeatNum) {
        SeatNum = other.SeatNum;
      }
      if (other.HasAutoStart) {
        AutoStart = other.AutoStart;
      }
      if (other.HasRoomType) {
        RoomType = other.RoomType;
      }
      if (other.HasRoomMode) {
        RoomMode = other.RoomMode;
      }
      if (other.HasGameMode) {
        GameMode = other.GameMode;
      }
      if (other.HasTimezone) {
        Timezone = other.Timezone;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasOfficial) {
        Official = other.Official;
      }
      if (other.HasPasswd) {
        Passwd = other.Passwd;
      }
      if (other.HasIsAutoDelayRoomOver) {
        IsAutoDelayRoomOver = other.IsAutoDelayRoomOver;
      }
      if (other.HasAutoDelayRoomOverTimes) {
        AutoDelayRoomOverTimes = other.AutoDelayRoomOverTimes;
      }
      if (other.HasIsAutoCreateRoom) {
        IsAutoCreateRoom = other.IsAutoCreateRoom;
      }
      if (other.HasModuleid) {
        Moduleid = other.Moduleid;
      }
      if (other.HasMultiOpid) {
        MultiOpid = other.MultiOpid;
      }
      if (other.HasTempid) {
        Tempid = other.Tempid;
      }
      if (other.HasGpsLimit) {
        GpsLimit = other.GpsLimit;
      }
      if (other.HasIpLimit) {
        IpLimit = other.IpLimit;
      }
      if (other.HasForbiddenChat) {
        ForbiddenChat = other.ForbiddenChat;
      }
      if (other.HasPasswdLimit) {
        PasswdLimit = other.PasswdLimit;
      }
      if (other.HasIsCaptcha) {
        IsCaptcha = other.IsCaptcha;
      }
      if (other.HasIsBanPc) {
        IsBanPc = other.IsBanPc;
      }
      if (other.HasIsCheckMail) {
        IsCheckMail = other.IsCheckMail;
      }
      if (other.HasGpsDistanceLimit) {
        GpsDistanceLimit = other.GpsDistanceLimit;
      }
      if (other.HasCreateClubid) {
        CreateClubid = other.CreateClubid;
      }
      if (other.HasForbiddenChatMode) {
        ForbiddenChatMode = other.ForbiddenChatMode;
      }
      if (other.HasRoomVersion) {
        RoomVersion = other.RoomVersion;
      }
      if (other.HasCalltimeMinutes) {
        CalltimeMinutes = other.CalltimeMinutes;
      }
      if (other.HasHitpotRate) {
        HitpotRate = other.HitpotRate;
      }
      if (other.HasBonusCard) {
        BonusCard = other.BonusCard;
      }
      if (other.HasBonusContainDrop) {
        BonusContainDrop = other.BonusContainDrop;
      }
      if (other.HasFightLimit) {
        FightLimit = other.FightLimit;
      }
      if (other.HasChallengeLimit) {
        ChallengeLimit = other.ChallengeLimit;
      }
      if (other.HasSapawIsMandatory) {
        SapawIsMandatory = other.SapawIsMandatory;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 16: {
            Blind = input.ReadInt64();
            break;
          }
          case 24: {
            MinBuyin = input.ReadInt64();
            break;
          }
          case 32: {
            MaxBuyin = input.ReadInt64();
            break;
          }
          case 40: {
            MinStack = input.ReadInt64();
            break;
          }
          case 48: {
            Feepoint = input.ReadInt32();
            break;
          }
          case 56: {
            Feecap = input.ReadInt32();
            break;
          }
          case 64: {
            CreatorUserId = input.ReadInt64();
            break;
          }
          case 74: {
            Clubid = input.ReadString();
            break;
          }
          case 80: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 88: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 96: {
            SuperLeagueType = input.ReadInt32();
            break;
          }
          case 106: {
            OwnerIcon = input.ReadString();
            break;
          }
          case 114: {
            OwnerName = input.ReadString();
            break;
          }
          case 120: {
            Ownerid = input.ReadInt64();
            break;
          }
          case 128: {
            OwnerVipLevel = input.ReadUInt32();
            break;
          }
          case 136: {
            Region = input.ReadInt32();
            break;
          }
          case 146: {
            Platform = input.ReadString();
            break;
          }
          case 154: {
            ClubName = input.ReadString();
            break;
          }
          case 160: {
            ClubOwnerid = input.ReadInt64();
            break;
          }
          case 170: {
            ClubIcon = input.ReadString();
            break;
          }
          case 176: {
            OperationTime = input.ReadInt32();
            break;
          }
          case 184: {
            RoomTime = input.ReadInt32();
            break;
          }
          case 192: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 200: {
            AutoStart = input.ReadInt32();
            break;
          }
          case 208: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 216: {
            RoomMode = (global::Texas.Protocol.RoomMode) input.ReadEnum();
            break;
          }
          case 224: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 232: {
            Timezone = input.ReadInt32();
            break;
          }
          case 240: {
            Roomid = input.ReadInt32();
            break;
          }
          case 248: {
            Official = input.ReadBool();
            break;
          }
          case 258: {
            Passwd = input.ReadString();
            break;
          }
          case 264: {
            IsAutoDelayRoomOver = input.ReadBool();
            break;
          }
          case 272: {
            AutoDelayRoomOverTimes = input.ReadInt32();
            break;
          }
          case 280: {
            IsAutoCreateRoom = input.ReadBool();
            break;
          }
          case 288: {
            Moduleid = input.ReadInt64();
            break;
          }
          case 298: {
            MultiOpid = input.ReadString();
            break;
          }
          case 306: {
            Tempid = input.ReadString();
            break;
          }
          case 312: {
            GpsLimit = input.ReadBool();
            break;
          }
          case 320: {
            IpLimit = input.ReadBool();
            break;
          }
          case 328: {
            ForbiddenChat = input.ReadBool();
            break;
          }
          case 336: {
            PasswdLimit = input.ReadBool();
            break;
          }
          case 344: {
            IsCaptcha = input.ReadBool();
            break;
          }
          case 352: {
            IsBanPc = input.ReadBool();
            break;
          }
          case 360: {
            IsCheckMail = input.ReadBool();
            break;
          }
          case 368: {
            GpsDistanceLimit = input.ReadInt32();
            break;
          }
          case 376: {
            CreateClubid = input.ReadInt32();
            break;
          }
          case 384: {
            ForbiddenChatMode = input.ReadInt32();
            break;
          }
          case 392: {
            RoomVersion = input.ReadInt32();
            break;
          }
          case 400: {
            CalltimeMinutes = input.ReadInt32();
            break;
          }
          case 408: {
            HitpotRate = input.ReadInt32();
            break;
          }
          case 416: {
            BonusCard = input.ReadInt32();
            break;
          }
          case 424: {
            BonusContainDrop = input.ReadBool();
            break;
          }
          case 432: {
            FightLimit = input.ReadInt32();
            break;
          }
          case 440: {
            ChallengeLimit = input.ReadInt32();
            break;
          }
          case 448: {
            SapawIsMandatory = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 16: {
            Blind = input.ReadInt64();
            break;
          }
          case 24: {
            MinBuyin = input.ReadInt64();
            break;
          }
          case 32: {
            MaxBuyin = input.ReadInt64();
            break;
          }
          case 40: {
            MinStack = input.ReadInt64();
            break;
          }
          case 48: {
            Feepoint = input.ReadInt32();
            break;
          }
          case 56: {
            Feecap = input.ReadInt32();
            break;
          }
          case 64: {
            CreatorUserId = input.ReadInt64();
            break;
          }
          case 74: {
            Clubid = input.ReadString();
            break;
          }
          case 80: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 88: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 96: {
            SuperLeagueType = input.ReadInt32();
            break;
          }
          case 106: {
            OwnerIcon = input.ReadString();
            break;
          }
          case 114: {
            OwnerName = input.ReadString();
            break;
          }
          case 120: {
            Ownerid = input.ReadInt64();
            break;
          }
          case 128: {
            OwnerVipLevel = input.ReadUInt32();
            break;
          }
          case 136: {
            Region = input.ReadInt32();
            break;
          }
          case 146: {
            Platform = input.ReadString();
            break;
          }
          case 154: {
            ClubName = input.ReadString();
            break;
          }
          case 160: {
            ClubOwnerid = input.ReadInt64();
            break;
          }
          case 170: {
            ClubIcon = input.ReadString();
            break;
          }
          case 176: {
            OperationTime = input.ReadInt32();
            break;
          }
          case 184: {
            RoomTime = input.ReadInt32();
            break;
          }
          case 192: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 200: {
            AutoStart = input.ReadInt32();
            break;
          }
          case 208: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 216: {
            RoomMode = (global::Texas.Protocol.RoomMode) input.ReadEnum();
            break;
          }
          case 224: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 232: {
            Timezone = input.ReadInt32();
            break;
          }
          case 240: {
            Roomid = input.ReadInt32();
            break;
          }
          case 248: {
            Official = input.ReadBool();
            break;
          }
          case 258: {
            Passwd = input.ReadString();
            break;
          }
          case 264: {
            IsAutoDelayRoomOver = input.ReadBool();
            break;
          }
          case 272: {
            AutoDelayRoomOverTimes = input.ReadInt32();
            break;
          }
          case 280: {
            IsAutoCreateRoom = input.ReadBool();
            break;
          }
          case 288: {
            Moduleid = input.ReadInt64();
            break;
          }
          case 298: {
            MultiOpid = input.ReadString();
            break;
          }
          case 306: {
            Tempid = input.ReadString();
            break;
          }
          case 312: {
            GpsLimit = input.ReadBool();
            break;
          }
          case 320: {
            IpLimit = input.ReadBool();
            break;
          }
          case 328: {
            ForbiddenChat = input.ReadBool();
            break;
          }
          case 336: {
            PasswdLimit = input.ReadBool();
            break;
          }
          case 344: {
            IsCaptcha = input.ReadBool();
            break;
          }
          case 352: {
            IsBanPc = input.ReadBool();
            break;
          }
          case 360: {
            IsCheckMail = input.ReadBool();
            break;
          }
          case 368: {
            GpsDistanceLimit = input.ReadInt32();
            break;
          }
          case 376: {
            CreateClubid = input.ReadInt32();
            break;
          }
          case 384: {
            ForbiddenChatMode = input.ReadInt32();
            break;
          }
          case 392: {
            RoomVersion = input.ReadInt32();
            break;
          }
          case 400: {
            CalltimeMinutes = input.ReadInt32();
            break;
          }
          case 408: {
            HitpotRate = input.ReadInt32();
            break;
          }
          case 416: {
            BonusCard = input.ReadInt32();
            break;
          }
          case 424: {
            BonusContainDrop = input.ReadBool();
            break;
          }
          case 432: {
            FightLimit = input.ReadInt32();
            break;
          }
          case 440: {
            ChallengeLimit = input.ReadInt32();
            break;
          }
          case 448: {
            SapawIsMandatory = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreateTongitsRoomREQ : pb::IMessage<CreateTongitsRoomREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateTongitsRoomREQ> _parser = new pb::MessageParser<CreateTongitsRoomREQ>(() => new CreateTongitsRoomREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    private int _hasBits1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateTongitsRoomREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateTongitsRoomREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateTongitsRoomREQ(CreateTongitsRoomREQ other) : this() {
      _hasBits0 = other._hasBits0;
      _hasBits1 = other._hasBits1;
      roomName_ = other.roomName_;
      blind_ = other.blind_;
      minBuyin_ = other.minBuyin_;
      maxBuyin_ = other.maxBuyin_;
      minStack_ = other.minStack_;
      feepoint_ = other.feepoint_;
      feecap_ = other.feecap_;
      creatorUserId_ = other.creatorUserId_;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      superLeagueid_ = other.superLeagueid_;
      superLeagueType_ = other.superLeagueType_;
      operationTime_ = other.operationTime_;
      roomTime_ = other.roomTime_;
      seatNum_ = other.seatNum_;
      autoStart_ = other.autoStart_;
      roomType_ = other.roomType_;
      gameMode_ = other.gameMode_;
      timezone_ = other.timezone_;
      roomid_ = other.roomid_;
      derivedRoomid_ = other.derivedRoomid_;
      isAutoDelayRoomOver_ = other.isAutoDelayRoomOver_;
      autoDelayRoomOverTimes_ = other.autoDelayRoomOverTimes_;
      isAutoCreateRoom_ = other.isAutoCreateRoom_;
      moduleid_ = other.moduleid_;
      multiOpid_ = other.multiOpid_;
      canUse_ = other.canUse_;
      gpsLimit_ = other.gpsLimit_;
      ipLimit_ = other.ipLimit_;
      forbiddenChat_ = other.forbiddenChat_;
      passwdLimit_ = other.passwdLimit_;
      isCaptcha_ = other.isCaptcha_;
      isBanPc_ = other.isBanPc_;
      isCheckMail_ = other.isCheckMail_;
      forbiddenChatMode_ = other.forbiddenChatMode_;
      calltimeMinutes_ = other.calltimeMinutes_;
      hitpotRate_ = other.hitpotRate_;
      bonusCard_ = other.bonusCard_;
      bonusContainDrop_ = other.bonusContainDrop_;
      fightLimit_ = other.fightLimit_;
      challengeLimit_ = other.challengeLimit_;
      sapawIsMandatory_ = other.sapawIsMandatory_;
      banClub_ = other.banClub_.Clone();
      banCountry_ = other.banCountry_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateTongitsRoomREQ Clone() {
      return new CreateTongitsRoomREQ(this);
    }

    /// <summary>Field number for the "room_name" field.</summary>
    public const int RoomNameFieldNumber = 1;
    private readonly static string RoomNameDefaultValue = "";

    private string roomName_;
    /// <summary>
    /// 房間名稱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomName {
      get { return roomName_ ?? RoomNameDefaultValue; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "room_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomName {
      get { return roomName_ != null; }
    }
    /// <summary>Clears the value of the "room_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomName() {
      roomName_ = null;
    }

    /// <summary>Field number for the "blind" field.</summary>
    public const int BlindFieldNumber = 2;
    private readonly static long BlindDefaultValue = 0L;

    private long blind_;
    /// <summary>
    ///買入相關
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Blind {
      get { if ((_hasBits0 & 1) != 0) { return blind_; } else { return BlindDefaultValue; } }
      set {
        _hasBits0 |= 1;
        blind_ = value;
      }
    }
    /// <summary>Gets whether the "blind" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlind {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "blind" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlind() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "min_buyin" field.</summary>
    public const int MinBuyinFieldNumber = 3;
    private readonly static long MinBuyinDefaultValue = 0L;

    private long minBuyin_;
    /// <summary>
    /// 最小買入
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinBuyin {
      get { if ((_hasBits0 & 2) != 0) { return minBuyin_; } else { return MinBuyinDefaultValue; } }
      set {
        _hasBits0 |= 2;
        minBuyin_ = value;
      }
    }
    /// <summary>Gets whether the "min_buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinBuyin {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "min_buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinBuyin() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "max_buyin" field.</summary>
    public const int MaxBuyinFieldNumber = 4;
    private readonly static long MaxBuyinDefaultValue = 0L;

    private long maxBuyin_;
    /// <summary>
    /// 最大買入
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaxBuyin {
      get { if ((_hasBits0 & 4) != 0) { return maxBuyin_; } else { return MaxBuyinDefaultValue; } }
      set {
        _hasBits0 |= 4;
        maxBuyin_ = value;
      }
    }
    /// <summary>Gets whether the "max_buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxBuyin {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "max_buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxBuyin() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "min_stack" field.</summary>
    public const int MinStackFieldNumber = 5;
    private readonly static long MinStackDefaultValue = 0L;

    private long minStack_;
    /// <summary>
    /// 籌碼最底須保持在min_stack以上，否則跳出彈窗要求補碼
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinStack {
      get { if ((_hasBits0 & 8) != 0) { return minStack_; } else { return MinStackDefaultValue; } }
      set {
        _hasBits0 |= 8;
        minStack_ = value;
      }
    }
    /// <summary>Gets whether the "min_stack" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinStack {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "min_stack" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinStack() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "feepoint" field.</summary>
    public const int FeepointFieldNumber = 6;
    private readonly static int FeepointDefaultValue = 0;

    private int feepoint_;
    /// <summary>
    ///服務費相關
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Feepoint {
      get { if ((_hasBits0 & 16) != 0) { return feepoint_; } else { return FeepointDefaultValue; } }
      set {
        _hasBits0 |= 16;
        feepoint_ = value;
      }
    }
    /// <summary>Gets whether the "feepoint" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFeepoint {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "feepoint" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFeepoint() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "feecap" field.</summary>
    public const int FeecapFieldNumber = 7;
    private readonly static int FeecapDefaultValue = 0;

    private int feecap_;
    /// <summary>
    /// 服務費封頂
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Feecap {
      get { if ((_hasBits0 & 32) != 0) { return feecap_; } else { return FeecapDefaultValue; } }
      set {
        _hasBits0 |= 32;
        feecap_ = value;
      }
    }
    /// <summary>Gets whether the "feecap" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFeecap {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "feecap" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFeecap() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "creator_user_id" field.</summary>
    public const int CreatorUserIdFieldNumber = 8;
    private readonly static long CreatorUserIdDefaultValue = 0L;

    private long creatorUserId_;
    /// <summary>
    ///創辦人、俱樂部屬性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CreatorUserId {
      get { if ((_hasBits0 & 64) != 0) { return creatorUserId_; } else { return CreatorUserIdDefaultValue; } }
      set {
        _hasBits0 |= 64;
        creatorUserId_ = value;
      }
    }
    /// <summary>Gets whether the "creator_user_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCreatorUserId {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "creator_user_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCreatorUserId() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 9;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    /// <summary>
    /// 牌桌所屬俱樂部
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 10;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    /// <summary>
    /// 牌桌所屬聯盟
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 128) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 128;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "super_leagueid" field.</summary>
    public const int SuperLeagueidFieldNumber = 11;
    private readonly static int SuperLeagueidDefaultValue = 0;

    private int superLeagueid_;
    /// <summary>
    /// 牌桌所屬超級聯盟
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueid {
      get { if ((_hasBits0 & 256) != 0) { return superLeagueid_; } else { return SuperLeagueidDefaultValue; } }
      set {
        _hasBits0 |= 256;
        superLeagueid_ = value;
      }
    }
    /// <summary>Gets whether the "super_leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueid {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "super_leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueid() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "super_league_type" field.</summary>
    public const int SuperLeagueTypeFieldNumber = 12;
    private readonly static int SuperLeagueTypeDefaultValue = 0;

    private int superLeagueType_;
    /// <summary>
    /// 1表示非PPST
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueType {
      get { if ((_hasBits0 & 512) != 0) { return superLeagueType_; } else { return SuperLeagueTypeDefaultValue; } }
      set {
        _hasBits0 |= 512;
        superLeagueType_ = value;
      }
    }
    /// <summary>Gets whether the "super_league_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueType {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "super_league_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueType() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "operation_time" field.</summary>
    public const int OperationTimeFieldNumber = 13;
    private readonly static int OperationTimeDefaultValue = 0;

    private int operationTime_;
    /// <summary>
    ///房間屬性
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OperationTime {
      get { if ((_hasBits0 & 1024) != 0) { return operationTime_; } else { return OperationTimeDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        operationTime_ = value;
      }
    }
    /// <summary>Gets whether the "operation_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOperationTime {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "operation_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOperationTime() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "room_time" field.</summary>
    public const int RoomTimeFieldNumber = 14;
    private readonly static int RoomTimeDefaultValue = 0;

    private int roomTime_;
    /// <summary>
    /// 房間存活時間
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoomTime {
      get { if ((_hasBits0 & 2048) != 0) { return roomTime_; } else { return RoomTimeDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        roomTime_ = value;
      }
    }
    /// <summary>Gets whether the "room_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomTime {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "room_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomTime() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "seat_num" field.</summary>
    public const int SeatNumFieldNumber = 15;
    private readonly static int SeatNumDefaultValue = 0;

    private int seatNum_;
    /// <summary>
    /// 座位數量，最大只支持3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SeatNum {
      get { if ((_hasBits0 & 4096) != 0) { return seatNum_; } else { return SeatNumDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        seatNum_ = value;
      }
    }
    /// <summary>Gets whether the "seat_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatNum {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "seat_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatNum() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "auto_start" field.</summary>
    public const int AutoStartFieldNumber = 16;
    private readonly static int AutoStartDefaultValue = 0;

    private int autoStart_;
    /// <summary>
    /// 幾個人坐下可自動開始，-1表示需要手動開始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AutoStart {
      get { if ((_hasBits0 & 8192) != 0) { return autoStart_; } else { return AutoStartDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        autoStart_ = value;
      }
    }
    /// <summary>Gets whether the "auto_start" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAutoStart {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "auto_start" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAutoStart() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "room_type" field.</summary>
    public const int RoomTypeFieldNumber = 17;
    private readonly static global::Texas.Protocol.RoomType RoomTypeDefaultValue = global::Texas.Protocol.RoomType.TestRoom;

    private global::Texas.Protocol.RoomType roomType_;
    /// <summary>
    /// 房間模式，Tongits = 17
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomType RoomType {
      get { if ((_hasBits0 & 16384) != 0) { return roomType_; } else { return RoomTypeDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        roomType_ = value;
      }
    }
    /// <summary>Gets whether the "room_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomType {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "room_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomType() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "game_mode" field.</summary>
    public const int GameModeFieldNumber = 18;
    private readonly static global::Texas.Protocol.GameMode GameModeDefaultValue = global::Texas.Protocol.GameMode.Regular;

    private global::Texas.Protocol.GameMode gameMode_;
    /// <summary>
    /// Tongits = 0, Tongits Joker = 20
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.GameMode GameMode {
      get { if ((_hasBits0 & 32768) != 0) { return gameMode_; } else { return GameModeDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        gameMode_ = value;
      }
    }
    /// <summary>Gets whether the "game_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameMode {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "game_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameMode() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "timezone" field.</summary>
    public const int TimezoneFieldNumber = 19;
    private readonly static int TimezoneDefaultValue = 0;

    private int timezone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Timezone {
      get { if ((_hasBits0 & 65536) != 0) { return timezone_; } else { return TimezoneDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        timezone_ = value;
      }
    }
    /// <summary>Gets whether the "timezone" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimezone {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "timezone" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimezone() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 20;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    /// <summary>
    /// 由伺服器填寫
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 131072) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "derived_roomid" field.</summary>
    public const int DerivedRoomidFieldNumber = 21;
    private readonly static int DerivedRoomidDefaultValue = 0;

    private int derivedRoomid_;
    /// <summary>
    ///自動開桌ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DerivedRoomid {
      get { if ((_hasBits0 & 262144) != 0) { return derivedRoomid_; } else { return DerivedRoomidDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        derivedRoomid_ = value;
      }
    }
    /// <summary>Gets whether the "derived_roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDerivedRoomid {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "derived_roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDerivedRoomid() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "is_auto_delay_room_over" field.</summary>
    public const int IsAutoDelayRoomOverFieldNumber = 22;
    private readonly static bool IsAutoDelayRoomOverDefaultValue = false;

    private bool isAutoDelayRoomOver_;
    /// <summary>
    ///自動延時、開桌相關
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAutoDelayRoomOver {
      get { if ((_hasBits0 & 524288) != 0) { return isAutoDelayRoomOver_; } else { return IsAutoDelayRoomOverDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        isAutoDelayRoomOver_ = value;
      }
    }
    /// <summary>Gets whether the "is_auto_delay_room_over" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsAutoDelayRoomOver {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "is_auto_delay_room_over" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsAutoDelayRoomOver() {
      _hasBits0 &= ~524288;
    }

    /// <summary>Field number for the "auto_delay_room_over_times" field.</summary>
    public const int AutoDelayRoomOverTimesFieldNumber = 23;
    private readonly static int AutoDelayRoomOverTimesDefaultValue = 0;

    private int autoDelayRoomOverTimes_;
    /// <summary>
    /// 自动延时次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AutoDelayRoomOverTimes {
      get { if ((_hasBits0 & 1048576) != 0) { return autoDelayRoomOverTimes_; } else { return AutoDelayRoomOverTimesDefaultValue; } }
      set {
        _hasBits0 |= 1048576;
        autoDelayRoomOverTimes_ = value;
      }
    }
    /// <summary>Gets whether the "auto_delay_room_over_times" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAutoDelayRoomOverTimes {
      get { return (_hasBits0 & 1048576) != 0; }
    }
    /// <summary>Clears the value of the "auto_delay_room_over_times" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAutoDelayRoomOverTimes() {
      _hasBits0 &= ~1048576;
    }

    /// <summary>Field number for the "is_auto_create_room" field.</summary>
    public const int IsAutoCreateRoomFieldNumber = 24;
    private readonly static bool IsAutoCreateRoomDefaultValue = false;

    private bool isAutoCreateRoom_;
    /// <summary>
    /// 是否自动开桌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAutoCreateRoom {
      get { if ((_hasBits0 & 2097152) != 0) { return isAutoCreateRoom_; } else { return IsAutoCreateRoomDefaultValue; } }
      set {
        _hasBits0 |= 2097152;
        isAutoCreateRoom_ = value;
      }
    }
    /// <summary>Gets whether the "is_auto_create_room" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsAutoCreateRoom {
      get { return (_hasBits0 & 2097152) != 0; }
    }
    /// <summary>Clears the value of the "is_auto_create_room" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsAutoCreateRoom() {
      _hasBits0 &= ~2097152;
    }

    /// <summary>Field number for the "moduleid" field.</summary>
    public const int ModuleidFieldNumber = 25;
    private readonly static long ModuleidDefaultValue = 0L;

    private long moduleid_;
    /// <summary>
    ///模板
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Moduleid {
      get { if ((_hasBits0 & 4194304) != 0) { return moduleid_; } else { return ModuleidDefaultValue; } }
      set {
        _hasBits0 |= 4194304;
        moduleid_ = value;
      }
    }
    /// <summary>Gets whether the "moduleid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModuleid {
      get { return (_hasBits0 & 4194304) != 0; }
    }
    /// <summary>Clears the value of the "moduleid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModuleid() {
      _hasBits0 &= ~4194304;
    }

    /// <summary>Field number for the "multi_opid" field.</summary>
    public const int MultiOpidFieldNumber = 26;
    private readonly static string MultiOpidDefaultValue = "";

    private string multiOpid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MultiOpid {
      get { return multiOpid_ ?? MultiOpidDefaultValue; }
      set {
        multiOpid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "multi_opid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMultiOpid {
      get { return multiOpid_ != null; }
    }
    /// <summary>Clears the value of the "multi_opid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMultiOpid() {
      multiOpid_ = null;
    }

    /// <summary>Field number for the "can_use" field.</summary>
    public const int CanUseFieldNumber = 27;
    private readonly static bool CanUseDefaultValue = false;

    private bool canUse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanUse {
      get { if ((_hasBits0 & 8388608) != 0) { return canUse_; } else { return CanUseDefaultValue; } }
      set {
        _hasBits0 |= 8388608;
        canUse_ = value;
      }
    }
    /// <summary>Gets whether the "can_use" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCanUse {
      get { return (_hasBits0 & 8388608) != 0; }
    }
    /// <summary>Clears the value of the "can_use" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCanUse() {
      _hasBits0 &= ~8388608;
    }

    /// <summary>Field number for the "gps_limit" field.</summary>
    public const int GpsLimitFieldNumber = 28;
    private readonly static bool GpsLimitDefaultValue = false;

    private bool gpsLimit_;
    /// <summary>
    ///限制功能
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GpsLimit {
      get { if ((_hasBits0 & 16777216) != 0) { return gpsLimit_; } else { return GpsLimitDefaultValue; } }
      set {
        _hasBits0 |= 16777216;
        gpsLimit_ = value;
      }
    }
    /// <summary>Gets whether the "gps_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpsLimit {
      get { return (_hasBits0 & 16777216) != 0; }
    }
    /// <summary>Clears the value of the "gps_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpsLimit() {
      _hasBits0 &= ~16777216;
    }

    /// <summary>Field number for the "ip_limit" field.</summary>
    public const int IpLimitFieldNumber = 29;
    private readonly static bool IpLimitDefaultValue = false;

    private bool ipLimit_;
    /// <summary>
    /// IP限制
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IpLimit {
      get { if ((_hasBits0 & 33554432) != 0) { return ipLimit_; } else { return IpLimitDefaultValue; } }
      set {
        _hasBits0 |= 33554432;
        ipLimit_ = value;
      }
    }
    /// <summary>Gets whether the "ip_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIpLimit {
      get { return (_hasBits0 & 33554432) != 0; }
    }
    /// <summary>Clears the value of the "ip_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIpLimit() {
      _hasBits0 &= ~33554432;
    }

    /// <summary>Field number for the "forbidden_chat" field.</summary>
    public const int ForbiddenChatFieldNumber = 30;
    private readonly static bool ForbiddenChatDefaultValue = false;

    private bool forbiddenChat_;
    /// <summary>
    /// 是否禁言
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ForbiddenChat {
      get { if ((_hasBits0 & 67108864) != 0) { return forbiddenChat_; } else { return ForbiddenChatDefaultValue; } }
      set {
        _hasBits0 |= 67108864;
        forbiddenChat_ = value;
      }
    }
    /// <summary>Gets whether the "forbidden_chat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForbiddenChat {
      get { return (_hasBits0 & 67108864) != 0; }
    }
    /// <summary>Clears the value of the "forbidden_chat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForbiddenChat() {
      _hasBits0 &= ~67108864;
    }

    /// <summary>Field number for the "passwd_limit" field.</summary>
    public const int PasswdLimitFieldNumber = 31;
    private readonly static bool PasswdLimitDefaultValue = false;

    private bool passwdLimit_;
    /// <summary>
    /// 是否密码桌,与授权买入互斥
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PasswdLimit {
      get { if ((_hasBits0 & 134217728) != 0) { return passwdLimit_; } else { return PasswdLimitDefaultValue; } }
      set {
        _hasBits0 |= 134217728;
        passwdLimit_ = value;
      }
    }
    /// <summary>Gets whether the "passwd_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPasswdLimit {
      get { return (_hasBits0 & 134217728) != 0; }
    }
    /// <summary>Clears the value of the "passwd_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPasswdLimit() {
      _hasBits0 &= ~134217728;
    }

    /// <summary>Field number for the "is_captcha" field.</summary>
    public const int IsCaptchaFieldNumber = 32;
    private readonly static bool IsCaptchaDefaultValue = false;

    private bool isCaptcha_;
    /// <summary>
    /// 是否人机校验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCaptcha {
      get { if ((_hasBits0 & 268435456) != 0) { return isCaptcha_; } else { return IsCaptchaDefaultValue; } }
      set {
        _hasBits0 |= 268435456;
        isCaptcha_ = value;
      }
    }
    /// <summary>Gets whether the "is_captcha" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsCaptcha {
      get { return (_hasBits0 & 268435456) != 0; }
    }
    /// <summary>Clears the value of the "is_captcha" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsCaptcha() {
      _hasBits0 &= ~268435456;
    }

    /// <summary>Field number for the "is_ban_pc" field.</summary>
    public const int IsBanPcFieldNumber = 33;
    private readonly static bool IsBanPcDefaultValue = false;

    private bool isBanPc_;
    /// <summary>
    /// 禁止PC玩家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBanPc {
      get { if ((_hasBits0 & 536870912) != 0) { return isBanPc_; } else { return IsBanPcDefaultValue; } }
      set {
        _hasBits0 |= 536870912;
        isBanPc_ = value;
      }
    }
    /// <summary>Gets whether the "is_ban_pc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsBanPc {
      get { return (_hasBits0 & 536870912) != 0; }
    }
    /// <summary>Clears the value of the "is_ban_pc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsBanPc() {
      _hasBits0 &= ~536870912;
    }

    /// <summary>Field number for the "is_check_mail" field.</summary>
    public const int IsCheckMailFieldNumber = 34;
    private readonly static bool IsCheckMailDefaultValue = false;

    private bool isCheckMail_;
    /// <summary>
    /// 需要進行email檢查
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCheckMail {
      get { if ((_hasBits0 & 1073741824) != 0) { return isCheckMail_; } else { return IsCheckMailDefaultValue; } }
      set {
        _hasBits0 |= 1073741824;
        isCheckMail_ = value;
      }
    }
    /// <summary>Gets whether the "is_check_mail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsCheckMail {
      get { return (_hasBits0 & 1073741824) != 0; }
    }
    /// <summary>Clears the value of the "is_check_mail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsCheckMail() {
      _hasBits0 &= ~1073741824;
    }

    /// <summary>Field number for the "forbidden_chat_mode" field.</summary>
    public const int ForbiddenChatModeFieldNumber = 36;
    private readonly static int ForbiddenChatModeDefaultValue = 0;

    private int forbiddenChatMode_;
    /// <summary>
    ///0: 全體禁言 1:看客禁言
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ForbiddenChatMode {
      get { if ((_hasBits0 & -2147483648) != 0) { return forbiddenChatMode_; } else { return ForbiddenChatModeDefaultValue; } }
      set {
        _hasBits0 |= -2147483648;
        forbiddenChatMode_ = value;
      }
    }
    /// <summary>Gets whether the "forbidden_chat_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForbiddenChatMode {
      get { return (_hasBits0 & -2147483648) != 0; }
    }
    /// <summary>Clears the value of the "forbidden_chat_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForbiddenChatMode() {
      _hasBits0 &= ~-2147483648;
    }

    /// <summary>Field number for the "calltime_minutes" field.</summary>
    public const int CalltimeMinutesFieldNumber = 37;
    private readonly static int CalltimeMinutesDefaultValue = 0;

    private int calltimeMinutes_;
    /// <summary>
    ///Calltime時間
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalltimeMinutes {
      get { if ((_hasBits1 & 1) != 0) { return calltimeMinutes_; } else { return CalltimeMinutesDefaultValue; } }
      set {
        _hasBits1 |= 1;
        calltimeMinutes_ = value;
      }
    }
    /// <summary>Gets whether the "calltime_minutes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCalltimeMinutes {
      get { return (_hasBits1 & 1) != 0; }
    }
    /// <summary>Clears the value of the "calltime_minutes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCalltimeMinutes() {
      _hasBits1 &= ~1;
    }

    /// <summary>Field number for the "hitpot_rate" field.</summary>
    public const int HitpotRateFieldNumber = 38;
    private readonly static int HitpotRateDefaultValue = 0;

    private int hitpotRate_;
    /// <summary>
    /// Tongits 玩法相關設定
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HitpotRate {
      get { if ((_hasBits1 & 2) != 0) { return hitpotRate_; } else { return HitpotRateDefaultValue; } }
      set {
        _hasBits1 |= 2;
        hitpotRate_ = value;
      }
    }
    /// <summary>Gets whether the "hitpot_rate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHitpotRate {
      get { return (_hasBits1 & 2) != 0; }
    }
    /// <summary>Clears the value of the "hitpot_rate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHitpotRate() {
      _hasBits1 &= ~2;
    }

    /// <summary>Field number for the "bonus_card" field.</summary>
    public const int BonusCardFieldNumber = 39;
    private readonly static int BonusCardDefaultValue = 0;

    private int bonusCard_;
    /// <summary>
    /// none:0b00, A:0b01, K:0b10, AK:0b11
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BonusCard {
      get { if ((_hasBits1 & 4) != 0) { return bonusCard_; } else { return BonusCardDefaultValue; } }
      set {
        _hasBits1 |= 4;
        bonusCard_ = value;
      }
    }
    /// <summary>Gets whether the "bonus_card" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBonusCard {
      get { return (_hasBits1 & 4) != 0; }
    }
    /// <summary>Clears the value of the "bonus_card" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBonusCard() {
      _hasBits1 &= ~4;
    }

    /// <summary>Field number for the "bonus_contain_drop" field.</summary>
    public const int BonusContainDropFieldNumber = 40;
    private readonly static bool BonusContainDropDefaultValue = false;

    private bool bonusContainDrop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BonusContainDrop {
      get { if ((_hasBits1 & 8) != 0) { return bonusContainDrop_; } else { return BonusContainDropDefaultValue; } }
      set {
        _hasBits1 |= 8;
        bonusContainDrop_ = value;
      }
    }
    /// <summary>Gets whether the "bonus_contain_drop" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBonusContainDrop {
      get { return (_hasBits1 & 8) != 0; }
    }
    /// <summary>Clears the value of the "bonus_contain_drop" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBonusContainDrop() {
      _hasBits1 &= ~8;
    }

    /// <summary>Field number for the "fight_limit" field.</summary>
    public const int FightLimitFieldNumber = 41;
    private readonly static int FightLimitDefaultValue = 0;

    private int fightLimit_;
    /// <summary>
    /// 需要幾個已出示牌型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FightLimit {
      get { if ((_hasBits1 & 16) != 0) { return fightLimit_; } else { return FightLimitDefaultValue; } }
      set {
        _hasBits1 |= 16;
        fightLimit_ = value;
      }
    }
    /// <summary>Gets whether the "fight_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFightLimit {
      get { return (_hasBits1 & 16) != 0; }
    }
    /// <summary>Clears the value of the "fight_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFightLimit() {
      _hasBits1 &= ~16;
    }

    /// <summary>Field number for the "challenge_limit" field.</summary>
    public const int ChallengeLimitFieldNumber = 42;
    private readonly static int ChallengeLimitDefaultValue = 0;

    private int challengeLimit_;
    /// <summary>
    /// 1:secret hand, 2:必須要有已出示牌型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChallengeLimit {
      get { if ((_hasBits1 & 32) != 0) { return challengeLimit_; } else { return ChallengeLimitDefaultValue; } }
      set {
        _hasBits1 |= 32;
        challengeLimit_ = value;
      }
    }
    /// <summary>Gets whether the "challenge_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChallengeLimit {
      get { return (_hasBits1 & 32) != 0; }
    }
    /// <summary>Clears the value of the "challenge_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChallengeLimit() {
      _hasBits1 &= ~32;
    }

    /// <summary>Field number for the "sapaw_is_mandatory" field.</summary>
    public const int SapawIsMandatoryFieldNumber = 43;
    private readonly static bool SapawIsMandatoryDefaultValue = false;

    private bool sapawIsMandatory_;
    /// <summary>
    /// 棄牌時若該牌可以融合其他組合牌是否要強制執行
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SapawIsMandatory {
      get { if ((_hasBits1 & 64) != 0) { return sapawIsMandatory_; } else { return SapawIsMandatoryDefaultValue; } }
      set {
        _hasBits1 |= 64;
        sapawIsMandatory_ = value;
      }
    }
    /// <summary>Gets whether the "sapaw_is_mandatory" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSapawIsMandatory {
      get { return (_hasBits1 & 64) != 0; }
    }
    /// <summary>Clears the value of the "sapaw_is_mandatory" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSapawIsMandatory() {
      _hasBits1 &= ~64;
    }

    /// <summary>Field number for the "ban_club" field.</summary>
    public const int BanClubFieldNumber = 44;
    private static readonly pb::FieldCodec<int> _repeated_banClub_codec
        = pb::FieldCodec.ForInt32(354);
    private readonly pbc::RepeatedField<int> banClub_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// restriction for clubs and regions
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> BanClub {
      get { return banClub_; }
    }

    /// <summary>Field number for the "ban_country" field.</summary>
    public const int BanCountryFieldNumber = 45;
    private static readonly pb::FieldCodec<string> _repeated_banCountry_codec
        = pb::FieldCodec.ForString(362);
    private readonly pbc::RepeatedField<string> banCountry_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 限制注册地为某些国家的用户不能看到和加入牌桌，缩写
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> BanCountry {
      get { return banCountry_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateTongitsRoomREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateTongitsRoomREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomName != other.RoomName) return false;
      if (Blind != other.Blind) return false;
      if (MinBuyin != other.MinBuyin) return false;
      if (MaxBuyin != other.MaxBuyin) return false;
      if (MinStack != other.MinStack) return false;
      if (Feepoint != other.Feepoint) return false;
      if (Feecap != other.Feecap) return false;
      if (CreatorUserId != other.CreatorUserId) return false;
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (SuperLeagueid != other.SuperLeagueid) return false;
      if (SuperLeagueType != other.SuperLeagueType) return false;
      if (OperationTime != other.OperationTime) return false;
      if (RoomTime != other.RoomTime) return false;
      if (SeatNum != other.SeatNum) return false;
      if (AutoStart != other.AutoStart) return false;
      if (RoomType != other.RoomType) return false;
      if (GameMode != other.GameMode) return false;
      if (Timezone != other.Timezone) return false;
      if (Roomid != other.Roomid) return false;
      if (DerivedRoomid != other.DerivedRoomid) return false;
      if (IsAutoDelayRoomOver != other.IsAutoDelayRoomOver) return false;
      if (AutoDelayRoomOverTimes != other.AutoDelayRoomOverTimes) return false;
      if (IsAutoCreateRoom != other.IsAutoCreateRoom) return false;
      if (Moduleid != other.Moduleid) return false;
      if (MultiOpid != other.MultiOpid) return false;
      if (CanUse != other.CanUse) return false;
      if (GpsLimit != other.GpsLimit) return false;
      if (IpLimit != other.IpLimit) return false;
      if (ForbiddenChat != other.ForbiddenChat) return false;
      if (PasswdLimit != other.PasswdLimit) return false;
      if (IsCaptcha != other.IsCaptcha) return false;
      if (IsBanPc != other.IsBanPc) return false;
      if (IsCheckMail != other.IsCheckMail) return false;
      if (ForbiddenChatMode != other.ForbiddenChatMode) return false;
      if (CalltimeMinutes != other.CalltimeMinutes) return false;
      if (HitpotRate != other.HitpotRate) return false;
      if (BonusCard != other.BonusCard) return false;
      if (BonusContainDrop != other.BonusContainDrop) return false;
      if (FightLimit != other.FightLimit) return false;
      if (ChallengeLimit != other.ChallengeLimit) return false;
      if (SapawIsMandatory != other.SapawIsMandatory) return false;
      if(!banClub_.Equals(other.banClub_)) return false;
      if(!banCountry_.Equals(other.banCountry_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomName) hash ^= RoomName.GetHashCode();
      if (HasBlind) hash ^= Blind.GetHashCode();
      if (HasMinBuyin) hash ^= MinBuyin.GetHashCode();
      if (HasMaxBuyin) hash ^= MaxBuyin.GetHashCode();
      if (HasMinStack) hash ^= MinStack.GetHashCode();
      if (HasFeepoint) hash ^= Feepoint.GetHashCode();
      if (HasFeecap) hash ^= Feecap.GetHashCode();
      if (HasCreatorUserId) hash ^= CreatorUserId.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasSuperLeagueid) hash ^= SuperLeagueid.GetHashCode();
      if (HasSuperLeagueType) hash ^= SuperLeagueType.GetHashCode();
      if (HasOperationTime) hash ^= OperationTime.GetHashCode();
      if (HasRoomTime) hash ^= RoomTime.GetHashCode();
      if (HasSeatNum) hash ^= SeatNum.GetHashCode();
      if (HasAutoStart) hash ^= AutoStart.GetHashCode();
      if (HasRoomType) hash ^= RoomType.GetHashCode();
      if (HasGameMode) hash ^= GameMode.GetHashCode();
      if (HasTimezone) hash ^= Timezone.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasDerivedRoomid) hash ^= DerivedRoomid.GetHashCode();
      if (HasIsAutoDelayRoomOver) hash ^= IsAutoDelayRoomOver.GetHashCode();
      if (HasAutoDelayRoomOverTimes) hash ^= AutoDelayRoomOverTimes.GetHashCode();
      if (HasIsAutoCreateRoom) hash ^= IsAutoCreateRoom.GetHashCode();
      if (HasModuleid) hash ^= Moduleid.GetHashCode();
      if (HasMultiOpid) hash ^= MultiOpid.GetHashCode();
      if (HasCanUse) hash ^= CanUse.GetHashCode();
      if (HasGpsLimit) hash ^= GpsLimit.GetHashCode();
      if (HasIpLimit) hash ^= IpLimit.GetHashCode();
      if (HasForbiddenChat) hash ^= ForbiddenChat.GetHashCode();
      if (HasPasswdLimit) hash ^= PasswdLimit.GetHashCode();
      if (HasIsCaptcha) hash ^= IsCaptcha.GetHashCode();
      if (HasIsBanPc) hash ^= IsBanPc.GetHashCode();
      if (HasIsCheckMail) hash ^= IsCheckMail.GetHashCode();
      if (HasForbiddenChatMode) hash ^= ForbiddenChatMode.GetHashCode();
      if (HasCalltimeMinutes) hash ^= CalltimeMinutes.GetHashCode();
      if (HasHitpotRate) hash ^= HitpotRate.GetHashCode();
      if (HasBonusCard) hash ^= BonusCard.GetHashCode();
      if (HasBonusContainDrop) hash ^= BonusContainDrop.GetHashCode();
      if (HasFightLimit) hash ^= FightLimit.GetHashCode();
      if (HasChallengeLimit) hash ^= ChallengeLimit.GetHashCode();
      if (HasSapawIsMandatory) hash ^= SapawIsMandatory.GetHashCode();
      hash ^= banClub_.GetHashCode();
      hash ^= banCountry_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomName) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (HasBlind) {
        output.WriteRawTag(16);
        output.WriteInt64(Blind);
      }
      if (HasMinBuyin) {
        output.WriteRawTag(24);
        output.WriteInt64(MinBuyin);
      }
      if (HasMaxBuyin) {
        output.WriteRawTag(32);
        output.WriteInt64(MaxBuyin);
      }
      if (HasMinStack) {
        output.WriteRawTag(40);
        output.WriteInt64(MinStack);
      }
      if (HasFeepoint) {
        output.WriteRawTag(48);
        output.WriteInt32(Feepoint);
      }
      if (HasFeecap) {
        output.WriteRawTag(56);
        output.WriteInt32(Feecap);
      }
      if (HasCreatorUserId) {
        output.WriteRawTag(64);
        output.WriteInt64(CreatorUserId);
      }
      if (HasClubid) {
        output.WriteRawTag(74);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(80);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(88);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasSuperLeagueType) {
        output.WriteRawTag(96);
        output.WriteInt32(SuperLeagueType);
      }
      if (HasOperationTime) {
        output.WriteRawTag(104);
        output.WriteInt32(OperationTime);
      }
      if (HasRoomTime) {
        output.WriteRawTag(112);
        output.WriteInt32(RoomTime);
      }
      if (HasSeatNum) {
        output.WriteRawTag(120);
        output.WriteInt32(SeatNum);
      }
      if (HasAutoStart) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(AutoStart);
      }
      if (HasRoomType) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) RoomType);
      }
      if (HasGameMode) {
        output.WriteRawTag(144, 1);
        output.WriteEnum((int) GameMode);
      }
      if (HasTimezone) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(Timezone);
      }
      if (HasRoomid) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(Roomid);
      }
      if (HasDerivedRoomid) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(DerivedRoomid);
      }
      if (HasIsAutoDelayRoomOver) {
        output.WriteRawTag(176, 1);
        output.WriteBool(IsAutoDelayRoomOver);
      }
      if (HasAutoDelayRoomOverTimes) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(AutoDelayRoomOverTimes);
      }
      if (HasIsAutoCreateRoom) {
        output.WriteRawTag(192, 1);
        output.WriteBool(IsAutoCreateRoom);
      }
      if (HasModuleid) {
        output.WriteRawTag(200, 1);
        output.WriteInt64(Moduleid);
      }
      if (HasMultiOpid) {
        output.WriteRawTag(210, 1);
        output.WriteString(MultiOpid);
      }
      if (HasCanUse) {
        output.WriteRawTag(216, 1);
        output.WriteBool(CanUse);
      }
      if (HasGpsLimit) {
        output.WriteRawTag(224, 1);
        output.WriteBool(GpsLimit);
      }
      if (HasIpLimit) {
        output.WriteRawTag(232, 1);
        output.WriteBool(IpLimit);
      }
      if (HasForbiddenChat) {
        output.WriteRawTag(240, 1);
        output.WriteBool(ForbiddenChat);
      }
      if (HasPasswdLimit) {
        output.WriteRawTag(248, 1);
        output.WriteBool(PasswdLimit);
      }
      if (HasIsCaptcha) {
        output.WriteRawTag(128, 2);
        output.WriteBool(IsCaptcha);
      }
      if (HasIsBanPc) {
        output.WriteRawTag(136, 2);
        output.WriteBool(IsBanPc);
      }
      if (HasIsCheckMail) {
        output.WriteRawTag(144, 2);
        output.WriteBool(IsCheckMail);
      }
      if (HasForbiddenChatMode) {
        output.WriteRawTag(160, 2);
        output.WriteInt32(ForbiddenChatMode);
      }
      if (HasCalltimeMinutes) {
        output.WriteRawTag(168, 2);
        output.WriteInt32(CalltimeMinutes);
      }
      if (HasHitpotRate) {
        output.WriteRawTag(176, 2);
        output.WriteInt32(HitpotRate);
      }
      if (HasBonusCard) {
        output.WriteRawTag(184, 2);
        output.WriteInt32(BonusCard);
      }
      if (HasBonusContainDrop) {
        output.WriteRawTag(192, 2);
        output.WriteBool(BonusContainDrop);
      }
      if (HasFightLimit) {
        output.WriteRawTag(200, 2);
        output.WriteInt32(FightLimit);
      }
      if (HasChallengeLimit) {
        output.WriteRawTag(208, 2);
        output.WriteInt32(ChallengeLimit);
      }
      if (HasSapawIsMandatory) {
        output.WriteRawTag(216, 2);
        output.WriteBool(SapawIsMandatory);
      }
      banClub_.WriteTo(output, _repeated_banClub_codec);
      banCountry_.WriteTo(output, _repeated_banCountry_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomName) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (HasBlind) {
        output.WriteRawTag(16);
        output.WriteInt64(Blind);
      }
      if (HasMinBuyin) {
        output.WriteRawTag(24);
        output.WriteInt64(MinBuyin);
      }
      if (HasMaxBuyin) {
        output.WriteRawTag(32);
        output.WriteInt64(MaxBuyin);
      }
      if (HasMinStack) {
        output.WriteRawTag(40);
        output.WriteInt64(MinStack);
      }
      if (HasFeepoint) {
        output.WriteRawTag(48);
        output.WriteInt32(Feepoint);
      }
      if (HasFeecap) {
        output.WriteRawTag(56);
        output.WriteInt32(Feecap);
      }
      if (HasCreatorUserId) {
        output.WriteRawTag(64);
        output.WriteInt64(CreatorUserId);
      }
      if (HasClubid) {
        output.WriteRawTag(74);
        output.WriteString(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(80);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(88);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasSuperLeagueType) {
        output.WriteRawTag(96);
        output.WriteInt32(SuperLeagueType);
      }
      if (HasOperationTime) {
        output.WriteRawTag(104);
        output.WriteInt32(OperationTime);
      }
      if (HasRoomTime) {
        output.WriteRawTag(112);
        output.WriteInt32(RoomTime);
      }
      if (HasSeatNum) {
        output.WriteRawTag(120);
        output.WriteInt32(SeatNum);
      }
      if (HasAutoStart) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(AutoStart);
      }
      if (HasRoomType) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) RoomType);
      }
      if (HasGameMode) {
        output.WriteRawTag(144, 1);
        output.WriteEnum((int) GameMode);
      }
      if (HasTimezone) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(Timezone);
      }
      if (HasRoomid) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(Roomid);
      }
      if (HasDerivedRoomid) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(DerivedRoomid);
      }
      if (HasIsAutoDelayRoomOver) {
        output.WriteRawTag(176, 1);
        output.WriteBool(IsAutoDelayRoomOver);
      }
      if (HasAutoDelayRoomOverTimes) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(AutoDelayRoomOverTimes);
      }
      if (HasIsAutoCreateRoom) {
        output.WriteRawTag(192, 1);
        output.WriteBool(IsAutoCreateRoom);
      }
      if (HasModuleid) {
        output.WriteRawTag(200, 1);
        output.WriteInt64(Moduleid);
      }
      if (HasMultiOpid) {
        output.WriteRawTag(210, 1);
        output.WriteString(MultiOpid);
      }
      if (HasCanUse) {
        output.WriteRawTag(216, 1);
        output.WriteBool(CanUse);
      }
      if (HasGpsLimit) {
        output.WriteRawTag(224, 1);
        output.WriteBool(GpsLimit);
      }
      if (HasIpLimit) {
        output.WriteRawTag(232, 1);
        output.WriteBool(IpLimit);
      }
      if (HasForbiddenChat) {
        output.WriteRawTag(240, 1);
        output.WriteBool(ForbiddenChat);
      }
      if (HasPasswdLimit) {
        output.WriteRawTag(248, 1);
        output.WriteBool(PasswdLimit);
      }
      if (HasIsCaptcha) {
        output.WriteRawTag(128, 2);
        output.WriteBool(IsCaptcha);
      }
      if (HasIsBanPc) {
        output.WriteRawTag(136, 2);
        output.WriteBool(IsBanPc);
      }
      if (HasIsCheckMail) {
        output.WriteRawTag(144, 2);
        output.WriteBool(IsCheckMail);
      }
      if (HasForbiddenChatMode) {
        output.WriteRawTag(160, 2);
        output.WriteInt32(ForbiddenChatMode);
      }
      if (HasCalltimeMinutes) {
        output.WriteRawTag(168, 2);
        output.WriteInt32(CalltimeMinutes);
      }
      if (HasHitpotRate) {
        output.WriteRawTag(176, 2);
        output.WriteInt32(HitpotRate);
      }
      if (HasBonusCard) {
        output.WriteRawTag(184, 2);
        output.WriteInt32(BonusCard);
      }
      if (HasBonusContainDrop) {
        output.WriteRawTag(192, 2);
        output.WriteBool(BonusContainDrop);
      }
      if (HasFightLimit) {
        output.WriteRawTag(200, 2);
        output.WriteInt32(FightLimit);
      }
      if (HasChallengeLimit) {
        output.WriteRawTag(208, 2);
        output.WriteInt32(ChallengeLimit);
      }
      if (HasSapawIsMandatory) {
        output.WriteRawTag(216, 2);
        output.WriteBool(SapawIsMandatory);
      }
      banClub_.WriteTo(ref output, _repeated_banClub_codec);
      banCountry_.WriteTo(ref output, _repeated_banCountry_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (HasBlind) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Blind);
      }
      if (HasMinBuyin) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinBuyin);
      }
      if (HasMaxBuyin) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxBuyin);
      }
      if (HasMinStack) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinStack);
      }
      if (HasFeepoint) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Feepoint);
      }
      if (HasFeecap) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Feecap);
      }
      if (HasCreatorUserId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreatorUserId);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasSuperLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueid);
      }
      if (HasSuperLeagueType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueType);
      }
      if (HasOperationTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OperationTime);
      }
      if (HasRoomTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomTime);
      }
      if (HasSeatNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SeatNum);
      }
      if (HasAutoStart) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AutoStart);
      }
      if (HasRoomType) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) RoomType);
      }
      if (HasGameMode) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
      }
      if (HasTimezone) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Timezone);
      }
      if (HasRoomid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasDerivedRoomid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DerivedRoomid);
      }
      if (HasIsAutoDelayRoomOver) {
        size += 2 + 1;
      }
      if (HasAutoDelayRoomOverTimes) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AutoDelayRoomOverTimes);
      }
      if (HasIsAutoCreateRoom) {
        size += 2 + 1;
      }
      if (HasModuleid) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Moduleid);
      }
      if (HasMultiOpid) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MultiOpid);
      }
      if (HasCanUse) {
        size += 2 + 1;
      }
      if (HasGpsLimit) {
        size += 2 + 1;
      }
      if (HasIpLimit) {
        size += 2 + 1;
      }
      if (HasForbiddenChat) {
        size += 2 + 1;
      }
      if (HasPasswdLimit) {
        size += 2 + 1;
      }
      if (HasIsCaptcha) {
        size += 2 + 1;
      }
      if (HasIsBanPc) {
        size += 2 + 1;
      }
      if (HasIsCheckMail) {
        size += 2 + 1;
      }
      if (HasForbiddenChatMode) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ForbiddenChatMode);
      }
      if (HasCalltimeMinutes) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CalltimeMinutes);
      }
      if (HasHitpotRate) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HitpotRate);
      }
      if (HasBonusCard) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BonusCard);
      }
      if (HasBonusContainDrop) {
        size += 2 + 1;
      }
      if (HasFightLimit) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FightLimit);
      }
      if (HasChallengeLimit) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ChallengeLimit);
      }
      if (HasSapawIsMandatory) {
        size += 2 + 1;
      }
      size += banClub_.CalculateSize(_repeated_banClub_codec);
      size += banCountry_.CalculateSize(_repeated_banCountry_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateTongitsRoomREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomName) {
        RoomName = other.RoomName;
      }
      if (other.HasBlind) {
        Blind = other.Blind;
      }
      if (other.HasMinBuyin) {
        MinBuyin = other.MinBuyin;
      }
      if (other.HasMaxBuyin) {
        MaxBuyin = other.MaxBuyin;
      }
      if (other.HasMinStack) {
        MinStack = other.MinStack;
      }
      if (other.HasFeepoint) {
        Feepoint = other.Feepoint;
      }
      if (other.HasFeecap) {
        Feecap = other.Feecap;
      }
      if (other.HasCreatorUserId) {
        CreatorUserId = other.CreatorUserId;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasSuperLeagueid) {
        SuperLeagueid = other.SuperLeagueid;
      }
      if (other.HasSuperLeagueType) {
        SuperLeagueType = other.SuperLeagueType;
      }
      if (other.HasOperationTime) {
        OperationTime = other.OperationTime;
      }
      if (other.HasRoomTime) {
        RoomTime = other.RoomTime;
      }
      if (other.HasSeatNum) {
        SeatNum = other.SeatNum;
      }
      if (other.HasAutoStart) {
        AutoStart = other.AutoStart;
      }
      if (other.HasRoomType) {
        RoomType = other.RoomType;
      }
      if (other.HasGameMode) {
        GameMode = other.GameMode;
      }
      if (other.HasTimezone) {
        Timezone = other.Timezone;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasDerivedRoomid) {
        DerivedRoomid = other.DerivedRoomid;
      }
      if (other.HasIsAutoDelayRoomOver) {
        IsAutoDelayRoomOver = other.IsAutoDelayRoomOver;
      }
      if (other.HasAutoDelayRoomOverTimes) {
        AutoDelayRoomOverTimes = other.AutoDelayRoomOverTimes;
      }
      if (other.HasIsAutoCreateRoom) {
        IsAutoCreateRoom = other.IsAutoCreateRoom;
      }
      if (other.HasModuleid) {
        Moduleid = other.Moduleid;
      }
      if (other.HasMultiOpid) {
        MultiOpid = other.MultiOpid;
      }
      if (other.HasCanUse) {
        CanUse = other.CanUse;
      }
      if (other.HasGpsLimit) {
        GpsLimit = other.GpsLimit;
      }
      if (other.HasIpLimit) {
        IpLimit = other.IpLimit;
      }
      if (other.HasForbiddenChat) {
        ForbiddenChat = other.ForbiddenChat;
      }
      if (other.HasPasswdLimit) {
        PasswdLimit = other.PasswdLimit;
      }
      if (other.HasIsCaptcha) {
        IsCaptcha = other.IsCaptcha;
      }
      if (other.HasIsBanPc) {
        IsBanPc = other.IsBanPc;
      }
      if (other.HasIsCheckMail) {
        IsCheckMail = other.IsCheckMail;
      }
      if (other.HasForbiddenChatMode) {
        ForbiddenChatMode = other.ForbiddenChatMode;
      }
      if (other.HasCalltimeMinutes) {
        CalltimeMinutes = other.CalltimeMinutes;
      }
      if (other.HasHitpotRate) {
        HitpotRate = other.HitpotRate;
      }
      if (other.HasBonusCard) {
        BonusCard = other.BonusCard;
      }
      if (other.HasBonusContainDrop) {
        BonusContainDrop = other.BonusContainDrop;
      }
      if (other.HasFightLimit) {
        FightLimit = other.FightLimit;
      }
      if (other.HasChallengeLimit) {
        ChallengeLimit = other.ChallengeLimit;
      }
      if (other.HasSapawIsMandatory) {
        SapawIsMandatory = other.SapawIsMandatory;
      }
      banClub_.Add(other.banClub_);
      banCountry_.Add(other.banCountry_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 16: {
            Blind = input.ReadInt64();
            break;
          }
          case 24: {
            MinBuyin = input.ReadInt64();
            break;
          }
          case 32: {
            MaxBuyin = input.ReadInt64();
            break;
          }
          case 40: {
            MinStack = input.ReadInt64();
            break;
          }
          case 48: {
            Feepoint = input.ReadInt32();
            break;
          }
          case 56: {
            Feecap = input.ReadInt32();
            break;
          }
          case 64: {
            CreatorUserId = input.ReadInt64();
            break;
          }
          case 74: {
            Clubid = input.ReadString();
            break;
          }
          case 80: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 88: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 96: {
            SuperLeagueType = input.ReadInt32();
            break;
          }
          case 104: {
            OperationTime = input.ReadInt32();
            break;
          }
          case 112: {
            RoomTime = input.ReadInt32();
            break;
          }
          case 120: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 128: {
            AutoStart = input.ReadInt32();
            break;
          }
          case 136: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 144: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 152: {
            Timezone = input.ReadInt32();
            break;
          }
          case 160: {
            Roomid = input.ReadInt32();
            break;
          }
          case 168: {
            DerivedRoomid = input.ReadInt32();
            break;
          }
          case 176: {
            IsAutoDelayRoomOver = input.ReadBool();
            break;
          }
          case 184: {
            AutoDelayRoomOverTimes = input.ReadInt32();
            break;
          }
          case 192: {
            IsAutoCreateRoom = input.ReadBool();
            break;
          }
          case 200: {
            Moduleid = input.ReadInt64();
            break;
          }
          case 210: {
            MultiOpid = input.ReadString();
            break;
          }
          case 216: {
            CanUse = input.ReadBool();
            break;
          }
          case 224: {
            GpsLimit = input.ReadBool();
            break;
          }
          case 232: {
            IpLimit = input.ReadBool();
            break;
          }
          case 240: {
            ForbiddenChat = input.ReadBool();
            break;
          }
          case 248: {
            PasswdLimit = input.ReadBool();
            break;
          }
          case 256: {
            IsCaptcha = input.ReadBool();
            break;
          }
          case 264: {
            IsBanPc = input.ReadBool();
            break;
          }
          case 272: {
            IsCheckMail = input.ReadBool();
            break;
          }
          case 288: {
            ForbiddenChatMode = input.ReadInt32();
            break;
          }
          case 296: {
            CalltimeMinutes = input.ReadInt32();
            break;
          }
          case 304: {
            HitpotRate = input.ReadInt32();
            break;
          }
          case 312: {
            BonusCard = input.ReadInt32();
            break;
          }
          case 320: {
            BonusContainDrop = input.ReadBool();
            break;
          }
          case 328: {
            FightLimit = input.ReadInt32();
            break;
          }
          case 336: {
            ChallengeLimit = input.ReadInt32();
            break;
          }
          case 344: {
            SapawIsMandatory = input.ReadBool();
            break;
          }
          case 354:
          case 352: {
            banClub_.AddEntriesFrom(input, _repeated_banClub_codec);
            break;
          }
          case 362: {
            banCountry_.AddEntriesFrom(input, _repeated_banCountry_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 16: {
            Blind = input.ReadInt64();
            break;
          }
          case 24: {
            MinBuyin = input.ReadInt64();
            break;
          }
          case 32: {
            MaxBuyin = input.ReadInt64();
            break;
          }
          case 40: {
            MinStack = input.ReadInt64();
            break;
          }
          case 48: {
            Feepoint = input.ReadInt32();
            break;
          }
          case 56: {
            Feecap = input.ReadInt32();
            break;
          }
          case 64: {
            CreatorUserId = input.ReadInt64();
            break;
          }
          case 74: {
            Clubid = input.ReadString();
            break;
          }
          case 80: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 88: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 96: {
            SuperLeagueType = input.ReadInt32();
            break;
          }
          case 104: {
            OperationTime = input.ReadInt32();
            break;
          }
          case 112: {
            RoomTime = input.ReadInt32();
            break;
          }
          case 120: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 128: {
            AutoStart = input.ReadInt32();
            break;
          }
          case 136: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 144: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 152: {
            Timezone = input.ReadInt32();
            break;
          }
          case 160: {
            Roomid = input.ReadInt32();
            break;
          }
          case 168: {
            DerivedRoomid = input.ReadInt32();
            break;
          }
          case 176: {
            IsAutoDelayRoomOver = input.ReadBool();
            break;
          }
          case 184: {
            AutoDelayRoomOverTimes = input.ReadInt32();
            break;
          }
          case 192: {
            IsAutoCreateRoom = input.ReadBool();
            break;
          }
          case 200: {
            Moduleid = input.ReadInt64();
            break;
          }
          case 210: {
            MultiOpid = input.ReadString();
            break;
          }
          case 216: {
            CanUse = input.ReadBool();
            break;
          }
          case 224: {
            GpsLimit = input.ReadBool();
            break;
          }
          case 232: {
            IpLimit = input.ReadBool();
            break;
          }
          case 240: {
            ForbiddenChat = input.ReadBool();
            break;
          }
          case 248: {
            PasswdLimit = input.ReadBool();
            break;
          }
          case 256: {
            IsCaptcha = input.ReadBool();
            break;
          }
          case 264: {
            IsBanPc = input.ReadBool();
            break;
          }
          case 272: {
            IsCheckMail = input.ReadBool();
            break;
          }
          case 288: {
            ForbiddenChatMode = input.ReadInt32();
            break;
          }
          case 296: {
            CalltimeMinutes = input.ReadInt32();
            break;
          }
          case 304: {
            HitpotRate = input.ReadInt32();
            break;
          }
          case 312: {
            BonusCard = input.ReadInt32();
            break;
          }
          case 320: {
            BonusContainDrop = input.ReadBool();
            break;
          }
          case 328: {
            FightLimit = input.ReadInt32();
            break;
          }
          case 336: {
            ChallengeLimit = input.ReadInt32();
            break;
          }
          case 344: {
            SapawIsMandatory = input.ReadBool();
            break;
          }
          case 354:
          case 352: {
            banClub_.AddEntriesFrom(ref input, _repeated_banClub_codec);
            break;
          }
          case 362: {
            banCountry_.AddEntriesFrom(ref input, _repeated_banCountry_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreateTongitsRoomRSP : pb::IMessage<CreateTongitsRoomRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateTongitsRoomRSP> _parser = new pb::MessageParser<CreateTongitsRoomRSP>(() => new CreateTongitsRoomRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateTongitsRoomRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateTongitsRoomRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateTongitsRoomRSP(CreateTongitsRoomRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      reason_ = other.reason_;
      tongitsInfo_ = other.tongitsInfo_ != null ? other.tongitsInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateTongitsRoomRSP Clone() {
      return new CreateTongitsRoomRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 2;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "tongits_info" field.</summary>
    public const int TongitsInfoFieldNumber = 3;
    private global::Texas.Protocol.TongitsRoomInfo tongitsInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TongitsRoomInfo TongitsInfo {
      get { return tongitsInfo_; }
      set {
        tongitsInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateTongitsRoomRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateTongitsRoomRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Reason != other.Reason) return false;
      if (!object.Equals(TongitsInfo, other.TongitsInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (tongitsInfo_ != null) hash ^= TongitsInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasReason) {
        output.WriteRawTag(18);
        output.WriteString(Reason);
      }
      if (tongitsInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TongitsInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasReason) {
        output.WriteRawTag(18);
        output.WriteString(Reason);
      }
      if (tongitsInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TongitsInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (tongitsInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TongitsInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateTongitsRoomRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.tongitsInfo_ != null) {
        if (tongitsInfo_ == null) {
          TongitsInfo = new global::Texas.Protocol.TongitsRoomInfo();
        }
        TongitsInfo.MergeFrom(other.TongitsInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Reason = input.ReadString();
            break;
          }
          case 26: {
            if (tongitsInfo_ == null) {
              TongitsInfo = new global::Texas.Protocol.TongitsRoomInfo();
            }
            input.ReadMessage(TongitsInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Reason = input.ReadString();
            break;
          }
          case 26: {
            if (tongitsInfo_ == null) {
              TongitsInfo = new global::Texas.Protocol.TongitsRoomInfo();
            }
            input.ReadMessage(TongitsInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsMeld : pb::IMessage<TongitsMeld>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsMeld> _parser = new pb::MessageParser<TongitsMeld>(() => new TongitsMeld());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsMeld> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsMeld() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsMeld(TongitsMeld other) : this() {
      _hasBits0 = other._hasBits0;
      cards_ = other.cards_.Clone();
      isSagasa_ = other.isSagasa_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsMeld Clone() {
      return new TongitsMeld(this);
    }

    /// <summary>Field number for the "cards" field.</summary>
    public const int CardsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_cards_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> cards_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///組合牌細節
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Cards {
      get { return cards_; }
    }

    /// <summary>Field number for the "is_sagasa" field.</summary>
    public const int IsSagasaFieldNumber = 2;
    private readonly static bool IsSagasaDefaultValue = false;

    private bool isSagasa_;
    /// <summary>
    /// 該組合牌是否有觸發sagasa
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSagasa {
      get { if ((_hasBits0 & 1) != 0) { return isSagasa_; } else { return IsSagasaDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isSagasa_ = value;
      }
    }
    /// <summary>Gets whether the "is_sagasa" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsSagasa {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_sagasa" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsSagasa() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsMeld);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsMeld other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!cards_.Equals(other.cards_)) return false;
      if (IsSagasa != other.IsSagasa) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= cards_.GetHashCode();
      if (HasIsSagasa) hash ^= IsSagasa.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      cards_.WriteTo(output, _repeated_cards_codec);
      if (HasIsSagasa) {
        output.WriteRawTag(16);
        output.WriteBool(IsSagasa);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      cards_.WriteTo(ref output, _repeated_cards_codec);
      if (HasIsSagasa) {
        output.WriteRawTag(16);
        output.WriteBool(IsSagasa);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += cards_.CalculateSize(_repeated_cards_codec);
      if (HasIsSagasa) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsMeld other) {
      if (other == null) {
        return;
      }
      cards_.Add(other.cards_);
      if (other.HasIsSagasa) {
        IsSagasa = other.IsSagasa;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            cards_.AddEntriesFrom(input, _repeated_cards_codec);
            break;
          }
          case 16: {
            IsSagasa = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            cards_.AddEntriesFrom(ref input, _repeated_cards_codec);
            break;
          }
          case 16: {
            IsSagasa = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///手牌廣播給玩家
  /// </summary>
  public sealed partial class TongitsHandCard : pb::IMessage<TongitsHandCard>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsHandCard> _parser = new pb::MessageParser<TongitsHandCard>(() => new TongitsHandCard());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsHandCard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsHandCard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsHandCard(TongitsHandCard other) : this() {
      _hasBits0 = other._hasBits0;
      allCards_ = other.allCards_.Clone();
      allMelds_ = other.allMelds_.Clone();
      leftCards_ = other.leftCards_.Clone();
      score_ = other.score_;
      cardsNum_ = other.cardsNum_;
      canTongits_ = other.canTongits_;
      tongitsCard_ = other.tongitsCard_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsHandCard Clone() {
      return new TongitsHandCard(this);
    }

    /// <summary>Field number for the "all_cards" field.</summary>
    public const int AllCardsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_allCards_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> allCards_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 全部手牌 0~13
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> AllCards {
      get { return allCards_; }
    }

    /// <summary>Field number for the "all_melds" field.</summary>
    public const int AllMeldsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Texas.Protocol.TongitsMeld> _repeated_allMelds_codec
        = pb::FieldCodec.ForMessage(18, global::Texas.Protocol.TongitsMeld.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.TongitsMeld> allMelds_ = new pbc::RepeatedField<global::Texas.Protocol.TongitsMeld>();
    /// <summary>
    /// 各個組合牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.TongitsMeld> AllMelds {
      get { return allMelds_; }
    }

    /// <summary>Field number for the "left_cards" field.</summary>
    public const int LeftCardsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_leftCards_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> leftCards_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 扣除組合牌後的剩餘牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> LeftCards {
      get { return leftCards_; }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 4;
    private readonly static int ScoreDefaultValue = 0;

    private int score_;
    /// <summary>
    /// left_card 的綜合點數
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Score {
      get { if ((_hasBits0 & 1) != 0) { return score_; } else { return ScoreDefaultValue; } }
      set {
        _hasBits0 |= 1;
        score_ = value;
      }
    }
    /// <summary>Gets whether the "score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScore {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScore() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "cards_num" field.</summary>
    public const int CardsNumFieldNumber = 5;
    private readonly static int CardsNumDefaultValue = 0;

    private int cardsNum_;
    /// <summary>
    /// all_cards 有幾張牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CardsNum {
      get { if ((_hasBits0 & 2) != 0) { return cardsNum_; } else { return CardsNumDefaultValue; } }
      set {
        _hasBits0 |= 2;
        cardsNum_ = value;
      }
    }
    /// <summary>Gets whether the "cards_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCardsNum {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "cards_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCardsNum() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "can_tongits" field.</summary>
    public const int CanTongitsFieldNumber = 6;
    private readonly static int CanTongitsDefaultValue = 0;

    private int canTongits_;
    /// <summary>
    /// 如果是在遊玩狀態需要該資訊
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CanTongits {
      get { if ((_hasBits0 & 4) != 0) { return canTongits_; } else { return CanTongitsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        canTongits_ = value;
      }
    }
    /// <summary>Gets whether the "can_tongits" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCanTongits {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "can_tongits" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCanTongits() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "tongits_card" field.</summary>
    public const int TongitsCardFieldNumber = 7;
    private readonly static int TongitsCardDefaultValue = 0;

    private int tongitsCard_;
    /// <summary>
    /// can_tongits=1 是需要dump哪張牌可以直接tongits
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TongitsCard {
      get { if ((_hasBits0 & 8) != 0) { return tongitsCard_; } else { return TongitsCardDefaultValue; } }
      set {
        _hasBits0 |= 8;
        tongitsCard_ = value;
      }
    }
    /// <summary>Gets whether the "tongits_card" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTongitsCard {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "tongits_card" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTongitsCard() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsHandCard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsHandCard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!allCards_.Equals(other.allCards_)) return false;
      if(!allMelds_.Equals(other.allMelds_)) return false;
      if(!leftCards_.Equals(other.leftCards_)) return false;
      if (Score != other.Score) return false;
      if (CardsNum != other.CardsNum) return false;
      if (CanTongits != other.CanTongits) return false;
      if (TongitsCard != other.TongitsCard) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= allCards_.GetHashCode();
      hash ^= allMelds_.GetHashCode();
      hash ^= leftCards_.GetHashCode();
      if (HasScore) hash ^= Score.GetHashCode();
      if (HasCardsNum) hash ^= CardsNum.GetHashCode();
      if (HasCanTongits) hash ^= CanTongits.GetHashCode();
      if (HasTongitsCard) hash ^= TongitsCard.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      allCards_.WriteTo(output, _repeated_allCards_codec);
      allMelds_.WriteTo(output, _repeated_allMelds_codec);
      leftCards_.WriteTo(output, _repeated_leftCards_codec);
      if (HasScore) {
        output.WriteRawTag(32);
        output.WriteInt32(Score);
      }
      if (HasCardsNum) {
        output.WriteRawTag(40);
        output.WriteInt32(CardsNum);
      }
      if (HasCanTongits) {
        output.WriteRawTag(48);
        output.WriteInt32(CanTongits);
      }
      if (HasTongitsCard) {
        output.WriteRawTag(56);
        output.WriteInt32(TongitsCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      allCards_.WriteTo(ref output, _repeated_allCards_codec);
      allMelds_.WriteTo(ref output, _repeated_allMelds_codec);
      leftCards_.WriteTo(ref output, _repeated_leftCards_codec);
      if (HasScore) {
        output.WriteRawTag(32);
        output.WriteInt32(Score);
      }
      if (HasCardsNum) {
        output.WriteRawTag(40);
        output.WriteInt32(CardsNum);
      }
      if (HasCanTongits) {
        output.WriteRawTag(48);
        output.WriteInt32(CanTongits);
      }
      if (HasTongitsCard) {
        output.WriteRawTag(56);
        output.WriteInt32(TongitsCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += allCards_.CalculateSize(_repeated_allCards_codec);
      size += allMelds_.CalculateSize(_repeated_allMelds_codec);
      size += leftCards_.CalculateSize(_repeated_leftCards_codec);
      if (HasScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (HasCardsNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CardsNum);
      }
      if (HasCanTongits) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CanTongits);
      }
      if (HasTongitsCard) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TongitsCard);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsHandCard other) {
      if (other == null) {
        return;
      }
      allCards_.Add(other.allCards_);
      allMelds_.Add(other.allMelds_);
      leftCards_.Add(other.leftCards_);
      if (other.HasScore) {
        Score = other.Score;
      }
      if (other.HasCardsNum) {
        CardsNum = other.CardsNum;
      }
      if (other.HasCanTongits) {
        CanTongits = other.CanTongits;
      }
      if (other.HasTongitsCard) {
        TongitsCard = other.TongitsCard;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            allCards_.AddEntriesFrom(input, _repeated_allCards_codec);
            break;
          }
          case 18: {
            allMelds_.AddEntriesFrom(input, _repeated_allMelds_codec);
            break;
          }
          case 26:
          case 24: {
            leftCards_.AddEntriesFrom(input, _repeated_leftCards_codec);
            break;
          }
          case 32: {
            Score = input.ReadInt32();
            break;
          }
          case 40: {
            CardsNum = input.ReadInt32();
            break;
          }
          case 48: {
            CanTongits = input.ReadInt32();
            break;
          }
          case 56: {
            TongitsCard = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            allCards_.AddEntriesFrom(ref input, _repeated_allCards_codec);
            break;
          }
          case 18: {
            allMelds_.AddEntriesFrom(ref input, _repeated_allMelds_codec);
            break;
          }
          case 26:
          case 24: {
            leftCards_.AddEntriesFrom(ref input, _repeated_leftCards_codec);
            break;
          }
          case 32: {
            Score = input.ReadInt32();
            break;
          }
          case 40: {
            CardsNum = input.ReadInt32();
            break;
          }
          case 48: {
            CanTongits = input.ReadInt32();
            break;
          }
          case 56: {
            TongitsCard = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsSitDownREQ : pb::IMessage<TongitsSitDownREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsSitDownREQ> _parser = new pb::MessageParser<TongitsSitDownREQ>(() => new TongitsSitDownREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsSitDownREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSitDownREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSitDownREQ(TongitsSitDownREQ other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      pc_ = other.pc_;
      ip_ = other.ip_;
      gpsLon_ = other.gpsLon_;
      gpsLat_ = other.gpsLat_;
      channel_ = other.channel_;
      invalidMail_ = other.invalidMail_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSitDownREQ Clone() {
      return new TongitsSitDownREQ(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "pc" field.</summary>
    public const int PcFieldNumber = 2;
    private readonly static bool PcDefaultValue = false;

    private bool pc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Pc {
      get { if ((_hasBits0 & 2) != 0) { return pc_; } else { return PcDefaultValue; } }
      set {
        _hasBits0 |= 2;
        pc_ = value;
      }
    }
    /// <summary>Gets whether the "pc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPc {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "pc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPc() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 3;
    private readonly static string IpDefaultValue = "";

    private string ip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ip {
      get { return ip_ ?? IpDefaultValue; }
      set {
        ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ip" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIp {
      get { return ip_ != null; }
    }
    /// <summary>Clears the value of the "ip" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIp() {
      ip_ = null;
    }

    /// <summary>Field number for the "gps_lon" field.</summary>
    public const int GpsLonFieldNumber = 4;
    private readonly static int GpsLonDefaultValue = 0;

    private int gpsLon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GpsLon {
      get { if ((_hasBits0 & 4) != 0) { return gpsLon_; } else { return GpsLonDefaultValue; } }
      set {
        _hasBits0 |= 4;
        gpsLon_ = value;
      }
    }
    /// <summary>Gets whether the "gps_lon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpsLon {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "gps_lon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpsLon() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "gps_lat" field.</summary>
    public const int GpsLatFieldNumber = 5;
    private readonly static int GpsLatDefaultValue = 0;

    private int gpsLat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GpsLat {
      get { if ((_hasBits0 & 8) != 0) { return gpsLat_; } else { return GpsLatDefaultValue; } }
      set {
        _hasBits0 |= 8;
        gpsLat_ = value;
      }
    }
    /// <summary>Gets whether the "gps_lat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpsLat {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "gps_lat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpsLat() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 6;
    private readonly static string ChannelDefaultValue = "";

    private string channel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Channel {
      get { return channel_ ?? ChannelDefaultValue; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "channel" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChannel {
      get { return channel_ != null; }
    }
    /// <summary>Clears the value of the "channel" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChannel() {
      channel_ = null;
    }

    /// <summary>Field number for the "invalid_mail" field.</summary>
    public const int InvalidMailFieldNumber = 7;
    private readonly static bool InvalidMailDefaultValue = false;

    private bool invalidMail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InvalidMail {
      get { if ((_hasBits0 & 16) != 0) { return invalidMail_; } else { return InvalidMailDefaultValue; } }
      set {
        _hasBits0 |= 16;
        invalidMail_ = value;
      }
    }
    /// <summary>Gets whether the "invalid_mail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInvalidMail {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "invalid_mail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInvalidMail() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsSitDownREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsSitDownREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (Pc != other.Pc) return false;
      if (Ip != other.Ip) return false;
      if (GpsLon != other.GpsLon) return false;
      if (GpsLat != other.GpsLat) return false;
      if (Channel != other.Channel) return false;
      if (InvalidMail != other.InvalidMail) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasPc) hash ^= Pc.GetHashCode();
      if (HasIp) hash ^= Ip.GetHashCode();
      if (HasGpsLon) hash ^= GpsLon.GetHashCode();
      if (HasGpsLat) hash ^= GpsLat.GetHashCode();
      if (HasChannel) hash ^= Channel.GetHashCode();
      if (HasInvalidMail) hash ^= InvalidMail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasPc) {
        output.WriteRawTag(16);
        output.WriteBool(Pc);
      }
      if (HasIp) {
        output.WriteRawTag(26);
        output.WriteString(Ip);
      }
      if (HasGpsLon) {
        output.WriteRawTag(32);
        output.WriteInt32(GpsLon);
      }
      if (HasGpsLat) {
        output.WriteRawTag(40);
        output.WriteInt32(GpsLat);
      }
      if (HasChannel) {
        output.WriteRawTag(50);
        output.WriteString(Channel);
      }
      if (HasInvalidMail) {
        output.WriteRawTag(56);
        output.WriteBool(InvalidMail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasPc) {
        output.WriteRawTag(16);
        output.WriteBool(Pc);
      }
      if (HasIp) {
        output.WriteRawTag(26);
        output.WriteString(Ip);
      }
      if (HasGpsLon) {
        output.WriteRawTag(32);
        output.WriteInt32(GpsLon);
      }
      if (HasGpsLat) {
        output.WriteRawTag(40);
        output.WriteInt32(GpsLat);
      }
      if (HasChannel) {
        output.WriteRawTag(50);
        output.WriteString(Channel);
      }
      if (HasInvalidMail) {
        output.WriteRawTag(56);
        output.WriteBool(InvalidMail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasPc) {
        size += 1 + 1;
      }
      if (HasIp) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
      }
      if (HasGpsLon) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GpsLon);
      }
      if (HasGpsLat) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GpsLat);
      }
      if (HasChannel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (HasInvalidMail) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsSitDownREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasPc) {
        Pc = other.Pc;
      }
      if (other.HasIp) {
        Ip = other.Ip;
      }
      if (other.HasGpsLon) {
        GpsLon = other.GpsLon;
      }
      if (other.HasGpsLat) {
        GpsLat = other.GpsLat;
      }
      if (other.HasChannel) {
        Channel = other.Channel;
      }
      if (other.HasInvalidMail) {
        InvalidMail = other.InvalidMail;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Pc = input.ReadBool();
            break;
          }
          case 26: {
            Ip = input.ReadString();
            break;
          }
          case 32: {
            GpsLon = input.ReadInt32();
            break;
          }
          case 40: {
            GpsLat = input.ReadInt32();
            break;
          }
          case 50: {
            Channel = input.ReadString();
            break;
          }
          case 56: {
            InvalidMail = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Pc = input.ReadBool();
            break;
          }
          case 26: {
            Ip = input.ReadString();
            break;
          }
          case 32: {
            GpsLon = input.ReadInt32();
            break;
          }
          case 40: {
            GpsLat = input.ReadInt32();
            break;
          }
          case 50: {
            Channel = input.ReadString();
            break;
          }
          case 56: {
            InvalidMail = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家資訊
  /// </summary>
  public sealed partial class TongitsPlayerInfo : pb::IMessage<TongitsPlayerInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsPlayerInfo> _parser = new pb::MessageParser<TongitsPlayerInfo>(() => new TongitsPlayerInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsPlayerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsPlayerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsPlayerInfo(TongitsPlayerInfo other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      iconUrl_ = other.iconUrl_;
      uid_ = other.uid_;
      clubid_ = other.clubid_;
      clubName_ = other.clubName_;
      vipLevel_ = other.vipLevel_;
      level_ = other.level_;
      country_ = other.country_;
      gpsLon_ = other.gpsLon_;
      gpsLat_ = other.gpsLat_;
      waitingStatus_ = other.waitingStatus_;
      certification_ = other.certification_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsPlayerInfo Clone() {
      return new TongitsPlayerInfo(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    ///基本資訊
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "icon_url" field.</summary>
    public const int IconUrlFieldNumber = 2;
    private readonly static string IconUrlDefaultValue = "";

    private string iconUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IconUrl {
      get { return iconUrl_ ?? IconUrlDefaultValue; }
      set {
        iconUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "icon_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIconUrl {
      get { return iconUrl_ != null; }
    }
    /// <summary>Clears the value of the "icon_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIconUrl() {
      iconUrl_ = null;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 3;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 4;
    private readonly static string ClubidDefaultValue = "";

    private string clubid_;
    /// <summary>
    ///以下從SeatStatus分離
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Clubid {
      get { return clubid_ ?? ClubidDefaultValue; }
      set {
        clubid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return clubid_ != null; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      clubid_ = null;
    }

    /// <summary>Field number for the "club_name" field.</summary>
    public const int ClubNameFieldNumber = 5;
    private readonly static string ClubNameDefaultValue = "";

    private string clubName_;
    /// <summary>
    /// 俱樂部名稱，從原本SeatStatus移過來
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClubName {
      get { return clubName_ ?? ClubNameDefaultValue; }
      set {
        clubName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "club_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubName {
      get { return clubName_ != null; }
    }
    /// <summary>Clears the value of the "club_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubName() {
      clubName_ = null;
    }

    /// <summary>Field number for the "vip_level" field.</summary>
    public const int VipLevelFieldNumber = 6;
    private readonly static int VipLevelDefaultValue = 0;

    private int vipLevel_;
    /// <summary>
    /// VIP等級，從原本SeatStatus移過來
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int VipLevel {
      get { if ((_hasBits0 & 2) != 0) { return vipLevel_; } else { return VipLevelDefaultValue; } }
      set {
        _hasBits0 |= 2;
        vipLevel_ = value;
      }
    }
    /// <summary>Gets whether the "vip_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVipLevel {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "vip_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVipLevel() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 7;
    private readonly static int LevelDefaultValue = 0;

    private int level_;
    /// <summary>
    /// 等級，從原本SeatStatus移過來
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Level {
      get { if ((_hasBits0 & 4) != 0) { return level_; } else { return LevelDefaultValue; } }
      set {
        _hasBits0 |= 4;
        level_ = value;
      }
    }
    /// <summary>Gets whether the "level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLevel {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLevel() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "country" field.</summary>
    public const int CountryFieldNumber = 8;
    private readonly static string CountryDefaultValue = "";

    private string country_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Country {
      get { return country_ ?? CountryDefaultValue; }
      set {
        country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "country" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCountry {
      get { return country_ != null; }
    }
    /// <summary>Clears the value of the "country" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCountry() {
      country_ = null;
    }

    /// <summary>Field number for the "gps_lon" field.</summary>
    public const int GpsLonFieldNumber = 9;
    private readonly static int GpsLonDefaultValue = 0;

    private int gpsLon_;
    /// <summary>
    ///GPS資訊
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GpsLon {
      get { if ((_hasBits0 & 8) != 0) { return gpsLon_; } else { return GpsLonDefaultValue; } }
      set {
        _hasBits0 |= 8;
        gpsLon_ = value;
      }
    }
    /// <summary>Gets whether the "gps_lon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpsLon {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "gps_lon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpsLon() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "gps_lat" field.</summary>
    public const int GpsLatFieldNumber = 10;
    private readonly static int GpsLatDefaultValue = 0;

    private int gpsLat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GpsLat {
      get { if ((_hasBits0 & 16) != 0) { return gpsLat_; } else { return GpsLatDefaultValue; } }
      set {
        _hasBits0 |= 16;
        gpsLat_ = value;
      }
    }
    /// <summary>Gets whether the "gps_lat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpsLat {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "gps_lat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpsLat() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "waiting_status" field.</summary>
    public const int WaitingStatusFieldNumber = 11;
    private readonly static int WaitingStatusDefaultValue = 0;

    private int waitingStatus_;
    /// <summary>
    ///前端優化用，判斷玩家是不是在等待列表中
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WaitingStatus {
      get { if ((_hasBits0 & 32) != 0) { return waitingStatus_; } else { return WaitingStatusDefaultValue; } }
      set {
        _hasBits0 |= 32;
        waitingStatus_ = value;
      }
    }
    /// <summary>Gets whether the "waiting_status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWaitingStatus {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "waiting_status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWaitingStatus() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "certification" field.</summary>
    public const int CertificationFieldNumber = 12;
    private readonly static int CertificationDefaultValue = 0;

    private int certification_;
    /// <summary>
    ///俱樂部會員認證
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Certification {
      get { if ((_hasBits0 & 64) != 0) { return certification_; } else { return CertificationDefaultValue; } }
      set {
        _hasBits0 |= 64;
        certification_ = value;
      }
    }
    /// <summary>Gets whether the "certification" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCertification {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "certification" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCertification() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsPlayerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsPlayerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (IconUrl != other.IconUrl) return false;
      if (Uid != other.Uid) return false;
      if (Clubid != other.Clubid) return false;
      if (ClubName != other.ClubName) return false;
      if (VipLevel != other.VipLevel) return false;
      if (Level != other.Level) return false;
      if (Country != other.Country) return false;
      if (GpsLon != other.GpsLon) return false;
      if (GpsLat != other.GpsLat) return false;
      if (WaitingStatus != other.WaitingStatus) return false;
      if (Certification != other.Certification) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasIconUrl) hash ^= IconUrl.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasClubName) hash ^= ClubName.GetHashCode();
      if (HasVipLevel) hash ^= VipLevel.GetHashCode();
      if (HasLevel) hash ^= Level.GetHashCode();
      if (HasCountry) hash ^= Country.GetHashCode();
      if (HasGpsLon) hash ^= GpsLon.GetHashCode();
      if (HasGpsLat) hash ^= GpsLat.GetHashCode();
      if (HasWaitingStatus) hash ^= WaitingStatus.GetHashCode();
      if (HasCertification) hash ^= Certification.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasIconUrl) {
        output.WriteRawTag(18);
        output.WriteString(IconUrl);
      }
      if (HasUid) {
        output.WriteRawTag(24);
        output.WriteInt64(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(34);
        output.WriteString(Clubid);
      }
      if (HasClubName) {
        output.WriteRawTag(42);
        output.WriteString(ClubName);
      }
      if (HasVipLevel) {
        output.WriteRawTag(48);
        output.WriteInt32(VipLevel);
      }
      if (HasLevel) {
        output.WriteRawTag(56);
        output.WriteInt32(Level);
      }
      if (HasCountry) {
        output.WriteRawTag(66);
        output.WriteString(Country);
      }
      if (HasGpsLon) {
        output.WriteRawTag(72);
        output.WriteInt32(GpsLon);
      }
      if (HasGpsLat) {
        output.WriteRawTag(80);
        output.WriteInt32(GpsLat);
      }
      if (HasWaitingStatus) {
        output.WriteRawTag(88);
        output.WriteInt32(WaitingStatus);
      }
      if (HasCertification) {
        output.WriteRawTag(96);
        output.WriteInt32(Certification);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasIconUrl) {
        output.WriteRawTag(18);
        output.WriteString(IconUrl);
      }
      if (HasUid) {
        output.WriteRawTag(24);
        output.WriteInt64(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(34);
        output.WriteString(Clubid);
      }
      if (HasClubName) {
        output.WriteRawTag(42);
        output.WriteString(ClubName);
      }
      if (HasVipLevel) {
        output.WriteRawTag(48);
        output.WriteInt32(VipLevel);
      }
      if (HasLevel) {
        output.WriteRawTag(56);
        output.WriteInt32(Level);
      }
      if (HasCountry) {
        output.WriteRawTag(66);
        output.WriteString(Country);
      }
      if (HasGpsLon) {
        output.WriteRawTag(72);
        output.WriteInt32(GpsLon);
      }
      if (HasGpsLat) {
        output.WriteRawTag(80);
        output.WriteInt32(GpsLat);
      }
      if (HasWaitingStatus) {
        output.WriteRawTag(88);
        output.WriteInt32(WaitingStatus);
      }
      if (HasCertification) {
        output.WriteRawTag(96);
        output.WriteInt32(Certification);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasIconUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconUrl);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clubid);
      }
      if (HasClubName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClubName);
      }
      if (HasVipLevel) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VipLevel);
      }
      if (HasLevel) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (HasCountry) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
      }
      if (HasGpsLon) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GpsLon);
      }
      if (HasGpsLat) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GpsLat);
      }
      if (HasWaitingStatus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WaitingStatus);
      }
      if (HasCertification) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Certification);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsPlayerInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasIconUrl) {
        IconUrl = other.IconUrl;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasClubName) {
        ClubName = other.ClubName;
      }
      if (other.HasVipLevel) {
        VipLevel = other.VipLevel;
      }
      if (other.HasLevel) {
        Level = other.Level;
      }
      if (other.HasCountry) {
        Country = other.Country;
      }
      if (other.HasGpsLon) {
        GpsLon = other.GpsLon;
      }
      if (other.HasGpsLat) {
        GpsLat = other.GpsLat;
      }
      if (other.HasWaitingStatus) {
        WaitingStatus = other.WaitingStatus;
      }
      if (other.HasCertification) {
        Certification = other.Certification;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            IconUrl = input.ReadString();
            break;
          }
          case 24: {
            Uid = input.ReadInt64();
            break;
          }
          case 34: {
            Clubid = input.ReadString();
            break;
          }
          case 42: {
            ClubName = input.ReadString();
            break;
          }
          case 48: {
            VipLevel = input.ReadInt32();
            break;
          }
          case 56: {
            Level = input.ReadInt32();
            break;
          }
          case 66: {
            Country = input.ReadString();
            break;
          }
          case 72: {
            GpsLon = input.ReadInt32();
            break;
          }
          case 80: {
            GpsLat = input.ReadInt32();
            break;
          }
          case 88: {
            WaitingStatus = input.ReadInt32();
            break;
          }
          case 96: {
            Certification = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            IconUrl = input.ReadString();
            break;
          }
          case 24: {
            Uid = input.ReadInt64();
            break;
          }
          case 34: {
            Clubid = input.ReadString();
            break;
          }
          case 42: {
            ClubName = input.ReadString();
            break;
          }
          case 48: {
            VipLevel = input.ReadInt32();
            break;
          }
          case 56: {
            Level = input.ReadInt32();
            break;
          }
          case 66: {
            Country = input.ReadString();
            break;
          }
          case 72: {
            GpsLon = input.ReadInt32();
            break;
          }
          case 80: {
            GpsLat = input.ReadInt32();
            break;
          }
          case 88: {
            WaitingStatus = input.ReadInt32();
            break;
          }
          case 96: {
            Certification = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家遊玩狀態
  /// </summary>
  public sealed partial class TongitsPlayerGamingStatus : pb::IMessage<TongitsPlayerGamingStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsPlayerGamingStatus> _parser = new pb::MessageParser<TongitsPlayerGamingStatus>(() => new TongitsPlayerGamingStatus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsPlayerGamingStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsPlayerGamingStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsPlayerGamingStatus(TongitsPlayerGamingStatus other) : this() {
      _hasBits0 = other._hasBits0;
      chips_ = other.chips_;
      handCards_ = other.handCards_ != null ? other.handCards_.Clone() : null;
      playingInfo_ = other.playingInfo_;
      isPlaying_ = other.isPlaying_;
      isRebuying_ = other.isRebuying_;
      gameLeftTime_ = other.gameLeftTime_;
      rebuyLeftTime_ = other.rebuyLeftTime_;
      profit_ = other.profit_;
      isLeavingOnNextHand_ = other.isLeavingOnNextHand_;
      calltimeInfo_ = other.calltimeInfo_ != null ? other.calltimeInfo_.Clone() : null;
      isDelayTime_ = other.isDelayTime_;
      isUsingTimebank_ = other.isUsingTimebank_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsPlayerGamingStatus Clone() {
      return new TongitsPlayerGamingStatus(this);
    }

    /// <summary>Field number for the "chips" field.</summary>
    public const int ChipsFieldNumber = 1;
    private readonly static long ChipsDefaultValue = 0L;

    private long chips_;
    /// <summary>
    ///Playing狀態
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Chips {
      get { if ((_hasBits0 & 1) != 0) { return chips_; } else { return ChipsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        chips_ = value;
      }
    }
    /// <summary>Gets whether the "chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChips {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChips() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "hand_cards" field.</summary>
    public const int HandCardsFieldNumber = 2;
    private global::Texas.Protocol.TongitsHandCard handCards_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TongitsHandCard HandCards {
      get { return handCards_; }
      set {
        handCards_ = value;
      }
    }

    /// <summary>Field number for the "playing_info" field.</summary>
    public const int PlayingInfoFieldNumber = 3;
    private readonly static global::Texas.Protocol.TongitsPlayingInfo PlayingInfoDefaultValue = global::Texas.Protocol.TongitsPlayingInfo.Wait;

    private global::Texas.Protocol.TongitsPlayingInfo playingInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TongitsPlayingInfo PlayingInfo {
      get { if ((_hasBits0 & 2) != 0) { return playingInfo_; } else { return PlayingInfoDefaultValue; } }
      set {
        _hasBits0 |= 2;
        playingInfo_ = value;
      }
    }
    /// <summary>Gets whether the "playing_info" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayingInfo {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "playing_info" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayingInfo() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "is_playing" field.</summary>
    public const int IsPlayingFieldNumber = 4;
    private readonly static bool IsPlayingDefaultValue = false;

    private bool isPlaying_;
    /// <summary>
    /// 是否已經參與遊戲牌局中
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPlaying {
      get { if ((_hasBits0 & 4) != 0) { return isPlaying_; } else { return IsPlayingDefaultValue; } }
      set {
        _hasBits0 |= 4;
        isPlaying_ = value;
      }
    }
    /// <summary>Gets whether the "is_playing" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPlaying {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "is_playing" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPlaying() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "is_rebuying" field.</summary>
    public const int IsRebuyingFieldNumber = 5;
    private readonly static bool IsRebuyingDefaultValue = false;

    private bool isRebuying_;
    /// <summary>
    /// 是否在Rebuy
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsRebuying {
      get { if ((_hasBits0 & 8) != 0) { return isRebuying_; } else { return IsRebuyingDefaultValue; } }
      set {
        _hasBits0 |= 8;
        isRebuying_ = value;
      }
    }
    /// <summary>Gets whether the "is_rebuying" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsRebuying {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "is_rebuying" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsRebuying() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "game_left_time" field.</summary>
    public const int GameLeftTimeFieldNumber = 6;
    private readonly static int GameLeftTimeDefaultValue = 0;

    private int gameLeftTime_;
    /// <summary>
    /// 剩餘的遊戲回合時間
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameLeftTime {
      get { if ((_hasBits0 & 16) != 0) { return gameLeftTime_; } else { return GameLeftTimeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        gameLeftTime_ = value;
      }
    }
    /// <summary>Gets whether the "game_left_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameLeftTime {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "game_left_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameLeftTime() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "rebuy_left_time" field.</summary>
    public const int RebuyLeftTimeFieldNumber = 7;
    private readonly static int RebuyLeftTimeDefaultValue = 0;

    private int rebuyLeftTime_;
    /// <summary>
    /// 剩餘的rebuy時間
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RebuyLeftTime {
      get { if ((_hasBits0 & 32) != 0) { return rebuyLeftTime_; } else { return RebuyLeftTimeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        rebuyLeftTime_ = value;
      }
    }
    /// <summary>Gets whether the "rebuy_left_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRebuyLeftTime {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "rebuy_left_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRebuyLeftTime() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "profit" field.</summary>
    public const int ProfitFieldNumber = 8;
    private readonly static long ProfitDefaultValue = 0L;

    private long profit_;
    /// <summary>
    /// 玩家盈虧
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Profit {
      get { if ((_hasBits0 & 64) != 0) { return profit_; } else { return ProfitDefaultValue; } }
      set {
        _hasBits0 |= 64;
        profit_ = value;
      }
    }
    /// <summary>Gets whether the "profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProfit {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProfit() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "is_leaving_on_next_hand" field.</summary>
    public const int IsLeavingOnNextHandFieldNumber = 9;
    private readonly static bool IsLeavingOnNextHandDefaultValue = false;

    private bool isLeavingOnNextHand_;
    /// <summary>
    /// 是否勾選了下手離開
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsLeavingOnNextHand {
      get { if ((_hasBits0 & 128) != 0) { return isLeavingOnNextHand_; } else { return IsLeavingOnNextHandDefaultValue; } }
      set {
        _hasBits0 |= 128;
        isLeavingOnNextHand_ = value;
      }
    }
    /// <summary>Gets whether the "is_leaving_on_next_hand" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsLeavingOnNextHand {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "is_leaving_on_next_hand" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsLeavingOnNextHand() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "calltime_info" field.</summary>
    public const int CalltimeInfoFieldNumber = 10;
    private global::Texas.Protocol.CallTimeInfo calltimeInfo_;
    /// <summary>
    /// 玩家calltime狀態
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.CallTimeInfo CalltimeInfo {
      get { return calltimeInfo_; }
      set {
        calltimeInfo_ = value;
      }
    }

    /// <summary>Field number for the "is_delay_time" field.</summary>
    public const int IsDelayTimeFieldNumber = 11;
    private readonly static bool IsDelayTimeDefaultValue = false;

    private bool isDelayTime_;
    /// <summary>
    ///是否正在延时
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsDelayTime {
      get { if ((_hasBits0 & 256) != 0) { return isDelayTime_; } else { return IsDelayTimeDefaultValue; } }
      set {
        _hasBits0 |= 256;
        isDelayTime_ = value;
      }
    }
    /// <summary>Gets whether the "is_delay_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsDelayTime {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "is_delay_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsDelayTime() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "is_using_timebank" field.</summary>
    public const int IsUsingTimebankFieldNumber = 12;
    private readonly static bool IsUsingTimebankDefaultValue = false;

    private bool isUsingTimebank_;
    /// <summary>
    ///是否正在使用时间银行
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsUsingTimebank {
      get { if ((_hasBits0 & 512) != 0) { return isUsingTimebank_; } else { return IsUsingTimebankDefaultValue; } }
      set {
        _hasBits0 |= 512;
        isUsingTimebank_ = value;
      }
    }
    /// <summary>Gets whether the "is_using_timebank" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsUsingTimebank {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "is_using_timebank" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsUsingTimebank() {
      _hasBits0 &= ~512;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsPlayerGamingStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsPlayerGamingStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Chips != other.Chips) return false;
      if (!object.Equals(HandCards, other.HandCards)) return false;
      if (PlayingInfo != other.PlayingInfo) return false;
      if (IsPlaying != other.IsPlaying) return false;
      if (IsRebuying != other.IsRebuying) return false;
      if (GameLeftTime != other.GameLeftTime) return false;
      if (RebuyLeftTime != other.RebuyLeftTime) return false;
      if (Profit != other.Profit) return false;
      if (IsLeavingOnNextHand != other.IsLeavingOnNextHand) return false;
      if (!object.Equals(CalltimeInfo, other.CalltimeInfo)) return false;
      if (IsDelayTime != other.IsDelayTime) return false;
      if (IsUsingTimebank != other.IsUsingTimebank) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasChips) hash ^= Chips.GetHashCode();
      if (handCards_ != null) hash ^= HandCards.GetHashCode();
      if (HasPlayingInfo) hash ^= PlayingInfo.GetHashCode();
      if (HasIsPlaying) hash ^= IsPlaying.GetHashCode();
      if (HasIsRebuying) hash ^= IsRebuying.GetHashCode();
      if (HasGameLeftTime) hash ^= GameLeftTime.GetHashCode();
      if (HasRebuyLeftTime) hash ^= RebuyLeftTime.GetHashCode();
      if (HasProfit) hash ^= Profit.GetHashCode();
      if (HasIsLeavingOnNextHand) hash ^= IsLeavingOnNextHand.GetHashCode();
      if (calltimeInfo_ != null) hash ^= CalltimeInfo.GetHashCode();
      if (HasIsDelayTime) hash ^= IsDelayTime.GetHashCode();
      if (HasIsUsingTimebank) hash ^= IsUsingTimebank.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasChips) {
        output.WriteRawTag(8);
        output.WriteInt64(Chips);
      }
      if (handCards_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(HandCards);
      }
      if (HasPlayingInfo) {
        output.WriteRawTag(24);
        output.WriteEnum((int) PlayingInfo);
      }
      if (HasIsPlaying) {
        output.WriteRawTag(32);
        output.WriteBool(IsPlaying);
      }
      if (HasIsRebuying) {
        output.WriteRawTag(40);
        output.WriteBool(IsRebuying);
      }
      if (HasGameLeftTime) {
        output.WriteRawTag(48);
        output.WriteInt32(GameLeftTime);
      }
      if (HasRebuyLeftTime) {
        output.WriteRawTag(56);
        output.WriteInt32(RebuyLeftTime);
      }
      if (HasProfit) {
        output.WriteRawTag(64);
        output.WriteInt64(Profit);
      }
      if (HasIsLeavingOnNextHand) {
        output.WriteRawTag(72);
        output.WriteBool(IsLeavingOnNextHand);
      }
      if (calltimeInfo_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CalltimeInfo);
      }
      if (HasIsDelayTime) {
        output.WriteRawTag(88);
        output.WriteBool(IsDelayTime);
      }
      if (HasIsUsingTimebank) {
        output.WriteRawTag(96);
        output.WriteBool(IsUsingTimebank);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasChips) {
        output.WriteRawTag(8);
        output.WriteInt64(Chips);
      }
      if (handCards_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(HandCards);
      }
      if (HasPlayingInfo) {
        output.WriteRawTag(24);
        output.WriteEnum((int) PlayingInfo);
      }
      if (HasIsPlaying) {
        output.WriteRawTag(32);
        output.WriteBool(IsPlaying);
      }
      if (HasIsRebuying) {
        output.WriteRawTag(40);
        output.WriteBool(IsRebuying);
      }
      if (HasGameLeftTime) {
        output.WriteRawTag(48);
        output.WriteInt32(GameLeftTime);
      }
      if (HasRebuyLeftTime) {
        output.WriteRawTag(56);
        output.WriteInt32(RebuyLeftTime);
      }
      if (HasProfit) {
        output.WriteRawTag(64);
        output.WriteInt64(Profit);
      }
      if (HasIsLeavingOnNextHand) {
        output.WriteRawTag(72);
        output.WriteBool(IsLeavingOnNextHand);
      }
      if (calltimeInfo_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CalltimeInfo);
      }
      if (HasIsDelayTime) {
        output.WriteRawTag(88);
        output.WriteBool(IsDelayTime);
      }
      if (HasIsUsingTimebank) {
        output.WriteRawTag(96);
        output.WriteBool(IsUsingTimebank);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Chips);
      }
      if (handCards_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HandCards);
      }
      if (HasPlayingInfo) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PlayingInfo);
      }
      if (HasIsPlaying) {
        size += 1 + 1;
      }
      if (HasIsRebuying) {
        size += 1 + 1;
      }
      if (HasGameLeftTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameLeftTime);
      }
      if (HasRebuyLeftTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RebuyLeftTime);
      }
      if (HasProfit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Profit);
      }
      if (HasIsLeavingOnNextHand) {
        size += 1 + 1;
      }
      if (calltimeInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CalltimeInfo);
      }
      if (HasIsDelayTime) {
        size += 1 + 1;
      }
      if (HasIsUsingTimebank) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsPlayerGamingStatus other) {
      if (other == null) {
        return;
      }
      if (other.HasChips) {
        Chips = other.Chips;
      }
      if (other.handCards_ != null) {
        if (handCards_ == null) {
          HandCards = new global::Texas.Protocol.TongitsHandCard();
        }
        HandCards.MergeFrom(other.HandCards);
      }
      if (other.HasPlayingInfo) {
        PlayingInfo = other.PlayingInfo;
      }
      if (other.HasIsPlaying) {
        IsPlaying = other.IsPlaying;
      }
      if (other.HasIsRebuying) {
        IsRebuying = other.IsRebuying;
      }
      if (other.HasGameLeftTime) {
        GameLeftTime = other.GameLeftTime;
      }
      if (other.HasRebuyLeftTime) {
        RebuyLeftTime = other.RebuyLeftTime;
      }
      if (other.HasProfit) {
        Profit = other.Profit;
      }
      if (other.HasIsLeavingOnNextHand) {
        IsLeavingOnNextHand = other.IsLeavingOnNextHand;
      }
      if (other.calltimeInfo_ != null) {
        if (calltimeInfo_ == null) {
          CalltimeInfo = new global::Texas.Protocol.CallTimeInfo();
        }
        CalltimeInfo.MergeFrom(other.CalltimeInfo);
      }
      if (other.HasIsDelayTime) {
        IsDelayTime = other.IsDelayTime;
      }
      if (other.HasIsUsingTimebank) {
        IsUsingTimebank = other.IsUsingTimebank;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Chips = input.ReadInt64();
            break;
          }
          case 18: {
            if (handCards_ == null) {
              HandCards = new global::Texas.Protocol.TongitsHandCard();
            }
            input.ReadMessage(HandCards);
            break;
          }
          case 24: {
            PlayingInfo = (global::Texas.Protocol.TongitsPlayingInfo) input.ReadEnum();
            break;
          }
          case 32: {
            IsPlaying = input.ReadBool();
            break;
          }
          case 40: {
            IsRebuying = input.ReadBool();
            break;
          }
          case 48: {
            GameLeftTime = input.ReadInt32();
            break;
          }
          case 56: {
            RebuyLeftTime = input.ReadInt32();
            break;
          }
          case 64: {
            Profit = input.ReadInt64();
            break;
          }
          case 72: {
            IsLeavingOnNextHand = input.ReadBool();
            break;
          }
          case 82: {
            if (calltimeInfo_ == null) {
              CalltimeInfo = new global::Texas.Protocol.CallTimeInfo();
            }
            input.ReadMessage(CalltimeInfo);
            break;
          }
          case 88: {
            IsDelayTime = input.ReadBool();
            break;
          }
          case 96: {
            IsUsingTimebank = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Chips = input.ReadInt64();
            break;
          }
          case 18: {
            if (handCards_ == null) {
              HandCards = new global::Texas.Protocol.TongitsHandCard();
            }
            input.ReadMessage(HandCards);
            break;
          }
          case 24: {
            PlayingInfo = (global::Texas.Protocol.TongitsPlayingInfo) input.ReadEnum();
            break;
          }
          case 32: {
            IsPlaying = input.ReadBool();
            break;
          }
          case 40: {
            IsRebuying = input.ReadBool();
            break;
          }
          case 48: {
            GameLeftTime = input.ReadInt32();
            break;
          }
          case 56: {
            RebuyLeftTime = input.ReadInt32();
            break;
          }
          case 64: {
            Profit = input.ReadInt64();
            break;
          }
          case 72: {
            IsLeavingOnNextHand = input.ReadBool();
            break;
          }
          case 82: {
            if (calltimeInfo_ == null) {
              CalltimeInfo = new global::Texas.Protocol.CallTimeInfo();
            }
            input.ReadMessage(CalltimeInfo);
            break;
          }
          case 88: {
            IsDelayTime = input.ReadBool();
            break;
          }
          case 96: {
            IsUsingTimebank = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///座位屬性狀態
  ///包含在位置上的玩家
  ///包含遊玩狀態
  /// </summary>
  public sealed partial class TongitsSeatStatus : pb::IMessage<TongitsSeatStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsSeatStatus> _parser = new pb::MessageParser<TongitsSeatStatus>(() => new TongitsSeatStatus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsSeatStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSeatStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSeatStatus(TongitsSeatStatus other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      seatReserved_ = other.seatReserved_;
      isEmpty_ = other.isEmpty_;
      isSittingOut_ = other.isSittingOut_;
      playerInfo_ = other.playerInfo_ != null ? other.playerInfo_.Clone() : null;
      playerStatus_ = other.playerStatus_ != null ? other.playerStatus_.Clone() : null;
      frameId_ = other.frameId_;
      melds_ = other.melds_.Clone();
      bonusCards_ = other.bonusCards_.Clone();
      chowCards_ = other.chowCards_.Clone();
      lockedCards_ = other.lockedCards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSeatStatus Clone() {
      return new TongitsSeatStatus(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seat_reserved" field.</summary>
    public const int SeatReservedFieldNumber = 2;
    private readonly static bool SeatReservedDefaultValue = false;

    private bool seatReserved_;
    /// <summary>
    /// 是否保留
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SeatReserved {
      get { if ((_hasBits0 & 2) != 0) { return seatReserved_; } else { return SeatReservedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seatReserved_ = value;
      }
    }
    /// <summary>Gets whether the "seat_reserved" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatReserved {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seat_reserved" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatReserved() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "is_empty" field.</summary>
    public const int IsEmptyFieldNumber = 3;
    private readonly static bool IsEmptyDefaultValue = false;

    private bool isEmpty_;
    /// <summary>
    /// 空位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsEmpty {
      get { if ((_hasBits0 & 4) != 0) { return isEmpty_; } else { return IsEmptyDefaultValue; } }
      set {
        _hasBits0 |= 4;
        isEmpty_ = value;
      }
    }
    /// <summary>Gets whether the "is_empty" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsEmpty {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "is_empty" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsEmpty() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "is_sitting_out" field.</summary>
    public const int IsSittingOutFieldNumber = 4;
    private readonly static bool IsSittingOutDefaultValue = false;

    private bool isSittingOut_;
    /// <summary>
    /// Sitting out
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSittingOut {
      get { if ((_hasBits0 & 8) != 0) { return isSittingOut_; } else { return IsSittingOutDefaultValue; } }
      set {
        _hasBits0 |= 8;
        isSittingOut_ = value;
      }
    }
    /// <summary>Gets whether the "is_sitting_out" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsSittingOut {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "is_sitting_out" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsSittingOut() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "player_info" field.</summary>
    public const int PlayerInfoFieldNumber = 5;
    private global::Texas.Protocol.TongitsPlayerInfo playerInfo_;
    /// <summary>
    /// 玩家資訊
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TongitsPlayerInfo PlayerInfo {
      get { return playerInfo_; }
      set {
        playerInfo_ = value;
      }
    }

    /// <summary>Field number for the "player_status" field.</summary>
    public const int PlayerStatusFieldNumber = 6;
    private global::Texas.Protocol.TongitsPlayerGamingStatus playerStatus_;
    /// <summary>
    /// 玩家遊玩狀態
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TongitsPlayerGamingStatus PlayerStatus {
      get { return playerStatus_; }
      set {
        playerStatus_ = value;
      }
    }

    /// <summary>Field number for the "frame_id" field.</summary>
    public const int FrameIdFieldNumber = 7;
    private readonly static string FrameIdDefaultValue = "";

    private string frameId_;
    /// <summary>
    /// 用户头像框
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FrameId {
      get { return frameId_ ?? FrameIdDefaultValue; }
      set {
        frameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "frame_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFrameId {
      get { return frameId_ != null; }
    }
    /// <summary>Clears the value of the "frame_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrameId() {
      frameId_ = null;
    }

    /// <summary>Field number for the "melds" field.</summary>
    public const int MeldsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Texas.Protocol.TongitsMeld> _repeated_melds_codec
        = pb::FieldCodec.ForMessage(66, global::Texas.Protocol.TongitsMeld.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.TongitsMeld> melds_ = new pbc::RepeatedField<global::Texas.Protocol.TongitsMeld>();
    /// <summary>
    /// 該位置擺出來的組合牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.TongitsMeld> Melds {
      get { return melds_; }
    }

    /// <summary>Field number for the "bonus_cards" field.</summary>
    public const int BonusCardsFieldNumber = 9;
    private static readonly pb::FieldCodec<int> _repeated_bonusCards_codec
        = pb::FieldCodec.ForInt32(74);
    private readonly pbc::RepeatedField<int> bonusCards_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 該位置的組合牌所有的 bonus card
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> BonusCards {
      get { return bonusCards_; }
    }

    /// <summary>Field number for the "chow_cards" field.</summary>
    public const int ChowCardsFieldNumber = 10;
    private static readonly pb::FieldCodec<int> _repeated_chowCards_codec
        = pb::FieldCodec.ForInt32(82);
    private readonly pbc::RepeatedField<int> chowCards_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 從棄牌推抽起的牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> ChowCards {
      get { return chowCards_; }
    }

    /// <summary>Field number for the "locked_cards" field.</summary>
    public const int LockedCardsFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_lockedCards_codec
        = pb::FieldCodec.ForInt32(90);
    private readonly pbc::RepeatedField<int> lockedCards_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 因被 SAPAW 而不能 fight 的牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> LockedCards {
      get { return lockedCards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsSeatStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsSeatStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (SeatReserved != other.SeatReserved) return false;
      if (IsEmpty != other.IsEmpty) return false;
      if (IsSittingOut != other.IsSittingOut) return false;
      if (!object.Equals(PlayerInfo, other.PlayerInfo)) return false;
      if (!object.Equals(PlayerStatus, other.PlayerStatus)) return false;
      if (FrameId != other.FrameId) return false;
      if(!melds_.Equals(other.melds_)) return false;
      if(!bonusCards_.Equals(other.bonusCards_)) return false;
      if(!chowCards_.Equals(other.chowCards_)) return false;
      if(!lockedCards_.Equals(other.lockedCards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasSeatReserved) hash ^= SeatReserved.GetHashCode();
      if (HasIsEmpty) hash ^= IsEmpty.GetHashCode();
      if (HasIsSittingOut) hash ^= IsSittingOut.GetHashCode();
      if (playerInfo_ != null) hash ^= PlayerInfo.GetHashCode();
      if (playerStatus_ != null) hash ^= PlayerStatus.GetHashCode();
      if (HasFrameId) hash ^= FrameId.GetHashCode();
      hash ^= melds_.GetHashCode();
      hash ^= bonusCards_.GetHashCode();
      hash ^= chowCards_.GetHashCode();
      hash ^= lockedCards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasSeatReserved) {
        output.WriteRawTag(16);
        output.WriteBool(SeatReserved);
      }
      if (HasIsEmpty) {
        output.WriteRawTag(24);
        output.WriteBool(IsEmpty);
      }
      if (HasIsSittingOut) {
        output.WriteRawTag(32);
        output.WriteBool(IsSittingOut);
      }
      if (playerInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PlayerInfo);
      }
      if (playerStatus_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PlayerStatus);
      }
      if (HasFrameId) {
        output.WriteRawTag(58);
        output.WriteString(FrameId);
      }
      melds_.WriteTo(output, _repeated_melds_codec);
      bonusCards_.WriteTo(output, _repeated_bonusCards_codec);
      chowCards_.WriteTo(output, _repeated_chowCards_codec);
      lockedCards_.WriteTo(output, _repeated_lockedCards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasSeatReserved) {
        output.WriteRawTag(16);
        output.WriteBool(SeatReserved);
      }
      if (HasIsEmpty) {
        output.WriteRawTag(24);
        output.WriteBool(IsEmpty);
      }
      if (HasIsSittingOut) {
        output.WriteRawTag(32);
        output.WriteBool(IsSittingOut);
      }
      if (playerInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PlayerInfo);
      }
      if (playerStatus_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PlayerStatus);
      }
      if (HasFrameId) {
        output.WriteRawTag(58);
        output.WriteString(FrameId);
      }
      melds_.WriteTo(ref output, _repeated_melds_codec);
      bonusCards_.WriteTo(ref output, _repeated_bonusCards_codec);
      chowCards_.WriteTo(ref output, _repeated_chowCards_codec);
      lockedCards_.WriteTo(ref output, _repeated_lockedCards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasSeatReserved) {
        size += 1 + 1;
      }
      if (HasIsEmpty) {
        size += 1 + 1;
      }
      if (HasIsSittingOut) {
        size += 1 + 1;
      }
      if (playerInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerInfo);
      }
      if (playerStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerStatus);
      }
      if (HasFrameId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FrameId);
      }
      size += melds_.CalculateSize(_repeated_melds_codec);
      size += bonusCards_.CalculateSize(_repeated_bonusCards_codec);
      size += chowCards_.CalculateSize(_repeated_chowCards_codec);
      size += lockedCards_.CalculateSize(_repeated_lockedCards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsSeatStatus other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasSeatReserved) {
        SeatReserved = other.SeatReserved;
      }
      if (other.HasIsEmpty) {
        IsEmpty = other.IsEmpty;
      }
      if (other.HasIsSittingOut) {
        IsSittingOut = other.IsSittingOut;
      }
      if (other.playerInfo_ != null) {
        if (playerInfo_ == null) {
          PlayerInfo = new global::Texas.Protocol.TongitsPlayerInfo();
        }
        PlayerInfo.MergeFrom(other.PlayerInfo);
      }
      if (other.playerStatus_ != null) {
        if (playerStatus_ == null) {
          PlayerStatus = new global::Texas.Protocol.TongitsPlayerGamingStatus();
        }
        PlayerStatus.MergeFrom(other.PlayerStatus);
      }
      if (other.HasFrameId) {
        FrameId = other.FrameId;
      }
      melds_.Add(other.melds_);
      bonusCards_.Add(other.bonusCards_);
      chowCards_.Add(other.chowCards_);
      lockedCards_.Add(other.lockedCards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            SeatReserved = input.ReadBool();
            break;
          }
          case 24: {
            IsEmpty = input.ReadBool();
            break;
          }
          case 32: {
            IsSittingOut = input.ReadBool();
            break;
          }
          case 42: {
            if (playerInfo_ == null) {
              PlayerInfo = new global::Texas.Protocol.TongitsPlayerInfo();
            }
            input.ReadMessage(PlayerInfo);
            break;
          }
          case 50: {
            if (playerStatus_ == null) {
              PlayerStatus = new global::Texas.Protocol.TongitsPlayerGamingStatus();
            }
            input.ReadMessage(PlayerStatus);
            break;
          }
          case 58: {
            FrameId = input.ReadString();
            break;
          }
          case 66: {
            melds_.AddEntriesFrom(input, _repeated_melds_codec);
            break;
          }
          case 74:
          case 72: {
            bonusCards_.AddEntriesFrom(input, _repeated_bonusCards_codec);
            break;
          }
          case 82:
          case 80: {
            chowCards_.AddEntriesFrom(input, _repeated_chowCards_codec);
            break;
          }
          case 90:
          case 88: {
            lockedCards_.AddEntriesFrom(input, _repeated_lockedCards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            SeatReserved = input.ReadBool();
            break;
          }
          case 24: {
            IsEmpty = input.ReadBool();
            break;
          }
          case 32: {
            IsSittingOut = input.ReadBool();
            break;
          }
          case 42: {
            if (playerInfo_ == null) {
              PlayerInfo = new global::Texas.Protocol.TongitsPlayerInfo();
            }
            input.ReadMessage(PlayerInfo);
            break;
          }
          case 50: {
            if (playerStatus_ == null) {
              PlayerStatus = new global::Texas.Protocol.TongitsPlayerGamingStatus();
            }
            input.ReadMessage(PlayerStatus);
            break;
          }
          case 58: {
            FrameId = input.ReadString();
            break;
          }
          case 66: {
            melds_.AddEntriesFrom(ref input, _repeated_melds_codec);
            break;
          }
          case 74:
          case 72: {
            bonusCards_.AddEntriesFrom(ref input, _repeated_bonusCards_codec);
            break;
          }
          case 82:
          case 80: {
            chowCards_.AddEntriesFrom(ref input, _repeated_chowCards_codec);
            break;
          }
          case 90:
          case 88: {
            lockedCards_.AddEntriesFrom(ref input, _repeated_lockedCards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsSitDownBRC : pb::IMessage<TongitsSitDownBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsSitDownBRC> _parser = new pb::MessageParser<TongitsSitDownBRC>(() => new TongitsSitDownBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsSitDownBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSitDownBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSitDownBRC(TongitsSitDownBRC other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      seatStatus_ = other.seatStatus_ != null ? other.seatStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSitDownBRC Clone() {
      return new TongitsSitDownBRC(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seat_status" field.</summary>
    public const int SeatStatusFieldNumber = 2;
    private global::Texas.Protocol.TongitsSeatStatus seatStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TongitsSeatStatus SeatStatus {
      get { return seatStatus_; }
      set {
        seatStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsSitDownBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsSitDownBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (!object.Equals(SeatStatus, other.SeatStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (seatStatus_ != null) hash ^= SeatStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (seatStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SeatStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (seatStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SeatStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (seatStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SeatStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsSitDownBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.seatStatus_ != null) {
        if (seatStatus_ == null) {
          SeatStatus = new global::Texas.Protocol.TongitsSeatStatus();
        }
        SeatStatus.MergeFrom(other.SeatStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 18: {
            if (seatStatus_ == null) {
              SeatStatus = new global::Texas.Protocol.TongitsSeatStatus();
            }
            input.ReadMessage(SeatStatus);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 18: {
            if (seatStatus_ == null) {
              SeatStatus = new global::Texas.Protocol.TongitsSeatStatus();
            }
            input.ReadMessage(SeatStatus);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///站起REQ/RSP
  /// </summary>
  public sealed partial class TongitsStandUpREQ : pb::IMessage<TongitsStandUpREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsStandUpREQ> _parser = new pb::MessageParser<TongitsStandUpREQ>(() => new TongitsStandUpREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsStandUpREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsStandUpREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsStandUpREQ(TongitsStandUpREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsStandUpREQ Clone() {
      return new TongitsStandUpREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsStandUpREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsStandUpREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsStandUpREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsStandUpRSP : pb::IMessage<TongitsStandUpRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsStandUpRSP> _parser = new pb::MessageParser<TongitsStandUpRSP>(() => new TongitsStandUpRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsStandUpRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsStandUpRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsStandUpRSP(TongitsStandUpRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsStandUpRSP Clone() {
      return new TongitsStandUpRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsStandUpRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsStandUpRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsStandUpRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsStandUpBRC : pb::IMessage<TongitsStandUpBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsStandUpBRC> _parser = new pb::MessageParser<TongitsStandUpBRC>(() => new TongitsStandUpBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsStandUpBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsStandUpBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsStandUpBRC(TongitsStandUpBRC other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsStandUpBRC Clone() {
      return new TongitsStandUpBRC(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsStandUpBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsStandUpBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsStandUpBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsLeaveGameBRC : pb::IMessage<TongitsLeaveGameBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsLeaveGameBRC> _parser = new pb::MessageParser<TongitsLeaveGameBRC>(() => new TongitsLeaveGameBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsLeaveGameBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsLeaveGameBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsLeaveGameBRC(TongitsLeaveGameBRC other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      uid_ = other.uid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsLeaveGameBRC Clone() {
      return new TongitsLeaveGameBRC(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 2) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsLeaveGameBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsLeaveGameBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (Uid != other.Uid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsLeaveGameBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsSetGameReadyREQ : pb::IMessage<TongitsSetGameReadyREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsSetGameReadyREQ> _parser = new pb::MessageParser<TongitsSetGameReadyREQ>(() => new TongitsSetGameReadyREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsSetGameReadyREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSetGameReadyREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSetGameReadyREQ(TongitsSetGameReadyREQ other) : this() {
      _hasBits0 = other._hasBits0;
      ready_ = other.ready_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSetGameReadyREQ Clone() {
      return new TongitsSetGameReadyREQ(this);
    }

    /// <summary>Field number for the "ready" field.</summary>
    public const int ReadyFieldNumber = 1;
    private readonly static int ReadyDefaultValue = 0;

    private int ready_;
    /// <summary>
    ///1 = Ready, 0 = Cancel
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ready {
      get { if ((_hasBits0 & 1) != 0) { return ready_; } else { return ReadyDefaultValue; } }
      set {
        _hasBits0 |= 1;
        ready_ = value;
      }
    }
    /// <summary>Gets whether the "ready" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReady {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "ready" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReady() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsSetGameReadyREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsSetGameReadyREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ready != other.Ready) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasReady) hash ^= Ready.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasReady) {
        output.WriteRawTag(8);
        output.WriteInt32(Ready);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasReady) {
        output.WriteRawTag(8);
        output.WriteInt32(Ready);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasReady) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ready);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsSetGameReadyREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasReady) {
        Ready = other.Ready;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ready = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ready = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///仿照之前其他模式開始遊戲前的倒數計時廣播
  /// </summary>
  public sealed partial class TongitsCountdownBRC : pb::IMessage<TongitsCountdownBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsCountdownBRC> _parser = new pb::MessageParser<TongitsCountdownBRC>(() => new TongitsCountdownBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsCountdownBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsCountdownBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsCountdownBRC(TongitsCountdownBRC other) : this() {
      _hasBits0 = other._hasBits0;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsCountdownBRC Clone() {
      return new TongitsCountdownBRC(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private readonly static int CountDefaultValue = 0;

    private int count_;
    /// <summary>
    ///倒數的秒數
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Count {
      get { if ((_hasBits0 & 1) != 0) { return count_; } else { return CountDefaultValue; } }
      set {
        _hasBits0 |= 1;
        count_ = value;
      }
    }
    /// <summary>Gets whether the "count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCount {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCount() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsCountdownBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsCountdownBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCount) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCount) {
        output.WriteRawTag(8);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCount) {
        output.WriteRawTag(8);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsCountdownBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasCount) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsGameStartBRC : pb::IMessage<TongitsGameStartBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsGameStartBRC> _parser = new pb::MessageParser<TongitsGameStartBRC>(() => new TongitsGameStartBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsGameStartBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGameStartBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGameStartBRC(TongitsGameStartBRC other) : this() {
      _hasBits0 = other._hasBits0;
      dealer_ = other.dealer_;
      gameId_ = other.gameId_;
      stackNum_ = other.stackNum_;
      seats_ = other.seats_.Clone();
      addActionTimeCost_ = other.addActionTimeCost_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGameStartBRC Clone() {
      return new TongitsGameStartBRC(this);
    }

    /// <summary>Field number for the "dealer" field.</summary>
    public const int DealerFieldNumber = 1;
    private readonly static int DealerDefaultValue = 0;

    private int dealer_;
    /// <summary>
    /// 第一個行動玩家的座位id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dealer {
      get { if ((_hasBits0 & 1) != 0) { return dealer_; } else { return DealerDefaultValue; } }
      set {
        _hasBits0 |= 1;
        dealer_ = value;
      }
    }
    /// <summary>Gets whether the "dealer" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDealer {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "dealer" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDealer() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 2;
    private readonly static string GameIdDefaultValue = "";

    private string gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GameId {
      get { return gameId_ ?? GameIdDefaultValue; }
      set {
        gameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "game_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return gameId_ != null; }
    }
    /// <summary>Clears the value of the "game_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      gameId_ = null;
    }

    /// <summary>Field number for the "stack_num" field.</summary>
    public const int StackNumFieldNumber = 3;
    private readonly static int StackNumDefaultValue = 0;

    private int stackNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StackNum {
      get { if ((_hasBits0 & 2) != 0) { return stackNum_; } else { return StackNumDefaultValue; } }
      set {
        _hasBits0 |= 2;
        stackNum_ = value;
      }
    }
    /// <summary>Gets whether the "stack_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStackNum {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "stack_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStackNum() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "seats" field.</summary>
    public const int SeatsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Texas.Protocol.TongitsSeatStatus> _repeated_seats_codec
        = pb::FieldCodec.ForMessage(34, global::Texas.Protocol.TongitsSeatStatus.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.TongitsSeatStatus> seats_ = new pbc::RepeatedField<global::Texas.Protocol.TongitsSeatStatus>();
    /// <summary>
    /// 座位的狀態
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.TongitsSeatStatus> Seats {
      get { return seats_; }
    }

    /// <summary>Field number for the "add_action_time_cost" field.</summary>
    public const int AddActionTimeCostFieldNumber = 5;
    private readonly static int AddActionTimeCostDefaultValue = 0;

    private int addActionTimeCost_;
    /// <summary>
    /// 延時花費
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AddActionTimeCost {
      get { if ((_hasBits0 & 4) != 0) { return addActionTimeCost_; } else { return AddActionTimeCostDefaultValue; } }
      set {
        _hasBits0 |= 4;
        addActionTimeCost_ = value;
      }
    }
    /// <summary>Gets whether the "add_action_time_cost" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAddActionTimeCost {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "add_action_time_cost" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAddActionTimeCost() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsGameStartBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsGameStartBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Dealer != other.Dealer) return false;
      if (GameId != other.GameId) return false;
      if (StackNum != other.StackNum) return false;
      if(!seats_.Equals(other.seats_)) return false;
      if (AddActionTimeCost != other.AddActionTimeCost) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDealer) hash ^= Dealer.GetHashCode();
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (HasStackNum) hash ^= StackNum.GetHashCode();
      hash ^= seats_.GetHashCode();
      if (HasAddActionTimeCost) hash ^= AddActionTimeCost.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDealer) {
        output.WriteRawTag(8);
        output.WriteInt32(Dealer);
      }
      if (HasGameId) {
        output.WriteRawTag(18);
        output.WriteString(GameId);
      }
      if (HasStackNum) {
        output.WriteRawTag(24);
        output.WriteInt32(StackNum);
      }
      seats_.WriteTo(output, _repeated_seats_codec);
      if (HasAddActionTimeCost) {
        output.WriteRawTag(40);
        output.WriteInt32(AddActionTimeCost);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDealer) {
        output.WriteRawTag(8);
        output.WriteInt32(Dealer);
      }
      if (HasGameId) {
        output.WriteRawTag(18);
        output.WriteString(GameId);
      }
      if (HasStackNum) {
        output.WriteRawTag(24);
        output.WriteInt32(StackNum);
      }
      seats_.WriteTo(ref output, _repeated_seats_codec);
      if (HasAddActionTimeCost) {
        output.WriteRawTag(40);
        output.WriteInt32(AddActionTimeCost);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasDealer) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dealer);
      }
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameId);
      }
      if (HasStackNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StackNum);
      }
      size += seats_.CalculateSize(_repeated_seats_codec);
      if (HasAddActionTimeCost) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AddActionTimeCost);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsGameStartBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasDealer) {
        Dealer = other.Dealer;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      if (other.HasStackNum) {
        StackNum = other.StackNum;
      }
      seats_.Add(other.seats_);
      if (other.HasAddActionTimeCost) {
        AddActionTimeCost = other.AddActionTimeCost;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Dealer = input.ReadInt32();
            break;
          }
          case 18: {
            GameId = input.ReadString();
            break;
          }
          case 24: {
            StackNum = input.ReadInt32();
            break;
          }
          case 34: {
            seats_.AddEntriesFrom(input, _repeated_seats_codec);
            break;
          }
          case 40: {
            AddActionTimeCost = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Dealer = input.ReadInt32();
            break;
          }
          case 18: {
            GameId = input.ReadString();
            break;
          }
          case 24: {
            StackNum = input.ReadInt32();
            break;
          }
          case 34: {
            seats_.AddEntriesFrom(ref input, _repeated_seats_codec);
            break;
          }
          case 40: {
            AddActionTimeCost = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///房間結束後廣播盈虧畫面
  /// </summary>
  public sealed partial class TongitsRoomOverBRC : pb::IMessage<TongitsRoomOverBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsRoomOverBRC> _parser = new pb::MessageParser<TongitsRoomOverBRC>(() => new TongitsRoomOverBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsRoomOverBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsRoomOverBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsRoomOverBRC(TongitsRoomOverBRC other) : this() {
      _hasBits0 = other._hasBits0;
      profit_ = other.profit_.Clone();
      isRoomStarted_ = other.isRoomStarted_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsRoomOverBRC Clone() {
      return new TongitsRoomOverBRC(this);
    }

    /// <summary>Field number for the "profit" field.</summary>
    public const int ProfitFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ProfitInfo> _repeated_profit_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.ProfitInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ProfitInfo> profit_ = new pbc::RepeatedField<global::Texas.Protocol.ProfitInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ProfitInfo> Profit {
      get { return profit_; }
    }

    /// <summary>Field number for the "is_room_started" field.</summary>
    public const int IsRoomStartedFieldNumber = 2;
    private readonly static bool IsRoomStartedDefaultValue = false;

    private bool isRoomStarted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsRoomStarted {
      get { if ((_hasBits0 & 1) != 0) { return isRoomStarted_; } else { return IsRoomStartedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isRoomStarted_ = value;
      }
    }
    /// <summary>Gets whether the "is_room_started" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsRoomStarted {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_room_started" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsRoomStarted() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsRoomOverBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsRoomOverBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!profit_.Equals(other.profit_)) return false;
      if (IsRoomStarted != other.IsRoomStarted) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= profit_.GetHashCode();
      if (HasIsRoomStarted) hash ^= IsRoomStarted.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      profit_.WriteTo(output, _repeated_profit_codec);
      if (HasIsRoomStarted) {
        output.WriteRawTag(16);
        output.WriteBool(IsRoomStarted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      profit_.WriteTo(ref output, _repeated_profit_codec);
      if (HasIsRoomStarted) {
        output.WriteRawTag(16);
        output.WriteBool(IsRoomStarted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += profit_.CalculateSize(_repeated_profit_codec);
      if (HasIsRoomStarted) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsRoomOverBRC other) {
      if (other == null) {
        return;
      }
      profit_.Add(other.profit_);
      if (other.HasIsRoomStarted) {
        IsRoomStarted = other.IsRoomStarted;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            profit_.AddEntriesFrom(input, _repeated_profit_codec);
            break;
          }
          case 16: {
            IsRoomStarted = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            profit_.AddEntriesFrom(ref input, _repeated_profit_codec);
            break;
          }
          case 16: {
            IsRoomStarted = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///手牌結算
  /// </summary>
  public sealed partial class TongitsGameResultBRC : pb::IMessage<TongitsGameResultBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsGameResultBRC> _parser = new pb::MessageParser<TongitsGameResultBRC>(() => new TongitsGameResultBRC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsGameResultBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGameResultBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGameResultBRC(TongitsGameResultBRC other) : this() {
      seats_ = other.seats_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGameResultBRC Clone() {
      return new TongitsGameResultBRC(this);
    }

    /// <summary>Field number for the "seats" field.</summary>
    public const int SeatsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.TongitsSeatStatus> _repeated_seats_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.TongitsSeatStatus.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.TongitsSeatStatus> seats_ = new pbc::RepeatedField<global::Texas.Protocol.TongitsSeatStatus>();
    /// <summary>
    ///座位的狀態
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.TongitsSeatStatus> Seats {
      get { return seats_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsGameResultBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsGameResultBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!seats_.Equals(other.seats_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= seats_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      seats_.WriteTo(output, _repeated_seats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      seats_.WriteTo(ref output, _repeated_seats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += seats_.CalculateSize(_repeated_seats_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsGameResultBRC other) {
      if (other == null) {
        return;
      }
      seats_.Add(other.seats_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            seats_.AddEntriesFrom(input, _repeated_seats_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            seats_.AddEntriesFrom(ref input, _repeated_seats_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsSimplifiedGameResult : pb::IMessage<TongitsSimplifiedGameResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsSimplifiedGameResult> _parser = new pb::MessageParser<TongitsSimplifiedGameResult>(() => new TongitsSimplifiedGameResult());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsSimplifiedGameResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSimplifiedGameResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSimplifiedGameResult(TongitsSimplifiedGameResult other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      seatid_ = other.seatid_;
      chips_ = other.chips_;
      handCards_ = other.handCards_ != null ? other.handCards_.Clone() : null;
      tableMelds_ = other.tableMelds_.Clone();
      baseProfit_ = other.baseProfit_;
      tongitsProfit_ = other.tongitsProfit_;
      secretMeldsProfit_ = other.secretMeldsProfit_;
      bonusCardsProfit_ = other.bonusCardsProfit_;
      burnedProfit_ = other.burnedProfit_;
      fightProfit_ = other.fightProfit_;
      hitpotProfit_ = other.hitpotProfit_;
      sagasaProfit_ = other.sagasaProfit_;
      totalProfit_ = other.totalProfit_;
      gameTotalProfit_ = other.gameTotalProfit_;
      playerInfo_ = other.playerInfo_ != null ? other.playerInfo_.Clone() : null;
      bonusCards_ = other.bonusCards_.Clone();
      playingInfo_ = other.playingInfo_;
      getHitpotPool_ = other.getHitpotPool_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSimplifiedGameResult Clone() {
      return new TongitsSimplifiedGameResult(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 2;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 2) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "chips" field.</summary>
    public const int ChipsFieldNumber = 3;
    private readonly static long ChipsDefaultValue = 0L;

    private long chips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Chips {
      get { if ((_hasBits0 & 4) != 0) { return chips_; } else { return ChipsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        chips_ = value;
      }
    }
    /// <summary>Gets whether the "chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChips {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChips() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "hand_cards" field.</summary>
    public const int HandCardsFieldNumber = 4;
    private global::Texas.Protocol.TongitsHandCard handCards_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TongitsHandCard HandCards {
      get { return handCards_; }
      set {
        handCards_ = value;
      }
    }

    /// <summary>Field number for the "table_melds" field.</summary>
    public const int TableMeldsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Texas.Protocol.TongitsMeld> _repeated_tableMelds_codec
        = pb::FieldCodec.ForMessage(42, global::Texas.Protocol.TongitsMeld.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.TongitsMeld> tableMelds_ = new pbc::RepeatedField<global::Texas.Protocol.TongitsMeld>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.TongitsMeld> TableMelds {
      get { return tableMelds_; }
    }

    /// <summary>Field number for the "base_profit" field.</summary>
    public const int BaseProfitFieldNumber = 6;
    private readonly static long BaseProfitDefaultValue = 0L;

    private long baseProfit_;
    /// <summary>
    /// profits info
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BaseProfit {
      get { if ((_hasBits0 & 8) != 0) { return baseProfit_; } else { return BaseProfitDefaultValue; } }
      set {
        _hasBits0 |= 8;
        baseProfit_ = value;
      }
    }
    /// <summary>Gets whether the "base_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBaseProfit {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "base_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBaseProfit() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "tongits_profit" field.</summary>
    public const int TongitsProfitFieldNumber = 7;
    private readonly static long TongitsProfitDefaultValue = 0L;

    private long tongitsProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TongitsProfit {
      get { if ((_hasBits0 & 16) != 0) { return tongitsProfit_; } else { return TongitsProfitDefaultValue; } }
      set {
        _hasBits0 |= 16;
        tongitsProfit_ = value;
      }
    }
    /// <summary>Gets whether the "tongits_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTongitsProfit {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "tongits_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTongitsProfit() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "secret_melds_profit" field.</summary>
    public const int SecretMeldsProfitFieldNumber = 8;
    private readonly static long SecretMeldsProfitDefaultValue = 0L;

    private long secretMeldsProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SecretMeldsProfit {
      get { if ((_hasBits0 & 32) != 0) { return secretMeldsProfit_; } else { return SecretMeldsProfitDefaultValue; } }
      set {
        _hasBits0 |= 32;
        secretMeldsProfit_ = value;
      }
    }
    /// <summary>Gets whether the "secret_melds_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSecretMeldsProfit {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "secret_melds_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSecretMeldsProfit() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "bonus_cards_profit" field.</summary>
    public const int BonusCardsProfitFieldNumber = 9;
    private readonly static long BonusCardsProfitDefaultValue = 0L;

    private long bonusCardsProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BonusCardsProfit {
      get { if ((_hasBits0 & 64) != 0) { return bonusCardsProfit_; } else { return BonusCardsProfitDefaultValue; } }
      set {
        _hasBits0 |= 64;
        bonusCardsProfit_ = value;
      }
    }
    /// <summary>Gets whether the "bonus_cards_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBonusCardsProfit {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "bonus_cards_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBonusCardsProfit() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "burned_profit" field.</summary>
    public const int BurnedProfitFieldNumber = 10;
    private readonly static long BurnedProfitDefaultValue = 0L;

    private long burnedProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BurnedProfit {
      get { if ((_hasBits0 & 128) != 0) { return burnedProfit_; } else { return BurnedProfitDefaultValue; } }
      set {
        _hasBits0 |= 128;
        burnedProfit_ = value;
      }
    }
    /// <summary>Gets whether the "burned_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBurnedProfit {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "burned_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBurnedProfit() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "fight_profit" field.</summary>
    public const int FightProfitFieldNumber = 11;
    private readonly static long FightProfitDefaultValue = 0L;

    private long fightProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long FightProfit {
      get { if ((_hasBits0 & 256) != 0) { return fightProfit_; } else { return FightProfitDefaultValue; } }
      set {
        _hasBits0 |= 256;
        fightProfit_ = value;
      }
    }
    /// <summary>Gets whether the "fight_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFightProfit {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "fight_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFightProfit() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "hitpot_profit" field.</summary>
    public const int HitpotProfitFieldNumber = 12;
    private readonly static long HitpotProfitDefaultValue = 0L;

    private long hitpotProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long HitpotProfit {
      get { if ((_hasBits0 & 512) != 0) { return hitpotProfit_; } else { return HitpotProfitDefaultValue; } }
      set {
        _hasBits0 |= 512;
        hitpotProfit_ = value;
      }
    }
    /// <summary>Gets whether the "hitpot_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHitpotProfit {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "hitpot_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHitpotProfit() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "sagasa_profit" field.</summary>
    public const int SagasaProfitFieldNumber = 13;
    private readonly static long SagasaProfitDefaultValue = 0L;

    private long sagasaProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SagasaProfit {
      get { if ((_hasBits0 & 1024) != 0) { return sagasaProfit_; } else { return SagasaProfitDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        sagasaProfit_ = value;
      }
    }
    /// <summary>Gets whether the "sagasa_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSagasaProfit {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "sagasa_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSagasaProfit() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "total_profit" field.</summary>
    public const int TotalProfitFieldNumber = 14;
    private readonly static long TotalProfitDefaultValue = 0L;

    private long totalProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalProfit {
      get { if ((_hasBits0 & 2048) != 0) { return totalProfit_; } else { return TotalProfitDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        totalProfit_ = value;
      }
    }
    /// <summary>Gets whether the "total_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalProfit {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "total_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalProfit() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "game_total_profit" field.</summary>
    public const int GameTotalProfitFieldNumber = 15;
    private readonly static long GameTotalProfitDefaultValue = 0L;

    private long gameTotalProfit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long GameTotalProfit {
      get { if ((_hasBits0 & 4096) != 0) { return gameTotalProfit_; } else { return GameTotalProfitDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        gameTotalProfit_ = value;
      }
    }
    /// <summary>Gets whether the "game_total_profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameTotalProfit {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "game_total_profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameTotalProfit() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "player_info" field.</summary>
    public const int PlayerInfoFieldNumber = 16;
    private global::Texas.Protocol.TongitsPlayerInfo playerInfo_;
    /// <summary>
    /// 牌局回顧時需要使用到
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TongitsPlayerInfo PlayerInfo {
      get { return playerInfo_; }
      set {
        playerInfo_ = value;
      }
    }

    /// <summary>Field number for the "bonus_cards" field.</summary>
    public const int BonusCardsFieldNumber = 17;
    private static readonly pb::FieldCodec<int> _repeated_bonusCards_codec
        = pb::FieldCodec.ForInt32(138);
    private readonly pbc::RepeatedField<int> bonusCards_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 該玩家所有的 bonus card 包括手上與桌上的
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> BonusCards {
      get { return bonusCards_; }
    }

    /// <summary>Field number for the "playing_info" field.</summary>
    public const int PlayingInfoFieldNumber = 18;
    private readonly static global::Texas.Protocol.TongitsPlayingInfo PlayingInfoDefaultValue = global::Texas.Protocol.TongitsPlayingInfo.Wait;

    private global::Texas.Protocol.TongitsPlayingInfo playingInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TongitsPlayingInfo PlayingInfo {
      get { if ((_hasBits0 & 8192) != 0) { return playingInfo_; } else { return PlayingInfoDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        playingInfo_ = value;
      }
    }
    /// <summary>Gets whether the "playing_info" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayingInfo {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "playing_info" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayingInfo() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "get_hitpot_pool" field.</summary>
    public const int GetHitpotPoolFieldNumber = 19;
    private readonly static long GetHitpotPoolDefaultValue = 0L;

    private long getHitpotPool_;
    /// <summary>
    /// 該玩家獲得的 hitpot 獎池
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long GetHitpotPool {
      get { if ((_hasBits0 & 16384) != 0) { return getHitpotPool_; } else { return GetHitpotPoolDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        getHitpotPool_ = value;
      }
    }
    /// <summary>Gets whether the "get_hitpot_pool" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGetHitpotPool {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "get_hitpot_pool" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGetHitpotPool() {
      _hasBits0 &= ~16384;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsSimplifiedGameResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsSimplifiedGameResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Seatid != other.Seatid) return false;
      if (Chips != other.Chips) return false;
      if (!object.Equals(HandCards, other.HandCards)) return false;
      if(!tableMelds_.Equals(other.tableMelds_)) return false;
      if (BaseProfit != other.BaseProfit) return false;
      if (TongitsProfit != other.TongitsProfit) return false;
      if (SecretMeldsProfit != other.SecretMeldsProfit) return false;
      if (BonusCardsProfit != other.BonusCardsProfit) return false;
      if (BurnedProfit != other.BurnedProfit) return false;
      if (FightProfit != other.FightProfit) return false;
      if (HitpotProfit != other.HitpotProfit) return false;
      if (SagasaProfit != other.SagasaProfit) return false;
      if (TotalProfit != other.TotalProfit) return false;
      if (GameTotalProfit != other.GameTotalProfit) return false;
      if (!object.Equals(PlayerInfo, other.PlayerInfo)) return false;
      if(!bonusCards_.Equals(other.bonusCards_)) return false;
      if (PlayingInfo != other.PlayingInfo) return false;
      if (GetHitpotPool != other.GetHitpotPool) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasChips) hash ^= Chips.GetHashCode();
      if (handCards_ != null) hash ^= HandCards.GetHashCode();
      hash ^= tableMelds_.GetHashCode();
      if (HasBaseProfit) hash ^= BaseProfit.GetHashCode();
      if (HasTongitsProfit) hash ^= TongitsProfit.GetHashCode();
      if (HasSecretMeldsProfit) hash ^= SecretMeldsProfit.GetHashCode();
      if (HasBonusCardsProfit) hash ^= BonusCardsProfit.GetHashCode();
      if (HasBurnedProfit) hash ^= BurnedProfit.GetHashCode();
      if (HasFightProfit) hash ^= FightProfit.GetHashCode();
      if (HasHitpotProfit) hash ^= HitpotProfit.GetHashCode();
      if (HasSagasaProfit) hash ^= SagasaProfit.GetHashCode();
      if (HasTotalProfit) hash ^= TotalProfit.GetHashCode();
      if (HasGameTotalProfit) hash ^= GameTotalProfit.GetHashCode();
      if (playerInfo_ != null) hash ^= PlayerInfo.GetHashCode();
      hash ^= bonusCards_.GetHashCode();
      if (HasPlayingInfo) hash ^= PlayingInfo.GetHashCode();
      if (HasGetHitpotPool) hash ^= GetHitpotPool.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasChips) {
        output.WriteRawTag(24);
        output.WriteInt64(Chips);
      }
      if (handCards_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(HandCards);
      }
      tableMelds_.WriteTo(output, _repeated_tableMelds_codec);
      if (HasBaseProfit) {
        output.WriteRawTag(48);
        output.WriteInt64(BaseProfit);
      }
      if (HasTongitsProfit) {
        output.WriteRawTag(56);
        output.WriteInt64(TongitsProfit);
      }
      if (HasSecretMeldsProfit) {
        output.WriteRawTag(64);
        output.WriteInt64(SecretMeldsProfit);
      }
      if (HasBonusCardsProfit) {
        output.WriteRawTag(72);
        output.WriteInt64(BonusCardsProfit);
      }
      if (HasBurnedProfit) {
        output.WriteRawTag(80);
        output.WriteInt64(BurnedProfit);
      }
      if (HasFightProfit) {
        output.WriteRawTag(88);
        output.WriteInt64(FightProfit);
      }
      if (HasHitpotProfit) {
        output.WriteRawTag(96);
        output.WriteInt64(HitpotProfit);
      }
      if (HasSagasaProfit) {
        output.WriteRawTag(104);
        output.WriteInt64(SagasaProfit);
      }
      if (HasTotalProfit) {
        output.WriteRawTag(112);
        output.WriteInt64(TotalProfit);
      }
      if (HasGameTotalProfit) {
        output.WriteRawTag(120);
        output.WriteInt64(GameTotalProfit);
      }
      if (playerInfo_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(PlayerInfo);
      }
      bonusCards_.WriteTo(output, _repeated_bonusCards_codec);
      if (HasPlayingInfo) {
        output.WriteRawTag(144, 1);
        output.WriteEnum((int) PlayingInfo);
      }
      if (HasGetHitpotPool) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(GetHitpotPool);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasChips) {
        output.WriteRawTag(24);
        output.WriteInt64(Chips);
      }
      if (handCards_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(HandCards);
      }
      tableMelds_.WriteTo(ref output, _repeated_tableMelds_codec);
      if (HasBaseProfit) {
        output.WriteRawTag(48);
        output.WriteInt64(BaseProfit);
      }
      if (HasTongitsProfit) {
        output.WriteRawTag(56);
        output.WriteInt64(TongitsProfit);
      }
      if (HasSecretMeldsProfit) {
        output.WriteRawTag(64);
        output.WriteInt64(SecretMeldsProfit);
      }
      if (HasBonusCardsProfit) {
        output.WriteRawTag(72);
        output.WriteInt64(BonusCardsProfit);
      }
      if (HasBurnedProfit) {
        output.WriteRawTag(80);
        output.WriteInt64(BurnedProfit);
      }
      if (HasFightProfit) {
        output.WriteRawTag(88);
        output.WriteInt64(FightProfit);
      }
      if (HasHitpotProfit) {
        output.WriteRawTag(96);
        output.WriteInt64(HitpotProfit);
      }
      if (HasSagasaProfit) {
        output.WriteRawTag(104);
        output.WriteInt64(SagasaProfit);
      }
      if (HasTotalProfit) {
        output.WriteRawTag(112);
        output.WriteInt64(TotalProfit);
      }
      if (HasGameTotalProfit) {
        output.WriteRawTag(120);
        output.WriteInt64(GameTotalProfit);
      }
      if (playerInfo_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(PlayerInfo);
      }
      bonusCards_.WriteTo(ref output, _repeated_bonusCards_codec);
      if (HasPlayingInfo) {
        output.WriteRawTag(144, 1);
        output.WriteEnum((int) PlayingInfo);
      }
      if (HasGetHitpotPool) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(GetHitpotPool);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Chips);
      }
      if (handCards_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HandCards);
      }
      size += tableMelds_.CalculateSize(_repeated_tableMelds_codec);
      if (HasBaseProfit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BaseProfit);
      }
      if (HasTongitsProfit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TongitsProfit);
      }
      if (HasSecretMeldsProfit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SecretMeldsProfit);
      }
      if (HasBonusCardsProfit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BonusCardsProfit);
      }
      if (HasBurnedProfit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BurnedProfit);
      }
      if (HasFightProfit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FightProfit);
      }
      if (HasHitpotProfit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HitpotProfit);
      }
      if (HasSagasaProfit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SagasaProfit);
      }
      if (HasTotalProfit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalProfit);
      }
      if (HasGameTotalProfit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(GameTotalProfit);
      }
      if (playerInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PlayerInfo);
      }
      size += bonusCards_.CalculateSize(_repeated_bonusCards_codec);
      if (HasPlayingInfo) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PlayingInfo);
      }
      if (HasGetHitpotPool) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(GetHitpotPool);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsSimplifiedGameResult other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasChips) {
        Chips = other.Chips;
      }
      if (other.handCards_ != null) {
        if (handCards_ == null) {
          HandCards = new global::Texas.Protocol.TongitsHandCard();
        }
        HandCards.MergeFrom(other.HandCards);
      }
      tableMelds_.Add(other.tableMelds_);
      if (other.HasBaseProfit) {
        BaseProfit = other.BaseProfit;
      }
      if (other.HasTongitsProfit) {
        TongitsProfit = other.TongitsProfit;
      }
      if (other.HasSecretMeldsProfit) {
        SecretMeldsProfit = other.SecretMeldsProfit;
      }
      if (other.HasBonusCardsProfit) {
        BonusCardsProfit = other.BonusCardsProfit;
      }
      if (other.HasBurnedProfit) {
        BurnedProfit = other.BurnedProfit;
      }
      if (other.HasFightProfit) {
        FightProfit = other.FightProfit;
      }
      if (other.HasHitpotProfit) {
        HitpotProfit = other.HitpotProfit;
      }
      if (other.HasSagasaProfit) {
        SagasaProfit = other.SagasaProfit;
      }
      if (other.HasTotalProfit) {
        TotalProfit = other.TotalProfit;
      }
      if (other.HasGameTotalProfit) {
        GameTotalProfit = other.GameTotalProfit;
      }
      if (other.playerInfo_ != null) {
        if (playerInfo_ == null) {
          PlayerInfo = new global::Texas.Protocol.TongitsPlayerInfo();
        }
        PlayerInfo.MergeFrom(other.PlayerInfo);
      }
      bonusCards_.Add(other.bonusCards_);
      if (other.HasPlayingInfo) {
        PlayingInfo = other.PlayingInfo;
      }
      if (other.HasGetHitpotPool) {
        GetHitpotPool = other.GetHitpotPool;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            Chips = input.ReadInt64();
            break;
          }
          case 34: {
            if (handCards_ == null) {
              HandCards = new global::Texas.Protocol.TongitsHandCard();
            }
            input.ReadMessage(HandCards);
            break;
          }
          case 42: {
            tableMelds_.AddEntriesFrom(input, _repeated_tableMelds_codec);
            break;
          }
          case 48: {
            BaseProfit = input.ReadInt64();
            break;
          }
          case 56: {
            TongitsProfit = input.ReadInt64();
            break;
          }
          case 64: {
            SecretMeldsProfit = input.ReadInt64();
            break;
          }
          case 72: {
            BonusCardsProfit = input.ReadInt64();
            break;
          }
          case 80: {
            BurnedProfit = input.ReadInt64();
            break;
          }
          case 88: {
            FightProfit = input.ReadInt64();
            break;
          }
          case 96: {
            HitpotProfit = input.ReadInt64();
            break;
          }
          case 104: {
            SagasaProfit = input.ReadInt64();
            break;
          }
          case 112: {
            TotalProfit = input.ReadInt64();
            break;
          }
          case 120: {
            GameTotalProfit = input.ReadInt64();
            break;
          }
          case 130: {
            if (playerInfo_ == null) {
              PlayerInfo = new global::Texas.Protocol.TongitsPlayerInfo();
            }
            input.ReadMessage(PlayerInfo);
            break;
          }
          case 138:
          case 136: {
            bonusCards_.AddEntriesFrom(input, _repeated_bonusCards_codec);
            break;
          }
          case 144: {
            PlayingInfo = (global::Texas.Protocol.TongitsPlayingInfo) input.ReadEnum();
            break;
          }
          case 152: {
            GetHitpotPool = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            Chips = input.ReadInt64();
            break;
          }
          case 34: {
            if (handCards_ == null) {
              HandCards = new global::Texas.Protocol.TongitsHandCard();
            }
            input.ReadMessage(HandCards);
            break;
          }
          case 42: {
            tableMelds_.AddEntriesFrom(ref input, _repeated_tableMelds_codec);
            break;
          }
          case 48: {
            BaseProfit = input.ReadInt64();
            break;
          }
          case 56: {
            TongitsProfit = input.ReadInt64();
            break;
          }
          case 64: {
            SecretMeldsProfit = input.ReadInt64();
            break;
          }
          case 72: {
            BonusCardsProfit = input.ReadInt64();
            break;
          }
          case 80: {
            BurnedProfit = input.ReadInt64();
            break;
          }
          case 88: {
            FightProfit = input.ReadInt64();
            break;
          }
          case 96: {
            HitpotProfit = input.ReadInt64();
            break;
          }
          case 104: {
            SagasaProfit = input.ReadInt64();
            break;
          }
          case 112: {
            TotalProfit = input.ReadInt64();
            break;
          }
          case 120: {
            GameTotalProfit = input.ReadInt64();
            break;
          }
          case 130: {
            if (playerInfo_ == null) {
              PlayerInfo = new global::Texas.Protocol.TongitsPlayerInfo();
            }
            input.ReadMessage(PlayerInfo);
            break;
          }
          case 138:
          case 136: {
            bonusCards_.AddEntriesFrom(ref input, _repeated_bonusCards_codec);
            break;
          }
          case 144: {
            PlayingInfo = (global::Texas.Protocol.TongitsPlayingInfo) input.ReadEnum();
            break;
          }
          case 152: {
            GetHitpotPool = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///簡化版結算結果
  /// </summary>
  public sealed partial class TongitsSimplifiedGameResultBRC : pb::IMessage<TongitsSimplifiedGameResultBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsSimplifiedGameResultBRC> _parser = new pb::MessageParser<TongitsSimplifiedGameResultBRC>(() => new TongitsSimplifiedGameResultBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsSimplifiedGameResultBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSimplifiedGameResultBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSimplifiedGameResultBRC(TongitsSimplifiedGameResultBRC other) : this() {
      _hasBits0 = other._hasBits0;
      gameResult_ = other.gameResult_.Clone();
      stageLeftTime_ = other.stageLeftTime_;
      gamesetEndTime_ = other.gamesetEndTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSimplifiedGameResultBRC Clone() {
      return new TongitsSimplifiedGameResultBRC(this);
    }

    /// <summary>Field number for the "game_result" field.</summary>
    public const int GameResultFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.TongitsSimplifiedGameResult> _repeated_gameResult_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.TongitsSimplifiedGameResult.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.TongitsSimplifiedGameResult> gameResult_ = new pbc::RepeatedField<global::Texas.Protocol.TongitsSimplifiedGameResult>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.TongitsSimplifiedGameResult> GameResult {
      get { return gameResult_; }
    }

    /// <summary>Field number for the "stage_left_time" field.</summary>
    public const int StageLeftTimeFieldNumber = 2;
    private readonly static int StageLeftTimeDefaultValue = 0;

    private int stageLeftTime_;
    /// <summary>
    ///從結算到下局開始的伺服器計時時間
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StageLeftTime {
      get { if ((_hasBits0 & 1) != 0) { return stageLeftTime_; } else { return StageLeftTimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        stageLeftTime_ = value;
      }
    }
    /// <summary>Gets whether the "stage_left_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStageLeftTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "stage_left_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStageLeftTime() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "gameset_end_time" field.</summary>
    public const int GamesetEndTimeFieldNumber = 3;
    private readonly static int GamesetEndTimeDefaultValue = 0;

    private int gamesetEndTime_;
    /// <summary>
    ///手牌結算時間，主要用於手牌回顧顯示時間
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GamesetEndTime {
      get { if ((_hasBits0 & 2) != 0) { return gamesetEndTime_; } else { return GamesetEndTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        gamesetEndTime_ = value;
      }
    }
    /// <summary>Gets whether the "gameset_end_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGamesetEndTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "gameset_end_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGamesetEndTime() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsSimplifiedGameResultBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsSimplifiedGameResultBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gameResult_.Equals(other.gameResult_)) return false;
      if (StageLeftTime != other.StageLeftTime) return false;
      if (GamesetEndTime != other.GamesetEndTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gameResult_.GetHashCode();
      if (HasStageLeftTime) hash ^= StageLeftTime.GetHashCode();
      if (HasGamesetEndTime) hash ^= GamesetEndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      gameResult_.WriteTo(output, _repeated_gameResult_codec);
      if (HasStageLeftTime) {
        output.WriteRawTag(16);
        output.WriteInt32(StageLeftTime);
      }
      if (HasGamesetEndTime) {
        output.WriteRawTag(24);
        output.WriteInt32(GamesetEndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      gameResult_.WriteTo(ref output, _repeated_gameResult_codec);
      if (HasStageLeftTime) {
        output.WriteRawTag(16);
        output.WriteInt32(StageLeftTime);
      }
      if (HasGamesetEndTime) {
        output.WriteRawTag(24);
        output.WriteInt32(GamesetEndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += gameResult_.CalculateSize(_repeated_gameResult_codec);
      if (HasStageLeftTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageLeftTime);
      }
      if (HasGamesetEndTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GamesetEndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsSimplifiedGameResultBRC other) {
      if (other == null) {
        return;
      }
      gameResult_.Add(other.gameResult_);
      if (other.HasStageLeftTime) {
        StageLeftTime = other.StageLeftTime;
      }
      if (other.HasGamesetEndTime) {
        GamesetEndTime = other.GamesetEndTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            gameResult_.AddEntriesFrom(input, _repeated_gameResult_codec);
            break;
          }
          case 16: {
            StageLeftTime = input.ReadInt32();
            break;
          }
          case 24: {
            GamesetEndTime = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            gameResult_.AddEntriesFrom(ref input, _repeated_gameResult_codec);
            break;
          }
          case 16: {
            StageLeftTime = input.ReadInt32();
            break;
          }
          case 24: {
            GamesetEndTime = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///牌桌的遊玩狀態，一桌一個
  /// </summary>
  public sealed partial class TongitsPlayingStatus : pb::IMessage<TongitsPlayingStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsPlayingStatus> _parser = new pb::MessageParser<TongitsPlayingStatus>(() => new TongitsPlayingStatus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsPlayingStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsPlayingStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsPlayingStatus(TongitsPlayingStatus other) : this() {
      _hasBits0 = other._hasBits0;
      stage_ = other.stage_;
      actionSeatid_ = other.actionSeatid_;
      actionTime_ = other.actionTime_;
      dumpCards_ = other.dumpCards_.Clone();
      stackNum_ = other.stackNum_;
      canFight_ = other.canFight_;
      canChow_ = other.canChow_;
      hitpotPool_ = other.hitpotPool_;
      lastWinnerUid_ = other.lastWinnerUid_;
      hitpotStack_ = other.hitpotStack_;
      seats_ = other.seats_.Clone();
      simplifiedGameResult_ = other.simplifiedGameResult_ != null ? other.simplifiedGameResult_.Clone() : null;
      addActionTimeCost_ = other.addActionTimeCost_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsPlayingStatus Clone() {
      return new TongitsPlayingStatus(this);
    }

    /// <summary>Field number for the "stage" field.</summary>
    public const int StageFieldNumber = 1;
    private readonly static int StageDefaultValue = 0;

    private int stage_;
    /// <summary>
    /// 遊戲階段  
    /// 0 = 房間尚未開始
    /// 1 = 遊戲開始的延遲時間(房間開始倒數三秒或者玩家坐下觸發遊戲開始的短延遲)
    /// 2 = 回合進行中
    /// 3 = Fight 中
    /// 4 = 結算中(前端基本上收不到這個階段)
    /// 5 = 遊戲結束的延遲時間(根據表演內容進行延遲)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Stage {
      get { if ((_hasBits0 & 1) != 0) { return stage_; } else { return StageDefaultValue; } }
      set {
        _hasBits0 |= 1;
        stage_ = value;
      }
    }
    /// <summary>Gets whether the "stage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStage {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "stage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStage() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "action_seatid" field.</summary>
    public const int ActionSeatidFieldNumber = 2;
    private readonly static int ActionSeatidDefaultValue = 0;

    private int actionSeatid_;
    /// <summary>
    /// stage = 2 時的資訊
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActionSeatid {
      get { if ((_hasBits0 & 2) != 0) { return actionSeatid_; } else { return ActionSeatidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        actionSeatid_ = value;
      }
    }
    /// <summary>Gets whether the "action_seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActionSeatid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "action_seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActionSeatid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "action_time" field.</summary>
    public const int ActionTimeFieldNumber = 3;
    private readonly static int ActionTimeDefaultValue = 0;

    private int actionTime_;
    /// <summary>
    ///还剩下的行动时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActionTime {
      get { if ((_hasBits0 & 4) != 0) { return actionTime_; } else { return ActionTimeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        actionTime_ = value;
      }
    }
    /// <summary>Gets whether the "action_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActionTime {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "action_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActionTime() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "dump_cards" field.</summary>
    public const int DumpCardsFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_dumpCards_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> dumpCards_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> DumpCards {
      get { return dumpCards_; }
    }

    /// <summary>Field number for the "stack_num" field.</summary>
    public const int StackNumFieldNumber = 5;
    private readonly static int StackNumDefaultValue = 0;

    private int stackNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StackNum {
      get { if ((_hasBits0 & 8) != 0) { return stackNum_; } else { return StackNumDefaultValue; } }
      set {
        _hasBits0 |= 8;
        stackNum_ = value;
      }
    }
    /// <summary>Gets whether the "stack_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStackNum {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "stack_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStackNum() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "can_fight" field.</summary>
    public const int CanFightFieldNumber = 6;
    private readonly static bool CanFightDefaultValue = false;

    private bool canFight_;
    /// <summary>
    /// 該操作玩家於 pre_action 能做的選項
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanFight {
      get { if ((_hasBits0 & 16) != 0) { return canFight_; } else { return CanFightDefaultValue; } }
      set {
        _hasBits0 |= 16;
        canFight_ = value;
      }
    }
    /// <summary>Gets whether the "can_fight" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCanFight {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "can_fight" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCanFight() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "can_chow" field.</summary>
    public const int CanChowFieldNumber = 7;
    private readonly static bool CanChowDefaultValue = false;

    private bool canChow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanChow {
      get { if ((_hasBits0 & 32) != 0) { return canChow_; } else { return CanChowDefaultValue; } }
      set {
        _hasBits0 |= 32;
        canChow_ = value;
      }
    }
    /// <summary>Gets whether the "can_chow" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCanChow {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "can_chow" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCanChow() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "hitpot_pool" field.</summary>
    public const int HitpotPoolFieldNumber = 8;
    private readonly static long HitpotPoolDefaultValue = 0L;

    private long hitpotPool_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long HitpotPool {
      get { if ((_hasBits0 & 64) != 0) { return hitpotPool_; } else { return HitpotPoolDefaultValue; } }
      set {
        _hasBits0 |= 64;
        hitpotPool_ = value;
      }
    }
    /// <summary>Gets whether the "hitpot_pool" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHitpotPool {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "hitpot_pool" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHitpotPool() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "last_winner_uid" field.</summary>
    public const int LastWinnerUidFieldNumber = 9;
    private readonly static long LastWinnerUidDefaultValue = 0L;

    private long lastWinnerUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LastWinnerUid {
      get { if ((_hasBits0 & 128) != 0) { return lastWinnerUid_; } else { return LastWinnerUidDefaultValue; } }
      set {
        _hasBits0 |= 128;
        lastWinnerUid_ = value;
      }
    }
    /// <summary>Gets whether the "last_winner_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLastWinnerUid {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "last_winner_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLastWinnerUid() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "hitpot_stack" field.</summary>
    public const int HitpotStackFieldNumber = 10;
    private readonly static int HitpotStackDefaultValue = 0;

    private int hitpotStack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HitpotStack {
      get { if ((_hasBits0 & 256) != 0) { return hitpotStack_; } else { return HitpotStackDefaultValue; } }
      set {
        _hasBits0 |= 256;
        hitpotStack_ = value;
      }
    }
    /// <summary>Gets whether the "hitpot_stack" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHitpotStack {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "hitpot_stack" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHitpotStack() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "seats" field.</summary>
    public const int SeatsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Texas.Protocol.TongitsSeatStatus> _repeated_seats_codec
        = pb::FieldCodec.ForMessage(90, global::Texas.Protocol.TongitsSeatStatus.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.TongitsSeatStatus> seats_ = new pbc::RepeatedField<global::Texas.Protocol.TongitsSeatStatus>();
    /// <summary>
    ///座位的狀態
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.TongitsSeatStatus> Seats {
      get { return seats_; }
    }

    /// <summary>Field number for the "simplified_game_result" field.</summary>
    public const int SimplifiedGameResultFieldNumber = 12;
    private global::Texas.Protocol.TongitsSimplifiedGameResultBRC simplifiedGameResult_;
    /// <summary>
    ///當stage = 5 (GAME_END_DELAY)階段才會有
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TongitsSimplifiedGameResultBRC SimplifiedGameResult {
      get { return simplifiedGameResult_; }
      set {
        simplifiedGameResult_ = value;
      }
    }

    /// <summary>Field number for the "add_action_time_cost" field.</summary>
    public const int AddActionTimeCostFieldNumber = 13;
    private readonly static int AddActionTimeCostDefaultValue = 0;

    private int addActionTimeCost_;
    /// <summary>
    /// 請求玩家自己的 延时花费， -1表示延时不可用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AddActionTimeCost {
      get { if ((_hasBits0 & 512) != 0) { return addActionTimeCost_; } else { return AddActionTimeCostDefaultValue; } }
      set {
        _hasBits0 |= 512;
        addActionTimeCost_ = value;
      }
    }
    /// <summary>Gets whether the "add_action_time_cost" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAddActionTimeCost {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "add_action_time_cost" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAddActionTimeCost() {
      _hasBits0 &= ~512;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsPlayingStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsPlayingStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Stage != other.Stage) return false;
      if (ActionSeatid != other.ActionSeatid) return false;
      if (ActionTime != other.ActionTime) return false;
      if(!dumpCards_.Equals(other.dumpCards_)) return false;
      if (StackNum != other.StackNum) return false;
      if (CanFight != other.CanFight) return false;
      if (CanChow != other.CanChow) return false;
      if (HitpotPool != other.HitpotPool) return false;
      if (LastWinnerUid != other.LastWinnerUid) return false;
      if (HitpotStack != other.HitpotStack) return false;
      if(!seats_.Equals(other.seats_)) return false;
      if (!object.Equals(SimplifiedGameResult, other.SimplifiedGameResult)) return false;
      if (AddActionTimeCost != other.AddActionTimeCost) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStage) hash ^= Stage.GetHashCode();
      if (HasActionSeatid) hash ^= ActionSeatid.GetHashCode();
      if (HasActionTime) hash ^= ActionTime.GetHashCode();
      hash ^= dumpCards_.GetHashCode();
      if (HasStackNum) hash ^= StackNum.GetHashCode();
      if (HasCanFight) hash ^= CanFight.GetHashCode();
      if (HasCanChow) hash ^= CanChow.GetHashCode();
      if (HasHitpotPool) hash ^= HitpotPool.GetHashCode();
      if (HasLastWinnerUid) hash ^= LastWinnerUid.GetHashCode();
      if (HasHitpotStack) hash ^= HitpotStack.GetHashCode();
      hash ^= seats_.GetHashCode();
      if (simplifiedGameResult_ != null) hash ^= SimplifiedGameResult.GetHashCode();
      if (HasAddActionTimeCost) hash ^= AddActionTimeCost.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasStage) {
        output.WriteRawTag(8);
        output.WriteInt32(Stage);
      }
      if (HasActionSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(ActionSeatid);
      }
      if (HasActionTime) {
        output.WriteRawTag(24);
        output.WriteInt32(ActionTime);
      }
      dumpCards_.WriteTo(output, _repeated_dumpCards_codec);
      if (HasStackNum) {
        output.WriteRawTag(40);
        output.WriteInt32(StackNum);
      }
      if (HasCanFight) {
        output.WriteRawTag(48);
        output.WriteBool(CanFight);
      }
      if (HasCanChow) {
        output.WriteRawTag(56);
        output.WriteBool(CanChow);
      }
      if (HasHitpotPool) {
        output.WriteRawTag(64);
        output.WriteInt64(HitpotPool);
      }
      if (HasLastWinnerUid) {
        output.WriteRawTag(72);
        output.WriteInt64(LastWinnerUid);
      }
      if (HasHitpotStack) {
        output.WriteRawTag(80);
        output.WriteInt32(HitpotStack);
      }
      seats_.WriteTo(output, _repeated_seats_codec);
      if (simplifiedGameResult_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(SimplifiedGameResult);
      }
      if (HasAddActionTimeCost) {
        output.WriteRawTag(104);
        output.WriteInt32(AddActionTimeCost);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasStage) {
        output.WriteRawTag(8);
        output.WriteInt32(Stage);
      }
      if (HasActionSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(ActionSeatid);
      }
      if (HasActionTime) {
        output.WriteRawTag(24);
        output.WriteInt32(ActionTime);
      }
      dumpCards_.WriteTo(ref output, _repeated_dumpCards_codec);
      if (HasStackNum) {
        output.WriteRawTag(40);
        output.WriteInt32(StackNum);
      }
      if (HasCanFight) {
        output.WriteRawTag(48);
        output.WriteBool(CanFight);
      }
      if (HasCanChow) {
        output.WriteRawTag(56);
        output.WriteBool(CanChow);
      }
      if (HasHitpotPool) {
        output.WriteRawTag(64);
        output.WriteInt64(HitpotPool);
      }
      if (HasLastWinnerUid) {
        output.WriteRawTag(72);
        output.WriteInt64(LastWinnerUid);
      }
      if (HasHitpotStack) {
        output.WriteRawTag(80);
        output.WriteInt32(HitpotStack);
      }
      seats_.WriteTo(ref output, _repeated_seats_codec);
      if (simplifiedGameResult_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(SimplifiedGameResult);
      }
      if (HasAddActionTimeCost) {
        output.WriteRawTag(104);
        output.WriteInt32(AddActionTimeCost);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasStage) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stage);
      }
      if (HasActionSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionSeatid);
      }
      if (HasActionTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionTime);
      }
      size += dumpCards_.CalculateSize(_repeated_dumpCards_codec);
      if (HasStackNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StackNum);
      }
      if (HasCanFight) {
        size += 1 + 1;
      }
      if (HasCanChow) {
        size += 1 + 1;
      }
      if (HasHitpotPool) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HitpotPool);
      }
      if (HasLastWinnerUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastWinnerUid);
      }
      if (HasHitpotStack) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HitpotStack);
      }
      size += seats_.CalculateSize(_repeated_seats_codec);
      if (simplifiedGameResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SimplifiedGameResult);
      }
      if (HasAddActionTimeCost) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AddActionTimeCost);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsPlayingStatus other) {
      if (other == null) {
        return;
      }
      if (other.HasStage) {
        Stage = other.Stage;
      }
      if (other.HasActionSeatid) {
        ActionSeatid = other.ActionSeatid;
      }
      if (other.HasActionTime) {
        ActionTime = other.ActionTime;
      }
      dumpCards_.Add(other.dumpCards_);
      if (other.HasStackNum) {
        StackNum = other.StackNum;
      }
      if (other.HasCanFight) {
        CanFight = other.CanFight;
      }
      if (other.HasCanChow) {
        CanChow = other.CanChow;
      }
      if (other.HasHitpotPool) {
        HitpotPool = other.HitpotPool;
      }
      if (other.HasLastWinnerUid) {
        LastWinnerUid = other.LastWinnerUid;
      }
      if (other.HasHitpotStack) {
        HitpotStack = other.HitpotStack;
      }
      seats_.Add(other.seats_);
      if (other.simplifiedGameResult_ != null) {
        if (simplifiedGameResult_ == null) {
          SimplifiedGameResult = new global::Texas.Protocol.TongitsSimplifiedGameResultBRC();
        }
        SimplifiedGameResult.MergeFrom(other.SimplifiedGameResult);
      }
      if (other.HasAddActionTimeCost) {
        AddActionTimeCost = other.AddActionTimeCost;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Stage = input.ReadInt32();
            break;
          }
          case 16: {
            ActionSeatid = input.ReadInt32();
            break;
          }
          case 24: {
            ActionTime = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            dumpCards_.AddEntriesFrom(input, _repeated_dumpCards_codec);
            break;
          }
          case 40: {
            StackNum = input.ReadInt32();
            break;
          }
          case 48: {
            CanFight = input.ReadBool();
            break;
          }
          case 56: {
            CanChow = input.ReadBool();
            break;
          }
          case 64: {
            HitpotPool = input.ReadInt64();
            break;
          }
          case 72: {
            LastWinnerUid = input.ReadInt64();
            break;
          }
          case 80: {
            HitpotStack = input.ReadInt32();
            break;
          }
          case 90: {
            seats_.AddEntriesFrom(input, _repeated_seats_codec);
            break;
          }
          case 98: {
            if (simplifiedGameResult_ == null) {
              SimplifiedGameResult = new global::Texas.Protocol.TongitsSimplifiedGameResultBRC();
            }
            input.ReadMessage(SimplifiedGameResult);
            break;
          }
          case 104: {
            AddActionTimeCost = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Stage = input.ReadInt32();
            break;
          }
          case 16: {
            ActionSeatid = input.ReadInt32();
            break;
          }
          case 24: {
            ActionTime = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            dumpCards_.AddEntriesFrom(ref input, _repeated_dumpCards_codec);
            break;
          }
          case 40: {
            StackNum = input.ReadInt32();
            break;
          }
          case 48: {
            CanFight = input.ReadBool();
            break;
          }
          case 56: {
            CanChow = input.ReadBool();
            break;
          }
          case 64: {
            HitpotPool = input.ReadInt64();
            break;
          }
          case 72: {
            LastWinnerUid = input.ReadInt64();
            break;
          }
          case 80: {
            HitpotStack = input.ReadInt32();
            break;
          }
          case 90: {
            seats_.AddEntriesFrom(ref input, _repeated_seats_codec);
            break;
          }
          case 98: {
            if (simplifiedGameResult_ == null) {
              SimplifiedGameResult = new global::Texas.Protocol.TongitsSimplifiedGameResultBRC();
            }
            input.ReadMessage(SimplifiedGameResult);
            break;
          }
          case 104: {
            AddActionTimeCost = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///房間狀態
  /// </summary>
  public sealed partial class TongitsRoomStatus : pb::IMessage<TongitsRoomStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsRoomStatus> _parser = new pb::MessageParser<TongitsRoomStatus>(() => new TongitsRoomStatus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsRoomStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsRoomStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsRoomStatus(TongitsRoomStatus other) : this() {
      _hasBits0 = other._hasBits0;
      playingStatus_ = other.playingStatus_ != null ? other.playingStatus_.Clone() : null;
      isStarted_ = other.isStarted_;
      roomLeftTime_ = other.roomLeftTime_;
      observers_ = other.observers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsRoomStatus Clone() {
      return new TongitsRoomStatus(this);
    }

    /// <summary>Field number for the "playing_status" field.</summary>
    public const int PlayingStatusFieldNumber = 1;
    private global::Texas.Protocol.TongitsPlayingStatus playingStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TongitsPlayingStatus PlayingStatus {
      get { return playingStatus_; }
      set {
        playingStatus_ = value;
      }
    }

    /// <summary>Field number for the "is_started" field.</summary>
    public const int IsStartedFieldNumber = 2;
    private readonly static bool IsStartedDefaultValue = false;

    private bool isStarted_;
    /// <summary>
    ///房間是否開始?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsStarted {
      get { if ((_hasBits0 & 1) != 0) { return isStarted_; } else { return IsStartedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isStarted_ = value;
      }
    }
    /// <summary>Gets whether the "is_started" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsStarted {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_started" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsStarted() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "room_left_time" field.</summary>
    public const int RoomLeftTimeFieldNumber = 3;
    private readonly static int RoomLeftTimeDefaultValue = 0;

    private int roomLeftTime_;
    /// <summary>
    ///房間剩餘多久時間會關閉
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoomLeftTime {
      get { if ((_hasBits0 & 2) != 0) { return roomLeftTime_; } else { return RoomLeftTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        roomLeftTime_ = value;
      }
    }
    /// <summary>Gets whether the "room_left_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomLeftTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "room_left_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomLeftTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "observers" field.</summary>
    public const int ObserversFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Texas.Protocol.UserBrief> _repeated_observers_codec
        = pb::FieldCodec.ForMessage(34, global::Texas.Protocol.UserBrief.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.UserBrief> observers_ = new pbc::RepeatedField<global::Texas.Protocol.UserBrief>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.UserBrief> Observers {
      get { return observers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsRoomStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsRoomStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PlayingStatus, other.PlayingStatus)) return false;
      if (IsStarted != other.IsStarted) return false;
      if (RoomLeftTime != other.RoomLeftTime) return false;
      if(!observers_.Equals(other.observers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (playingStatus_ != null) hash ^= PlayingStatus.GetHashCode();
      if (HasIsStarted) hash ^= IsStarted.GetHashCode();
      if (HasRoomLeftTime) hash ^= RoomLeftTime.GetHashCode();
      hash ^= observers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (playingStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayingStatus);
      }
      if (HasIsStarted) {
        output.WriteRawTag(16);
        output.WriteBool(IsStarted);
      }
      if (HasRoomLeftTime) {
        output.WriteRawTag(24);
        output.WriteInt32(RoomLeftTime);
      }
      observers_.WriteTo(output, _repeated_observers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (playingStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayingStatus);
      }
      if (HasIsStarted) {
        output.WriteRawTag(16);
        output.WriteBool(IsStarted);
      }
      if (HasRoomLeftTime) {
        output.WriteRawTag(24);
        output.WriteInt32(RoomLeftTime);
      }
      observers_.WriteTo(ref output, _repeated_observers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (playingStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayingStatus);
      }
      if (HasIsStarted) {
        size += 1 + 1;
      }
      if (HasRoomLeftTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomLeftTime);
      }
      size += observers_.CalculateSize(_repeated_observers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsRoomStatus other) {
      if (other == null) {
        return;
      }
      if (other.playingStatus_ != null) {
        if (playingStatus_ == null) {
          PlayingStatus = new global::Texas.Protocol.TongitsPlayingStatus();
        }
        PlayingStatus.MergeFrom(other.PlayingStatus);
      }
      if (other.HasIsStarted) {
        IsStarted = other.IsStarted;
      }
      if (other.HasRoomLeftTime) {
        RoomLeftTime = other.RoomLeftTime;
      }
      observers_.Add(other.observers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (playingStatus_ == null) {
              PlayingStatus = new global::Texas.Protocol.TongitsPlayingStatus();
            }
            input.ReadMessage(PlayingStatus);
            break;
          }
          case 16: {
            IsStarted = input.ReadBool();
            break;
          }
          case 24: {
            RoomLeftTime = input.ReadInt32();
            break;
          }
          case 34: {
            observers_.AddEntriesFrom(input, _repeated_observers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (playingStatus_ == null) {
              PlayingStatus = new global::Texas.Protocol.TongitsPlayingStatus();
            }
            input.ReadMessage(PlayingStatus);
            break;
          }
          case 16: {
            IsStarted = input.ReadBool();
            break;
          }
          case 24: {
            RoomLeftTime = input.ReadInt32();
            break;
          }
          case 34: {
            observers_.AddEntriesFrom(ref input, _repeated_observers_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///設置託管狀態REQ/RSP
  /// </summary>
  public sealed partial class TongitsSittingOutREQ : pb::IMessage<TongitsSittingOutREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsSittingOutREQ> _parser = new pb::MessageParser<TongitsSittingOutREQ>(() => new TongitsSittingOutREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsSittingOutREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSittingOutREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSittingOutREQ(TongitsSittingOutREQ other) : this() {
      _hasBits0 = other._hasBits0;
      sittingOut_ = other.sittingOut_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSittingOutREQ Clone() {
      return new TongitsSittingOutREQ(this);
    }

    /// <summary>Field number for the "sitting_out" field.</summary>
    public const int SittingOutFieldNumber = 1;
    private readonly static bool SittingOutDefaultValue = false;

    private bool sittingOut_;
    /// <summary>
    /// true/false 表示進入託管/取消託管狀態
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SittingOut {
      get { if ((_hasBits0 & 1) != 0) { return sittingOut_; } else { return SittingOutDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sittingOut_ = value;
      }
    }
    /// <summary>Gets whether the "sitting_out" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSittingOut {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sitting_out" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSittingOut() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsSittingOutREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsSittingOutREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SittingOut != other.SittingOut) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSittingOut) hash ^= SittingOut.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSittingOut) {
        output.WriteRawTag(8);
        output.WriteBool(SittingOut);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSittingOut) {
        output.WriteRawTag(8);
        output.WriteBool(SittingOut);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSittingOut) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsSittingOutREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasSittingOut) {
        SittingOut = other.SittingOut;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SittingOut = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SittingOut = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsSittingOutRSP : pb::IMessage<TongitsSittingOutRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsSittingOutRSP> _parser = new pb::MessageParser<TongitsSittingOutRSP>(() => new TongitsSittingOutRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsSittingOutRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSittingOutRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSittingOutRSP(TongitsSittingOutRSP other) : this() {
      _hasBits0 = other._hasBits0;
      sittingOut_ = other.sittingOut_;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSittingOutRSP Clone() {
      return new TongitsSittingOutRSP(this);
    }

    /// <summary>Field number for the "sitting_out" field.</summary>
    public const int SittingOutFieldNumber = 1;
    private readonly static bool SittingOutDefaultValue = false;

    private bool sittingOut_;
    /// <summary>
    /// true/false 表示進入託管/取消託管狀態
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SittingOut {
      get { if ((_hasBits0 & 1) != 0) { return sittingOut_; } else { return SittingOutDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sittingOut_ = value;
      }
    }
    /// <summary>Gets whether the "sitting_out" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSittingOut {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sitting_out" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSittingOut() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 2) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsSittingOutRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsSittingOutRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SittingOut != other.SittingOut) return false;
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSittingOut) hash ^= SittingOut.GetHashCode();
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSittingOut) {
        output.WriteRawTag(8);
        output.WriteBool(SittingOut);
      }
      if (HasCode) {
        output.WriteRawTag(16);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSittingOut) {
        output.WriteRawTag(8);
        output.WriteBool(SittingOut);
      }
      if (HasCode) {
        output.WriteRawTag(16);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSittingOut) {
        size += 1 + 1;
      }
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsSittingOutRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasSittingOut) {
        SittingOut = other.SittingOut;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SittingOut = input.ReadBool();
            break;
          }
          case 16: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SittingOut = input.ReadBool();
            break;
          }
          case 16: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///託管狀態廣播， sitting_out = true/false 表示進入託管/取消託管狀態
  /// </summary>
  public sealed partial class TongitsSittingOutBRC : pb::IMessage<TongitsSittingOutBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsSittingOutBRC> _parser = new pb::MessageParser<TongitsSittingOutBRC>(() => new TongitsSittingOutBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsSittingOutBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSittingOutBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSittingOutBRC(TongitsSittingOutBRC other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      sittingOut_ = other.sittingOut_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsSittingOutBRC Clone() {
      return new TongitsSittingOutBRC(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "sitting_out" field.</summary>
    public const int SittingOutFieldNumber = 2;
    private readonly static bool SittingOutDefaultValue = false;

    private bool sittingOut_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SittingOut {
      get { if ((_hasBits0 & 2) != 0) { return sittingOut_; } else { return SittingOutDefaultValue; } }
      set {
        _hasBits0 |= 2;
        sittingOut_ = value;
      }
    }
    /// <summary>Gets whether the "sitting_out" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSittingOut {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "sitting_out" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSittingOut() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsSittingOutBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsSittingOutBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (SittingOut != other.SittingOut) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasSittingOut) hash ^= SittingOut.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasSittingOut) {
        output.WriteRawTag(16);
        output.WriteBool(SittingOut);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasSittingOut) {
        output.WriteRawTag(16);
        output.WriteBool(SittingOut);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasSittingOut) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsSittingOutBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasSittingOut) {
        SittingOut = other.SittingOut;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            SittingOut = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            SittingOut = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///對房間發送開始 --> 如果沒設定自動開始，則每個新房間只需要開始一次
  /// </summary>
  public sealed partial class TongitsStartRoomREQ : pb::IMessage<TongitsStartRoomREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsStartRoomREQ> _parser = new pb::MessageParser<TongitsStartRoomREQ>(() => new TongitsStartRoomREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsStartRoomREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsStartRoomREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsStartRoomREQ(TongitsStartRoomREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsStartRoomREQ Clone() {
      return new TongitsStartRoomREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsStartRoomREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsStartRoomREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsStartRoomREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsStartRoomRSP : pb::IMessage<TongitsStartRoomRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsStartRoomRSP> _parser = new pb::MessageParser<TongitsStartRoomRSP>(() => new TongitsStartRoomRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsStartRoomRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsStartRoomRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsStartRoomRSP(TongitsStartRoomRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsStartRoomRSP Clone() {
      return new TongitsStartRoomRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsStartRoomRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsStartRoomRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsStartRoomRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///即時戰績REQ/RSP
  /// </summary>
  public sealed partial class TongitsProfitListREQ : pb::IMessage<TongitsProfitListREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsProfitListREQ> _parser = new pb::MessageParser<TongitsProfitListREQ>(() => new TongitsProfitListREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsProfitListREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsProfitListREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsProfitListREQ(TongitsProfitListREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsProfitListREQ Clone() {
      return new TongitsProfitListREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsProfitListREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsProfitListREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsProfitListREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsProfitListRSP : pb::IMessage<TongitsProfitListRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsProfitListRSP> _parser = new pb::MessageParser<TongitsProfitListRSP>(() => new TongitsProfitListRSP());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsProfitListRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsProfitListRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsProfitListRSP(TongitsProfitListRSP other) : this() {
      profit_ = other.profit_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsProfitListRSP Clone() {
      return new TongitsProfitListRSP(this);
    }

    /// <summary>Field number for the "profit" field.</summary>
    public const int ProfitFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ProfitInfo> _repeated_profit_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.ProfitInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ProfitInfo> profit_ = new pbc::RepeatedField<global::Texas.Protocol.ProfitInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ProfitInfo> Profit {
      get { return profit_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsProfitListRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsProfitListRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!profit_.Equals(other.profit_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= profit_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      profit_.WriteTo(output, _repeated_profit_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      profit_.WriteTo(ref output, _repeated_profit_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += profit_.CalculateSize(_repeated_profit_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsProfitListRSP other) {
      if (other == null) {
        return;
      }
      profit_.Add(other.profit_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            profit_.AddEntriesFrom(input, _repeated_profit_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            profit_.AddEntriesFrom(ref input, _repeated_profit_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///看客列表REQ/RSP
  /// </summary>
  public sealed partial class TongitsObserversListREQ : pb::IMessage<TongitsObserversListREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsObserversListREQ> _parser = new pb::MessageParser<TongitsObserversListREQ>(() => new TongitsObserversListREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsObserversListREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsObserversListREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsObserversListREQ(TongitsObserversListREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsObserversListREQ Clone() {
      return new TongitsObserversListREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsObserversListREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsObserversListREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsObserversListREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsObserversListRSP : pb::IMessage<TongitsObserversListRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsObserversListRSP> _parser = new pb::MessageParser<TongitsObserversListRSP>(() => new TongitsObserversListRSP());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsObserversListRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsObserversListRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsObserversListRSP(TongitsObserversListRSP other) : this() {
      observers_ = other.observers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsObserversListRSP Clone() {
      return new TongitsObserversListRSP(this);
    }

    /// <summary>Field number for the "observers" field.</summary>
    public const int ObserversFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.UserBrief> _repeated_observers_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.UserBrief.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.UserBrief> observers_ = new pbc::RepeatedField<global::Texas.Protocol.UserBrief>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.UserBrief> Observers {
      get { return observers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsObserversListRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsObserversListRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!observers_.Equals(other.observers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= observers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      observers_.WriteTo(output, _repeated_observers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      observers_.WriteTo(ref output, _repeated_observers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += observers_.CalculateSize(_repeated_observers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsObserversListRSP other) {
      if (other == null) {
        return;
      }
      observers_.Add(other.observers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            observers_.AddEntriesFrom(input, _repeated_observers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            observers_.AddEntriesFrom(ref input, _repeated_observers_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsExchangeChipsREQ : pb::IMessage<TongitsExchangeChipsREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsExchangeChipsREQ> _parser = new pb::MessageParser<TongitsExchangeChipsREQ>(() => new TongitsExchangeChipsREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsExchangeChipsREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsExchangeChipsREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsExchangeChipsREQ(TongitsExchangeChipsREQ other) : this() {
      _hasBits0 = other._hasBits0;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsExchangeChipsREQ Clone() {
      return new TongitsExchangeChipsREQ(this);
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 1;
    private readonly static long AmountDefaultValue = 0L;

    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Amount {
      get { if ((_hasBits0 & 1) != 0) { return amount_; } else { return AmountDefaultValue; } }
      set {
        _hasBits0 |= 1;
        amount_ = value;
      }
    }
    /// <summary>Gets whether the "amount" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAmount {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "amount" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAmount() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsExchangeChipsREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsExchangeChipsREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAmount) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAmount) {
        output.WriteRawTag(8);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAmount) {
        output.WriteRawTag(8);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAmount) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsExchangeChipsREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasAmount) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsExchangeChipsRSP : pb::IMessage<TongitsExchangeChipsRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsExchangeChipsRSP> _parser = new pb::MessageParser<TongitsExchangeChipsRSP>(() => new TongitsExchangeChipsRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsExchangeChipsRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsExchangeChipsRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsExchangeChipsRSP(TongitsExchangeChipsRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsExchangeChipsRSP Clone() {
      return new TongitsExchangeChipsRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsExchangeChipsRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsExchangeChipsRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsExchangeChipsRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsRebuyNotifyRSP : pb::IMessage<TongitsRebuyNotifyRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsRebuyNotifyRSP> _parser = new pb::MessageParser<TongitsRebuyNotifyRSP>(() => new TongitsRebuyNotifyRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsRebuyNotifyRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsRebuyNotifyRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsRebuyNotifyRSP(TongitsRebuyNotifyRSP other) : this() {
      _hasBits0 = other._hasBits0;
      leftTime_ = other.leftTime_;
      seatid_ = other.seatid_;
      seatChips_ = other.seatChips_;
      exchangingChips_ = other.exchangingChips_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsRebuyNotifyRSP Clone() {
      return new TongitsRebuyNotifyRSP(this);
    }

    /// <summary>Field number for the "left_time" field.</summary>
    public const int LeftTimeFieldNumber = 1;
    private readonly static int LeftTimeDefaultValue = 0;

    private int leftTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LeftTime {
      get { if ((_hasBits0 & 1) != 0) { return leftTime_; } else { return LeftTimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        leftTime_ = value;
      }
    }
    /// <summary>Gets whether the "left_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeftTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "left_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeftTime() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 2;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 2) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "seat_chips" field.</summary>
    public const int SeatChipsFieldNumber = 3;
    private readonly static long SeatChipsDefaultValue = 0L;

    private long seatChips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SeatChips {
      get { if ((_hasBits0 & 4) != 0) { return seatChips_; } else { return SeatChipsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        seatChips_ = value;
      }
    }
    /// <summary>Gets whether the "seat_chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatChips {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "seat_chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatChips() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "exchanging_chips" field.</summary>
    public const int ExchangingChipsFieldNumber = 4;
    private readonly static long ExchangingChipsDefaultValue = 0L;

    private long exchangingChips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ExchangingChips {
      get { if ((_hasBits0 & 8) != 0) { return exchangingChips_; } else { return ExchangingChipsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        exchangingChips_ = value;
      }
    }
    /// <summary>Gets whether the "exchanging_chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExchangingChips {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "exchanging_chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExchangingChips() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsRebuyNotifyRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsRebuyNotifyRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LeftTime != other.LeftTime) return false;
      if (Seatid != other.Seatid) return false;
      if (SeatChips != other.SeatChips) return false;
      if (ExchangingChips != other.ExchangingChips) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLeftTime) hash ^= LeftTime.GetHashCode();
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasSeatChips) hash ^= SeatChips.GetHashCode();
      if (HasExchangingChips) hash ^= ExchangingChips.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLeftTime) {
        output.WriteRawTag(8);
        output.WriteInt32(LeftTime);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasSeatChips) {
        output.WriteRawTag(24);
        output.WriteInt64(SeatChips);
      }
      if (HasExchangingChips) {
        output.WriteRawTag(32);
        output.WriteInt64(ExchangingChips);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLeftTime) {
        output.WriteRawTag(8);
        output.WriteInt32(LeftTime);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasSeatChips) {
        output.WriteRawTag(24);
        output.WriteInt64(SeatChips);
      }
      if (HasExchangingChips) {
        output.WriteRawTag(32);
        output.WriteInt64(ExchangingChips);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLeftTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeftTime);
      }
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasSeatChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SeatChips);
      }
      if (HasExchangingChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExchangingChips);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsRebuyNotifyRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasLeftTime) {
        LeftTime = other.LeftTime;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasSeatChips) {
        SeatChips = other.SeatChips;
      }
      if (other.HasExchangingChips) {
        ExchangingChips = other.ExchangingChips;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LeftTime = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            SeatChips = input.ReadInt64();
            break;
          }
          case 32: {
            ExchangingChips = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LeftTime = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            SeatChips = input.ReadInt64();
            break;
          }
          case 32: {
            ExchangingChips = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsExchangeChipsBRC : pb::IMessage<TongitsExchangeChipsBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsExchangeChipsBRC> _parser = new pb::MessageParser<TongitsExchangeChipsBRC>(() => new TongitsExchangeChipsBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsExchangeChipsBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsExchangeChipsBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsExchangeChipsBRC(TongitsExchangeChipsBRC other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      chips_ = other.chips_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsExchangeChipsBRC Clone() {
      return new TongitsExchangeChipsBRC(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "chips" field.</summary>
    public const int ChipsFieldNumber = 2;
    private readonly static long ChipsDefaultValue = 0L;

    private long chips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Chips {
      get { if ((_hasBits0 & 2) != 0) { return chips_; } else { return ChipsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        chips_ = value;
      }
    }
    /// <summary>Gets whether the "chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChips {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChips() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsExchangeChipsBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsExchangeChipsBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (Chips != other.Chips) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasChips) hash ^= Chips.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasChips) {
        output.WriteRawTag(16);
        output.WriteInt64(Chips);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasChips) {
        output.WriteRawTag(16);
        output.WriteInt64(Chips);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Chips);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsExchangeChipsBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasChips) {
        Chips = other.Chips;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Chips = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Chips = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家參與過的 Game ID 列表
  /// </summary>
  public sealed partial class TongitsGameIDListREQ : pb::IMessage<TongitsGameIDListREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsGameIDListREQ> _parser = new pb::MessageParser<TongitsGameIDListREQ>(() => new TongitsGameIDListREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsGameIDListREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGameIDListREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGameIDListREQ(TongitsGameIDListREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGameIDListREQ Clone() {
      return new TongitsGameIDListREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsGameIDListREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsGameIDListREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsGameIDListREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家參與過的 Game ID 列表
  /// </summary>
  public sealed partial class TongitsGameIDListRSP : pb::IMessage<TongitsGameIDListRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsGameIDListRSP> _parser = new pb::MessageParser<TongitsGameIDListRSP>(() => new TongitsGameIDListRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsGameIDListRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGameIDListRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGameIDListRSP(TongitsGameIDListRSP other) : this() {
      _hasBits0 = other._hasBits0;
      gameId_ = other.gameId_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGameIDListRSP Clone() {
      return new TongitsGameIDListRSP(this);
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_gameId_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> gameId_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> GameId {
      get { return gameId_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private readonly static int TotalDefaultValue = 0;

    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Total {
      get { if ((_hasBits0 & 1) != 0) { return total_; } else { return TotalDefaultValue; } }
      set {
        _hasBits0 |= 1;
        total_ = value;
      }
    }
    /// <summary>Gets whether the "total" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotal {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "total" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotal() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsGameIDListRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsGameIDListRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gameId_.Equals(other.gameId_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gameId_.GetHashCode();
      if (HasTotal) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      gameId_.WriteTo(output, _repeated_gameId_codec);
      if (HasTotal) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      gameId_.WriteTo(ref output, _repeated_gameId_codec);
      if (HasTotal) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += gameId_.CalculateSize(_repeated_gameId_codec);
      if (HasTotal) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsGameIDListRSP other) {
      if (other == null) {
        return;
      }
      gameId_.Add(other.gameId_);
      if (other.HasTotal) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            gameId_.AddEntriesFrom(input, _repeated_gameId_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            gameId_.AddEntriesFrom(ref input, _repeated_gameId_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 牌局回顧
  /// </summary>
  public sealed partial class TongitsGameRecordListREQ : pb::IMessage<TongitsGameRecordListREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsGameRecordListREQ> _parser = new pb::MessageParser<TongitsGameRecordListREQ>(() => new TongitsGameRecordListREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsGameRecordListREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGameRecordListREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGameRecordListREQ(TongitsGameRecordListREQ other) : this() {
      gameId_ = other.gameId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGameRecordListREQ Clone() {
      return new TongitsGameRecordListREQ(this);
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_gameId_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> gameId_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> GameId {
      get { return gameId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsGameRecordListREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsGameRecordListREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gameId_.Equals(other.gameId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gameId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      gameId_.WriteTo(output, _repeated_gameId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      gameId_.WriteTo(ref output, _repeated_gameId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += gameId_.CalculateSize(_repeated_gameId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsGameRecordListREQ other) {
      if (other == null) {
        return;
      }
      gameId_.Add(other.gameId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            gameId_.AddEntriesFrom(input, _repeated_gameId_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            gameId_.AddEntriesFrom(ref input, _repeated_gameId_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsGameRecord : pb::IMessage<TongitsGameRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsGameRecord> _parser = new pb::MessageParser<TongitsGameRecord>(() => new TongitsGameRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsGameRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGameRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGameRecord(TongitsGameRecord other) : this() {
      gameResult_ = other.gameResult_ != null ? other.gameResult_.Clone() : null;
      gameId_ = other.gameId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGameRecord Clone() {
      return new TongitsGameRecord(this);
    }

    /// <summary>Field number for the "game_result" field.</summary>
    public const int GameResultFieldNumber = 1;
    private global::Texas.Protocol.TongitsSimplifiedGameResultBRC gameResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TongitsSimplifiedGameResultBRC GameResult {
      get { return gameResult_; }
      set {
        gameResult_ = value;
      }
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 2;
    private readonly static string GameIdDefaultValue = "";

    private string gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GameId {
      get { return gameId_ ?? GameIdDefaultValue; }
      set {
        gameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "game_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameId {
      get { return gameId_ != null; }
    }
    /// <summary>Clears the value of the "game_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameId() {
      gameId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsGameRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsGameRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GameResult, other.GameResult)) return false;
      if (GameId != other.GameId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (gameResult_ != null) hash ^= GameResult.GetHashCode();
      if (HasGameId) hash ^= GameId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (gameResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GameResult);
      }
      if (HasGameId) {
        output.WriteRawTag(18);
        output.WriteString(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (gameResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GameResult);
      }
      if (HasGameId) {
        output.WriteRawTag(18);
        output.WriteString(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (gameResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameResult);
      }
      if (HasGameId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsGameRecord other) {
      if (other == null) {
        return;
      }
      if (other.gameResult_ != null) {
        if (gameResult_ == null) {
          GameResult = new global::Texas.Protocol.TongitsSimplifiedGameResultBRC();
        }
        GameResult.MergeFrom(other.GameResult);
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (gameResult_ == null) {
              GameResult = new global::Texas.Protocol.TongitsSimplifiedGameResultBRC();
            }
            input.ReadMessage(GameResult);
            break;
          }
          case 18: {
            GameId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (gameResult_ == null) {
              GameResult = new global::Texas.Protocol.TongitsSimplifiedGameResultBRC();
            }
            input.ReadMessage(GameResult);
            break;
          }
          case 18: {
            GameId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsGameRecordListRSP : pb::IMessage<TongitsGameRecordListRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsGameRecordListRSP> _parser = new pb::MessageParser<TongitsGameRecordListRSP>(() => new TongitsGameRecordListRSP());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsGameRecordListRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGameRecordListRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGameRecordListRSP(TongitsGameRecordListRSP other) : this() {
      gameRecord_ = other.gameRecord_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGameRecordListRSP Clone() {
      return new TongitsGameRecordListRSP(this);
    }

    /// <summary>Field number for the "game_record" field.</summary>
    public const int GameRecordFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.TongitsGameRecord> _repeated_gameRecord_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.TongitsGameRecord.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.TongitsGameRecord> gameRecord_ = new pbc::RepeatedField<global::Texas.Protocol.TongitsGameRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.TongitsGameRecord> GameRecord {
      get { return gameRecord_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsGameRecordListRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsGameRecordListRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gameRecord_.Equals(other.gameRecord_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gameRecord_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      gameRecord_.WriteTo(output, _repeated_gameRecord_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      gameRecord_.WriteTo(ref output, _repeated_gameRecord_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += gameRecord_.CalculateSize(_repeated_gameRecord_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsGameRecordListRSP other) {
      if (other == null) {
        return;
      }
      gameRecord_.Add(other.gameRecord_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            gameRecord_.AddEntriesFrom(input, _repeated_gameRecord_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            gameRecord_.AddEntriesFrom(ref input, _repeated_gameRecord_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///第一次於Calltime桌坐下時會走這隻協議進行座位保留
  ///返回對應的RSP後會跳出確認坐下的倒數彈窗
  /// </summary>
  public sealed partial class TongitsReserveCalltimeSeatREQ : pb::IMessage<TongitsReserveCalltimeSeatREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsReserveCalltimeSeatREQ> _parser = new pb::MessageParser<TongitsReserveCalltimeSeatREQ>(() => new TongitsReserveCalltimeSeatREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsReserveCalltimeSeatREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsReserveCalltimeSeatREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsReserveCalltimeSeatREQ(TongitsReserveCalltimeSeatREQ other) : this() {
      _hasBits0 = other._hasBits0;
      reserve_ = other.reserve_;
      seatid_ = other.seatid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsReserveCalltimeSeatREQ Clone() {
      return new TongitsReserveCalltimeSeatREQ(this);
    }

    /// <summary>Field number for the "reserve" field.</summary>
    public const int ReserveFieldNumber = 1;
    private readonly static bool ReserveDefaultValue = false;

    private bool reserve_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Reserve {
      get { if ((_hasBits0 & 1) != 0) { return reserve_; } else { return ReserveDefaultValue; } }
      set {
        _hasBits0 |= 1;
        reserve_ = value;
      }
    }
    /// <summary>Gets whether the "reserve" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReserve {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "reserve" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReserve() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 2;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 2) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsReserveCalltimeSeatREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsReserveCalltimeSeatREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Reserve != other.Reserve) return false;
      if (Seatid != other.Seatid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasReserve) hash ^= Reserve.GetHashCode();
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasReserve) {
        output.WriteRawTag(8);
        output.WriteBool(Reserve);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasReserve) {
        output.WriteRawTag(8);
        output.WriteBool(Reserve);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasReserve) {
        size += 1 + 1;
      }
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsReserveCalltimeSeatREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasReserve) {
        Reserve = other.Reserve;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Reserve = input.ReadBool();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Reserve = input.ReadBool();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsReserveCalltimeSeatRSP : pb::IMessage<TongitsReserveCalltimeSeatRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsReserveCalltimeSeatRSP> _parser = new pb::MessageParser<TongitsReserveCalltimeSeatRSP>(() => new TongitsReserveCalltimeSeatRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsReserveCalltimeSeatRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsReserveCalltimeSeatRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsReserveCalltimeSeatRSP(TongitsReserveCalltimeSeatRSP other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      code_ = other.code_;
      remainedReservationTime_ = other.remainedReservationTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsReserveCalltimeSeatRSP Clone() {
      return new TongitsReserveCalltimeSeatRSP(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 2) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "remained_reservation_time" field.</summary>
    public const int RemainedReservationTimeFieldNumber = 3;
    private readonly static int RemainedReservationTimeDefaultValue = 0;

    private int remainedReservationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RemainedReservationTime {
      get { if ((_hasBits0 & 4) != 0) { return remainedReservationTime_; } else { return RemainedReservationTimeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        remainedReservationTime_ = value;
      }
    }
    /// <summary>Gets whether the "remained_reservation_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRemainedReservationTime {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "remained_reservation_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRemainedReservationTime() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsReserveCalltimeSeatRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsReserveCalltimeSeatRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (Code != other.Code) return false;
      if (RemainedReservationTime != other.RemainedReservationTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasRemainedReservationTime) hash ^= RemainedReservationTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasCode) {
        output.WriteRawTag(16);
        output.WriteInt32(Code);
      }
      if (HasRemainedReservationTime) {
        output.WriteRawTag(24);
        output.WriteInt32(RemainedReservationTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasCode) {
        output.WriteRawTag(16);
        output.WriteInt32(Code);
      }
      if (HasRemainedReservationTime) {
        output.WriteRawTag(24);
        output.WriteInt32(RemainedReservationTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasRemainedReservationTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainedReservationTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsReserveCalltimeSeatRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasRemainedReservationTime) {
        RemainedReservationTime = other.RemainedReservationTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Code = input.ReadInt32();
            break;
          }
          case 24: {
            RemainedReservationTime = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Code = input.ReadInt32();
            break;
          }
          case 24: {
            RemainedReservationTime = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsActionREQ : pb::IMessage<TongitsActionREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsActionREQ> _parser = new pb::MessageParser<TongitsActionREQ>(() => new TongitsActionREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsActionREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsActionREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsActionREQ(TongitsActionREQ other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      type_ = other.type_;
      selectCards_ = other.selectCards_.Clone();
      targetSeatid_ = other.targetSeatid_;
      targetMeld_ = other.targetMeld_.Clone();
      allCards_ = other.allCards_.Clone();
      meldCards1_ = other.meldCards1_.Clone();
      meldCards2_ = other.meldCards2_.Clone();
      meldCards3_ = other.meldCards3_.Clone();
      meldCards4_ = other.meldCards4_.Clone();
      leftCards_ = other.leftCards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsActionREQ Clone() {
      return new TongitsActionREQ(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private readonly static global::Texas.Protocol.TongitsActionType TypeDefaultValue = global::Texas.Protocol.TongitsActionType.TongitsActionNone;

    private global::Texas.Protocol.TongitsActionType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TongitsActionType Type {
      get { if ((_hasBits0 & 2) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "select_cards" field.</summary>
    public const int SelectCardsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_selectCards_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> selectCards_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> SelectCards {
      get { return selectCards_; }
    }

    /// <summary>Field number for the "target_seatid" field.</summary>
    public const int TargetSeatidFieldNumber = 4;
    private readonly static int TargetSeatidDefaultValue = 0;

    private int targetSeatid_;
    /// <summary>
    /// SAPAW 時目標 meld 的 seatid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TargetSeatid {
      get { if ((_hasBits0 & 4) != 0) { return targetSeatid_; } else { return TargetSeatidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        targetSeatid_ = value;
      }
    }
    /// <summary>Gets whether the "target_seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTargetSeatid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "target_seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTargetSeatid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "target_meld" field.</summary>
    public const int TargetMeldFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_targetMeld_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> targetMeld_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// SAPAW 時目標 meld
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> TargetMeld {
      get { return targetMeld_; }
    }

    /// <summary>Field number for the "all_cards" field.</summary>
    public const int AllCardsFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_allCards_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> allCards_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 前端在 REQ 使用結構會有問題 因此將數值拉出來傳, 手上 meld 最多4組
    /// optional TongitsHandCard hand_card = 3;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> AllCards {
      get { return allCards_; }
    }

    /// <summary>Field number for the "meld_cards_1" field.</summary>
    public const int MeldCards1FieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_meldCards1_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> meldCards1_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 各個組合牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> MeldCards1 {
      get { return meldCards1_; }
    }

    /// <summary>Field number for the "meld_cards_2" field.</summary>
    public const int MeldCards2FieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_meldCards2_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> meldCards2_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 各個組合牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> MeldCards2 {
      get { return meldCards2_; }
    }

    /// <summary>Field number for the "meld_cards_3" field.</summary>
    public const int MeldCards3FieldNumber = 9;
    private static readonly pb::FieldCodec<int> _repeated_meldCards3_codec
        = pb::FieldCodec.ForInt32(74);
    private readonly pbc::RepeatedField<int> meldCards3_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 各個組合牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> MeldCards3 {
      get { return meldCards3_; }
    }

    /// <summary>Field number for the "meld_cards_4" field.</summary>
    public const int MeldCards4FieldNumber = 10;
    private static readonly pb::FieldCodec<int> _repeated_meldCards4_codec
        = pb::FieldCodec.ForInt32(82);
    private readonly pbc::RepeatedField<int> meldCards4_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 各個組合牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> MeldCards4 {
      get { return meldCards4_; }
    }

    /// <summary>Field number for the "left_cards" field.</summary>
    public const int LeftCardsFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_leftCards_codec
        = pb::FieldCodec.ForInt32(90);
    private readonly pbc::RepeatedField<int> leftCards_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 扣除組合牌後的剩餘牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> LeftCards {
      get { return leftCards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsActionREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsActionREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (Type != other.Type) return false;
      if(!selectCards_.Equals(other.selectCards_)) return false;
      if (TargetSeatid != other.TargetSeatid) return false;
      if(!targetMeld_.Equals(other.targetMeld_)) return false;
      if(!allCards_.Equals(other.allCards_)) return false;
      if(!meldCards1_.Equals(other.meldCards1_)) return false;
      if(!meldCards2_.Equals(other.meldCards2_)) return false;
      if(!meldCards3_.Equals(other.meldCards3_)) return false;
      if(!meldCards4_.Equals(other.meldCards4_)) return false;
      if(!leftCards_.Equals(other.leftCards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      hash ^= selectCards_.GetHashCode();
      if (HasTargetSeatid) hash ^= TargetSeatid.GetHashCode();
      hash ^= targetMeld_.GetHashCode();
      hash ^= allCards_.GetHashCode();
      hash ^= meldCards1_.GetHashCode();
      hash ^= meldCards2_.GetHashCode();
      hash ^= meldCards3_.GetHashCode();
      hash ^= meldCards4_.GetHashCode();
      hash ^= leftCards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      selectCards_.WriteTo(output, _repeated_selectCards_codec);
      if (HasTargetSeatid) {
        output.WriteRawTag(32);
        output.WriteInt32(TargetSeatid);
      }
      targetMeld_.WriteTo(output, _repeated_targetMeld_codec);
      allCards_.WriteTo(output, _repeated_allCards_codec);
      meldCards1_.WriteTo(output, _repeated_meldCards1_codec);
      meldCards2_.WriteTo(output, _repeated_meldCards2_codec);
      meldCards3_.WriteTo(output, _repeated_meldCards3_codec);
      meldCards4_.WriteTo(output, _repeated_meldCards4_codec);
      leftCards_.WriteTo(output, _repeated_leftCards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      selectCards_.WriteTo(ref output, _repeated_selectCards_codec);
      if (HasTargetSeatid) {
        output.WriteRawTag(32);
        output.WriteInt32(TargetSeatid);
      }
      targetMeld_.WriteTo(ref output, _repeated_targetMeld_codec);
      allCards_.WriteTo(ref output, _repeated_allCards_codec);
      meldCards1_.WriteTo(ref output, _repeated_meldCards1_codec);
      meldCards2_.WriteTo(ref output, _repeated_meldCards2_codec);
      meldCards3_.WriteTo(ref output, _repeated_meldCards3_codec);
      meldCards4_.WriteTo(ref output, _repeated_meldCards4_codec);
      leftCards_.WriteTo(ref output, _repeated_leftCards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += selectCards_.CalculateSize(_repeated_selectCards_codec);
      if (HasTargetSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetSeatid);
      }
      size += targetMeld_.CalculateSize(_repeated_targetMeld_codec);
      size += allCards_.CalculateSize(_repeated_allCards_codec);
      size += meldCards1_.CalculateSize(_repeated_meldCards1_codec);
      size += meldCards2_.CalculateSize(_repeated_meldCards2_codec);
      size += meldCards3_.CalculateSize(_repeated_meldCards3_codec);
      size += meldCards4_.CalculateSize(_repeated_meldCards4_codec);
      size += leftCards_.CalculateSize(_repeated_leftCards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsActionREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      selectCards_.Add(other.selectCards_);
      if (other.HasTargetSeatid) {
        TargetSeatid = other.TargetSeatid;
      }
      targetMeld_.Add(other.targetMeld_);
      allCards_.Add(other.allCards_);
      meldCards1_.Add(other.meldCards1_);
      meldCards2_.Add(other.meldCards2_);
      meldCards3_.Add(other.meldCards3_);
      meldCards4_.Add(other.meldCards4_);
      leftCards_.Add(other.leftCards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Type = (global::Texas.Protocol.TongitsActionType) input.ReadEnum();
            break;
          }
          case 26:
          case 24: {
            selectCards_.AddEntriesFrom(input, _repeated_selectCards_codec);
            break;
          }
          case 32: {
            TargetSeatid = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            targetMeld_.AddEntriesFrom(input, _repeated_targetMeld_codec);
            break;
          }
          case 50:
          case 48: {
            allCards_.AddEntriesFrom(input, _repeated_allCards_codec);
            break;
          }
          case 58:
          case 56: {
            meldCards1_.AddEntriesFrom(input, _repeated_meldCards1_codec);
            break;
          }
          case 66:
          case 64: {
            meldCards2_.AddEntriesFrom(input, _repeated_meldCards2_codec);
            break;
          }
          case 74:
          case 72: {
            meldCards3_.AddEntriesFrom(input, _repeated_meldCards3_codec);
            break;
          }
          case 82:
          case 80: {
            meldCards4_.AddEntriesFrom(input, _repeated_meldCards4_codec);
            break;
          }
          case 90:
          case 88: {
            leftCards_.AddEntriesFrom(input, _repeated_leftCards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Type = (global::Texas.Protocol.TongitsActionType) input.ReadEnum();
            break;
          }
          case 26:
          case 24: {
            selectCards_.AddEntriesFrom(ref input, _repeated_selectCards_codec);
            break;
          }
          case 32: {
            TargetSeatid = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            targetMeld_.AddEntriesFrom(ref input, _repeated_targetMeld_codec);
            break;
          }
          case 50:
          case 48: {
            allCards_.AddEntriesFrom(ref input, _repeated_allCards_codec);
            break;
          }
          case 58:
          case 56: {
            meldCards1_.AddEntriesFrom(ref input, _repeated_meldCards1_codec);
            break;
          }
          case 66:
          case 64: {
            meldCards2_.AddEntriesFrom(ref input, _repeated_meldCards2_codec);
            break;
          }
          case 74:
          case 72: {
            meldCards3_.AddEntriesFrom(ref input, _repeated_meldCards3_codec);
            break;
          }
          case 82:
          case 80: {
            meldCards4_.AddEntriesFrom(ref input, _repeated_meldCards4_codec);
            break;
          }
          case 90:
          case 88: {
            leftCards_.AddEntriesFrom(ref input, _repeated_leftCards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsActionBRC : pb::IMessage<TongitsActionBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsActionBRC> _parser = new pb::MessageParser<TongitsActionBRC>(() => new TongitsActionBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsActionBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsActionBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsActionBRC(TongitsActionBRC other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      seatid_ = other.seatid_;
      type_ = other.type_;
      selectCards_ = other.selectCards_.Clone();
      targetSeatid_ = other.targetSeatid_;
      targetMeld_ = other.targetMeld_ != null ? other.targetMeld_.Clone() : null;
      canChallengeSeatid_ = other.canChallengeSeatid_.Clone();
      seatStatus_ = other.seatStatus_.Clone();
      dumpCards_ = other.dumpCards_.Clone();
      stackNum_ = other.stackNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsActionBRC Clone() {
      return new TongitsActionBRC(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// 0:成功 廣播桌上玩家, -1:失敗 只發給行動玩家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 2;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    /// <summary>
    /// 操作者 seatid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 2) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private readonly static global::Texas.Protocol.TongitsActionType TypeDefaultValue = global::Texas.Protocol.TongitsActionType.TongitsActionNone;

    private global::Texas.Protocol.TongitsActionType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TongitsActionType Type {
      get { if ((_hasBits0 & 4) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "select_cards" field.</summary>
    public const int SelectCardsFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_selectCards_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> selectCards_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> SelectCards {
      get { return selectCards_; }
    }

    /// <summary>Field number for the "target_seatid" field.</summary>
    public const int TargetSeatidFieldNumber = 5;
    private readonly static int TargetSeatidDefaultValue = 0;

    private int targetSeatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TargetSeatid {
      get { if ((_hasBits0 & 8) != 0) { return targetSeatid_; } else { return TargetSeatidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        targetSeatid_ = value;
      }
    }
    /// <summary>Gets whether the "target_seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTargetSeatid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "target_seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTargetSeatid() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "target_meld" field.</summary>
    public const int TargetMeldFieldNumber = 6;
    private global::Texas.Protocol.TongitsMeld targetMeld_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TongitsMeld TargetMeld {
      get { return targetMeld_; }
      set {
        targetMeld_ = value;
      }
    }

    /// <summary>Field number for the "can_challenge_seatid" field.</summary>
    public const int CanChallengeSeatidFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_canChallengeSeatid_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> canChallengeSeatid_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 當 Action 是其他玩家 fight 時, 可以 challenge 的 seatid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> CanChallengeSeatid {
      get { return canChallengeSeatid_; }
    }

    /// <summary>Field number for the "seat_status" field.</summary>
    public const int SeatStatusFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Texas.Protocol.TongitsSeatStatus> _repeated_seatStatus_codec
        = pb::FieldCodec.ForMessage(66, global::Texas.Protocol.TongitsSeatStatus.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.TongitsSeatStatus> seatStatus_ = new pbc::RepeatedField<global::Texas.Protocol.TongitsSeatStatus>();
    /// <summary>
    /// SAPAW, DROP 皆需要更新 seat_status'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.TongitsSeatStatus> SeatStatus {
      get { return seatStatus_; }
    }

    /// <summary>Field number for the "dump_cards" field.</summary>
    public const int DumpCardsFieldNumber = 9;
    private static readonly pb::FieldCodec<int> _repeated_dumpCards_codec
        = pb::FieldCodec.ForInt32(74);
    private readonly pbc::RepeatedField<int> dumpCards_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 棄牌堆
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> DumpCards {
      get { return dumpCards_; }
    }

    /// <summary>Field number for the "stack_num" field.</summary>
    public const int StackNumFieldNumber = 10;
    private readonly static int StackNumDefaultValue = 0;

    private int stackNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StackNum {
      get { if ((_hasBits0 & 16) != 0) { return stackNum_; } else { return StackNumDefaultValue; } }
      set {
        _hasBits0 |= 16;
        stackNum_ = value;
      }
    }
    /// <summary>Gets whether the "stack_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStackNum {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "stack_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStackNum() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsActionBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsActionBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Seatid != other.Seatid) return false;
      if (Type != other.Type) return false;
      if(!selectCards_.Equals(other.selectCards_)) return false;
      if (TargetSeatid != other.TargetSeatid) return false;
      if (!object.Equals(TargetMeld, other.TargetMeld)) return false;
      if(!canChallengeSeatid_.Equals(other.canChallengeSeatid_)) return false;
      if(!seatStatus_.Equals(other.seatStatus_)) return false;
      if(!dumpCards_.Equals(other.dumpCards_)) return false;
      if (StackNum != other.StackNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      hash ^= selectCards_.GetHashCode();
      if (HasTargetSeatid) hash ^= TargetSeatid.GetHashCode();
      if (targetMeld_ != null) hash ^= TargetMeld.GetHashCode();
      hash ^= canChallengeSeatid_.GetHashCode();
      hash ^= seatStatus_.GetHashCode();
      hash ^= dumpCards_.GetHashCode();
      if (HasStackNum) hash ^= StackNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      selectCards_.WriteTo(output, _repeated_selectCards_codec);
      if (HasTargetSeatid) {
        output.WriteRawTag(40);
        output.WriteInt32(TargetSeatid);
      }
      if (targetMeld_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TargetMeld);
      }
      canChallengeSeatid_.WriteTo(output, _repeated_canChallengeSeatid_codec);
      seatStatus_.WriteTo(output, _repeated_seatStatus_codec);
      dumpCards_.WriteTo(output, _repeated_dumpCards_codec);
      if (HasStackNum) {
        output.WriteRawTag(80);
        output.WriteInt32(StackNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      selectCards_.WriteTo(ref output, _repeated_selectCards_codec);
      if (HasTargetSeatid) {
        output.WriteRawTag(40);
        output.WriteInt32(TargetSeatid);
      }
      if (targetMeld_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TargetMeld);
      }
      canChallengeSeatid_.WriteTo(ref output, _repeated_canChallengeSeatid_codec);
      seatStatus_.WriteTo(ref output, _repeated_seatStatus_codec);
      dumpCards_.WriteTo(ref output, _repeated_dumpCards_codec);
      if (HasStackNum) {
        output.WriteRawTag(80);
        output.WriteInt32(StackNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += selectCards_.CalculateSize(_repeated_selectCards_codec);
      if (HasTargetSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetSeatid);
      }
      if (targetMeld_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetMeld);
      }
      size += canChallengeSeatid_.CalculateSize(_repeated_canChallengeSeatid_codec);
      size += seatStatus_.CalculateSize(_repeated_seatStatus_codec);
      size += dumpCards_.CalculateSize(_repeated_dumpCards_codec);
      if (HasStackNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StackNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsActionBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      selectCards_.Add(other.selectCards_);
      if (other.HasTargetSeatid) {
        TargetSeatid = other.TargetSeatid;
      }
      if (other.targetMeld_ != null) {
        if (targetMeld_ == null) {
          TargetMeld = new global::Texas.Protocol.TongitsMeld();
        }
        TargetMeld.MergeFrom(other.TargetMeld);
      }
      canChallengeSeatid_.Add(other.canChallengeSeatid_);
      seatStatus_.Add(other.seatStatus_);
      dumpCards_.Add(other.dumpCards_);
      if (other.HasStackNum) {
        StackNum = other.StackNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            Type = (global::Texas.Protocol.TongitsActionType) input.ReadEnum();
            break;
          }
          case 34:
          case 32: {
            selectCards_.AddEntriesFrom(input, _repeated_selectCards_codec);
            break;
          }
          case 40: {
            TargetSeatid = input.ReadInt32();
            break;
          }
          case 50: {
            if (targetMeld_ == null) {
              TargetMeld = new global::Texas.Protocol.TongitsMeld();
            }
            input.ReadMessage(TargetMeld);
            break;
          }
          case 58:
          case 56: {
            canChallengeSeatid_.AddEntriesFrom(input, _repeated_canChallengeSeatid_codec);
            break;
          }
          case 66: {
            seatStatus_.AddEntriesFrom(input, _repeated_seatStatus_codec);
            break;
          }
          case 74:
          case 72: {
            dumpCards_.AddEntriesFrom(input, _repeated_dumpCards_codec);
            break;
          }
          case 80: {
            StackNum = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            Type = (global::Texas.Protocol.TongitsActionType) input.ReadEnum();
            break;
          }
          case 34:
          case 32: {
            selectCards_.AddEntriesFrom(ref input, _repeated_selectCards_codec);
            break;
          }
          case 40: {
            TargetSeatid = input.ReadInt32();
            break;
          }
          case 50: {
            if (targetMeld_ == null) {
              TargetMeld = new global::Texas.Protocol.TongitsMeld();
            }
            input.ReadMessage(TargetMeld);
            break;
          }
          case 58:
          case 56: {
            canChallengeSeatid_.AddEntriesFrom(ref input, _repeated_canChallengeSeatid_codec);
            break;
          }
          case 66: {
            seatStatus_.AddEntriesFrom(ref input, _repeated_seatStatus_codec);
            break;
          }
          case 74:
          case 72: {
            dumpCards_.AddEntriesFrom(ref input, _repeated_dumpCards_codec);
            break;
          }
          case 80: {
            StackNum = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsActionRSP : pb::IMessage<TongitsActionRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsActionRSP> _parser = new pb::MessageParser<TongitsActionRSP>(() => new TongitsActionRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsActionRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsActionRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsActionRSP(TongitsActionRSP other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      type_ = other.type_;
      selectCards_ = other.selectCards_.Clone();
      targetSeatid_ = other.targetSeatid_;
      targetMeld_ = other.targetMeld_.Clone();
      handCard_ = other.handCard_ != null ? other.handCard_.Clone() : null;
      lastDrawCard_ = other.lastDrawCard_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsActionRSP Clone() {
      return new TongitsActionRSP(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private readonly static global::Texas.Protocol.TongitsActionType TypeDefaultValue = global::Texas.Protocol.TongitsActionType.TongitsActionNone;

    private global::Texas.Protocol.TongitsActionType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TongitsActionType Type {
      get { if ((_hasBits0 & 2) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "select_cards" field.</summary>
    public const int SelectCardsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_selectCards_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> selectCards_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> SelectCards {
      get { return selectCards_; }
    }

    /// <summary>Field number for the "target_seatid" field.</summary>
    public const int TargetSeatidFieldNumber = 4;
    private readonly static int TargetSeatidDefaultValue = 0;

    private int targetSeatid_;
    /// <summary>
    /// SAPAW 時目標 meld 的 seatid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TargetSeatid {
      get { if ((_hasBits0 & 4) != 0) { return targetSeatid_; } else { return TargetSeatidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        targetSeatid_ = value;
      }
    }
    /// <summary>Gets whether the "target_seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTargetSeatid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "target_seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTargetSeatid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "target_meld" field.</summary>
    public const int TargetMeldFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_targetMeld_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> targetMeld_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// SAPAW 時目標 meld
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> TargetMeld {
      get { return targetMeld_; }
    }

    /// <summary>Field number for the "hand_card" field.</summary>
    public const int HandCardFieldNumber = 6;
    private global::Texas.Protocol.TongitsHandCard handCard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TongitsHandCard HandCard {
      get { return handCard_; }
      set {
        handCard_ = value;
      }
    }

    /// <summary>Field number for the "last_draw_card" field.</summary>
    public const int LastDrawCardFieldNumber = 7;
    private readonly static int LastDrawCardDefaultValue = 0;

    private int lastDrawCard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LastDrawCard {
      get { if ((_hasBits0 & 8) != 0) { return lastDrawCard_; } else { return LastDrawCardDefaultValue; } }
      set {
        _hasBits0 |= 8;
        lastDrawCard_ = value;
      }
    }
    /// <summary>Gets whether the "last_draw_card" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLastDrawCard {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "last_draw_card" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLastDrawCard() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsActionRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsActionRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (Type != other.Type) return false;
      if(!selectCards_.Equals(other.selectCards_)) return false;
      if (TargetSeatid != other.TargetSeatid) return false;
      if(!targetMeld_.Equals(other.targetMeld_)) return false;
      if (!object.Equals(HandCard, other.HandCard)) return false;
      if (LastDrawCard != other.LastDrawCard) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      hash ^= selectCards_.GetHashCode();
      if (HasTargetSeatid) hash ^= TargetSeatid.GetHashCode();
      hash ^= targetMeld_.GetHashCode();
      if (handCard_ != null) hash ^= HandCard.GetHashCode();
      if (HasLastDrawCard) hash ^= LastDrawCard.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      selectCards_.WriteTo(output, _repeated_selectCards_codec);
      if (HasTargetSeatid) {
        output.WriteRawTag(32);
        output.WriteInt32(TargetSeatid);
      }
      targetMeld_.WriteTo(output, _repeated_targetMeld_codec);
      if (handCard_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(HandCard);
      }
      if (HasLastDrawCard) {
        output.WriteRawTag(56);
        output.WriteInt32(LastDrawCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      selectCards_.WriteTo(ref output, _repeated_selectCards_codec);
      if (HasTargetSeatid) {
        output.WriteRawTag(32);
        output.WriteInt32(TargetSeatid);
      }
      targetMeld_.WriteTo(ref output, _repeated_targetMeld_codec);
      if (handCard_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(HandCard);
      }
      if (HasLastDrawCard) {
        output.WriteRawTag(56);
        output.WriteInt32(LastDrawCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += selectCards_.CalculateSize(_repeated_selectCards_codec);
      if (HasTargetSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetSeatid);
      }
      size += targetMeld_.CalculateSize(_repeated_targetMeld_codec);
      if (handCard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HandCard);
      }
      if (HasLastDrawCard) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LastDrawCard);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsActionRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      selectCards_.Add(other.selectCards_);
      if (other.HasTargetSeatid) {
        TargetSeatid = other.TargetSeatid;
      }
      targetMeld_.Add(other.targetMeld_);
      if (other.handCard_ != null) {
        if (handCard_ == null) {
          HandCard = new global::Texas.Protocol.TongitsHandCard();
        }
        HandCard.MergeFrom(other.HandCard);
      }
      if (other.HasLastDrawCard) {
        LastDrawCard = other.LastDrawCard;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Type = (global::Texas.Protocol.TongitsActionType) input.ReadEnum();
            break;
          }
          case 26:
          case 24: {
            selectCards_.AddEntriesFrom(input, _repeated_selectCards_codec);
            break;
          }
          case 32: {
            TargetSeatid = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            targetMeld_.AddEntriesFrom(input, _repeated_targetMeld_codec);
            break;
          }
          case 50: {
            if (handCard_ == null) {
              HandCard = new global::Texas.Protocol.TongitsHandCard();
            }
            input.ReadMessage(HandCard);
            break;
          }
          case 56: {
            LastDrawCard = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Type = (global::Texas.Protocol.TongitsActionType) input.ReadEnum();
            break;
          }
          case 26:
          case 24: {
            selectCards_.AddEntriesFrom(ref input, _repeated_selectCards_codec);
            break;
          }
          case 32: {
            TargetSeatid = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            targetMeld_.AddEntriesFrom(ref input, _repeated_targetMeld_codec);
            break;
          }
          case 50: {
            if (handCard_ == null) {
              HandCard = new global::Texas.Protocol.TongitsHandCard();
            }
            input.ReadMessage(HandCard);
            break;
          }
          case 56: {
            LastDrawCard = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsActionNotifyBRC : pb::IMessage<TongitsActionNotifyBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsActionNotifyBRC> _parser = new pb::MessageParser<TongitsActionNotifyBRC>(() => new TongitsActionNotifyBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsActionNotifyBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsActionNotifyBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsActionNotifyBRC(TongitsActionNotifyBRC other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      canFight_ = other.canFight_;
      canChow_ = other.canChow_;
      addActionTimeCost_ = other.addActionTimeCost_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsActionNotifyBRC Clone() {
      return new TongitsActionNotifyBRC(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    /// <summary>
    /// 輪到該seatid的操作者進行操作
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "can_fight" field.</summary>
    public const int CanFightFieldNumber = 2;
    private readonly static bool CanFightDefaultValue = false;

    private bool canFight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanFight {
      get { if ((_hasBits0 & 2) != 0) { return canFight_; } else { return CanFightDefaultValue; } }
      set {
        _hasBits0 |= 2;
        canFight_ = value;
      }
    }
    /// <summary>Gets whether the "can_fight" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCanFight {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "can_fight" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCanFight() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "can_chow" field.</summary>
    public const int CanChowFieldNumber = 3;
    private readonly static bool CanChowDefaultValue = false;

    private bool canChow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanChow {
      get { if ((_hasBits0 & 4) != 0) { return canChow_; } else { return CanChowDefaultValue; } }
      set {
        _hasBits0 |= 4;
        canChow_ = value;
      }
    }
    /// <summary>Gets whether the "can_chow" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCanChow {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "can_chow" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCanChow() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "add_action_time_cost" field.</summary>
    public const int AddActionTimeCostFieldNumber = 4;
    private readonly static int AddActionTimeCostDefaultValue = 0;

    private int addActionTimeCost_;
    /// <summary>
    /// 延時花費
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AddActionTimeCost {
      get { if ((_hasBits0 & 8) != 0) { return addActionTimeCost_; } else { return AddActionTimeCostDefaultValue; } }
      set {
        _hasBits0 |= 8;
        addActionTimeCost_ = value;
      }
    }
    /// <summary>Gets whether the "add_action_time_cost" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAddActionTimeCost {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "add_action_time_cost" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAddActionTimeCost() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsActionNotifyBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsActionNotifyBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (CanFight != other.CanFight) return false;
      if (CanChow != other.CanChow) return false;
      if (AddActionTimeCost != other.AddActionTimeCost) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasCanFight) hash ^= CanFight.GetHashCode();
      if (HasCanChow) hash ^= CanChow.GetHashCode();
      if (HasAddActionTimeCost) hash ^= AddActionTimeCost.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasCanFight) {
        output.WriteRawTag(16);
        output.WriteBool(CanFight);
      }
      if (HasCanChow) {
        output.WriteRawTag(24);
        output.WriteBool(CanChow);
      }
      if (HasAddActionTimeCost) {
        output.WriteRawTag(32);
        output.WriteInt32(AddActionTimeCost);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasCanFight) {
        output.WriteRawTag(16);
        output.WriteBool(CanFight);
      }
      if (HasCanChow) {
        output.WriteRawTag(24);
        output.WriteBool(CanChow);
      }
      if (HasAddActionTimeCost) {
        output.WriteRawTag(32);
        output.WriteInt32(AddActionTimeCost);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasCanFight) {
        size += 1 + 1;
      }
      if (HasCanChow) {
        size += 1 + 1;
      }
      if (HasAddActionTimeCost) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AddActionTimeCost);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsActionNotifyBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasCanFight) {
        CanFight = other.CanFight;
      }
      if (other.HasCanChow) {
        CanChow = other.CanChow;
      }
      if (other.HasAddActionTimeCost) {
        AddActionTimeCost = other.AddActionTimeCost;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            CanFight = input.ReadBool();
            break;
          }
          case 24: {
            CanChow = input.ReadBool();
            break;
          }
          case 32: {
            AddActionTimeCost = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            CanFight = input.ReadBool();
            break;
          }
          case 24: {
            CanChow = input.ReadBool();
            break;
          }
          case 32: {
            AddActionTimeCost = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 組成最佳解
  /// </summary>
  public sealed partial class TongitsGroupREQ : pb::IMessage<TongitsGroupREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsGroupREQ> _parser = new pb::MessageParser<TongitsGroupREQ>(() => new TongitsGroupREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsGroupREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGroupREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGroupREQ(TongitsGroupREQ other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGroupREQ Clone() {
      return new TongitsGroupREQ(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    /// 1:大小優先, 2:花色優先
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 2) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsGroupREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsGroupREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsGroupREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsGroupRSP : pb::IMessage<TongitsGroupRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsGroupRSP> _parser = new pb::MessageParser<TongitsGroupRSP>(() => new TongitsGroupRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsGroupRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGroupRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGroupRSP(TongitsGroupRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      seatid_ = other.seatid_;
      type_ = other.type_;
      handCard_ = other.handCard_ != null ? other.handCard_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGroupRSP Clone() {
      return new TongitsGroupRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 2;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 2) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private readonly static int TypeDefaultValue = 0;

    private int type_;
    /// <summary>
    /// 1:大小優先, 2:花色優先
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 4) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "hand_card" field.</summary>
    public const int HandCardFieldNumber = 4;
    private global::Texas.Protocol.TongitsHandCard handCard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TongitsHandCard HandCard {
      get { return handCard_; }
      set {
        handCard_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsGroupRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsGroupRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Seatid != other.Seatid) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(HandCard, other.HandCard)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (handCard_ != null) hash ^= HandCard.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (handCard_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(HandCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (handCard_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(HandCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (handCard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HandCard);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsGroupRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.handCard_ != null) {
        if (handCard_ == null) {
          HandCard = new global::Texas.Protocol.TongitsHandCard();
        }
        HandCard.MergeFrom(other.HandCard);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
          case 34: {
            if (handCard_ == null) {
              HandCard = new global::Texas.Protocol.TongitsHandCard();
            }
            input.ReadMessage(HandCard);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
          case 34: {
            if (handCard_ == null) {
              HandCard = new global::Texas.Protocol.TongitsHandCard();
            }
            input.ReadMessage(HandCard);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsUserChips : pb::IMessage<TongitsUserChips>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsUserChips> _parser = new pb::MessageParser<TongitsUserChips>(() => new TongitsUserChips());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsUserChips> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsUserChips() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsUserChips(TongitsUserChips other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      seatid_ = other.seatid_;
      chips_ = other.chips_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsUserChips Clone() {
      return new TongitsUserChips(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static int UidDefaultValue = 0;

    private int uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 2;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 2) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "chips" field.</summary>
    public const int ChipsFieldNumber = 3;
    private readonly static long ChipsDefaultValue = 0L;

    private long chips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Chips {
      get { if ((_hasBits0 & 4) != 0) { return chips_; } else { return ChipsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        chips_ = value;
      }
    }
    /// <summary>Gets whether the "chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChips {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChips() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsUserChips);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsUserChips other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Seatid != other.Seatid) return false;
      if (Chips != other.Chips) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasChips) hash ^= Chips.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt32(Uid);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasChips) {
        output.WriteRawTag(24);
        output.WriteInt64(Chips);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt32(Uid);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasChips) {
        output.WriteRawTag(24);
        output.WriteInt64(Chips);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uid);
      }
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Chips);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsUserChips other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasChips) {
        Chips = other.Chips;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            Chips = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Uid = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            Chips = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsUpdateUserChipsBRC : pb::IMessage<TongitsUpdateUserChipsBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsUpdateUserChipsBRC> _parser = new pb::MessageParser<TongitsUpdateUserChipsBRC>(() => new TongitsUpdateUserChipsBRC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsUpdateUserChipsBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsUpdateUserChipsBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsUpdateUserChipsBRC(TongitsUpdateUserChipsBRC other) : this() {
      userChips_ = other.userChips_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsUpdateUserChipsBRC Clone() {
      return new TongitsUpdateUserChipsBRC(this);
    }

    /// <summary>Field number for the "user_chips" field.</summary>
    public const int UserChipsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.TongitsUserChips> _repeated_userChips_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.TongitsUserChips.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.TongitsUserChips> userChips_ = new pbc::RepeatedField<global::Texas.Protocol.TongitsUserChips>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.TongitsUserChips> UserChips {
      get { return userChips_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsUpdateUserChipsBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsUpdateUserChipsBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!userChips_.Equals(other.userChips_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= userChips_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      userChips_.WriteTo(output, _repeated_userChips_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      userChips_.WriteTo(ref output, _repeated_userChips_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += userChips_.CalculateSize(_repeated_userChips_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsUpdateUserChipsBRC other) {
      if (other == null) {
        return;
      }
      userChips_.Add(other.userChips_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            userChips_.AddEntriesFrom(input, _repeated_userChips_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            userChips_.AddEntriesFrom(ref input, _repeated_userChips_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsPayHitpotBRC : pb::IMessage<TongitsPayHitpotBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsPayHitpotBRC> _parser = new pb::MessageParser<TongitsPayHitpotBRC>(() => new TongitsPayHitpotBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsPayHitpotBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsPayHitpotBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsPayHitpotBRC(TongitsPayHitpotBRC other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_.Clone();
      uid_ = other.uid_.Clone();
      hitpotPay_ = other.hitpotPay_;
      hitpotPool_ = other.hitpotPool_;
      hitpotStack_ = other.hitpotStack_;
      lastWinnerUid_ = other.lastWinnerUid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsPayHitpotBRC Clone() {
      return new TongitsPayHitpotBRC(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_seatid_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> seatid_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Seatid {
      get { return seatid_; }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_uid_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> uid_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> Uid {
      get { return uid_; }
    }

    /// <summary>Field number for the "hitpot_pay" field.</summary>
    public const int HitpotPayFieldNumber = 3;
    private readonly static long HitpotPayDefaultValue = 0L;

    private long hitpotPay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long HitpotPay {
      get { if ((_hasBits0 & 1) != 0) { return hitpotPay_; } else { return HitpotPayDefaultValue; } }
      set {
        _hasBits0 |= 1;
        hitpotPay_ = value;
      }
    }
    /// <summary>Gets whether the "hitpot_pay" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHitpotPay {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "hitpot_pay" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHitpotPay() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "hitpot_pool" field.</summary>
    public const int HitpotPoolFieldNumber = 4;
    private readonly static long HitpotPoolDefaultValue = 0L;

    private long hitpotPool_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long HitpotPool {
      get { if ((_hasBits0 & 2) != 0) { return hitpotPool_; } else { return HitpotPoolDefaultValue; } }
      set {
        _hasBits0 |= 2;
        hitpotPool_ = value;
      }
    }
    /// <summary>Gets whether the "hitpot_pool" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHitpotPool {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "hitpot_pool" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHitpotPool() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "hitpot_stack" field.</summary>
    public const int HitpotStackFieldNumber = 5;
    private readonly static int HitpotStackDefaultValue = 0;

    private int hitpotStack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HitpotStack {
      get { if ((_hasBits0 & 4) != 0) { return hitpotStack_; } else { return HitpotStackDefaultValue; } }
      set {
        _hasBits0 |= 4;
        hitpotStack_ = value;
      }
    }
    /// <summary>Gets whether the "hitpot_stack" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHitpotStack {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "hitpot_stack" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHitpotStack() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "last_winner_uid" field.</summary>
    public const int LastWinnerUidFieldNumber = 6;
    private readonly static long LastWinnerUidDefaultValue = 0L;

    private long lastWinnerUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LastWinnerUid {
      get { if ((_hasBits0 & 8) != 0) { return lastWinnerUid_; } else { return LastWinnerUidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        lastWinnerUid_ = value;
      }
    }
    /// <summary>Gets whether the "last_winner_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLastWinnerUid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "last_winner_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLastWinnerUid() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsPayHitpotBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsPayHitpotBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!seatid_.Equals(other.seatid_)) return false;
      if(!uid_.Equals(other.uid_)) return false;
      if (HitpotPay != other.HitpotPay) return false;
      if (HitpotPool != other.HitpotPool) return false;
      if (HitpotStack != other.HitpotStack) return false;
      if (LastWinnerUid != other.LastWinnerUid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= seatid_.GetHashCode();
      hash ^= uid_.GetHashCode();
      if (HasHitpotPay) hash ^= HitpotPay.GetHashCode();
      if (HasHitpotPool) hash ^= HitpotPool.GetHashCode();
      if (HasHitpotStack) hash ^= HitpotStack.GetHashCode();
      if (HasLastWinnerUid) hash ^= LastWinnerUid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      seatid_.WriteTo(output, _repeated_seatid_codec);
      uid_.WriteTo(output, _repeated_uid_codec);
      if (HasHitpotPay) {
        output.WriteRawTag(24);
        output.WriteInt64(HitpotPay);
      }
      if (HasHitpotPool) {
        output.WriteRawTag(32);
        output.WriteInt64(HitpotPool);
      }
      if (HasHitpotStack) {
        output.WriteRawTag(40);
        output.WriteInt32(HitpotStack);
      }
      if (HasLastWinnerUid) {
        output.WriteRawTag(48);
        output.WriteInt64(LastWinnerUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      seatid_.WriteTo(ref output, _repeated_seatid_codec);
      uid_.WriteTo(ref output, _repeated_uid_codec);
      if (HasHitpotPay) {
        output.WriteRawTag(24);
        output.WriteInt64(HitpotPay);
      }
      if (HasHitpotPool) {
        output.WriteRawTag(32);
        output.WriteInt64(HitpotPool);
      }
      if (HasHitpotStack) {
        output.WriteRawTag(40);
        output.WriteInt32(HitpotStack);
      }
      if (HasLastWinnerUid) {
        output.WriteRawTag(48);
        output.WriteInt64(LastWinnerUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += seatid_.CalculateSize(_repeated_seatid_codec);
      size += uid_.CalculateSize(_repeated_uid_codec);
      if (HasHitpotPay) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HitpotPay);
      }
      if (HasHitpotPool) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HitpotPool);
      }
      if (HasHitpotStack) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HitpotStack);
      }
      if (HasLastWinnerUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastWinnerUid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsPayHitpotBRC other) {
      if (other == null) {
        return;
      }
      seatid_.Add(other.seatid_);
      uid_.Add(other.uid_);
      if (other.HasHitpotPay) {
        HitpotPay = other.HitpotPay;
      }
      if (other.HasHitpotPool) {
        HitpotPool = other.HitpotPool;
      }
      if (other.HasHitpotStack) {
        HitpotStack = other.HitpotStack;
      }
      if (other.HasLastWinnerUid) {
        LastWinnerUid = other.LastWinnerUid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            seatid_.AddEntriesFrom(input, _repeated_seatid_codec);
            break;
          }
          case 18:
          case 16: {
            uid_.AddEntriesFrom(input, _repeated_uid_codec);
            break;
          }
          case 24: {
            HitpotPay = input.ReadInt64();
            break;
          }
          case 32: {
            HitpotPool = input.ReadInt64();
            break;
          }
          case 40: {
            HitpotStack = input.ReadInt32();
            break;
          }
          case 48: {
            LastWinnerUid = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            seatid_.AddEntriesFrom(ref input, _repeated_seatid_codec);
            break;
          }
          case 18:
          case 16: {
            uid_.AddEntriesFrom(ref input, _repeated_uid_codec);
            break;
          }
          case 24: {
            HitpotPay = input.ReadInt64();
            break;
          }
          case 32: {
            HitpotPool = input.ReadInt64();
            break;
          }
          case 40: {
            HitpotStack = input.ReadInt32();
            break;
          }
          case 48: {
            LastWinnerUid = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsGetHitpotBRC : pb::IMessage<TongitsGetHitpotBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsGetHitpotBRC> _parser = new pb::MessageParser<TongitsGetHitpotBRC>(() => new TongitsGetHitpotBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsGetHitpotBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGetHitpotBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGetHitpotBRC(TongitsGetHitpotBRC other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      uid_ = other.uid_;
      hitpotPool_ = other.hitpotPool_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGetHitpotBRC Clone() {
      return new TongitsGetHitpotBRC(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 2) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "hitpot_pool" field.</summary>
    public const int HitpotPoolFieldNumber = 3;
    private readonly static long HitpotPoolDefaultValue = 0L;

    private long hitpotPool_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long HitpotPool {
      get { if ((_hasBits0 & 4) != 0) { return hitpotPool_; } else { return HitpotPoolDefaultValue; } }
      set {
        _hasBits0 |= 4;
        hitpotPool_ = value;
      }
    }
    /// <summary>Gets whether the "hitpot_pool" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHitpotPool {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "hitpot_pool" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHitpotPool() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsGetHitpotBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsGetHitpotBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (Uid != other.Uid) return false;
      if (HitpotPool != other.HitpotPool) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasHitpotPool) hash ^= HitpotPool.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (HasHitpotPool) {
        output.WriteRawTag(24);
        output.WriteInt64(HitpotPool);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (HasHitpotPool) {
        output.WriteRawTag(24);
        output.WriteInt64(HitpotPool);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasHitpotPool) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HitpotPool);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsGetHitpotBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasHitpotPool) {
        HitpotPool = other.HitpotPool;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
          case 24: {
            HitpotPool = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
          case 24: {
            HitpotPool = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsPaySagasaInfo : pb::IMessage<TongitsPaySagasaInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsPaySagasaInfo> _parser = new pb::MessageParser<TongitsPaySagasaInfo>(() => new TongitsPaySagasaInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsPaySagasaInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsPaySagasaInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsPaySagasaInfo(TongitsPaySagasaInfo other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      uid_ = other.uid_;
      profit_ = other.profit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsPaySagasaInfo Clone() {
      return new TongitsPaySagasaInfo(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 2) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "profit" field.</summary>
    public const int ProfitFieldNumber = 3;
    private readonly static long ProfitDefaultValue = 0L;

    private long profit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Profit {
      get { if ((_hasBits0 & 4) != 0) { return profit_; } else { return ProfitDefaultValue; } }
      set {
        _hasBits0 |= 4;
        profit_ = value;
      }
    }
    /// <summary>Gets whether the "profit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProfit {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "profit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProfit() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsPaySagasaInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsPaySagasaInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (Uid != other.Uid) return false;
      if (Profit != other.Profit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasProfit) hash ^= Profit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (HasProfit) {
        output.WriteRawTag(24);
        output.WriteInt64(Profit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (HasProfit) {
        output.WriteRawTag(24);
        output.WriteInt64(Profit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasProfit) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Profit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsPaySagasaInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasProfit) {
        Profit = other.Profit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
          case 24: {
            Profit = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
          case 24: {
            Profit = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsGetSagasaBRC : pb::IMessage<TongitsGetSagasaBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsGetSagasaBRC> _parser = new pb::MessageParser<TongitsGetSagasaBRC>(() => new TongitsGetSagasaBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsGetSagasaBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGetSagasaBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGetSagasaBRC(TongitsGetSagasaBRC other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      uid_ = other.uid_;
      paySagasaInfo_ = other.paySagasaInfo_.Clone();
      totalSagasa_ = other.totalSagasa_;
      sagasaCard_ = other.sagasaCard_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGetSagasaBRC Clone() {
      return new TongitsGetSagasaBRC(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    /// <summary>
    /// 獲得sagasa玩家的座位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    /// <summary>
    /// 獲得sagasa玩家的id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 2) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "pay_sagasa_info" field.</summary>
    public const int PaySagasaInfoFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Texas.Protocol.TongitsPaySagasaInfo> _repeated_paySagasaInfo_codec
        = pb::FieldCodec.ForMessage(26, global::Texas.Protocol.TongitsPaySagasaInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.TongitsPaySagasaInfo> paySagasaInfo_ = new pbc::RepeatedField<global::Texas.Protocol.TongitsPaySagasaInfo>();
    /// <summary>
    /// 每個人要給多少
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.TongitsPaySagasaInfo> PaySagasaInfo {
      get { return paySagasaInfo_; }
    }

    /// <summary>Field number for the "total_sagasa" field.</summary>
    public const int TotalSagasaFieldNumber = 4;
    private readonly static long TotalSagasaDefaultValue = 0L;

    private long totalSagasa_;
    /// <summary>
    /// 該玩家總共收到多少
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalSagasa {
      get { if ((_hasBits0 & 4) != 0) { return totalSagasa_; } else { return TotalSagasaDefaultValue; } }
      set {
        _hasBits0 |= 4;
        totalSagasa_ = value;
      }
    }
    /// <summary>Gets whether the "total_sagasa" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalSagasa {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "total_sagasa" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalSagasa() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "sagasa_card" field.</summary>
    public const int SagasaCardFieldNumber = 5;
    private readonly static int SagasaCardDefaultValue = 0;

    private int sagasaCard_;
    /// <summary>
    /// 觸發的那張牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SagasaCard {
      get { if ((_hasBits0 & 8) != 0) { return sagasaCard_; } else { return SagasaCardDefaultValue; } }
      set {
        _hasBits0 |= 8;
        sagasaCard_ = value;
      }
    }
    /// <summary>Gets whether the "sagasa_card" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSagasaCard {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "sagasa_card" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSagasaCard() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsGetSagasaBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsGetSagasaBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (Uid != other.Uid) return false;
      if(!paySagasaInfo_.Equals(other.paySagasaInfo_)) return false;
      if (TotalSagasa != other.TotalSagasa) return false;
      if (SagasaCard != other.SagasaCard) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      hash ^= paySagasaInfo_.GetHashCode();
      if (HasTotalSagasa) hash ^= TotalSagasa.GetHashCode();
      if (HasSagasaCard) hash ^= SagasaCard.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      paySagasaInfo_.WriteTo(output, _repeated_paySagasaInfo_codec);
      if (HasTotalSagasa) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalSagasa);
      }
      if (HasSagasaCard) {
        output.WriteRawTag(40);
        output.WriteInt32(SagasaCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      paySagasaInfo_.WriteTo(ref output, _repeated_paySagasaInfo_codec);
      if (HasTotalSagasa) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalSagasa);
      }
      if (HasSagasaCard) {
        output.WriteRawTag(40);
        output.WriteInt32(SagasaCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      size += paySagasaInfo_.CalculateSize(_repeated_paySagasaInfo_codec);
      if (HasTotalSagasa) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalSagasa);
      }
      if (HasSagasaCard) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SagasaCard);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsGetSagasaBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      paySagasaInfo_.Add(other.paySagasaInfo_);
      if (other.HasTotalSagasa) {
        TotalSagasa = other.TotalSagasa;
      }
      if (other.HasSagasaCard) {
        SagasaCard = other.SagasaCard;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
          case 26: {
            paySagasaInfo_.AddEntriesFrom(input, _repeated_paySagasaInfo_codec);
            break;
          }
          case 32: {
            TotalSagasa = input.ReadInt64();
            break;
          }
          case 40: {
            SagasaCard = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
          case 26: {
            paySagasaInfo_.AddEntriesFrom(ref input, _repeated_paySagasaInfo_codec);
            break;
          }
          case 32: {
            TotalSagasa = input.ReadInt64();
            break;
          }
          case 40: {
            SagasaCard = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsUpdateHandCardREQ : pb::IMessage<TongitsUpdateHandCardREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsUpdateHandCardREQ> _parser = new pb::MessageParser<TongitsUpdateHandCardREQ>(() => new TongitsUpdateHandCardREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsUpdateHandCardREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsUpdateHandCardREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsUpdateHandCardREQ(TongitsUpdateHandCardREQ other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      uid_ = other.uid_;
      allCards_ = other.allCards_.Clone();
      meldCards1_ = other.meldCards1_.Clone();
      meldCards2_ = other.meldCards2_.Clone();
      meldCards3_ = other.meldCards3_.Clone();
      meldCards4_ = other.meldCards4_.Clone();
      leftCards_ = other.leftCards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsUpdateHandCardREQ Clone() {
      return new TongitsUpdateHandCardREQ(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 2) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "all_cards" field.</summary>
    public const int AllCardsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_allCards_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> allCards_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 前端在 REQ 使用結構會有問題 因此將數值拉出來傳, 手上 meld 最多4組
    /// optional TongitsHandCard hand_card = 3;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> AllCards {
      get { return allCards_; }
    }

    /// <summary>Field number for the "meld_cards_1" field.</summary>
    public const int MeldCards1FieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_meldCards1_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> meldCards1_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 各個組合牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> MeldCards1 {
      get { return meldCards1_; }
    }

    /// <summary>Field number for the "meld_cards_2" field.</summary>
    public const int MeldCards2FieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_meldCards2_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> meldCards2_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 各個組合牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> MeldCards2 {
      get { return meldCards2_; }
    }

    /// <summary>Field number for the "meld_cards_3" field.</summary>
    public const int MeldCards3FieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_meldCards3_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> meldCards3_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 各個組合牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> MeldCards3 {
      get { return meldCards3_; }
    }

    /// <summary>Field number for the "meld_cards_4" field.</summary>
    public const int MeldCards4FieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_meldCards4_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> meldCards4_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 各個組合牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> MeldCards4 {
      get { return meldCards4_; }
    }

    /// <summary>Field number for the "left_cards" field.</summary>
    public const int LeftCardsFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_leftCards_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> leftCards_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 扣除組合牌後的剩餘牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> LeftCards {
      get { return leftCards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsUpdateHandCardREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsUpdateHandCardREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (Uid != other.Uid) return false;
      if(!allCards_.Equals(other.allCards_)) return false;
      if(!meldCards1_.Equals(other.meldCards1_)) return false;
      if(!meldCards2_.Equals(other.meldCards2_)) return false;
      if(!meldCards3_.Equals(other.meldCards3_)) return false;
      if(!meldCards4_.Equals(other.meldCards4_)) return false;
      if(!leftCards_.Equals(other.leftCards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      hash ^= allCards_.GetHashCode();
      hash ^= meldCards1_.GetHashCode();
      hash ^= meldCards2_.GetHashCode();
      hash ^= meldCards3_.GetHashCode();
      hash ^= meldCards4_.GetHashCode();
      hash ^= leftCards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      allCards_.WriteTo(output, _repeated_allCards_codec);
      meldCards1_.WriteTo(output, _repeated_meldCards1_codec);
      meldCards2_.WriteTo(output, _repeated_meldCards2_codec);
      meldCards3_.WriteTo(output, _repeated_meldCards3_codec);
      meldCards4_.WriteTo(output, _repeated_meldCards4_codec);
      leftCards_.WriteTo(output, _repeated_leftCards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      allCards_.WriteTo(ref output, _repeated_allCards_codec);
      meldCards1_.WriteTo(ref output, _repeated_meldCards1_codec);
      meldCards2_.WriteTo(ref output, _repeated_meldCards2_codec);
      meldCards3_.WriteTo(ref output, _repeated_meldCards3_codec);
      meldCards4_.WriteTo(ref output, _repeated_meldCards4_codec);
      leftCards_.WriteTo(ref output, _repeated_leftCards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      size += allCards_.CalculateSize(_repeated_allCards_codec);
      size += meldCards1_.CalculateSize(_repeated_meldCards1_codec);
      size += meldCards2_.CalculateSize(_repeated_meldCards2_codec);
      size += meldCards3_.CalculateSize(_repeated_meldCards3_codec);
      size += meldCards4_.CalculateSize(_repeated_meldCards4_codec);
      size += leftCards_.CalculateSize(_repeated_leftCards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsUpdateHandCardREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      allCards_.Add(other.allCards_);
      meldCards1_.Add(other.meldCards1_);
      meldCards2_.Add(other.meldCards2_);
      meldCards3_.Add(other.meldCards3_);
      meldCards4_.Add(other.meldCards4_);
      leftCards_.Add(other.leftCards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
          case 26:
          case 24: {
            allCards_.AddEntriesFrom(input, _repeated_allCards_codec);
            break;
          }
          case 34:
          case 32: {
            meldCards1_.AddEntriesFrom(input, _repeated_meldCards1_codec);
            break;
          }
          case 42:
          case 40: {
            meldCards2_.AddEntriesFrom(input, _repeated_meldCards2_codec);
            break;
          }
          case 50:
          case 48: {
            meldCards3_.AddEntriesFrom(input, _repeated_meldCards3_codec);
            break;
          }
          case 58:
          case 56: {
            meldCards4_.AddEntriesFrom(input, _repeated_meldCards4_codec);
            break;
          }
          case 66:
          case 64: {
            leftCards_.AddEntriesFrom(input, _repeated_leftCards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
          case 26:
          case 24: {
            allCards_.AddEntriesFrom(ref input, _repeated_allCards_codec);
            break;
          }
          case 34:
          case 32: {
            meldCards1_.AddEntriesFrom(ref input, _repeated_meldCards1_codec);
            break;
          }
          case 42:
          case 40: {
            meldCards2_.AddEntriesFrom(ref input, _repeated_meldCards2_codec);
            break;
          }
          case 50:
          case 48: {
            meldCards3_.AddEntriesFrom(ref input, _repeated_meldCards3_codec);
            break;
          }
          case 58:
          case 56: {
            meldCards4_.AddEntriesFrom(ref input, _repeated_meldCards4_codec);
            break;
          }
          case 66:
          case 64: {
            leftCards_.AddEntriesFrom(ref input, _repeated_leftCards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsUpdateHandCardRSP : pb::IMessage<TongitsUpdateHandCardRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsUpdateHandCardRSP> _parser = new pb::MessageParser<TongitsUpdateHandCardRSP>(() => new TongitsUpdateHandCardRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsUpdateHandCardRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsUpdateHandCardRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsUpdateHandCardRSP(TongitsUpdateHandCardRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      seatid_ = other.seatid_;
      uid_ = other.uid_;
      handCard_ = other.handCard_ != null ? other.handCard_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsUpdateHandCardRSP Clone() {
      return new TongitsUpdateHandCardRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 2;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 2) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 3;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 4) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "hand_card" field.</summary>
    public const int HandCardFieldNumber = 4;
    private global::Texas.Protocol.TongitsHandCard handCard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TongitsHandCard HandCard {
      get { return handCard_; }
      set {
        handCard_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsUpdateHandCardRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsUpdateHandCardRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Seatid != other.Seatid) return false;
      if (Uid != other.Uid) return false;
      if (!object.Equals(HandCard, other.HandCard)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (handCard_ != null) hash ^= HandCard.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasUid) {
        output.WriteRawTag(24);
        output.WriteInt64(Uid);
      }
      if (handCard_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(HandCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasUid) {
        output.WriteRawTag(24);
        output.WriteInt64(Uid);
      }
      if (handCard_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(HandCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (handCard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HandCard);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsUpdateHandCardRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.handCard_ != null) {
        if (handCard_ == null) {
          HandCard = new global::Texas.Protocol.TongitsHandCard();
        }
        HandCard.MergeFrom(other.HandCard);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            Uid = input.ReadInt64();
            break;
          }
          case 34: {
            if (handCard_ == null) {
              HandCard = new global::Texas.Protocol.TongitsHandCard();
            }
            input.ReadMessage(HandCard);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            Uid = input.ReadInt64();
            break;
          }
          case 34: {
            if (handCard_ == null) {
              HandCard = new global::Texas.Protocol.TongitsHandCard();
            }
            input.ReadMessage(HandCard);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsHandCardRSP : pb::IMessage<TongitsHandCardRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsHandCardRSP> _parser = new pb::MessageParser<TongitsHandCardRSP>(() => new TongitsHandCardRSP());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsHandCardRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsHandCardRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsHandCardRSP(TongitsHandCardRSP other) : this() {
      handCard_ = other.handCard_ != null ? other.handCard_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsHandCardRSP Clone() {
      return new TongitsHandCardRSP(this);
    }

    /// <summary>Field number for the "hand_card" field.</summary>
    public const int HandCardFieldNumber = 1;
    private global::Texas.Protocol.TongitsHandCard handCard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.TongitsHandCard HandCard {
      get { return handCard_; }
      set {
        handCard_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsHandCardRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsHandCardRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(HandCard, other.HandCard)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (handCard_ != null) hash ^= HandCard.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (handCard_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(HandCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (handCard_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(HandCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (handCard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HandCard);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsHandCardRSP other) {
      if (other == null) {
        return;
      }
      if (other.handCard_ != null) {
        if (handCard_ == null) {
          HandCard = new global::Texas.Protocol.TongitsHandCard();
        }
        HandCard.MergeFrom(other.HandCard);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (handCard_ == null) {
              HandCard = new global::Texas.Protocol.TongitsHandCard();
            }
            input.ReadMessage(HandCard);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (handCard_ == null) {
              HandCard = new global::Texas.Protocol.TongitsHandCard();
            }
            input.ReadMessage(HandCard);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsGetBestScoreREQ : pb::IMessage<TongitsGetBestScoreREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsGetBestScoreREQ> _parser = new pb::MessageParser<TongitsGetBestScoreREQ>(() => new TongitsGetBestScoreREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsGetBestScoreREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGetBestScoreREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGetBestScoreREQ(TongitsGetBestScoreREQ other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      uid_ = other.uid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGetBestScoreREQ Clone() {
      return new TongitsGetBestScoreREQ(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 2) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsGetBestScoreREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsGetBestScoreREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (Uid != other.Uid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsGetBestScoreREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TongitsGetBestScoreRSP : pb::IMessage<TongitsGetBestScoreRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TongitsGetBestScoreRSP> _parser = new pb::MessageParser<TongitsGetBestScoreRSP>(() => new TongitsGetBestScoreRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TongitsGetBestScoreRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.TongitsReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGetBestScoreRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGetBestScoreRSP(TongitsGetBestScoreRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      seatid_ = other.seatid_;
      uid_ = other.uid_;
      bestScore_ = other.bestScore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TongitsGetBestScoreRSP Clone() {
      return new TongitsGetBestScoreRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 2;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 2) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 3;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 4) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "best_score" field.</summary>
    public const int BestScoreFieldNumber = 4;
    private readonly static int BestScoreDefaultValue = 0;

    private int bestScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BestScore {
      get { if ((_hasBits0 & 8) != 0) { return bestScore_; } else { return BestScoreDefaultValue; } }
      set {
        _hasBits0 |= 8;
        bestScore_ = value;
      }
    }
    /// <summary>Gets whether the "best_score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBestScore {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "best_score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBestScore() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TongitsGetBestScoreRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TongitsGetBestScoreRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Seatid != other.Seatid) return false;
      if (Uid != other.Uid) return false;
      if (BestScore != other.BestScore) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasBestScore) hash ^= BestScore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasUid) {
        output.WriteRawTag(24);
        output.WriteInt64(Uid);
      }
      if (HasBestScore) {
        output.WriteRawTag(32);
        output.WriteInt32(BestScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasSeatid) {
        output.WriteRawTag(16);
        output.WriteInt32(Seatid);
      }
      if (HasUid) {
        output.WriteRawTag(24);
        output.WriteInt64(Uid);
      }
      if (HasBestScore) {
        output.WriteRawTag(32);
        output.WriteInt32(BestScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasBestScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BestScore);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TongitsGetBestScoreRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasBestScore) {
        BestScore = other.BestScore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            Uid = input.ReadInt64();
            break;
          }
          case 32: {
            BestScore = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Seatid = input.ReadInt32();
            break;
          }
          case 24: {
            Uid = input.ReadInt64();
            break;
          }
          case 32: {
            BestScore = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
