// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: sng.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Texas.Protocol {

  /// <summary>Holder for reflection information generated from sng.proto</summary>
  public static partial class SngReflection {

    #region Descriptor
    /// <summary>File descriptor for sng.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SngReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglzbmcucHJvdG8aDnByZV9iYXNlLnByb3RvGgpiYXNlLnByb3RvGg9wcmVf",
            "YmFzZTEucHJvdG8i0QwKEENyZWF0ZVNuZ1Jvb21SRVESFgoJcm9vbV9uYW1l",
            "GAEgASgJSACIAQESGQoMdXBibGluZF90aW1lGAIgASgFSAGIAQESGAoLYWN0",
            "aW9uX3RpbWUYAyABKAVIAogBARISCgVidXlpbhgEIAEoA0gDiAEBEhgKC2Jl",
            "Z2luX2NoaXBzGAUgASgDSASIAQESFwoKYmxpbmRfdHlwZRgGIAEoBUgFiAEB",
            "EhcKCmF1dGhfbGltaXQYByABKAhIBogBARITCgZjbHViaWQYCCABKAVIB4gB",
            "ARIVCghzZWF0X251bRgJIAEoBUgIiAEBEhMKBmNoYXJnZRgKIAEoA0gJiAEB",
            "EhUKCHRpbWV6b25lGAsgASgFSAqIAQESHAoEdHlwZRgMIAEoDjIJLlJvb21U",
            "eXBlSAuIAQESEwoGcm9vbWlkGA0gASgFSAyIAQESFQoIbGVhZ3VlaWQYDiAB",
            "KAVIDYgBARIWCglncHNfbGltaXQYDyABKAhIDogBARIVCghpcF9saW1pdBgQ",
            "IAEoCEgPiAEBEiEKCWdhbWVfbW9kZRgRIAEoDjIJLkdhbWVNb2RlSBCIAQES",
            "FQoIbW9kdWxlaWQYEiABKANIEYgBARIXCgptdWx0aV9vcGlkGBMgASgJSBKI",
            "AQESFAoHY2FuX3VzZRgUIAEoCEgTiAEBEiAKE2lzX2F1dG9fY3JlYXRlX3Jv",
            "b20YFSABKAhIFIgBARIcCg9jcmVhdG9yX3VzZXJfaWQYFiABKANIFYgBARIb",
            "Cg5mb3JiaWRkZW5fY2hhdBgXIAEoCEgWiAEBEhkKDHBhc3N3ZF9saW1pdBgY",
            "IAEoCEgXiAEBEh0KEG1heF9yZXdhcmRfcmF0aW8YGSABKAVIGIgBARIjChZw",
            "YXVzZV9hdXRvX2NyZWF0ZV90aW1lGBogASgDSBmIAQESGwoOc3VwZXJfbGVh",
            "Z3VlaWQYGyABKAVIGogBARIVCghtYXRjaF9pZBgcIAEoBUgbiAEBEhMKBnRl",
            "bXBpZBgdIAEoCUgciAEBEh4KEXN1cGVyX2xlYWd1ZV90eXBlGB4gASgFSB2I",
            "AQESGQoMY2hhcmdlX3JhdGlvGB8gASgFSB6IAQESKAoLcmV3YXJkX21vZGUY",
            "ICABKA4yDi5NdHRSZXdhcmRNb2RlSB+IAQESGgoNZGVyaXZlX3Jvb21pZBgh",
            "IAEoBUggiAEBEhYKCWlzX2Jhbl9wYxgiIAEoCEghiAEBEhoKDWlzX2NoZWNr",
            "X21haWwYIyABKAhIIogBARIgChNmb3JiaWRkZW5fY2hhdF9tb2RlGCQgASgF",
            "SCOIAQESEwoGcHBzdGlkGCUgASgFSCSIAQESEAoIYmFuX2NsdWIYJiADKAUS",
            "EwoLYmFuX2NvdW50cnkYJyADKAlCDAoKX3Jvb21fbmFtZUIPCg1fdXBibGlu",
            "ZF90aW1lQg4KDF9hY3Rpb25fdGltZUIICgZfYnV5aW5CDgoMX2JlZ2luX2No",
            "aXBzQg0KC19ibGluZF90eXBlQg0KC19hdXRoX2xpbWl0QgkKB19jbHViaWRC",
            "CwoJX3NlYXRfbnVtQgkKB19jaGFyZ2VCCwoJX3RpbWV6b25lQgcKBV90eXBl",
            "QgkKB19yb29taWRCCwoJX2xlYWd1ZWlkQgwKCl9ncHNfbGltaXRCCwoJX2lw",
            "X2xpbWl0QgwKCl9nYW1lX21vZGVCCwoJX21vZHVsZWlkQg0KC19tdWx0aV9v",
            "cGlkQgoKCF9jYW5fdXNlQhYKFF9pc19hdXRvX2NyZWF0ZV9yb29tQhIKEF9j",
            "cmVhdG9yX3VzZXJfaWRCEQoPX2ZvcmJpZGRlbl9jaGF0Qg8KDV9wYXNzd2Rf",
            "bGltaXRCEwoRX21heF9yZXdhcmRfcmF0aW9CGQoXX3BhdXNlX2F1dG9fY3Jl",
            "YXRlX3RpbWVCEQoPX3N1cGVyX2xlYWd1ZWlkQgsKCV9tYXRjaF9pZEIJCgdf",
            "dGVtcGlkQhQKEl9zdXBlcl9sZWFndWVfdHlwZUIPCg1fY2hhcmdlX3JhdGlv",
            "Qg4KDF9yZXdhcmRfbW9kZUIQCg5fZGVyaXZlX3Jvb21pZEIMCgpfaXNfYmFu",
            "X3BjQhAKDl9pc19jaGVja19tYWlsQhYKFF9mb3JiaWRkZW5fY2hhdF9tb2Rl",
            "QgkKB19wcHN0aWQidQoQQ3JlYXRlU25nUm9vbVJTUBIRCgRjb2RlGAEgASgF",
            "SACIAQESEwoGcm9vbWlkGAIgASgFSAGIAQESHAoEdHlwZRgDIAEoDjIJLlJv",
            "b21UeXBlSAKIAQFCBwoFX2NvZGVCCQoHX3Jvb21pZEIHCgVfdHlwZSJGCghB",
            "bnRlSW5mbxITCgZzZWF0aWQYASABKAVIAIgBARIRCgRhbnRlGAIgASgDSAGI",
            "AQFCCQoHX3NlYXRpZEIHCgVfYW50ZSI+CgdBbnRlQlJDEhcKBGluZm8YASAD",
            "KAsyCS5BbnRlSW5mbxIRCgRhbnRlGAIgASgDSACIAQFCBwoFX2FudGUiuAEK",
            "ClNuZ0luZm9SRVESEwoGcm9vbWlkGAEgASgFSACIAQESEAoDdWlkGAIgASgD",
            "SAGIAQESEwoGY2x1YmlkGAMgASgFSAKIAQESFQoIbGVhZ3VlaWQYBCABKAVI",
            "A4gBARIaCg1zdXBlcmxlYWd1ZWlkGAUgASgFSASIAQFCCQoHX3Jvb21pZEIG",
            "CgRfdWlkQgkKB19jbHViaWRCCwoJX2xlYWd1ZWlkQhAKDl9zdXBlcmxlYWd1",
            "ZWlkIm4KClNuZ0luZm9SU1ASEQoEY29kZRgBIAEoBUgAiAEBEh8KBGluZm8Y",
            "AiABKAsyDC5TbmdSb29tSW5mb0gBiAEBEhoKBnBsYXllchgDIAMoCzIKLlVz",
            "ZXJCcmllZkIHCgVfY29kZUIHCgVfaW5mbyJbCg1TZWF0U3RhdHVzQlJDEhMK",
            "BnNlYXRpZBgBIAEoBUgAiAEBEhkKDHNlYXRfcmVzZXJ2ZRgCIAEoCEgBiAEB",
            "QgkKB19zZWF0aWRCDwoNX3NlYXRfcmVzZXJ2ZSKmAQoOUmVzZXJ2ZVNlYXRS",
            "RVESFAoHcmVzZXJ2ZRgBIAEoCEgAiAEBEhQKB2dwc19sb24YAiABKAVIAYgB",
            "ARIUCgdncHNfbGF0GAMgASgFSAKIAQESDwoCaXAYBCABKAlIA4gBARIPCgJw",
            "YxgFIAEoCEgEiAEBQgoKCF9yZXNlcnZlQgoKCF9ncHNfbG9uQgoKCF9ncHNf",
            "bGF0QgUKA19pcEIFCgNfcGMiTgoOUmVzZXJ2ZVNlYXRSU1ASEQoEY29kZRgB",
            "IAEoBUgAiAEBEhQKB3Jlc2VydmUYAiABKAhIAYgBAUIHCgVfY29kZUIKCghf",
            "cmVzZXJ2ZSKsAQoOVXNlclNuZ092ZXJSU1ASEQoEcmFuaxgBIAEoBUgAiAEB",
            "EigKC3Jld2FyZF9pbmZvGAIgASgLMg4uTXR0UmV3YXJkSW5mb0gBiAEBEhMK",
            "BnRlbXBpZBgDIAEoCUgCiAEBEhYKCXRvdGFsX251bRgEIAEoBUgDiAEBQgcK",
            "BV9yYW5rQg4KDF9yZXdhcmRfaW5mb0IJCgdfdGVtcGlkQgwKCl90b3RhbF9u",
            "dW0iTwoKU25nT3ZlckJSQxIZCgRpbmZvGAEgAygLMgsuUHJvZml0SW5mbxIX",
            "Cgppc19zdGFydGVkGAIgASgISACIAQFCDQoLX2lzX3N0YXJ0ZWQiUwoNR2Ft",
            "ZUNvbWluZ1JTUBIRCgRsZWZ0GAEgASgFSACIAQESFwoKbXR0X3N0YXR1cxgC",
            "IAEoBUgBiAEBQgcKBV9sZWZ0Qg0KC19tdHRfc3RhdHVzIkwKClNuZ0pvaW5S",
            "RVESEwoGdGVtcGlkGAEgASgJSACIAQESEwoGY2x1YmlkGAIgASgFSAGIAQFC",
            "CQoHX3RlbXBpZEIJCgdfY2x1YmlkImgKClNuZ0pvaW5SU1ASEQoEY29kZRgB",
            "IAEoBUgAiAEBEhMKBnJvb21pZBgCIAEoBUgBiAEBEhMKBnRlbXBpZBgDIAEo",
            "CUgCiAEBQgcKBV9jb2RlQgkKB19yb29taWRCCQoHX3RlbXBpZCKxAQoVU3Bp",
            "blVwRHJhd0xvdHRlcnlJdGVtEicKBHR5cGUYASABKA4yFC5EcmF3TG90dGVy",
            "eUl0ZW1UeXBlSACIAQESEgoFdmFsdWUYAiABKANIAYgBARIWCglpdGVtX25h",
            "bWUYAyABKAlIAogBARIVCghpdGVtX251bRgEIAEoBUgDiAEBQgcKBV90eXBl",
            "QggKBl92YWx1ZUIMCgpfaXRlbV9uYW1lQgsKCV9pdGVtX251bSLIAwoJU3Bp",
            "blVwQlJDEiEKBHR5cGUYASABKA4yDi5TcGluVXBCUkNUeXBlSACIAQESKwoG",
            "cmV3YXJkGAIgASgLMhYuU3BpblVwRHJhd0xvdHRlcnlJdGVtSAGIAQESFgoJ",
            "dXNlcl9uYW1lGAMgASgJSAKIAQESGAoLc2Vjb25kX3RpbWUYBCABKAVIA4gB",
            "ARIcCg9uZXh0X2Nvc3RfdmFsdWUYBSABKANIBIgBARIXCgpjb3N0X3ZhbHVl",
            "GAYgASgDSAWIAQESHgoRZHJhd19sb3R0ZXJ5X292ZXIYByABKAhIBogBARIX",
            "CgpyZWRyYXdfdWlkGAggASgDSAeIAQESFwoPcmVkcmF3X3VpZF9saXN0GAkg",
            "AygDEh8KEnJlbWFpbl9zZWNvbmRfdGltZRgKIAEoBUgIiAEBQgcKBV90eXBl",
            "QgkKB19yZXdhcmRCDAoKX3VzZXJfbmFtZUIOCgxfc2Vjb25kX3RpbWVCEgoQ",
            "X25leHRfY29zdF92YWx1ZUINCgtfY29zdF92YWx1ZUIUChJfZHJhd19sb3R0",
            "ZXJ5X292ZXJCDQoLX3JlZHJhd191aWRCFQoTX3JlbWFpbl9zZWNvbmRfdGlt",
            "ZSJCChRTcGluVXBEcmF3TG90dGVyeVJFURIhCgR0eXBlGAEgASgOMg4uU3Bp",
            "blVwUkVRVHlwZUgAiAEBQgcKBV90eXBlIl4KFFNwaW5VcERyYXdMb3R0ZXJ5",
            "UlNQEhEKBGNvZGUYASABKAVIAIgBARIhCgR0eXBlGAIgASgOMg4uU3BpblVw",
            "UkVRVHlwZUgBiAEBQgcKBV9jb2RlQgcKBV90eXBlIhoKGEdldFNwaW5VcFJl",
            "d2FyZFJlc3VsdFJFUSJuChhHZXRTcGluVXBSZXdhcmRSZXN1bHRSU1ASEQoE",
            "Y29kZRgBIAEoBUgAiAEBEisKBnJld2FyZBgCIAEoCzIWLlNwaW5VcERyYXdM",
            "b3R0ZXJ5SXRlbUgBiAEBQgcKBV9jb2RlQgkKB19yZXdhcmQifQobU3BpblVw",
            "RHJhd0xvdHRlcnlWZXJzaW9uQlJDEhsKDmlzX29sZF92ZXJzaW9uGAEgASgI",
            "SACIAQESGwoOY2xpbmV0X3ZlcnNpb24YAiABKAlIAYgBAUIRCg9faXNfb2xk",
            "X3ZlcnNpb25CEQoPX2NsaW5ldF92ZXJzaW9uIvcBChVTcGluVXBEcmF3TG90",
            "dGVyeUluZm8SIAoTZHJhd19sb3R0ZXJ5X2ZpbmlzaBgBIAEoCEgAiAEBEh0K",
            "BGluZm8YAiABKAsyCi5TcGluVXBCUkNIAYgBARI3Cgx2ZXJzaW9uX2luZm8Y",
            "AyABKAsyHC5TcGluVXBEcmF3TG90dGVyeVZlcnNpb25CUkNIAogBARIdChBt",
            "YXhfcmV3YXJkX3JhdGlvGAQgASgFSAOIAQFCFgoUX2RyYXdfbG90dGVyeV9m",
            "aW5pc2hCBwoFX2luZm9CDwoNX3ZlcnNpb25faW5mb0ITChFfbWF4X3Jld2Fy",
            "ZF9yYXRpbyJSCg5IYW5kT3B0U3ViSW5mbxIVCgh0aW1lc19iYhgBIAEoBUgA",
            "iAEBEhIKBXZhbHVlGAIgASgDSAGIAQFCCwoJX3RpbWVzX2JiQggKBl92YWx1",
            "ZSKxAQoMR3Vlc3NIYW5kUkVREigKCHJlcV90eXBlGAEgASgOMhEuR3Vlc3NI",
            "YW5kUkVRVHlwZUgAiAEBEigKCG9wdF90eXBlGAIgASgOMhEuR3Vlc3NIYW5k",
            "T3B0VHlwZUgBiAEBEiYKCHN1Yl9pbmZvGAMgASgLMg8uSGFuZE9wdFN1Yklu",
            "Zm9IAogBAUILCglfcmVxX3R5cGVCCwoJX29wdF90eXBlQgsKCV9zdWJfaW5m",
            "byKmAQoPUmFuZEhhbmRPcHRJbmZvEiQKBHR5cGUYASABKA4yES5HdWVzc0hh",
            "bmRPcHRUeXBlSACIAQESIgoJc3ViX2luZm9zGAIgAygLMg8uSGFuZE9wdFN1",
            "YkluZm8SFgoJdGltZXNfc3RyGAMgASgJSAGIAQESEQoEaW5mbxgEIAEoCUgC",
            "iAEBQgcKBV90eXBlQgwKCl90aW1lc19zdHJCBwoFX2luZm8ilgIKDEd1ZXNz",
            "SGFuZFJTUBIkCgRjb2RlGAEgASgOMhEuR3Vlc3NIYW5kUkVUQ29kZUgAiAEB",
            "EigKCHJlcV90eXBlGAIgASgOMhEuR3Vlc3NIYW5kUkVRVHlwZUgBiAEBEigK",
            "CG9wdF90eXBlGAMgASgOMhEuR3Vlc3NIYW5kT3B0VHlwZUgCiAEBEicKCG9w",
            "dF9pbmZvGAQgASgLMhAuUmFuZEhhbmRPcHRJbmZvSAOIAQESJgoIc3ViX2lu",
            "Zm8YBSABKAsyDy5IYW5kT3B0U3ViSW5mb0gEiAEBQgcKBV9jb2RlQgsKCV9y",
            "ZXFfdHlwZUILCglfb3B0X3R5cGVCCwoJX29wdF9pbmZvQgsKCV9zdWJfaW5m",
            "byKcAQoSR3Vlc3NIYW5kUmVzdWx0UlNQEhEKBGNvZGUYASABKAVIAIgBARIo",
            "CghvcHRfdHlwZRgCIAEoDjIRLkd1ZXNzSGFuZE9wdFR5cGVIAYgBARImCghz",
            "dWJfaW5mbxgDIAEoCzIPLkhhbmRPcHRTdWJJbmZvSAKIAQFCBwoFX2NvZGVC",
            "CwoJX29wdF90eXBlQgsKCV9zdWJfaW5mbyKNAgoQR3Vlc3NIYW5kU3ViSW5m",
            "bxIoCghvcHRfdHlwZRgBIAEoDjIRLkd1ZXNzSGFuZE9wdFR5cGVIAIgBARIV",
            "Cghpc19ndWVzcxgCIAEoCEgBiAEBEiYKCHN1Yl9pbmZvGAMgASgLMg8uSGFu",
            "ZE9wdFN1YkluZm9IAogBARInCg5yYW5kX3N1Yl9pbmZvcxgEIAMoCzIPLkhh",
            "bmRPcHRTdWJJbmZvEhYKCXRpbWVzX3N0chgFIAEoCUgDiAEBEhEKBGluZm8Y",
            "BiABKAlIBIgBAUILCglfb3B0X3R5cGVCCwoJX2lzX2d1ZXNzQgsKCV9zdWJf",
            "aW5mb0IMCgpfdGltZXNfc3RyQgcKBV9pbmZvIu0BChRXYWl0aW5nR2FtZVN0",
            "YXJ0SW5mbxIhCglyb29tX3R5cGUYASABKA4yCS5Sb29tVHlwZUgAiAEBEhUK",
            "CHNlYXRfbnVtGAIgASgFSAGIAQESFQoId2FpdF9udW0YAyABKAVIAogBARId",
            "ChBhdmVfbWF0Y2hfc2Vjb25kGAQgASgFSAOIAQESGAoLd2FpdF9zZWNvbmQY",
            "BSABKAVIBIgBAUIMCgpfcm9vbV90eXBlQgsKCV9zZWF0X251bUILCglfd2Fp",
            "dF9udW1CEwoRX2F2ZV9tYXRjaF9zZWNvbmRCDgoMX3dhaXRfc2Vjb25kIg0K",
            "C0NhbGxHYW1lUkVRIqEBCgtDYWxsR2FtZVJTUBIjCgRjb2RlGAEgASgOMhAu",
            "Q2FsbEdhbWVSZXRDb2RlSACIAQESHAoPY2FsbGdhbWVfc2Vjb25kGAIgASgF",
            "SAGIAQESHQoQdHJ5X2FnYWluX3NlY29uZBgDIAEoBUgCiAEBQgcKBV9jb2Rl",
            "QhIKEF9jYWxsZ2FtZV9zZWNvbmRCEwoRX3RyeV9hZ2Fpbl9zZWNvbmQisAQK",
            "C0NhbGxHYW1lQlJDEhAKA3VpZBgBIAEoA0gAiAEBEhYKCXVzZXJfbmFtZRgC",
            "IAEoCUgBiAEBEhwKD2NhbGxnYW1lX3NlY29uZBgDIAEoBUgCiAEBEiEKCXJv",
            "b21fdHlwZRgEIAEoDjIJLlJvb21UeXBlSAOIAQESIQoJZ2FtZV9tb2RlGAUg",
            "ASgOMgkuR2FtZU1vZGVIBIgBARITCgZ0ZW1waWQYBiABKAlIBYgBARISCgVi",
            "bGluZBgHIAEoA0gGiAEBEhYKCW1pbl9idXlpbhgIIAEoA0gHiAEBEhYKCW1h",
            "eF9idXlpbhgJIAEoA0gIiAEBEhgKC3Nob3dfc2Vjb25kGAogASgFSAmIAQES",
            "EwoGcm9vbWlkGAsgASgFSAqIAQESFgoJcm9vbV9uYW1lGAwgASgJSAuIAQES",
            "FQoIc2VhdF9udW0YDSABKAVIDIgBARIhCglyb29tX21vZGUYDiABKA4yCS5S",
            "b29tTW9kZUgNiAEBQgYKBF91aWRCDAoKX3VzZXJfbmFtZUISChBfY2FsbGdh",
            "bWVfc2Vjb25kQgwKCl9yb29tX3R5cGVCDAoKX2dhbWVfbW9kZUIJCgdfdGVt",
            "cGlkQggKBl9ibGluZEIMCgpfbWluX2J1eWluQgwKCl9tYXhfYnV5aW5CDgoM",
            "X3Nob3dfc2Vjb25kQgkKB19yb29taWRCDAoKX3Jvb21fbmFtZUILCglfc2Vh",
            "dF9udW1CDAoKX3Jvb21fbW9kZSLCAQoMQ2FsbEdhbWVJbmZvEhYKCWJjYWxs",
            "Z2FtZRgBIAEoCEgAiAEBEhwKD2NhbGxnYW1lX3NlY29uZBgCIAEoBUgBiAEB",
            "EhoKDXJlbWFpbl9zZWNvbmQYAyABKAVIAogBARIaCg1jYWxsZ2FtZV9jb3N0",
            "GAQgASgDSAOIAQFCDAoKX2JjYWxsZ2FtZUISChBfY2FsbGdhbWVfc2Vjb25k",
            "QhAKDl9yZW1haW5fc2Vjb25kQhAKDl9jYWxsZ2FtZV9jb3N0IpcBCg9FbnRl",
            "ck5leHRTbmdSRVESEwoGY2x1YmlkGAEgASgFSACIAQESFQoIbGVhZ3VlaWQY",
            "AiABKAVIAYgBARIVCghyb29tdHlwZRgDIAEoBUgCiAEBEhIKBWJ1eWluGAQg",
            "ASgFSAOIAQFCCQoHX2NsdWJpZEILCglfbGVhZ3VlaWRCCwoJX3Jvb210eXBl",
            "QggKBl9idXlpbiKRAQoPRW50ZXJOZXh0U25nUlNQEhEKBGNvZGUYASABKAVI",
            "AIgBARITCgZjbHViaWQYAiABKAVIAYgBARIVCghsZWFndWVpZBgDIAEoBUgC",
            "iAEBEhMKBnJvb21pZBgEIAEoBUgDiAEBQgcKBV9jb2RlQgkKB19jbHViaWRC",
            "CwoJX2xlYWd1ZWlkQgkKB19yb29taWQqlQIKDVNwaW5VcEJSQ1R5cGUSGAoU",
            "U1BJTlVQX0JSQ19UWVBFX05PTkUQABImCiJTUElOVVBfQlJDX1RZUEVfU1RB",
            "UlRfRFJBV19MT1RURVJZEAESJwojU1BJTlVQX0JSQ19UWVBFX1JFU1VMVF9E",
            "UkFXX0xPVFRFUlkQAhIiCh5TUElOVVBfQlJDX1RZUEVfTk9XX1NUQVJUX0dB",
            "TUUQAxIiCh5TUElOVVBfQlJDX1RZUEVfUkVEUkFXX0xPVFRFUlkQBBIpCiVT",
            "UElOVVBfQlJDX1RZUEVfUkVKRUNUX1JFRFJBV19MT1RURVJZEAUSJgoiU1BJ",
            "TlVQX0JSQ19UWVBFX1JFQURZX0RSQVdfTE9UVEVSWRAGKr8BChNEcmF3TG90",
            "dGVyeUl0ZW1UeXBlEiEKHURSQVdfTE9UVEVSWV9JVE1FX1RZUEVfUFBDSElQ",
            "EAASHwobRFJBV19MT1RURVJZX0lUTUVfVFlQRV9HT0xEEAESHwobRFJBV19M",
            "T1RURVJZX0lUTUVfVFlQRV9JVEVNEAISIAocRFJBV19MT1RURVJZX0lUTUVf",
            "VFlQRV9TT0NSRRADEiEKHURSQVdfTE9UVEVSWV9JVE1FX1RZUEVfUkVCQVRF",
            "EAQqrAEKDVNwaW5VcFJFUVR5cGUSKQolU1BJTlVQX1JFUV9UWVBFX1JFSkVD",
            "VF9SRURSQVdfTE9UVEVSWRAAEiIKHlNQSU5VUF9SRVFfVFlQRV9OT1dfU1RB",
            "UlRfR0FNRRABEiIKHlNQSU5VUF9SRVFfVFlQRV9SRURSQVdfTE9UVEVSWRAC",
            "EigKJFNQSU5VUF9SRVFfVFlQRV9BR1JFRV9SRURSQVdfTE9UVEVSWRADKtgC",
            "ChBHdWVzc0hhbmRPcHRUeXBlEhoKFkdVRVNTSEFORF9PUFRUWVBFX05PTkUQ",
            "ABIbChdHVUVTU0hBTkRfT1BUVFlQRV9GTFVTSBABEhwKGEdVRVNTSEFORF9P",
            "UFRUWVBFX0hBVkVfQRACEhoKFkdVRVNTSEFORF9PUFRUWVBFX1BBSVIQAxIb",
            "ChdHVUVTU0hBTkRfT1BUVFlQRV9QQUlSQRAEEhsKF0dVRVNTSEFORF9PUFRU",
            "WVBFX1BBSVIyEAUSGwoXR1VFU1NIQU5EX09QVFRZUEVfUEFJUjgQBhIYChRH",
            "VUVTU0hBTkRfT1BUVFlQRV9BSxAHEhgKFEdVRVNTSEFORF9PUFRUWVBFX0FR",
            "EAgSJQohR1VFU1NIQU5EX09QVFRZUEVfU1RSQUlHSFRfRkxVU0hGEAkSHwob",
            "R1VFU1NIQU5EX09QVFRZUEVfQUtfRkxVU0hGEAoqTgoQR3Vlc3NIYW5kUkVR",
            "VHlwZRIcChhHVUVTU0hBTkRfUkVRVFlQRV9HRVRPUFQQABIcChhHVUVTU0hB",
            "TkRfUkVRVFlQRV9BQ1RJT04QASqOAwoQR3Vlc3NIYW5kUkVUQ29kZRIeChpH",
            "VUVTU0hBTkRfUkVUQ09ERV9TVVVDQ0VTUxAAEh8KG0dVRVNTSEFORF9SRVRD",
            "T0RFX0hBRF9HVUVTUxABEiQKIEdVRVNTSEFORF9SRVRDT0RFX0dPTERfTk9f",
            "RU5PVUdIEAISKgomR1VFU1NIQU5EX1JFVENPREVfV0FUQ0hFUl9DQU5OT1Rf",
            "R1VFU1MQAxIkCiBHVUVTU0hBTkRfUkVUQ09ERV9OT1RfR0VUUkFORE9QVBAE",
            "Ei8KK0dVRVNTSEFORF9SRVRDT0RFX1dBVENIRVJfQ0FOTk9UX0dFVFJBTkRP",
            "UFQQBRIlCiFHVUVTU0hBTkRfUkVUQ09ERV9HQU1FX01PREVfV1JPTkcQBhIl",
            "CiFHVUVTU0hBTkRfUkVUQ09ERV9ST09NX1RZUEVfV1JPTkcQBxIlCiFHVUVT",
            "U0hBTkRfUkVUQ09ERV9ST09NX01PREVfV1JPTkcQCBIbChdHVUVTU0hBTkRf",
            "UkVUQ09ERV9FUlJPUhAJKssCCg9DYWxsR2FtZVJldENvZGUSHQoZQ0FMTEdB",
            "TUVfUkVUQ09ERV9TVVVDQ0VTUxAAEiEKHUNBTExHQU1FX1JFVENPREVfSEFE",
            "X0NBTExHQU1FEAESIwofQ0FMTEdBTUVfUkVUQ09ERV9HT0xEX05PX0VOT1VH",
            "SBACEiAKHENBTExHQU1FX1JFVENPREVfTElNSVRfVElNRVMQAxImCiJDQUxM",
            "R0FNRV9SRVRDT0RFX0xJTUlUX0NPTkNVUlJFTkNZEAQSIwofQ0FMTEdBTUVf",
            "UkVUQ09ERV9MSU1JVF9PQlNFUlZFUhAFEh8KG0NBTExHQU1FX1JFVENPREVf",
            "TElNSVRfUk9PTRAGEiUKIUNBTExHQU1FX1JFVENPREVfTElNSVRfU0lURURf",
            "U0laRRAHEhoKFkNBTExHQU1FX1JFVENPREVfRVJST1IQCEIaWgcvcGJwcGdv",
            "qgIOVGV4YXMuUHJvdG9jb2xiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Texas.Protocol.PreBaseReflection.Descriptor, global::Texas.Protocol.BaseReflection.Descriptor, global::Texas.Protocol.PreBase1Reflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Texas.Protocol.SpinUpBRCType), typeof(global::Texas.Protocol.DrawLotteryItemType), typeof(global::Texas.Protocol.SpinUpREQType), typeof(global::Texas.Protocol.GuessHandOptType), typeof(global::Texas.Protocol.GuessHandREQType), typeof(global::Texas.Protocol.GuessHandRETCode), typeof(global::Texas.Protocol.CallGameRetCode), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.CreateSngRoomREQ), global::Texas.Protocol.CreateSngRoomREQ.Parser, new[]{ "RoomName", "UpblindTime", "ActionTime", "Buyin", "BeginChips", "BlindType", "AuthLimit", "Clubid", "SeatNum", "Charge", "Timezone", "Type", "Roomid", "Leagueid", "GpsLimit", "IpLimit", "GameMode", "Moduleid", "MultiOpid", "CanUse", "IsAutoCreateRoom", "CreatorUserId", "ForbiddenChat", "PasswdLimit", "MaxRewardRatio", "PauseAutoCreateTime", "SuperLeagueid", "MatchId", "Tempid", "SuperLeagueType", "ChargeRatio", "RewardMode", "DeriveRoomid", "IsBanPc", "IsCheckMail", "ForbiddenChatMode", "Ppstid", "BanClub", "BanCountry" }, new[]{ "RoomName", "UpblindTime", "ActionTime", "Buyin", "BeginChips", "BlindType", "AuthLimit", "Clubid", "SeatNum", "Charge", "Timezone", "Type", "Roomid", "Leagueid", "GpsLimit", "IpLimit", "GameMode", "Moduleid", "MultiOpid", "CanUse", "IsAutoCreateRoom", "CreatorUserId", "ForbiddenChat", "PasswdLimit", "MaxRewardRatio", "PauseAutoCreateTime", "SuperLeagueid", "MatchId", "Tempid", "SuperLeagueType", "ChargeRatio", "RewardMode", "DeriveRoomid", "IsBanPc", "IsCheckMail", "ForbiddenChatMode", "Ppstid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.CreateSngRoomRSP), global::Texas.Protocol.CreateSngRoomRSP.Parser, new[]{ "Code", "Roomid", "Type" }, new[]{ "Code", "Roomid", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.AnteInfo), global::Texas.Protocol.AnteInfo.Parser, new[]{ "Seatid", "Ante" }, new[]{ "Seatid", "Ante" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.AnteBRC), global::Texas.Protocol.AnteBRC.Parser, new[]{ "Info", "Ante" }, new[]{ "Ante" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SngInfoREQ), global::Texas.Protocol.SngInfoREQ.Parser, new[]{ "Roomid", "Uid", "Clubid", "Leagueid", "Superleagueid" }, new[]{ "Roomid", "Uid", "Clubid", "Leagueid", "Superleagueid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SngInfoRSP), global::Texas.Protocol.SngInfoRSP.Parser, new[]{ "Code", "Info", "Player" }, new[]{ "Code", "Info" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SeatStatusBRC), global::Texas.Protocol.SeatStatusBRC.Parser, new[]{ "Seatid", "SeatReserve" }, new[]{ "Seatid", "SeatReserve" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ReserveSeatREQ), global::Texas.Protocol.ReserveSeatREQ.Parser, new[]{ "Reserve", "GpsLon", "GpsLat", "Ip", "Pc" }, new[]{ "Reserve", "GpsLon", "GpsLat", "Ip", "Pc" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.ReserveSeatRSP), global::Texas.Protocol.ReserveSeatRSP.Parser, new[]{ "Code", "Reserve" }, new[]{ "Code", "Reserve" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.UserSngOverRSP), global::Texas.Protocol.UserSngOverRSP.Parser, new[]{ "Rank", "RewardInfo", "Tempid", "TotalNum" }, new[]{ "Rank", "RewardInfo", "Tempid", "TotalNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SngOverBRC), global::Texas.Protocol.SngOverBRC.Parser, new[]{ "Info", "IsStarted" }, new[]{ "IsStarted" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.GameComingRSP), global::Texas.Protocol.GameComingRSP.Parser, new[]{ "Left", "MttStatus" }, new[]{ "Left", "MttStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SngJoinREQ), global::Texas.Protocol.SngJoinREQ.Parser, new[]{ "Tempid", "Clubid" }, new[]{ "Tempid", "Clubid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SngJoinRSP), global::Texas.Protocol.SngJoinRSP.Parser, new[]{ "Code", "Roomid", "Tempid" }, new[]{ "Code", "Roomid", "Tempid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SpinUpDrawLotteryItem), global::Texas.Protocol.SpinUpDrawLotteryItem.Parser, new[]{ "Type", "Value", "ItemName", "ItemNum" }, new[]{ "Type", "Value", "ItemName", "ItemNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SpinUpBRC), global::Texas.Protocol.SpinUpBRC.Parser, new[]{ "Type", "Reward", "UserName", "SecondTime", "NextCostValue", "CostValue", "DrawLotteryOver", "RedrawUid", "RedrawUidList", "RemainSecondTime" }, new[]{ "Type", "Reward", "UserName", "SecondTime", "NextCostValue", "CostValue", "DrawLotteryOver", "RedrawUid", "RemainSecondTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SpinUpDrawLotteryREQ), global::Texas.Protocol.SpinUpDrawLotteryREQ.Parser, new[]{ "Type" }, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SpinUpDrawLotteryRSP), global::Texas.Protocol.SpinUpDrawLotteryRSP.Parser, new[]{ "Code", "Type" }, new[]{ "Code", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.GetSpinUpRewardResultREQ), global::Texas.Protocol.GetSpinUpRewardResultREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.GetSpinUpRewardResultRSP), global::Texas.Protocol.GetSpinUpRewardResultRSP.Parser, new[]{ "Code", "Reward" }, new[]{ "Code", "Reward" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SpinUpDrawLotteryVersionBRC), global::Texas.Protocol.SpinUpDrawLotteryVersionBRC.Parser, new[]{ "IsOldVersion", "ClinetVersion" }, new[]{ "IsOldVersion", "ClinetVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.SpinUpDrawLotteryInfo), global::Texas.Protocol.SpinUpDrawLotteryInfo.Parser, new[]{ "DrawLotteryFinish", "Info", "VersionInfo", "MaxRewardRatio" }, new[]{ "DrawLotteryFinish", "Info", "VersionInfo", "MaxRewardRatio" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.HandOptSubInfo), global::Texas.Protocol.HandOptSubInfo.Parser, new[]{ "TimesBb", "Value" }, new[]{ "TimesBb", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.GuessHandREQ), global::Texas.Protocol.GuessHandREQ.Parser, new[]{ "ReqType", "OptType", "SubInfo" }, new[]{ "ReqType", "OptType", "SubInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.RandHandOptInfo), global::Texas.Protocol.RandHandOptInfo.Parser, new[]{ "Type", "SubInfos", "TimesStr", "Info" }, new[]{ "Type", "TimesStr", "Info" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.GuessHandRSP), global::Texas.Protocol.GuessHandRSP.Parser, new[]{ "Code", "ReqType", "OptType", "OptInfo", "SubInfo" }, new[]{ "Code", "ReqType", "OptType", "OptInfo", "SubInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.GuessHandResultRSP), global::Texas.Protocol.GuessHandResultRSP.Parser, new[]{ "Code", "OptType", "SubInfo" }, new[]{ "Code", "OptType", "SubInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.GuessHandSubInfo), global::Texas.Protocol.GuessHandSubInfo.Parser, new[]{ "OptType", "IsGuess", "SubInfo", "RandSubInfos", "TimesStr", "Info" }, new[]{ "OptType", "IsGuess", "SubInfo", "TimesStr", "Info" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.WaitingGameStartInfo), global::Texas.Protocol.WaitingGameStartInfo.Parser, new[]{ "RoomType", "SeatNum", "WaitNum", "AveMatchSecond", "WaitSecond" }, new[]{ "RoomType", "SeatNum", "WaitNum", "AveMatchSecond", "WaitSecond" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.CallGameREQ), global::Texas.Protocol.CallGameREQ.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.CallGameRSP), global::Texas.Protocol.CallGameRSP.Parser, new[]{ "Code", "CallgameSecond", "TryAgainSecond" }, new[]{ "Code", "CallgameSecond", "TryAgainSecond" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.CallGameBRC), global::Texas.Protocol.CallGameBRC.Parser, new[]{ "Uid", "UserName", "CallgameSecond", "RoomType", "GameMode", "Tempid", "Blind", "MinBuyin", "MaxBuyin", "ShowSecond", "Roomid", "RoomName", "SeatNum", "RoomMode" }, new[]{ "Uid", "UserName", "CallgameSecond", "RoomType", "GameMode", "Tempid", "Blind", "MinBuyin", "MaxBuyin", "ShowSecond", "Roomid", "RoomName", "SeatNum", "RoomMode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.CallGameInfo), global::Texas.Protocol.CallGameInfo.Parser, new[]{ "Bcallgame", "CallgameSecond", "RemainSecond", "CallgameCost" }, new[]{ "Bcallgame", "CallgameSecond", "RemainSecond", "CallgameCost" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.EnterNextSngREQ), global::Texas.Protocol.EnterNextSngREQ.Parser, new[]{ "Clubid", "Leagueid", "Roomtype", "Buyin" }, new[]{ "Clubid", "Leagueid", "Roomtype", "Buyin" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Texas.Protocol.EnterNextSngRSP), global::Texas.Protocol.EnterNextSngRSP.Parser, new[]{ "Code", "Clubid", "Leagueid", "Roomid" }, new[]{ "Code", "Clubid", "Leagueid", "Roomid" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///SpinUp广播类型
  /// </summary>
  public enum SpinUpBRCType {
    /// <summary>
    ///None
    /// </summary>
    [pbr::OriginalName("SPINUP_BRC_TYPE_NONE")] None = 0,
    /// <summary>
    ///开始摇奖
    /// </summary>
    [pbr::OriginalName("SPINUP_BRC_TYPE_START_DRAW_LOTTERY")] StartDrawLottery = 1,
    /// <summary>
    ///摇奖结果
    /// </summary>
    [pbr::OriginalName("SPINUP_BRC_TYPE_RESULT_DRAW_LOTTERY")] ResultDrawLottery = 2,
    /// <summary>
    ///现在开始游戏
    /// </summary>
    [pbr::OriginalName("SPINUP_BRC_TYPE_NOW_START_GAME")] NowStartGame = 3,
    /// <summary>
    ///重新摇奖
    /// </summary>
    [pbr::OriginalName("SPINUP_BRC_TYPE_REDRAW_LOTTERY")] RedrawLottery = 4,
    /// <summary>
    ///拒绝重新摇奖
    /// </summary>
    [pbr::OriginalName("SPINUP_BRC_TYPE_REJECT_REDRAW_LOTTERY")] RejectRedrawLottery = 5,
    /// <summary>
    ///准备摇奖
    /// </summary>
    [pbr::OriginalName("SPINUP_BRC_TYPE_READY_DRAW_LOTTERY")] ReadyDrawLottery = 6,
  }

  /// <summary>
  ///SpinUp摇奖奖励类型
  /// </summary>
  public enum DrawLotteryItemType {
    /// <summary>
    ///pp币
    /// </summary>
    [pbr::OriginalName("DRAW_LOTTERY_ITME_TYPE_PPCHIP")] DrawLotteryItmeTypePpchip = 0,
    /// <summary>
    ///金币
    /// </summary>
    [pbr::OriginalName("DRAW_LOTTERY_ITME_TYPE_GOLD")] DrawLotteryItmeTypeGold = 1,
    /// <summary>
    ///物品
    /// </summary>
    [pbr::OriginalName("DRAW_LOTTERY_ITME_TYPE_ITEM")] DrawLotteryItmeTypeItem = 2,
    /// <summary>
    ///score
    /// </summary>
    [pbr::OriginalName("DRAW_LOTTERY_ITME_TYPE_SOCRE")] DrawLotteryItmeTypeSocre = 3,
    /// <summary>
    ///rebate
    /// </summary>
    [pbr::OriginalName("DRAW_LOTTERY_ITME_TYPE_REBATE")] DrawLotteryItmeTypeRebate = 4,
  }

  /// <summary>
  ///SpinUp请求类型
  /// </summary>
  public enum SpinUpREQType {
    /// <summary>
    ///拒绝重摇奖
    /// </summary>
    [pbr::OriginalName("SPINUP_REQ_TYPE_REJECT_REDRAW_LOTTERY")] RejectRedrawLottery = 0,
    /// <summary>
    ///现在开始游戏
    /// </summary>
    [pbr::OriginalName("SPINUP_REQ_TYPE_NOW_START_GAME")] NowStartGame = 1,
    /// <summary>
    ///重新摇奖
    /// </summary>
    [pbr::OriginalName("SPINUP_REQ_TYPE_REDRAW_LOTTERY")] RedrawLottery = 2,
    /// <summary>
    ///同意重摇奖
    /// </summary>
    [pbr::OriginalName("SPINUP_REQ_TYPE_AGREE_REDRAW_LOTTERY")] AgreeRedrawLottery = 3,
  }

  /// <summary>
  ///猜手牌选项类型
  /// </summary>
  public enum GuessHandOptType {
    /// <summary>
    ///None
    /// </summary>
    [pbr::OriginalName("GUESSHAND_OPTTYPE_NONE")] None = 0,
    /// <summary>
    ///同花
    /// </summary>
    [pbr::OriginalName("GUESSHAND_OPTTYPE_FLUSH")] Flush = 1,
    /// <summary>
    ///含A
    /// </summary>
    [pbr::OriginalName("GUESSHAND_OPTTYPE_HAVE_A")] HaveA = 2,
    /// <summary>
    ///对子
    /// </summary>
    [pbr::OriginalName("GUESSHAND_OPTTYPE_PAIR")] Pair = 3,
    /// <summary>
    ///AA
    /// </summary>
    [pbr::OriginalName("GUESSHAND_OPTTYPE_PAIRA")] Paira = 4,
    /// <summary>
    ///22
    /// </summary>
    [pbr::OriginalName("GUESSHAND_OPTTYPE_PAIR2")] Pair2 = 5,
    /// <summary>
    ///88
    /// </summary>
    [pbr::OriginalName("GUESSHAND_OPTTYPE_PAIR8")] Pair8 = 6,
    /// <summary>
    ///AK
    /// </summary>
    [pbr::OriginalName("GUESSHAND_OPTTYPE_AK")] Ak = 7,
    /// <summary>
    ///AQ
    /// </summary>
    [pbr::OriginalName("GUESSHAND_OPTTYPE_AQ")] Aq = 8,
    /// <summary>
    ///同花连张
    /// </summary>
    [pbr::OriginalName("GUESSHAND_OPTTYPE_STRAIGHT_FLUSHF")] StraightFlushf = 9,
    /// <summary>
    ///AK同花
    /// </summary>
    [pbr::OriginalName("GUESSHAND_OPTTYPE_AK_FLUSHF")] AkFlushf = 10,
  }

  /// <summary>
  ///猜手牌请求类型
  /// </summary>
  public enum GuessHandREQType {
    /// <summary>
    ///获取手牌随机选项
    /// </summary>
    [pbr::OriginalName("GUESSHAND_REQTYPE_GETOPT")] Getopt = 0,
    /// <summary>
    ///猜手牌下注
    /// </summary>
    [pbr::OriginalName("GUESSHAND_REQTYPE_ACTION")] Action = 1,
  }

  public enum GuessHandRETCode {
    /// <summary>
    ///success
    /// </summary>
    [pbr::OriginalName("GUESSHAND_RETCODE_SUUCCESS")] Suuccess = 0,
    /// <summary>
    ///已经下注过
    /// </summary>
    [pbr::OriginalName("GUESSHAND_RETCODE_HAD_GUESS")] HadGuess = 1,
    /// <summary>
    ///下注金币不足
    /// </summary>
    [pbr::OriginalName("GUESSHAND_RETCODE_GOLD_NO_ENOUGH")] GoldNoEnough = 2,
    /// <summary>
    ///围观不能下注
    /// </summary>
    [pbr::OriginalName("GUESSHAND_RETCODE_WATCHER_CANNOT_GUESS")] WatcherCannotGuess = 3,
    /// <summary>
    ///还没获取随机选项
    /// </summary>
    [pbr::OriginalName("GUESSHAND_RETCODE_NOT_GETRANDOPT")] NotGetrandopt = 4,
    /// <summary>
    ///围观不能获取随机选择
    /// </summary>
    [pbr::OriginalName("GUESSHAND_RETCODE_WATCHER_CANNOT_GETRANDOPT")] WatcherCannotGetrandopt = 5,
    /// <summary>
    ///游戏玩法不对
    /// </summary>
    [pbr::OriginalName("GUESSHAND_RETCODE_GAME_MODE_WRONG")] GameModeWrong = 6,
    /// <summary>
    ///房间类型不对
    /// </summary>
    [pbr::OriginalName("GUESSHAND_RETCODE_ROOM_TYPE_WRONG")] RoomTypeWrong = 7,
    /// <summary>
    ///房间玩法不对
    /// </summary>
    [pbr::OriginalName("GUESSHAND_RETCODE_ROOM_MODE_WRONG")] RoomModeWrong = 8,
    /// <summary>
    ///error
    /// </summary>
    [pbr::OriginalName("GUESSHAND_RETCODE_ERROR")] Error = 9,
  }

  public enum CallGameRetCode {
    /// <summary>
    ///success
    /// </summary>
    [pbr::OriginalName("CALLGAME_RETCODE_SUUCCESS")] Suuccess = 0,
    /// <summary>
    ///已经callgame
    /// </summary>
    [pbr::OriginalName("CALLGAME_RETCODE_HAD_CALLGAME")] HadCallgame = 1,
    /// <summary>
    ///金币不足
    /// </summary>
    [pbr::OriginalName("CALLGAME_RETCODE_GOLD_NO_ENOUGH")] GoldNoEnough = 2,
    /// <summary>
    ///限制callgame次数
    /// </summary>
    [pbr::OriginalName("CALLGAME_RETCODE_LIMIT_TIMES")] LimitTimes = 3,
    /// <summary>
    ///限制callgame并发
    /// </summary>
    [pbr::OriginalName("CALLGAME_RETCODE_LIMIT_CONCURRENCY")] LimitConcurrency = 4,
    /// <summary>
    ///围观不可以callgame
    /// </summary>
    [pbr::OriginalName("CALLGAME_RETCODE_LIMIT_OBSERVER")] LimitObserver = 5,
    /// <summary>
    ///房间牌桌不可以callgame
    /// </summary>
    [pbr::OriginalName("CALLGAME_RETCODE_LIMIT_ROOM")] LimitRoom = 6,
    /// <summary>
    ///已坐超过1人不可以callgame
    /// </summary>
    [pbr::OriginalName("CALLGAME_RETCODE_LIMIT_SITED_SIZE")] LimitSitedSize = 7,
    /// <summary>
    ///error
    /// </summary>
    [pbr::OriginalName("CALLGAME_RETCODE_ERROR")] Error = 8,
  }

  #endregion

  #region Messages
  public sealed partial class CreateSngRoomREQ : pb::IMessage<CreateSngRoomREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateSngRoomREQ> _parser = new pb::MessageParser<CreateSngRoomREQ>(() => new CreateSngRoomREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    private int _hasBits1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateSngRoomREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateSngRoomREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateSngRoomREQ(CreateSngRoomREQ other) : this() {
      _hasBits0 = other._hasBits0;
      _hasBits1 = other._hasBits1;
      roomName_ = other.roomName_;
      upblindTime_ = other.upblindTime_;
      actionTime_ = other.actionTime_;
      buyin_ = other.buyin_;
      beginChips_ = other.beginChips_;
      blindType_ = other.blindType_;
      authLimit_ = other.authLimit_;
      clubid_ = other.clubid_;
      seatNum_ = other.seatNum_;
      charge_ = other.charge_;
      timezone_ = other.timezone_;
      type_ = other.type_;
      roomid_ = other.roomid_;
      leagueid_ = other.leagueid_;
      gpsLimit_ = other.gpsLimit_;
      ipLimit_ = other.ipLimit_;
      gameMode_ = other.gameMode_;
      moduleid_ = other.moduleid_;
      multiOpid_ = other.multiOpid_;
      canUse_ = other.canUse_;
      isAutoCreateRoom_ = other.isAutoCreateRoom_;
      creatorUserId_ = other.creatorUserId_;
      forbiddenChat_ = other.forbiddenChat_;
      passwdLimit_ = other.passwdLimit_;
      maxRewardRatio_ = other.maxRewardRatio_;
      pauseAutoCreateTime_ = other.pauseAutoCreateTime_;
      superLeagueid_ = other.superLeagueid_;
      matchId_ = other.matchId_;
      tempid_ = other.tempid_;
      superLeagueType_ = other.superLeagueType_;
      chargeRatio_ = other.chargeRatio_;
      rewardMode_ = other.rewardMode_;
      deriveRoomid_ = other.deriveRoomid_;
      isBanPc_ = other.isBanPc_;
      isCheckMail_ = other.isCheckMail_;
      forbiddenChatMode_ = other.forbiddenChatMode_;
      ppstid_ = other.ppstid_;
      banClub_ = other.banClub_.Clone();
      banCountry_ = other.banCountry_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateSngRoomREQ Clone() {
      return new CreateSngRoomREQ(this);
    }

    /// <summary>Field number for the "room_name" field.</summary>
    public const int RoomNameFieldNumber = 1;
    private readonly static string RoomNameDefaultValue = "";

    private string roomName_;
    /// <summary>
    ///房间名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomName {
      get { return roomName_ ?? RoomNameDefaultValue; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "room_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomName {
      get { return roomName_ != null; }
    }
    /// <summary>Clears the value of the "room_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomName() {
      roomName_ = null;
    }

    /// <summary>Field number for the "upblind_time" field.</summary>
    public const int UpblindTimeFieldNumber = 2;
    private readonly static int UpblindTimeDefaultValue = 0;

    private int upblindTime_;
    /// <summary>
    ///涨盲时间，单位秒
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UpblindTime {
      get { if ((_hasBits0 & 1) != 0) { return upblindTime_; } else { return UpblindTimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        upblindTime_ = value;
      }
    }
    /// <summary>Gets whether the "upblind_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUpblindTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "upblind_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUpblindTime() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "action_time" field.</summary>
    public const int ActionTimeFieldNumber = 3;
    private readonly static int ActionTimeDefaultValue = 0;

    private int actionTime_;
    /// <summary>
    ///下注时间，单位秒
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActionTime {
      get { if ((_hasBits0 & 2) != 0) { return actionTime_; } else { return ActionTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        actionTime_ = value;
      }
    }
    /// <summary>Gets whether the "action_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActionTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "action_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActionTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "buyin" field.</summary>
    public const int BuyinFieldNumber = 4;
    private readonly static long BuyinDefaultValue = 0L;

    private long buyin_;
    /// <summary>
    ///买入，包括服务费
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Buyin {
      get { if ((_hasBits0 & 4) != 0) { return buyin_; } else { return BuyinDefaultValue; } }
      set {
        _hasBits0 |= 4;
        buyin_ = value;
      }
    }
    /// <summary>Gets whether the "buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBuyin {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBuyin() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "begin_chips" field.</summary>
    public const int BeginChipsFieldNumber = 5;
    private readonly static long BeginChipsDefaultValue = 0L;

    private long beginChips_;
    /// <summary>
    ///初始筹码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BeginChips {
      get { if ((_hasBits0 & 8) != 0) { return beginChips_; } else { return BeginChipsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        beginChips_ = value;
      }
    }
    /// <summary>Gets whether the "begin_chips" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBeginChips {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "begin_chips" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBeginChips() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "blind_type" field.</summary>
    public const int BlindTypeFieldNumber = 6;
    private readonly static int BlindTypeDefaultValue = 0;

    private int blindType_;
    /// <summary>
    ///涨盲类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BlindType {
      get { if ((_hasBits0 & 16) != 0) { return blindType_; } else { return BlindTypeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        blindType_ = value;
      }
    }
    /// <summary>Gets whether the "blind_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlindType {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "blind_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlindType() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "auth_limit" field.</summary>
    public const int AuthLimitFieldNumber = 7;
    private readonly static bool AuthLimitDefaultValue = false;

    private bool authLimit_;
    /// <summary>
    ///是否授权买入
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AuthLimit {
      get { if ((_hasBits0 & 32) != 0) { return authLimit_; } else { return AuthLimitDefaultValue; } }
      set {
        _hasBits0 |= 32;
        authLimit_ = value;
      }
    }
    /// <summary>Gets whether the "auth_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAuthLimit {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "auth_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAuthLimit() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 8;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 64) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 64;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "seat_num" field.</summary>
    public const int SeatNumFieldNumber = 9;
    private readonly static int SeatNumDefaultValue = 0;

    private int seatNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SeatNum {
      get { if ((_hasBits0 & 128) != 0) { return seatNum_; } else { return SeatNumDefaultValue; } }
      set {
        _hasBits0 |= 128;
        seatNum_ = value;
      }
    }
    /// <summary>Gets whether the "seat_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatNum {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "seat_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatNum() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "charge" field.</summary>
    public const int ChargeFieldNumber = 10;
    private readonly static long ChargeDefaultValue = 0L;

    private long charge_;
    /// <summary>
    ///服务费
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Charge {
      get { if ((_hasBits0 & 256) != 0) { return charge_; } else { return ChargeDefaultValue; } }
      set {
        _hasBits0 |= 256;
        charge_ = value;
      }
    }
    /// <summary>Gets whether the "charge" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCharge {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "charge" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCharge() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "timezone" field.</summary>
    public const int TimezoneFieldNumber = 11;
    private readonly static int TimezoneDefaultValue = 0;

    private int timezone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Timezone {
      get { if ((_hasBits0 & 512) != 0) { return timezone_; } else { return TimezoneDefaultValue; } }
      set {
        _hasBits0 |= 512;
        timezone_ = value;
      }
    }
    /// <summary>Gets whether the "timezone" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimezone {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "timezone" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimezone() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 12;
    private readonly static global::Texas.Protocol.RoomType TypeDefaultValue = global::Texas.Protocol.RoomType.TestRoom;

    private global::Texas.Protocol.RoomType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomType Type {
      get { if ((_hasBits0 & 1024) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 13;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    /// <summary>
    ///客户端不需要填
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 2048) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 14;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    /// <summary>
    /// 联盟id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 4096) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "gps_limit" field.</summary>
    public const int GpsLimitFieldNumber = 15;
    private readonly static bool GpsLimitDefaultValue = false;

    private bool gpsLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GpsLimit {
      get { if ((_hasBits0 & 8192) != 0) { return gpsLimit_; } else { return GpsLimitDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        gpsLimit_ = value;
      }
    }
    /// <summary>Gets whether the "gps_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpsLimit {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "gps_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpsLimit() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "ip_limit" field.</summary>
    public const int IpLimitFieldNumber = 16;
    private readonly static bool IpLimitDefaultValue = false;

    private bool ipLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IpLimit {
      get { if ((_hasBits0 & 16384) != 0) { return ipLimit_; } else { return IpLimitDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        ipLimit_ = value;
      }
    }
    /// <summary>Gets whether the "ip_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIpLimit {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "ip_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIpLimit() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "game_mode" field.</summary>
    public const int GameModeFieldNumber = 17;
    private readonly static global::Texas.Protocol.GameMode GameModeDefaultValue = global::Texas.Protocol.GameMode.Regular;

    private global::Texas.Protocol.GameMode gameMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.GameMode GameMode {
      get { if ((_hasBits0 & 32768) != 0) { return gameMode_; } else { return GameModeDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        gameMode_ = value;
      }
    }
    /// <summary>Gets whether the "game_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameMode {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "game_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameMode() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "moduleid" field.</summary>
    public const int ModuleidFieldNumber = 18;
    private readonly static long ModuleidDefaultValue = 0L;

    private long moduleid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Moduleid {
      get { if ((_hasBits0 & 65536) != 0) { return moduleid_; } else { return ModuleidDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        moduleid_ = value;
      }
    }
    /// <summary>Gets whether the "moduleid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasModuleid {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "moduleid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearModuleid() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "multi_opid" field.</summary>
    public const int MultiOpidFieldNumber = 19;
    private readonly static string MultiOpidDefaultValue = "";

    private string multiOpid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MultiOpid {
      get { return multiOpid_ ?? MultiOpidDefaultValue; }
      set {
        multiOpid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "multi_opid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMultiOpid {
      get { return multiOpid_ != null; }
    }
    /// <summary>Clears the value of the "multi_opid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMultiOpid() {
      multiOpid_ = null;
    }

    /// <summary>Field number for the "can_use" field.</summary>
    public const int CanUseFieldNumber = 20;
    private readonly static bool CanUseDefaultValue = false;

    private bool canUse_;
    /// <summary>
    /// module can use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanUse {
      get { if ((_hasBits0 & 131072) != 0) { return canUse_; } else { return CanUseDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        canUse_ = value;
      }
    }
    /// <summary>Gets whether the "can_use" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCanUse {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "can_use" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCanUse() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "is_auto_create_room" field.</summary>
    public const int IsAutoCreateRoomFieldNumber = 21;
    private readonly static bool IsAutoCreateRoomDefaultValue = false;

    private bool isAutoCreateRoom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAutoCreateRoom {
      get { if ((_hasBits0 & 262144) != 0) { return isAutoCreateRoom_; } else { return IsAutoCreateRoomDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        isAutoCreateRoom_ = value;
      }
    }
    /// <summary>Gets whether the "is_auto_create_room" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsAutoCreateRoom {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "is_auto_create_room" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsAutoCreateRoom() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "creator_user_id" field.</summary>
    public const int CreatorUserIdFieldNumber = 22;
    private readonly static long CreatorUserIdDefaultValue = 0L;

    private long creatorUserId_;
    /// <summary>
    ///创建者用户ID	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CreatorUserId {
      get { if ((_hasBits0 & 524288) != 0) { return creatorUserId_; } else { return CreatorUserIdDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        creatorUserId_ = value;
      }
    }
    /// <summary>Gets whether the "creator_user_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCreatorUserId {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "creator_user_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCreatorUserId() {
      _hasBits0 &= ~524288;
    }

    /// <summary>Field number for the "forbidden_chat" field.</summary>
    public const int ForbiddenChatFieldNumber = 23;
    private readonly static bool ForbiddenChatDefaultValue = false;

    private bool forbiddenChat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ForbiddenChat {
      get { if ((_hasBits0 & 1048576) != 0) { return forbiddenChat_; } else { return ForbiddenChatDefaultValue; } }
      set {
        _hasBits0 |= 1048576;
        forbiddenChat_ = value;
      }
    }
    /// <summary>Gets whether the "forbidden_chat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForbiddenChat {
      get { return (_hasBits0 & 1048576) != 0; }
    }
    /// <summary>Clears the value of the "forbidden_chat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForbiddenChat() {
      _hasBits0 &= ~1048576;
    }

    /// <summary>Field number for the "passwd_limit" field.</summary>
    public const int PasswdLimitFieldNumber = 24;
    private readonly static bool PasswdLimitDefaultValue = false;

    private bool passwdLimit_;
    /// <summary>
    /// 是否密码桌,与授权买入互斥
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PasswdLimit {
      get { if ((_hasBits0 & 2097152) != 0) { return passwdLimit_; } else { return PasswdLimitDefaultValue; } }
      set {
        _hasBits0 |= 2097152;
        passwdLimit_ = value;
      }
    }
    /// <summary>Gets whether the "passwd_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPasswdLimit {
      get { return (_hasBits0 & 2097152) != 0; }
    }
    /// <summary>Clears the value of the "passwd_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPasswdLimit() {
      _hasBits0 &= ~2097152;
    }

    /// <summary>Field number for the "max_reward_ratio" field.</summary>
    public const int MaxRewardRatioFieldNumber = 25;
    private readonly static int MaxRewardRatioDefaultValue = 0;

    private int maxRewardRatio_;
    /// <summary>
    ///spinup 最高奖励倍数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxRewardRatio {
      get { if ((_hasBits0 & 4194304) != 0) { return maxRewardRatio_; } else { return MaxRewardRatioDefaultValue; } }
      set {
        _hasBits0 |= 4194304;
        maxRewardRatio_ = value;
      }
    }
    /// <summary>Gets whether the "max_reward_ratio" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxRewardRatio {
      get { return (_hasBits0 & 4194304) != 0; }
    }
    /// <summary>Clears the value of the "max_reward_ratio" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxRewardRatio() {
      _hasBits0 &= ~4194304;
    }

    /// <summary>Field number for the "pause_auto_create_time" field.</summary>
    public const int PauseAutoCreateTimeFieldNumber = 26;
    private readonly static long PauseAutoCreateTimeDefaultValue = 0L;

    private long pauseAutoCreateTime_;
    /// <summary>
    ///暂停自动开桌时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PauseAutoCreateTime {
      get { if ((_hasBits0 & 8388608) != 0) { return pauseAutoCreateTime_; } else { return PauseAutoCreateTimeDefaultValue; } }
      set {
        _hasBits0 |= 8388608;
        pauseAutoCreateTime_ = value;
      }
    }
    /// <summary>Gets whether the "pause_auto_create_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPauseAutoCreateTime {
      get { return (_hasBits0 & 8388608) != 0; }
    }
    /// <summary>Clears the value of the "pause_auto_create_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPauseAutoCreateTime() {
      _hasBits0 &= ~8388608;
    }

    /// <summary>Field number for the "super_leagueid" field.</summary>
    public const int SuperLeagueidFieldNumber = 27;
    private readonly static int SuperLeagueidDefaultValue = 0;

    private int superLeagueid_;
    /// <summary>
    ///超级联盟id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueid {
      get { if ((_hasBits0 & 16777216) != 0) { return superLeagueid_; } else { return SuperLeagueidDefaultValue; } }
      set {
        _hasBits0 |= 16777216;
        superLeagueid_ = value;
      }
    }
    /// <summary>Gets whether the "super_leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueid {
      get { return (_hasBits0 & 16777216) != 0; }
    }
    /// <summary>Clears the value of the "super_leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueid() {
      _hasBits0 &= ~16777216;
    }

    /// <summary>Field number for the "match_id" field.</summary>
    public const int MatchIdFieldNumber = 28;
    private readonly static int MatchIdDefaultValue = 0;

    private int matchId_;
    /// <summary>
    ///比赛id 跟平台对应
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MatchId {
      get { if ((_hasBits0 & 33554432) != 0) { return matchId_; } else { return MatchIdDefaultValue; } }
      set {
        _hasBits0 |= 33554432;
        matchId_ = value;
      }
    }
    /// <summary>Gets whether the "match_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMatchId {
      get { return (_hasBits0 & 33554432) != 0; }
    }
    /// <summary>Clears the value of the "match_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMatchId() {
      _hasBits0 &= ~33554432;
    }

    /// <summary>Field number for the "tempid" field.</summary>
    public const int TempidFieldNumber = 29;
    private readonly static string TempidDefaultValue = "";

    private string tempid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tempid {
      get { return tempid_ ?? TempidDefaultValue; }
      set {
        tempid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tempid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTempid {
      get { return tempid_ != null; }
    }
    /// <summary>Clears the value of the "tempid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTempid() {
      tempid_ = null;
    }

    /// <summary>Field number for the "super_league_type" field.</summary>
    public const int SuperLeagueTypeFieldNumber = 30;
    private readonly static int SuperLeagueTypeDefaultValue = 0;

    private int superLeagueType_;
    /// <summary>
    ///1表示非ppst的超级联盟
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SuperLeagueType {
      get { if ((_hasBits0 & 67108864) != 0) { return superLeagueType_; } else { return SuperLeagueTypeDefaultValue; } }
      set {
        _hasBits0 |= 67108864;
        superLeagueType_ = value;
      }
    }
    /// <summary>Gets whether the "super_league_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperLeagueType {
      get { return (_hasBits0 & 67108864) != 0; }
    }
    /// <summary>Clears the value of the "super_league_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperLeagueType() {
      _hasBits0 &= ~67108864;
    }

    /// <summary>Field number for the "charge_ratio" field.</summary>
    public const int ChargeRatioFieldNumber = 31;
    private readonly static int ChargeRatioDefaultValue = 0;

    private int chargeRatio_;
    /// <summary>
    ///服务费的百分比
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChargeRatio {
      get { if ((_hasBits0 & 134217728) != 0) { return chargeRatio_; } else { return ChargeRatioDefaultValue; } }
      set {
        _hasBits0 |= 134217728;
        chargeRatio_ = value;
      }
    }
    /// <summary>Gets whether the "charge_ratio" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChargeRatio {
      get { return (_hasBits0 & 134217728) != 0; }
    }
    /// <summary>Clears the value of the "charge_ratio" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChargeRatio() {
      _hasBits0 &= ~134217728;
    }

    /// <summary>Field number for the "reward_mode" field.</summary>
    public const int RewardModeFieldNumber = 32;
    private readonly static global::Texas.Protocol.MttRewardMode RewardModeDefaultValue = global::Texas.Protocol.MttRewardMode.MttSngDefault;

    private global::Texas.Protocol.MttRewardMode rewardMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.MttRewardMode RewardMode {
      get { if ((_hasBits0 & 268435456) != 0) { return rewardMode_; } else { return RewardModeDefaultValue; } }
      set {
        _hasBits0 |= 268435456;
        rewardMode_ = value;
      }
    }
    /// <summary>Gets whether the "reward_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRewardMode {
      get { return (_hasBits0 & 268435456) != 0; }
    }
    /// <summary>Clears the value of the "reward_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRewardMode() {
      _hasBits0 &= ~268435456;
    }

    /// <summary>Field number for the "derive_roomid" field.</summary>
    public const int DeriveRoomidFieldNumber = 33;
    private readonly static int DeriveRoomidDefaultValue = 0;

    private int deriveRoomid_;
    /// <summary>
    ///该房间的自动创桌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DeriveRoomid {
      get { if ((_hasBits0 & 536870912) != 0) { return deriveRoomid_; } else { return DeriveRoomidDefaultValue; } }
      set {
        _hasBits0 |= 536870912;
        deriveRoomid_ = value;
      }
    }
    /// <summary>Gets whether the "derive_roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeriveRoomid {
      get { return (_hasBits0 & 536870912) != 0; }
    }
    /// <summary>Clears the value of the "derive_roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeriveRoomid() {
      _hasBits0 &= ~536870912;
    }

    /// <summary>Field number for the "is_ban_pc" field.</summary>
    public const int IsBanPcFieldNumber = 34;
    private readonly static bool IsBanPcDefaultValue = false;

    private bool isBanPc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBanPc {
      get { if ((_hasBits0 & 1073741824) != 0) { return isBanPc_; } else { return IsBanPcDefaultValue; } }
      set {
        _hasBits0 |= 1073741824;
        isBanPc_ = value;
      }
    }
    /// <summary>Gets whether the "is_ban_pc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsBanPc {
      get { return (_hasBits0 & 1073741824) != 0; }
    }
    /// <summary>Clears the value of the "is_ban_pc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsBanPc() {
      _hasBits0 &= ~1073741824;
    }

    /// <summary>Field number for the "is_check_mail" field.</summary>
    public const int IsCheckMailFieldNumber = 35;
    private readonly static bool IsCheckMailDefaultValue = false;

    private bool isCheckMail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCheckMail {
      get { if ((_hasBits0 & -2147483648) != 0) { return isCheckMail_; } else { return IsCheckMailDefaultValue; } }
      set {
        _hasBits0 |= -2147483648;
        isCheckMail_ = value;
      }
    }
    /// <summary>Gets whether the "is_check_mail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsCheckMail {
      get { return (_hasBits0 & -2147483648) != 0; }
    }
    /// <summary>Clears the value of the "is_check_mail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsCheckMail() {
      _hasBits0 &= ~-2147483648;
    }

    /// <summary>Field number for the "forbidden_chat_mode" field.</summary>
    public const int ForbiddenChatModeFieldNumber = 36;
    private readonly static int ForbiddenChatModeDefaultValue = 0;

    private int forbiddenChatMode_;
    /// <summary>
    ///0: 全體禁言 1:看客禁言
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ForbiddenChatMode {
      get { if ((_hasBits1 & 1) != 0) { return forbiddenChatMode_; } else { return ForbiddenChatModeDefaultValue; } }
      set {
        _hasBits1 |= 1;
        forbiddenChatMode_ = value;
      }
    }
    /// <summary>Gets whether the "forbidden_chat_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForbiddenChatMode {
      get { return (_hasBits1 & 1) != 0; }
    }
    /// <summary>Clears the value of the "forbidden_chat_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForbiddenChatMode() {
      _hasBits1 &= ~1;
    }

    /// <summary>Field number for the "ppstid" field.</summary>
    public const int PpstidFieldNumber = 37;
    private readonly static int PpstidDefaultValue = 0;

    private int ppstid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ppstid {
      get { if ((_hasBits1 & 2) != 0) { return ppstid_; } else { return PpstidDefaultValue; } }
      set {
        _hasBits1 |= 2;
        ppstid_ = value;
      }
    }
    /// <summary>Gets whether the "ppstid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPpstid {
      get { return (_hasBits1 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ppstid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPpstid() {
      _hasBits1 &= ~2;
    }

    /// <summary>Field number for the "ban_club" field.</summary>
    public const int BanClubFieldNumber = 38;
    private static readonly pb::FieldCodec<int> _repeated_banClub_codec
        = pb::FieldCodec.ForInt32(306);
    private readonly pbc::RepeatedField<int> banClub_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// restriction for clubs and regions
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> BanClub {
      get { return banClub_; }
    }

    /// <summary>Field number for the "ban_country" field.</summary>
    public const int BanCountryFieldNumber = 39;
    private static readonly pb::FieldCodec<string> _repeated_banCountry_codec
        = pb::FieldCodec.ForString(314);
    private readonly pbc::RepeatedField<string> banCountry_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 限制注册地为某些国家的用户不能看到和加入牌桌，缩写
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> BanCountry {
      get { return banCountry_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateSngRoomREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateSngRoomREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomName != other.RoomName) return false;
      if (UpblindTime != other.UpblindTime) return false;
      if (ActionTime != other.ActionTime) return false;
      if (Buyin != other.Buyin) return false;
      if (BeginChips != other.BeginChips) return false;
      if (BlindType != other.BlindType) return false;
      if (AuthLimit != other.AuthLimit) return false;
      if (Clubid != other.Clubid) return false;
      if (SeatNum != other.SeatNum) return false;
      if (Charge != other.Charge) return false;
      if (Timezone != other.Timezone) return false;
      if (Type != other.Type) return false;
      if (Roomid != other.Roomid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (GpsLimit != other.GpsLimit) return false;
      if (IpLimit != other.IpLimit) return false;
      if (GameMode != other.GameMode) return false;
      if (Moduleid != other.Moduleid) return false;
      if (MultiOpid != other.MultiOpid) return false;
      if (CanUse != other.CanUse) return false;
      if (IsAutoCreateRoom != other.IsAutoCreateRoom) return false;
      if (CreatorUserId != other.CreatorUserId) return false;
      if (ForbiddenChat != other.ForbiddenChat) return false;
      if (PasswdLimit != other.PasswdLimit) return false;
      if (MaxRewardRatio != other.MaxRewardRatio) return false;
      if (PauseAutoCreateTime != other.PauseAutoCreateTime) return false;
      if (SuperLeagueid != other.SuperLeagueid) return false;
      if (MatchId != other.MatchId) return false;
      if (Tempid != other.Tempid) return false;
      if (SuperLeagueType != other.SuperLeagueType) return false;
      if (ChargeRatio != other.ChargeRatio) return false;
      if (RewardMode != other.RewardMode) return false;
      if (DeriveRoomid != other.DeriveRoomid) return false;
      if (IsBanPc != other.IsBanPc) return false;
      if (IsCheckMail != other.IsCheckMail) return false;
      if (ForbiddenChatMode != other.ForbiddenChatMode) return false;
      if (Ppstid != other.Ppstid) return false;
      if(!banClub_.Equals(other.banClub_)) return false;
      if(!banCountry_.Equals(other.banCountry_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomName) hash ^= RoomName.GetHashCode();
      if (HasUpblindTime) hash ^= UpblindTime.GetHashCode();
      if (HasActionTime) hash ^= ActionTime.GetHashCode();
      if (HasBuyin) hash ^= Buyin.GetHashCode();
      if (HasBeginChips) hash ^= BeginChips.GetHashCode();
      if (HasBlindType) hash ^= BlindType.GetHashCode();
      if (HasAuthLimit) hash ^= AuthLimit.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasSeatNum) hash ^= SeatNum.GetHashCode();
      if (HasCharge) hash ^= Charge.GetHashCode();
      if (HasTimezone) hash ^= Timezone.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasGpsLimit) hash ^= GpsLimit.GetHashCode();
      if (HasIpLimit) hash ^= IpLimit.GetHashCode();
      if (HasGameMode) hash ^= GameMode.GetHashCode();
      if (HasModuleid) hash ^= Moduleid.GetHashCode();
      if (HasMultiOpid) hash ^= MultiOpid.GetHashCode();
      if (HasCanUse) hash ^= CanUse.GetHashCode();
      if (HasIsAutoCreateRoom) hash ^= IsAutoCreateRoom.GetHashCode();
      if (HasCreatorUserId) hash ^= CreatorUserId.GetHashCode();
      if (HasForbiddenChat) hash ^= ForbiddenChat.GetHashCode();
      if (HasPasswdLimit) hash ^= PasswdLimit.GetHashCode();
      if (HasMaxRewardRatio) hash ^= MaxRewardRatio.GetHashCode();
      if (HasPauseAutoCreateTime) hash ^= PauseAutoCreateTime.GetHashCode();
      if (HasSuperLeagueid) hash ^= SuperLeagueid.GetHashCode();
      if (HasMatchId) hash ^= MatchId.GetHashCode();
      if (HasTempid) hash ^= Tempid.GetHashCode();
      if (HasSuperLeagueType) hash ^= SuperLeagueType.GetHashCode();
      if (HasChargeRatio) hash ^= ChargeRatio.GetHashCode();
      if (HasRewardMode) hash ^= RewardMode.GetHashCode();
      if (HasDeriveRoomid) hash ^= DeriveRoomid.GetHashCode();
      if (HasIsBanPc) hash ^= IsBanPc.GetHashCode();
      if (HasIsCheckMail) hash ^= IsCheckMail.GetHashCode();
      if (HasForbiddenChatMode) hash ^= ForbiddenChatMode.GetHashCode();
      if (HasPpstid) hash ^= Ppstid.GetHashCode();
      hash ^= banClub_.GetHashCode();
      hash ^= banCountry_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomName) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (HasUpblindTime) {
        output.WriteRawTag(16);
        output.WriteInt32(UpblindTime);
      }
      if (HasActionTime) {
        output.WriteRawTag(24);
        output.WriteInt32(ActionTime);
      }
      if (HasBuyin) {
        output.WriteRawTag(32);
        output.WriteInt64(Buyin);
      }
      if (HasBeginChips) {
        output.WriteRawTag(40);
        output.WriteInt64(BeginChips);
      }
      if (HasBlindType) {
        output.WriteRawTag(48);
        output.WriteInt32(BlindType);
      }
      if (HasAuthLimit) {
        output.WriteRawTag(56);
        output.WriteBool(AuthLimit);
      }
      if (HasClubid) {
        output.WriteRawTag(64);
        output.WriteInt32(Clubid);
      }
      if (HasSeatNum) {
        output.WriteRawTag(72);
        output.WriteInt32(SeatNum);
      }
      if (HasCharge) {
        output.WriteRawTag(80);
        output.WriteInt64(Charge);
      }
      if (HasTimezone) {
        output.WriteRawTag(88);
        output.WriteInt32(Timezone);
      }
      if (HasType) {
        output.WriteRawTag(96);
        output.WriteEnum((int) Type);
      }
      if (HasRoomid) {
        output.WriteRawTag(104);
        output.WriteInt32(Roomid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(112);
        output.WriteInt32(Leagueid);
      }
      if (HasGpsLimit) {
        output.WriteRawTag(120);
        output.WriteBool(GpsLimit);
      }
      if (HasIpLimit) {
        output.WriteRawTag(128, 1);
        output.WriteBool(IpLimit);
      }
      if (HasGameMode) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) GameMode);
      }
      if (HasModuleid) {
        output.WriteRawTag(144, 1);
        output.WriteInt64(Moduleid);
      }
      if (HasMultiOpid) {
        output.WriteRawTag(154, 1);
        output.WriteString(MultiOpid);
      }
      if (HasCanUse) {
        output.WriteRawTag(160, 1);
        output.WriteBool(CanUse);
      }
      if (HasIsAutoCreateRoom) {
        output.WriteRawTag(168, 1);
        output.WriteBool(IsAutoCreateRoom);
      }
      if (HasCreatorUserId) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(CreatorUserId);
      }
      if (HasForbiddenChat) {
        output.WriteRawTag(184, 1);
        output.WriteBool(ForbiddenChat);
      }
      if (HasPasswdLimit) {
        output.WriteRawTag(192, 1);
        output.WriteBool(PasswdLimit);
      }
      if (HasMaxRewardRatio) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(MaxRewardRatio);
      }
      if (HasPauseAutoCreateTime) {
        output.WriteRawTag(208, 1);
        output.WriteInt64(PauseAutoCreateTime);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasMatchId) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(MatchId);
      }
      if (HasTempid) {
        output.WriteRawTag(234, 1);
        output.WriteString(Tempid);
      }
      if (HasSuperLeagueType) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(SuperLeagueType);
      }
      if (HasChargeRatio) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(ChargeRatio);
      }
      if (HasRewardMode) {
        output.WriteRawTag(128, 2);
        output.WriteEnum((int) RewardMode);
      }
      if (HasDeriveRoomid) {
        output.WriteRawTag(136, 2);
        output.WriteInt32(DeriveRoomid);
      }
      if (HasIsBanPc) {
        output.WriteRawTag(144, 2);
        output.WriteBool(IsBanPc);
      }
      if (HasIsCheckMail) {
        output.WriteRawTag(152, 2);
        output.WriteBool(IsCheckMail);
      }
      if (HasForbiddenChatMode) {
        output.WriteRawTag(160, 2);
        output.WriteInt32(ForbiddenChatMode);
      }
      if (HasPpstid) {
        output.WriteRawTag(168, 2);
        output.WriteInt32(Ppstid);
      }
      banClub_.WriteTo(output, _repeated_banClub_codec);
      banCountry_.WriteTo(output, _repeated_banCountry_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomName) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (HasUpblindTime) {
        output.WriteRawTag(16);
        output.WriteInt32(UpblindTime);
      }
      if (HasActionTime) {
        output.WriteRawTag(24);
        output.WriteInt32(ActionTime);
      }
      if (HasBuyin) {
        output.WriteRawTag(32);
        output.WriteInt64(Buyin);
      }
      if (HasBeginChips) {
        output.WriteRawTag(40);
        output.WriteInt64(BeginChips);
      }
      if (HasBlindType) {
        output.WriteRawTag(48);
        output.WriteInt32(BlindType);
      }
      if (HasAuthLimit) {
        output.WriteRawTag(56);
        output.WriteBool(AuthLimit);
      }
      if (HasClubid) {
        output.WriteRawTag(64);
        output.WriteInt32(Clubid);
      }
      if (HasSeatNum) {
        output.WriteRawTag(72);
        output.WriteInt32(SeatNum);
      }
      if (HasCharge) {
        output.WriteRawTag(80);
        output.WriteInt64(Charge);
      }
      if (HasTimezone) {
        output.WriteRawTag(88);
        output.WriteInt32(Timezone);
      }
      if (HasType) {
        output.WriteRawTag(96);
        output.WriteEnum((int) Type);
      }
      if (HasRoomid) {
        output.WriteRawTag(104);
        output.WriteInt32(Roomid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(112);
        output.WriteInt32(Leagueid);
      }
      if (HasGpsLimit) {
        output.WriteRawTag(120);
        output.WriteBool(GpsLimit);
      }
      if (HasIpLimit) {
        output.WriteRawTag(128, 1);
        output.WriteBool(IpLimit);
      }
      if (HasGameMode) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) GameMode);
      }
      if (HasModuleid) {
        output.WriteRawTag(144, 1);
        output.WriteInt64(Moduleid);
      }
      if (HasMultiOpid) {
        output.WriteRawTag(154, 1);
        output.WriteString(MultiOpid);
      }
      if (HasCanUse) {
        output.WriteRawTag(160, 1);
        output.WriteBool(CanUse);
      }
      if (HasIsAutoCreateRoom) {
        output.WriteRawTag(168, 1);
        output.WriteBool(IsAutoCreateRoom);
      }
      if (HasCreatorUserId) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(CreatorUserId);
      }
      if (HasForbiddenChat) {
        output.WriteRawTag(184, 1);
        output.WriteBool(ForbiddenChat);
      }
      if (HasPasswdLimit) {
        output.WriteRawTag(192, 1);
        output.WriteBool(PasswdLimit);
      }
      if (HasMaxRewardRatio) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(MaxRewardRatio);
      }
      if (HasPauseAutoCreateTime) {
        output.WriteRawTag(208, 1);
        output.WriteInt64(PauseAutoCreateTime);
      }
      if (HasSuperLeagueid) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(SuperLeagueid);
      }
      if (HasMatchId) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(MatchId);
      }
      if (HasTempid) {
        output.WriteRawTag(234, 1);
        output.WriteString(Tempid);
      }
      if (HasSuperLeagueType) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(SuperLeagueType);
      }
      if (HasChargeRatio) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(ChargeRatio);
      }
      if (HasRewardMode) {
        output.WriteRawTag(128, 2);
        output.WriteEnum((int) RewardMode);
      }
      if (HasDeriveRoomid) {
        output.WriteRawTag(136, 2);
        output.WriteInt32(DeriveRoomid);
      }
      if (HasIsBanPc) {
        output.WriteRawTag(144, 2);
        output.WriteBool(IsBanPc);
      }
      if (HasIsCheckMail) {
        output.WriteRawTag(152, 2);
        output.WriteBool(IsCheckMail);
      }
      if (HasForbiddenChatMode) {
        output.WriteRawTag(160, 2);
        output.WriteInt32(ForbiddenChatMode);
      }
      if (HasPpstid) {
        output.WriteRawTag(168, 2);
        output.WriteInt32(Ppstid);
      }
      banClub_.WriteTo(ref output, _repeated_banClub_codec);
      banCountry_.WriteTo(ref output, _repeated_banCountry_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (HasUpblindTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UpblindTime);
      }
      if (HasActionTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionTime);
      }
      if (HasBuyin) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Buyin);
      }
      if (HasBeginChips) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BeginChips);
      }
      if (HasBlindType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BlindType);
      }
      if (HasAuthLimit) {
        size += 1 + 1;
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasSeatNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SeatNum);
      }
      if (HasCharge) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Charge);
      }
      if (HasTimezone) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Timezone);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasGpsLimit) {
        size += 1 + 1;
      }
      if (HasIpLimit) {
        size += 2 + 1;
      }
      if (HasGameMode) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
      }
      if (HasModuleid) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Moduleid);
      }
      if (HasMultiOpid) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MultiOpid);
      }
      if (HasCanUse) {
        size += 2 + 1;
      }
      if (HasIsAutoCreateRoom) {
        size += 2 + 1;
      }
      if (HasCreatorUserId) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(CreatorUserId);
      }
      if (HasForbiddenChat) {
        size += 2 + 1;
      }
      if (HasPasswdLimit) {
        size += 2 + 1;
      }
      if (HasMaxRewardRatio) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaxRewardRatio);
      }
      if (HasPauseAutoCreateTime) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(PauseAutoCreateTime);
      }
      if (HasSuperLeagueid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueid);
      }
      if (HasMatchId) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MatchId);
      }
      if (HasTempid) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Tempid);
      }
      if (HasSuperLeagueType) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SuperLeagueType);
      }
      if (HasChargeRatio) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ChargeRatio);
      }
      if (HasRewardMode) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) RewardMode);
      }
      if (HasDeriveRoomid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DeriveRoomid);
      }
      if (HasIsBanPc) {
        size += 2 + 1;
      }
      if (HasIsCheckMail) {
        size += 2 + 1;
      }
      if (HasForbiddenChatMode) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ForbiddenChatMode);
      }
      if (HasPpstid) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Ppstid);
      }
      size += banClub_.CalculateSize(_repeated_banClub_codec);
      size += banCountry_.CalculateSize(_repeated_banCountry_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateSngRoomREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomName) {
        RoomName = other.RoomName;
      }
      if (other.HasUpblindTime) {
        UpblindTime = other.UpblindTime;
      }
      if (other.HasActionTime) {
        ActionTime = other.ActionTime;
      }
      if (other.HasBuyin) {
        Buyin = other.Buyin;
      }
      if (other.HasBeginChips) {
        BeginChips = other.BeginChips;
      }
      if (other.HasBlindType) {
        BlindType = other.BlindType;
      }
      if (other.HasAuthLimit) {
        AuthLimit = other.AuthLimit;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasSeatNum) {
        SeatNum = other.SeatNum;
      }
      if (other.HasCharge) {
        Charge = other.Charge;
      }
      if (other.HasTimezone) {
        Timezone = other.Timezone;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasGpsLimit) {
        GpsLimit = other.GpsLimit;
      }
      if (other.HasIpLimit) {
        IpLimit = other.IpLimit;
      }
      if (other.HasGameMode) {
        GameMode = other.GameMode;
      }
      if (other.HasModuleid) {
        Moduleid = other.Moduleid;
      }
      if (other.HasMultiOpid) {
        MultiOpid = other.MultiOpid;
      }
      if (other.HasCanUse) {
        CanUse = other.CanUse;
      }
      if (other.HasIsAutoCreateRoom) {
        IsAutoCreateRoom = other.IsAutoCreateRoom;
      }
      if (other.HasCreatorUserId) {
        CreatorUserId = other.CreatorUserId;
      }
      if (other.HasForbiddenChat) {
        ForbiddenChat = other.ForbiddenChat;
      }
      if (other.HasPasswdLimit) {
        PasswdLimit = other.PasswdLimit;
      }
      if (other.HasMaxRewardRatio) {
        MaxRewardRatio = other.MaxRewardRatio;
      }
      if (other.HasPauseAutoCreateTime) {
        PauseAutoCreateTime = other.PauseAutoCreateTime;
      }
      if (other.HasSuperLeagueid) {
        SuperLeagueid = other.SuperLeagueid;
      }
      if (other.HasMatchId) {
        MatchId = other.MatchId;
      }
      if (other.HasTempid) {
        Tempid = other.Tempid;
      }
      if (other.HasSuperLeagueType) {
        SuperLeagueType = other.SuperLeagueType;
      }
      if (other.HasChargeRatio) {
        ChargeRatio = other.ChargeRatio;
      }
      if (other.HasRewardMode) {
        RewardMode = other.RewardMode;
      }
      if (other.HasDeriveRoomid) {
        DeriveRoomid = other.DeriveRoomid;
      }
      if (other.HasIsBanPc) {
        IsBanPc = other.IsBanPc;
      }
      if (other.HasIsCheckMail) {
        IsCheckMail = other.IsCheckMail;
      }
      if (other.HasForbiddenChatMode) {
        ForbiddenChatMode = other.ForbiddenChatMode;
      }
      if (other.HasPpstid) {
        Ppstid = other.Ppstid;
      }
      banClub_.Add(other.banClub_);
      banCountry_.Add(other.banCountry_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 16: {
            UpblindTime = input.ReadInt32();
            break;
          }
          case 24: {
            ActionTime = input.ReadInt32();
            break;
          }
          case 32: {
            Buyin = input.ReadInt64();
            break;
          }
          case 40: {
            BeginChips = input.ReadInt64();
            break;
          }
          case 48: {
            BlindType = input.ReadInt32();
            break;
          }
          case 56: {
            AuthLimit = input.ReadBool();
            break;
          }
          case 64: {
            Clubid = input.ReadInt32();
            break;
          }
          case 72: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 80: {
            Charge = input.ReadInt64();
            break;
          }
          case 88: {
            Timezone = input.ReadInt32();
            break;
          }
          case 96: {
            Type = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 104: {
            Roomid = input.ReadInt32();
            break;
          }
          case 112: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 120: {
            GpsLimit = input.ReadBool();
            break;
          }
          case 128: {
            IpLimit = input.ReadBool();
            break;
          }
          case 136: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 144: {
            Moduleid = input.ReadInt64();
            break;
          }
          case 154: {
            MultiOpid = input.ReadString();
            break;
          }
          case 160: {
            CanUse = input.ReadBool();
            break;
          }
          case 168: {
            IsAutoCreateRoom = input.ReadBool();
            break;
          }
          case 176: {
            CreatorUserId = input.ReadInt64();
            break;
          }
          case 184: {
            ForbiddenChat = input.ReadBool();
            break;
          }
          case 192: {
            PasswdLimit = input.ReadBool();
            break;
          }
          case 200: {
            MaxRewardRatio = input.ReadInt32();
            break;
          }
          case 208: {
            PauseAutoCreateTime = input.ReadInt64();
            break;
          }
          case 216: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 224: {
            MatchId = input.ReadInt32();
            break;
          }
          case 234: {
            Tempid = input.ReadString();
            break;
          }
          case 240: {
            SuperLeagueType = input.ReadInt32();
            break;
          }
          case 248: {
            ChargeRatio = input.ReadInt32();
            break;
          }
          case 256: {
            RewardMode = (global::Texas.Protocol.MttRewardMode) input.ReadEnum();
            break;
          }
          case 264: {
            DeriveRoomid = input.ReadInt32();
            break;
          }
          case 272: {
            IsBanPc = input.ReadBool();
            break;
          }
          case 280: {
            IsCheckMail = input.ReadBool();
            break;
          }
          case 288: {
            ForbiddenChatMode = input.ReadInt32();
            break;
          }
          case 296: {
            Ppstid = input.ReadInt32();
            break;
          }
          case 306:
          case 304: {
            banClub_.AddEntriesFrom(input, _repeated_banClub_codec);
            break;
          }
          case 314: {
            banCountry_.AddEntriesFrom(input, _repeated_banCountry_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 16: {
            UpblindTime = input.ReadInt32();
            break;
          }
          case 24: {
            ActionTime = input.ReadInt32();
            break;
          }
          case 32: {
            Buyin = input.ReadInt64();
            break;
          }
          case 40: {
            BeginChips = input.ReadInt64();
            break;
          }
          case 48: {
            BlindType = input.ReadInt32();
            break;
          }
          case 56: {
            AuthLimit = input.ReadBool();
            break;
          }
          case 64: {
            Clubid = input.ReadInt32();
            break;
          }
          case 72: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 80: {
            Charge = input.ReadInt64();
            break;
          }
          case 88: {
            Timezone = input.ReadInt32();
            break;
          }
          case 96: {
            Type = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 104: {
            Roomid = input.ReadInt32();
            break;
          }
          case 112: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 120: {
            GpsLimit = input.ReadBool();
            break;
          }
          case 128: {
            IpLimit = input.ReadBool();
            break;
          }
          case 136: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 144: {
            Moduleid = input.ReadInt64();
            break;
          }
          case 154: {
            MultiOpid = input.ReadString();
            break;
          }
          case 160: {
            CanUse = input.ReadBool();
            break;
          }
          case 168: {
            IsAutoCreateRoom = input.ReadBool();
            break;
          }
          case 176: {
            CreatorUserId = input.ReadInt64();
            break;
          }
          case 184: {
            ForbiddenChat = input.ReadBool();
            break;
          }
          case 192: {
            PasswdLimit = input.ReadBool();
            break;
          }
          case 200: {
            MaxRewardRatio = input.ReadInt32();
            break;
          }
          case 208: {
            PauseAutoCreateTime = input.ReadInt64();
            break;
          }
          case 216: {
            SuperLeagueid = input.ReadInt32();
            break;
          }
          case 224: {
            MatchId = input.ReadInt32();
            break;
          }
          case 234: {
            Tempid = input.ReadString();
            break;
          }
          case 240: {
            SuperLeagueType = input.ReadInt32();
            break;
          }
          case 248: {
            ChargeRatio = input.ReadInt32();
            break;
          }
          case 256: {
            RewardMode = (global::Texas.Protocol.MttRewardMode) input.ReadEnum();
            break;
          }
          case 264: {
            DeriveRoomid = input.ReadInt32();
            break;
          }
          case 272: {
            IsBanPc = input.ReadBool();
            break;
          }
          case 280: {
            IsCheckMail = input.ReadBool();
            break;
          }
          case 288: {
            ForbiddenChatMode = input.ReadInt32();
            break;
          }
          case 296: {
            Ppstid = input.ReadInt32();
            break;
          }
          case 306:
          case 304: {
            banClub_.AddEntriesFrom(ref input, _repeated_banClub_codec);
            break;
          }
          case 314: {
            banCountry_.AddEntriesFrom(ref input, _repeated_banCountry_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreateSngRoomRSP : pb::IMessage<CreateSngRoomRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateSngRoomRSP> _parser = new pb::MessageParser<CreateSngRoomRSP>(() => new CreateSngRoomRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateSngRoomRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateSngRoomRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateSngRoomRSP(CreateSngRoomRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      roomid_ = other.roomid_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateSngRoomRSP Clone() {
      return new CreateSngRoomRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// -3 停服不能创建    -4 俱乐部失效 -102创建密码桌失败
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 2;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 2) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private readonly static global::Texas.Protocol.RoomType TypeDefaultValue = global::Texas.Protocol.RoomType.TestRoom;

    private global::Texas.Protocol.RoomType type_;
    /// <summary>
    ///创建成功时携带
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomType Type {
      get { if ((_hasBits0 & 4) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateSngRoomRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateSngRoomRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Roomid != other.Roomid) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(Roomid);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(Roomid);
      }
      if (HasType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateSngRoomRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Roomid = input.ReadInt32();
            break;
          }
          case 24: {
            Type = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Roomid = input.ReadInt32();
            break;
          }
          case 24: {
            Type = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AnteInfo : pb::IMessage<AnteInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnteInfo> _parser = new pb::MessageParser<AnteInfo>(() => new AnteInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AnteInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnteInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnteInfo(AnteInfo other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      ante_ = other.ante_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnteInfo Clone() {
      return new AnteInfo(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "ante" field.</summary>
    public const int AnteFieldNumber = 2;
    private readonly static long AnteDefaultValue = 0L;

    private long ante_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Ante {
      get { if ((_hasBits0 & 2) != 0) { return ante_; } else { return AnteDefaultValue; } }
      set {
        _hasBits0 |= 2;
        ante_ = value;
      }
    }
    /// <summary>Gets whether the "ante" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAnte {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ante" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAnte() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AnteInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AnteInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (Ante != other.Ante) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasAnte) hash ^= Ante.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasAnte) {
        output.WriteRawTag(16);
        output.WriteInt64(Ante);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasAnte) {
        output.WriteRawTag(16);
        output.WriteInt64(Ante);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasAnte) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Ante);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AnteInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasAnte) {
        Ante = other.Ante;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Ante = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            Ante = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AnteBRC : pb::IMessage<AnteBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnteBRC> _parser = new pb::MessageParser<AnteBRC>(() => new AnteBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AnteBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnteBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnteBRC(AnteBRC other) : this() {
      _hasBits0 = other._hasBits0;
      info_ = other.info_.Clone();
      ante_ = other.ante_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnteBRC Clone() {
      return new AnteBRC(this);
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.AnteInfo> _repeated_info_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.AnteInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.AnteInfo> info_ = new pbc::RepeatedField<global::Texas.Protocol.AnteInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.AnteInfo> Info {
      get { return info_; }
    }

    /// <summary>Field number for the "ante" field.</summary>
    public const int AnteFieldNumber = 2;
    private readonly static long AnteDefaultValue = 0L;

    private long ante_;
    /// <summary>
    ///当前牌桌的前注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Ante {
      get { if ((_hasBits0 & 1) != 0) { return ante_; } else { return AnteDefaultValue; } }
      set {
        _hasBits0 |= 1;
        ante_ = value;
      }
    }
    /// <summary>Gets whether the "ante" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAnte {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "ante" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAnte() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AnteBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AnteBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!info_.Equals(other.info_)) return false;
      if (Ante != other.Ante) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= info_.GetHashCode();
      if (HasAnte) hash ^= Ante.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      info_.WriteTo(output, _repeated_info_codec);
      if (HasAnte) {
        output.WriteRawTag(16);
        output.WriteInt64(Ante);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      info_.WriteTo(ref output, _repeated_info_codec);
      if (HasAnte) {
        output.WriteRawTag(16);
        output.WriteInt64(Ante);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += info_.CalculateSize(_repeated_info_codec);
      if (HasAnte) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Ante);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AnteBRC other) {
      if (other == null) {
        return;
      }
      info_.Add(other.info_);
      if (other.HasAnte) {
        Ante = other.Ante;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
          case 16: {
            Ante = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
          case 16: {
            Ante = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SngInfoREQ : pb::IMessage<SngInfoREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SngInfoREQ> _parser = new pb::MessageParser<SngInfoREQ>(() => new SngInfoREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SngInfoREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SngInfoREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SngInfoREQ(SngInfoREQ other) : this() {
      _hasBits0 = other._hasBits0;
      roomid_ = other.roomid_;
      uid_ = other.uid_;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      superleagueid_ = other.superleagueid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SngInfoREQ Clone() {
      return new SngInfoREQ(this);
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 1;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 1) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 2) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 3;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 4) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 4;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    /// <summary>
    ///ppst取得轉換幣值使用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 8) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "superleagueid" field.</summary>
    public const int SuperleagueidFieldNumber = 5;
    private readonly static int SuperleagueidDefaultValue = 0;

    private int superleagueid_;
    /// <summary>
    ///ppst取得轉換幣值使用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Superleagueid {
      get { if ((_hasBits0 & 16) != 0) { return superleagueid_; } else { return SuperleagueidDefaultValue; } }
      set {
        _hasBits0 |= 16;
        superleagueid_ = value;
      }
    }
    /// <summary>Gets whether the "superleagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuperleagueid {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "superleagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuperleagueid() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SngInfoREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SngInfoREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomid != other.Roomid) return false;
      if (Uid != other.Uid) return false;
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (Superleagueid != other.Superleagueid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasSuperleagueid) hash ^= Superleagueid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(24);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(32);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperleagueid) {
        output.WriteRawTag(40);
        output.WriteInt32(Superleagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomid) {
        output.WriteRawTag(8);
        output.WriteInt32(Roomid);
      }
      if (HasUid) {
        output.WriteRawTag(16);
        output.WriteInt64(Uid);
      }
      if (HasClubid) {
        output.WriteRawTag(24);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(32);
        output.WriteInt32(Leagueid);
      }
      if (HasSuperleagueid) {
        output.WriteRawTag(40);
        output.WriteInt32(Superleagueid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasSuperleagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Superleagueid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SngInfoREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasSuperleagueid) {
        Superleagueid = other.Superleagueid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
          case 24: {
            Clubid = input.ReadInt32();
            break;
          }
          case 32: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 40: {
            Superleagueid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Roomid = input.ReadInt32();
            break;
          }
          case 16: {
            Uid = input.ReadInt64();
            break;
          }
          case 24: {
            Clubid = input.ReadInt32();
            break;
          }
          case 32: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 40: {
            Superleagueid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SngInfoRSP : pb::IMessage<SngInfoRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SngInfoRSP> _parser = new pb::MessageParser<SngInfoRSP>(() => new SngInfoRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SngInfoRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SngInfoRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SngInfoRSP(SngInfoRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      info_ = other.info_ != null ? other.info_.Clone() : null;
      player_ = other.player_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SngInfoRSP Clone() {
      return new SngInfoRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    /// -1房间不存在  0 未开赛  1 已经开赛
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 2;
    private global::Texas.Protocol.SngRoomInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.SngRoomInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Texas.Protocol.UserBrief> _repeated_player_codec
        = pb::FieldCodec.ForMessage(26, global::Texas.Protocol.UserBrief.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.UserBrief> player_ = new pbc::RepeatedField<global::Texas.Protocol.UserBrief>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.UserBrief> Player {
      get { return player_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SngInfoRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SngInfoRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Info, other.Info)) return false;
      if(!player_.Equals(other.player_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (info_ != null) hash ^= Info.GetHashCode();
      hash ^= player_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (info_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Info);
      }
      player_.WriteTo(output, _repeated_player_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (info_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Info);
      }
      player_.WriteTo(ref output, _repeated_player_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      size += player_.CalculateSize(_repeated_player_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SngInfoRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Texas.Protocol.SngRoomInfo();
        }
        Info.MergeFrom(other.Info);
      }
      player_.Add(other.player_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (info_ == null) {
              Info = new global::Texas.Protocol.SngRoomInfo();
            }
            input.ReadMessage(Info);
            break;
          }
          case 26: {
            player_.AddEntriesFrom(input, _repeated_player_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (info_ == null) {
              Info = new global::Texas.Protocol.SngRoomInfo();
            }
            input.ReadMessage(Info);
            break;
          }
          case 26: {
            player_.AddEntriesFrom(ref input, _repeated_player_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SeatStatusBRC : pb::IMessage<SeatStatusBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SeatStatusBRC> _parser = new pb::MessageParser<SeatStatusBRC>(() => new SeatStatusBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SeatStatusBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SeatStatusBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SeatStatusBRC(SeatStatusBRC other) : this() {
      _hasBits0 = other._hasBits0;
      seatid_ = other.seatid_;
      seatReserve_ = other.seatReserve_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SeatStatusBRC Clone() {
      return new SeatStatusBRC(this);
    }

    /// <summary>Field number for the "seatid" field.</summary>
    public const int SeatidFieldNumber = 1;
    private readonly static int SeatidDefaultValue = 0;

    private int seatid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Seatid {
      get { if ((_hasBits0 & 1) != 0) { return seatid_; } else { return SeatidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        seatid_ = value;
      }
    }
    /// <summary>Gets whether the "seatid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "seatid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seat_reserve" field.</summary>
    public const int SeatReserveFieldNumber = 2;
    private readonly static bool SeatReserveDefaultValue = false;

    private bool seatReserve_;
    /// <summary>
    /// 留座
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SeatReserve {
      get { if ((_hasBits0 & 2) != 0) { return seatReserve_; } else { return SeatReserveDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seatReserve_ = value;
      }
    }
    /// <summary>Gets whether the "seat_reserve" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatReserve {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seat_reserve" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatReserve() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SeatStatusBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SeatStatusBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seatid != other.Seatid) return false;
      if (SeatReserve != other.SeatReserve) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeatid) hash ^= Seatid.GetHashCode();
      if (HasSeatReserve) hash ^= SeatReserve.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasSeatReserve) {
        output.WriteRawTag(16);
        output.WriteBool(SeatReserve);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSeatid) {
        output.WriteRawTag(8);
        output.WriteInt32(Seatid);
      }
      if (HasSeatReserve) {
        output.WriteRawTag(16);
        output.WriteBool(SeatReserve);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSeatid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seatid);
      }
      if (HasSeatReserve) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SeatStatusBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasSeatid) {
        Seatid = other.Seatid;
      }
      if (other.HasSeatReserve) {
        SeatReserve = other.SeatReserve;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            SeatReserve = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Seatid = input.ReadInt32();
            break;
          }
          case 16: {
            SeatReserve = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReserveSeatREQ : pb::IMessage<ReserveSeatREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReserveSeatREQ> _parser = new pb::MessageParser<ReserveSeatREQ>(() => new ReserveSeatREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReserveSeatREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReserveSeatREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReserveSeatREQ(ReserveSeatREQ other) : this() {
      _hasBits0 = other._hasBits0;
      reserve_ = other.reserve_;
      gpsLon_ = other.gpsLon_;
      gpsLat_ = other.gpsLat_;
      ip_ = other.ip_;
      pc_ = other.pc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReserveSeatREQ Clone() {
      return new ReserveSeatREQ(this);
    }

    /// <summary>Field number for the "reserve" field.</summary>
    public const int ReserveFieldNumber = 1;
    private readonly static bool ReserveDefaultValue = false;

    private bool reserve_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Reserve {
      get { if ((_hasBits0 & 1) != 0) { return reserve_; } else { return ReserveDefaultValue; } }
      set {
        _hasBits0 |= 1;
        reserve_ = value;
      }
    }
    /// <summary>Gets whether the "reserve" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReserve {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "reserve" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReserve() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "gps_lon" field.</summary>
    public const int GpsLonFieldNumber = 2;
    private readonly static int GpsLonDefaultValue = 0;

    private int gpsLon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GpsLon {
      get { if ((_hasBits0 & 2) != 0) { return gpsLon_; } else { return GpsLonDefaultValue; } }
      set {
        _hasBits0 |= 2;
        gpsLon_ = value;
      }
    }
    /// <summary>Gets whether the "gps_lon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpsLon {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "gps_lon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpsLon() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "gps_lat" field.</summary>
    public const int GpsLatFieldNumber = 3;
    private readonly static int GpsLatDefaultValue = 0;

    private int gpsLat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GpsLat {
      get { if ((_hasBits0 & 4) != 0) { return gpsLat_; } else { return GpsLatDefaultValue; } }
      set {
        _hasBits0 |= 4;
        gpsLat_ = value;
      }
    }
    /// <summary>Gets whether the "gps_lat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpsLat {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "gps_lat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpsLat() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 4;
    private readonly static string IpDefaultValue = "";

    private string ip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ip {
      get { return ip_ ?? IpDefaultValue; }
      set {
        ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ip" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIp {
      get { return ip_ != null; }
    }
    /// <summary>Clears the value of the "ip" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIp() {
      ip_ = null;
    }

    /// <summary>Field number for the "pc" field.</summary>
    public const int PcFieldNumber = 5;
    private readonly static bool PcDefaultValue = false;

    private bool pc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Pc {
      get { if ((_hasBits0 & 8) != 0) { return pc_; } else { return PcDefaultValue; } }
      set {
        _hasBits0 |= 8;
        pc_ = value;
      }
    }
    /// <summary>Gets whether the "pc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPc {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "pc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPc() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReserveSeatREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReserveSeatREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Reserve != other.Reserve) return false;
      if (GpsLon != other.GpsLon) return false;
      if (GpsLat != other.GpsLat) return false;
      if (Ip != other.Ip) return false;
      if (Pc != other.Pc) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasReserve) hash ^= Reserve.GetHashCode();
      if (HasGpsLon) hash ^= GpsLon.GetHashCode();
      if (HasGpsLat) hash ^= GpsLat.GetHashCode();
      if (HasIp) hash ^= Ip.GetHashCode();
      if (HasPc) hash ^= Pc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasReserve) {
        output.WriteRawTag(8);
        output.WriteBool(Reserve);
      }
      if (HasGpsLon) {
        output.WriteRawTag(16);
        output.WriteInt32(GpsLon);
      }
      if (HasGpsLat) {
        output.WriteRawTag(24);
        output.WriteInt32(GpsLat);
      }
      if (HasIp) {
        output.WriteRawTag(34);
        output.WriteString(Ip);
      }
      if (HasPc) {
        output.WriteRawTag(40);
        output.WriteBool(Pc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasReserve) {
        output.WriteRawTag(8);
        output.WriteBool(Reserve);
      }
      if (HasGpsLon) {
        output.WriteRawTag(16);
        output.WriteInt32(GpsLon);
      }
      if (HasGpsLat) {
        output.WriteRawTag(24);
        output.WriteInt32(GpsLat);
      }
      if (HasIp) {
        output.WriteRawTag(34);
        output.WriteString(Ip);
      }
      if (HasPc) {
        output.WriteRawTag(40);
        output.WriteBool(Pc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasReserve) {
        size += 1 + 1;
      }
      if (HasGpsLon) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GpsLon);
      }
      if (HasGpsLat) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GpsLat);
      }
      if (HasIp) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
      }
      if (HasPc) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReserveSeatREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasReserve) {
        Reserve = other.Reserve;
      }
      if (other.HasGpsLon) {
        GpsLon = other.GpsLon;
      }
      if (other.HasGpsLat) {
        GpsLat = other.GpsLat;
      }
      if (other.HasIp) {
        Ip = other.Ip;
      }
      if (other.HasPc) {
        Pc = other.Pc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Reserve = input.ReadBool();
            break;
          }
          case 16: {
            GpsLon = input.ReadInt32();
            break;
          }
          case 24: {
            GpsLat = input.ReadInt32();
            break;
          }
          case 34: {
            Ip = input.ReadString();
            break;
          }
          case 40: {
            Pc = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Reserve = input.ReadBool();
            break;
          }
          case 16: {
            GpsLon = input.ReadInt32();
            break;
          }
          case 24: {
            GpsLat = input.ReadInt32();
            break;
          }
          case 34: {
            Ip = input.ReadString();
            break;
          }
          case 40: {
            Pc = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReserveSeatRSP : pb::IMessage<ReserveSeatRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReserveSeatRSP> _parser = new pb::MessageParser<ReserveSeatRSP>(() => new ReserveSeatRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReserveSeatRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReserveSeatRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReserveSeatRSP(ReserveSeatRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      reserve_ = other.reserve_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReserveSeatRSP Clone() {
      return new ReserveSeatRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///失败 -1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "reserve" field.</summary>
    public const int ReserveFieldNumber = 2;
    private readonly static bool ReserveDefaultValue = false;

    private bool reserve_;
    /// <summary>
    ///当前状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Reserve {
      get { if ((_hasBits0 & 2) != 0) { return reserve_; } else { return ReserveDefaultValue; } }
      set {
        _hasBits0 |= 2;
        reserve_ = value;
      }
    }
    /// <summary>Gets whether the "reserve" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReserve {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "reserve" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReserve() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReserveSeatRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReserveSeatRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Reserve != other.Reserve) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasReserve) hash ^= Reserve.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasReserve) {
        output.WriteRawTag(16);
        output.WriteBool(Reserve);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasReserve) {
        output.WriteRawTag(16);
        output.WriteBool(Reserve);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasReserve) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReserveSeatRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasReserve) {
        Reserve = other.Reserve;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Reserve = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Reserve = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserSngOverRSP : pb::IMessage<UserSngOverRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserSngOverRSP> _parser = new pb::MessageParser<UserSngOverRSP>(() => new UserSngOverRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserSngOverRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserSngOverRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserSngOverRSP(UserSngOverRSP other) : this() {
      _hasBits0 = other._hasBits0;
      rank_ = other.rank_;
      rewardInfo_ = other.rewardInfo_ != null ? other.rewardInfo_.Clone() : null;
      tempid_ = other.tempid_;
      totalNum_ = other.totalNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserSngOverRSP Clone() {
      return new UserSngOverRSP(this);
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 1;
    private readonly static int RankDefaultValue = 0;

    private int rank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rank {
      get { if ((_hasBits0 & 1) != 0) { return rank_; } else { return RankDefaultValue; } }
      set {
        _hasBits0 |= 1;
        rank_ = value;
      }
    }
    /// <summary>Gets whether the "rank" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRank {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "rank" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRank() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "reward_info" field.</summary>
    public const int RewardInfoFieldNumber = 2;
    private global::Texas.Protocol.MttRewardInfo rewardInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.MttRewardInfo RewardInfo {
      get { return rewardInfo_; }
      set {
        rewardInfo_ = value;
      }
    }

    /// <summary>Field number for the "tempid" field.</summary>
    public const int TempidFieldNumber = 3;
    private readonly static string TempidDefaultValue = "";

    private string tempid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tempid {
      get { return tempid_ ?? TempidDefaultValue; }
      set {
        tempid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tempid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTempid {
      get { return tempid_ != null; }
    }
    /// <summary>Clears the value of the "tempid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTempid() {
      tempid_ = null;
    }

    /// <summary>Field number for the "total_num" field.</summary>
    public const int TotalNumFieldNumber = 4;
    private readonly static int TotalNumDefaultValue = 0;

    private int totalNum_;
    /// <summary>
    /// 总排名人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalNum {
      get { if ((_hasBits0 & 2) != 0) { return totalNum_; } else { return TotalNumDefaultValue; } }
      set {
        _hasBits0 |= 2;
        totalNum_ = value;
      }
    }
    /// <summary>Gets whether the "total_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalNum {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "total_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalNum() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserSngOverRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserSngOverRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rank != other.Rank) return false;
      if (!object.Equals(RewardInfo, other.RewardInfo)) return false;
      if (Tempid != other.Tempid) return false;
      if (TotalNum != other.TotalNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRank) hash ^= Rank.GetHashCode();
      if (rewardInfo_ != null) hash ^= RewardInfo.GetHashCode();
      if (HasTempid) hash ^= Tempid.GetHashCode();
      if (HasTotalNum) hash ^= TotalNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRank) {
        output.WriteRawTag(8);
        output.WriteInt32(Rank);
      }
      if (rewardInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RewardInfo);
      }
      if (HasTempid) {
        output.WriteRawTag(26);
        output.WriteString(Tempid);
      }
      if (HasTotalNum) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRank) {
        output.WriteRawTag(8);
        output.WriteInt32(Rank);
      }
      if (rewardInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RewardInfo);
      }
      if (HasTempid) {
        output.WriteRawTag(26);
        output.WriteString(Tempid);
      }
      if (HasTotalNum) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRank) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
      }
      if (rewardInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RewardInfo);
      }
      if (HasTempid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tempid);
      }
      if (HasTotalNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserSngOverRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasRank) {
        Rank = other.Rank;
      }
      if (other.rewardInfo_ != null) {
        if (rewardInfo_ == null) {
          RewardInfo = new global::Texas.Protocol.MttRewardInfo();
        }
        RewardInfo.MergeFrom(other.RewardInfo);
      }
      if (other.HasTempid) {
        Tempid = other.Tempid;
      }
      if (other.HasTotalNum) {
        TotalNum = other.TotalNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Rank = input.ReadInt32();
            break;
          }
          case 18: {
            if (rewardInfo_ == null) {
              RewardInfo = new global::Texas.Protocol.MttRewardInfo();
            }
            input.ReadMessage(RewardInfo);
            break;
          }
          case 26: {
            Tempid = input.ReadString();
            break;
          }
          case 32: {
            TotalNum = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Rank = input.ReadInt32();
            break;
          }
          case 18: {
            if (rewardInfo_ == null) {
              RewardInfo = new global::Texas.Protocol.MttRewardInfo();
            }
            input.ReadMessage(RewardInfo);
            break;
          }
          case 26: {
            Tempid = input.ReadString();
            break;
          }
          case 32: {
            TotalNum = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SngOverBRC : pb::IMessage<SngOverBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SngOverBRC> _parser = new pb::MessageParser<SngOverBRC>(() => new SngOverBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SngOverBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SngOverBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SngOverBRC(SngOverBRC other) : this() {
      _hasBits0 = other._hasBits0;
      info_ = other.info_.Clone();
      isStarted_ = other.isStarted_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SngOverBRC Clone() {
      return new SngOverBRC(this);
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Texas.Protocol.ProfitInfo> _repeated_info_codec
        = pb::FieldCodec.ForMessage(10, global::Texas.Protocol.ProfitInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.ProfitInfo> info_ = new pbc::RepeatedField<global::Texas.Protocol.ProfitInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.ProfitInfo> Info {
      get { return info_; }
    }

    /// <summary>Field number for the "is_started" field.</summary>
    public const int IsStartedFieldNumber = 2;
    private readonly static bool IsStartedDefaultValue = false;

    private bool isStarted_;
    /// <summary>
    ///房间是否已经开始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsStarted {
      get { if ((_hasBits0 & 1) != 0) { return isStarted_; } else { return IsStartedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isStarted_ = value;
      }
    }
    /// <summary>Gets whether the "is_started" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsStarted {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_started" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsStarted() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SngOverBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SngOverBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!info_.Equals(other.info_)) return false;
      if (IsStarted != other.IsStarted) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= info_.GetHashCode();
      if (HasIsStarted) hash ^= IsStarted.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      info_.WriteTo(output, _repeated_info_codec);
      if (HasIsStarted) {
        output.WriteRawTag(16);
        output.WriteBool(IsStarted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      info_.WriteTo(ref output, _repeated_info_codec);
      if (HasIsStarted) {
        output.WriteRawTag(16);
        output.WriteBool(IsStarted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += info_.CalculateSize(_repeated_info_codec);
      if (HasIsStarted) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SngOverBRC other) {
      if (other == null) {
        return;
      }
      info_.Add(other.info_);
      if (other.HasIsStarted) {
        IsStarted = other.IsStarted;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
          case 16: {
            IsStarted = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
          case 16: {
            IsStarted = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GameComingRSP : pb::IMessage<GameComingRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameComingRSP> _parser = new pb::MessageParser<GameComingRSP>(() => new GameComingRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameComingRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameComingRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameComingRSP(GameComingRSP other) : this() {
      _hasBits0 = other._hasBits0;
      left_ = other.left_;
      mttStatus_ = other.mttStatus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameComingRSP Clone() {
      return new GameComingRSP(this);
    }

    /// <summary>Field number for the "left" field.</summary>
    public const int LeftFieldNumber = 1;
    private readonly static int LeftDefaultValue = 0;

    private int left_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Left {
      get { if ((_hasBits0 & 1) != 0) { return left_; } else { return LeftDefaultValue; } }
      set {
        _hasBits0 |= 1;
        left_ = value;
      }
    }
    /// <summary>Gets whether the "left" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeft {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "left" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeft() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "mtt_status" field.</summary>
    public const int MttStatusFieldNumber = 2;
    private readonly static int MttStatusDefaultValue = 0;

    private int mttStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MttStatus {
      get { if ((_hasBits0 & 2) != 0) { return mttStatus_; } else { return MttStatusDefaultValue; } }
      set {
        _hasBits0 |= 2;
        mttStatus_ = value;
      }
    }
    /// <summary>Gets whether the "mtt_status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMttStatus {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "mtt_status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMttStatus() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameComingRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameComingRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Left != other.Left) return false;
      if (MttStatus != other.MttStatus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLeft) hash ^= Left.GetHashCode();
      if (HasMttStatus) hash ^= MttStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLeft) {
        output.WriteRawTag(8);
        output.WriteInt32(Left);
      }
      if (HasMttStatus) {
        output.WriteRawTag(16);
        output.WriteInt32(MttStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLeft) {
        output.WriteRawTag(8);
        output.WriteInt32(Left);
      }
      if (HasMttStatus) {
        output.WriteRawTag(16);
        output.WriteInt32(MttStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLeft) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Left);
      }
      if (HasMttStatus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MttStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameComingRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasLeft) {
        Left = other.Left;
      }
      if (other.HasMttStatus) {
        MttStatus = other.MttStatus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Left = input.ReadInt32();
            break;
          }
          case 16: {
            MttStatus = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Left = input.ReadInt32();
            break;
          }
          case 16: {
            MttStatus = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///报名官方sng
  /// </summary>
  public sealed partial class SngJoinREQ : pb::IMessage<SngJoinREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SngJoinREQ> _parser = new pb::MessageParser<SngJoinREQ>(() => new SngJoinREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SngJoinREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SngJoinREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SngJoinREQ(SngJoinREQ other) : this() {
      _hasBits0 = other._hasBits0;
      tempid_ = other.tempid_;
      clubid_ = other.clubid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SngJoinREQ Clone() {
      return new SngJoinREQ(this);
    }

    /// <summary>Field number for the "tempid" field.</summary>
    public const int TempidFieldNumber = 1;
    private readonly static string TempidDefaultValue = "";

    private string tempid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tempid {
      get { return tempid_ ?? TempidDefaultValue; }
      set {
        tempid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tempid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTempid {
      get { return tempid_ != null; }
    }
    /// <summary>Clears the value of the "tempid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTempid() {
      tempid_ = null;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 2;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 1) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SngJoinREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SngJoinREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tempid != other.Tempid) return false;
      if (Clubid != other.Clubid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTempid) hash ^= Tempid.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTempid) {
        output.WriteRawTag(10);
        output.WriteString(Tempid);
      }
      if (HasClubid) {
        output.WriteRawTag(16);
        output.WriteInt32(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTempid) {
        output.WriteRawTag(10);
        output.WriteString(Tempid);
      }
      if (HasClubid) {
        output.WriteRawTag(16);
        output.WriteInt32(Clubid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTempid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tempid);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SngJoinREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasTempid) {
        Tempid = other.Tempid;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tempid = input.ReadString();
            break;
          }
          case 16: {
            Clubid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Tempid = input.ReadString();
            break;
          }
          case 16: {
            Clubid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SngJoinRSP : pb::IMessage<SngJoinRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SngJoinRSP> _parser = new pb::MessageParser<SngJoinRSP>(() => new SngJoinRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SngJoinRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SngJoinRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SngJoinRSP(SngJoinRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      roomid_ = other.roomid_;
      tempid_ = other.tempid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SngJoinRSP Clone() {
      return new SngJoinRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 2;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 2) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "tempid" field.</summary>
    public const int TempidFieldNumber = 3;
    private readonly static string TempidDefaultValue = "";

    private string tempid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tempid {
      get { return tempid_ ?? TempidDefaultValue; }
      set {
        tempid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tempid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTempid {
      get { return tempid_ != null; }
    }
    /// <summary>Clears the value of the "tempid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTempid() {
      tempid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SngJoinRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SngJoinRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Roomid != other.Roomid) return false;
      if (Tempid != other.Tempid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasTempid) hash ^= Tempid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(Roomid);
      }
      if (HasTempid) {
        output.WriteRawTag(26);
        output.WriteString(Tempid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(Roomid);
      }
      if (HasTempid) {
        output.WriteRawTag(26);
        output.WriteString(Tempid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasTempid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tempid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SngJoinRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasTempid) {
        Tempid = other.Tempid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Roomid = input.ReadInt32();
            break;
          }
          case 26: {
            Tempid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Roomid = input.ReadInt32();
            break;
          }
          case 26: {
            Tempid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///SpinUp摇奖奖励
  /// </summary>
  public sealed partial class SpinUpDrawLotteryItem : pb::IMessage<SpinUpDrawLotteryItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpinUpDrawLotteryItem> _parser = new pb::MessageParser<SpinUpDrawLotteryItem>(() => new SpinUpDrawLotteryItem());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpinUpDrawLotteryItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinUpDrawLotteryItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinUpDrawLotteryItem(SpinUpDrawLotteryItem other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      value_ = other.value_;
      itemName_ = other.itemName_;
      itemNum_ = other.itemNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinUpDrawLotteryItem Clone() {
      return new SpinUpDrawLotteryItem(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static global::Texas.Protocol.DrawLotteryItemType TypeDefaultValue = global::Texas.Protocol.DrawLotteryItemType.DrawLotteryItmeTypePpchip;

    private global::Texas.Protocol.DrawLotteryItemType type_;
    /// <summary>
    ///类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.DrawLotteryItemType Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private readonly static long ValueDefaultValue = 0L;

    private long value_;
    /// <summary>
    ///数值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Value {
      get { if ((_hasBits0 & 2) != 0) { return value_; } else { return ValueDefaultValue; } }
      set {
        _hasBits0 |= 2;
        value_ = value;
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasValue {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearValue() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "item_name" field.</summary>
    public const int ItemNameFieldNumber = 3;
    private readonly static string ItemNameDefaultValue = "";

    private string itemName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ItemName {
      get { return itemName_ ?? ItemNameDefaultValue; }
      set {
        itemName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "item_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasItemName {
      get { return itemName_ != null; }
    }
    /// <summary>Clears the value of the "item_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearItemName() {
      itemName_ = null;
    }

    /// <summary>Field number for the "item_num" field.</summary>
    public const int ItemNumFieldNumber = 4;
    private readonly static int ItemNumDefaultValue = 0;

    private int itemNum_;
    /// <summary>
    ///物品数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ItemNum {
      get { if ((_hasBits0 & 4) != 0) { return itemNum_; } else { return ItemNumDefaultValue; } }
      set {
        _hasBits0 |= 4;
        itemNum_ = value;
      }
    }
    /// <summary>Gets whether the "item_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasItemNum {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "item_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearItemNum() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpinUpDrawLotteryItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpinUpDrawLotteryItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Value != other.Value) return false;
      if (ItemName != other.ItemName) return false;
      if (ItemNum != other.ItemNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasValue) hash ^= Value.GetHashCode();
      if (HasItemName) hash ^= ItemName.GetHashCode();
      if (HasItemNum) hash ^= ItemNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasValue) {
        output.WriteRawTag(16);
        output.WriteInt64(Value);
      }
      if (HasItemName) {
        output.WriteRawTag(26);
        output.WriteString(ItemName);
      }
      if (HasItemNum) {
        output.WriteRawTag(32);
        output.WriteInt32(ItemNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasValue) {
        output.WriteRawTag(16);
        output.WriteInt64(Value);
      }
      if (HasItemName) {
        output.WriteRawTag(26);
        output.WriteString(ItemName);
      }
      if (HasItemNum) {
        output.WriteRawTag(32);
        output.WriteInt32(ItemNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Value);
      }
      if (HasItemName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemName);
      }
      if (HasItemNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpinUpDrawLotteryItem other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      if (other.HasItemName) {
        ItemName = other.ItemName;
      }
      if (other.HasItemNum) {
        ItemNum = other.ItemNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Texas.Protocol.DrawLotteryItemType) input.ReadEnum();
            break;
          }
          case 16: {
            Value = input.ReadInt64();
            break;
          }
          case 26: {
            ItemName = input.ReadString();
            break;
          }
          case 32: {
            ItemNum = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Texas.Protocol.DrawLotteryItemType) input.ReadEnum();
            break;
          }
          case 16: {
            Value = input.ReadInt64();
            break;
          }
          case 26: {
            ItemName = input.ReadString();
            break;
          }
          case 32: {
            ItemNum = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///SpinUp广播
  /// </summary>
  public sealed partial class SpinUpBRC : pb::IMessage<SpinUpBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpinUpBRC> _parser = new pb::MessageParser<SpinUpBRC>(() => new SpinUpBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpinUpBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinUpBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinUpBRC(SpinUpBRC other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      reward_ = other.reward_ != null ? other.reward_.Clone() : null;
      userName_ = other.userName_;
      secondTime_ = other.secondTime_;
      nextCostValue_ = other.nextCostValue_;
      costValue_ = other.costValue_;
      drawLotteryOver_ = other.drawLotteryOver_;
      redrawUid_ = other.redrawUid_;
      redrawUidList_ = other.redrawUidList_.Clone();
      remainSecondTime_ = other.remainSecondTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinUpBRC Clone() {
      return new SpinUpBRC(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static global::Texas.Protocol.SpinUpBRCType TypeDefaultValue = global::Texas.Protocol.SpinUpBRCType.None;

    private global::Texas.Protocol.SpinUpBRCType type_;
    /// <summary>
    ///类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.SpinUpBRCType Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "reward" field.</summary>
    public const int RewardFieldNumber = 2;
    private global::Texas.Protocol.SpinUpDrawLotteryItem reward_;
    /// <summary>
    ///奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.SpinUpDrawLotteryItem Reward {
      get { return reward_; }
      set {
        reward_ = value;
      }
    }

    /// <summary>Field number for the "user_name" field.</summary>
    public const int UserNameFieldNumber = 3;
    private readonly static string UserNameDefaultValue = "";

    private string userName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserName {
      get { return userName_ ?? UserNameDefaultValue; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "user_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserName {
      get { return userName_ != null; }
    }
    /// <summary>Clears the value of the "user_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserName() {
      userName_ = null;
    }

    /// <summary>Field number for the "second_time" field.</summary>
    public const int SecondTimeFieldNumber = 4;
    private readonly static int SecondTimeDefaultValue = 0;

    private int secondTime_;
    /// <summary>
    ///倒计时时间 单位秒
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SecondTime {
      get { if ((_hasBits0 & 2) != 0) { return secondTime_; } else { return SecondTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        secondTime_ = value;
      }
    }
    /// <summary>Gets whether the "second_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSecondTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "second_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSecondTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "next_cost_value" field.</summary>
    public const int NextCostValueFieldNumber = 5;
    private readonly static long NextCostValueDefaultValue = 0L;

    private long nextCostValue_;
    /// <summary>
    ///下次摇奖消耗
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NextCostValue {
      get { if ((_hasBits0 & 4) != 0) { return nextCostValue_; } else { return NextCostValueDefaultValue; } }
      set {
        _hasBits0 |= 4;
        nextCostValue_ = value;
      }
    }
    /// <summary>Gets whether the "next_cost_value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNextCostValue {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "next_cost_value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNextCostValue() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "cost_value" field.</summary>
    public const int CostValueFieldNumber = 6;
    private readonly static long CostValueDefaultValue = 0L;

    private long costValue_;
    /// <summary>
    ///消耗
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CostValue {
      get { if ((_hasBits0 & 8) != 0) { return costValue_; } else { return CostValueDefaultValue; } }
      set {
        _hasBits0 |= 8;
        costValue_ = value;
      }
    }
    /// <summary>Gets whether the "cost_value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCostValue {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "cost_value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCostValue() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "draw_lottery_over" field.</summary>
    public const int DrawLotteryOverFieldNumber = 7;
    private readonly static bool DrawLotteryOverDefaultValue = false;

    private bool drawLotteryOver_;
    /// <summary>
    ///摇奖结束
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DrawLotteryOver {
      get { if ((_hasBits0 & 16) != 0) { return drawLotteryOver_; } else { return DrawLotteryOverDefaultValue; } }
      set {
        _hasBits0 |= 16;
        drawLotteryOver_ = value;
      }
    }
    /// <summary>Gets whether the "draw_lottery_over" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDrawLotteryOver {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "draw_lottery_over" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDrawLotteryOver() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "redraw_uid" field.</summary>
    public const int RedrawUidFieldNumber = 8;
    private readonly static long RedrawUidDefaultValue = 0L;

    private long redrawUid_;
    /// <summary>
    ///重摇玩家uid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RedrawUid {
      get { if ((_hasBits0 & 32) != 0) { return redrawUid_; } else { return RedrawUidDefaultValue; } }
      set {
        _hasBits0 |= 32;
        redrawUid_ = value;
      }
    }
    /// <summary>Gets whether the "redraw_uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRedrawUid {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "redraw_uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRedrawUid() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "redraw_uid_list" field.</summary>
    public const int RedrawUidListFieldNumber = 9;
    private static readonly pb::FieldCodec<long> _repeated_redrawUidList_codec
        = pb::FieldCodec.ForInt64(74);
    private readonly pbc::RepeatedField<long> redrawUidList_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///重摇玩家uid list
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> RedrawUidList {
      get { return redrawUidList_; }
    }

    /// <summary>Field number for the "remain_second_time" field.</summary>
    public const int RemainSecondTimeFieldNumber = 10;
    private readonly static int RemainSecondTimeDefaultValue = 0;

    private int remainSecondTime_;
    /// <summary>
    ///倒计时剩余时间 单位秒
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RemainSecondTime {
      get { if ((_hasBits0 & 64) != 0) { return remainSecondTime_; } else { return RemainSecondTimeDefaultValue; } }
      set {
        _hasBits0 |= 64;
        remainSecondTime_ = value;
      }
    }
    /// <summary>Gets whether the "remain_second_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRemainSecondTime {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "remain_second_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRemainSecondTime() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpinUpBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpinUpBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Reward, other.Reward)) return false;
      if (UserName != other.UserName) return false;
      if (SecondTime != other.SecondTime) return false;
      if (NextCostValue != other.NextCostValue) return false;
      if (CostValue != other.CostValue) return false;
      if (DrawLotteryOver != other.DrawLotteryOver) return false;
      if (RedrawUid != other.RedrawUid) return false;
      if(!redrawUidList_.Equals(other.redrawUidList_)) return false;
      if (RemainSecondTime != other.RemainSecondTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (reward_ != null) hash ^= Reward.GetHashCode();
      if (HasUserName) hash ^= UserName.GetHashCode();
      if (HasSecondTime) hash ^= SecondTime.GetHashCode();
      if (HasNextCostValue) hash ^= NextCostValue.GetHashCode();
      if (HasCostValue) hash ^= CostValue.GetHashCode();
      if (HasDrawLotteryOver) hash ^= DrawLotteryOver.GetHashCode();
      if (HasRedrawUid) hash ^= RedrawUid.GetHashCode();
      hash ^= redrawUidList_.GetHashCode();
      if (HasRemainSecondTime) hash ^= RemainSecondTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (reward_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Reward);
      }
      if (HasUserName) {
        output.WriteRawTag(26);
        output.WriteString(UserName);
      }
      if (HasSecondTime) {
        output.WriteRawTag(32);
        output.WriteInt32(SecondTime);
      }
      if (HasNextCostValue) {
        output.WriteRawTag(40);
        output.WriteInt64(NextCostValue);
      }
      if (HasCostValue) {
        output.WriteRawTag(48);
        output.WriteInt64(CostValue);
      }
      if (HasDrawLotteryOver) {
        output.WriteRawTag(56);
        output.WriteBool(DrawLotteryOver);
      }
      if (HasRedrawUid) {
        output.WriteRawTag(64);
        output.WriteInt64(RedrawUid);
      }
      redrawUidList_.WriteTo(output, _repeated_redrawUidList_codec);
      if (HasRemainSecondTime) {
        output.WriteRawTag(80);
        output.WriteInt32(RemainSecondTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (reward_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Reward);
      }
      if (HasUserName) {
        output.WriteRawTag(26);
        output.WriteString(UserName);
      }
      if (HasSecondTime) {
        output.WriteRawTag(32);
        output.WriteInt32(SecondTime);
      }
      if (HasNextCostValue) {
        output.WriteRawTag(40);
        output.WriteInt64(NextCostValue);
      }
      if (HasCostValue) {
        output.WriteRawTag(48);
        output.WriteInt64(CostValue);
      }
      if (HasDrawLotteryOver) {
        output.WriteRawTag(56);
        output.WriteBool(DrawLotteryOver);
      }
      if (HasRedrawUid) {
        output.WriteRawTag(64);
        output.WriteInt64(RedrawUid);
      }
      redrawUidList_.WriteTo(ref output, _repeated_redrawUidList_codec);
      if (HasRemainSecondTime) {
        output.WriteRawTag(80);
        output.WriteInt32(RemainSecondTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (reward_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reward);
      }
      if (HasUserName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (HasSecondTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SecondTime);
      }
      if (HasNextCostValue) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NextCostValue);
      }
      if (HasCostValue) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CostValue);
      }
      if (HasDrawLotteryOver) {
        size += 1 + 1;
      }
      if (HasRedrawUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RedrawUid);
      }
      size += redrawUidList_.CalculateSize(_repeated_redrawUidList_codec);
      if (HasRemainSecondTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainSecondTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpinUpBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.reward_ != null) {
        if (reward_ == null) {
          Reward = new global::Texas.Protocol.SpinUpDrawLotteryItem();
        }
        Reward.MergeFrom(other.Reward);
      }
      if (other.HasUserName) {
        UserName = other.UserName;
      }
      if (other.HasSecondTime) {
        SecondTime = other.SecondTime;
      }
      if (other.HasNextCostValue) {
        NextCostValue = other.NextCostValue;
      }
      if (other.HasCostValue) {
        CostValue = other.CostValue;
      }
      if (other.HasDrawLotteryOver) {
        DrawLotteryOver = other.DrawLotteryOver;
      }
      if (other.HasRedrawUid) {
        RedrawUid = other.RedrawUid;
      }
      redrawUidList_.Add(other.redrawUidList_);
      if (other.HasRemainSecondTime) {
        RemainSecondTime = other.RemainSecondTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Texas.Protocol.SpinUpBRCType) input.ReadEnum();
            break;
          }
          case 18: {
            if (reward_ == null) {
              Reward = new global::Texas.Protocol.SpinUpDrawLotteryItem();
            }
            input.ReadMessage(Reward);
            break;
          }
          case 26: {
            UserName = input.ReadString();
            break;
          }
          case 32: {
            SecondTime = input.ReadInt32();
            break;
          }
          case 40: {
            NextCostValue = input.ReadInt64();
            break;
          }
          case 48: {
            CostValue = input.ReadInt64();
            break;
          }
          case 56: {
            DrawLotteryOver = input.ReadBool();
            break;
          }
          case 64: {
            RedrawUid = input.ReadInt64();
            break;
          }
          case 74:
          case 72: {
            redrawUidList_.AddEntriesFrom(input, _repeated_redrawUidList_codec);
            break;
          }
          case 80: {
            RemainSecondTime = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Texas.Protocol.SpinUpBRCType) input.ReadEnum();
            break;
          }
          case 18: {
            if (reward_ == null) {
              Reward = new global::Texas.Protocol.SpinUpDrawLotteryItem();
            }
            input.ReadMessage(Reward);
            break;
          }
          case 26: {
            UserName = input.ReadString();
            break;
          }
          case 32: {
            SecondTime = input.ReadInt32();
            break;
          }
          case 40: {
            NextCostValue = input.ReadInt64();
            break;
          }
          case 48: {
            CostValue = input.ReadInt64();
            break;
          }
          case 56: {
            DrawLotteryOver = input.ReadBool();
            break;
          }
          case 64: {
            RedrawUid = input.ReadInt64();
            break;
          }
          case 74:
          case 72: {
            redrawUidList_.AddEntriesFrom(ref input, _repeated_redrawUidList_codec);
            break;
          }
          case 80: {
            RemainSecondTime = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///SpinUp摇奖请求
  /// </summary>
  public sealed partial class SpinUpDrawLotteryREQ : pb::IMessage<SpinUpDrawLotteryREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpinUpDrawLotteryREQ> _parser = new pb::MessageParser<SpinUpDrawLotteryREQ>(() => new SpinUpDrawLotteryREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpinUpDrawLotteryREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinUpDrawLotteryREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinUpDrawLotteryREQ(SpinUpDrawLotteryREQ other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinUpDrawLotteryREQ Clone() {
      return new SpinUpDrawLotteryREQ(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static global::Texas.Protocol.SpinUpREQType TypeDefaultValue = global::Texas.Protocol.SpinUpREQType.RejectRedrawLottery;

    private global::Texas.Protocol.SpinUpREQType type_;
    /// <summary>
    ///类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.SpinUpREQType Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpinUpDrawLotteryREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpinUpDrawLotteryREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpinUpDrawLotteryREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Texas.Protocol.SpinUpREQType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Texas.Protocol.SpinUpREQType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SpinUpDrawLotteryRSP : pb::IMessage<SpinUpDrawLotteryRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpinUpDrawLotteryRSP> _parser = new pb::MessageParser<SpinUpDrawLotteryRSP>(() => new SpinUpDrawLotteryRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpinUpDrawLotteryRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinUpDrawLotteryRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinUpDrawLotteryRSP(SpinUpDrawLotteryRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinUpDrawLotteryRSP Clone() {
      return new SpinUpDrawLotteryRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0success -1error 1金币不足 2房间不存在
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private readonly static global::Texas.Protocol.SpinUpREQType TypeDefaultValue = global::Texas.Protocol.SpinUpREQType.RejectRedrawLottery;

    private global::Texas.Protocol.SpinUpREQType type_;
    /// <summary>
    ///类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.SpinUpREQType Type {
      get { if ((_hasBits0 & 2) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpinUpDrawLotteryRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpinUpDrawLotteryRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpinUpDrawLotteryRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Type = (global::Texas.Protocol.SpinUpREQType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Type = (global::Texas.Protocol.SpinUpREQType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///获取SpinUp摇奖结果请求
  /// </summary>
  public sealed partial class GetSpinUpRewardResultREQ : pb::IMessage<GetSpinUpRewardResultREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetSpinUpRewardResultREQ> _parser = new pb::MessageParser<GetSpinUpRewardResultREQ>(() => new GetSpinUpRewardResultREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetSpinUpRewardResultREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetSpinUpRewardResultREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetSpinUpRewardResultREQ(GetSpinUpRewardResultREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetSpinUpRewardResultREQ Clone() {
      return new GetSpinUpRewardResultREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetSpinUpRewardResultREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetSpinUpRewardResultREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetSpinUpRewardResultREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class GetSpinUpRewardResultRSP : pb::IMessage<GetSpinUpRewardResultRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetSpinUpRewardResultRSP> _parser = new pb::MessageParser<GetSpinUpRewardResultRSP>(() => new GetSpinUpRewardResultRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetSpinUpRewardResultRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetSpinUpRewardResultRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetSpinUpRewardResultRSP(GetSpinUpRewardResultRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      reward_ = other.reward_ != null ? other.reward_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetSpinUpRewardResultRSP Clone() {
      return new GetSpinUpRewardResultRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0success -1error 1reward empty
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "reward" field.</summary>
    public const int RewardFieldNumber = 2;
    private global::Texas.Protocol.SpinUpDrawLotteryItem reward_;
    /// <summary>
    ///奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.SpinUpDrawLotteryItem Reward {
      get { return reward_; }
      set {
        reward_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetSpinUpRewardResultRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetSpinUpRewardResultRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Reward, other.Reward)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (reward_ != null) hash ^= Reward.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (reward_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Reward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (reward_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Reward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (reward_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reward);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetSpinUpRewardResultRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.reward_ != null) {
        if (reward_ == null) {
          Reward = new global::Texas.Protocol.SpinUpDrawLotteryItem();
        }
        Reward.MergeFrom(other.Reward);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (reward_ == null) {
              Reward = new global::Texas.Protocol.SpinUpDrawLotteryItem();
            }
            input.ReadMessage(Reward);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            if (reward_ == null) {
              Reward = new global::Texas.Protocol.SpinUpDrawLotteryItem();
            }
            input.ReadMessage(Reward);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///SpinUp摇奖版本
  /// </summary>
  public sealed partial class SpinUpDrawLotteryVersionBRC : pb::IMessage<SpinUpDrawLotteryVersionBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpinUpDrawLotteryVersionBRC> _parser = new pb::MessageParser<SpinUpDrawLotteryVersionBRC>(() => new SpinUpDrawLotteryVersionBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpinUpDrawLotteryVersionBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinUpDrawLotteryVersionBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinUpDrawLotteryVersionBRC(SpinUpDrawLotteryVersionBRC other) : this() {
      _hasBits0 = other._hasBits0;
      isOldVersion_ = other.isOldVersion_;
      clinetVersion_ = other.clinetVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinUpDrawLotteryVersionBRC Clone() {
      return new SpinUpDrawLotteryVersionBRC(this);
    }

    /// <summary>Field number for the "is_old_version" field.</summary>
    public const int IsOldVersionFieldNumber = 1;
    private readonly static bool IsOldVersionDefaultValue = false;

    private bool isOldVersion_;
    /// <summary>
    ///true旧版本，false新版本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsOldVersion {
      get { if ((_hasBits0 & 1) != 0) { return isOldVersion_; } else { return IsOldVersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isOldVersion_ = value;
      }
    }
    /// <summary>Gets whether the "is_old_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsOldVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_old_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsOldVersion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clinet_version" field.</summary>
    public const int ClinetVersionFieldNumber = 2;
    private readonly static string ClinetVersionDefaultValue = "";

    private string clinetVersion_;
    /// <summary>
    ///版本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClinetVersion {
      get { return clinetVersion_ ?? ClinetVersionDefaultValue; }
      set {
        clinetVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "clinet_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClinetVersion {
      get { return clinetVersion_ != null; }
    }
    /// <summary>Clears the value of the "clinet_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClinetVersion() {
      clinetVersion_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpinUpDrawLotteryVersionBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpinUpDrawLotteryVersionBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsOldVersion != other.IsOldVersion) return false;
      if (ClinetVersion != other.ClinetVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIsOldVersion) hash ^= IsOldVersion.GetHashCode();
      if (HasClinetVersion) hash ^= ClinetVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasIsOldVersion) {
        output.WriteRawTag(8);
        output.WriteBool(IsOldVersion);
      }
      if (HasClinetVersion) {
        output.WriteRawTag(18);
        output.WriteString(ClinetVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasIsOldVersion) {
        output.WriteRawTag(8);
        output.WriteBool(IsOldVersion);
      }
      if (HasClinetVersion) {
        output.WriteRawTag(18);
        output.WriteString(ClinetVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasIsOldVersion) {
        size += 1 + 1;
      }
      if (HasClinetVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClinetVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpinUpDrawLotteryVersionBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasIsOldVersion) {
        IsOldVersion = other.IsOldVersion;
      }
      if (other.HasClinetVersion) {
        ClinetVersion = other.ClinetVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsOldVersion = input.ReadBool();
            break;
          }
          case 18: {
            ClinetVersion = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsOldVersion = input.ReadBool();
            break;
          }
          case 18: {
            ClinetVersion = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SpinUpDrawLotteryInfo : pb::IMessage<SpinUpDrawLotteryInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpinUpDrawLotteryInfo> _parser = new pb::MessageParser<SpinUpDrawLotteryInfo>(() => new SpinUpDrawLotteryInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpinUpDrawLotteryInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinUpDrawLotteryInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinUpDrawLotteryInfo(SpinUpDrawLotteryInfo other) : this() {
      _hasBits0 = other._hasBits0;
      drawLotteryFinish_ = other.drawLotteryFinish_;
      info_ = other.info_ != null ? other.info_.Clone() : null;
      versionInfo_ = other.versionInfo_ != null ? other.versionInfo_.Clone() : null;
      maxRewardRatio_ = other.maxRewardRatio_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpinUpDrawLotteryInfo Clone() {
      return new SpinUpDrawLotteryInfo(this);
    }

    /// <summary>Field number for the "draw_lottery_finish" field.</summary>
    public const int DrawLotteryFinishFieldNumber = 1;
    private readonly static bool DrawLotteryFinishDefaultValue = false;

    private bool drawLotteryFinish_;
    /// <summary>
    ///摇奖是否完成
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DrawLotteryFinish {
      get { if ((_hasBits0 & 1) != 0) { return drawLotteryFinish_; } else { return DrawLotteryFinishDefaultValue; } }
      set {
        _hasBits0 |= 1;
        drawLotteryFinish_ = value;
      }
    }
    /// <summary>Gets whether the "draw_lottery_finish" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDrawLotteryFinish {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "draw_lottery_finish" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDrawLotteryFinish() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 2;
    private global::Texas.Protocol.SpinUpBRC info_;
    /// <summary>
    ///SpinUp摇奖信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.SpinUpBRC Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    /// <summary>Field number for the "version_info" field.</summary>
    public const int VersionInfoFieldNumber = 3;
    private global::Texas.Protocol.SpinUpDrawLotteryVersionBRC versionInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.SpinUpDrawLotteryVersionBRC VersionInfo {
      get { return versionInfo_; }
      set {
        versionInfo_ = value;
      }
    }

    /// <summary>Field number for the "max_reward_ratio" field.</summary>
    public const int MaxRewardRatioFieldNumber = 4;
    private readonly static int MaxRewardRatioDefaultValue = 0;

    private int maxRewardRatio_;
    /// <summary>
    ///最大奖励倍数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxRewardRatio {
      get { if ((_hasBits0 & 2) != 0) { return maxRewardRatio_; } else { return MaxRewardRatioDefaultValue; } }
      set {
        _hasBits0 |= 2;
        maxRewardRatio_ = value;
      }
    }
    /// <summary>Gets whether the "max_reward_ratio" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxRewardRatio {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "max_reward_ratio" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxRewardRatio() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpinUpDrawLotteryInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpinUpDrawLotteryInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DrawLotteryFinish != other.DrawLotteryFinish) return false;
      if (!object.Equals(Info, other.Info)) return false;
      if (!object.Equals(VersionInfo, other.VersionInfo)) return false;
      if (MaxRewardRatio != other.MaxRewardRatio) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDrawLotteryFinish) hash ^= DrawLotteryFinish.GetHashCode();
      if (info_ != null) hash ^= Info.GetHashCode();
      if (versionInfo_ != null) hash ^= VersionInfo.GetHashCode();
      if (HasMaxRewardRatio) hash ^= MaxRewardRatio.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDrawLotteryFinish) {
        output.WriteRawTag(8);
        output.WriteBool(DrawLotteryFinish);
      }
      if (info_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Info);
      }
      if (versionInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(VersionInfo);
      }
      if (HasMaxRewardRatio) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxRewardRatio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDrawLotteryFinish) {
        output.WriteRawTag(8);
        output.WriteBool(DrawLotteryFinish);
      }
      if (info_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Info);
      }
      if (versionInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(VersionInfo);
      }
      if (HasMaxRewardRatio) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxRewardRatio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasDrawLotteryFinish) {
        size += 1 + 1;
      }
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (versionInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VersionInfo);
      }
      if (HasMaxRewardRatio) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxRewardRatio);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpinUpDrawLotteryInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasDrawLotteryFinish) {
        DrawLotteryFinish = other.DrawLotteryFinish;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Texas.Protocol.SpinUpBRC();
        }
        Info.MergeFrom(other.Info);
      }
      if (other.versionInfo_ != null) {
        if (versionInfo_ == null) {
          VersionInfo = new global::Texas.Protocol.SpinUpDrawLotteryVersionBRC();
        }
        VersionInfo.MergeFrom(other.VersionInfo);
      }
      if (other.HasMaxRewardRatio) {
        MaxRewardRatio = other.MaxRewardRatio;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DrawLotteryFinish = input.ReadBool();
            break;
          }
          case 18: {
            if (info_ == null) {
              Info = new global::Texas.Protocol.SpinUpBRC();
            }
            input.ReadMessage(Info);
            break;
          }
          case 26: {
            if (versionInfo_ == null) {
              VersionInfo = new global::Texas.Protocol.SpinUpDrawLotteryVersionBRC();
            }
            input.ReadMessage(VersionInfo);
            break;
          }
          case 32: {
            MaxRewardRatio = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DrawLotteryFinish = input.ReadBool();
            break;
          }
          case 18: {
            if (info_ == null) {
              Info = new global::Texas.Protocol.SpinUpBRC();
            }
            input.ReadMessage(Info);
            break;
          }
          case 26: {
            if (versionInfo_ == null) {
              VersionInfo = new global::Texas.Protocol.SpinUpDrawLotteryVersionBRC();
            }
            input.ReadMessage(VersionInfo);
            break;
          }
          case 32: {
            MaxRewardRatio = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HandOptSubInfo : pb::IMessage<HandOptSubInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HandOptSubInfo> _parser = new pb::MessageParser<HandOptSubInfo>(() => new HandOptSubInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HandOptSubInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HandOptSubInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HandOptSubInfo(HandOptSubInfo other) : this() {
      _hasBits0 = other._hasBits0;
      timesBb_ = other.timesBb_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HandOptSubInfo Clone() {
      return new HandOptSubInfo(this);
    }

    /// <summary>Field number for the "times_bb" field.</summary>
    public const int TimesBbFieldNumber = 1;
    private readonly static int TimesBbDefaultValue = 0;

    private int timesBb_;
    /// <summary>
    ///bb倍数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TimesBb {
      get { if ((_hasBits0 & 1) != 0) { return timesBb_; } else { return TimesBbDefaultValue; } }
      set {
        _hasBits0 |= 1;
        timesBb_ = value;
      }
    }
    /// <summary>Gets whether the "times_bb" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimesBb {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "times_bb" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimesBb() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private readonly static long ValueDefaultValue = 0L;

    private long value_;
    /// <summary>
    ///金额
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Value {
      get { if ((_hasBits0 & 2) != 0) { return value_; } else { return ValueDefaultValue; } }
      set {
        _hasBits0 |= 2;
        value_ = value;
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasValue {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearValue() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HandOptSubInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HandOptSubInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TimesBb != other.TimesBb) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTimesBb) hash ^= TimesBb.GetHashCode();
      if (HasValue) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTimesBb) {
        output.WriteRawTag(8);
        output.WriteInt32(TimesBb);
      }
      if (HasValue) {
        output.WriteRawTag(16);
        output.WriteInt64(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTimesBb) {
        output.WriteRawTag(8);
        output.WriteInt32(TimesBb);
      }
      if (HasValue) {
        output.WriteRawTag(16);
        output.WriteInt64(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTimesBb) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimesBb);
      }
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HandOptSubInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasTimesBb) {
        TimesBb = other.TimesBb;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TimesBb = input.ReadInt32();
            break;
          }
          case 16: {
            Value = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TimesBb = input.ReadInt32();
            break;
          }
          case 16: {
            Value = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///猜手牌请求
  /// </summary>
  public sealed partial class GuessHandREQ : pb::IMessage<GuessHandREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuessHandREQ> _parser = new pb::MessageParser<GuessHandREQ>(() => new GuessHandREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GuessHandREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuessHandREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuessHandREQ(GuessHandREQ other) : this() {
      _hasBits0 = other._hasBits0;
      reqType_ = other.reqType_;
      optType_ = other.optType_;
      subInfo_ = other.subInfo_ != null ? other.subInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuessHandREQ Clone() {
      return new GuessHandREQ(this);
    }

    /// <summary>Field number for the "req_type" field.</summary>
    public const int ReqTypeFieldNumber = 1;
    private readonly static global::Texas.Protocol.GuessHandREQType ReqTypeDefaultValue = global::Texas.Protocol.GuessHandREQType.Getopt;

    private global::Texas.Protocol.GuessHandREQType reqType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.GuessHandREQType ReqType {
      get { if ((_hasBits0 & 1) != 0) { return reqType_; } else { return ReqTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        reqType_ = value;
      }
    }
    /// <summary>Gets whether the "req_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReqType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "req_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReqType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "opt_type" field.</summary>
    public const int OptTypeFieldNumber = 2;
    private readonly static global::Texas.Protocol.GuessHandOptType OptTypeDefaultValue = global::Texas.Protocol.GuessHandOptType.None;

    private global::Texas.Protocol.GuessHandOptType optType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.GuessHandOptType OptType {
      get { if ((_hasBits0 & 2) != 0) { return optType_; } else { return OptTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        optType_ = value;
      }
    }
    /// <summary>Gets whether the "opt_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOptType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "opt_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOptType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "sub_info" field.</summary>
    public const int SubInfoFieldNumber = 3;
    private global::Texas.Protocol.HandOptSubInfo subInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.HandOptSubInfo SubInfo {
      get { return subInfo_; }
      set {
        subInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GuessHandREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GuessHandREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReqType != other.ReqType) return false;
      if (OptType != other.OptType) return false;
      if (!object.Equals(SubInfo, other.SubInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasReqType) hash ^= ReqType.GetHashCode();
      if (HasOptType) hash ^= OptType.GetHashCode();
      if (subInfo_ != null) hash ^= SubInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasReqType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ReqType);
      }
      if (HasOptType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) OptType);
      }
      if (subInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SubInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasReqType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ReqType);
      }
      if (HasOptType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) OptType);
      }
      if (subInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SubInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasReqType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReqType);
      }
      if (HasOptType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OptType);
      }
      if (subInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GuessHandREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasReqType) {
        ReqType = other.ReqType;
      }
      if (other.HasOptType) {
        OptType = other.OptType;
      }
      if (other.subInfo_ != null) {
        if (subInfo_ == null) {
          SubInfo = new global::Texas.Protocol.HandOptSubInfo();
        }
        SubInfo.MergeFrom(other.SubInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReqType = (global::Texas.Protocol.GuessHandREQType) input.ReadEnum();
            break;
          }
          case 16: {
            OptType = (global::Texas.Protocol.GuessHandOptType) input.ReadEnum();
            break;
          }
          case 26: {
            if (subInfo_ == null) {
              SubInfo = new global::Texas.Protocol.HandOptSubInfo();
            }
            input.ReadMessage(SubInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ReqType = (global::Texas.Protocol.GuessHandREQType) input.ReadEnum();
            break;
          }
          case 16: {
            OptType = (global::Texas.Protocol.GuessHandOptType) input.ReadEnum();
            break;
          }
          case 26: {
            if (subInfo_ == null) {
              SubInfo = new global::Texas.Protocol.HandOptSubInfo();
            }
            input.ReadMessage(SubInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///随机选项信息
  /// </summary>
  public sealed partial class RandHandOptInfo : pb::IMessage<RandHandOptInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RandHandOptInfo> _parser = new pb::MessageParser<RandHandOptInfo>(() => new RandHandOptInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RandHandOptInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RandHandOptInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RandHandOptInfo(RandHandOptInfo other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      subInfos_ = other.subInfos_.Clone();
      timesStr_ = other.timesStr_;
      info_ = other.info_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RandHandOptInfo Clone() {
      return new RandHandOptInfo(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static global::Texas.Protocol.GuessHandOptType TypeDefaultValue = global::Texas.Protocol.GuessHandOptType.None;

    private global::Texas.Protocol.GuessHandOptType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.GuessHandOptType Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "sub_infos" field.</summary>
    public const int SubInfosFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Texas.Protocol.HandOptSubInfo> _repeated_subInfos_codec
        = pb::FieldCodec.ForMessage(18, global::Texas.Protocol.HandOptSubInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.HandOptSubInfo> subInfos_ = new pbc::RepeatedField<global::Texas.Protocol.HandOptSubInfo>();
    /// <summary>
    ///下注金额选项
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.HandOptSubInfo> SubInfos {
      get { return subInfos_; }
    }

    /// <summary>Field number for the "times_str" field.</summary>
    public const int TimesStrFieldNumber = 3;
    private readonly static string TimesStrDefaultValue = "";

    private string timesStr_;
    /// <summary>
    ///倍数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TimesStr {
      get { return timesStr_ ?? TimesStrDefaultValue; }
      set {
        timesStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "times_str" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimesStr {
      get { return timesStr_ != null; }
    }
    /// <summary>Clears the value of the "times_str" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimesStr() {
      timesStr_ = null;
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 4;
    private readonly static string InfoDefaultValue = "";

    private string info_;
    /// <summary>
    ///下注信息提示栏
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Info {
      get { return info_ ?? InfoDefaultValue; }
      set {
        info_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "info" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInfo {
      get { return info_ != null; }
    }
    /// <summary>Clears the value of the "info" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInfo() {
      info_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RandHandOptInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RandHandOptInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if(!subInfos_.Equals(other.subInfos_)) return false;
      if (TimesStr != other.TimesStr) return false;
      if (Info != other.Info) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      hash ^= subInfos_.GetHashCode();
      if (HasTimesStr) hash ^= TimesStr.GetHashCode();
      if (HasInfo) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      subInfos_.WriteTo(output, _repeated_subInfos_codec);
      if (HasTimesStr) {
        output.WriteRawTag(26);
        output.WriteString(TimesStr);
      }
      if (HasInfo) {
        output.WriteRawTag(34);
        output.WriteString(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      subInfos_.WriteTo(ref output, _repeated_subInfos_codec);
      if (HasTimesStr) {
        output.WriteRawTag(26);
        output.WriteString(TimesStr);
      }
      if (HasInfo) {
        output.WriteRawTag(34);
        output.WriteString(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += subInfos_.CalculateSize(_repeated_subInfos_codec);
      if (HasTimesStr) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimesStr);
      }
      if (HasInfo) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RandHandOptInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      subInfos_.Add(other.subInfos_);
      if (other.HasTimesStr) {
        TimesStr = other.TimesStr;
      }
      if (other.HasInfo) {
        Info = other.Info;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Texas.Protocol.GuessHandOptType) input.ReadEnum();
            break;
          }
          case 18: {
            subInfos_.AddEntriesFrom(input, _repeated_subInfos_codec);
            break;
          }
          case 26: {
            TimesStr = input.ReadString();
            break;
          }
          case 34: {
            Info = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Texas.Protocol.GuessHandOptType) input.ReadEnum();
            break;
          }
          case 18: {
            subInfos_.AddEntriesFrom(ref input, _repeated_subInfos_codec);
            break;
          }
          case 26: {
            TimesStr = input.ReadString();
            break;
          }
          case 34: {
            Info = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///猜手牌返回
  /// </summary>
  public sealed partial class GuessHandRSP : pb::IMessage<GuessHandRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuessHandRSP> _parser = new pb::MessageParser<GuessHandRSP>(() => new GuessHandRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GuessHandRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuessHandRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuessHandRSP(GuessHandRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      reqType_ = other.reqType_;
      optType_ = other.optType_;
      optInfo_ = other.optInfo_ != null ? other.optInfo_.Clone() : null;
      subInfo_ = other.subInfo_ != null ? other.subInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuessHandRSP Clone() {
      return new GuessHandRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static global::Texas.Protocol.GuessHandRETCode CodeDefaultValue = global::Texas.Protocol.GuessHandRETCode.Suuccess;

    private global::Texas.Protocol.GuessHandRETCode code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.GuessHandRETCode Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "req_type" field.</summary>
    public const int ReqTypeFieldNumber = 2;
    private readonly static global::Texas.Protocol.GuessHandREQType ReqTypeDefaultValue = global::Texas.Protocol.GuessHandREQType.Getopt;

    private global::Texas.Protocol.GuessHandREQType reqType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.GuessHandREQType ReqType {
      get { if ((_hasBits0 & 2) != 0) { return reqType_; } else { return ReqTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        reqType_ = value;
      }
    }
    /// <summary>Gets whether the "req_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReqType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "req_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReqType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "opt_type" field.</summary>
    public const int OptTypeFieldNumber = 3;
    private readonly static global::Texas.Protocol.GuessHandOptType OptTypeDefaultValue = global::Texas.Protocol.GuessHandOptType.None;

    private global::Texas.Protocol.GuessHandOptType optType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.GuessHandOptType OptType {
      get { if ((_hasBits0 & 4) != 0) { return optType_; } else { return OptTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        optType_ = value;
      }
    }
    /// <summary>Gets whether the "opt_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOptType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "opt_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOptType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "opt_info" field.</summary>
    public const int OptInfoFieldNumber = 4;
    private global::Texas.Protocol.RandHandOptInfo optInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RandHandOptInfo OptInfo {
      get { return optInfo_; }
      set {
        optInfo_ = value;
      }
    }

    /// <summary>Field number for the "sub_info" field.</summary>
    public const int SubInfoFieldNumber = 5;
    private global::Texas.Protocol.HandOptSubInfo subInfo_;
    /// <summary>
    ///下注信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.HandOptSubInfo SubInfo {
      get { return subInfo_; }
      set {
        subInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GuessHandRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GuessHandRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (ReqType != other.ReqType) return false;
      if (OptType != other.OptType) return false;
      if (!object.Equals(OptInfo, other.OptInfo)) return false;
      if (!object.Equals(SubInfo, other.SubInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasReqType) hash ^= ReqType.GetHashCode();
      if (HasOptType) hash ^= OptType.GetHashCode();
      if (optInfo_ != null) hash ^= OptInfo.GetHashCode();
      if (subInfo_ != null) hash ^= SubInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (HasReqType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ReqType);
      }
      if (HasOptType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) OptType);
      }
      if (optInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OptInfo);
      }
      if (subInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SubInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (HasReqType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ReqType);
      }
      if (HasOptType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) OptType);
      }
      if (optInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OptInfo);
      }
      if (subInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SubInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (HasReqType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReqType);
      }
      if (HasOptType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OptType);
      }
      if (optInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OptInfo);
      }
      if (subInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GuessHandRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasReqType) {
        ReqType = other.ReqType;
      }
      if (other.HasOptType) {
        OptType = other.OptType;
      }
      if (other.optInfo_ != null) {
        if (optInfo_ == null) {
          OptInfo = new global::Texas.Protocol.RandHandOptInfo();
        }
        OptInfo.MergeFrom(other.OptInfo);
      }
      if (other.subInfo_ != null) {
        if (subInfo_ == null) {
          SubInfo = new global::Texas.Protocol.HandOptSubInfo();
        }
        SubInfo.MergeFrom(other.SubInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Texas.Protocol.GuessHandRETCode) input.ReadEnum();
            break;
          }
          case 16: {
            ReqType = (global::Texas.Protocol.GuessHandREQType) input.ReadEnum();
            break;
          }
          case 24: {
            OptType = (global::Texas.Protocol.GuessHandOptType) input.ReadEnum();
            break;
          }
          case 34: {
            if (optInfo_ == null) {
              OptInfo = new global::Texas.Protocol.RandHandOptInfo();
            }
            input.ReadMessage(OptInfo);
            break;
          }
          case 42: {
            if (subInfo_ == null) {
              SubInfo = new global::Texas.Protocol.HandOptSubInfo();
            }
            input.ReadMessage(SubInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Texas.Protocol.GuessHandRETCode) input.ReadEnum();
            break;
          }
          case 16: {
            ReqType = (global::Texas.Protocol.GuessHandREQType) input.ReadEnum();
            break;
          }
          case 24: {
            OptType = (global::Texas.Protocol.GuessHandOptType) input.ReadEnum();
            break;
          }
          case 34: {
            if (optInfo_ == null) {
              OptInfo = new global::Texas.Protocol.RandHandOptInfo();
            }
            input.ReadMessage(OptInfo);
            break;
          }
          case 42: {
            if (subInfo_ == null) {
              SubInfo = new global::Texas.Protocol.HandOptSubInfo();
            }
            input.ReadMessage(SubInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///猜手牌下注结果
  /// </summary>
  public sealed partial class GuessHandResultRSP : pb::IMessage<GuessHandResultRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuessHandResultRSP> _parser = new pb::MessageParser<GuessHandResultRSP>(() => new GuessHandResultRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GuessHandResultRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuessHandResultRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuessHandResultRSP(GuessHandResultRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      optType_ = other.optType_;
      subInfo_ = other.subInfo_ != null ? other.subInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuessHandResultRSP Clone() {
      return new GuessHandResultRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0猜中 1没有猜中
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "opt_type" field.</summary>
    public const int OptTypeFieldNumber = 2;
    private readonly static global::Texas.Protocol.GuessHandOptType OptTypeDefaultValue = global::Texas.Protocol.GuessHandOptType.None;

    private global::Texas.Protocol.GuessHandOptType optType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.GuessHandOptType OptType {
      get { if ((_hasBits0 & 2) != 0) { return optType_; } else { return OptTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        optType_ = value;
      }
    }
    /// <summary>Gets whether the "opt_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOptType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "opt_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOptType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "sub_info" field.</summary>
    public const int SubInfoFieldNumber = 3;
    private global::Texas.Protocol.HandOptSubInfo subInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.HandOptSubInfo SubInfo {
      get { return subInfo_; }
      set {
        subInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GuessHandResultRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GuessHandResultRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (OptType != other.OptType) return false;
      if (!object.Equals(SubInfo, other.SubInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasOptType) hash ^= OptType.GetHashCode();
      if (subInfo_ != null) hash ^= SubInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasOptType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) OptType);
      }
      if (subInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SubInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasOptType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) OptType);
      }
      if (subInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SubInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasOptType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OptType);
      }
      if (subInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GuessHandResultRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasOptType) {
        OptType = other.OptType;
      }
      if (other.subInfo_ != null) {
        if (subInfo_ == null) {
          SubInfo = new global::Texas.Protocol.HandOptSubInfo();
        }
        SubInfo.MergeFrom(other.SubInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            OptType = (global::Texas.Protocol.GuessHandOptType) input.ReadEnum();
            break;
          }
          case 26: {
            if (subInfo_ == null) {
              SubInfo = new global::Texas.Protocol.HandOptSubInfo();
            }
            input.ReadMessage(SubInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            OptType = (global::Texas.Protocol.GuessHandOptType) input.ReadEnum();
            break;
          }
          case 26: {
            if (subInfo_ == null) {
              SubInfo = new global::Texas.Protocol.HandOptSubInfo();
            }
            input.ReadMessage(SubInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///猜手牌信息
  /// </summary>
  public sealed partial class GuessHandSubInfo : pb::IMessage<GuessHandSubInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuessHandSubInfo> _parser = new pb::MessageParser<GuessHandSubInfo>(() => new GuessHandSubInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GuessHandSubInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuessHandSubInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuessHandSubInfo(GuessHandSubInfo other) : this() {
      _hasBits0 = other._hasBits0;
      optType_ = other.optType_;
      isGuess_ = other.isGuess_;
      subInfo_ = other.subInfo_ != null ? other.subInfo_.Clone() : null;
      randSubInfos_ = other.randSubInfos_.Clone();
      timesStr_ = other.timesStr_;
      info_ = other.info_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuessHandSubInfo Clone() {
      return new GuessHandSubInfo(this);
    }

    /// <summary>Field number for the "opt_type" field.</summary>
    public const int OptTypeFieldNumber = 1;
    private readonly static global::Texas.Protocol.GuessHandOptType OptTypeDefaultValue = global::Texas.Protocol.GuessHandOptType.None;

    private global::Texas.Protocol.GuessHandOptType optType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.GuessHandOptType OptType {
      get { if ((_hasBits0 & 1) != 0) { return optType_; } else { return OptTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        optType_ = value;
      }
    }
    /// <summary>Gets whether the "opt_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOptType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "opt_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOptType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "is_guess" field.</summary>
    public const int IsGuessFieldNumber = 2;
    private readonly static bool IsGuessDefaultValue = false;

    private bool isGuess_;
    /// <summary>
    ///true已下注，false没有下注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsGuess {
      get { if ((_hasBits0 & 2) != 0) { return isGuess_; } else { return IsGuessDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isGuess_ = value;
      }
    }
    /// <summary>Gets whether the "is_guess" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsGuess {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_guess" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsGuess() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "sub_info" field.</summary>
    public const int SubInfoFieldNumber = 3;
    private global::Texas.Protocol.HandOptSubInfo subInfo_;
    /// <summary>
    ///下注信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.HandOptSubInfo SubInfo {
      get { return subInfo_; }
      set {
        subInfo_ = value;
      }
    }

    /// <summary>Field number for the "rand_sub_infos" field.</summary>
    public const int RandSubInfosFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Texas.Protocol.HandOptSubInfo> _repeated_randSubInfos_codec
        = pb::FieldCodec.ForMessage(34, global::Texas.Protocol.HandOptSubInfo.Parser);
    private readonly pbc::RepeatedField<global::Texas.Protocol.HandOptSubInfo> randSubInfos_ = new pbc::RepeatedField<global::Texas.Protocol.HandOptSubInfo>();
    /// <summary>
    ///下注金额选项
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Texas.Protocol.HandOptSubInfo> RandSubInfos {
      get { return randSubInfos_; }
    }

    /// <summary>Field number for the "times_str" field.</summary>
    public const int TimesStrFieldNumber = 5;
    private readonly static string TimesStrDefaultValue = "";

    private string timesStr_;
    /// <summary>
    ///倍数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TimesStr {
      get { return timesStr_ ?? TimesStrDefaultValue; }
      set {
        timesStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "times_str" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimesStr {
      get { return timesStr_ != null; }
    }
    /// <summary>Clears the value of the "times_str" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimesStr() {
      timesStr_ = null;
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 6;
    private readonly static string InfoDefaultValue = "";

    private string info_;
    /// <summary>
    ///下注信息提示栏
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Info {
      get { return info_ ?? InfoDefaultValue; }
      set {
        info_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "info" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInfo {
      get { return info_ != null; }
    }
    /// <summary>Clears the value of the "info" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInfo() {
      info_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GuessHandSubInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GuessHandSubInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OptType != other.OptType) return false;
      if (IsGuess != other.IsGuess) return false;
      if (!object.Equals(SubInfo, other.SubInfo)) return false;
      if(!randSubInfos_.Equals(other.randSubInfos_)) return false;
      if (TimesStr != other.TimesStr) return false;
      if (Info != other.Info) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOptType) hash ^= OptType.GetHashCode();
      if (HasIsGuess) hash ^= IsGuess.GetHashCode();
      if (subInfo_ != null) hash ^= SubInfo.GetHashCode();
      hash ^= randSubInfos_.GetHashCode();
      if (HasTimesStr) hash ^= TimesStr.GetHashCode();
      if (HasInfo) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOptType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OptType);
      }
      if (HasIsGuess) {
        output.WriteRawTag(16);
        output.WriteBool(IsGuess);
      }
      if (subInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SubInfo);
      }
      randSubInfos_.WriteTo(output, _repeated_randSubInfos_codec);
      if (HasTimesStr) {
        output.WriteRawTag(42);
        output.WriteString(TimesStr);
      }
      if (HasInfo) {
        output.WriteRawTag(50);
        output.WriteString(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOptType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OptType);
      }
      if (HasIsGuess) {
        output.WriteRawTag(16);
        output.WriteBool(IsGuess);
      }
      if (subInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SubInfo);
      }
      randSubInfos_.WriteTo(ref output, _repeated_randSubInfos_codec);
      if (HasTimesStr) {
        output.WriteRawTag(42);
        output.WriteString(TimesStr);
      }
      if (HasInfo) {
        output.WriteRawTag(50);
        output.WriteString(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasOptType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OptType);
      }
      if (HasIsGuess) {
        size += 1 + 1;
      }
      if (subInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubInfo);
      }
      size += randSubInfos_.CalculateSize(_repeated_randSubInfos_codec);
      if (HasTimesStr) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimesStr);
      }
      if (HasInfo) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GuessHandSubInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasOptType) {
        OptType = other.OptType;
      }
      if (other.HasIsGuess) {
        IsGuess = other.IsGuess;
      }
      if (other.subInfo_ != null) {
        if (subInfo_ == null) {
          SubInfo = new global::Texas.Protocol.HandOptSubInfo();
        }
        SubInfo.MergeFrom(other.SubInfo);
      }
      randSubInfos_.Add(other.randSubInfos_);
      if (other.HasTimesStr) {
        TimesStr = other.TimesStr;
      }
      if (other.HasInfo) {
        Info = other.Info;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OptType = (global::Texas.Protocol.GuessHandOptType) input.ReadEnum();
            break;
          }
          case 16: {
            IsGuess = input.ReadBool();
            break;
          }
          case 26: {
            if (subInfo_ == null) {
              SubInfo = new global::Texas.Protocol.HandOptSubInfo();
            }
            input.ReadMessage(SubInfo);
            break;
          }
          case 34: {
            randSubInfos_.AddEntriesFrom(input, _repeated_randSubInfos_codec);
            break;
          }
          case 42: {
            TimesStr = input.ReadString();
            break;
          }
          case 50: {
            Info = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            OptType = (global::Texas.Protocol.GuessHandOptType) input.ReadEnum();
            break;
          }
          case 16: {
            IsGuess = input.ReadBool();
            break;
          }
          case 26: {
            if (subInfo_ == null) {
              SubInfo = new global::Texas.Protocol.HandOptSubInfo();
            }
            input.ReadMessage(SubInfo);
            break;
          }
          case 34: {
            randSubInfos_.AddEntriesFrom(ref input, _repeated_randSubInfos_codec);
            break;
          }
          case 42: {
            TimesStr = input.ReadString();
            break;
          }
          case 50: {
            Info = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///等待弹窗信息
  /// </summary>
  public sealed partial class WaitingGameStartInfo : pb::IMessage<WaitingGameStartInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WaitingGameStartInfo> _parser = new pb::MessageParser<WaitingGameStartInfo>(() => new WaitingGameStartInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WaitingGameStartInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WaitingGameStartInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WaitingGameStartInfo(WaitingGameStartInfo other) : this() {
      _hasBits0 = other._hasBits0;
      roomType_ = other.roomType_;
      seatNum_ = other.seatNum_;
      waitNum_ = other.waitNum_;
      aveMatchSecond_ = other.aveMatchSecond_;
      waitSecond_ = other.waitSecond_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WaitingGameStartInfo Clone() {
      return new WaitingGameStartInfo(this);
    }

    /// <summary>Field number for the "room_type" field.</summary>
    public const int RoomTypeFieldNumber = 1;
    private readonly static global::Texas.Protocol.RoomType RoomTypeDefaultValue = global::Texas.Protocol.RoomType.TestRoom;

    private global::Texas.Protocol.RoomType roomType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomType RoomType {
      get { if ((_hasBits0 & 1) != 0) { return roomType_; } else { return RoomTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        roomType_ = value;
      }
    }
    /// <summary>Gets whether the "room_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "room_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "seat_num" field.</summary>
    public const int SeatNumFieldNumber = 2;
    private readonly static int SeatNumDefaultValue = 0;

    private int seatNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SeatNum {
      get { if ((_hasBits0 & 2) != 0) { return seatNum_; } else { return SeatNumDefaultValue; } }
      set {
        _hasBits0 |= 2;
        seatNum_ = value;
      }
    }
    /// <summary>Gets whether the "seat_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatNum {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "seat_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatNum() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "wait_num" field.</summary>
    public const int WaitNumFieldNumber = 3;
    private readonly static int WaitNumDefaultValue = 0;

    private int waitNum_;
    /// <summary>
    ///等待人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WaitNum {
      get { if ((_hasBits0 & 4) != 0) { return waitNum_; } else { return WaitNumDefaultValue; } }
      set {
        _hasBits0 |= 4;
        waitNum_ = value;
      }
    }
    /// <summary>Gets whether the "wait_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWaitNum {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "wait_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWaitNum() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "ave_match_second" field.</summary>
    public const int AveMatchSecondFieldNumber = 4;
    private readonly static int AveMatchSecondDefaultValue = 0;

    private int aveMatchSecond_;
    /// <summary>
    ///平均匹配时长（秒）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AveMatchSecond {
      get { if ((_hasBits0 & 8) != 0) { return aveMatchSecond_; } else { return AveMatchSecondDefaultValue; } }
      set {
        _hasBits0 |= 8;
        aveMatchSecond_ = value;
      }
    }
    /// <summary>Gets whether the "ave_match_second" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAveMatchSecond {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "ave_match_second" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAveMatchSecond() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "wait_second" field.</summary>
    public const int WaitSecondFieldNumber = 5;
    private readonly static int WaitSecondDefaultValue = 0;

    private int waitSecond_;
    /// <summary>
    ///等待时间长（秒）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WaitSecond {
      get { if ((_hasBits0 & 16) != 0) { return waitSecond_; } else { return WaitSecondDefaultValue; } }
      set {
        _hasBits0 |= 16;
        waitSecond_ = value;
      }
    }
    /// <summary>Gets whether the "wait_second" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWaitSecond {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "wait_second" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWaitSecond() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WaitingGameStartInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WaitingGameStartInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomType != other.RoomType) return false;
      if (SeatNum != other.SeatNum) return false;
      if (WaitNum != other.WaitNum) return false;
      if (AveMatchSecond != other.AveMatchSecond) return false;
      if (WaitSecond != other.WaitSecond) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRoomType) hash ^= RoomType.GetHashCode();
      if (HasSeatNum) hash ^= SeatNum.GetHashCode();
      if (HasWaitNum) hash ^= WaitNum.GetHashCode();
      if (HasAveMatchSecond) hash ^= AveMatchSecond.GetHashCode();
      if (HasWaitSecond) hash ^= WaitSecond.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRoomType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RoomType);
      }
      if (HasSeatNum) {
        output.WriteRawTag(16);
        output.WriteInt32(SeatNum);
      }
      if (HasWaitNum) {
        output.WriteRawTag(24);
        output.WriteInt32(WaitNum);
      }
      if (HasAveMatchSecond) {
        output.WriteRawTag(32);
        output.WriteInt32(AveMatchSecond);
      }
      if (HasWaitSecond) {
        output.WriteRawTag(40);
        output.WriteInt32(WaitSecond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRoomType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RoomType);
      }
      if (HasSeatNum) {
        output.WriteRawTag(16);
        output.WriteInt32(SeatNum);
      }
      if (HasWaitNum) {
        output.WriteRawTag(24);
        output.WriteInt32(WaitNum);
      }
      if (HasAveMatchSecond) {
        output.WriteRawTag(32);
        output.WriteInt32(AveMatchSecond);
      }
      if (HasWaitSecond) {
        output.WriteRawTag(40);
        output.WriteInt32(WaitSecond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRoomType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomType);
      }
      if (HasSeatNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SeatNum);
      }
      if (HasWaitNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WaitNum);
      }
      if (HasAveMatchSecond) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AveMatchSecond);
      }
      if (HasWaitSecond) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WaitSecond);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WaitingGameStartInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasRoomType) {
        RoomType = other.RoomType;
      }
      if (other.HasSeatNum) {
        SeatNum = other.SeatNum;
      }
      if (other.HasWaitNum) {
        WaitNum = other.WaitNum;
      }
      if (other.HasAveMatchSecond) {
        AveMatchSecond = other.AveMatchSecond;
      }
      if (other.HasWaitSecond) {
        WaitSecond = other.WaitSecond;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 16: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 24: {
            WaitNum = input.ReadInt32();
            break;
          }
          case 32: {
            AveMatchSecond = input.ReadInt32();
            break;
          }
          case 40: {
            WaitSecond = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 16: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 24: {
            WaitNum = input.ReadInt32();
            break;
          }
          case 32: {
            AveMatchSecond = input.ReadInt32();
            break;
          }
          case 40: {
            WaitSecond = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///CallGame
  /// </summary>
  public sealed partial class CallGameREQ : pb::IMessage<CallGameREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CallGameREQ> _parser = new pb::MessageParser<CallGameREQ>(() => new CallGameREQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CallGameREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CallGameREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CallGameREQ(CallGameREQ other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CallGameREQ Clone() {
      return new CallGameREQ(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CallGameREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CallGameREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CallGameREQ other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class CallGameRSP : pb::IMessage<CallGameRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CallGameRSP> _parser = new pb::MessageParser<CallGameRSP>(() => new CallGameRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CallGameRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CallGameRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CallGameRSP(CallGameRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      callgameSecond_ = other.callgameSecond_;
      tryAgainSecond_ = other.tryAgainSecond_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CallGameRSP Clone() {
      return new CallGameRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static global::Texas.Protocol.CallGameRetCode CodeDefaultValue = global::Texas.Protocol.CallGameRetCode.Suuccess;

    private global::Texas.Protocol.CallGameRetCode code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.CallGameRetCode Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "callgame_second" field.</summary>
    public const int CallgameSecondFieldNumber = 2;
    private readonly static int CallgameSecondDefaultValue = 0;

    private int callgameSecond_;
    /// <summary>
    ///callgame倒计时时长（秒）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CallgameSecond {
      get { if ((_hasBits0 & 2) != 0) { return callgameSecond_; } else { return CallgameSecondDefaultValue; } }
      set {
        _hasBits0 |= 2;
        callgameSecond_ = value;
      }
    }
    /// <summary>Gets whether the "callgame_second" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCallgameSecond {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "callgame_second" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCallgameSecond() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "try_again_second" field.</summary>
    public const int TryAgainSecondFieldNumber = 3;
    private readonly static int TryAgainSecondDefaultValue = 0;

    private int tryAgainSecond_;
    /// <summary>
    ///再次尝试时间（秒）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TryAgainSecond {
      get { if ((_hasBits0 & 4) != 0) { return tryAgainSecond_; } else { return TryAgainSecondDefaultValue; } }
      set {
        _hasBits0 |= 4;
        tryAgainSecond_ = value;
      }
    }
    /// <summary>Gets whether the "try_again_second" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTryAgainSecond {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "try_again_second" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTryAgainSecond() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CallGameRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CallGameRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (CallgameSecond != other.CallgameSecond) return false;
      if (TryAgainSecond != other.TryAgainSecond) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasCallgameSecond) hash ^= CallgameSecond.GetHashCode();
      if (HasTryAgainSecond) hash ^= TryAgainSecond.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (HasCallgameSecond) {
        output.WriteRawTag(16);
        output.WriteInt32(CallgameSecond);
      }
      if (HasTryAgainSecond) {
        output.WriteRawTag(24);
        output.WriteInt32(TryAgainSecond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (HasCallgameSecond) {
        output.WriteRawTag(16);
        output.WriteInt32(CallgameSecond);
      }
      if (HasTryAgainSecond) {
        output.WriteRawTag(24);
        output.WriteInt32(TryAgainSecond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (HasCallgameSecond) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CallgameSecond);
      }
      if (HasTryAgainSecond) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TryAgainSecond);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CallGameRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasCallgameSecond) {
        CallgameSecond = other.CallgameSecond;
      }
      if (other.HasTryAgainSecond) {
        TryAgainSecond = other.TryAgainSecond;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Texas.Protocol.CallGameRetCode) input.ReadEnum();
            break;
          }
          case 16: {
            CallgameSecond = input.ReadInt32();
            break;
          }
          case 24: {
            TryAgainSecond = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Texas.Protocol.CallGameRetCode) input.ReadEnum();
            break;
          }
          case 16: {
            CallgameSecond = input.ReadInt32();
            break;
          }
          case 24: {
            TryAgainSecond = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///CallGame广播
  /// </summary>
  public sealed partial class CallGameBRC : pb::IMessage<CallGameBRC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CallGameBRC> _parser = new pb::MessageParser<CallGameBRC>(() => new CallGameBRC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CallGameBRC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CallGameBRC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CallGameBRC(CallGameBRC other) : this() {
      _hasBits0 = other._hasBits0;
      uid_ = other.uid_;
      userName_ = other.userName_;
      callgameSecond_ = other.callgameSecond_;
      roomType_ = other.roomType_;
      gameMode_ = other.gameMode_;
      tempid_ = other.tempid_;
      blind_ = other.blind_;
      minBuyin_ = other.minBuyin_;
      maxBuyin_ = other.maxBuyin_;
      showSecond_ = other.showSecond_;
      roomid_ = other.roomid_;
      roomName_ = other.roomName_;
      seatNum_ = other.seatNum_;
      roomMode_ = other.roomMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CallGameBRC Clone() {
      return new CallGameBRC(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private readonly static long UidDefaultValue = 0L;

    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Uid {
      get { if ((_hasBits0 & 1) != 0) { return uid_; } else { return UidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        uid_ = value;
      }
    }
    /// <summary>Gets whether the "uid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "uid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "user_name" field.</summary>
    public const int UserNameFieldNumber = 2;
    private readonly static string UserNameDefaultValue = "";

    private string userName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserName {
      get { return userName_ ?? UserNameDefaultValue; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "user_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserName {
      get { return userName_ != null; }
    }
    /// <summary>Clears the value of the "user_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserName() {
      userName_ = null;
    }

    /// <summary>Field number for the "callgame_second" field.</summary>
    public const int CallgameSecondFieldNumber = 3;
    private readonly static int CallgameSecondDefaultValue = 0;

    private int callgameSecond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CallgameSecond {
      get { if ((_hasBits0 & 2) != 0) { return callgameSecond_; } else { return CallgameSecondDefaultValue; } }
      set {
        _hasBits0 |= 2;
        callgameSecond_ = value;
      }
    }
    /// <summary>Gets whether the "callgame_second" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCallgameSecond {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "callgame_second" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCallgameSecond() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "room_type" field.</summary>
    public const int RoomTypeFieldNumber = 4;
    private readonly static global::Texas.Protocol.RoomType RoomTypeDefaultValue = global::Texas.Protocol.RoomType.TestRoom;

    private global::Texas.Protocol.RoomType roomType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomType RoomType {
      get { if ((_hasBits0 & 4) != 0) { return roomType_; } else { return RoomTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        roomType_ = value;
      }
    }
    /// <summary>Gets whether the "room_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "room_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "game_mode" field.</summary>
    public const int GameModeFieldNumber = 5;
    private readonly static global::Texas.Protocol.GameMode GameModeDefaultValue = global::Texas.Protocol.GameMode.Regular;

    private global::Texas.Protocol.GameMode gameMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.GameMode GameMode {
      get { if ((_hasBits0 & 8) != 0) { return gameMode_; } else { return GameModeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        gameMode_ = value;
      }
    }
    /// <summary>Gets whether the "game_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameMode {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "game_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameMode() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "tempid" field.</summary>
    public const int TempidFieldNumber = 6;
    private readonly static string TempidDefaultValue = "";

    private string tempid_;
    /// <summary>
    ///模板id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Tempid {
      get { return tempid_ ?? TempidDefaultValue; }
      set {
        tempid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "tempid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTempid {
      get { return tempid_ != null; }
    }
    /// <summary>Clears the value of the "tempid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTempid() {
      tempid_ = null;
    }

    /// <summary>Field number for the "blind" field.</summary>
    public const int BlindFieldNumber = 7;
    private readonly static long BlindDefaultValue = 0L;

    private long blind_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Blind {
      get { if ((_hasBits0 & 16) != 0) { return blind_; } else { return BlindDefaultValue; } }
      set {
        _hasBits0 |= 16;
        blind_ = value;
      }
    }
    /// <summary>Gets whether the "blind" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBlind {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "blind" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBlind() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "min_buyin" field.</summary>
    public const int MinBuyinFieldNumber = 8;
    private readonly static long MinBuyinDefaultValue = 0L;

    private long minBuyin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinBuyin {
      get { if ((_hasBits0 & 32) != 0) { return minBuyin_; } else { return MinBuyinDefaultValue; } }
      set {
        _hasBits0 |= 32;
        minBuyin_ = value;
      }
    }
    /// <summary>Gets whether the "min_buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinBuyin {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "min_buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinBuyin() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "max_buyin" field.</summary>
    public const int MaxBuyinFieldNumber = 9;
    private readonly static long MaxBuyinDefaultValue = 0L;

    private long maxBuyin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaxBuyin {
      get { if ((_hasBits0 & 64) != 0) { return maxBuyin_; } else { return MaxBuyinDefaultValue; } }
      set {
        _hasBits0 |= 64;
        maxBuyin_ = value;
      }
    }
    /// <summary>Gets whether the "max_buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxBuyin {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "max_buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxBuyin() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "show_second" field.</summary>
    public const int ShowSecondFieldNumber = 10;
    private readonly static int ShowSecondDefaultValue = 0;

    private int showSecond_;
    /// <summary>
    ///展示时长（秒）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ShowSecond {
      get { if ((_hasBits0 & 128) != 0) { return showSecond_; } else { return ShowSecondDefaultValue; } }
      set {
        _hasBits0 |= 128;
        showSecond_ = value;
      }
    }
    /// <summary>Gets whether the "show_second" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShowSecond {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "show_second" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShowSecond() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 11;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 256) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 256;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "room_name" field.</summary>
    public const int RoomNameFieldNumber = 12;
    private readonly static string RoomNameDefaultValue = "";

    private string roomName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RoomName {
      get { return roomName_ ?? RoomNameDefaultValue; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "room_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomName {
      get { return roomName_ != null; }
    }
    /// <summary>Clears the value of the "room_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomName() {
      roomName_ = null;
    }

    /// <summary>Field number for the "seat_num" field.</summary>
    public const int SeatNumFieldNumber = 13;
    private readonly static int SeatNumDefaultValue = 0;

    private int seatNum_;
    /// <summary>
    ///房间table座位数	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SeatNum {
      get { if ((_hasBits0 & 512) != 0) { return seatNum_; } else { return SeatNumDefaultValue; } }
      set {
        _hasBits0 |= 512;
        seatNum_ = value;
      }
    }
    /// <summary>Gets whether the "seat_num" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeatNum {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "seat_num" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeatNum() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "room_mode" field.</summary>
    public const int RoomModeFieldNumber = 14;
    private readonly static global::Texas.Protocol.RoomMode RoomModeDefaultValue = global::Texas.Protocol.RoomMode.None;

    private global::Texas.Protocol.RoomMode roomMode_;
    /// <summary>
    ///房间属性，如俱乐部/大厅
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Texas.Protocol.RoomMode RoomMode {
      get { if ((_hasBits0 & 1024) != 0) { return roomMode_; } else { return RoomModeDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        roomMode_ = value;
      }
    }
    /// <summary>Gets whether the "room_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomMode {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "room_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomMode() {
      _hasBits0 &= ~1024;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CallGameBRC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CallGameBRC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (UserName != other.UserName) return false;
      if (CallgameSecond != other.CallgameSecond) return false;
      if (RoomType != other.RoomType) return false;
      if (GameMode != other.GameMode) return false;
      if (Tempid != other.Tempid) return false;
      if (Blind != other.Blind) return false;
      if (MinBuyin != other.MinBuyin) return false;
      if (MaxBuyin != other.MaxBuyin) return false;
      if (ShowSecond != other.ShowSecond) return false;
      if (Roomid != other.Roomid) return false;
      if (RoomName != other.RoomName) return false;
      if (SeatNum != other.SeatNum) return false;
      if (RoomMode != other.RoomMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUid) hash ^= Uid.GetHashCode();
      if (HasUserName) hash ^= UserName.GetHashCode();
      if (HasCallgameSecond) hash ^= CallgameSecond.GetHashCode();
      if (HasRoomType) hash ^= RoomType.GetHashCode();
      if (HasGameMode) hash ^= GameMode.GetHashCode();
      if (HasTempid) hash ^= Tempid.GetHashCode();
      if (HasBlind) hash ^= Blind.GetHashCode();
      if (HasMinBuyin) hash ^= MinBuyin.GetHashCode();
      if (HasMaxBuyin) hash ^= MaxBuyin.GetHashCode();
      if (HasShowSecond) hash ^= ShowSecond.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (HasRoomName) hash ^= RoomName.GetHashCode();
      if (HasSeatNum) hash ^= SeatNum.GetHashCode();
      if (HasRoomMode) hash ^= RoomMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (HasUserName) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      if (HasCallgameSecond) {
        output.WriteRawTag(24);
        output.WriteInt32(CallgameSecond);
      }
      if (HasRoomType) {
        output.WriteRawTag(32);
        output.WriteEnum((int) RoomType);
      }
      if (HasGameMode) {
        output.WriteRawTag(40);
        output.WriteEnum((int) GameMode);
      }
      if (HasTempid) {
        output.WriteRawTag(50);
        output.WriteString(Tempid);
      }
      if (HasBlind) {
        output.WriteRawTag(56);
        output.WriteInt64(Blind);
      }
      if (HasMinBuyin) {
        output.WriteRawTag(64);
        output.WriteInt64(MinBuyin);
      }
      if (HasMaxBuyin) {
        output.WriteRawTag(72);
        output.WriteInt64(MaxBuyin);
      }
      if (HasShowSecond) {
        output.WriteRawTag(80);
        output.WriteInt32(ShowSecond);
      }
      if (HasRoomid) {
        output.WriteRawTag(88);
        output.WriteInt32(Roomid);
      }
      if (HasRoomName) {
        output.WriteRawTag(98);
        output.WriteString(RoomName);
      }
      if (HasSeatNum) {
        output.WriteRawTag(104);
        output.WriteInt32(SeatNum);
      }
      if (HasRoomMode) {
        output.WriteRawTag(112);
        output.WriteEnum((int) RoomMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUid) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (HasUserName) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      if (HasCallgameSecond) {
        output.WriteRawTag(24);
        output.WriteInt32(CallgameSecond);
      }
      if (HasRoomType) {
        output.WriteRawTag(32);
        output.WriteEnum((int) RoomType);
      }
      if (HasGameMode) {
        output.WriteRawTag(40);
        output.WriteEnum((int) GameMode);
      }
      if (HasTempid) {
        output.WriteRawTag(50);
        output.WriteString(Tempid);
      }
      if (HasBlind) {
        output.WriteRawTag(56);
        output.WriteInt64(Blind);
      }
      if (HasMinBuyin) {
        output.WriteRawTag(64);
        output.WriteInt64(MinBuyin);
      }
      if (HasMaxBuyin) {
        output.WriteRawTag(72);
        output.WriteInt64(MaxBuyin);
      }
      if (HasShowSecond) {
        output.WriteRawTag(80);
        output.WriteInt32(ShowSecond);
      }
      if (HasRoomid) {
        output.WriteRawTag(88);
        output.WriteInt32(Roomid);
      }
      if (HasRoomName) {
        output.WriteRawTag(98);
        output.WriteString(RoomName);
      }
      if (HasSeatNum) {
        output.WriteRawTag(104);
        output.WriteInt32(SeatNum);
      }
      if (HasRoomMode) {
        output.WriteRawTag(112);
        output.WriteEnum((int) RoomMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (HasUserName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (HasCallgameSecond) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CallgameSecond);
      }
      if (HasRoomType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomType);
      }
      if (HasGameMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
      }
      if (HasTempid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tempid);
      }
      if (HasBlind) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Blind);
      }
      if (HasMinBuyin) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinBuyin);
      }
      if (HasMaxBuyin) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxBuyin);
      }
      if (HasShowSecond) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShowSecond);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (HasRoomName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (HasSeatNum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SeatNum);
      }
      if (HasRoomMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CallGameBRC other) {
      if (other == null) {
        return;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasUserName) {
        UserName = other.UserName;
      }
      if (other.HasCallgameSecond) {
        CallgameSecond = other.CallgameSecond;
      }
      if (other.HasRoomType) {
        RoomType = other.RoomType;
      }
      if (other.HasGameMode) {
        GameMode = other.GameMode;
      }
      if (other.HasTempid) {
        Tempid = other.Tempid;
      }
      if (other.HasBlind) {
        Blind = other.Blind;
      }
      if (other.HasMinBuyin) {
        MinBuyin = other.MinBuyin;
      }
      if (other.HasMaxBuyin) {
        MaxBuyin = other.MaxBuyin;
      }
      if (other.HasShowSecond) {
        ShowSecond = other.ShowSecond;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      if (other.HasRoomName) {
        RoomName = other.RoomName;
      }
      if (other.HasSeatNum) {
        SeatNum = other.SeatNum;
      }
      if (other.HasRoomMode) {
        RoomMode = other.RoomMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 24: {
            CallgameSecond = input.ReadInt32();
            break;
          }
          case 32: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 40: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 50: {
            Tempid = input.ReadString();
            break;
          }
          case 56: {
            Blind = input.ReadInt64();
            break;
          }
          case 64: {
            MinBuyin = input.ReadInt64();
            break;
          }
          case 72: {
            MaxBuyin = input.ReadInt64();
            break;
          }
          case 80: {
            ShowSecond = input.ReadInt32();
            break;
          }
          case 88: {
            Roomid = input.ReadInt32();
            break;
          }
          case 98: {
            RoomName = input.ReadString();
            break;
          }
          case 104: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 112: {
            RoomMode = (global::Texas.Protocol.RoomMode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 24: {
            CallgameSecond = input.ReadInt32();
            break;
          }
          case 32: {
            RoomType = (global::Texas.Protocol.RoomType) input.ReadEnum();
            break;
          }
          case 40: {
            GameMode = (global::Texas.Protocol.GameMode) input.ReadEnum();
            break;
          }
          case 50: {
            Tempid = input.ReadString();
            break;
          }
          case 56: {
            Blind = input.ReadInt64();
            break;
          }
          case 64: {
            MinBuyin = input.ReadInt64();
            break;
          }
          case 72: {
            MaxBuyin = input.ReadInt64();
            break;
          }
          case 80: {
            ShowSecond = input.ReadInt32();
            break;
          }
          case 88: {
            Roomid = input.ReadInt32();
            break;
          }
          case 98: {
            RoomName = input.ReadString();
            break;
          }
          case 104: {
            SeatNum = input.ReadInt32();
            break;
          }
          case 112: {
            RoomMode = (global::Texas.Protocol.RoomMode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///CallGame信息
  /// </summary>
  public sealed partial class CallGameInfo : pb::IMessage<CallGameInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CallGameInfo> _parser = new pb::MessageParser<CallGameInfo>(() => new CallGameInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CallGameInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CallGameInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CallGameInfo(CallGameInfo other) : this() {
      _hasBits0 = other._hasBits0;
      bcallgame_ = other.bcallgame_;
      callgameSecond_ = other.callgameSecond_;
      remainSecond_ = other.remainSecond_;
      callgameCost_ = other.callgameCost_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CallGameInfo Clone() {
      return new CallGameInfo(this);
    }

    /// <summary>Field number for the "bcallgame" field.</summary>
    public const int BcallgameFieldNumber = 1;
    private readonly static bool BcallgameDefaultValue = false;

    private bool bcallgame_;
    /// <summary>
    ///true callgame中，false没有callgame
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Bcallgame {
      get { if ((_hasBits0 & 1) != 0) { return bcallgame_; } else { return BcallgameDefaultValue; } }
      set {
        _hasBits0 |= 1;
        bcallgame_ = value;
      }
    }
    /// <summary>Gets whether the "bcallgame" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBcallgame {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "bcallgame" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBcallgame() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "callgame_second" field.</summary>
    public const int CallgameSecondFieldNumber = 2;
    private readonly static int CallgameSecondDefaultValue = 0;

    private int callgameSecond_;
    /// <summary>
    ///callgame倒计时时长（秒）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CallgameSecond {
      get { if ((_hasBits0 & 2) != 0) { return callgameSecond_; } else { return CallgameSecondDefaultValue; } }
      set {
        _hasBits0 |= 2;
        callgameSecond_ = value;
      }
    }
    /// <summary>Gets whether the "callgame_second" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCallgameSecond {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "callgame_second" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCallgameSecond() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "remain_second" field.</summary>
    public const int RemainSecondFieldNumber = 3;
    private readonly static int RemainSecondDefaultValue = 0;

    private int remainSecond_;
    /// <summary>
    ///倒计时剩余时间（秒）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RemainSecond {
      get { if ((_hasBits0 & 4) != 0) { return remainSecond_; } else { return RemainSecondDefaultValue; } }
      set {
        _hasBits0 |= 4;
        remainSecond_ = value;
      }
    }
    /// <summary>Gets whether the "remain_second" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRemainSecond {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "remain_second" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRemainSecond() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "callgame_cost" field.</summary>
    public const int CallgameCostFieldNumber = 4;
    private readonly static long CallgameCostDefaultValue = 0L;

    private long callgameCost_;
    /// <summary>
    ///callgame消耗
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CallgameCost {
      get { if ((_hasBits0 & 8) != 0) { return callgameCost_; } else { return CallgameCostDefaultValue; } }
      set {
        _hasBits0 |= 8;
        callgameCost_ = value;
      }
    }
    /// <summary>Gets whether the "callgame_cost" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCallgameCost {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "callgame_cost" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCallgameCost() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CallGameInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CallGameInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bcallgame != other.Bcallgame) return false;
      if (CallgameSecond != other.CallgameSecond) return false;
      if (RemainSecond != other.RemainSecond) return false;
      if (CallgameCost != other.CallgameCost) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBcallgame) hash ^= Bcallgame.GetHashCode();
      if (HasCallgameSecond) hash ^= CallgameSecond.GetHashCode();
      if (HasRemainSecond) hash ^= RemainSecond.GetHashCode();
      if (HasCallgameCost) hash ^= CallgameCost.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBcallgame) {
        output.WriteRawTag(8);
        output.WriteBool(Bcallgame);
      }
      if (HasCallgameSecond) {
        output.WriteRawTag(16);
        output.WriteInt32(CallgameSecond);
      }
      if (HasRemainSecond) {
        output.WriteRawTag(24);
        output.WriteInt32(RemainSecond);
      }
      if (HasCallgameCost) {
        output.WriteRawTag(32);
        output.WriteInt64(CallgameCost);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBcallgame) {
        output.WriteRawTag(8);
        output.WriteBool(Bcallgame);
      }
      if (HasCallgameSecond) {
        output.WriteRawTag(16);
        output.WriteInt32(CallgameSecond);
      }
      if (HasRemainSecond) {
        output.WriteRawTag(24);
        output.WriteInt32(RemainSecond);
      }
      if (HasCallgameCost) {
        output.WriteRawTag(32);
        output.WriteInt64(CallgameCost);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBcallgame) {
        size += 1 + 1;
      }
      if (HasCallgameSecond) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CallgameSecond);
      }
      if (HasRemainSecond) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainSecond);
      }
      if (HasCallgameCost) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CallgameCost);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CallGameInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasBcallgame) {
        Bcallgame = other.Bcallgame;
      }
      if (other.HasCallgameSecond) {
        CallgameSecond = other.CallgameSecond;
      }
      if (other.HasRemainSecond) {
        RemainSecond = other.RemainSecond;
      }
      if (other.HasCallgameCost) {
        CallgameCost = other.CallgameCost;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Bcallgame = input.ReadBool();
            break;
          }
          case 16: {
            CallgameSecond = input.ReadInt32();
            break;
          }
          case 24: {
            RemainSecond = input.ReadInt32();
            break;
          }
          case 32: {
            CallgameCost = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Bcallgame = input.ReadBool();
            break;
          }
          case 16: {
            CallgameSecond = input.ReadInt32();
            break;
          }
          case 24: {
            RemainSecond = input.ReadInt32();
            break;
          }
          case 32: {
            CallgameCost = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///进入俱乐部下一个SNG(包括spinup)
  /// </summary>
  public sealed partial class EnterNextSngREQ : pb::IMessage<EnterNextSngREQ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EnterNextSngREQ> _parser = new pb::MessageParser<EnterNextSngREQ>(() => new EnterNextSngREQ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EnterNextSngREQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnterNextSngREQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnterNextSngREQ(EnterNextSngREQ other) : this() {
      _hasBits0 = other._hasBits0;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      roomtype_ = other.roomtype_;
      buyin_ = other.buyin_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnterNextSngREQ Clone() {
      return new EnterNextSngREQ(this);
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 1;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 1) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 2;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 2) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "roomtype" field.</summary>
    public const int RoomtypeFieldNumber = 3;
    private readonly static int RoomtypeDefaultValue = 0;

    private int roomtype_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomtype {
      get { if ((_hasBits0 & 4) != 0) { return roomtype_; } else { return RoomtypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        roomtype_ = value;
      }
    }
    /// <summary>Gets whether the "roomtype" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomtype {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "roomtype" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomtype() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "buyin" field.</summary>
    public const int BuyinFieldNumber = 4;
    private readonly static int BuyinDefaultValue = 0;

    private int buyin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Buyin {
      get { if ((_hasBits0 & 8) != 0) { return buyin_; } else { return BuyinDefaultValue; } }
      set {
        _hasBits0 |= 8;
        buyin_ = value;
      }
    }
    /// <summary>Gets whether the "buyin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBuyin {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "buyin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBuyin() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EnterNextSngREQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EnterNextSngREQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (Roomtype != other.Roomtype) return false;
      if (Buyin != other.Buyin) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasRoomtype) hash ^= Roomtype.GetHashCode();
      if (HasBuyin) hash ^= Buyin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClubid) {
        output.WriteRawTag(8);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasRoomtype) {
        output.WriteRawTag(24);
        output.WriteInt32(Roomtype);
      }
      if (HasBuyin) {
        output.WriteRawTag(32);
        output.WriteInt32(Buyin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClubid) {
        output.WriteRawTag(8);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(16);
        output.WriteInt32(Leagueid);
      }
      if (HasRoomtype) {
        output.WriteRawTag(24);
        output.WriteInt32(Roomtype);
      }
      if (HasBuyin) {
        output.WriteRawTag(32);
        output.WriteInt32(Buyin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasRoomtype) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomtype);
      }
      if (HasBuyin) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Buyin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EnterNextSngREQ other) {
      if (other == null) {
        return;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasRoomtype) {
        Roomtype = other.Roomtype;
      }
      if (other.HasBuyin) {
        Buyin = other.Buyin;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Clubid = input.ReadInt32();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            Roomtype = input.ReadInt32();
            break;
          }
          case 32: {
            Buyin = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Clubid = input.ReadInt32();
            break;
          }
          case 16: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 24: {
            Roomtype = input.ReadInt32();
            break;
          }
          case 32: {
            Buyin = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EnterNextSngRSP : pb::IMessage<EnterNextSngRSP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EnterNextSngRSP> _parser = new pb::MessageParser<EnterNextSngRSP>(() => new EnterNextSngRSP());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EnterNextSngRSP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Texas.Protocol.SngReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnterNextSngRSP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnterNextSngRSP(EnterNextSngRSP other) : this() {
      _hasBits0 = other._hasBits0;
      code_ = other.code_;
      clubid_ = other.clubid_;
      leagueid_ = other.leagueid_;
      roomid_ = other.roomid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnterNextSngRSP Clone() {
      return new EnterNextSngRSP(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static int CodeDefaultValue = 0;

    private int code_;
    /// <summary>
    ///0:成功   -1：没有相应牌桌 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Code {
      get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "clubid" field.</summary>
    public const int ClubidFieldNumber = 2;
    private readonly static int ClubidDefaultValue = 0;

    private int clubid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Clubid {
      get { if ((_hasBits0 & 2) != 0) { return clubid_; } else { return ClubidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        clubid_ = value;
      }
    }
    /// <summary>Gets whether the "clubid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClubid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "clubid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClubid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "leagueid" field.</summary>
    public const int LeagueidFieldNumber = 3;
    private readonly static int LeagueidDefaultValue = 0;

    private int leagueid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Leagueid {
      get { if ((_hasBits0 & 4) != 0) { return leagueid_; } else { return LeagueidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        leagueid_ = value;
      }
    }
    /// <summary>Gets whether the "leagueid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeagueid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "leagueid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeagueid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "roomid" field.</summary>
    public const int RoomidFieldNumber = 4;
    private readonly static int RoomidDefaultValue = 0;

    private int roomid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Roomid {
      get { if ((_hasBits0 & 8) != 0) { return roomid_; } else { return RoomidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        roomid_ = value;
      }
    }
    /// <summary>Gets whether the "roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoomid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoomid() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EnterNextSngRSP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EnterNextSngRSP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Clubid != other.Clubid) return false;
      if (Leagueid != other.Leagueid) return false;
      if (Roomid != other.Roomid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasClubid) hash ^= Clubid.GetHashCode();
      if (HasLeagueid) hash ^= Leagueid.GetHashCode();
      if (HasRoomid) hash ^= Roomid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasClubid) {
        output.WriteRawTag(16);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(24);
        output.WriteInt32(Leagueid);
      }
      if (HasRoomid) {
        output.WriteRawTag(32);
        output.WriteInt32(Roomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (HasClubid) {
        output.WriteRawTag(16);
        output.WriteInt32(Clubid);
      }
      if (HasLeagueid) {
        output.WriteRawTag(24);
        output.WriteInt32(Leagueid);
      }
      if (HasRoomid) {
        output.WriteRawTag(32);
        output.WriteInt32(Roomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (HasClubid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clubid);
      }
      if (HasLeagueid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Leagueid);
      }
      if (HasRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Roomid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EnterNextSngRSP other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasClubid) {
        Clubid = other.Clubid;
      }
      if (other.HasLeagueid) {
        Leagueid = other.Leagueid;
      }
      if (other.HasRoomid) {
        Roomid = other.Roomid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Clubid = input.ReadInt32();
            break;
          }
          case 24: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 32: {
            Roomid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Clubid = input.ReadInt32();
            break;
          }
          case 24: {
            Leagueid = input.ReadInt32();
            break;
          }
          case 32: {
            Roomid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
